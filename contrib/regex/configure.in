AC_INIT(regex.cc)
OZ_CONTRIB_INIT_CXX

AC_MSG_CHECKING([for --with-regex-inc])
AC_ARG_WITH(regex-inc,
  [--with-regex-inc=DIR where to find regex.h],
  [oz_cv_with_regex_inc=$withval],
  [: ${oz_cv_with_regex_inc=$oz_with_regex_inc}
   : ${oz_cv_with_regex_inc=NONE}])
AC_MSG_RESULT($oz_cv_with_regex_inc)

AC_MSG_CHECKING([for --with-regex-lib])
AC_ARG_WITH(regex-lib,
  [--with-regex-lib=DIR where to find libregex],
  [oz_cv_with_regex_lib=$withval],
  [: ${oz_cv_with_regex_lib=$oz_with_regex_lib}
   : ${oz_cv_with_regex_lib=NONE}])
AC_MSG_RESULT($oz_cv_with_regex_lib)

AC_MSG_CHECKING([for --with-regex-ldflags])
AC_ARG_WITH(regex-ldflags,
  [--with-regex-ldflags=LDFLAGS use thes flags for linking]
  [oz_cv_with_regex_ldflags=$withval],
  [: ${oz_cv_with_regex_ldflags=$oz_with_regex_ldflags}
   : ${oz_cv_with_regex_ldflags=NONE}])
AC_MSG_RESULT($oz_cv_with_regex_ldflags)
OZ_ADDTO_LDFLAGS($oz_cv_with_regex_ldflags)

oz_regex_found_inc=no
oz_regex_found_lib=no

dnl ------------------------------------------------------------------
dnl locate regex.h
dnl ------------------------------------------------------------------

oz_saved_inc_path=$oz_inc_path
if test "$oz_cv_with_regex_inc" != NONE; then
  oz_inc_path="$oz_cv_with_regex_inc${oz_inc_path:+ }$oz_inc_path"
fi
OZ_CHECK_HEADER_PATH(regex.h,oz_regex_found_inc=yes)
oz_inc_path=$oz_saved_inc_path

dnl ------------------------------------------------------------------
dnl check that it defines the right stuff
dnl ------------------------------------------------------------------

AC_CACHE_CHECK([for regex_t and regmatch_t],
  oz_cv_regex_header_ok,[
  AC_TRY_COMPILE([
#include <sys/types.h>
#include <regex.h>
],[
regex_t*r = new regex_t;
int n1 = r->re_nsub;
regmatch_t m;
int n2 = m.rm_so;
int n3 = m.rm_eo;
],  oz_cv_regex_header_ok=yes,
    oz_cv_regex_header_ok=no)])

test "$oz_cv_regex_header_ok" = no && unset oz_cv_regex_header_ok

dnl ------------------------------------------------------------------
dnl locate regex library
dnl ------------------------------------------------------------------

dnl if test "$oz_regex_found_inc" = yes && \
dnl    test "$oz_cv_regex_header_ok" = yes; then
dnl   oz_saved_lib_path=$oz_lib_path
dnl   if test -n "$oz_cv_with_regex_lib"; then
dnl     oz_lib_path="$oz_cv_with_regex_lib${oz_lib_path:+ }$oz_lib_path"
dnl   fi
dnl   OZ_CHECK_LIB_PATH(regex,regcomp,

dnl ------------------------------------------------------------------
dnl report informative error if necessary
dnl ------------------------------------------------------------------

if test "$oz_regex_found_inc" != yes; then
  AC_MSG_WARN([regex.h not found])
elif test "$oz_cv_regex_header_ok" != yes; then
  AC_MSG_WARN([regex.h does not define regex_t or regmatch_t as expected])
fi

if test "$oz_regex_found_inc" != yes ||
   test "$oz_cv_regex_header_ok" != yes; then
  AC_MSG_ERROR([
due to the above problem mozart/contrib/regex cannot be configured.
You may consider using the following options:

        --with-regex-inc=DIR    where to find regex.h
        --with-regex-lib=DIR    where to find the library
        --with-regex-ldflags=LDFLAGS    uses these flags for linking
        --disable-contrib-regex ignore regex contribution

We expect a POSIX compliant regex library.  You may retrieve such a
package from

        ftp://ftp.gnu.org/pub/gnu/

You may find a mirror archive closer to you by consulting:

        http://www.gnu.org/order/ftp.html
])
fi

AC_OUTPUT(Makefile)

errprint(ifdef([OZ_INIT],
 [autoconf succeeded.
],
 [autoconf failed: use 'autoconf -l ../..' to include ../aclocal.m4.
]))
