{"fdp_twice","FD.twice"},
{"fdp_square", "FD.square"},
{"fdp_plus", "FD.plus"},
{"fdp_minus", "FD.minus"},
{"fdp_times", "FD.times"},
{"fdp_divD", "FD.divD"},
{"fdp_divI", "FD.divI"},
{"fdp_modD", "FD.modD"},
{"fdp_modI", "FD.modI"},
{"fdp_power", "FD.power"},
{"fdp_conj", "FD.conj"},
{"fdp_disj", "FD.disj"},
{"fdp_exor", "FD.exor"},
{"fdp_impl", "FD.impl"},
{"fdp_equi", "FD.equi"},
{"fdp_nega", "FD.nega"},
{"fdp_sumCR", "FD.reified.sumC"},
{"fdp_intR", "FD.reified.int"},
{"fdp_card", "FD.reified.card"},
{"fdp_distinctD", "FD.distinctD"},
{"fdp_exactly", "FD.exactly"},
{"fdp_atLeast", "FD.atLeast"},
{"fdp_atMost", "FD.atMost"},
{"fdp_element", "FD.element"},
{"fdp_distinct2", "FD.distinct2"},
{"fdp_disjoint", "FD.disjoint"},
{"fdp_disjointC", "FD.disjointC"},
{"fdp_distance", "FD.distance"},
{"fdtest_sumac", "FD.fdtest_sumac"},
{"fdtest_spawnLess", "FD.fdtest_spawnLess"},
{"fdtest_counter", "FD.fdtest_counter"},
{"fdtest_firstFail", "FD.fdtest_firstFail"},
{"fdtest_plus", "FD.fdtest_plus"},
{"fdtest_gensum", "FD.fdtest_gensum"},
{"fdtest_sum", "FD.fdtest_sum"},
{"fdp_notEqOff", "FD.notEqOff"}, // \=:
{"fdp_lessEqOff", "FD.lessEqOff"},// =<:
{"fdp_minimum", "FD.minimum"},
{"fdp_maximum", "FD.maximum"},
{"fdp_inter", "FD.inter"},
{"fdp_union", "FD.union"},
{"fdp_distinct", "FD.distinct"},
{"fdp_distinctOffset", "FD.distinctOffset"},
{"fdp_subset", "FD.subset"},
{"fdp_distinctStream", "FD.distinctStream"},
{"fdp_sumC", "FD.sumC"},
{"fdp_sumCN", "FD.sumCN"},
{"fdp_sumAC", "FD.sumAC"},
{"fdp_dsum", "FD.sumD"},
{"fdp_dsumC", "FD.sumCD"},
{"sched_cumulativeTI", "Schedule.cumulativeTI"},
{"sched_taskIntervals", "Schedule.taskIntervals"},
{"sched_disjoint_card", "Schedule.disjoint_card"},
{"sched_cpIterate", "Schedule.cpIterate"},
{"sched_cpIterateCap", "Schedule.cpIterateCap"},
{"sched_cpIterateCapUp", "Schedule.cpIterateCapUp"},
{"sched_disjunctive", "Schedule.disjunctive"},
{"sched_taskIntervalsProof", "Schedule.taskIntervalsProof"},
{"sched_firstsLasts", "Schedule.firstsLasts"},
{"sched_disjunctiveStream", "Schedule.disjunctiveStream"},
{"fsp_min", "FS.int.min"},
{"fsp_max", "FS.int.max"},
{"fsp_convex", "FS.int.convex"},
{"fsp_match", "FS.int.match"},
{"fsp_minN", "FS.int.minN"},
{"fsp_maxN", "FS.int.maxN"},
{"fsp_seq", "FS.int.seq"},
{"fsp_monitorIn", "FS.monitorIn"},
{"fsp_isInR", "FS.reified.isIn"},
{"fsp_bounds", "FS.fsp_bounds"},
{"fsp_boundsN", "FS.fsp_boundsN"},
{"fsp_partitionReified", "FS.fsp_partitionReified"},
{"fsp_partitionReified1", "FS.fsp_partitionReified1"},
{"fsp_partitionProbing", "FS.fsp_partitionProbing"},
{"fsp_equalR", "FS.reified.equal"},
{"fsp_includeR", "FS.include.include"},
{"fsp_intersection", "FS.intersect"},
{"fsp_union", "FS.union"},
{"fsp_subsume", "FS.subsume"},
{"fsp_disjoint", "FS.disjoint"},
{"fsp_distinct", "FS.distinct"},
{"fsp_diff", "FS.diff"},
{"fsp_unionN", "FS.unionN"},
{"fsp_disjointN", "FS.disjointN"},
{"fsp_partition", "FS.partition"},
{"fsp_include", "FS.include"},
{"fsp_exclude", "FS.exclude"},
{"fsp_card", "FS.card"},
{"fsp_isIn", "FS.isIn"},

