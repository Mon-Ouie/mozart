dnl -*-sh-*-
AC_INIT(gdbm.cc)
OZ_CONTRIB_INIT_CXX
OZ_LIB_GMP

AC_MSG_CHECKING([for --with-gdbm-inc])
AC_ARG_WITH(gdbm-inc,
  [--with-gdbm-inc=DIR	where to find gdbm.h],
  [oz_cv_with_gdbm_inc=$withval],
  [: ${oz_cv_with_gdbm_inc=$oz_with_gdbm_inc}
   : ${oz_cv_with_gdbm_inc=NONE}])
AC_MSG_RESULT($oz_cv_with_gdbm_inc)

AC_MSG_CHECKING([for --with-gdbm-lib])
AC_ARG_WITH(gdbm-lib,
  [--with-gdbm-lib=DIR	where to find libgdbm],
  [oz_cv_with_gdbm_lib=$withval],
  [: ${oz_cv_with_gdbm_lib=$oz_with_gdbm_lib}
   : ${oz_cv_with_gdbm_lib=NONE}])
AC_MSG_RESULT($oz_cv_with_gdbm_lib)

oz_gdbm_found_inc=no
oz_gdbm_found_lib=no

dnl ------------------------------------------------------------------
dnl locate gdbm.h
dnl ------------------------------------------------------------------

oz_saved_inc_path=$oz_inc_path
oz_inc_path=["$oz_inc_path /usr/local/include /opt/gnu/include"]
if test "$oz_cv_with_gdbm_inc" != NONE; then
  oz_inc_path="$oz_cv_with_gdbm_inc $oz_inc_path"
fi
OZ_CHECK_HEADER_PATH(gdbm.h,oz_gdbm_found_inc=yes)
oz_inc_path=$oz_saved_inc_path

dnl ------------------------------------------------------------------
dnl locate libgdbm
dnl ------------------------------------------------------------------

if test "$oz_gdbm_found_inc" = yes; then
  oz_saved_lib_path=oz_lib_path
  oz_lib_path=["$oz_lib_path /usr/lib /usr/local/lib /opt/gnu/lib"]
  if test "$oz_cv_with_gdbm_lib" != NONE; then
    oz_lib_path="$oz_cv_with_gdbm_lib $oz_lib_path"
  fi
  OZ_CHECK_LIB_PATH(gdbm,gdbm_open,oz_gdbm_found_lib=yes)
  oz_lib_path=$oz_saved_lib_path
fi

dnl ------------------------------------------------------------------
dnl report informative error if necessary
dnl ------------------------------------------------------------------

if test "$oz_gdbm_found_inc" = no; then
  AC_MSG_WARN([gdbm.h not found])
elif test "$oz_gdbm_found_lib" = no; then
  AC_MSG_WARN([libgdbm not found])
fi

if test "$oz_gdbm_found_inc" = no || test "$oz_gdbm_found_lib" = no; then
  AC_MSG_ERROR([
due to the above problem mozart/contrib/gdbm cannot be configured.
You may consider using the following options:

	--with-gdbm-inc=DIR	where to find gdbm.h
	--with-gdbm-lib=DIR	where to find libgdbm
	--disable-contrib-gdbm	ignore gdbm contribution

GDBM is the GNU hashed database package.  It can be retrieved from

	ftp://ftp.gnu.org/pub/gnu/

You may find a mirror archive closer to you by consulting:

	http://www.gnu.org/order/ftp.html
])
fi

dnl my_cppflags="$CPPFLAGS"
dnl AC_MSG_CHECKING([for gdbm.h (default)])
dnl AC_TRY_CPP([#include "gdbm.h"],
dnl   AC_MSG_RESULT(yes),
dnl   AC_MSG_RESULT(no)
dnl   AC_MSG_CHECKING([[for gdbm.h (/usr/local/include)]])
dnl   CPPFLAGS="$my_cppflags -I/usr/local/include"
dnl   AC_TRY_CPP([[#include "gdbm.h"]],
dnl     AC_MSG_RESULT(yes),
dnl     AC_MSG_RESULT(no)
dnl     AC_MSG_CHECKING([[[for gdbm.h (/opt/gnu/include)]]])
dnl     CPPFLAGS="$my_cppflags -I/opt/gnu/include"
dnl     AC_TRY_CPP([[[#include "gdbm.h"]]],
dnl       AC_MSG_RESULT(yes),
dnl       AC_MSG_RESULT(no)
dnl    [[[echo 'could not find the gdbm.h header file.'
dnl       echo 'try setting the CPPFLAGS environment variable.'
dnl       echo 'if gdbm is not installed on your system, you can obtain'
dnl       echo 'it from http://www.gnu.org/']]]
dnl       AC_MSG_ERROR([gdbm.h header file not found]))))

dnl my_libs="$LIBS"
dnl LIBS="$LIBS -lgdbm -lc"
dnl AC_MSG_CHECKING([for gdbm library (default)])
dnl AC_TRY_LINK(,[gdbm_open()],
dnl   AC_MSG_RESULT(yes),
dnl   AC_MSG_RESULT(no)
dnl   LIBS="$my_libs -L/usr/lib -lgdbm -lc"
dnl   AC_MSG_CHECKING([[for gdbm library (/usr/lib)]])
dnl   AC_TRY_LINK(,[[gdbm_open()]],
dnl     AC_MSG_RESULT(yes),
dnl     AC_MSG_RESULT(no)
dnl     LIBS="$my_libs -L/usr/local/lib -lgdbm -lc"
dnl     AC_MSG_CHECKING([[[for gdbm library (/usr/local/lib)]]])
dnl     AC_TRY_LINK(,[[[gdbm_open()]]],
dnl       AC_MSG_RESULT(yes),
dnl       AC_MSG_RESULT(no)
dnl       LIBS="$my_libs -L/opt/gnu/lib -lgdbm -lc"
dnl       AC_MSG_CHECKING([[[[for gdbm library (/opt/gnu/lib)]]]])
dnl       AC_TRY_LINK(,[[[[gdbm_open()]]]],
dnl         AC_MSG_RESULT(yes),
dnl         AC_MSG_RESULT(no)
dnl      [[[echo 'could not find the gdbm library.'
dnl         echo 'try setting the LDFLAGS environment variable.'
dnl         echo 'if gdbm is not installed on your system you can obtain'
dnl         echo 'it from http://www.gnu.org/']]]
dnl         AC_MSG_ERROR([[[[[gdbm library not found]]]]])))))

dnl *****************************************************************
dnl platform
dnl this is needed for gdbm.dll 
dnl *****************************************************************

OZ_PATH_PROG(PLATFORMSCRIPT, ozplatform)

: ${platform=`$PLATFORMSCRIPT`}
AC_SUBST(platform)

AC_OUTPUT(Makefile)

errprint(ifdef([OZ_INIT],
 [autoconf succeeded.
],
 [autoconf failed: use 'autoconf -l ../..' to include ../aclocal.m4.
]))
