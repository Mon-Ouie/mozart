@SET_MAKE@
BUILDTOP	= @BUILDTOP@
SRCTOP		= @SRCTOP@
PREFIX		= @prefix@
SRCDIR          = @srcdir@
VPATH           = @srcdir@
PLATFORM	= @PLATFORM@
LIB_DIR		= $(PREFIX)/contrib/os
HOMEURL         = @HOMEURL@

DENYS_EVENTS=no
ifeq ($(DENYS_EVENTS),yes)
DENYS_CPPFLAGS	= -DDENYS_EVENTS
else
DENYS_CPPFLAGS	=
endif

OZC		= @OZC@
OZTOOL		= @OZTOOL@
CPPFLAGS	= -I$(SRCTOP)/platform/emulator \
		  -I$(BUILDTOP)/platform/emulator \
		  -I$(PREFIX)/include @CPPFLAGS@ $(DENYS_CPPFLAGS)
CXXFLAGS	= @CXXFLAGS@
LDFLAGS		= @LDFLAGS@
LIBS		= @LIBS@

INSTALL		= @INSTALL@
INSTALL_DIR	= @INSTALL_DIR@
INSTALL_LIB	= $(INSTALL) -m 444
INSTALL_DLL	= $(INSTALL) -m 555

FUNCTORS	= mode.ozf io.ozf process.ozf open.ozf
NATIVES		= io.so-$(PLATFORM) process.so-$(PLATFORM)

LIB_FUNCTORS	= $(addprefix $(LIB_DIR)/,$(FUNCTORS))
LIB_NATIVES	= $(addprefix $(LIB_DIR)/,$(NATIVES))

.PHONY: all install clean veryclean distclean bootstrap depend

all:		$(FUNCTORS) $(NATIVES)
install:	$(LIB_DIR) $(LIB_FUNCTORS) $(LIB_NATIVES)

$(LIB_DIR):
	$(INSTALL_DIR) $@

$(LIB_FUNCTORS): $(LIB_DIR)/% : %
	$(INSTALL_LIB) $< $@

$(LIB_NATIVES): $(LIB_DIR)/%.so-$(PLATFORM): %.so-$(PLATFORM)
	$(INSTALL_DLL) $< $@

%.ozf: %.oz
	$(OZC) -c $< -o $@

%.so-$(PLATFORM): %.o
	$(OZTOOL) ld $< -o $@ $(LDFLAGS) $(LIBS)

%.o: %.cc
	$(OZTOOL) c++ $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

clean veryclean:
	-$(RM) *~ *.ozf *.so-* *.o

distclean: veryclean
	-$(RM) config.* Makefile

include $(SRCTOP)/share/Makefile.boot

bootstrap: boot-all

#---------------------------------------------------------------------
# Automatic Makefile update
#---------------------------------------------------------------------

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck
