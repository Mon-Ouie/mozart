//** Introduction

The Distribution Panel

The Distribution Panel is a tool for monitoring the behavior of the distribution part of a Mozart engine. With its help it is possible to obtain a understanding of what is happening under the surface of your Mozart engine. It is useful to tune applications and detect unexpected behavior. To fully understand the information that the Distribution panel displays, good comprehension of the Mozart distribution model is required. See Seif and Peter's upcoming book.




//** Chapter 1

Usage

The Distribution Panel is started in the OPI by feeding the line

 {DistributionPanel.open}

This opens a window that displays different data on the distributed work done by the current emulator.

Keep in mind that producing and displaying the data is a memory consuming task. Do not use the Distribution Panel with too much load, or the behaviour of the entire emulator will be highly affected and the results will not be the same as without the Distribution Panel.

Understanding the output

The Distribution panel polls information at regular intervals. Some data is accumulative, e.g. Message exchange. For this data the number of events since the last poll is displayed. This is interpreted as events per sample period. Other data is transient, e.g. Last RTT. Here the last known value is plotted.

/* Make sample interval a parameter and define its default value. */

Since the distribution behavior is affected by the garbage collector a red vertical bar is inserted in all graphs when garbage collection occurs. This allows garbage collection related behaviour to be understood.

//** picture displaying the gc bar.


//** Chapter 1.1

Remote Communication

The Remote communication frame displays the status and history of any other Mozart sites that our site currently has references too. Each site is given a separate color. The same color is used in the graph windows.

As soon as distribution is initialized, there will be one site marked mine. That is a placeholder for the site representing the current emulator. The other sites present can be marked as follows:

connected(N): A connection is established and the last measured Round Trip Time to that site was N.
passive: A reference is present but the emulator is currently not connected to that site.
perm: That site is known to be permanently down.

Message exchange per sample period shows how many messages have been sent or received since the last poll for data.

Last RTT (ms) shows the last measured Round Trip Time at each poll for data. The RTT is defined as the time between when a message is transferred and its acknowledgement is received back. This value includes the network RTT as well as any delays due to ongoing local or remote computation.

///*** picture and describing arrows....

/** Chapter 1.2

Exported Entities

The Exported Entities frame shows all entities that the current site has currently exported to the other sites. Notice that entities exported by the Connection module do not show up as exported until they are taken by an other site.

Number of imported/exported Entities shows how many times a reference to any exported entity has been sent or received by this site.

Number of Entities shows how many entities are currently exported.

///*** picture and describing arrows....

/** Chapter 1.3

Imported Entities

The Imported Entities frame dipslays all entities currently imported to this site. The entities are coloured with their orgin sites colour(see 1.1).

///*** picture and describing arrows....

//** Chapter 1.4

Message Statistics

The Message Statistics frame shows the total number of sent and received messages per message type. The Message type is the internal type used by the Message Passing Layer and the entity protocolls.

///*** picture and describing arrows....

Description of the Message Types
