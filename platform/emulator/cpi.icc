/*
  Hydra Project, DFKI Saarbruecken,
  Stuhlsatzenhausweg 3, D-66123 Saarbruecken, Phone (+49) 681 302-5312
  Author: tmueller
  Last modified: $Date$ from $Author$
  Version: $Revision$
  State: $State$

  ------------------------------------------------------------------------
*/

#ifndef __CPI_ICC__
#define __CPI_ICC__

inline
void staticAddSpawnProp(OZ_FDPropState ps, OZ_Term * v)
{
  staticSpawnVarsProp[staticSpawnVarsNumberProp].state.fd = ps;
  staticSpawnVarsProp[staticSpawnVarsNumberProp].expected_type = FDVariable;
  staticSpawnVarsProp[staticSpawnVarsNumberProp++].var = v;

  Assert(staticSpawnVarsNumberProp < MAXFDBIARGS);
}

inline
void staticAddSpawn(OZ_FDPropState ps, OZ_Term * v)
{
  staticSpawnVars[staticSpawnVarsNumber].state.fd = ps;
  staticSpawnVars[staticSpawnVarsNumber].expected_type = FDVariable;
  staticSpawnVars[staticSpawnVarsNumber++].var = v;

  Assert(staticSpawnVarsNumber < MAXFDBIARGS);
}

inline
void * heap_new(size_t s)  // aligned to 8
{
  char * tmp = ctHeap;
  ctHeap += (s + (8 - (s & 7)));
  return tmp;
}

inline
void heap_delete(void *, size_t)
{
  // reserved for future extensions
}

inline
OZ_Boolean isPosSmallInt(OZ_Term v)
{
  return isSmallInt(v) && (smallIntValue(v) >= 0);
}

inline
OZ_Boolean isPosSmallFDInt(OZ_Term v)
{
  if (isSmallInt(v)) {
    int vv = smallIntValue(v);
    return (0 <= vv) && (vv <= fd_sup);
  }
  return OZ_FALSE;
}

inline
OZ_Boolean isPosSmallSetInt(OZ_Term v)
{
  if (isSmallInt(v)) {
    int vv = smallIntValue(v);
    return (0 <= vv) && (vv <= fset_sup);
  }
  return OZ_FALSE;
}

#endif /* __CPI_ICC__ */
