#  Authors:
#    Michael Mehl (mehl@dfki.de)
# 
#  Contributors:
#    optional, Contributor's name (Contributor's email address)
# 
#  Copyright:
#    Michael Mehl (mehl@dfki.de)
# 
#  Last change:
#    $Date$ by $Author$
#    $Revision$
# 
#  This file is part of Mozart, an implementation 
#  of Oz 3:
#     $MOZARTURL$
# 
#  See the file "LICENSE" or
#     $LICENSEURL$
#  for information on usage and redistribution 
#  of this file, and for a DISCLAIMER OF ALL 
#  WARRANTIES.

export

# Programs
SUBDIRS		= FDLib FSetLib
srcdir		= @srcdir@
VPATH		= @srcdir@
OZDIR		= @srcdir@
CURDIR		= .
SHELL		= @SH@
LEX		= @LEX@
LFLAGS		= -8
YACC		= @YACC@
YFLAGS		= -d
MV		= @MV@
SED		= @SED@
ECHO		= @@ECHO@
OZINCDIR	= $(srcdir)/../include
M4A		= -DOZINCDIR=$(OZINCDIR) -DOZSRCDIR=$(srcdir)
M4		= @M4@ $(M4A)
M4_S		= @M4_S@ $(M4A)
RM		= @RM@ -f
CXX		= @CXX@
LD		= @LD@
DYNLD		= @DYNLD@
RANLIB		= @RANLIB@
AR		= @AR@

INSTALL		= @INSTALL@
INSTALL_DIR	= $(INSTALL) -m 775 -d
INSTALL_BIN	= $(INSTALL) -m 555
INSTALL_OTHER   = $(INSTALL) -m 444
LIBS            = @LIBS@
LDFLAGS		= @LDFLAGS@

COPT		= @COPT@
DEFS		= @DEFS@
CWARN		= @CWARN@
INCS		= -I. -I$(srcdir) -I$(OZINCDIR)
CFLAGS		= $(COPT) $(DEFS) $(INCS) $(CWARN) $(CUSR)
CXXFLAGS	= $(CFLAGS)
DEPEND		= @DEPEND@ $(DEFS) $(INCS)

PROGRAMNAME	= @PROGRAMNAME@
TARGETS		= @TARGETS@

prefix		= @prefix@
platform	= @platform@
platformdir	= $(prefix)/platform
bindir		= $(platformdir)/$(platform)
incdir		= $(prefix)/include

INSTRDEFS 	= $(OZINCDIR)/instrDefs.m4

MOREWARNINGS  =   -Wall -pedantic-errors -W -Wtraditional -Wshadow \
	-Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align \
	-Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes \
	-Wmissing-prototypes -Wmissing-declarations -Wredundant-decls \
	-Wnested-externs -Winline -Woverloaded-virtual -Wsynth -Werror

CWARN = -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual \
	-Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations \
	-Wnested-externs -Wsynth -Wno-unused -Wno-reorder -Wno-uninitialized

ERRWARN = -Werr

WARNLINUXDEBUG = -W -Wswitch -Wreturn-type -Wparentheses -Wimplicit \
	/*-Wpointer-arithm*/ -Wconversion /*-Wshadow*/ -Wcast-align

CREATEDINCS = \
	$(CURDIR)/instrtab.hh\
	$(CURDIR)/opcodes.hh\
	$(CURDIR)/optostr.hh\
	$(CURDIR)/marshaler.hh\
	$(CURDIR)/marshalcode.cc\
	$(CURDIR)/marshalMsg.cc\
	$(CURDIR)/register.hh

CREATEDSRCS = \
	$(CURDIR)/scancode.cc\
	$(CURDIR)/opcodes.cc\
	$(CURDIR)/ozma-p.cc\
	$(CURDIR)/ozma-s.cc\
	$(CURDIR)/initffuns.cc\
	$(CURDIR)/scanner.cc\
	$(CURDIR)/parser.cc

CREATEDFILES = $(CREATEDINCS) $(CREATEDSRCS)

PEANUTSFILE = $(OZDIR)/peanuts.cc
PEANUTS = \
	$(OZDIR)/am.cc\
	$(OZDIR)/genvar.cc\
	$(OZDIR)/indexing.cc\
	$(OZDIR)/fdhook.cc\
	$(OZDIR)/taskstk.cc\
	$(OZDIR)/mem.cc\
	$(OZDIR)/assemble.cc\
	$(OZDIR)/error.cc\
	$(OZDIR)/fdprofil.cc\
	$(OZDIR)/statisti.cc\
	$(OZDIR)/fdgenvar.cc\
	$(OZDIR)/codearea.cc\
	$(OZDIR)/debug.cc\
	$(OZDIR)/lps.cc\
	$(OZDIR)/solve.cc\
	$(OZDIR)/variable.cc\
	$(OZDIR)/thrqueue.cc\
	$(OZDIR)/thrspool.cc\
	$(OZDIR)/avar.cc\
	$(OZDIR)/perdiovar.cc\
	$(OZDIR)/lazyvar.cc\
	$(OZDIR)/print.cc

CXXSRCS = \
	$(OZDIR)/actor.cc\
	$(OZDIR)/board.cc\
	$(OZDIR)/thread.cc\
	$(OZDIR)/dictionary.cc\
	$(OZDIR)/stack.cc\
	$(OZDIR)/susplist.cc\
	$(OZDIR)/cpbag.cc\
	$(OZDIR)/tagged.cc\
	$(OZDIR)/value.cc\
	$(OZDIR)/cont.cc\
	$(OZDIR)/config.cc\
	$(OZDIR)/trail.cc\
	$(OZDIR)/types.cc\
	$(OZDIR)/foreign.cc\
	$(OZDIR)/gc.cc\
	$(OZDIR)/compiler.cc\
	$(OZDIR)/ofgenvar.cc\
	$(OZDIR)/genhashtbl.cc\
	$(OZDIR)/ozostream.cc\
	$(OZDIR)/runtime.cc\
	$(OZDIR)/unix.cc\
	$(OZDIR)/tcl_tk.cc\
	$(OZDIR)/version.cc\
	$(OZDIR)/metavar.cc\
	$(OZDIR)/perdio.cc\
	$(OZDIR)/urlc.cc\
	$(OZDIR)/iso-ctype.cc\
	$(OZDIR)/hashtbl.cc\
	$(OZDIR)/os.cc\
	$(OZDIR)/emulate.cc\
	$(OZDIR)/builtins.cc\
	$(OZDIR)/components.cc\
	$(OZDIR)/network.cc\
	$(OZDIR)/virtual.cc\
	$(OZDIR)/comm.cc\
	$(OZDIR)/marshaler.cc\
	$(OZDIR)/liveness.cc

FDSRCS =\
	$(OZDIR)/fdbuilti.cc\
	$(OZDIR)/fdomn.cc\
	$(OZDIR)/fdcore.cc\
	$(OZDIR)/fdcd.cc\
	$(OZDIR)/fdbvar.cc\
	$(OZDIR)/fddist.cc 

CPISRCS =\
	$(OZDIR)/cpi.cc\
	$(OZDIR)/cpi_fd.cc\
	$(OZDIR)/cpi_prop.cc\
	$(OZDIR)/cpi_fs.cc\
	$(OZDIR)/cpi_expect.cc\
	$(OZDIR)/cpi_misc.cc\
	$(OZDIR)/cpi_stream.cc\
	$(OZDIR)/cpi_profile.cc

FSETSRCS =\
	$(OZDIR)/fset.cc\
	$(OZDIR)/fsetcore.cc\
	$(OZDIR)/fsgenvar.cc

SRCS = $(FDSRCS) $(FSETSRCS) $(CPISRCS) $(CXXSRCS) $(CREATEDSRCS) @PEANUTS@

OBJS = $(SRCS:.cc=.o)

.NOEXPORT: emulate.o $(PROGRAMNAME) peanuts.o

all: subdirs $(TARGETS)

subdirs:
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) all); done

win: ozlib.lnk $(CREATEDFILES)

win-install:
	$(INSTALL_BIN) ozemulator.exe $(bindir)

first: version $(CREATEDFILES) $(SRCS)

$(PROGRAMNAME): first main.o $(OBJS) $(PROPOBJS)
	$(LD) $(LDFLAGS) $(LDOPT) -o $@ \
	   main.o $(OBJS) $(PROPOBJS) $(LIBS)

install: install-dir install-bin install-inc
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) install); done

install-bin: $(TARGETS)
	$(INSTALL_BIN) $(TARGETS) $(bindir)

install-inc:
	$(INSTALL_OTHER) oz.h $(incdir)
	$(INSTALL_OTHER) oz_cpi.hh $(incdir)

install-dir:
	if test ! -d $(platformdir) ; then $(INSTALL_DIR) $(platformdir) ; fi
	if test ! -d $(bindir); then $(INSTALL_DIR) $(bindir) ; fi
	if test ! -d $(incdir); then $(INSTALL_DIR) $(incdir) ; fi

version.cc: version 

emulate.cc:: register.hh

initffuns.cc oz.c: oz.h
	$(srcdir)/makeffuns $(srcdir)

version:
	$(SED) -e "s/HEREGOESDATE/`date '+%a %h, %d, 19%y \(%T\)'`/" \
	     -e "s/OZPLATFORM/$(platform)/" \
	     $(srcdir)/version.sed > version.cc


depend: $(CREATEDFILES) $(SRCS)
	$(DEPEND) $(SRCS) >> Makefile
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) depend); done

$(M4FILES): $(INSTRDEFS)

tags:	$(M4FILES) version.cc
	etags --regex='/OZ_C[^(]+([ 	]*\([^ 	,)]+\)/\1/' -l c++ \
	*c *h */*c */*h

clean+:	clean
	$(RM) $(TARGETS)

clean:
	$(RM) *.o *~  *.bak *.obj gmon.out  fetchedInstr.dump verb_out.txt
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) clean); done

realclean: clean
	$(RM) version.cc scanner.cc parser.cc parser.hh $(TARGETS) \
		ozma-s.cc ozma-p.cc ozma.hh \
		ozlib.lnk *.exe *.map *.imp *.sym *.so \
		$(M4FILES) \
		oz.c initffuns.cc TAGS \
		conf.h Makefile config.cache config.log config.status
	for d in $(SUBDIRS); do (cd $$d; $(MAKE) realclean); done

veryclean: realclean

ozlib.lnk: oz.h
	grep FUNDECL oz.h | grep -v typedef | grep -v define | \
	sed -e 's/.*_FUNDECL(\([A-Za-z0-9_]*\).*/export _\1/' > $@

scanner.cc: scanner.ll
	$(LEX) $(LFLAGS) -Pxy -t $< > scanner.cc

parser.cc parser.hh: parser.yy
	$(YACC) $(YFLAGS) -p xy $<
	@$(MV) y.tab.c parser.cc
	@$(MV) y.tab.h parser.hh

# this special rule ensures that warnings issued in bison.simple
# are not treated as errors:
parser.o: parser.cc
	$(CXX) $(CXXFLAGS) -w -c $< -o $@

ozma-s.cc: ozma-s.ll
	$(LEX) $(LFLAGS) -Pozma -t $< > ozma-s.cc

ozma-p.cc ozma.hh: ozma-p.yy
	$(YACC) $(YFLAGS) -p ozma $<
	@$(MV) y.tab.c ozma-p.cc
	@$(MV) y.tab.h ozma.hh

ozma-p.o: ozma-p.cc
	$(CXX) $(CXXFLAGS) -w -c $< -o $@

ozma-s.ll: ozma-s.m4ll
	$(M4) $< > $@

ozma-p.yy: ozma-p.m4yy
	$(M4) $< > $@

#/usr/include/signal.h is broken on Linux:
#os.cc: In function `void osBlockSignals(int = 0)':
#os.cc:208: warning: assignment of negative value `-1' to `long unsigned int'
#os.o: os.cc
#	$(CXX) $(CXXFLAGS) -w -c $< -o $@

.SUFFIXES: .cc .m4cc .hh .m4hh .s .E .sed

.cc.s:
	$(CXX) $(CXXFLAGS) -S -o $@ $<

.cc.E:
	$(CXX) $(CXXFLAGS) -E -o $@ $<

.m4cc.cc:
	$(M4_S) $< > $@

.m4hh.hh:
	$(M4_S) $< > $@

