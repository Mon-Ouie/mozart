#  Authors:
#    Michael Mehl (mehl@dfki.de)
#
#  Contributors:
#    optional, Contributor's name (Contributor's email address)
#
#  Copyright:
#    Michael Mehl (mehl@dfki.de)
#
#  Last change:
#    $Date$ by $Author$
#    $Revision$
#
#  This file is part of Mozart, an implementation
#  of Oz 3:
#     $MOZARTURL$
#
#  See the file "LICENSE" or
#     $LICENSEURL$
#  for information on usage and redistribution
#  of this file, and for a DISCLAIMER OF ALL
#  WARRANTIES.


# Programs
srcdir          = @srcdir@
VPATH           = @srcdir@
SHELL           = @SH@
LEX             = @LEX@
LFLAGS          = -8
YACC            = @YACC@
YFLAGS          = -d
MV              = @MV@
SED             = @SED@
ECHO            = @@ECHO@
M4              = @M4@
M4_S            = @M4_S@
RM              = @RM@ -f
CXX             = @CXX@
LD              = @LD@
DYNLD           = @DYNLD@

INSTALL         = @INSTALL@
LIBS            = @LIBS@
LDFLAGS         = @LDFLAGS@

COPT            = @COPT@
DEFS            = @DEFS@
CWARN           = @CWARN@
CFLAGS          = $(COPT) $(DEFS) $(CWARN) $(CUSR)
CXXFLAGS        = $(CFLAGS)
DEPEND          = @DEPEND@ $(DEFS)

PROGRAMNAME     = @PROGRAMNAME@
TARGETS         = @TARGETS@

prefix          = @prefix@
platform        = @platform@
platformdir     = $(prefix)/platform
bindir          = $(platformdir)/$(platform)
incdir          = $(prefix)/include


MOREWARNINGS  =   -Wall -pedantic-errors -W -Wtraditional -Wshadow \
        -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align \
        -Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes \
        -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls \
        -Wnested-externs -Winline -Woverloaded-virtual -Wsynth -Werror

CWARN = -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual \
        -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations \
        -Wnested-externs -Wsynth -Wno-unused -Wno-reorder -Wno-uninitialized

ERRWARN = -Werr

WARNLINUXDEBUG = -W -Wswitch -Wreturn-type -Wparentheses -Wimplicit \
        /*-Wpointer-arithm*/ -Wconversion /*-Wshadow*/ -Wcast-align

INSTRDEFS = ../include/instrDefs.m4

M4FILES = \
        scancode.cc instrtab.hh opcodes.hh optostr.hh \
        register.hh opcodes.cc marshalcode.cc marshaler.hh \
        marshalMsg.cc

PEANUTS = \
        am.cc genvar.cc \
        indexing.cc fdhook.cc taskstk.cc mem.cc \
        assemble.cc error.cc fdprofil.cc \
        statisti.cc fdgenvar.cc \
        codearea.cc debug.cc lps.cc \
        solve.cc variable.cc thrqueue.cc thrspool.cc \
        avar.cc perdiovar.cc \
        lazyvar.cc print.cc

CXXSRCS = actor.cc board.cc thread.cc dictionary.cc stack.cc \
        susplist.cc cpbag.cc \
        tagged.cc value.cc cont.cc config.cc trail.cc types.cc \
        foreign.cc gc.cc compiler.cc ofgenvar.cc opcodes.cc \
        scancode.cc genhashtbl.cc ozostream.cc\
        scanner.cc parser.cc runtime.cc unix.cc tcl_tk.cc \
        version.cc metavar.cc perdio.cc initffuns.cc \
        urlc.cc iso-ctype.cc hashtbl.cc os.cc \
        emulate.cc builtins.cc \
        components.cc network.cc virtual.cc\
        comm.cc marshaler.cc ozma-s.cc ozma-p.cc \
        liveness.cc

FDSRCS =        fdbuilti.cc fdomn.cc fdcore.cc fdcd.cc \
                fdbvar.cc fddist.cc

CPISRCS =       cpi.cc cpi_fd.cc cpi_prop.cc cpi_fs.cc \
                cpi_expect.cc cpi_misc.cc cpi_stream.cc \
                cpi_profile.cc

FSETSRCS =      fset.cc fsetcore.cc fsgenvar.cc

SRCS = $(FDSRCS) $(FSETSRCS) $(CPISRCS) $(CXXSRCS) @PEANUTS@

OBJS = $(SRCS:.cc=.o)

FDDIR = $(srcdir)/FDLib

FDLIB = fdlib.so

FDLIBSRCS = $(FDDIR)/arith.cc $(FDDIR)/fdaux.cc $(FDDIR)/bool.cc \
            $(FDDIR)/card.cc $(FDDIR)/cd.cc $(FDDIR)/count.cc \
            $(FDDIR)/rel.cc $(FDDIR)/disjoint.cc $(FDDIR)/std.cc \
            $(FDDIR)/sum.cc $(FDDIR)/sumequal.cc \
            $(FDDIR)/distance.cc $(FDDIR)/misc.cc $(FDDIR)/streamProps.cc \
            $(FDDIR)/sumd.cc $(FDDIR)/sumabs.cc $(FDDIR)/complalldist.cc

FDLIBOBJS = $(FDLIBSRCS:.cc=.o)

SCHEDLIB = schedlib.so

SCHEDLIBSRCS = $(FDDIR)/scheduling.cc $(FDDIR)/schedulingDist.cc \
               $(FDDIR)/schedulingDistAux.cc $(FDDIR)/taskintervals.cc

SCHEDLIBOBJS = $(SCHEDLIBSRCS:.cc=.o)

FSETLIB = fdsetlib.so

FSETDIR = $(srcdir)/FSetLib

FSETLIBSRCS =   $(FSETDIR)/standard.cc $(FSETDIR)/telling.cc \
                $(FSETDIR)/testing.cc $(FSETDIR)/fsaux.cc \
                $(FSETDIR)/intsets.cc $(FSETDIR)/monitor.cc \
                $(FSETDIR)/reified.cc $(FSETDIR)/fsstd.cc \
                $(FSETDIR)/std_n.cc

FSETLIBOBJS = $(FSETLIBSRCS:.cc=.o)

ALLPROPOBJS = $(FDLIBOBJS) $(SCHEDLIBOBJS) $(FSETLIBOBJS)

PROPOBJS = @PROPOBJS@

.NOEXPORT: emulate.o $(PROGRAMNAME) peanuts.o

all:: $(TARGETS)

win:: ozlib.lnk $(M4FILES)

win-install::
        $(INSTALL) -m 775 ozemulator.exe $bindir

first: version $(M4FILES) $(SRCS)

$(FDLIB): $(FDLIBOBJS)
        $(DYNLD) -o $@ $(FDLIBOBJS)

$(SCHEDLIB): $(SCHEDLIBOBJS)
        $(DYNLD) -o $@ $(SCHEDLIBOBJS)

$(FSETLIB): $(FSETLIBOBJS)
        $(DYNLD) -o $@ $(FSETLIBOBJS)

$(PROGRAMNAME): first main.o $(OBJS) $(PROPOBJS)
        $(LD) $(LDFLAGS) $(LDOPT) -o /tmp/$@.$$$$ \
           main.o $(OBJS) $(PROPOBJS) $(LIBS); \
        echo 'moving ...'; mv /tmp/$@.$$$$ $@

install:: install-dir install-bin install-inc

install-bin: $(TARGETS)
        $(INSTALL) -m 555 $(TARGETS) $(bindir)

install-inc:
        $(INSTALL) -m 444 oz.h $(indir)
        $(INSTALL) -m 444 oz_cpi.hh $(incdir)

install-dir:
        $(INSTALL) -d $(platformdir)
        $(INSTALL) -d $(bindir)
        $(INSTALL) -d $(incdir)


version.cc: version

emulate.cc:: register.hh

initffuns.cc oz.c: oz.h
        ./makeffuns

version::
        $(SED) -e "s/HEREGOESDATE/`date '+%a %h, %d, 19%y \(%T\)'`/" \
             -e "s/OZPLATFORM/$(platform)/" \
             $(srcdir)/version.sed > version.cc


depend:: $(M4FILES) $(SRCS) $(FDLIBSRCS) $(SCHEDLIBSRCS) $(FSETLIBSRCS)
        $(DEPEND) $(SRCS) $(FDLIBSRCS) $(SCHEDLIBSRCS) $(FSETLIBSRCS) \
                >> Makefile

$(M4FILES): $(INSTRDEFS)

tags:   $(M4FILES) version.cc
        etags --regex='/OZ_C[^(]+([     ]*\([^  ,)]+\)/\1/' -l c++ \
        *c *h *//**/*c *//**/*h

clean+: clean
        $(RM) $(TARGETS)

clean::
        $(RM) *.o *~  *.bak *.obj gmon.out  fetchedInstr.dump verb_out.txt \
                $(FDLIBOBJS) $(SCHEDLIBOBJS) $(FSETLIBOBJS)

realclean::
        $(RM) version.cc scanner.cc parser.cc parser.hh $(TARGETS) \
                ozma-s.cc ozma-p.cc ozma.hh \
                ozlib.lnk *.exe *.map *.imp *.sym *.so \
                $(M4FILES) \
                oz.c initffuns.cc TAGS \
                conf.h Makefile config.cache \
                $(FDLIB) $(SCHEDLIB) $(FSETLIB)

veryclean:: realclean

# create a separate directory of links
# for compiling the emulator
linkdir:
        dir=../Emulator-$(platform); \
        mkdir $$dir; cd $$dir; \
        ln -s ../Emulator/version.sed \
              ../Emulator/?*c ../Emulator/?*h \
              ../Emulator/?*ll ../Emulator/?*yy \
              ../Emulator/configure ../Emulator/Makefile.in \
              ../Emulator/conf.h.in ../Emulator/?*.m4 \
              ../Emulator/Imakefile ../Emulator/makefuns \
           .; \
        mkdir $$dir/$(FDDIR); cd $$dir/$(FDDIR); \
        ln -s ../../Emulator/$(FDDIR)/?*c ../../Emulator/$(FDDIR)/?*h .; \
        mkdir ../$$dir/$(FSETDIR); cd ../$$dir/$(FSETDIR); \
        ln -s ../../Emulator/$(FSETDIR)/?*c ../../Emulator/$(FSETDIR)/?*h .;
        rm -f version.cc; make version



ozlib.lnk: oz.h
        grep FUNDECL oz.h | grep -v typedef | grep -v define | \
        sed -e 's/.*_FUNDECL(\([A-Za-z0-9_]*\).*/export _\1/' > $@

scanner.cc: scanner.ll
        $(LEX) $(LFLAGS) -Pxy -t scanner.ll > scanner.cc

parser.cc parser.hh: parser.yy
        $(YACC) $(YFLAGS) -p xy parser.yy
        @mv y.tab.c parser.cc
        @mv y.tab.h parser.hh

# this special rule ensures that warnings issued in bison.simple
# are not treated as errors:
parser.o: parser.cc
        $(CXX) $(CXXFLAGS) -w -c $< -o $@

ozma-s.cc: ozma-s.ll
        $(LEX) $(LFLAGS) -Pozma -t ozma-s.ll > ozma-s.cc

ozma-p.cc ozma.hh: ozma-p.yy
        $(YACC) $(YFLAGS) -p ozma ozma-p.yy
        @mv y.tab.c ozma-p.cc
        @mv y.tab.h ozma.hh

ozma-p.o: ozma-p.cc
        $(CXX) $(CXXFLAGS) -w -c $< -o $@

ozma-s.ll: ozma-s.m4ll
        $(M4) ozma-s.m4ll > $@

ozma-p.yy: ozma-p.m4yy
        $(M4) ozma-p.m4yy > $@

#/usr/include/signal.h is broken on Linux:
#os.cc: In function `void osBlockSignals(int = 0)':
#os.cc:208: warning: assignment of negative value `-1' to `long unsigned int'
#os.o: os.cc
#       $(CXX) $(CXXFLAGS) -w -c $< -o $@

.SUFFIXES: .cc .m4cc .hh .m4hh .s .E .sed

.cc.o:
        $(CXX) $(CXXFLAGS) -c -o /tmp/$$$$.o $< && mv /tmp/$$$$.o $@

.cc.s:
        $(CXX) $(CXXFLAGS) -S -o $@ $<

.cc.E:
        $(CXX) $(CXXFLAGS) -E -o $@ $<

.m4cc.cc:
        $(M4_S) $< > $@

.m4hh.hh:
        $(M4_S) $< > $@
