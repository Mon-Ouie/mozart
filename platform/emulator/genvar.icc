/*
  Hydra Project, DFKI Saarbruecken,
  Stuhlsatzenhausweg 3, D-66123 Saarbruecken, Phone (+49) 681 302-5312
  Author: tmueller
  Last modified: $Date$ from $Author$
  Version: $Revision$
  State: $State$

  ------------------------------------------------------------------------
*/

#ifndef __genvar_icc__
#define __genvar_icc__

#if defined(__GNUC__) && !defined(OUTLINE)
#pragma interface
#endif


inline
void GenCVariable::relinkSuspList(GenCVariable * leftVar)
{
  SuspList * sl = getSuspList();
  unlinkSuspList();
  leftVar->appendSuspList(sl);
}



inline
Bool GenCVariable::unify(TaggedRef * tptr1, TaggedRef term1, TypeOfTerm ttag1,
                         TaggedRef * tptr2, TaggedRef term2, TypeOfTerm ttag2)
{
  Assert(getType()==FDVariable);
  switch (getType()){
  default:
  case FDVariable:
    return ((GenFDVariable *)this)->unifyFD(tptr1, term1, ttag1,
                                            tptr2, term2, ttag2);
  }
  return NO;
}

inline
int GenCVariable::getSuspListLength(void)
{
  Assert(getType()==FDVariable);
  switch (getType()){
  case FDVariable:
  default:
    return ((GenFDVariable *)this)->getSuspListLength();
  }
  return -1;
}


inline
size_t GenCVariable::getSize(void)
{
  Assert(getType()==FDVariable);
  switch (getType()){
  case FDVariable:
  default:
    return ((GenFDVariable*)this)->getSize();
  }
  return 0;
}


inline
Bool GenCVariable::valid(TaggedRef val)
{
  Assert(getType()==FDVariable);
  switch (getType()){
  case FDVariable:
  default:
    return ((GenFDVariable*)this)->valid(val);
  }
}



#endif //__genvar_icc__
