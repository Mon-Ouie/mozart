/* -*- C++ -*-
 *  Authors:
 *    Per Brand (perbrand@sics.se)
 *    Erik Klintskog (erik@sics.se)
 *
 *  Contributors:
 *    optional, Contributor's name (Contributor's email address)
 *
 *  Copyright:
 *    Organization or Person (Year(s))
 *
 *  Last change:
 *    $Date$ by $Author$
 *    $Revision$
 *
 *  This file is part of Mozart, an implementation
 *  of Oz 3:
 *     http://mozart.ps.uni-sb.de
 *
 *  See the file "LICENSE" or
 *     http://mozart.ps.uni-sb.de/LICENSE.html
 *  for information on usage and redistribution
 *  of this file, and for a DISCLAIMER OF ALL
 *  WARRANTIES.
 *
 */

#include "base.hh"
#include "dpBase.hh"
#include "marshaler.hh"
#include "dpMarshaler.hh"

define(message,`
        void marshal_$1(MsgBuffer * buf,arg($2,$3)arg($3,$4) arg($4,$5) arg($5,$6) arg($6 $7)) {
        PD((MARSHAL_BE,"marshal begin %s  kind:%s","$1",buf->siteStringrep()));
        mess_counter[$1].send();
        buf->marshalBegin();
        buf->put($1);
        if(creditSiteOut==NULL) {
          PD((CREDIT,"Message carries primary creds"));
          buf->put(DIF_PRIMARY);}
        else {
          PD((CREDIT,"Message carries secondary creds %s",creditSiteOut->stringrep()));
          buf->put(DIF_SECONDARY);
          marshalDSite(creditSiteOut,buf);
          creditSiteOut=NULL;}
        argEnc($2)
        argEnc($3)
        argEnc($4)
        argEnc($5)
        argEnc($6)
        buf->marshalEnd();
        PD((MARSHAL_BE,"marshal end %s  kind:%s","$1",buf->siteStringrep()));
        return;}')


define(arg,`ifelse($1,Index,int i1,
                   $1,Index2,int i2,
                   $1,Index3,int i3,
                   $1,Term,TaggedRef t,
                   $1,String,char* str,
                   $1,Credit,Credit c,
                   $1,Object,Object* o,
                   $1,ObjectAndClass,Object* o,
                   $1,Site,DSite* s1,
                   $1,Site2,DSite* s2)'
            `ifelse($2,`',`',`,')')

define(argEnc,`ifelse($1,Index,marshalNumber(i1,buf);,
                   $1,Index2,marshalNumber(i2,buf);,
                   $1,Index3,marshalNumber(i3,buf);,
                   $1,String,marshalString(str,buf);,
                   $1,Credit,marshalCredit(c,buf);,
                   $1,Object,marshalFullObjectRT(o,buf);,
                   $1,ObjectAndClass,marshalFullObjectAndClassRT(o,buf);,
                   $1,Term,marshalTermRT(t,buf);,
                   $1,Site,marshalDSite(s1,buf);,
                   $1,Site2,marshalDSite(s2,buf);,)')

include(EMUDIR/msgFormat.m4)

undefine(`argEnc')
undefine(`arg')
undefine(`message')

define(message,`
        void unmarshal_$1(MsgBuffer* buf,arg($2,$3)arg($3,$4) arg($4,$5) arg($5,$6) arg($6 $7)) {
        PD((MARSHAL_BE,"unmarshal begin: %s s:%s","$1",buf->siteStringrep()));
        Assert(creditSiteIn==NULL);
        if(buf->get()==DIF_SECONDARY){
          creditSiteIn=unmarshalDSite(buf);
          PD((CREDIT,"Found sec creds %s",creditSiteIn->stringrep()));
        }
        argEnc($2)
        argEnc($3)
        argEnc($4)
        argEnc($5)
        argEnc($6)
        PD((MARSHAL_BE,"unmarshal end: %s s:%s","$1",buf->siteStringrep()));
        return;}')


define(arg,`ifelse($1,Index,int &i1,
                   $1,Index2,int &i2,
                   $1,Index3,int &i3,
                   $1,Term,TaggedRef &t,
                   $1,String,char* &str,
                   $1,Credit,Credit &c,
                   $1,Object,ObjectFields *o,
                   $1,ObjectAndClass,ObjectFields* o,
                   $1,Site,DSite* &s1,
                   $1,Site2,DSite* &s2)'
            `ifelse($2,`',`',`,')')

define(argEnc,`ifelse($1,Index,i1=unmarshalNumber(buf);,
                   $1,Index2,i2=unmarshalNumber(buf);,
                   $1,Index3,i3=unmarshalNumber(buf);,
                   $1,Term,t=unmarshalTermRT(buf);,
                   $1,Credit,c=unmarshalCredit(buf);,
                   $1,Object,unmarshalObjectRT(o,buf);,
                   $1,ObjectAndClass,unmarshalObjectAndClassRT(o,buf);,
                   $1,String,str=unmarshalString(buf);,
                   $1,Site,s1=unmarshalDSite(buf);,
                   $1,Site2,s2=unmarshalDSite(buf);,)')

include(EMUDIR/msgFormat.m4)

undefine(`argEnc')
undefine(`arg')
undefine(`message')

define(message,`
        void unmarshalUnsent_$1(MsgBuffer* buf arg($2,$3) arg($3,$4) arg($4,$5) arg($5,$6) arg($6 $7)) {
        PD((MARSHAL_BE,"unmarshal unsent msg begin %s  site:%s","$1",buf->siteStringrep()));
        refTable->reset();
        Assert(refTrail->isEmpty());
        Assert(creditSiteIn==NULL);
        if(buf->get()==DIF_SECONDARY){
          creditSiteIn==unmarshalDSite(buf); }
        argEnc($2)
        argEnc($3)
        argEnc($4)
        argEnc($5)
        argEnc($6)
        refTrail->unwind();
        PD((MARSHAL_BE,"unmarshal unsent msg end %s  site:%s","$1",buf->siteStringrep()));
        return;}')


define(arg,`ifelse($1,Index,,
                   $1,Index2,,
                   $1,Index3,,
                   $1,Term,,
                   $1,String,,
                   $1,Credit,`,Credit &c',
                   $1,Object,,
                   $1,ObjectAndClass,,
                   $1,Site,`,DSite* &s1',
                   $1,Site2,`,DSite* &s2')')

define(argEnc,`ifelse($1,Index,unmarshalUnsentNumber(buf);,
                   $1,Index2,unmarshalUnsentNumber(buf);,
                   $1,Index3,unmarshalUnsentNumber(buf);,
                   $1,Term,unmarshalUnsentTerm(buf);,
                   $1,String,unmarshalUnsentString(buf);,
                   $1,Object,unmarshalUnsentObject(buf);,
                   $1,ObjectAndClass,unmarshalUnsentObjectAndClass(buf);,
                   $1,Credit,c=unmarshalCredit(buf);,
                   $1,Site,s1=unmarshalDSite(buf);,
                   $1,Site2,s2=unmarshalDSite(buf);,)')

include(EMUDIR/msgFormat.m4)
