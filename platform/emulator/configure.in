dnl -*- sh -*-
dnl
dnl  Authors:
dnl    Michael Mehl (mehl@dfki.de)
dnl
dnl  Contributors:
dnl    optional, Contributor's name (Contributor's email address)
dnl
dnl  Copyright:
dnl    Michael Mehl (1997)
dnl
dnl  Last change:
dnl    $Date$ by $Author$
dnl    $Revision$
dnl
dnl  This file is part of Mozart, an implementation
dnl  of Oz 3:
dnl     $MOZARTURL$
dnl
dnl  See the file "LICENSE" or
dnl     $LICENSEURL$
dnl  for information on usage and redistribution
dnl  of this file, and for a DISCLAIMER OF ALL
dnl  WARRANTIES.
dnl

dnl Process this file with autoconf to produce a configure script.

dnl mm2: Known Problems and Bugs
dnl  SunPro feature
dnl  Warnings pedwarn
dnl  Windows support
dnl  pmake support
dnl  ensure that all needed programs are really found
dnl  make all options as orthogonal as possible and print a warning if
dnl   an option makes no sense (PGCC and debug)

dnl *****************************************************************
dnl INITIALIZE
dnl *****************************************************************

dnl This will check that we are in the Oz directory and initiate
AC_INIT(oz.h)

AC_CANONICAL_HOST

AC_LANG_CPLUSPLUS

if test -n "$OZHOME" && test -d "$OZHOME";
then
  ac_default_prefix=$OZHOME
fi


dnl *****************************************************************
dnl topdir
dnl *****************************************************************

srcdira=`(cd $srcdir; pwd)`
AC_SUBST(srcdira)

if test "x$TOPDIR" = x
then
    TOPDIR="$srcdir/.."
fi
TOPDIRA=`(cd $TOPDIR; pwd)`
AC_SUBST(TOPDIR)
AC_SUBST(TOPDIRA)

# set OZVERSION
. $TOPDIR/VERSION
AC_SUBST(OZVERSION)

dnl *****************************************************************
dnl windows cross compilation
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-wincross)
AC_ARG_ENABLE(wincross,
  [--enable-wincross  Windows cross compilation (default=no)])
if test "x$enable_wincross" = xyes; then
        AC_MSG_RESULT(yes (-DGNUWIN32 -DWINDOWS))
        WINCROSS="/project/ps/soft/cygwin-cross"
        CXX="$WINCROSS/bin/i386-cygwin32-gcc"
        CC="$CXX"
        LD="$WINCROSS/bin/i386-cygwin32-ld"
        RANLIB="$WINCROSS/bin/i386-cygwin32-ranlib"
        LDFLAGS="$LDFLAGS -L$WINCROSS/lib -L../winlibs"
        platform="win32-i486"
        PROGRAMNAME="ozemulator.exe"
        AC_DEFINE(GNUWIN32)
        AC_DEFINE(WINDOWS)
else
        AC_MSG_RESULT(no)
fi

dnl *****************************************************************
dnl Checks for programs.
dnl *****************************************************************

PATH=$TOPDIR/bin:$TOPDIR:$PATH

AC_MSG_CHECKING(for --with-pgcc)
AC_ARG_WITH(pgcc,
    [--with-pgcc        use pgcc compiler (default: yes, if --enable-opt)])

        if test "x$with_pgcc" = x
        then
            case $enable_opt in
                n*|d*)
                    AC_MSG_RESULT(no)
                    ;;
                *)
                    AC_MSG_RESULT(trying)
                    AC_CHECK_PROGS(PGXX, pg++)
                    if test -n "$PGXX"
                    then
                        CC=pgcc
                        CXX=$PGXX
                    fi
                    ;;
            esac
        else
        if test "x$with_pgcc" = xyes; then
            AC_MSG_RESULT(yes)
            AC_CHECK_PROGS(PGXX, pg++)
            if test -n "$PGXX"
            then
                CC=pgcc
                CXX=$PGXX
            else
                AC_MSG_WARN(Ingnoring --with-pgcc)
            fi
        else
            AC_MSG_RESULT(no)
        fi
        fi

AC_MSG_CHECKING(for --with-sunpro)
AC_ARG_WITH(sunpro,
    [--with-sunpro      use sunpro compiler (default: no)])
        if test "x$with_sunpro" = xyes; then
            AC_MSG_RESULT(yes)
            AC_CHECK_PROGS(SUNPRO, CC)
            if test -n "$SUNPRO"; then
                CC=cc
                CXX=$SUNPRO
            else
                AC_MSG_WARN(Ingnoring --with-sunpro!)
            fi
        else
            AC_MSG_RESULT(no)
        fi

AC_PROG_CC
AC_PROG_CXX

AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_CHECK_PROGS(M4, gm4 m4)
AC_CHECK_PROGS(RM, rm)
AC_CHECK_PROGS(SH, sh bash)
AC_CHECK_PROGS(MV, mv)
AC_CHECK_PROGS(ECHO, echo)
AC_CHECK_PROGS(SED, gnused sed)
AC_CHECK_PROGS(AR, ar)

AC_PATH_PROG(PLATFORMSCRIPT, ozplatform)
AC_PATH_PROG(DYNLD, ozdynld)

if test ! -n "$PLATFORMSCRIPT"
then
  AC_MSG_ERROR("required ozplatform script not found")
fi

M4_S="$M4"
AC_SUBST(M4_S)

AC_PATH_PROG(DEPEND, makedepend)

dnl *****************************************************************
dnl platform
dnl *****************************************************************

if test "x$platform" = x
then
    platform=`$PLATFORMSCRIPT`
fi
AC_SUBST(platform)

if test "x$PROGRAMNAME" = x
then
    PROGRAMNAME=oz.emulator.bin
fi
TARGETS="$PROGRAMNAME"
AC_SUBST(PROGRAMNAME)
AC_SUBST(TARGETS)

PLATFORM="`echo $platform|sed -e s/-/_/|tr a-z A-Z`"
AC_DEFINE_UNQUOTED($PLATFORM)
AC_SUBST(PLATFORM)

OS=`echo $PLATFORM|sed -e 's/.*_//'`
AC_DEFINE_UNQUOTED($OS)

ARCH=`echo $PLATFORM|sed -e 's/_.*//'`
AC_DEFINE_UNQUOTED($ARCH)

dnl *****************************************************************
dnl Compiler and Linker options
dnl *****************************************************************

if test "$ac_test_CFLAGS" != set; then
    CFLAGS=""
fi

AC_SUBST(CWARN)

O_OPT="-O"
G_OPT="-g"

dnl mm2: test for SunPro
if test "x$SUNPRO" != x; then
    O_OPT="-fast"
    DEPEND="$CXX -xM"
fi

if test "x$GXX" = xyes; then
    O_OPT="-O6"
    G_OPT="-g3 -DINTERFACE"
    M4_S="$M4 -s"
    DEPEND="$CXX -MM"
    CWARN="\$(WARNINGS)"
fi

case $platform in
    sunos*)
        ;;
    linux*)
        LDFLAGS="$LDFLAGS -Wl,-export-dynamic"
        ;;
    solaris*)
        ;;
    irix*)
        ;;
    osf1*)
        dnl dont change LDFLAGS, see machine.hh !!!
        LDFLAGS="$LDFLAGS -Wl,-D -Wl,0x30000000 -Wl,-T -Wl,0x20000000"
        ;;
    hpux*)
        ;;
esac

dnl *****************************************************************
dnl Checks for libraries.
dnl *****************************************************************

dnl Note: use $(CC) for linking, not $(CXX):
dnl g++ creates references to libg++
LD=$CXX
if test "x$GCC" = xyes
then
  LD="$CC"
fi
AC_SUBST(LD)

dnl Special hack for finding library directories
ps="$HOME/lib/$platform"
if test -n "$PSDIR"
then
    ps="$ps $PSDIR/lib/$platform"
fi
for p in $ps
do
  if test -d $p
  then
    AC_MSG_RESULT(using library dir $p)
    LDFLAGS="$LDFLAGS -L$p"
  fi
done

AC_CHECK_LIB(intl, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(m, main)
AC_CHECK_LIB(kernel32,main)
AC_CHECK_LIB(wsock32,main)
AC_CHECK_LIB(gmp, mpz_init, , AC_MSG_ERROR(required GNU MP lib not found))


# special hack for static linking under linux
case $platform in
    linux*)
        AC_MSG_CHECKING(for --enable-lstatic)
        AC_ARG_ENABLE(lstatic,
            [--enable-lstatic   linux static linking (default=yes)])
        if test "x$enable_lstatic" != xno; then
                AC_MSG_RESULT(yes)
                LIBS="-ldl -Xlinker -Bstatic $LIBS"
        else
                AC_MSG_RESULT(no)
                AC_CHECK_LIB(dl, dlopen)
        fi
    ;;
    *)
        AC_CHECK_LIB(dl, dlopen)
    ;;
esac

dnl *****************************************************************
dnl Checks for header files.
dnl *****************************************************************

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/time.h unistd.h)

dnl *****************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl *****************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl *****************************************************************
dnl Checks for library functions.
dnl *****************************************************************

AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname gettimeofday putenv select socket strdup strerror strstr strtod strtol strtoul uname)

dnl *****************************************************************
dnl *** Features
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-ozma)
AC_ARG_ENABLE(ozma,
    [--enable-ozma      add assembler (default=no)])
        if test "x$enable_ozma" = xyes; then
                AC_MSG_RESULT(yes (-DOZMA))
                AC_DEFINE(OZMA)
        else
                AC_MSG_RESULT(no)
        fi

AC_MSG_CHECKING(for --enable-opt)
AC_ARG_ENABLE(opt,
    [--enable-opt       optimize [y|n|d[ebug]|p[rofile]] (default=yes)])
case $enable_opt in
    n*)
        AC_MSG_RESULT(no)
        ;;
    d*)
        AC_MSG_RESULT(debug (-DDEBUG_EMULATOR))
        AC_DEFINE(DEBUG_EMULATOR)
        CFLAGS="$CFLAGS $G_OPT"
    ;;
    *)
        CFLAGS="$CFLAGS $O_OPT"
dnl ********************************
dnl OPTIMIZED EMULATOR
dnl ********************************
        case $enable_opt in
            p*)
                AC_MSG_RESULT(profile (-DPROFILE_EMULATOR))
                AC_DEFINE(PROFILE_EMULATOR)
                CFLAGS="$CFLAGS -pg"
                if test "x$GXX" = xyes; then
                    CFLAGS="$CFLAGS -fno-inline -fno-default-inline"
                fi
                LDFLAGS="$LDFLAGS -pg"
                ;;
            *)
                AC_MSG_RESULT(yes)
                case $platform in
                    linux*)
                        CFLAGS="$CFLAGS -fomit-frame-pointer"
                    ;;
                esac
                ;;
        esac
        AC_MSG_CHECKING(for   --enable-threaded)
        AC_ARG_ENABLE(threaded,
          [  --enable-threaded  threaded code emulator (default=yes)])
        if test "x$enable_threaded" != xno; then
                AC_MSG_RESULT(yes (-DTHREADED))
                AC_DEFINE(THREADED)
        else
                AC_MSG_RESULT(no)
        fi

        AC_MSG_CHECKING(for   --enable-fastreg)
        AC_ARG_ENABLE(fastreg,
          [  --enable-fastreg   fast register access (default=yes)])
        if test "x$enable_fastreg" != xno; then
                AC_MSG_RESULT(yes (-DFASTREGACCESS))
                AC_DEFINE(FASTREGACCESS)
        else
                AC_MSG_RESULT(no)
        fi
        AC_MSG_CHECKING(for   --enable-regopt)
        AC_ARG_ENABLE(regopt,
          [  --enable-regopt    register optimization (default=yes)])
        if test "x$enable_regopt" != xno; then
                AC_MSG_RESULT(yes (-DREGOPT))
                AC_DEFINE(REGOPT)
        else
                AC_MSG_RESULT(no)
        fi

        if test "x$platform" = xlinux-i486
        then
            if test -n "$PGXX"
            then
                CFLAGS="$CFLAGS -mpentium"
                CFLAGS="$CFLAGS -frisc -fno-rtti -Wno-sign-compare"
            else
                CFLAGS="$CFLAGS -m486"
                CFLAGS="$CFLAGS -malign-loops=4 -malign-jumps=4 -malign-functions=4"
            fi
        fi
    ;;
esac

AC_MSG_CHECKING(for --enable-linkprop)
AC_ARG_ENABLE(linkprop,
  [--enable-linkprop  link propagators statically (default=yes)])
if test "x$enable_linkprop" != xno; then
        AC_MSG_RESULT(yes (-UFOREIGNFDPROPS))
        FDTARGETS="libfd.a libsched.a"
        FSETTARGETS="libfset.a"
        LIBS="-L./FDLib -lfd -lsched -L./FSetLib -lfset $LIBS"
else
        FDTARGETS="fdlib.so schedlib.so"
        FSETTARGETS="fsetlib.so"
        INSTALL_PROP="install-prop"
        AC_MSG_RESULT(no (-DFOREIGNFDPROPS))
        AC_DEFINE(FOREIGNFDPROPS)
fi
AC_SUBST(FDTARGETS)
AC_SUBST(FSETTARGETS)
AC_SUBST(INSTALL_PROP)

AC_MSG_CHECKING(for --enable-peanuts)
AC_ARG_ENABLE(peanuts,
  [--enable-peanuts   use peanuts file (default=yes)])
if test "x$enable_peanuts" != xno; then
        AC_MSG_RESULT(yes)
        PEANUTS="\$(PEANUTSFILE)"
else
        AC_MSG_RESULT(no)
        PEANUTS="\$(PEANUTS)"
fi
AC_SUBST(PEANUTS)


dnl *****************************************************************
dnl malloc
dnl *****************************************************************

dnl rs: Have to use our own malloc/free: brain dead libc 5.12 returns
dnl both pointers in which top most bits are set and not set.
if test "x$platform" = xlinux-i486
then
    AC_MSG_CHECKING(if local gmalloc.o found)
    if test -r $PSDIR/lib/$platform/gmalloc.o
    then
        AC_MSG_RESULT(yes)
        LIBS="$LIBS $PSDIR/lib/$platform/gmalloc.o"
    else
        AC_MSG_RESULT(no)
    fi
fi

dnl *****************************************************************
dnl tmphack
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-tmphack)
AC_ARG_ENABLE(tmphack,
  [--enable-tmphack   link and compile in /tmp (default=no)])
if test "x$enable_tmphack" = xyes; then
        AC_MSG_RESULT(yes)
        tmphack_target=".cc.o"
        tmphack_programname="$PROGRAMNAME"
        PROGRAMNAME="$PROGRAMNAME.local"
        if test "x$tmphack_host" = x; then
            tmphack_host=localhost
        fi
else
        AC_MSG_RESULT(no)
        tmphack_target=".cc.oo"
        tmphack_programname="$PROGRAMNAME.tmp"
fi
AC_SUBST(tmphack_target)
AC_SUBST(tmphack_host)
AC_SUBST(tmphack_programname)

dnl *****************************************************************
dnl FINALIZATION SUPPORT
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-finalization)
AC_ARG_ENABLE(finalization,
  [--enable-finalization
                   provide support for finalization (default=yes)])
if test "x$enable_finalization" = xno; then
        AC_MSG_RESULT(no)
        AC_DEFINE(NOFINALIZATION)
else
        AC_MSG_RESULT(yes)
fi

dnl *****************************************************************
dnl FOREIGN POINTER SUPPORT
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-foreign-pointer)
AC_ARG_ENABLE(foreign-pointer,
  [--enable-foreign-pointer,
                   provide support for foreign pointers (default=yes)])
if test "x$enable_foreign_pointer" = xno; then
        AC_MSG_RESULT(no)
        AC_DEFINE(NOFOREIGN_POINTER)
else
        AC_MSG_RESULT(yes)
fi

dnl *****************************************************************
dnl FINALIZE
dnl *****************************************************************

AC_CONFIG_HEADER(conf.h)

AC_OUTPUT(Makefile.vars Makefile Makefile.rules FDLib/Makefile FSetLib/Makefile)
