dnl -*- sh -*-
dnl
dnl  Authors:
dnl    Michael Mehl (mehl@dfki.de)
dnl
dnl  Contributors:
dnl    optional, Contributor's name (Contributor's email address)
dnl
dnl  Copyright:
dnl    Michael Mehl (1997)
dnl
dnl  Last change:
dnl    $Date$ by $Author$
dnl    $Revision$
dnl
dnl  This file is part of Mozart, an implementation
dnl  of Oz 3:
dnl     $MOZARTURL$
dnl
dnl  See the file "LICENSE" or
dnl     $LICENSEURL$
dnl  for information on usage and redistribution
dnl  of this file, and for a DISCLAIMER OF ALL
dnl  WARRANTIES.
dnl

dnl Process this file with autoconf to produce a configure script.

dnl mm2: Known Problems and Bugs
dnl  SunPro feature
dnl  Warnings pedwarn
dnl  Windows support
dnl  PS-LAB: prefix and rcp/mv
dnl  VPATH
dnl  pmake support

if test -d $OZHOME
then
  ac_default_prefix=$OZHOME
fi

dnl *****************************************************************
dnl INITIALIZE
dnl *****************************************************************

dnl This will check that we are in the Oz directory and initiate
AC_INIT(oz.h)

AC_CANONICAL_HOST

AC_LANG_CPLUSPLUS

dnl *****************************************************************
dnl Checks for programs.
dnl *****************************************************************

AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_CHECK_PROGS(M4, gm4 m4)
AC_CHECK_PROGS(RM, rm)
AC_CHECK_PROGS(SH, sh bash)
AC_CHECK_PROGS(MV, mv)
AC_CHECK_PROGS(ECHO, echo true)
AC_CHECK_PROGS(SED, gnused sed)
AC_CHECK_PROGS(PGXX, pg++)
AC_CHECK_PROGS(AR, ar)

OZPATH=$PATH:../bin:../../bin
AC_PATH_PROG(PLATFORMSCRIPT, ozplatform, grummel, $OZPATH)
AC_PATH_PROG(DYNLD, ozdynld, grummel, $OZPATH)

M4_S="$M4"

AC_PATH_PROG(DEPEND, makedepend)

dnl *****************************************************************
dnl configurable variables
dnl *****************************************************************

dnl substitutions variable
AC_SUBST(PROPOBJS)
AC_SUBST(platform)
AC_SUBST(PLATFORM)
AC_SUBST(PEANUTS)
AC_SUBST(PROGRAMNAME)
AC_SUBST(TARGETS)
AC_SUBST(FDTARGETS)
AC_SUBST(INSTALLFDTARGETS)
AC_SUBST(COPT)
AC_SUBST(LD)
AC_SUBST(AR)
AC_SUBST(M4_S)
AC_SUBST(DEPEND)
AC_SUBST(DYNLD)

dnl *****************************************************************
dnl platform
dnl *****************************************************************

platform=`$PLATFORMSCRIPT`
PROGRAMNAME=oz.emulator.bin
TARGETS="$PROGRAMNAME"

PLATFORM="`echo $platform|sed -e s/-/_/|tr a-z A-Z`"
AC_DEFINE_UNQUOTED($PLATFORM)

OS=`echo $PLATFORM|sed -e 's/.*_//'`
AC_DEFINE_UNQUOTED($OS)

ARCH=`echo $PLATFORM|sed -e 's/_.*//'`
AC_DEFINE_UNQUOTED($ARCH)

dnl *****************************************************************
dnl Compiler and Linker options
dnl *****************************************************************

COPT="-O"
G_OPT="-g"

dnl mm2: test for SunPro
if test "x$SunPro" = xyes; then
    COPT="-fast"
    DEPEND="$CXX -xM"
fi

if test "x$GXX" = xyes; then
    COPT="-O6"
    G_OPT="-g3 -DINTERFACE"
    M4_S="$M4 -s"
    DEPEND="$CXX -MM"
fi

case $platform in
    sunos*)
        ;;
    linux*)
        LDFLAGS="$LDFLAGS -Wl,-export-dynamic"
        ;;
    solaris*)
        ;;
    irix*)
        ;;
    osf1*)
        dnl dont change LDFLAGS, see machine.hh !!!
        LDFLAGS="$LDFLAGS -Wl,-D -Wl,0x30000000 -Wl,-T -Wl,0x20000000"
        ;;
    hpux*)
        ;;
esac

dnl *****************************************************************
dnl Checks for libraries.
dnl *****************************************************************

dnl Note: use $(CC) for linking, not $(CXX):
dnl g++ creates references to libg++
LD=$CXX
if test "x$GCC" = xyes
then
  LD="$CC"
fi

AC_CHECK_LIB(intl, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(socket, main)
AC_CHECK_LIB(m, main)

dnl Special hack for our local configuration
ps="$HOME/lib/$platform $PSDIR/lib/$platform"
for p in $ps
do
  AC_MSG_CHECKING(for dir $p)
  if test -d $p
  then
    LDFLAGS="$LDFLAGS -L$p"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
done

AC_CHECK_LIB(gmp, mpz_init)


# special hack for static linking under linux
case $host_os in
    linux*)
        AC_MSG_CHECKING(for --enable-lstatic)
        AC_ARG_ENABLE(lstatic,
            [--enable-lstatic   linux static linking (default=yes)])
        if test "x$enable_lstatic" != xno; then
                AC_MSG_RESULT(yes)
                LIBS="-ldl -Xlinker -Bstatic $LIBS"
        else
                AC_MSG_RESULT(no)
                AC_CHECK_LIB(dl, dlopen)
        fi
    ;;
    *)
        AC_CHECK_LIB(dl, dlopen)
    ;;
esac

dnl *****************************************************************
dnl Checks for header files.
dnl *****************************************************************

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/time.h unistd.h)

dnl *****************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl *****************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl *****************************************************************
dnl Checks for library functions.
dnl *****************************************************************

AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname gettimeofday putenv select socket strdup strerror strstr strtod strtol strtoul uname)

dnl *****************************************************************
dnl *** Features
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-ozma)
AC_ARG_ENABLE(ozma,
    [--enable-ozma      add assembler (default=no)])
        if test "x$enable_ozma" = xyes; then
                AC_MSG_RESULT(yes)
                AC_DEFINE(OZMA)
        else
                AC_MSG_RESULT(no)
        fi

AC_MSG_CHECKING(for --enable-opt)
AC_ARG_ENABLE(opt,
    [--enable-opt       optimize [y|n|d[ebug]|p[rofile]] (default=yes)])
case $enable_opt in
    n*|d*)
        AC_MSG_RESULT(debug)
        AC_DEFINE(DEBUG_EMULATOR)
        AC_DEFINE(INTERFACE)
        COPT="$G_OPT"
    ;;
    *)
dnl ********************************
dnl OPTIMIZED EMULATOR
dnl ********************************
        case $enable_opt in
            p*)
                AC_MSG_RESULT(profile)
                AC_DEFINE(PROFILE_EMULATOR)
                COPT="$COPT -pg"
                if test "x$GXX" = xyes; then
                    COPT="$COPT -fno-inline -fno-default-inline"
                fi
                LDFLAGS="$LDFLAGS -pg"
                ;;
            *)
                AC_MSG_RESULT(yes)
                case $host_os in
                    linux*)
                        COPT="$COPT -fomit-frame-pointer"
                    ;;
                esac
                ;;
        esac
        AC_MSG_CHECKING(for   --enable-threaded)
        AC_ARG_ENABLE(threaded,
          [  --enable-threaded  threaded code emulator (default=yes)])
        if test "x$enable_threaded" != xno; then
                AC_MSG_RESULT(yes)
                AC_DEFINE(THREADED)
        else
                AC_MSG_RESULT(no)
        fi

        AC_MSG_CHECKING(for   --enable-fastreg)
        AC_ARG_ENABLE(fastreg,
          [  --enable-fastreg   fast register access (default=yes)])
        if test "x$enable_fastreg" != xno; then
                AC_MSG_RESULT(yes)
                AC_DEFINE(FASTREGACCESS)
        else
                AC_MSG_RESULT(no)
        fi
        AC_MSG_CHECKING(for   --enable-regopt)
        AC_ARG_ENABLE(regopt,
          [  --enable-regopt    register optimization (default=yes)])
        if test "x$enable_regopt" != xno; then
                AC_MSG_RESULT(yes)
                AC_DEFINE(REGOPT)
        else
                AC_MSG_RESULT(no)
        fi

        if test $PLATFORM = LINUX_I486
        then
          if test -n "$PGXX"; then
            AC_MSG_CHECKING(for   --with-pgcc)
            AC_ARG_WITH(pgcc,
                [  --with-pgcc       use pgcc compiler (if available)])
            if test "$with_pgcc" != xno; then
                AC_MSG_RESULT(yes)
                COPT="$COPT -frisc -fno-rtti -Wno-sign-compare -mpentium"
                CXX=$PGXX
            else
                AC_MSG_RESULT(no)
                COPT="$COPT -m486"
                COPT="$COPT -malign-loops=4 -malign-jumps=4"
                COPT="$COPT -malign-functions=4"
            fi
          fi
        fi
    ;;
esac


AC_MSG_CHECKING(for --enable-linkprop)
AC_ARG_ENABLE(linkprop,
  [--enable-linkprop  link propagators statically (default=yes)])
if test "x$enable_linkprop" != xno; then
        AC_MSG_RESULT(yes)
        FDTARGETS="libfd.a libsched.a libfset.a"
        LIBS="-L./FDLib -lfd -lsched -L./FSetLib -lfset $LIBS"
else
        FDTARGETS="fdlib.so schedlib.so fsetlib.so"
        INSTALLFDTARGETS="\$FDTARGETS"
        AC_DEFINE(FOREIGNFDPROPS)
        AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for --enable-peanuts)
AC_ARG_ENABLE(peanuts,
  [--enable-peanuts   use peanuts file (default=yes)])
if test "x$enable_peanuts" != xno; then
        AC_MSG_RESULT(yes)
        PEANUTS="\$(PEANUTSFILE)"
else
        AC_MSG_RESULT(no)
        PEANUTS="\$(PEANUTS)"
fi


dnl *****************************************************************
dnl malloc
dnl *****************************************************************

dnl rs: Have to use our own malloc/free: brain dead libc 5.12 returns
dnl both pointers in which top most bits are set and not set.
case $host_os in
    linux*)
        AC_MSG_CHECKING(for gmalloc)
        if test -r $PSDIR/lib/linux-i486/gmalloc.o
        then
            AC_MSG_RESULT(yes)
            LIBS="$LIBS $PSDIR/lib/linux-i486/gmalloc.o"
        else
            AC_MSG_RESULT(no)
        fi
        ;;
esac

dnl *****************************************************************
dnl FINALIZE
dnl *****************************************************************

AC_CONFIG_HEADER(conf.h)

AC_OUTPUT(Makefile FDLib/Makefile FSetLib/Makefile)
