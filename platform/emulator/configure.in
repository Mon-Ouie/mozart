dnl -*- sh -*-
dnl Process this file with autoconf to produce a configure script.
dnl
dnl  Authors:
dnl    Michael Mehl (mehl@dfki.de)
dnl 
dnl  Contributors:
dnl    optional, Contributor's name (Contributor's email address)
dnl 
dnl  Copyright:
dnl    Michael Mehl (1997)
dnl 
dnl  Last change:
dnl    $Date$ by $Author$
dnl    $Revision$
dnl 
dnl  This file is part of Mozart, an implementation 
dnl  of Oz 3:
dnl     $MOZARTURL$
dnl 
dnl  See the file "LICENSE" or
dnl     $LICENSEURL$
dnl  for information on usage and redistribution 
dnl  of this file, and for a DISCLAIMER OF ALL 
dnl  WARRANTIES.
dnl

dnl *****************************************************************
dnl INITIALIZE
dnl *****************************************************************

dnl This will check that we are in the Oz directory and initiate
AC_INIT(oz.h)

AC_CANONICAL_HOST

AC_LANG_CPLUSPLUS

dnl *****************************************************************
dnl Checks for programs.
dnl *****************************************************************

AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AC_PROG_LN_S
AC_PROG_MAKE_SET

AC_CHECK_PROGS(M4, gm4 m4)
AC_CHECK_PROGS(RM, rm)
AC_CHECK_PROGS(SH, sh bash)
AC_CHECK_PROGS(MV, mv)
AC_CHECK_PROGS(ECHO, echo true)
AC_CHECK_PROGS(SED, gnused sed)
AC_CHECK_PROGS(PGXX, pg++)

O_OPT="-O"
if test "x$GXX" = xyes; then
    O_OPT="-O6"
fi

dnl mm2: test for SunPro
if test "x$SunPro" = xyes; then
    O_OPT="-fast"
fi

G_OPT="-g"
if test "x$GXX" = xyes; then
    G_OPT="-g3"
fi

dnl *****************************************************************
dnl Checks for libraries.
dnl *****************************************************************

AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(intl, main)
AC_CHECK_LIB(nsl, main)
AC_CHECK_LIB(socket, main)

dnl *****************************************************************
dnl Checks for header files.
dnl *****************************************************************

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/time.h unistd.h)

dnl *****************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl *****************************************************************

AC_C_CONST
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl *****************************************************************
dnl Checks for library functions.
dnl *****************************************************************

AC_FUNC_ALLOCA
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd gethostname gettimeofday putenv select socket strdup strerror strstr strtod strtol strtoul uname)

dnl *****************************************************************
dnl Specific tests and substitutions
dnl *****************************************************************

dnl substitutions variable
AC_SUBST(PROPOBJ)
AC_SUBST(platform)
AC_SUBST(PLATFORM)
AC_SUBST(PEANUTS)
AC_SUBST(EMUEXE)
AC_SUBST(COPT)

dnl *****************************************************************
dnl platform
dnl *****************************************************************

platform=`../bin/ozplatform`

PLATFORM="`echo $platform|sed -e s/-/_/|tr a-z A-Z`"
AC_DEFINE_UNQUOTED($PLATFORM)

OS=`echo $PLATFORM|sed -e 's/.*_//'`
AC_DEFINE_UNQUOTED($OS)
echo $OS

ARCH=`echo $PLATFORM|sed -e 's/_.*//'`
AC_DEFINE_UNQUOTED($ARCH)
echo $ARCH

dnl *****************************************************************
dnl variables
dnl *****************************************************************

EMUEXE=oz.emulator.bin
psdir=/project/ps
libs="$psdir/lib/$platform $HOME/lib/$platform"

dnl *****************************************************************
dnl gmp library
dnl *****************************************************************

for p in $libs
do
  AC_MSG_CHECKING(for dir $p)
  if test -d $p
  then
    LDFLAGS="$LDFLAGS -L$p"
    AC_MSG_RESULT(yes)
  else
    AC_MSG_RESULT(no)
  fi
done

AC_CHECK_LIB(gmp, mpz_init)

dnl *****************************************************************
dnl *** Features
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-ozma)
AC_ARG_ENABLE(ozma,
    [--enable-ozma      add assembler (default=no)])
	if test "x$enable_ozma" = xyes; then
		AC_MSG_RESULT(yes)
		AC_DEFINE(OZMA)
	else
		AC_MSG_RESULT(no)
	fi

AC_MSG_CHECKING(for --enable-opt)
AC_ARG_ENABLE(opt,
    [--enable-opt       optimize [y|n|d[ebug]|p[rofile]] (default=yes)])
case $enable_opt in
    n*)
        AC_MSG_RESULT(no)
    ;;
    d*)
        AC_MSG_RESULT(debug)
	AC_DEFINE(DEBUG_EMULATOR)
	AC_DEFINE(INTERFACE)
	COPT=$G_OPT
    ;;
    p*)
        AC_MSG_RESULT(profile)
	AC_DEFINE(PROFILE_EMULATOR)
	COPT="-pg $O_OPT"
	LDFLAGS="-pg $LDFLAGS"
    ;;
    *)
        AC_MSG_RESULT(yes)
	COPT=$O_OPT
	case $host_os in
        	linux*)
			COPT="$COPT -fomit-frame-pointer"
	        ;;
	esac
	AC_MSG_CHECKING(for   --enable-threaded)
	AC_ARG_ENABLE(threaded,
	  [--enable-threaded  threaded code emulator (default=yes)])
	if test "x$enable_threaded" != xno; then
		AC_MSG_RESULT(yes)
		AC_DEFINE(THREADED)
	else
		AC_MSG_RESULT(no)
	fi
	
	AC_MSG_CHECKING(for   --enable-fastreg)
	AC_ARG_ENABLE(fastreg,
	  [--enable-fastreg   fast register access (default=yes)])
	if test "x$enable_fastreg" != xno; then
		AC_MSG_RESULT(yes)
		AC_DEFINE(FASTREGACCESS)
	else
		AC_MSG_RESULT(no)
	fi
	AC_MSG_CHECKING(for   --enable-regopt)
	AC_ARG_ENABLE(regopt,
	  [--enable-regopt    register optimization (default=yes)])
	if test "x$enable_regopt" != xno; then
		AC_MSG_RESULT(yes)
		AC_DEFINE(REGOPT)
	else
		AC_MSG_RESULT(no)
	fi

	if test $PLATFORM = LINUX_I486
	then
	  if test -n "$PGXX"; then
	    AC_MSG_CHECKING(for   --with-pgcc)
	    AC_ARG_WITH(pgcc,
		[--with-pgcc	   use pgcc compiler (if available)])
	    if test "$with_pgcc" != xno; then
	        AC_MSG_RESULT(yes)
		COPT="$O_OPT -frisc -fno-rtti -Wno-sign-compare -mpentium"
		CXX=$PGXX
	    else
		AC_MSG_RESULT(no)
		COPT="$COPT -m486"
		COPT="$COPT -malign-loops=4 -malign-jumps=4"
		COPT="$COPT -malign-functions=4"
	    fi
	  fi
	fi
    ;;
esac


AC_MSG_CHECKING(for --enable-linkprop)
AC_ARG_ENABLE(linkprop,
  [--enable-linkprop  link propagators statically (default=yes)])
if test "x$enable_linkprop" != xno; then
        AC_MSG_RESULT(yes)
	PROPOBJ="\$(PROPOBJ)"
else
	PROPOBJ=""
	AC_DEFINE(FOREIGNFDPROPS)
        AC_MSG_RESULT(no)
fi

AC_MSG_CHECKING(for --enable-peanuts)
AC_ARG_ENABLE(peanuts,
  [--enable-peanuts   use peanuts file (default=yes)])
if test "x$enable_peanuts" != xno; then
        AC_MSG_RESULT(yes)
	PEANUTS="peanuts.cc"
else
        AC_MSG_RESULT(no)
	PEANUTS="\$(PEANUTS)"
fi

dnl *****************************************************************
dnl Compiler selection
dnl *****************************************************************

AC_ARG_ENABLE(sun-pro,
	--enable-sun-pro   use the Sun Pro Compiler,
	AC_DEFINE(FASTREGACCESS)
	COPT="-fast")


dnl *****************************************************************
dnl FINALIZE
dnl *****************************************************************

AC_CONFIG_HEADER(conf.h)

AC_OUTPUT(Makefile)
