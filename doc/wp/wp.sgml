<!--
  Translated to SGML by:
     Daniel Simon, dansim@ps.uni-sb.de
     Andy Walter, anwalt@ps.uni-sb.de
-->

<!DOCTYPE Book SYSTEM "ozdoc.dtd" [

<!-- Extension to the DTD -->
<!ENTITY % proglang.values.local "|none|sh|tcl">
<!ENTITY % author.class "author|author.extern|comic">
<!ENTITY % picture.element "picture|picture.extern|picture.choice">
<!ELEMENT comic - O (%picture.element;)>

<!-- Include Files -->
<!ENTITY intro SYSTEM "intro.sgml">
<!ENTITY started SYSTEM "started.sgml">
<!ENTITY widgets-1 SYSTEM "widgets-1.sgml">
<!ENTITY geometry SYSTEM "geometry.sgml">
<!ENTITY widgets-2 SYSTEM "widgets-2.sgml">
<!ENTITY tools SYSTEM "tools.sgml">
<!ENTITY tkreference SYSTEM "tkreference.sgml">

<!-- Abbreviations -->
<!ENTITY lt "<">
<!ENTITY gt ">">
<!ENTITY Oz "Oz">
<!ENTITY amp "&">

<!-- Processing Instructions -->
<!ENTITY nbsp PI "nbsp">
<!ENTITY ellipsis PI "ellipsis">
<!ENTITY slash PI "slash">
<!ENTITY ie PI "ie">
<!ENTITY eg PI "eg">
<!ENTITY emdash PI "emdash">

]>

<Book proglang=oz>
  <Front>
    <Meta name="html.split" value="chapter.introduction">
    <Meta name="html.split" value="chapter.started">
    <Meta name="html.split" value="chapter.widgets-1">
    <Meta name="html.split" value="chapter.geometry">
    <Meta name="html.split" value="chapter.widgets-2">
    <Meta name="html.split" value="chapter.tools">
    <Meta name="html.split" value="chapter.tkreference">
    <Meta name="html.split.bib" value="">
    <Meta name="html.split.index" value="">

    <Meta name=ozversion value="3.0">
    <Meta name=status value=draft>
    <Meta name=latex.package value="pstricks">
    <Meta name=latex.package value="rotating">
    <Meta name=latex.package value="pifont">

    <Title/Window Programming/
      <Author.Extern to="author.db" key="Michael.Mehl"> 
      <Author.Extern to="author.db" key="Christian.Schulte"> 
    <Comic>
      <Picture.Choice>
	<Picture.Extern to="wp.gif" type=gif>
      </Picture.Choice>
    <Abstract>
      This paper describes how to do window programming in Mozart.  The Mozart
      window interface is based on the Tk toolkit which in turn is based on
      the script language Tcl.  It provides a high level abstraction of Tk
      widgets allowing for object-oriented and concurrent window programming.
      A generic translation scheme from &Oz; values to Tcl/Tk commands
      provides for minimality and flexibility on the &Oz; side.
    <P>
      The Tcl/Tk interface is implemented in &Oz; using the open programming
      facilities and is an example of how to connect an external and
      sequential agent to &Oz;.
    </Abstract>
  <Body>
    &intro;  
    &started;  
    &widgets-1; 
    &geometry;  
    &widgets-2;  
    &tools;  
</Book>
