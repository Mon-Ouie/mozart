<!--
  - Authors:
  -   Ralf Scheidhauer <Ralf.Scheidhauer@ps.uni-sb.de>
  -
  - Copyright:
  -   Ralf Scheidhauer, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -    http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<chapter id=chapter.tarball>
  <title/Unix Tarballs/
  <p>
        Installing Mozart is a very simple task; you can do without
        super-user privileges or special knowledge about system
        administration. A Mozart binary distribution configures itself
        on startup. Therefore installation of Mozart only consists in
        unpacking one or more archive file.
  <p>
    To install a binary Mozart release on a Unix system you only have to read
    this section, and optionally <ptr to=appendix.emacsunix> if you have not
    yet installed Emacs but want to develop Oz applications yourself.

  <p>
    A Mozart binary tarball release can be installed in any
    directory. There are no paths compiled into the binaries. The
    system configures itself on startup. In the following we explain
    the installation of Mozart into the directory
    <code display>/usr/local/mozart</code>
    Replace this string in the following if you want to install into a
    different directory.

  <p>
    After installation you should make your web browser Mozart
    application enabled, which is described in <ptr to="appendix.applets">.

  <p><list ENUM>
    <item>Download the binary tarballs for your particular platform
    from:
<Ref.Extern
to="http://www.mozart-oz.org/download/bintar.shtml"><file>http://www.mozart-oz.org/download/bintar.shtml</file></Ref.Extern>

    <item>
      Unpack the tarballs by executing
<code display>
% cd /usr/local
% gzip -cd mozart-?{version}-?{platform}.tar.gz | tar xvf -
% gzip -cd mozart-?{version}-?{platform}-contrib.tar.gz | tar xvf -
% gzip -cd mozart-?{version}-doc.tar.gz | tar xvf -
</code>
    <p>
      Replace ?{version} and ?{platform} appropriately. Depending on
      which packages you selected during download you may skip one
      or more of the last three commands. 

    <item>
        Do one of the following steps:
        
        <p><list enum>
          <item>
            If you are using <<csh>> or <<tcsh>> as your shell: extend
	    your <<$PATH>> environment variable: 
<code display>
setenv PATH ${PATH}:/usr/local/mozart/bin
</code>
          <p>
            You should add the above line to the your startup
	    file <file>~/.cshrc</file> (otherwise remote managers for
	    creation of new Oz engines will not work, see <ptr.extern
	    to="ozdoc:system" key="chapter.remote">.
 
          <item>
            If you are using a Bourne compatible shell like <<bash>>: extend
	    your <<$PATH>> environment variable: 
<code display>
export PATH=${PATH}:/usr/local/mozart/bin
</code>
          <p>
            You should add the above line to the your startup
	    file <file>~/.login</file> (otherwise remote managers for
	    creation of new Oz engines will not work, see <ptr.extern
	    to="ozdoc:system" key="chapter.remote">.
 
          <item> 
            Some people do not want to change each users <<$PATH>>
            variable, but prefer drawing links from a common bin
	    directory to the Mozart bin directory. In this case
	    however you have to edit 
<code display>
/usr/local/mozart/bin/oz
</code>
            slightly at the beginning: simply uncomment and adapt the
	    line  
<code display>
#OZHOME=/usr/local/mozart
</code>
appropriately. Then you can draw links like this:
<code display>
% cd /usr/local/bin
% ln -s /usr/local/mozart/bin/* .
</code>
        </list>
      <item>
        Make your Web browser Mozart enabled, see <ptr to="appendix.applets">.
    </list>

</chapter>
<!--
Local Variables:
mode: sgml
mode: auto-fill
sgml-default-dtd-file: "chapter.ced"
sgml-auto-activate-dtd: t
adaptive-fill-mode: nil
End:
-->
