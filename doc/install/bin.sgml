<!--
  - Authors:
  -   Ralf Scheidhauer <Ralf.Scheidhauer@ps.uni-sb.de>
  -
  - Copyright:
  -   Ralf Scheidhauer, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -    http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

  <chapter id=chapter.windows>
    <title>Microsoft Windows 9x/NT</title>

    <p>Installing Mozart needs to be done in two steps.

<list ENUM>
<item> You have to install GNU Emacs first.
<p>Download <Ref.Extern to="ftp://ftp.mozart-oz.org/pub/mozart/extras/emacs-20.4.1.exe">emacs-20.4.1.exe</Ref.Extern>,
execute it, and follow the instructions.
<p>
More information about  GNU Emacs for Windows can be found under
<Ref.Extern to="http://www.gnu.org/software/emacs/windows/ntemacs.html">
http://www.gnu.org/software/emacs/windows/ntemacs.html</Ref.Extern>.
<P>
<item> Afterwards you install Mozart. (If you upgrade to
a newer version of Mozart you only have to perform the second step.)
<p>
Get the self-extracting executable from the
<Ref.Extern to="http://www.mozart-oz.org/download/winarchive.shtml">download page</Ref.Extern>,
execute it, and follow the instructions.
</list>


</chapter>


<chapter id=chapter.unix>
  <title/Unix/

  <p>
    To install a binary Mozart release on a Unix system you only have
    to read <ptr to=sec.installunix> and optionally <ptr
    to=sec.emacsunix> if you have not yet installed Emacs but want to
    develop Oz applications yourself.
  </p>

  <section id=sec.installunix>
    <title/Installing a Binary Tarball/

    <p>
      A Mozart binary tarball release can be installed in any
      directory. There are no paths compiled into the binaries. The
      system configures itself on startup. In the following we explain
      the installation of Mozart into the directory
      <code display>/usr/local/mozart</code>
      Replace this string in the following if you want to install into a
      different directory.
    </p>

    <p>
      After installation you should make your web browser Mozart
      application enabled, which is described in <ptr to="applets">.
    </p>


    <p><list ENUM>
      <item>Download the binary tarballs for your particular platform
      from:
<Ref.Extern
to="http://www.mozart-oz.org/download/bintar.shtml"><file>http://www.mozart-oz.org/download/bintar.shtml</file></Ref.Extern>

      <item>
        Unpack the tarballs by executing
<code display>
% cd /usr/local
% gzip -cd mozart-?{version}-?{platform}.tar.gz | tar xvf -
% gzip -cd mozart-?{version}-?{platform}-contrib.tar.gz | tar xvf -
% gzip -cd mozart-?{version}-doc.tar.gz | tar xvf -
</code>
      <p>
        Replace ?{version} and ?{platform} appropriately. Depending on
        which packages you selected during download you may skip one
        or more of the last three commands.

      <item>
        Do one of the following steps:

        <p><list enum>
          <item>
            If you are using <<csh>> or <<tcsh>> as your shell: extend
            your <<$PATH>> environment variable:
<code display>
setenv PATH ${PATH}:/usr/local/mozart/bin
</code>
          <p>
            You should add the above line to the your startup
            file <file>~/.cshrc</file> (otherwise remote managers for
            creation of new Oz engines will not work, see <ptr.extern
            to="ozdoc:system" key="chapter.remote">.

          <item>
            If you are using a Bourne compatible shell like <<bash>>: extend
            your <<$PATH>> environment variable:
<code display>
export PATH=${PATH}:/usr/local/mozart/bin
</code>
          <p>
            You should add the above line to the your startup
            file <file>~/.login</file> (otherwise remote managers for
            creation of new Oz engines will not work, see <ptr.extern
            to="ozdoc:system" key="chapter.remote">.

          <item>
            Some people do not want to change each users <<$PATH>>
            variable, but prefer drawing links from a common bin
            directory to the Mozart bin directory. In this case
            however you have to edit
<code display>
/usr/local/mozart/bin/oz
</code>
            slightly at the beginning: simply uncomment and adapt the
            line
<code display>
#OZHOME=/usr/local/mozart
</code>
appropriately. Then you can draw links like this:
<code display>
% cd /usr/local/bin
% ln -s /usr/local/mozart/bin/* .
</code>
        </list>
      <item>
        Make your Web browser Mozart enabled, see <ptr to="applets">.
    </list>

  </section>

  <section id=sec.emacsunix>
    <title/Getting a Unix version of Emacs/

    <p>
      The Oz Programming Interface (OPI) is based on the Emacs
      editor. You can either use GNU Emacs version 19.28 or better
      which is available from:

<Ref.Extern to="http://www.gnu.org/software/emacs/emacs.html">
<file>http://www.gnu.org/software/emacs/emacs.html</file></Ref.Extern>

    <p>
      Oz also runs with XEmacs version 19.14 or higher, which is
      available from:

<Ref.Extern to="http://www.xemacs.org"><file>http://www.xemacs.org</file></Ref.Extern>
<p>

    <p>
      For the inexperienced user we recommend using XEmacs, since it
      is distributed in binary form which simplifies
      installation. When the Oz programming environment starts, it
      tries to invoke Emacs via the command <code/emacs/. If your
      version of Emacs has to be invoked with a different command
      name, say <code/emacs20/, you can achieve this by setting the
      environment variable <code/OZEMACS/ as in
<code display>
setenv OZEMACS emacs20
</code>
      or
<code display>
export OZEMACS=emacs20
</code>
      depending on your shell.
    </section>

</chapter>
<!--
Local Variables:
mode: sgml
mode: auto-fill
sgml-default-dtd-file: "chapter.ced"
sgml-auto-activate-dtd: t
adaptive-fill-mode: nil
End:
-->
