<!--
  - Authors:
  -   Thorsten Brunklaus  <brunklaus@ps.uni-sb.de>
  -   Leif Kornstaedt <kornstae@ps.uni-sb.de>
  -
  - Copyright:
  -   Thorsten Brunklaus, 2001
  -   Leif Kornstaedt, 2001
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation of Oz 3:
  -   http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -   http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<Chapter id="chapter.reference">
  <Title/API Reference/
  <P>
    This chapter describes functions specific to the binding.
  <Section><Title/String Arrays/
  <P>
  <List>
    <Entry><<makeStrArr>>
    <Synopsis>
      <<{GTK.makeStrArr ?_{Ss}}>>
    <Item>
      convertes the virtual string list ?_{Ss} to an string array.
    <Entry><<getStrArr>>
    <Synopsis>
      <<{GTK.getStrArr ?_{A}}>>
    <Item>
      convertes the string array ?_{A} to a virtual string list.
  </List>
  <Section><Title/GtkArg Handling/
  <P>
  <List>
    <Entry><<makeArg>>
    <Synopsis>
      <<{GTK.makeArg ?_{N} ?_{V}}>>
    <Item>
      creates a fresh GtkArg structure
      with the name field set to ?_{N} and the value denoted by ?_{V}.
      The function recognizes values of type int, float, bool, string
      and foreign pointer.
    <Entry><<getArg>>
    <Synopsis>
      <<{GTK.getArg ?_{A}}>>
    <Item>
      retrieves the stored value from ?_{A}.
    <Entry><<freeArg>>
    <Synopsis>
      <<{GTK.freeArg ?_{A}}>>
    <Item>
      deallocates the given ?_{A} GtkArg structure. Note that
      ?_{A} must have been allocated with <<GTK.makeArg>>.
  </List>
</Chapter>
