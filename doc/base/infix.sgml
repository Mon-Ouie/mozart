<!--
  Translated to SGML by:
     Daniel Simon, dansim@ps.uni-sb.de
     Leif Kornstaedt, kornstae@ps.uni-sb.de
-->

<Chapter id="chapter.infix">
  <Title/Infix Notations/
  <P>
    The &Oz; Notation <!--** reference --> supports infix and prefix notation
    for very common procedures.
  <P>
    In the following table, we give the prefix and infix notations and the
    corresponding expansions.  The operators are grouped together according
    to their precedence.  Members of the same group have the same precedence,
    groups further up have lower precedence than groups further down.
    <Q/Having higher precedence/ means <Q/binding tighter/; &eg;, the term
    <<X.Y + Z>> is equal to <<(X.Y) + Z>>.  Ambiguities within each group
    are resolved by the associativity given before each group (&eg;,
    <<X - Y + Z>> is equivalent to <<(X - Y) + Z>>).
    <Table>
      <TR/<TH/Infix/<TH/Normal//
      <TR/<TD colspan=2/right-associative//
      <TR/<TD/<<?_{X} = ?_{Y}>>/<TD/<<{Value.'=' X Y}>>//
      <TR/<TD colspan=2/right-associative//
      <TR/<TD/<<?+{LI} <- ?_{X}>>/<TD/<<{Object.'<-' LI X}>>//
      <TR/<TD/<<?_{Y} = ?+{LI} <- ?_{X}>>/<TD/<<{Object.exchange LI X Y}>>//
      <TR/<TD colspan=2/non-associative//
      <TR/<TD/<<??{B} = ?_{X} == ?_{Y}>>/<TD/<<{Value.'==' X Y B}>>//
      <TR/<TD/<<??{B} = ?_{X} \= ?_{Y}>>/<TD/<<{Value.'\\=' X Y B}>>//
      <TR/<TD/<<??{B} = ?+{AIF1} &lt; ?+{AIF2}>>/
	<TD/<<{Value.'&lt' AIF1 AIF2 B}>>//
      <TR/<TD/<<??{B} = ?+{AIF1} =&lt; ?+{AIF2}>>/
	<TD/<<{Value.'=&lt;' AIF1 AIF2 B}>>//
      <TR/<TD/<<??{B} = ?+{AIF1} > ?+{AIF2}>>/
	<TD/<<{Value.'>' AIF1 AIF2 B}>>//
      <TR/<TD/<<??{B} = ?+{AIF1} >= ?+{AIF2}>>/
	<TD/<<{Value.'>=' AIF1 AIF2 B}>>//
      <TR/<TD colspan=2/left-associative//
      <TR/<TD/<<??{FI3} = ?+{FI1} + ?+{FI2}>>/
	<TD/<<{Number.'+' FI1 FI2 FI3}>>//
      <TR/<TD/<<??{FI3} = ?+{FI1} - ?+{FI2}>>/
	<TD/<<{Number.'-' FI1 FI2 FI3}>>//
      <TR/<TD colspan=2/left-associative//
      <TR/<TD/<<??{FI3} = ?+{FI1} * ?+{FI2}>>/
	<TD/<<{Number.'*' FI1 FI2 FI3}>>//
      <TR><TD><<??{F3} = ?+{F1} / ?+{F2}>></TD>
	<TD><<{Float.'/' F1 F2 F3}>></TD></TR>
      <TR/<TD/<<??{I3} = ?+{I1} div ?+{I2}>>/
	<TD/<<{Int.'div' I1 I2 I3}>>//
      <TR/<TD/<<??{I3} = ?+{I1} mod ?+{I2}>>/
	<TD/<<{Int.'mod' I1 I2 I3}>>//
      <TR/<TD colspan=2/left-associative//
      <TR/<TD/<<?+{K} , ?+{R}>>/<TD/<<{Object.send R K self}>>//
      <TR/<TD colspan=2/prefix//
      <TR/<TD/<<??{FI1} = ~?+{FI2}>>/<TD/<<{Number.'~' FI2 FI1}>>//
      <TR/<TD colspan=2/left-associative//
      <TR/<TD/<<?_{X} = ?+{RC} . ?+{LI}>>/<TD/<<{Value.'.' RC LI X}>>//
      <TR/<TD/<<?_{X} = ?*{R} ^ ?+{LI}>>/<TD/<<{Record.'^' R LI X}>>//
      <TR/<TD colspan=2/infix//
      <TR/<TD/<<?_{X} = @?+{LI}>>/<TD/<<{Object.'@' LI X}>>//
    </Table>
    <!--** associativity -->
</Chapter>
