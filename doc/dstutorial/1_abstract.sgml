This tutorial shows how to write efficient and robust distributed
applications with the Mozart programming system.
We first present and motivate the distribution model and
the basic primitives needed for building distributed applications.
We then progressively introduce
examples of distributed applications
to illustrate servers,
agents, mobility, collaborative tools,
fault tolerance, and security.

<P>The tutorial is suitable for Oz programmers who want to be
able to quickly start writing distributed programs.
The document is deliberately informal and thus complements
the other Oz tutorials and
the research papers on distribution in Oz.

<P>The Mozart programming system has been
developed by researchers from
DFKI (the German Research Center for Artificial Intelligence),
SICS (the Swedish Institute of Computer Science),
the University of the Saarland,
UCL (the Université catholique de Louvain),
and others.

<P CLASS=WARNING> The material in this document is incomplete.  This
document will eventually be superseded by a complete document.  In the
meantime, we recommend looking at the Distributed Programming (dp)
category of the MOGUL archive and reading Chapter 11 of the book
'Concepts, Techniques, and Models of Computer Programming'.
