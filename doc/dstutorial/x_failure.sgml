<CHAPTER ID="chapter.failure">
  <TITLE>Handling failure</TITLE>

<P> This chapter first introduces the Mozart failure model:
what we assume can go wrong with the system
and how this is reflected in the language entities.
We then show how to program with this model.
We first present
basic fault-tolerant versions of 
the common language operations.
Then we present
fault-tolerant versions of the server examples.
Finally
we summarize the basic fault-detection
and handling primitives of the language.
These primitives are used to build
the fault-tolerant abstractions.

<SECTION><TITLE>Failure model</TITLE>

<P> The failure model is designed to cover the
vast majority of failures occurring in distributed systems,
namely instantaneous and permanent site failures (fail-stop)
and both temporary and permanent communication failures.
This failure model is reflected in each language entity.
The system provides mechanisms to be informed of failures
and to program with language entities in case of failures.

<SUBSECTION><TITLE>Stateless data</TITLE>

<P> Eager stateless data are
copied immediately in messages.
There are therefore no remote references to eager
stateless data, which are
always local to a site.
Therefore no special failure handling is needed for them.

<P> In future releases, procedures, functions, classes, and functors
will not send their code immediately in the message,
but will send only their global name.
Upon arrival, if the code is not present,
then it will be immediately requested.
This will guarantee that code is sent at most
once to a given site.
This will introduce additional failure modes
if the site containing the code fails or
becomes unreachable.


<SUBSECTION><TITLE>Sited entities</TITLE>

<P> Sited entities can be referenced remotely
but can only be used on their home site.
Attempting to use one outside of its home
site immediately raises an exception,
without any network operations.
Therefore no special failure handling is needed for them.

<SUBSECTION><TITLE>Ports</TITLE>

<SUBSECTION><TITLE>Logic variables</TITLE>

<SUBSECTION><TITLE>Objects and cells</TITLE>

<SECTION><TITLE>Basic fault-tolerant operations</TITLE>


</CHAPTER>

