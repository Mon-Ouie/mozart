<!--
  - Authors:
  -   Thorsten Brunklaus <brunklaus@ps.uni-sb.de>
  -
  - Copyright:
  -   Thorsten Brunklaus, 2001
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -    http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<CHAPTER id="chapter.basic"><TITLE>Basic Facts</TITLE>
  <P>
    This chapter provides some basic understanding about how the inspector can be used.
  </P>
  <SECTION><TITLE>Simple Invocation</TITLE>
  <P>
    <FIGURE id="figure.usage">
      <CAPTION>The Oz Inspector</CAPTION>
      <PICTURE.CHOICE>
        <PICTURE.EXTERN to="use.gif" type=gif>
      </PICTURE.CHOICE>
    </FIGURE>
  </P>
  <P>
    The simplest usage of the Inspector is to execute the statement
    <CODE>{Inspect ?+{X}}</CODE>, with <CODE>X</CODE> any valid Oz datastructure.
    If not already present, this will open a new window (see figure <PTR to="figure.usage">)
    at the screen showing the given value.
    Inspecting more than one value at the same time
    is possible. By default, new values are appended to the current window.
  </P>
  <SECTION><TITLE>Selective Invocation</TITLE>
  <P>
    In addition, the Inspector can handle arbitrarily many viewing windows which
    can be accessed and configured independently (see figure <PTR to="figure.views">).
    To show the value <CODE>X</CODE> the <CODE>I</CODE>-th window, execute the statement
    <CODE>{InspectN ?+{I} ?+{X}}</CODE>.
  </P>
  <SUBSECTION><TITLE>Handling Widgets</TITLE>
  <P>
    <FIGURE id="figure.panes">
      <CAPTION>Adding new display widgets</CAPTION>
      <TABLE>
        <TR><TD><PICTURE.EXTERN to="panes1.gif" type=gif></TD></TR>
        <TR><TD><PICTURE.EXTERN to="panes2.gif" type=gif></TD></TR>
      </TABLE>
    </FIGURE>
  </P>
  <P>
    To open a new display widget, click <CODE>"Add new Widget"</CODE> from the inspector
    menu as shown in figure <PTR to="figure.panes">.
  </P>
  <P>
    With more than one widget open, the notion of active widget matters. The active widget
    recieves all work caused by applications of <CODE>Inspect</CODE>. The initial widgets defaults
    to be the active widget. This assigment can be changed using the TAB key. The active widget
    is marked with an extra black box around its viewing area. The widgets are enumerated starting
    at zero.
  </P>
  <P>
     Only active widgets can be removed. To do so, click <CODE>"Delete active Widget"</CODE>
     from the inspector menu (see figure <PTR to="figure.panes">). The widget below the active
     widget becomes the new active widget. If only one widget is left, nothing will happen.
  </P>
  <SECTION><TITLE>Value Representation</TITLE>
  <P>
    <FIGURE id="figure.views">
      <CAPTION>Three views on the same datastructure</CAPTION>
      <PICTURE.CHOICE>
        <PICTURE.EXTERN to="views.gif" type=gif>
      </PICTURE.CHOICE>
    </FIGURE>
  </P>
  <P>
    Depending on the value and given Inspector settings,
    you will obtain a tree-like or graph-like representation (see figure <PTR to="figure.views">).
  </P>
  <PARA><TITLE>Tree</TITLE>
    The value will be shown as a tree with respect to given depth and with exploration limits.
    If the value happens to be larger than the given limits, it is truncated and
    the cut position is signaled by either a down or left arrow, respectively.
  </PARA>
  <PARA><TITLE>Graph</TITLE>
    The value will be shown not only with respect to given depth and with exploration limits
    but also with respect to an equality relation. That is, equal
    values will not be displayed again. Instead, a reference to the first ocurrence will be shown.
    This yields a more compact value representation revealing more
    information about its structure. The equality is computed in depth-first-left-most
    traversal covering the entire structure.
  </PARA>
</CHAPTER>
