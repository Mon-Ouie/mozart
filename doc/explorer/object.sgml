<!--
  - Authors:
  -   Christian Schulte <schulte@ps.uni-sb.de>
  -
  - Copyright:
  -   Christian Schulte, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -    http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<chapter id="chapter.object">
  <Title/The Explorer Object/

  <P>
    This section lists all methods of <<Explorer.object>>. New
    Explorers can be created by creating new objects from the class
    <<Explorer.'class'>>. Execution of
<<<MyExplorer = {New Explorer.'class' init}>>>
creates a new Explorer which can be accessed by the variable
<<MyExplorer>>.
  </P>

  <section>
    <Title/Invoking/

      <P>
        <List>
          <Entry><<script>>, <<one>>, <<all>>
          <Synopsis>
            <<<{Explorer.object script(?+{ScriptP} ?+{OrderP} <= _)}>>>
            <<<{Explorer.object one(?+{ScriptP} ?+{OrderP} <= _)}>>>
            <<<{Explorer.object all(?+{ScriptP} ?+{OrderP} <= _)}>>>
          <Item>
            Invokes the Explorer. For a detailed description
            see <Ptr to="chapter.invoke">.

        </List>
      </P>
  </section>

  <section>
    <Title/User-defined Actions/

      <P>
        <List>
          <Entry><<add>>
          <Synopsis>
            <<<{Explorer.object add(&ellipsis;)}>>>
          <Item>
            Adds new actions to the Explorer. For a detailed description
            see <Ptr to="chapter.actions">.

          <Entry><<delete>>
          <Synopsis>
            <<<{Explorer.object delete(&ellipsis;)}>>>
          <Item>
            Deletes actions from the Explorer. For a detailed description
            see <Ptr to="chapter.actions">.

        </List>
      </P>
   </section>

   <section>
     <Title/Options/

      <P>
        <List>
          <Entry><<option>>
          <Synopsis>
<<<{Explorer option(search search:      ?+{AI1}<=_
                        information: ?+{AI2}<=_
                        failed:      ?+{B}<=_)}>>>
          <Item>
            Sets the options for search as described
            in <Ptr to="section.menu.options">.
            ?{AI1} and ?{AI2} must be
            either <<none>>, <<full>>, or an integer.

          <Entry><<option>>
          <Synopsis>
<<<{{Explorer option(drawing hide:   ?+{B1}<=_
                         scale:  ?+{B2}<=_
                         update: ?+{I}<=_)}>>>
          <Item>
            Sets the options for search as described
            in <Ptr to="section.menu.options">.
            ?{AI1} and ?{AI2} must be
            either <<none>>, <<full>>, or an integer.

          <Entry><<option>>
          <Synopsis>
<<<{Explorer option(postscript color:       ?+{A1}<=_
                            orientation: ?+{A2}<=_
                            size:        ?+{V}<=_)}>>>
          <Item>
            Sets the options for postscript output as described
            in <Ptr to="section.menu.options">.
            ?{A1} must be one of <<full>>, <<grayscale>>, or <<bw>>.
            ?{A2} must be one of <<portrait>> or
            <<landscape>>. ?{V} must be a virtual string built
        according to the
same rules as described in <Ptr to="section.menu.options">.
        </List>
      </P>

</section>

</chapter>
