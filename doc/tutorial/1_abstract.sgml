<!--
  - Authors:
  -   Seif Haridi (seif@sics.se)
  -   Nils Franzen (nilsf@sics.se)
  -
  - Copyright:
  -   Seif Haridi, Nils Franzen, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://mozart.ps.uni-sb.de
  -
  - See the file "LICENSE" or
  -    http://mozart.ps.uni-sb.de/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

This tutorial introduces the Oz programming language and the Mozart
programming system.
Oz is a multi-paradigm language that is designed for advanced,
concurrent, networked, soft real-time, and reactive applications. Oz
provides the salient features of object-oriented programming including
state, abstract data types, objects, classes, and inheritance.
It provides the salient features of functional programming including
compositional syntax, first-class procedures/functions, and
lexical scoping.
It provides the salient features of logic programming and
constraint programming including logic variables, constraints,
disjunction constructs, and programmable search mechanisms.
It allows users to dynamically create any number of sequential threads.
The threads are dataflow threads in the sense that
a thread executing an operation will suspend until
all operands needed have a well-defined value.

<P>The tutorial covers most of the concepts of Oz in an informal
way. It is suitable as first reading for programmers who want to be
able to quickly start writing programs without any particular
theoretical background. The document is deliberately informal and
thus complements other Oz documentation.

<P>The Mozart programming system has been
developed by researchers from
DFKI (the German Research Center for Artificial Intelligence),
SICS (the Swedish Institute of Computer Science),
the University of the Saarland,
UCL (the Université catholique de Louvain),
and others.

<P CLASS=WARNING>The material in this document is still incomplete and
subject to change from day to day.
