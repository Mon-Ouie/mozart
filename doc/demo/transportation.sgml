<!--
  - Authors:
  -   Christian Schulte <schulte@dfki.de>
  -
  - Copyright:
  -   Christian Schulte, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://mozart.ps.uni-sb.de
  -
  - See the file "LICENSE" or
  -    http://mozart.ps.uni-sb.de/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<Chapter id="chapter.transportation">
  <Title/Transportation/

  <P>
    <List>
      <Item><Ref.Extern to="applets/Transport.oza"/[Start Applet]/
      <Item><Ref to="appendix.enable"/[How to enable Applets]/
    </List>
  </P>

  <P>
    This demo is an implementation of a multi agent scenario that was
    developed in the AKA-MOD project at DFKI~\cite{FischerKuhn:93}.
  </P>

  <Section>
    <Title/The Idea/

    <P>
      The scenario features a set of concurrently acting agents of
      three different kinds: a <Em/broker/, <Em/transportation
      companies/ and <Em/drivers/.
    </P>

    <P>
      The broker accepts a transportation order and announces it to
      some transportation companies. Each of them passes the same
      order to all of its drivers.
    </P>

    <P>
      Subsequently, each driver computes its minimal cost for
      executing this order, which is returned to the transportation
      company. As cost the detour a driver has to make is chosen. The
      cheapest driver is chosen, the minimal cost is passed to the
      broker, and the remaining drivers are informed about rejection
      of their offers.
    </P>

    <P>
      The broker selects the minimum priced transportation company,
      informs the selected company on acceptance, and sends rejections
      to the others, which accordingly inform their drivers about the
      rejection.
    </P>

    <P>
      Finally, the minimum priced transport company passes acceptance
      to the remaining and cheapest driver. Last but not least this
      order is fulfilled by the chosen driver.
    </P>

   </Section>

  <Section>
    <Title/Usage/

    <P>
      After starting the demo a windows that contains the map of
      Germany, and some menus, and buttons for controlling the
      scenario.
    </P>

    <Subsection class=unnumbered>
      <Title/The Transportation Menu/

      <P>
        <List>
          <Entry><Menu/About&ellipsis;/
          <Item>
            Displays a window containing short information on the
            Demo.
          <Entry><Menu/Quit/
          <Item>
            Ends the demo.
        </List>
      </P>
    </Subsection>

    <Subsection class=unnumbered>
      <Title/The Configure Menu/

      <P>
        <List>
          <Entry><Menu/Add Company&ellipsis;/
          <Item>
            Displays a dialog to add new companies.
          <Entry><Menu/Remove Company&ellipsis;/
          <Item>
            Displays a dialog to remove one of the current companies.
          <Entry><Menu/Add Driver&ellipsis;/
          <Item>
            Displays a dialog to add a new driver for an already
            existing company.
          <Entry><Menu/Remove Driver&ellipsis;/
          <Item>
            Displays a dialog to remove a driver.
          <Entry><Menu/Add Defaults&ellipsis;/
          <Item>
            Adds a set of two default companies with two driver each.
        </List>
      </P>
    </Subsection>

    <Subsection class=unnumbered>
      <Title/The Random Menu/

      <P>
        <List>
          <Entry><Menu/Go/
          <Item>
            Allows to toggle whether transportation tasks are
            generated randomly.
        </List>
        The remaining items allow to control the speed of task
        generation.
      </P>
    </Subsection>

    <Subsection class=unnumbered>
      <Title/The Windows Menu/

      <P>
      <Note.gui icon="note-gui-l1.gif" info="Left mouse click"/Log
      window/
        By selecting an item, a log window for that agent is
        displayed. For trucks the log window can also be displayed by
        clicking them with the left mouse button.
      </P>

    </Subsection>

    <Subsection class=unnumbered>
      <Title/Entering Tasks Manually/

      <P>
       Besides of the automatic random generation of transportation
       tasks, these can also be entered manually. This can be done by
       entering the <Em/From/-city, the <Em/To/-city, the <Em/Good/,
       and the <Em/Weight/ manually in the respective entries at the
       bottom of the window.
      </P>

      <P>
      <Note.gui icon="note-gui-lm1.gif" info="Left or middle mouse click"/City selection/
        By clicking a city in the window with the left mouse button,
        this city will be written to the <Em/From/ entry. Clicking the
        middle button will do the same for <Em/To/. By clicking the
        <Em/Send/ button the transportation task is sent to the
        broker.
      </P>
   </Subsection>

  </Section>

</Chapter>
