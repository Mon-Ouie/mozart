<Chapter id=chapter.fc>
    <title/Feature Constraints: <<FC>>/

    <p>
    This chapter explains  procedures dedicated to feature constraints.

      <List>
        <Entry><Span class=index/<<is>>/
          <Index class=tails/<<FC>><And><<is>>/
        <Synopsis>
          <<{FC.is ?*{X} ??{B}}>>
        <Item>
          tests whether ?_{X} has kind record.

        <Entry><Span class=index/<<^>>/
          <Index/<<FC>><And><<'^'>>/
        <Synopsis>
          <<{FC.'^' ?_{R} ?+{LI} ?_{X}}>>
        <Item>
          tells the constraint store that ?_{R} is a FC having
          field&nbsp;?_{X} at feature ?_{LI}.
        <P>
          Is supported by the infix operator&nbsp;<<^>>, that is
          <<<{FC.'^' ?_{R} ?_{LI} ?_{X}}>>>
          can also be written as
          <<<?_{R}^?_{LI}=?_{X}>>>

        <Entry><Span class=index/<<tell>>/
          <Index class=tails/<<FC>><And><<tell>>/
        <Synopsis>
          <<{FC.tell ?+{L} ??{R}}>>
        <Item>
          tells the constraint store that ?_{R} is a record with
          label&nbsp;?_{L}.

        <Entry><Span class=index/<<width>>/
          <Index class=tails/<<FC>><And><<width>>/
        <Synopsis>
          <<{FC.width ?*{R} ??{D}}>>
        <Item>
           posts a propagator for the constraint that ?_{D} is the
           width of&nbsp;?_{R}. Also tells the constraint store that ?_{D}
           is a finite domain integer.

        <Entry><<reflectArity>>
          <Index class=tails/<<FC>><And><<reflectArity>>/
        <Synopsis>
          <<{FC.reflectArity ?*{R} ??{LIs}}>>
        <Item>
           returns a list ?_{LIs} containing
           the currently known features of&nbsp;?_{R}.

        <Entry><<monitorArity>>
          <Index class=tails/<<FC>><And><<monitorArity>>/
        <Synopsis>
          <<{FC.monitorArity ?*{R} ??{P} ??{LIs}}>>
        <Item>
          returns a nullary procedure&nbsp;?_{P} and a stream ?_{LIs}
          containing the currently known features of&nbsp;?_{R}.
          <p>
          Features appear in the stream as soon as they become known
          to the constraint store. Application of&nbsp;?_{P} closes the
          stream and deletes the propagator. The stream is
          automatically closed once the constraint store
          determines&nbsp;?_{R}.
       </List>
     </chapter>
