<!DOCTYPE Book SYSTEM "ozdoc.dtd" [
<!-- $Id$ -->

<!-- Extension to the DTD -->
<!-- Abbreviations -->
<!-- Processing Instructions -->

]>

<Book>
  <Front>
    <Meta name=ozversion value="3.0">
    <Meta name=status value=draft>
    <Title/The Mozart Debugger/
    <Author.Extern to="author.db" key="Benjamin.Lorenz">
    <Abstract>
      This manual describes Ozcar, a symbolic debugger which provides
      well known features like single stepping, breakpoints, and
      environment inspectation.  Moreover, it supports debugging of
      multiple threads; their concurrent behaviour can be observed and
      manipulated.
      <p>
      Ozcar has been smoothly integrated into the Oz Programming
      Interface. It can be started and stopped from within Emacs,
      which itself serves both as a source view manager, showing the
      current position in a debugged program by highlightening the
      corresponding source line, and as a breakpoint manager, allowing
      to set breakpoints at arbitrary source lines.
      <p>
      Finally, the application ozd is provided to debug standalone
      programs.
    </Abstract>
  <Body>
    <Chapter>
      <Title/Getting Started/
       <P>
        There are two ways in which Ozcar can be invoked. First, from
        within the OPI, second, from the unix/windows shell.
      <Section>
        <Title/Invocation from the OPI/

<Para class=apropos><Title/Starting/
        so gehts: <Key/C-c C-d/ ok, alles klar?
      <Section>
        <Title/Invocation from the Shell/

</Book>
