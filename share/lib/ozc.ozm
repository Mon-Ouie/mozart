%% Code Size:
308348 % words
		skip
lbl(1)		definition(x(0) 308345 pid('Toplevel abstraction' 0 pos('' 0 0) [native] 1474) unit [g(0)])
		allocateL(238)
		putConstant('Exception.raise' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exception.raiseError' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(record x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Dictionary.member' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(63)		definition(x(2) 89 pid('`runTimePut`' 2 pos('./standard/Forward.oz' 45 3) nil 4) <P: 1> [g(0)])
		move(g(0) x(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 83)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(83)		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
		endDefinition(63)
lbl(89)		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(4) y(2) y(0) x(1))
		putConstant('Raise' x(0))
		genFastCall(<P: 1> 4)
		move(y(1) x(1))
		putConstant('RaiseError' x(0))
		genFastCall(<P: 1> 4)
		move(y(2) x(1))
		putConstant(record x(0))
		genFastCall(<P: 1> 4)
		putConstant('Wait' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('WaitOr' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsFree' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsKinded' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('IsDet' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Max' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Min' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('CondSelect' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('HasFeature' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('ByNeed' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYXY(x(6) y(7) x(8) y(8))
		moveMoveXYXY(x(7) y(9) x(9) y(10))
		moveMoveXYXY(x(10) y(11) x(11) y(12))
		move(x(12) x(1))
		putConstant('.' x(0))
		genFastCall(<P: 1> 4)
		putConstant('==' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('==' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('\\=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>' x(0))
		genFastCall(<P: 1> 4)
		move(y(11) x(1))
		putConstant(hasFeature x(0))
		genFastCall(<P: 1> 4)
		move(y(12) x(1))
		putConstant(byNeed x(0))
		genFastCall(<P: 1> 4)
		putConstant('Future' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('!!' x(0))
		genFastCall(<P: 1> 4)
		putRecord(value ['.' '<' '=' '=<' '==' '>' '>=' '\\=' byNeed condSelect hasFeature isDet isFree isKinded max min status type 'wait' waitOr] y(13))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setValue(y(12))
		setValue(y(10))
		setValue(y(11))
		setValue(y(7))
		setValue(y(5))
		setValue(y(6))
		setValue(y(9))
		setValue(y(8))
		setVariable(x(8))
		setVariable(x(9))
		setValue(y(3))
		setValue(y(4))
		putConstant('=<' x(10))
		putConstant(3 x(11))
		callBI(builtin [x(10) x(11)]#[x(12)])
		unify(x(12) x(3))
		putConstant('<' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(11)])
		unify(x(11) x(1))
		putConstant('>=' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(1)])
		unify(x(1) x(6))
		putConstant('>' x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(1)])
		unify(x(1) x(5))
		putConstant('==' x(3))
		putConstant(3 x(5))
		callBI(builtin [x(3) x(5)]#[x(1)])
		unify(x(1) x(4))
		putConstant('=' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(7))
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('Value.status' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(8))
		putConstant('Value.type' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(9))
		putConstant('IsLiteral' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putRecord(literal [is] y(14))
		setValue(x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsUnit' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putRecord('unit' [is 'unit'] y(15))
		setValue(x(1))
		setConstant(unit)
		putConstant('IsLock' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('NewLock' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putRecord('lock' [is new] y(16))
		setValue(x(4))
		setValue(x(5))
		putConstant('IsCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('NewCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Exchange' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Assign' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Access' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putRecord(cell [access assign exchange is new] y(17))
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		putConstant('IsPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('NewPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Send' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putRecord(port [is new send] y(18))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('IsAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('AtomToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putRecord(atom [is toString] y(19))
		setValue(x(15))
		setValue(x(16))
		putConstant('IsName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putConstant('NewName' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		putRecord(name [is new] y(20))
		setValue(x(17))
		setValue(x(18))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('IsBool' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('Not' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(20)])
		putConstant('And' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		putConstant('Or' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(22)])
		putRecord(bool [and 'false' is 'not' 'or' 'true'] y(21))
		setValue(x(21))
		setConstant(false)
		setValue(x(19))
		setValue(x(20))
		setValue(x(22))
		setConstant(true)
		putConstant('IsString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(23)])
		putConstant('StringToAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(24)])
		putConstant('StringToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(25)])
		putConstant('StringToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(26)])
lbl(870)	definition(x(2) 925 pid('Token' 4 pos('./standard/String.oz' 44 3) nil 6) <P: 2> nil)
		match(x(0) ht(910 [onScalar(nil 879) onRecord('|' 2 886)]))
lbl(879)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(886)	getVarVar(x(0) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 900)
		getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(900)	getListValVar(x(2) x(0) x(2))
		move(x(4) x(0))
		genFastCall(<P: 2> 9)
lbl(910)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(50)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(870)
lbl(925)	definition(x(3) 1002 pid('Tokens' 5 pos('./standard/String.oz' 53 3) nil 7) <P: 3> nil)
		match(x(0) ht(987 [onScalar(nil 934) onRecord('|' 2 952)]))
lbl(934)	getLiteral(nil x(3))
		testLiteral(x(2) nil 945)
lbl(941)	getLiteral(nil x(4))
		return
lbl(945)	getList(x(4))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(952)	getVarVar(x(0) x(5))
		testBI('==' [x(0) x(1)]#[x(6)] 977)
		getLiteral(nil x(3))
		getListValVar(x(4) x(2) x(4))
		createVariable(x(2))
		move(x(5) x(0))
		move(x(2) x(3))
		genFastCall(<P: 3> 11)
lbl(977)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 3> 11)
lbl(987)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(62)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(925)
lbl(1002)	definition(x(3) 1047 pid('StringIsAtom' 2 pos('./standard/String.oz' 65 3) nil 3) <P: 4> nil)
		match(x(0) ht(1032 [onScalar(nil 1011) onRecord('|' 2 1015)]))
lbl(1011)	getLiteral(true x(1))
		return
lbl(1015)	getVarVar(x(0) x(2))
		testNumber(x(0) 0 1026)
lbl(1022)	getLiteral(false x(1))
		return
lbl(1026)	move(x(2) x(0))
		genFastCall(<P: 4> 5)
lbl(1032)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(68)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(1002)
lbl(1047)	putRecord(string [is isAtom isFloat isInt toAtom toFloat toInt token tokens] y(22))
		setValue(x(23))
		setValue(x(3))
		setVariable(y(23))
		setVariable(y(24))
		setValue(x(24))
		setValue(x(26))
		setValue(x(25))
		setValue(x(2))
		setVariable(x(27))
lbl(1069)	definition(x(3) 1116 pid('String.isInt' 2 pos('./standard/String.oz' 75 14) nil 2) <P: 5> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1102)
		move(x(0) y(0))
		createCond(1096)
lbl(1088)	lastClause
		clause
		ask
lbl(1091)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1096)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1102)	move(y(0) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1069)
lbl(1116)	unify(x(3) y(24))
lbl(1119)	definition(x(3) 1166 pid('String.isFloat' 2 pos('./standard/String.oz' 81 14) nil 2) <P: 6> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1152)
		move(x(0) y(0))
		createCond(1146)
lbl(1138)	lastClause
		clause
		ask
lbl(1141)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1146)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1152)	move(y(0) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1119)
lbl(1166)	unify(x(3) y(23))
lbl(1169)	definition(x(3) 1191 pid('String.tokens' 3 pos('./standard/String.oz' 88 14) nil 6) <P: 7> nil)
		createVariable(x(5))
		move(x(2) x(4))
		move(x(5) x(2))
		move(x(5) x(3))
		genFastCall(<P: 3> 11)
		endDefinition(1169)
lbl(1191)	unify(x(3) x(27))
		putConstant('IsChar' x(3))
		putConstant(2 x(27))
		callBI(builtin [x(3) x(27)]#[x(28)])
		putRecord(char [is isAlNum isAlpha isCntrl isDigit isGraph isLower isPrint isPunct isSpace isUpper isXDigit toAtom toLower toUpper type] y(25))
		setValue(x(28))
		setVariable(x(3))
		setVariable(x(27))
		setVariable(x(29))
		setVariable(x(30))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(x(33))
		setVariable(x(34))
		setVariable(x(35))
		setVariable(x(36))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setVariable(x(40))
		setVariable(x(41))
		putConstant('Char.isAlpha' x(42))
		putConstant(2 x(43))
		callBI(builtin [x(42) x(43)]#[x(44)])
		unify(x(44) x(27))
		putConstant('Char.isUpper' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(36))
		putConstant('Char.isLower' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(32))
		putConstant('Char.isDigit' x(27))
		putConstant(2 x(32))
		callBI(builtin [x(27) x(32)]#[x(42)])
		unify(x(42) x(30))
		putConstant('Char.isXDigit' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(37))
		putConstant('Char.isAlNum' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(3))
		putConstant('Char.isSpace' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(35))
		putConstant('Char.isGraph' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(31))
		putConstant('Char.isPrint' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(33))
		putConstant('Char.isPunct' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(34))
		putConstant('Char.isCntrl' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(29))
		putConstant('Char.toUpper' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(40))
		putConstant('Char.toLower' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(39))
		putConstant('Char.toAtom' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(38))
		putConstant('Char.type' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(41))
		putConstant('div' x(27))
		putConstant(3 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		moveMoveXYXY(x(0) y(26) x(1) y(27))
		moveMoveXYXY(x(4) y(28) x(5) y(29))
		moveMoveXYXY(x(6) y(30) x(7) y(31))
		moveMoveXYXY(x(8) y(32) x(10) y(33))
		moveMoveXYXY(x(11) y(34) x(12) y(35))
		moveMoveXYXY(x(13) y(36) x(14) y(37))
		moveMoveXYXY(x(15) y(38) x(16) y(39))
		moveMoveXYXY(x(17) y(40) x(18) y(41))
		moveMoveXYXY(x(19) y(42) x(21) y(43))
		moveMoveXYXY(x(22) y(44) x(20) y(45))
		moveMoveXYXY(x(23) y(46) x(24) y(47))
		moveMoveXYXY(x(25) y(48) x(26) y(49))
		moveMoveXYXY(x(28) y(50) x(9) y(51))
		moveMoveXYXY(x(36) y(52) x(3) y(53))
		moveMoveXYXY(x(39) y(54) x(2) y(55))
		move(x(30) x(1))
		putConstant('div' x(0))
		genFastCall(<P: 1> 4)
		putConstant('mod' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('mod' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('IntToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IntToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(1554)	definition(x(2) 1572 pid('IsNat' 2 pos('./standard/Int.oz' 44 0) nil 4) <P: 8> nil)
		putConstant(0 x(2))
		callBI('=<' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(1554)
lbl(1572)	definition(x(3) 1596 pid('IsOdd' 2 pos('./standard/Int.oz' 45 0) nil 4) <P: 9> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(1 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1572)
lbl(1596)	definition(x(5) 1620 pid('IsEven' 2 pos('./standard/Int.oz' 46 0) nil 4) <P: 10> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(0 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1596)
lbl(1620)	putRecord(int ['div' is isEven isNat isOdd 'mod' toFloat toString] y(56))
		setVariable(x(6))
		setValue(x(0))
		setValue(x(5))
		setValue(x(2))
		setValue(x(3))
		setVariable(x(7))
		setValue(x(1))
		setValue(x(4))
		putConstant('div' x(8))
		putConstant(3 x(9))
		callBI(builtin [x(8) x(9)]#[x(10)])
		unify(x(10) x(6))
		putConstant('mod' x(6))
		putConstant(3 x(8))
		callBI(builtin [x(6) x(8)]#[x(9)])
		unify(x(9) x(7))
		putConstant('/' x(6))
		putConstant(3 x(7))
		callBI(builtin [x(6) x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(57) x(2) y(58))
		moveMoveXYXY(x(3) y(59) x(5) y(60))
		moveMoveXYXY(x(1) y(61) x(4) y(62))
		move(x(8) x(1))
		putConstant('/' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exp' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('Log' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Sqrt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Ceil' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Floor' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Sin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Cos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('Tan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Asin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Acos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('Atan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Atan2' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putConstant('Round' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('FloatToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putConstant('FloatToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putRecord(float ['/' acos asin atan atan2 ceil cos exp floor is log round sin sqrt tan toInt toString] y(63))
		setVariable(x(2))
		setValue(x(12))
		setValue(x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(6))
		setValue(x(9))
		setValue(x(1))
		setValue(x(7))
		setValue(x(0))
		setValue(x(4))
		setValue(x(15))
		setValue(x(8))
		setValue(x(5))
		setValue(x(10))
		setValue(x(16))
		setValue(x(17))
		putConstant('/' x(3))
		putConstant(3 x(18))
		callBI(builtin [x(3) x(18)]#[x(19)])
		unify(x(19) x(2))
		putConstant('+' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		moveMoveXYXY(x(0) y(64) x(1) y(65))
		moveMoveXYXY(x(4) y(66) x(5) y(67))
		moveMoveXYXY(x(6) y(68) x(7) y(69))
		moveMoveXYXY(x(15) y(70) x(8) y(71))
		moveMoveXYXY(x(9) y(72) x(10) y(73))
		moveMoveXYXY(x(11) y(74) x(12) y(75))
		moveMoveXYXY(x(13) y(76) x(14) y(77))
		moveMoveXYXY(x(16) y(78) x(17) y(79))
		move(x(18) x(1))
		putConstant('+' x(0))
		genFastCall(<P: 1> 4)
		putConstant('-' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('-' x(0))
		genFastCall(<P: 1> 4)
		putConstant('*' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('*' x(0))
		genFastCall(<P: 1> 4)
		putConstant('~' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('~' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsNumber' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Abs' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(fPow x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(2021)	definition(x(2) 2080 pid('IntPow' 4 pos('./standard/Number.oz' 47 3) nil 7) <P: 11> nil)
		testNumber(x(1) 0 2035)
		unify(x(3) x(2))
		return
lbl(2035)	putConstant(2 x(4))
		callBI('mod' [x(1) x(4)]#[x(5)])
		testNumber(x(5) 0 2063)
		callBI('*' [x(0) x(0)]#[x(4)])
		putConstant(2 x(5))
		callBI('div' [x(1) x(5)]#[x(6)])
		move(x(4) x(0))
		move(x(6) x(1))
		genFastCall(<P: 11> 9)
lbl(2063)	inlineMinus1(x(1) x(4))
		callBI('*' [x(2) x(0)]#[x(5)])
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<P: 11> 9)
		endDefinition(2021)
lbl(2080)	definition(x(2) 2175 pid('Pow' 3 pos('./standard/Number.oz' 54 3) nil 5) <P: 12> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('IsInt' [x(0)]#[x(3)] 2129)
lbl(2099)	testBI('IsInt' [x(1)]#[x(3)] 2129)
lbl(2103)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2121)
		move(y(2) x(3))
		putConstant(1 x(2))
		deAllocateL3
		genFastCall(<P: 11> 9)
lbl(2121)	getNumber(0 y(1))
		getNumber(1 y(2))
		deAllocateL3
		return
lbl(2129)	move(y(0) x(0))
		testBI('IsFloat' [x(0)]#[x(1)] 2162)
lbl(2136)	move(y(1) x(1))
		testBI('IsFloat' [x(1)]#[x(2)] 2151)
lbl(2143)	callBI(fPow [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL3
		return
lbl(2151)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(2162)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2080)
lbl(2175)	putRecord(number ['*' '+' '-' abs is pow '~'] y(80))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setValue(x(1))
		setValue(x(0))
		setValue(x(2))
		setVariable(x(6))
		putConstant('+' x(7))
		putConstant(3 x(8))
		callBI(builtin [x(7) x(8)]#[x(9)])
		unify(x(9) x(4))
		putConstant('-' x(4))
		putConstant(3 x(7))
		callBI(builtin [x(4) x(7)]#[x(8)])
		unify(x(8) x(5))
		putConstant('*' x(4))
		putConstant(3 x(5))
		callBI(builtin [x(4) x(5)]#[x(7)])
		unify(x(7) x(3))
		putConstant('~' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		unify(x(5) x(6))
		putConstant('IsTuple' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		putConstant('MakeTuple' x(3))
		putConstant(3 x(4))
		callBI(builtin [x(3) x(4)]#[x(7)])
lbl(2259)	definition(x(3) 2294 pid('Copy' 4 pos('./standard/Tuple.oz' 42 3) nil 6) <P: 13> nil)
		testNumber(x(0) 0 2270)
		return
lbl(2270)	inlinePlus(x(0) x(1) x(4))
		callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(2) x(0)]#[x(4)])
		unify(x(4) x(5))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 13> 9)
		endDefinition(2259)
lbl(2294)	createVariable(y(81))
		createVariable(y(82))
		createVariable(y(83))
lbl(2300)	definition(x(3) 2409 pid('Append' 3 pos('./standard/Tuple.oz' 45 3) nil 5) <P: 14> [y(81) y(82) y(83)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testNumber(y(3) 0 2339)
		unify(y(2) y(1))
		deAllocateL6
		return
lbl(2339)	testNumber(y(4) 0 2355)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		genCall(gci(g(1) false '' true 3) 0)
lbl(2355)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(5) x(3))
		callBI('MakeTuple' [x(3) x(2)]#[x(4)])
		unify(x(4) y(2))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		putConstant(0 x(1))
		genFastCall(<P: 13> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 13> 9)
		endDefinition(2300)
lbl(2409)	createVariable(y(84))
lbl(2411)	definition(x(4) 2478 pid('TupleToArray' 3 pos('./standard/Tuple.oz' 55 3) nil 6) <P: 15> [y(84)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 2475)
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) put x(4) cache)
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		move(y(0) x(1))
		move(x(5) x(2))
		call(x(4) 3)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 15> 7)
lbl(2475)	return
		endDefinition(2411)
lbl(2478)	putRecord(tuple [append is make toArray] y(85))
		setValue(x(3))
		setValue(x(5))
		setValue(x(7))
		setVariable(x(4))
lbl(2490)	definition(x(8) 2550 pid('Tuple.toArray' 2 pos('./standard/Tuple.oz' 64 12) nil 5) <P: 16> [y(81) y(84)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) new x(4) cache)
		move(y(2) x(1))
		putConstant(1 x(0))
		putConstant(unit x(2))
		createVariableMove(y(3) x(3))
		call(x(4) 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 15> 6)
		unify(y(3) y(1))
		deAllocateL4
		return
		endDefinition(2490)
lbl(2550)	unify(x(8) x(4))
lbl(2553)	definition(x(4) 2599 pid('Match' 3 pos('./standard/Tuple.oz' 78 3) nil 5) <P: 17> nil)
		match(x(0) ht(2584 [onScalar(nil 2562) onRecord('|' 2 2563)]))
lbl(2562)	return
lbl(2563)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 17> 7)
lbl(2584)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(81)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2553)
lbl(2599)	definition(x(4) 2625 pid('DoTuple' 4 pos('./standard/Tuple.oz' 84 3) nil 5) <P: 18> nil)
		callBI('MakeTuple' [x(0) x(2)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 17> 7)
		endDefinition(2599)
lbl(2625)	moveMoveXYXY(x(0) y(86) x(2) y(87))
		moveMoveXYXY(x(1) y(88) x(7) y(89))
		moveMoveXYXY(x(5) y(90) x(6) y(91))
		move(x(3) y(92))
		move(x(4) x(1))
		putConstant(tuple x(0))
		genFastCall(<P: 1> 4)
lbl(2652)	definition(x(0) 2687 pid('MakeList' 2 pos('./standard/List.oz' 35 0) nil 4) <P: 19> nil)
		putConstant(0 x(2))
		testLT(x(2) x(0) x(3) 2681)
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		genFastCall(<P: 19> 5)
lbl(2681)	getLiteral(nil x(1))
		return
		endDefinition(2652)
lbl(2687)	definition(x(1) 2715 pid('IsList' 2 pos('./standard/List.oz' 39 0) nil 4) <P: 20> nil)
		testList(x(0) 2703)
lbl(2696)	getVoid(1)
		getVariable(x(0))
		genFastCall(<P: 20> 5)
lbl(2703)	putConstant(nil x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(2687)
lbl(2715)	definition(x(2) 2753 pid('Append' 3 pos('./standard/List.oz' 43 0) nil 4) <P: 21> nil)
		match(x(0) ht(2738 [onScalar(nil 2724) onRecord('|' 2 2728)]))
lbl(2724)	unify(x(2) x(1))
		return
lbl(2728)	getVarVar(x(3) x(0))
		getListValVar(x(2) x(3) x(2))
		genFastCall(<P: 21> 7)
lbl(2738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(46)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2715)
lbl(2753)	definition(x(3) 2798 pid('Member' 3 pos('./standard/List.oz' 49 0) nil 5) <P: 22> nil)
		match(x(1) ht(2783 [onScalar(nil 2762) onRecord('|' 2 2766)]))
lbl(2762)	getLiteral(false x(2))
		return
lbl(2766)	getVarVar(x(1) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 2777)
		getLiteral(true x(2))
		return
lbl(2777)	move(x(3) x(1))
		genFastCall(<P: 22> 7)
lbl(2783)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(52)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2753)
lbl(2798)	definition(x(4) 2839 pid('DoLength' 3 pos('./standard/List.oz' 56 3) nil 4) <P: 23> nil)
		match(x(0) ht(2824 [onScalar(nil 2807) onRecord('|' 2 2811)]))
lbl(2807)	unify(x(2) x(1))
		return
lbl(2811)	getVoid(1)
		getVariable(x(0))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 23> 7)
lbl(2824)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(59)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2798)
lbl(2839)	definition(x(4) 2856 pid('Length' 2 pos('./standard/List.oz' 62 3) nil 3) <P: 24> nil)
		move(x(1) x(2))
		putConstant(0 x(1))
		genFastCall(<P: 23> 7)
		endDefinition(2839)
lbl(2856)	definition(x(5) 2890 pid('DoNth' 3 pos('./standard/List.oz' 66 3) nil 5) <P: 25> nil)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testNumber(x(1) 1 2876)
lbl(2872)	unify(x(2) x(0))
		return
lbl(2876)	inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 25> 7)
		endDefinition(2856)
lbl(2890)	definition(x(5) 2920 pid('Nth' 3 pos('./standard/List.oz' 70 3) nil 5) <P: 26> nil)
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2907)
		genFastCall(<P: 25> 7)
lbl(2907)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2890)
lbl(2920)	definition(x(6) 2963 pid('DoReverse' 3 pos('./standard/List.oz' 74 3) nil 5) <P: 27> nil)
		match(x(0) ht(2948 [onScalar(nil 2929) onRecord('|' 2 2933)]))
lbl(2929)	unify(x(2) x(1))
		return
lbl(2933)	getVarVar(x(3) x(0))
		putList(x(4))
		setValue(x(3))
		setValue(x(1))
		move(x(4) x(1))
		genFastCall(<P: 27> 7)
lbl(2948)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2920)
lbl(2963)	definition(x(6) 2980 pid('Reverse' 2 pos('./standard/List.oz' 80 3) nil 3) <P: 28> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 27> 7)
		endDefinition(2963)
lbl(2980)	definition(x(7) 3039 pid('Map' 3 pos('./standard/List.oz' 83 0) nil 3) <P: 29> nil)
		match(x(0) ht(3024 [onScalar(nil 2989) onRecord('|' 2 2993)]))
lbl(2989)	getLiteral(nil x(2))
		return
lbl(2993)	allocateL3
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(x(2) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 29> 7)
lbl(3024)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2980)
lbl(3039)	definition(x(8) 3102 pid('FoldL' 4 pos('./standard/List.oz' 89 0) nil 5) <P: 30> nil)
		match(x(0) ht(3087 [onScalar(nil 3048) onRecord('|' 2 3052)]))
lbl(3048)	unify(x(3) x(2))
		return
lbl(3052)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
lbl(3087)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(92)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3039)
lbl(3102)	definition(x(9) 3166 pid('FoldLTail' 4 pos('./standard/List.oz' 95 0) nil 4) <P: 31> nil)
		match(x(0) ht(3151 [onScalar(nil 3111) onRecord('|' 2 3115)]))
lbl(3111)	unify(x(3) x(2))
		return
lbl(3115)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(0) x(1))
		move(x(2) x(0))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 31> 9)
lbl(3151)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3102)
lbl(3166)	definition(x(10) 3223 pid('FoldR' 4 pos('./standard/List.oz' 101 0) nil 4) <P: 32> nil)
		match(x(0) ht(3208 [onScalar(nil 3175) onRecord('|' 2 3179)]))
lbl(3175)	unify(x(3) x(2))
		return
lbl(3179)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3166)
lbl(3223)	definition(x(11) 3287 pid('FoldRTail' 4 pos('./standard/List.oz' 107 0) nil 5) <P: 33> nil)
		match(x(0) ht(3272 [onScalar(nil 3232) onRecord('|' 2 3236)]))
lbl(3232)	unify(x(3) x(2))
		return
lbl(3236)	allocateL4
		getVoid(1)
		getVariable(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 33> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3272)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3223)
lbl(3287)	definition(x(12) 3331 pid('ForAll' 2 pos('./standard/List.oz' 113 0) nil 2) <P: 34> nil)
		match(x(0) ht(3316 [onScalar(nil 3296) onRecord('|' 2 3297)]))
lbl(3296)	return
lbl(3297)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(3316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(116)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3287)
lbl(3331)	definition(x(13) 3406 pid('All' 3 pos('./standard/List.oz' 119 0) nil 3) <P: 35> nil)
		match(x(0) ht(3391 [onScalar(nil 3340) onRecord('|' 2 3344)]))
lbl(3340)	getLiteral(true x(2))
		return
lbl(3344)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3375 3380)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 35> 7)
lbl(3375)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3380)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3391)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(122)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3331)
lbl(3406)	definition(x(14) 3481 pid('Some' 3 pos('./standard/List.oz' 125 0) nil 3) <P: 36> nil)
		match(x(0) ht(3466 [onScalar(nil 3415) onRecord('|' 2 3419)]))
lbl(3415)	getLiteral(false x(2))
		return
lbl(3419)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3443 3455)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(3443)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 36> 7)
lbl(3455)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(127)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3466)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3406)
lbl(3481)	definition(x(15) 3526 pid('ForAllTail' 2 pos('./standard/List.oz' 131 0) nil 2) <P: 37> nil)
		match(x(0) ht(3511 [onScalar(nil 3490) onRecord('|' 2 3491)]))
lbl(3490)	return
lbl(3491)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 37> 5)
lbl(3511)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3481)
lbl(3526)	definition(x(16) 3602 pid('AllTail' 3 pos('./standard/List.oz' 137 0) nil 3) <P: 38> nil)
		match(x(0) ht(3587 [onScalar(nil 3535) onRecord('|' 2 3539)]))
lbl(3535)	getLiteral(true x(2))
		return
lbl(3539)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3571 3576)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 38> 7)
lbl(3571)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3587)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(140)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3526)
lbl(3602)	definition(x(17) 3689 pid('Filter' 3 pos('./standard/List.oz' 143 0) nil 3) <P: 39> nil)
		match(x(0) ht(3674 [onScalar(nil 3611) onRecord('|' 2 3615)]))
lbl(3611)	getLiteral(nil x(2))
		return
lbl(3615)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 3651 3663)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3651)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3602)
lbl(3689)	definition(x(18) 3786 pid('DoFlatten' 4 pos('./standard/List.oz' 150 3) nil 4) <P: 40> nil)
		match(x(0) ht(3780 [onScalar(nil 3698) onRecord('|' 2 3705)]))
lbl(3698)	unify(x(1) x(2))
		getLiteral(true x(3))
		return
lbl(3705)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(7) 3752 3769)
		unify(y(5) y(2))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3752)	getList(y(2))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(153)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3780)	getLiteral(false x(3))
		return
		endDefinition(3689)
lbl(3786)	definition(x(18) 3837 pid('Flatten' 2 pos('./standard/List.oz' 162 3) nil 4) <P: 41> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(3) 3819 3824)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(3819)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(3824)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(163)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3786)
lbl(3837)	definition(x(19) 3944 pid('DoMerge' 5 pos('./standard/List.oz' 169 3) nil 5) <P: 42> nil)
		match(x(2) ht(3929 [onScalar(nil 3846) onRecord('|' 2 3853)]))
lbl(3846)	getList(x(4))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(3853)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
		testBool(y(6) 3899 3918)
		getList(y(5))
		unifyValVar(y(2) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3899)	getList(y(5))
		unifyValVar(y(0) x(4))
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(172)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3929)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3837)
lbl(3944)	definition(x(19) 4379 pid('DoSort' 5 pos('./standard/List.oz' 177 3) nil 7) <P: 43> nil)
		match(x(0) ht(4297 [onScalar(0 3953) onScalar(1 3960) onScalar(2 3973) onScalar(3 4041)]))
lbl(3953)	getLiteral(nil x(2))
		getLiteral(nil x(4))
		return
lbl(3960)	getList(x(1))
		unifyVariable(x(0))
		unifyValue(x(2))
		getList(x(4))
		unifyValue(x(0))
		unifyLiteral(nil)
		return
lbl(3973)	allocateL4
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyValue(x(2))
		moveMoveXYYX(x(4) y(2) y(0) x(0))
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 4017 4030)
		getList(y(2))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4017)	getList(y(2))
		unifyValVar(y(1) x(0))
		getList(x(0))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4041)	allocateL6
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(2))
		unifyValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4183 4286)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4112 4172)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4112)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4144 4161)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4144)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4161)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(186)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4172)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(185)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4183)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4215 4275)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4215)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4247 4264)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4247)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4264)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4297)	allocateL8
		putConstant(2 x(5))
		callBI('div' [x(0) x(5)]#[x(6)])
		putList(x(5))
		setVariable(y(0))
		setVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYYX(x(6) y(6) y(6) x(0))
		move(x(5) x(4))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		inlineMinus(x(0) x(1) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(7) x(1) y(3) x(2))
		move(y(4) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL8
		genFastCall(<P: 42> 11)
		endDefinition(3944)
lbl(4379)	definition(x(19) 4419 pid('Sort' 3 pos('./standard/List.oz' 203 3) nil 5) <P: 44> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<P: 43> 11)
		endDefinition(4379)
lbl(4419)	definition(x(20) 4465 pid('Merge' 4 pos('./standard/List.oz' 206 3) nil 6) <P: 45> nil)
		match(x(0) ht(4450 [onScalar(nil 4428) onRecord('|' 2 4432)]))
lbl(4428)	unify(x(3) x(1))
		return
lbl(4432)	getVarVar(x(0) x(5))
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 42> 11)
lbl(4450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4419)
lbl(4465)	definition(x(21) 4515 pid('ListTail' 3 pos('./standard/List.oz' 217 3) nil 5) <P: 46> nil)
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 4494)
		getList(x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 46> 7)
lbl(4494)	testNumber(x(0) 0 4502)
		unify(x(2) x(1))
		return
lbl(4502)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(218)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4465)
lbl(4515)	definition(x(22) 4564 pid('Subtract' 3 pos('./standard/List.oz' 221 3) nil 5) <P: 47> nil)
		match(x(0) ht(4549 [onScalar(nil 4524) onRecord('|' 2 4528)]))
lbl(4524)	getLiteral(nil x(2))
		return
lbl(4528)	getVarVar(x(0) x(3))
		testBI('\\=' [x(0) x(1)]#[x(4)] 4545)
		getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 47> 7)
lbl(4545)	unify(x(2) x(3))
		return
lbl(4549)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(224)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4515)
lbl(4564)	definition(x(23) 4598 pid('Last' 3 pos('./standard/List.oz' 227 3) nil 3) <P: 48> nil)
		match(x(1) ht(4583 [onScalar(nil 4573) onRecord('|' 2 4577)]))
lbl(4573)	unify(x(2) x(0))
		return
lbl(4577)	getVarVar(x(0) x(1))
		genFastCall(<P: 48> 7)
lbl(4583)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(230)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4564)
lbl(4598)	definition(x(23) 4651 pid('Find' 4 pos('./standard/List.oz' 234 6) nil 6) <P: 49> nil)
		match(x(2) ht(4636 [onScalar(nil 4607) onRecord('|' 2 4611)]))
lbl(4607)	getLiteral(false x(3))
		return
lbl(4611)	getVarVar(x(2) x(4))
		testBI('==' [x(0) x(2)]#[x(5)] 4630)
		move(x(1) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		genFastCall(<P: 50> 7)
lbl(4630)	move(x(4) x(2))
		genFastCall(<P: 49> 9)
lbl(4636)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(238)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4598)
lbl(4651)	definition(x(23) 4694 pid('Sub' 3 pos('./standard/List.oz' 241 6) nil 5) <P: 50> nil)
		match(x(0) ht(4679 [onScalar(nil 4660) onRecord('|' 2 4664)]))
lbl(4660)	getLiteral(true x(2))
		return
lbl(4664)	getVarVar(x(0) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 49> 9)
lbl(4679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4651)
lbl(4694)	definition(x(24) 4753 pid('Take' 3 pos('./standard/List.oz' 249 3) nil 6) <P: 51> nil)
		match(x(0) ht(4738 [onScalar(nil 4703) onRecord('|' 2 4707)]))
lbl(4703)	getLiteral(nil x(2))
		return
lbl(4707)	getVarVar(x(3) x(0))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4731)
		getListValVar(x(2) x(3) x(2))
		inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 51> 7)
lbl(4731)	getNumber(0 x(1))
		getLiteral(nil x(2))
		return
lbl(4738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4694)
lbl(4753)	definition(x(25) 4812 pid('Drop' 3 pos('./standard/List.oz' 255 3) nil 6) <P: 52> nil)
		match(x(0) ht(4797 [onScalar(nil 4762) onRecord('|' 2 4766)]))
lbl(4762)	getLiteral(nil x(2))
		return
lbl(4766)	getVoid(1)
		getVariable(x(3))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4790)
		inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 52> 7)
lbl(4790)	getNumber(0 x(1))
		unify(x(0) x(2))
		return
lbl(4797)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(258)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4753)
lbl(4812)	definition(x(26) 4880 pid('TakeDrop' 4 pos('./standard/List.oz' 261 3) nil 8) <P: 53> nil)
		match(x(0) ht(4865 [onScalar(nil 4821) onRecord('|' 2 4828)]))
lbl(4821)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4828)	getVarVar(x(4) x(5))
		putConstant(0 x(6))
		testLT(x(6) x(1) x(7) 4855)
		getListValVar(x(2) x(4) x(2))
		inlineMinus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 53> 9)
lbl(4855)	getNumber(0 x(1))
		getLiteral(nil x(2))
		unify(x(3) x(0))
		return
lbl(4865)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(267)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4812)
lbl(4880)	definition(x(27) 4980 pid('Partition' 4 pos('./standard/List.oz' 273 3) nil 4) <P: 54> nil)
		match(x(0) ht(4965 [onScalar(nil 4889) onRecord('|' 2 4896)]))
lbl(4889)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4896)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		call(y(2) 2)
		testBool(y(5) 4937 4954)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4937)	getList(y(4))
		unifyValVar(y(0) x(3))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(276)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4965)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(279)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4880)
lbl(4980)	definition(x(28) 5060 pid('TakeWhile' 3 pos('./standard/List.oz' 282 3) nil 3) <P: 55> nil)
		match(x(0) ht(5045 [onScalar(nil 4989) onRecord('|' 2 4993)]))
lbl(4989)	getLiteral(nil x(2))
		return
lbl(4993)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5029 5034)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 55> 7)
lbl(5029)	getLiteral(nil y(3))
		deAllocateL5
		return
lbl(5034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5045)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(285)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4980)
lbl(5060)	definition(x(29) 5141 pid('DropWhile' 3 pos('./standard/List.oz' 288 3) nil 4) <P: 56> nil)
		match(x(0) ht(5126 [onScalar(nil 5069) onRecord('|' 2 5073)]))
lbl(5069)	getLiteral(nil x(2))
		return
lbl(5073)	allocateL5
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5110 5115)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 56> 7)
lbl(5110)	unify(y(3) y(1))
		deAllocateL5
		return
lbl(5115)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(290)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5126)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(291)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5060)
lbl(5141)	definition(x(30) 5235 pid('TakeDropWhile' 4 pos('./standard/List.oz' 294 3) nil 4) <P: 57> nil)
		match(x(0) ht(5220 [onScalar(nil 5150) onRecord('|' 2 5157)]))
lbl(5150)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(5157)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(3) 2)
		testBool(y(6) 5201 5209)
		getList(y(4))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(5) x(3))
		deAllocateL7
		genFastCall(<P: 57> 9)
lbl(5201)	getLiteral(nil y(4))
		unify(y(5) y(2))
		deAllocateL7
		return
lbl(5209)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5220)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5141)
lbl(5235)	definition(x(31) 5308 pid('MapInd' 4 pos('./standard/List.oz' 306 3) nil 5) <P: 58> nil)
		match(x(0) ht(5293 [onScalar(nil 5244) onRecord('|' 2 5248)]))
lbl(5244)	getLiteral(nil x(3))
		return
lbl(5248)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		call(y(3) 3)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<P: 58> 9)
lbl(5293)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(309)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5235)
lbl(5308)	definition(x(31) 5383 pid('FoldLInd' 5 pos('./standard/List.oz' 312 3) nil 6) <P: 59> nil)
		match(x(0) ht(5368 [onScalar(nil 5317) onRecord('|' 2 5321)]))
lbl(5317)	unify(x(4) x(3))
		return
lbl(5321)	allocateL5
		getVarVar(x(5) y(0))
		inlinePlus1(x(1) x(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(0) y(3))
		move(x(1) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 59> 11)
lbl(5368)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(315)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5308)
lbl(5383)	definition(x(31) 5452 pid('FoldRInd' 5 pos('./standard/List.oz' 318 3) nil 6) <P: 60> nil)
		match(x(0) ht(5437 [onScalar(nil 5392) onRecord('|' 2 5396)]))
lbl(5392)	unify(x(4) x(3))
		return
lbl(5396)	allocateL5
		getVarVar(y(0) x(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(5) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 60> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5383)
lbl(5452)	definition(x(31) 5528 pid('FoldLTailInd' 5 pos('./standard/List.oz' 324 3) nil 6) <P: 61> nil)
		match(x(0) ht(5513 [onScalar(nil 5461) onRecord('|' 2 5465)]))
lbl(5461)	unify(x(4) x(3))
		return
lbl(5465)	allocateL5
		getVoid(1)
		getVariable(y(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(5) y(3))
		move(x(0) x(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 61> 11)
lbl(5513)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(327)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5452)
lbl(5528)	definition(x(31) 5603 pid('FoldRTailInd' 5 pos('./standard/List.oz' 330 3) nil 7) <P: 62> nil)
		match(x(0) ht(5588 [onScalar(nil 5537) onRecord('|' 2 5541)]))
lbl(5537)	unify(x(4) x(3))
		return
lbl(5541)	allocateL5
		getVoid(1)
		getVariable(x(5))
		inlinePlus1(x(1) x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 62> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5528)
lbl(5603)	definition(x(31) 5661 pid('ForAllInd' 3 pos('./standard/List.oz' 336 3) nil 4) <P: 63> nil)
		match(x(0) ht(5646 [onScalar(nil 5612) onRecord('|' 2 5613)]))
lbl(5612)	return
lbl(5613)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(x(3) x(1))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 63> 7)
lbl(5646)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(339)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5603)
lbl(5661)	definition(x(31) 5750 pid('AllInd' 4 pos('./standard/List.oz' 342 3) nil 5) <P: 64> nil)
		match(x(0) ht(5735 [onScalar(nil 5670) onRecord('|' 2 5674)]))
lbl(5670)	getLiteral(true x(3))
		return
lbl(5674)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5719 5724)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 64> 9)
lbl(5719)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(344)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5735)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(345)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5661)
lbl(5750)	definition(x(31) 5809 pid('ForAllTailInd' 3 pos('./standard/List.oz' 348 3) nil 3) <P: 65> nil)
		match(x(0) ht(5794 [onScalar(nil 5759) onRecord('|' 2 5760)]))
lbl(5759)	return
lbl(5760)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) x(1))
		move(y(1) x(0))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 65> 7)
lbl(5794)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(351)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5750)
lbl(5809)	definition(x(31) 5900 pid('AllTailInd' 4 pos('./standard/List.oz' 354 3) nil 4) <P: 66> nil)
		match(x(0) ht(5885 [onScalar(nil 5818) onRecord('|' 2 5822)]))
lbl(5818)	getLiteral(true x(3))
		return
lbl(5822)	allocateL5
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(1))
		move(y(1) x(0))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5869 5874)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 66> 9)
lbl(5869)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5885)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5809)
lbl(5900)	definition(x(31) 5989 pid('SomeInd' 4 pos('./standard/List.oz' 360 3) nil 5) <P: 67> nil)
		match(x(0) ht(5974 [onScalar(nil 5909) onRecord('|' 2 5913)]))
lbl(5909)	getLiteral(false x(3))
		return
lbl(5913)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5945 5963)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(5945)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 67> 9)
lbl(5963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(362)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(363)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5900)
lbl(5989)	definition(x(31) 6093 pid('FilterInd' 4 pos('./standard/List.oz' 366 3) nil 4) <P: 68> nil)
		match(x(0) ht(6078 [onScalar(nil 5998) onRecord('|' 2 6002)]))
lbl(5998)	getLiteral(nil x(3))
		return
lbl(6002)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6049 6067)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6049)	move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6078)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5989)
lbl(6093)	definition(x(31) 6210 pid('PartitionInd' 5 pos('./standard/List.oz' 375 3) nil 5) <P: 69> nil)
		match(x(0) ht(6195 [onScalar(nil 6102) onRecord('|' 2 6109)]))
lbl(6102)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6109)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(3) 3)
		testBool(y(6) 6161 6184)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(5) x(4))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6161)	getList(y(5))
		unifyValVar(y(0) x(4))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6184)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6195)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6093)
lbl(6210)	definition(x(31) 6301 pid('TakeWhileInd' 4 pos('./standard/List.oz' 384 3) nil 4) <P: 70> nil)
		match(x(0) ht(6286 [onScalar(nil 6219) onRecord('|' 2 6223)]))
lbl(6219)	getLiteral(nil x(3))
		return
lbl(6223)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6270 6275)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 70> 9)
lbl(6270)	getLiteral(nil y(4))
		deAllocateL6
		return
lbl(6275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(386)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6286)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(387)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6210)
lbl(6301)	definition(x(31) 6393 pid('DropWhileInd' 4 pos('./standard/List.oz' 390 3) nil 5) <P: 71> nil)
		match(x(0) ht(6378 [onScalar(nil 6310) onRecord('|' 2 6314)]))
lbl(6310)	getLiteral(nil x(3))
		return
lbl(6314)	allocateL6
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6362 6367)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 71> 9)
lbl(6362)	unify(y(4) y(1))
		deAllocateL6
		return
lbl(6367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6378)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(393)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6301)
lbl(6393)	definition(x(31) 6498 pid('TakeDropWhileInd' 5 pos('./standard/List.oz' 396 3) nil 5) <P: 72> nil)
		match(x(0) ht(6483 [onScalar(nil 6402) onRecord('|' 2 6409)]))
lbl(6402)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6409)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYYX(x(4) y(6) y(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(7) x(2))
		call(y(4) 3)
		testBool(y(7) 6464 6472)
		getList(y(5))
		unifyValVar(y(0) x(3))
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(6) x(4))
		deAllocateL8
		genFastCall(<P: 72> 11)
lbl(6464)	getLiteral(nil y(5))
		unify(y(6) y(2))
		deAllocateL8
		return
lbl(6472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(399)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6483)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(402)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6393)
lbl(6498)	definition(x(31) 6595 pid('Zip' 4 pos('./standard/List.oz' 406 3) nil 4) <P: 73> nil)
		match(x(0) ht(6580 [onScalar(nil 6507) onRecord('|' 2 6528)]))
lbl(6507)	testLiteral(x(1) nil 6515)
lbl(6511)	getLiteral(nil x(3))
		return
lbl(6515)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(407)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6528)	allocateL4
		getVarVar(x(0) y(0))
		testList(x(1) 6567)
lbl(6535)	getVarVar(x(1) y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(3) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 73> 9)
lbl(6567)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(408)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(409)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6498)
lbl(6595)	definition(x(32) 6626 pid('NumberInc' 4 pos('./standard/List.oz' 412 3) nil 5) <P: 74> nil)
		testLT(x(1) x(0) x(4) 6610)
		getLiteral(nil x(3))
		return
lbl(6610)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 74> 9)
		endDefinition(6595)
lbl(6626)	definition(x(32) 6657 pid('NumberDec' 4 pos('./standard/List.oz' 416 3) nil 5) <P: 75> nil)
		testLT(x(0) x(1) x(4) 6641)
		getLiteral(nil x(3))
		return
lbl(6641)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 75> 9)
		endDefinition(6626)
lbl(6657)	definition(x(32) 6703 pid('EnterArgs' 3 pos('./standard/List.oz' 421 6) nil 5) <P: 76> nil)
		match(x(0) ht(6688 [onScalar(nil 6666) onRecord('|' 2 6667)]))
lbl(6666)	return
lbl(6667)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 76> 7)
lbl(6688)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(424)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6657)
lbl(6703)	definition(x(32) 6751 pid('ToTuple' 3 pos('./standard/List.oz' 427 6) nil 3) <P: 77> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		callBI('MakeTuple' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		putConstant(1 x(1))
		deAllocateL4
		genFastCall(<P: 76> 7)
		endDefinition(6703)
lbl(6751)	definition(x(33) 6822 pid('IsPrefix' 3 pos('./standard/List.oz' 433 3) nil 6) <P: 78> nil)
		match(x(0) ht(6807 [onScalar(nil 6760) onRecord('|' 2 6764)]))
lbl(6760)	getLiteral(true x(2))
		return
lbl(6764)	getVarVar(x(0) x(3))
		match(x(1) ht(6794 [onScalar(nil 6770) onRecord('|' 2 6774)]))
lbl(6770)	getLiteral(false x(2))
		return
lbl(6774)	getVarVar(x(1) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 6790)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 78> 7)
lbl(6790)	getLiteral(false x(2))
		return
lbl(6794)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(438)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6807)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6751)
lbl(6822)	putRecord(list [all allInd allTail allTailInd append drop dropWhile dropWhileInd filter filterInd flatten foldL foldLInd foldLTail foldLTailInd foldR foldRInd foldRTail foldRTailInd forAll forAllInd forAllTail forAllTailInd is isPrefix last length make map mapInd member merge nth number partition partitionInd reverse some someInd sort sub subtract take takeDrop takeDropWhile takeDropWhileInd takeWhile takeWhileInd toRecord toTuple withTail zip] y(93))
		setValue(x(13))
		setVariable(x(34))
		setValue(x(16))
		setVariable(x(35))
		setValue(x(2))
		setValue(x(25))
		setValue(x(29))
		setVariable(x(36))
		setValue(x(17))
		setVariable(x(37))
		setValue(x(18))
		setValue(x(8))
		setVariable(y(94))
		setValue(x(9))
		setVariable(x(38))
		setValue(x(10))
		setVariable(y(95))
		setValue(x(11))
		setVariable(x(39))
		setValue(x(12))
		setVariable(y(96))
		setValue(x(15))
		setVariable(y(97))
		setValue(x(1))
		setValue(x(33))
		setVariable(y(98))
		setValue(x(4))
		setValue(x(0))
		setValue(x(7))
		setVariable(y(99))
		setValue(x(3))
		setValue(x(20))
		setValue(x(5))
		setVariable(y(100))
		setValue(x(27))
		setVariable(x(40))
		setValue(x(6))
		setValue(x(14))
		setVariable(x(41))
		setValue(x(19))
		setValue(x(23))
		setValue(x(22))
		setValue(x(24))
		setValue(x(26))
		setValue(x(30))
		setVariable(x(42))
		setValue(x(28))
		setVariable(x(43))
		setValue(y(2))
		setValue(x(32))
		setValue(x(21))
		setValue(x(31))
lbl(6930)	definition(x(21) 6966 pid('List.last' 2 pos('./standard/List.oz' 452 4) nil 4) <P: 79> nil)
		testList(x(0) 6951)
lbl(6939)	getVarVar(x(0) x(3))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 48> 7)
lbl(6951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(453)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6930)
lbl(6966)	unify(x(21) y(98))
lbl(6969)	definition(x(21) 6991 pid('List.number' 4 pos('./standard/List.oz' 463 4) nil 6) <P: 80> nil)
		putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 6986)
		genFastCall(<P: 74> 9)
lbl(6986)	genFastCall(<P: 75> 9)
		endDefinition(6969)
lbl(6991)	unify(x(21) y(100))
lbl(6994)	definition(x(21) 7014 pid('List.mapInd' 3 pos('./standard/List.oz' 489 4) nil 4) <P: 81> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 58> 9)
		endDefinition(6994)
lbl(7014)	unify(x(21) y(99))
lbl(7017)	definition(x(21) 7040 pid('List.foldLInd' 4 pos('./standard/List.oz' 493 4) nil 5) <P: 82> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 59> 11)
		endDefinition(7017)
lbl(7040)	unify(x(21) y(94))
lbl(7043)	definition(x(21) 7066 pid('List.foldRInd' 4 pos('./standard/List.oz' 497 4) nil 5) <P: 83> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 60> 11)
		endDefinition(7043)
lbl(7066)	unify(x(21) y(95))
lbl(7069)	definition(x(21) 7092 pid('List.foldLTailInd' 4 pos('./standard/List.oz' 501 4) nil 5) <P: 84> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 61> 11)
		endDefinition(7069)
lbl(7092)	unify(x(21) x(38))
lbl(7095)	definition(x(21) 7118 pid('List.foldRTailInd' 4 pos('./standard/List.oz' 505 4) nil 5) <P: 85> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 62> 11)
		endDefinition(7095)
lbl(7118)	unify(x(21) x(39))
lbl(7121)	definition(x(21) 7138 pid('List.forAllInd' 2 pos('./standard/List.oz' 509 4) nil 3) <P: 86> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 63> 7)
		endDefinition(7121)
lbl(7138)	unify(x(21) y(96))
lbl(7141)	definition(x(21) 7161 pid('List.allInd' 3 pos('./standard/List.oz' 513 4) nil 4) <P: 87> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 64> 9)
		endDefinition(7141)
lbl(7161)	unify(x(21) x(34))
lbl(7164)	definition(x(21) 7184 pid('List.someInd' 3 pos('./standard/List.oz' 517 4) nil 4) <P: 88> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 67> 9)
		endDefinition(7164)
lbl(7184)	unify(x(21) x(41))
lbl(7187)	definition(x(21) 7204 pid('List.forAllTailInd' 2 pos('./standard/List.oz' 521 4) nil 3) <P: 89> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 65> 7)
		endDefinition(7187)
lbl(7204)	unify(x(21) y(97))
lbl(7207)	definition(x(21) 7227 pid('List.allTailInd' 3 pos('./standard/List.oz' 525 4) nil 4) <P: 90> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 66> 9)
		endDefinition(7207)
lbl(7227)	unify(x(21) x(35))
lbl(7230)	definition(x(21) 7250 pid('List.filterInd' 3 pos('./standard/List.oz' 529 4) nil 4) <P: 91> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 68> 9)
		endDefinition(7230)
lbl(7250)	unify(x(21) x(37))
lbl(7253)	definition(x(21) 7276 pid('List.partitionInd' 4 pos('./standard/List.oz' 533 4) nil 5) <P: 92> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 69> 11)
		endDefinition(7253)
lbl(7276)	unify(x(21) x(40))
lbl(7279)	definition(x(21) 7299 pid('List.takeWhileInd' 3 pos('./standard/List.oz' 537 4) nil 4) <P: 93> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 70> 9)
		endDefinition(7279)
lbl(7299)	unify(x(21) x(43))
lbl(7302)	definition(x(21) 7322 pid('List.dropWhileInd' 3 pos('./standard/List.oz' 541 4) nil 4) <P: 94> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 71> 9)
		endDefinition(7302)
lbl(7322)	unify(x(21) x(36))
lbl(7325)	definition(x(21) 7348 pid('List.takeDropWhileInd' 4 pos('./standard/List.oz' 545 4) nil 5) <P: 95> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 72> 11)
		endDefinition(7325)
lbl(7348)	unify(x(21) x(42))
		putConstant('IsProcedure' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(24)])
		putConstant('ProcedureArity' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(25)])
		putRecord(procedure [arity is] y(101))
		setValue(x(25))
		setValue(x(24))
lbl(7377)	definition(x(21) 7421 pid('HelpPlusOne' 3 pos('./standard/Loop.oz' 36 3) nil 4) <P: 96> nil)
		testLE(x(0) x(1) x(3) 7418)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 96> 7)
lbl(7418)	return
		endDefinition(7377)
lbl(7421)	definition(x(21) 7465 pid('HelpMinusOne' 3 pos('./standard/Loop.oz' 42 3) nil 4) <P: 97> nil)
		testLE(x(1) x(0) x(3) 7462)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 97> 7)
lbl(7462)	return
		endDefinition(7421)
lbl(7465)	definition(x(21) 7517 pid('HelpPlus' 4 pos('./standard/Loop.oz' 47 3) nil 5) <P: 98> nil)
		testLE(x(0) x(1) x(4) 7514)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 98> 9)
lbl(7514)	return
		endDefinition(7465)
lbl(7517)	definition(x(21) 7569 pid('HelpMinus' 4 pos('./standard/Loop.oz' 52 3) nil 5) <P: 99> nil)
		testLE(x(1) x(0) x(4) 7566)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 99> 9)
lbl(7566)	return
		endDefinition(7517)
lbl(7569)	definition(x(21) 7611 pid('For' 4 pos('./standard/Loop.oz' 58 3) nil 6) <P: 100> nil)
		testNumber(x(2) 1 7585)
		move(x(3) x(2))
		genFastCall(<P: 96> 7)
lbl(7585)	testNumber(x(2) ~1 7595)
		move(x(3) x(2))
		genFastCall(<P: 97> 7)
lbl(7595)	putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 7606)
		genFastCall(<P: 98> 9)
lbl(7606)	genFastCall(<P: 99> 9)
		endDefinition(7569)
lbl(7611)	definition(x(23) 7671 pid('HelpPlusOne' 5 pos('./standard/Loop.oz' 71 3) nil 6) <P: 101> nil)
		testLE(x(0) x(1) x(5) 7665)
		allocateL5
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 101> 11)
lbl(7665)	unify(x(4) x(3))
		return
		endDefinition(7611)
lbl(7671)	definition(x(23) 7731 pid('HelpMinusOne' 5 pos('./standard/Loop.oz' 76 3) nil 6) <P: 102> nil)
		testLE(x(1) x(0) x(5) 7725)
		allocateL5
		inlineMinus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 102> 11)
lbl(7725)	unify(x(4) x(3))
		return
		endDefinition(7671)
lbl(7731)	definition(x(23) 7797 pid('HelpPlus' 6 pos('./standard/Loop.oz' 81 3) nil 7) <P: 103> nil)
		testLE(x(0) x(1) x(6) 7791)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 103> 13)
lbl(7791)	unify(x(5) x(4))
		return
		endDefinition(7731)
lbl(7797)	definition(x(23) 7863 pid('HelpMinus' 6 pos('./standard/Loop.oz' 86 3) nil 7) <P: 104> nil)
		testLE(x(1) x(0) x(6) 7857)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 104> 13)
lbl(7857)	unify(x(5) x(4))
		return
		endDefinition(7797)
lbl(7863)	definition(x(23) 7917 pid('ForThread' 6 pos('./standard/Loop.oz' 92 3) nil 8) <P: 105> nil)
		testNumber(x(2) 1 7885)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 101> 11)
lbl(7885)	testNumber(x(2) ~1 7901)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 102> 11)
lbl(7901)	putConstant(0 x(6))
		testLT(x(6) x(2) x(7) 7912)
		genFastCall(<P: 103> 13)
lbl(7912)	genFastCall(<P: 104> 13)
		endDefinition(7863)
lbl(7917)	definition(x(26) 8016 pid('MultiFor' 2 pos('./standard/Loop.oz' 103 3) nil 4) <P: 106> nil)
		createVariable(x(2))
lbl(7925)	definition(x(3) 8005 pid('Help' 2 pos('./standard/Loop.oz' 104 6) nil 6) unit [x(1) x(2)])
		match(x(0) ht(7990 [onScalar(nil 7934) onRecord('|' 2 7951)]))
lbl(7934)	allocateL1
		move(x(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(7951)	getVarVar(x(4) x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyVariable(x(2))
lbl(7964)	definition(x(3) 7984 pid('' 1 pos('./standard/Loop.oz' 107 24) nil 2) unit [x(1) g(1) x(5)])
		putList(x(1))
		setValue(x(0))
		setValue(g(0))
		move(g(2) x(0))
		tailCall(g(1) 2)
		endDefinition(7964)
lbl(7984)	move(x(4) x(1))
		genFastCall(<P: 100> 9)
lbl(7990)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(108)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(7925)
lbl(8005)	unify(x(3) x(2))
		putConstant(nil x(1))
		tailCall(x(2) 2)
		endDefinition(7917)
lbl(8016)	definition(x(28) 8146 pid('MultiForThread' 4 pos('./standard/Loop.oz' 114 3) nil 6) <P: 107> nil)
		createVariable(x(4))
lbl(8024)	definition(x(5) 8135 pid('Help' 4 pos('./standard/Loop.oz' 115 6) nil 10) unit [x(1) x(4)])
		match(x(0) ht(8120 [onScalar(nil 8033) onRecord('|' 2 8060)]))
lbl(8033)	allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailCall(g(0) 3)
lbl(8060)	getVarVar(x(6) x(7))
		getRecord('#' 3 x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		unifyVariable(x(8))
lbl(8073)	definition(x(9) 8102 pid('' 3 pos('./standard/Loop.oz' 119 6) nil 5) unit [x(1) g(1) x(7)])
		putList(x(4))
		setValue(x(1))
		setValue(g(0))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(2) x(0))
		move(x(4) x(1))
		tailCall(g(1) 4)
		endDefinition(8073)
lbl(8102)	move(x(6) x(1))
		move(x(2) x(4))
		move(x(8) x(2))
		move(x(3) x(5))
		move(x(9) x(3))
		genFastCall(<P: 105> 13)
lbl(8120)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(120)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8024)
lbl(8135)	unify(x(5) x(4))
		putConstant(nil x(1))
		tailCall(x(4) 4)
		endDefinition(8016)
lbl(8146)	putRecord(loop [for forThread multiFor multiForThread] y(102))
		setValue(x(21))
		setValue(x(23))
		setValue(x(26))
		setValue(x(28))
		putConstant('NewDictionary' x(26))
		putConstant(1 x(28))
		callBI(builtin [x(26) x(28)]#[x(29)])
		putConstant('IsDictionary' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(34)])
		putConstant('Dictionary.entries' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(35)])
		putRecord(dictionary [clone condGet entries get is items keys member new put remove removeAll toRecord] y(103))
		setVariable(x(26))
		setVariable(x(28))
		setValue(x(35))
		setVariable(x(36))
		setValue(x(34))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setValue(x(29))
		setVariable(x(40))
		setVariable(x(41))
		setVariable(x(42))
		setVariable(y(104))
		putConstant('Dictionary.put' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(40))
		putConstant('Dictionary.get' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(36))
		putConstant('Dictionary.condGet' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(28))
		putConstant('Dictionary.keys' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(38))
		putConstant('Dictionary.items' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(37))
		putConstant('Dictionary.remove' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(41))
		putConstant('Dictionary.removeAll' x(43))
		putConstant(1 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(42))
		putConstant('Dictionary.clone' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(26))
		putConstant('Dictionary.member' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(39))
lbl(8323)	definition(x(43) 8341 pid('Dictionary.toRecord' 3 pos('./standard/Dictionary.oz' 51 21) nil 4) <P: 108> nil)
		callBI('Dictionary.entries' [x(1)]#[x(3)])
		callBI(record [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
		endDefinition(8323)
lbl(8341)	unify(x(43) y(104))
		putConstant('Arity' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		putConstant('IsRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(46)])
		putConstant('Label' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(83))
		putConstant('Width' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(81))
		putConstant('Adjoin' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(82))
		putConstant('AdjoinList' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		putConstant('AdjoinAt' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(48)])
		putConstant('IsRecordC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(49)])
		putConstant('WidthC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(50)])
		putConstant('TellRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(51)])
lbl(8443)	definition(x(43) 8494 pid('MakeEmpty' 2 pos('./standard/Record.oz' 45 3) nil 4) <P: 109> nil)
		match(x(0) ht(8479 [onScalar(nil 8452) onRecord('|' 2 8456)]))
lbl(8452)	getLiteral(nil x(1))
		return
lbl(8456)	getVarVar(x(2) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('#' 2 x(1))
		unifyValue(x(2))
		unifyVoid(1)
		move(x(3) x(1))
		genFastCall(<P: 109> 5)
lbl(8479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(48)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8443)
lbl(8494)	definition(x(43) 8530 pid('MakeRecord' 3 pos('./standard/Record.oz' 51 3) nil 3) <P: 110> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 109> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(8494)
lbl(8530)	createVariable(y(105))
lbl(8532)	definition(x(44) 8606 pid('DescendArity' 2 pos('./standard/Record.oz' 61 3) nil 6) <P: 111> [y(105)])
		match(x(0) ht(8591 [onScalar(nil 8541) onRecord('|' 2 8542)]))
lbl(8541)	return
lbl(8542)	getVarVar(x(2) x(3))
		testList(x(1) 8570)
lbl(8548)	getVarVar(x(1) x(4))
		testBI('==' [x(2) x(1)]#[x(5)] 8564)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8564)	move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8570)	move(g(0) x(0))
		inlineDot(x(0) raiseError x(3) cache)
		move(x(2) x(1))
		putConstant(arityMismatchDefaultMethod x(0))
		tailSendMsg(object x(3) 2 cache)
lbl(8591)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(70)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8532)
lbl(8606)	definition(x(44) 8629 pid('AritySublist' 2 pos('./standard/Record.oz' 73 3) nil 4) <P: 112> nil)
		callBI('Arity' [x(0)]#[x(2)])
		callBI('Arity' [x(1)]#[x(3)])
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 111> 5)
		endDefinition(8606)
lbl(8629)	moveMoveXYXY(x(0) y(106) x(1) y(107))
		moveMoveXYXY(x(2) y(108) x(3) y(109))
		moveMoveXYXY(x(4) y(110) x(5) y(111))
		moveMoveXYXY(x(6) y(112) x(7) y(113))
		moveMoveXYXY(x(8) y(114) x(10) y(115))
		moveMoveXYXY(x(9) y(116) x(11) y(117))
		moveMoveXYXY(x(12) y(118) x(13) y(119))
		moveMoveXYXY(x(15) y(120) x(16) y(121))
		moveMoveXYXY(x(14) y(122) x(17) y(123))
		moveMoveXYXY(x(19) y(124) x(20) y(125))
		moveMoveXYXY(x(18) y(126) x(24) y(127))
		moveMoveXYXY(x(25) y(128) x(21) y(129))
		moveMoveXYXY(x(23) y(130) x(34) y(131))
		moveMoveXYXY(x(29) y(132) x(46) y(133))
		moveMoveXYXY(x(43) y(134) x(45) y(135))
		moveMoveXYXY(x(47) y(136) x(48) y(137))
		moveMoveXYXY(x(49) y(138) x(50) y(139))
		moveMoveXYXY(x(51) y(140) x(22) y(141))
		moveMoveXYXY(x(27) y(142) x(30) y(143))
		moveMoveXYXY(x(31) y(144) x(32) y(145))
		moveMoveXYXY(x(33) y(146) x(35) y(147))
		moveMoveXYXY(x(40) y(148) x(36) y(149))
		moveMoveXYXY(x(28) y(150) x(38) y(151))
		moveMoveXYXY(x(37) y(152) x(41) y(153))
		moveMoveXYXY(x(42) y(154) x(26) y(155))
		moveMoveXYXY(x(39) y(156) x(44) y(157))
		move(y(81) x(1))
		putConstant(width x(0))
		genFastCall(<P: 1> 4)
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('^' x(0))
		genFastCall(<P: 1> 4)
		putConstant(tellRecordSize x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(tellRecordSize x(0))
		genFastCall(<P: 1> 4)
		move(y(157) x(1))
		putConstant(aritySublist x(0))
		genFastCall(<P: 1> 4)
		putConstant(monitorArity x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(8816)	definition(x(2) 8845 pid('MonitorArity' 3 pos('./standard/Record.oz' 91 6) nil 4) <P: 113> nil)
		createVariable(x(3))
		callBI(monitorArity [x(0) x(3) x(2)]#nil)
lbl(8827)	definition(x(0) 8839 pid('P' 0 pos('./standard/Record.oz' 94 2) nil 0) unit [x(3)])
		getLiteral(unit g(0))
		return
		endDefinition(8827)
lbl(8839)	unify(x(0) x(1))
		return
		endDefinition(8816)
lbl(8845)	definition(x(0) 8860 pid('ReflectArity' 2 pos('./standard/Record.oz' 97 6) nil 3) <P: 114> nil)
		putConstant(unit x(2))
		callBI(monitorArity [x(0) x(2) x(1)]#nil)
		return
		endDefinition(8845)
lbl(8860)	definition(x(3) 8919 pid('MakePairs' 3 pos('./standard/Record.oz' 102 3) nil 6) <P: 115> nil)
		match(x(0) ht(8904 [onScalar(nil 8869) onRecord('|' 2 8873)]))
lbl(8869)	getLiteral(nil x(2))
		return
lbl(8873)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 115> 7)
lbl(8904)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(105)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8860)
lbl(8919)	definition(x(3) 8975 pid('Subtract' 3 pos('./standard/Record.oz' 108 3) nil 5) <P: 116> [y(141)])
		allocateL5
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 47> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 115> 6)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(8919)
lbl(8975)	definition(x(4) 9051 pid('Map' 4 pos('./standard/Record.oz' 115 3) nil 5) <P: 117> nil)
		match(x(0) ht(9036 [onScalar(nil 8984) onRecord('|' 2 8988)]))
lbl(8984)	getLiteral(nil x(3))
		return
lbl(8988)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 117> 9)
lbl(9036)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8975)
lbl(9051)	definition(x(4) 9117 pid('MapT' 5 pos('./standard/Record.oz' 121 3) nil 7) <P: 118> nil)
		testLE(x(0) x(1) x(5) 9114)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 118> 11)
lbl(9114)	return
		endDefinition(9051)
lbl(9117)	definition(x(4) 9189 pid('FoldL' 5 pos('./standard/Record.oz' 127 3) nil 6) <P: 119> nil)
		match(x(0) ht(9174 [onScalar(nil 9126) onRecord('|' 2 9130)]))
lbl(9126)	unify(x(4) x(3))
		return
lbl(9130)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 119> 11)
lbl(9174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(130)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9117)
lbl(9189)	definition(x(4) 9265 pid('FoldLT' 6 pos('./standard/Record.oz' 133 3) nil 8) <P: 120> nil)
		testLT(x(0) x(1) x(6) 9251)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(x(7) x(1))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 120> 13)
lbl(9251)	callBI('.' [x(2) x(0)]#[x(1)])
		move(x(4) x(0))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9189)
lbl(9265)	definition(x(4) 9331 pid('FoldR' 5 pos('./standard/Record.oz' 139 3) nil 7) <P: 121> nil)
		match(x(0) ht(9316 [onScalar(nil 9274) onRecord('|' 2 9278)]))
lbl(9274)	unify(x(4) x(3))
		return
lbl(9278)	allocateL4
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(6) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 121> 10)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9265)
lbl(9331)	definition(x(4) 9397 pid('FoldRT' 6 pos('./standard/Record.oz' 145 3) nil 8) <P: 122> nil)
		testLT(x(0) x(1) x(6) 9380)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		move(x(6) y(2))
		move(x(7) x(0))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 122> 12)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9380)	callBI('.' [x(2) x(0)]#[x(6)])
		move(x(6) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9331)
lbl(9397)	definition(x(4) 9452 pid('ForAll' 3 pos('./standard/Record.oz' 151 3) nil 4) <P: 123> nil)
		match(x(0) ht(9437 [onScalar(nil 9406) onRecord('|' 2 9407)]))
lbl(9406)	return
lbl(9407)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		call(y(2) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 123> 7)
lbl(9437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(154)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9397)
lbl(9452)	definition(x(4) 9507 pid('ForAllT' 4 pos('./standard/Record.oz' 157 3) nil 5) <P: 124> nil)
		testLE(x(0) x(1) x(4) 9504)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		call(y(3) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 124> 9)
lbl(9504)	return
		endDefinition(9452)
lbl(9507)	definition(x(4) 9593 pid('All' 4 pos('./standard/Record.oz' 163 3) nil 5) <P: 125> nil)
		match(x(0) ht(9578 [onScalar(nil 9516) onRecord('|' 2 9520)]))
lbl(9516)	getLiteral(true x(3))
		return
lbl(9520)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9562 9567)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 125> 9)
lbl(9562)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(9567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(165)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9578)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9507)
lbl(9593)	definition(x(4) 9679 pid('AllT' 5 pos('./standard/Record.oz' 169 3) nil 6) <P: 126> nil)
		testLE(x(0) x(1) x(5) 9673)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9657 9662)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 126> 11)
lbl(9657)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(9662)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9673)	getLiteral(true x(4))
		return
		endDefinition(9593)
lbl(9679)	definition(x(4) 9765 pid('Some' 4 pos('./standard/Record.oz' 175 3) nil 5) <P: 127> nil)
		match(x(0) ht(9750 [onScalar(nil 9688) onRecord('|' 2 9692)]))
lbl(9688)	getLiteral(false x(3))
		return
lbl(9692)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9725 9739)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(9725)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 127> 9)
lbl(9739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(177)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9750)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9679)
lbl(9765)	definition(x(4) 9851 pid('SomeT' 5 pos('./standard/Record.oz' 181 3) nil 6) <P: 128> nil)
		testLE(x(0) x(1) x(5) 9845)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9811 9834)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(9811)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 128> 11)
lbl(9834)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9845)	getLiteral(false x(4))
		return
		endDefinition(9765)
lbl(9851)	definition(x(4) 9962 pid('Filter' 4 pos('./standard/Record.oz' 185 3) nil 5) <P: 129> nil)
		match(x(0) ht(9947 [onScalar(nil 9860) onRecord('|' 2 9864)]))
lbl(9860)	getLiteral(nil x(3))
		return
lbl(9864)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 9922 9936)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9922)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9947)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(191)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9851)
lbl(9962)	definition(x(4) 10095 pid('Part' 5 pos('./standard/Record.oz' 194 3) nil 6) <P: 130> nil)
		match(x(0) ht(10080 [onScalar(nil 9971) onRecord('|' 2 9978)]))
lbl(9971)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(9978)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(2) 2)
		testBool(y(7) 10041 10069)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10041)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(197)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10080)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(200)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9962)
lbl(10095)	definition(x(4) 10197 pid('Take' 4 pos('./standard/Record.oz' 203 3) nil 5) <P: 131> nil)
		match(x(0) ht(10182 [onScalar(nil 10104) onRecord('|' 2 10108)]))
lbl(10104)	getLiteral(nil x(3))
		return
lbl(10108)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10166 10171)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 131> 9)
lbl(10166)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10182)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10095)
lbl(10197)	definition(x(4) 10299 pid('Drop' 4 pos('./standard/Record.oz' 210 3) nil 5) <P: 132> nil)
		match(x(0) ht(10284 [onScalar(nil 10206) onRecord('|' 2 10210)]))
lbl(10206)	getLiteral(nil x(3))
		return
lbl(10210)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10247 10273)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10247)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 132> 9)
lbl(10273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(213)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10284)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(214)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10197)
lbl(10299)	definition(x(4) 10421 pid('TakeDrop' 5 pos('./standard/Record.oz' 217 3) nil 7) <P: 133> nil)
		match(x(0) ht(10406 [onScalar(nil 10308) onRecord('|' 2 10315)]))
lbl(10308)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(10315)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(3) 2)
		testBool(y(8) 10380 10395)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 133> 11)
lbl(10380)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(10395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(220)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(223)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10299)
lbl(10421)	definition(x(4) 10497 pid('MapInd' 4 pos('./standard/Record.oz' 229 3) nil 5) <P: 134> nil)
		match(x(0) ht(10482 [onScalar(nil 10430) onRecord('|' 2 10434)]))
lbl(10430)	getLiteral(nil x(3))
		return
lbl(10434)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(1))
		move(x(4) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 134> 9)
lbl(10482)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(232)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10421)
lbl(10497)	definition(x(4) 10563 pid('MapIndT' 5 pos('./standard/Record.oz' 235 3) nil 7) <P: 135> nil)
		testLE(x(0) x(1) x(5) 10560)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		move(x(6) x(2))
		call(y(3) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 135> 11)
lbl(10560)	return
		endDefinition(10497)
lbl(10563)	definition(x(4) 10635 pid('FoldLInd' 5 pos('./standard/Record.oz' 241 3) nil 6) <P: 136> nil)
		match(x(0) ht(10620 [onScalar(nil 10572) onRecord('|' 2 10576)]))
lbl(10572)	unify(x(4) x(3))
		return
lbl(10576)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 136> 11)
lbl(10620)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(244)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10563)
lbl(10635)	definition(x(4) 10703 pid('FoldLIndT' 6 pos('./standard/Record.oz' 247 3) nil 8) <P: 137> nil)
		testLE(x(0) x(1) x(6) 10697)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 137> 13)
lbl(10697)	unify(x(5) x(4))
		return
		endDefinition(10635)
lbl(10703)	definition(x(4) 10774 pid('FoldRInd' 5 pos('./standard/Record.oz' 253 3) nil 7) <P: 138> nil)
		match(x(0) ht(10759 [onScalar(nil 10712) onRecord('|' 2 10716)]))
lbl(10712)	unify(x(4) x(3))
		return
lbl(10716)	allocateL5
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		moveMoveXYXY(x(0) y(2) x(6) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 138> 10)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(1) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10759)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10703)
lbl(10774)	definition(x(4) 10834 pid('FoldRIndT' 6 pos('./standard/Record.oz' 259 3) nil 8) <P: 139> nil)
		testLE(x(0) x(1) x(6) 10828)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(7) x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<P: 139> 12)
		moveMoveYXYX(y(1) x(4) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(2) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10828)	unify(x(5) x(4))
		return
		endDefinition(10774)
lbl(10834)	definition(x(4) 10889 pid('ForAllInd' 3 pos('./standard/Record.oz' 265 3) nil 4) <P: 140> nil)
		match(x(0) ht(10874 [onScalar(nil 10843) onRecord('|' 2 10844)]))
lbl(10843)	return
lbl(10844)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 140> 7)
lbl(10874)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(268)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10834)
lbl(10889)	definition(x(4) 10944 pid('ForAllIndT' 4 pos('./standard/Record.oz' 271 3) nil 5) <P: 141> nil)
		testLE(x(0) x(1) x(4) 10941)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 141> 9)
lbl(10941)	return
		endDefinition(10889)
lbl(10944)	definition(x(4) 11030 pid('AllInd' 4 pos('./standard/Record.oz' 277 3) nil 5) <P: 142> nil)
		match(x(0) ht(11015 [onScalar(nil 10953) onRecord('|' 2 10957)]))
lbl(10953)	getLiteral(true x(3))
		return
lbl(10957)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 10999 11004)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 142> 9)
lbl(10999)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(11004)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(279)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11015)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(280)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10944)
lbl(11030)	definition(x(4) 11116 pid('AllIndT' 5 pos('./standard/Record.oz' 283 3) nil 6) <P: 143> nil)
		testLE(x(0) x(1) x(5) 11110)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11094 11099)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 143> 11)
lbl(11094)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(11099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11110)	getLiteral(true x(4))
		return
		endDefinition(11030)
lbl(11116)	definition(x(4) 11202 pid('SomeInd' 4 pos('./standard/Record.oz' 289 3) nil 5) <P: 144> nil)
		match(x(0) ht(11187 [onScalar(nil 11125) onRecord('|' 2 11129)]))
lbl(11125)	getLiteral(false x(3))
		return
lbl(11129)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 11162 11176)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(11162)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 144> 9)
lbl(11176)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(291)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11187)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(292)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11116)
lbl(11202)	definition(x(4) 11288 pid('SomeIndT' 5 pos('./standard/Record.oz' 295 3) nil 6) <P: 145> nil)
		testLE(x(0) x(1) x(5) 11282)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11248 11271)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(11248)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 145> 11)
lbl(11271)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11282)	getLiteral(false x(4))
		return
		endDefinition(11202)
lbl(11288)	definition(x(4) 11399 pid('FilterInd' 4 pos('./standard/Record.oz' 299 3) nil 5) <P: 146> nil)
		match(x(0) ht(11384 [onScalar(nil 11297) onRecord('|' 2 11301)]))
lbl(11297)	getLiteral(nil x(3))
		return
lbl(11301)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11359 11373)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11359)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11373)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(305)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11288)
lbl(11399)	definition(x(4) 11532 pid('PartInd' 5 pos('./standard/Record.oz' 308 3) nil 6) <P: 147> nil)
		match(x(0) ht(11517 [onScalar(nil 11408) onRecord('|' 2 11415)]))
lbl(11408)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11415)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(1))
		createVariableMove(y(7) x(2))
		call(y(2) 3)
		testBool(y(7) 11478 11506)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11478)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11506)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(311)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11517)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(314)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11399)
lbl(11532)	definition(x(4) 11634 pid('TakeInd' 4 pos('./standard/Record.oz' 317 3) nil 5) <P: 148> nil)
		match(x(0) ht(11619 [onScalar(nil 11541) onRecord('|' 2 11545)]))
lbl(11541)	getLiteral(nil x(3))
		return
lbl(11545)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11603 11608)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 148> 9)
lbl(11603)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11608)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(320)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11619)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11532)
lbl(11634)	definition(x(4) 11736 pid('DropInd' 4 pos('./standard/Record.oz' 324 3) nil 5) <P: 149> nil)
		match(x(0) ht(11721 [onScalar(nil 11643) onRecord('|' 2 11647)]))
lbl(11643)	getLiteral(nil x(3))
		return
lbl(11647)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11684 11710)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11684)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 149> 9)
lbl(11710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11634)
lbl(11736)	definition(x(4) 11861 pid('TakeDropInd' 5 pos('./standard/Record.oz' 331 3) nil 7) <P: 150> nil)
		match(x(0) ht(11846 [onScalar(nil 11745) onRecord('|' 2 11752)]))
lbl(11745)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11752)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(6) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		call(y(3) 3)
		testBool(y(8) 11820 11835)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 150> 11)
lbl(11820)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(11835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(334)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(337)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11736)
lbl(11861)	definition(x(4) 11960 pid('Zip' 5 pos('./standard/Record.oz' 340 3) nil 7) <P: 151> nil)
		match(x(0) ht(11945 [onScalar(nil 11870) onRecord('|' 2 11874)]))
lbl(11870)	getLiteral(nil x(4))
		return
lbl(11874)	allocateL5
		getVarVar(x(0) y(0))
		testBI('HasFeature' [x(1) x(0)]#[x(5)] 11938)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 2 x(4))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		move(x(4) x(0))
		move(x(6) x(1))
		move(x(5) x(2))
		call(y(4) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11938)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11945)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11861)
lbl(11960)	definition(x(4) 12037 pid('ZipT' 6 pos('./standard/Record.oz' 349 3) nil 9) <P: 152> nil)
		testLE(x(0) x(1) x(6) 12034)
		allocateL6
		callBI('.' [x(5) x(0)]#[x(6)])
		callBI('.' [x(2) x(0)]#[x(7)])
		callBI('.' [x(3) x(0)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(6) x(2))
		call(y(4) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(6))
		move(x(6) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(12034)	return
		endDefinition(11960)
lbl(12037)	definition(x(4) 12089 pid('ToList' 3 pos('./standard/Record.oz' 354 3) nil 6) <P: 153> nil)
		match(x(0) ht(12074 [onScalar(nil 12046) onRecord('|' 2 12050)]))
lbl(12046)	getLiteral(nil x(2))
		return
lbl(12050)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 153> 7)
lbl(12074)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12037)
lbl(12089)	definition(x(4) 12130 pid('ToListT' 4 pos('./standard/Record.oz' 360 3) nil 6) <P: 154> nil)
		testLT(x(1) x(0) x(4) 12104)
		getLiteral(nil x(3))
		return
lbl(12104)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(3))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 154> 9)
		endDefinition(12089)
lbl(12130)	definition(x(4) 12189 pid('ToListInd' 3 pos('./standard/Record.oz' 364 3) nil 6) <P: 155> nil)
		match(x(0) ht(12174 [onScalar(nil 12139) onRecord('|' 2 12143)]))
lbl(12139)	getLiteral(nil x(2))
		return
lbl(12143)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 155> 7)
lbl(12174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(367)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12130)
lbl(12189)	definition(x(4) 12237 pid('ToListIndT' 4 pos('./standard/Record.oz' 370 3) nil 6) <P: 156> nil)
		testLT(x(1) x(0) x(4) 12204)
		getLiteral(nil x(3))
		return
lbl(12204)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 156> 9)
		endDefinition(12189)
lbl(12237)	definition(x(4) 12265 pid('TupleToDictionary' 3 pos('./standard/Record.oz' 374 3) nil 4) <P: 157> [y(148)])
		testNumber(x(0) 0 12248)
		return
lbl(12248)	callBI('.' [x(1) x(0)]#[x(3)])
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
		endDefinition(12237)
lbl(12265)	definition(x(4) 12305 pid('RecordToDictionary' 3 pos('./standard/Record.oz' 380 3) nil 5) <P: 158> [y(148)])
		match(x(0) ht(12290 [onScalar(nil 12274) onRecord('|' 2 12275)]))
lbl(12274)	return
lbl(12275)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
lbl(12290)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(384)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12265)
lbl(12305)	putRecord(record ['^' adjoin adjoinAt adjoinList all allInd arity dropWhile dropWhileInd filter filterInd foldL foldLInd foldR foldRInd forAll forAllInd hasLabel is isC label make map mapInd monitorArity partition partitionInd reflectArity some someInd subtract takeDropWhile takeDropWhileInd takeWhile takeWhileInd tell toDictionary toList toListInd width widthC zip] y(141))
		setVariable(x(1))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setVariable(y(157))
		setVariable(x(4))
		setValue(y(135))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setVariable(y(158))
		setVariable(x(8))
		setVariable(y(159))
		setVariable(y(160))
		setVariable(x(9))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(x(10))
		setValue(y(133))
		setValue(y(138))
		setValue(y(83))
		setValue(y(134))
		setVariable(y(163))
		setVariable(y(164))
		setValue(x(2))
		setVariable(x(11))
		setVariable(x(12))
		setValue(x(0))
		setVariable(x(13))
		setVariable(x(14))
		setValue(x(3))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setValue(y(140))
		setVariable(x(19))
		setVariable(y(165))
		setVariable(y(166))
		setValue(y(81))
		setValue(y(139))
		setVariable(x(20))
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		unify(x(21) x(1))
		putConstant(hasLabel x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(10))
lbl(12417)	definition(x(1) 12462 pid('Record.toList' 2 pos('./standard/Record.oz' 411 8) nil 5) <P: 159> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12445)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 154> 9)
lbl(12445)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 153> 7)
		endDefinition(12417)
lbl(12462)	unify(x(1) y(165))
lbl(12465)	definition(x(1) 12510 pid('Record.toListInd' 2 pos('./standard/Record.oz' 417 8) nil 5) <P: 160> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12493)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 156> 9)
lbl(12493)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 155> 7)
		endDefinition(12465)
lbl(12510)	unify(x(1) y(166))
lbl(12513)	definition(x(1) 12598 pid('Record.map' 3 pos('./standard/Record.oz' 424 8) nil 6) <P: 161> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12556)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 118> 11)
lbl(12556)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 117> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12513)
lbl(12598)	unify(x(1) y(163))
lbl(12601)	definition(x(1) 12666 pid('Record.foldL' 4 pos('./standard/Record.oz' 434 8) nil 7) <P: 162> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12643)
		testBI('IsLiteral' [x(0)]#[x(4)] 12619)
		unify(x(3) x(2))
		return
lbl(12619)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 120> 13)
lbl(12643)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 119> 11)
		endDefinition(12601)
lbl(12666)	unify(x(1) x(8))
lbl(12669)	definition(x(1) 12734 pid('Record.foldR' 4 pos('./standard/Record.oz' 443 8) nil 7) <P: 163> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12711)
		testBI('IsLiteral' [x(0)]#[x(4)] 12687)
		unify(x(3) x(2))
		return
lbl(12687)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 122> 13)
lbl(12711)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 121> 11)
		endDefinition(12669)
lbl(12734)	unify(x(1) y(160))
lbl(12737)	definition(x(1) 12782 pid('Record.forAll' 2 pos('./standard/Record.oz' 452 8) nil 5) <P: 164> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12765)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 124> 9)
lbl(12765)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 123> 7)
		endDefinition(12737)
lbl(12782)	unify(x(1) y(161))
lbl(12785)	definition(x(1) 12836 pid('Record.all' 3 pos('./standard/Record.oz' 458 8) nil 6) <P: 165> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12816)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 126> 11)
lbl(12816)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 125> 9)
		endDefinition(12785)
lbl(12836)	unify(x(1) y(157))
lbl(12839)	definition(x(1) 12890 pid('Record.some' 3 pos('./standard/Record.oz' 464 8) nil 6) <P: 166> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12870)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 128> 11)
lbl(12870)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 127> 9)
		endDefinition(12839)
lbl(12890)	unify(x(1) x(13))
lbl(12893)	definition(x(1) 12941 pid('Record.filter' 3 pos('./standard/Record.oz' 470 8) nil 5) <P: 167> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 129> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12893)
lbl(12941)	unify(x(1) x(7))
lbl(12944)	definition(x(1) 13007 pid('Record.partition' 4 pos('./standard/Record.oz' 474 8) nil 6) <P: 168> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 130> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(12944)
lbl(13007)	unify(x(1) x(11))
lbl(13010)	definition(x(1) 13058 pid('Record.takeWhile' 3 pos('./standard/Record.oz' 482 8) nil 5) <P: 169> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 131> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13010)
lbl(13058)	unify(x(1) x(17))
lbl(13061)	definition(x(1) 13109 pid('Record.dropWhile' 3 pos('./standard/Record.oz' 486 8) nil 5) <P: 170> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 132> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13061)
lbl(13109)	unify(x(1) x(5))
lbl(13112)	definition(x(1) 13175 pid('Record.takeDropWhile' 4 pos('./standard/Record.oz' 490 8) nil 6) <P: 171> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 133> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13112)
lbl(13175)	unify(x(1) x(15))
lbl(13178)	definition(x(1) 13263 pid('Record.mapInd' 3 pos('./standard/Record.oz' 499 8) nil 6) <P: 172> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13221)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 135> 11)
lbl(13221)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 134> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13178)
lbl(13263)	unify(x(1) y(164))
lbl(13266)	definition(x(1) 13331 pid('Record.foldLInd' 4 pos('./standard/Record.oz' 510 8) nil 7) <P: 173> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13308)
		testBI('IsLiteral' [x(0)]#[x(4)] 13284)
		unify(x(3) x(2))
		return
lbl(13284)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 137> 13)
lbl(13308)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 136> 11)
		endDefinition(13266)
lbl(13331)	unify(x(1) y(159))
lbl(13334)	definition(x(1) 13399 pid('Record.foldRInd' 4 pos('./standard/Record.oz' 519 8) nil 7) <P: 174> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13376)
		testBI('IsLiteral' [x(0)]#[x(4)] 13352)
		unify(x(3) x(2))
		return
lbl(13352)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 139> 13)
lbl(13376)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 138> 11)
		endDefinition(13334)
lbl(13399)	unify(x(1) x(9))
lbl(13402)	definition(x(1) 13447 pid('Record.forAllInd' 2 pos('./standard/Record.oz' 528 8) nil 5) <P: 175> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 13430)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 141> 9)
lbl(13430)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 140> 7)
		endDefinition(13402)
lbl(13447)	unify(x(1) y(162))
lbl(13450)	definition(x(1) 13501 pid('Record.allInd' 3 pos('./standard/Record.oz' 534 8) nil 6) <P: 176> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13481)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 143> 11)
lbl(13481)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 142> 9)
		endDefinition(13450)
lbl(13501)	unify(x(1) x(4))
lbl(13504)	definition(x(1) 13555 pid('Record.someInd' 3 pos('./standard/Record.oz' 540 8) nil 6) <P: 177> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13535)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 145> 11)
lbl(13535)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 144> 9)
		endDefinition(13504)
lbl(13555)	unify(x(1) x(14))
lbl(13558)	definition(x(1) 13606 pid('Record.filterInd' 3 pos('./standard/Record.oz' 546 8) nil 5) <P: 178> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 146> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13558)
lbl(13606)	unify(x(1) y(158))
lbl(13609)	definition(x(1) 13672 pid('Record.partitionInd' 4 pos('./standard/Record.oz' 550 8) nil 6) <P: 179> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 147> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13609)
lbl(13672)	unify(x(1) x(12))
lbl(13675)	definition(x(1) 13723 pid('Record.takeWhileInd' 3 pos('./standard/Record.oz' 558 8) nil 5) <P: 180> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 148> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13675)
lbl(13723)	unify(x(1) x(18))
lbl(13726)	definition(x(1) 13774 pid('Record.dropWhileInd' 3 pos('./standard/Record.oz' 562 8) nil 5) <P: 181> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 149> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13726)
lbl(13774)	unify(x(1) x(6))
lbl(13777)	definition(x(1) 13840 pid('Record.takeDropWhileInd' 4 pos('./standard/Record.oz' 566 8) nil 6) <P: 182> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 150> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13777)
lbl(13840)	unify(x(1) x(16))
lbl(13843)	definition(x(1) 13950 pid('Record.zip' 4 pos('./standard/Record.oz' 575 8) nil 7) <P: 183> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsTuple' [x(0)]#[x(4)] 13906)
lbl(13864)	testBI('IsTuple' [x(1)]#[x(4)] 13906)
lbl(13868)	callBI('Width' [x(0)]#[x(4)])
		callBI('Width' [x(1)]#[x(5)])
		callBI('Min' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(6)]#[x(5)])
		unify(x(5) y(3))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(1 x(0))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(13906)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		callBI('Arity' [x(0)]#[x(5)])
		move(x(1) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 151> 10)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL6
		return
		endDefinition(13843)
lbl(13950)	unify(x(1) x(20))
lbl(13953)	definition(x(1) 14001 pid('Record.toDictionary' 2 pos('./standard/Record.oz' 586 8) nil 4) <P: 184> [y(132)])
		callBI('NewDictionary' nil#[x(2)])
		unify(x(2) x(1))
		testBI('IsTuple' [x(0)]#[x(2)] 13984)
		callBI('Width' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
lbl(13984)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
		endDefinition(13953)
lbl(14001)	unify(x(1) x(19))
		putConstant('NewChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(14022)	definition(x(2) 14072 pid('ChunkSelectFeature' 3 pos('./standard/Chunk.oz' 42 3) nil 5) <P: 185> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14039)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14039)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkSelectFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14022)
lbl(14072)	definition(x(3) 14122 pid('ChunkHasFeature' 3 pos('./standard/Chunk.oz' 47 3) nil 5) <P: 186> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14089)
		callBI('HasFeature' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14089)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkHasFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14072)
lbl(14122)	putRecord(chunk [hasFeature is new selectFeature] y(167))
		setValue(x(3))
		setValue(x(4))
		setValue(x(1))
		setValue(x(2))
		putConstant('IsVirtualString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(14143)	definition(x(2) 14214 pid('AllToString' 4 pos('./standard/VirtualString.oz' 35 6) nil 6) <P: 187> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14208)
		allocateL6
		inlineMinus1(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 188> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 187> 9)
lbl(14208)	unify(x(3) x(2))
		return
		endDefinition(14143)
lbl(14214)	definition(x(2) 14278 pid('SignOzToOS' 2 pos('./standard/VirtualString.oz' 40 6) nil 4) <P: 189> nil)
		match(x(0) ht(14263 [onScalar(nil 14223) onRecord('|' 2 14227)]))
lbl(14223)	getLiteral(nil x(1))
		return
lbl(14227)	allocateL2
		getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		testNumber(x(0) 126 14251)
lbl(14246)	getNumber(45 x(1))
		branch(14254)
lbl(14251)	unify(x(1) x(0))
lbl(14254)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 189> 5)
lbl(14263)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(44)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14214)
lbl(14278)	definition(x(2) 14404 pid('ToString' 2 pos('./standard/VirtualString.oz' 47 6) nil 5) <P: 188> [y(51) y(62) y(79) y(39)])
		callBI('Value.type' [x(0)]#[x(2)])
		match(x(2) ht(14389 [onScalar(int 14290) onScalar(float 14321) onScalar(atom 14330) onScalar(tuple 14348)]))
lbl(14290)	putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 14314)
		getList(x(1))
		unifyNumber(45)
		unifyVariable(x(1))
		callBI('Abs' [x(0)]#[x(2)])
		callBI('IntToString' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(14314)	callBI('IntToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14321)	callBI('FloatToString' [x(0)]#[x(2)])
		move(x(2) x(0))
		genFastCall(<P: 189> 5)
lbl(14330)	match(x(0) ht(14341 [onScalar('#' 14333) onScalar(nil 14337)]))
lbl(14333)	getLiteral(nil x(1))
		return
lbl(14337)	getLiteral(nil x(1))
		return
lbl(14341)	callBI('AtomToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14348)	callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(14376 [onScalar('#' 14354) onScalar('|' 14372)]))
lbl(14354)	callBI('Width' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 187> 9)
lbl(14372)	unify(x(1) x(0))
		return
lbl(14376)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14389)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14278)
lbl(14404)	definition(x(2) 14471 pid('ChangeSignAll' 4 pos('./standard/VirtualString.oz' 70 6) nil 6) <P: 190> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14468)
		allocateL4
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		move(y(2) x(1))
		move(x(4) x(2))
		genFastCall(<P: 191> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 190> 9)
lbl(14468)	return
		endDefinition(14404)
lbl(14471)	definition(x(2) 14533 pid('ChangeLast' 5 pos('./standard/VirtualString.oz' 78 6) nil 6) <P: 192> nil)
		match(x(0) ht(14518 [onScalar(nil 14480) onRecord('|' 2 14487)]))
lbl(14480)	getLiteral(nil x(3))
		unify(x(2) x(4))
		return
lbl(14487)	getVarVar(x(0) x(5))
		testNumber(x(0) 126 14508)
lbl(14494)	getLiteral(nil x(3))
		getRecord('#' 3 x(4))
		unifyValue(x(2))
		unifyValue(x(1))
		unifyValue(x(5))
		return
lbl(14508)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 192> 11)
lbl(14518)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(84)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14471)
lbl(14533)	definition(x(2) 14599 pid('ChangeSignFloat' 3 pos('./standard/VirtualString.oz' 87 6) nil 6) <P: 193> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 14580)
lbl(14551)	getVarVar(x(3) x(4))
		testNumber(x(3) 126 14580)
		getRecord('#' 2 y(2))
		unifyValVar(y(1) x(5))
		createVariable(x(2))
		move(x(4) x(0))
		move(x(2) x(3))
		move(x(5) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
lbl(14580)	createVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(x(2) x(3))
		move(y(2) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
		endDefinition(14533)
lbl(14599)	definition(x(2) 14723 pid('ChangeSign' 3 pos('./standard/VirtualString.oz' 93 6) nil 6) <P: 191> [y(51) y(79)])
		callBI('Value.type' [x(0)]#[x(3)])
		match(x(3) ht(14708 [onScalar(int 14611) onScalar(float 14637) onScalar(atom 14646) onScalar(tuple 14650)]))
lbl(14611)	putConstant(0 x(3))
		testLT(x(0) x(3) x(4) 14633)
		getRecord('#' 2 x(2))
		unifyValVar(x(1) x(2))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(14633)	unify(x(2) x(0))
		return
lbl(14637)	callBI('FloatToString' [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 193> 7)
lbl(14646)	unify(x(2) x(0))
		return
lbl(14650)	callBI('Label' [x(0)]#[x(3)])
		match(x(3) ht(14695 [onScalar('#' 14656) onScalar('|' 14691)]))
lbl(14656)	allocateL2
		callBI('Width' [x(0)]#[x(3)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		move(y(1) x(3))
		genFastCall(<P: 190> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(14691)	unify(x(2) x(0))
		return
lbl(14695)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(104)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14708)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(105)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14599)
lbl(14723)	putConstant(virtualStringLength x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(7)])
		putRecord(virtualString [changeSign is length toAtom toString] y(51))
		setValue(x(2))
		setValue(x(5))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
lbl(14746)	definition(x(2) 14768 pid('VirtualString.toString' 2 pos('./standard/VirtualString.oz' 114 17) nil 2) <P: 194> nil)
		match(x(0) ht(14763 [onScalar(nil 14755) onRecord('|' 2 14759)]))
lbl(14755)	getLiteral(nil x(1))
		return
lbl(14759)	unify(x(1) x(0))
		return
lbl(14763)	genFastCall(<P: 188> 5)
		endDefinition(14746)
lbl(14768)	unify(x(2) y(170))
lbl(14771)	definition(x(2) 14808 pid('VirtualString.toAtom' 2 pos('./standard/VirtualString.oz' 120 17) nil 3) <P: 195> nil)
		testBI('IsAtom' [x(0)]#[x(2)] 14785)
		unify(x(1) x(0))
		return
lbl(14785)	allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 188> 4)
		move(y(1) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(14771)
lbl(14808)	unify(x(2) y(169))
lbl(14811)	definition(x(2) 14835 pid('VirtualString.length' 2 pos('./standard/VirtualString.oz' 127 17) nil 6) <P: 196> nil)
		move(x(0) x(2))
		putConstant(0 x(4))
		move(x(4) x(3))
		callBI(virtualStringLength [x(2) x(3)]#[x(5)])
		unify(x(5) x(1))
		return
		endDefinition(14811)
lbl(14835)	unify(x(2) y(168))
		putConstant('NewArray' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('IsArray' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
lbl(14874)	definition(x(2) 14909 pid('ArrayToRecord' 3 pos('./standard/Array.oz' 34 3) nil 5) <P: 197> nil)
		callBI('.' [x(2) x(0)]#[x(3)])
		callBI('Get' [x(1) x(0)]#[x(4)])
		unify(x(4) x(3))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(4) 14906)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 197> 7)
lbl(14906)	return
		endDefinition(14874)
lbl(14909)	definition(x(2) 14938 pid('ArrayToArray' 4 pos('./standard/Array.oz' 37 3) nil 5) <P: 198> nil)
		testLT(x(1) x(0) x(4) 14921)
		return
lbl(14921)	callBI('Get' [x(2) x(0)]#[x(4)])
		callBI('Put' [x(3) x(0) x(4)]#nil)
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 198> 9)
		endDefinition(14909)
lbl(14938)	definition(x(2) 14986 pid('MakePairs' 4 pos('./standard/Array.oz' 43 3) nil 6) <P: 199> nil)
		testLT(x(1) x(0) x(4) 14953)
		getLiteral(nil x(3))
		return
lbl(14953)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('Get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 199> 9)
		endDefinition(14938)
lbl(14986)	putConstant('Array.low' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Array.high' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		getRecord(array [clone get high is low new put toRecord] y(84))
		unifyVariable(x(2))
		unifyValue(x(9))
		unifyValue(x(12))
		unifyValue(x(7))
		unifyValue(x(11))
		unifyValue(x(6))
		unifyValVar(x(8) x(3))
lbl(15023)	definition(x(13) 15072 pid('Array.clone' 2 pos('./standard/Array.oz' 58 13) nil 6) <P: 200> nil)
		allocateL2
		callBI('Array.low' [x(0)]#[x(2)])
		callBI('Array.high' [x(0)]#[x(3)])
		putConstant(unit x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(3) x(1))
		move(y(1) x(3))
		genFastCall(<P: 198> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15023)
lbl(15072)	unify(x(13) x(2))
lbl(15075)	definition(x(2) 15150 pid('Array.toRecord' 3 pos('./standard/Array.oz' 65 13) nil 5) <P: 201> nil)
		allocateL4
		callBI('Array.low' [x(1)]#[x(3)])
		callBI('Array.high' [x(1)]#[x(4)])
		move(x(2) y(0))
		createVariable(y(1))
		testNumber(x(3) 1 15114)
		callBI('MakeTuple' [x(0) x(4)]#[x(3)])
		unify(x(3) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<P: 197> 6)
		branch(15143)
lbl(15114)	move(x(0) y(2))
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 199> 8)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(15143)	unify(y(1) y(0))
		deAllocateL4
		return
		endDefinition(15075)
lbl(15150)	unify(x(2) x(3))
		putConstant('IsSpace' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putRecord(space ['ask' askVerbose clone commit inject is merge new] y(171))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setValue(x(13))
		setVariable(x(17))
		setVariable(x(18))
		putConstant('Space.new' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(18))
		putConstant('Space.ask' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('Space.askVerbose' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(3))
		putConstant('Space.clone' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(14))
		putConstant('Space.merge' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(17))
		putConstant('Space.inject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(16))
		putConstant('Space.commit' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(15))
		putConstant('IsObject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		putConstant('New' x(3))
		putConstant(3 x(20))
		callBI(builtin [x(3) x(20)]#[x(22)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
lbl(15302)	definition(x(3) 15376 pid('FbApply' 2 pos('./standard/Object.oz' 84 6) nil 6) <P: 202> [y(150)])
		inlineDot(x(0) <U: ooMeth> x(2) cache)
		callBI('Label' [x(1)]#[x(3)])
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15368)
lbl(15327)	putConstant(otherwise x(3))
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15359)
lbl(15340)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(2))
		setConstant(lookup)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(15359)	move(x(1) x(0))
		tailSendMsg(otherwise x(5) 1 cache)
lbl(15368)	move(x(1) x(0))
		tailCall(x(5) 1)
		endDefinition(15302)
lbl(15376)	putConstant(newObject x(20))
		putConstant(2 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
lbl(15385)	definition(x(20) 15413 pid('FbNew' 3 pos('./standard/Object.oz' 100 2) nil 4) <P: 203> nil)
		allocateL2
		callBI(newObject [x(0)]#[x(3)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		call(y(1) 1)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15385)
lbl(15413)	putRecord(fallback [apply new] x(23))
		setValue(x(3))
		setValue(x(20))
		putConstant(makeClass x(3))
		putConstant(7 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
		putConstant('Dictionary.markSafe' x(3))
		putConstant(1 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
lbl(15439)	definition(x(3) 15548 pid('InitMap' 5 pos('./standard/Object.oz' 118 6) nil 8) <P: 204> [y(156) y(148)])
		match(x(0) ht(15533 [onScalar(nil 15448) onRecord('|' 2 15452)]))
lbl(15448)	unify(x(4) x(3))
		return
lbl(15452)	allocateL5
		getVarVar(x(0) x(5))
		inlineDot(x(0) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		createVariable(y(4))
		testBI('Dictionary.member' [x(1) x(6)]#[x(7)] 15483)
		unify(y(4) x(3))
		branch(15516)
lbl(15483)	callBI('Dictionary.put' [x(1) x(6) x(0)]#nil)
		putConstant(nil x(7))
		callBI('Dictionary.put' [x(2) x(6) x(7)]#nil)
		inlineDot(x(0) <U: ooParents> x(6) cache)
		putList(x(7))
		setValue(x(0))
		setValue(x(3))
		move(x(6) x(0))
		move(x(7) x(3))
		move(y(4) x(4))
		genFastCall(<P: 204> 10)
lbl(15516)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 204> 11)
lbl(15533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15439)
lbl(15548)	definition(x(3) 15658 pid('AddIG' 3 pos('./standard/Object.oz' 132 6) nil 4) <P: 205> [y(149) y(148)])
		match(x(1) ht(15643 [onScalar(nil 15557) onRecord('|' 2 15558)]))
lbl(15557)	return
lbl(15558)	allocateL7
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(1) cache)
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(6))
		testBool(y(5) 15601 15609)
		unify(y(6) y(4))
		branch(15620)
lbl(15601)	getList(y(6))
		unifyValue(y(1))
		unifyValue(y(4))
		branch(15620)
lbl(15609)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(15620)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 205> 7)
lbl(15643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(141)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15548)
lbl(15658)	definition(x(3) 15720 pid('InitIG' 2 pos('./standard/Object.oz' 144 6) nil 4) <P: 206> nil)
		match(x(0) ht(15705 [onScalar(nil 15667) onRecord('|' 2 15668)]))
lbl(15667)	return
lbl(15668)	allocateL2
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(0) cache)
		inlineDot(x(3) <U: ooParents> x(3) cache)
		move(x(1) y(1))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<P: 205> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 206> 5)
lbl(15705)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(147)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15658)
lbl(15720)	definition(x(3) 15769 pid('Remove' 3 pos('./standard/Object.oz' 152 2) nil 5) <P: 207> nil)
		match(x(0) ht(15754 [onScalar(nil 15729) onRecord('|' 2 15733)]))
lbl(15729)	getLiteral(nil x(2))
		return
lbl(15733)	getVarVar(x(0) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 15744)
		unify(x(2) x(3))
		return
lbl(15744)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 207> 7)
lbl(15754)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(155)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15720)
lbl(15769)	definition(x(3) 15907 pid('RemoveBefore' 6 pos('./standard/Object.oz' 158 2) nil 7) <P: 208> [y(156) y(149) y(153) y(148)])
		match(x(0) ht(15892 [onScalar(nil 15778) onRecord('|' 2 15782)]))
lbl(15778)	unify(x(5) x(4))
		return
lbl(15782)	allocateL8
		getVarVar(x(0) y(0))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 15885)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(0) y(6))
		move(x(6) x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 207> 6)
		testLiteral(y(7) nil 15855)
lbl(15821)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(2) x(2))
		callBI('Dictionary.get' [x(2) x(1)]#[x(6)])
		putList(x(4))
		setValue(x(6))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15855)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		move(y(7) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15885)	move(y(0) x(0))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15892)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15769)
lbl(15907)	definition(x(3) 15986 pid('RemoveLeader' 6 pos('./standard/Object.oz' 176 2) nil 7) <P: 209> nil)
		match(x(0) ht(15971 [onScalar(nil 15916) onRecord('|' 2 15920)]))
lbl(15916)	unify(x(5) x(4))
		return
lbl(15920)	allocateL6
		getVarVar(x(6) y(0))
		inlineDot(x(6) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(5) y(4))
		move(y(1) x(0))
		move(x(6) x(1))
		createVariableMove(y(5) x(5))
		genFastCall(<P: 208> 12)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(5) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<P: 209> 13)
lbl(15971)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(182)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15907)
lbl(15986)	definition(x(3) 16110 pid('GetPairs' 3 pos('./standard/Object.oz' 185 2) nil 5) <P: 210> [y(147) y(149)])
		callBI('Dictionary.entries' [x(1)]#[x(4)])
lbl(15995)	definition(x(1) 16096 pid('' 3 pos('./standard/Object.oz' 188 6) nil 7) unit [g(1) x(0)])
		shallowGuard(16083)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(16011)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.get' [x(0) x(3)]#[x(5)])
lbl(16018)	definition(x(6) 16068 pid('' 3 pos('./standard/Object.oz' 191 12) nil 6) unit [g(0) g(1) x(5)])
		move(g(1) x(3))
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getList(x(2))
		unifyVariable(x(0))
		unifyValue(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(5))
		move(g(2) x(0))
		inlineDot(x(0) <U: ooPrintName> x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(4) <U: ooPrintName> x(1) cache)
		unify(x(1) x(5))
		return
		endDefinition(16018)
lbl(16068)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(6) x(1))
		genFastCall(<P: 32> 9)
lbl(16083)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15995)
lbl(16096)	move(x(4) x(0))
		move(x(2) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(15986)
lbl(16110)	definition(x(3) 16205 pid('Iterate' 4 pos('./standard/Object.oz' 199 2) nil 7) <P: 211> [y(151)])
		allocateL4
		callBI('Dictionary.keys' [x(2)]#[x(6)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(nil x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 209> 12)
		testLiteral(y(3) nil 16186)
lbl(16149)	move(y(1) x(0))
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		testLiteral(x(1) nil 16164)
		getLiteral(nil y(2))
		deAllocateL4
		return
lbl(16164)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 210> 6)
		putRecord(object 2 x(0))
		setConstant(order)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(16186)	getList(y(2))
		unifyValVar(y(3) x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 211> 9)
		endDefinition(16110)
lbl(16205)	definition(x(3) 16294 pid('Precedence' 2 pos('./standard/Object.oz' 209 6) nil 6) <P: 212> [y(132) y(153)])
		allocateL5
		callBI('NewDictionary' nil#[x(2)])
		callBI('NewDictionary' nil#[x(3)])
		putList(x(5))
		setValue(x(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		putConstant(nil x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 204> 10)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		genFastCall(<P: 206> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooId> x(1) cache)
		move(y(3) x(2))
		callBI('Dictionary.remove' [x(2) x(1)]#nil)
		putList(x(4))
		setValue(y(0))
		setConstant(nil)
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		deAllocateL5
		genFastCall(<P: 211> 9)
		endDefinition(16205)
lbl(16294)	definition(x(3) 16383 pid('SetOne' 4 pos('./standard/Object.oz' 227 6) nil 10) <P: 213> [y(148) y(153)])
		allocateL3
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(5) cache)
		putConstant(fast x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(8)])
		putConstant(default x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(9)])
		callBI('Dictionary.put' [x(1) x(4) x(5)]#nil)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(9) y(2))
		testLiteral(x(8) <N: NoArg> 16351)
		callBI('Dictionary.remove' [x(2) x(4)]#nil)
		branch(16354)
lbl(16351)	callBI('Dictionary.put' [x(2) x(4) x(8)]#nil)
lbl(16354)	testLiteral(y(2) <N: NoArg> 16368)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL3
		return
lbl(16368)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
		endDefinition(16294)
lbl(16383)	definition(x(3) 16450 pid('SetMethods' 5 pos('./standard/Object.oz' 243 6) nil 6) <P: 214> nil)
		testNumber(x(0) 0 16394)
		return
lbl(16394)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
		move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 214> 11)
		endDefinition(16383)
lbl(16450)	definition(x(3) 16529 pid('AddMethods' 5 pos('./standard/Object.oz' 256 2) nil 8) <P: 215> [y(156)])
		testNumber(x(0) 0 16461)
		return
lbl(16461)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		inlineDot(x(5) 1 x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('Dictionary.member' [x(2) x(6)]#[x(7)] 16490)
		branch(16504)
lbl(16490)	move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
lbl(16504)	move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 215> 11)
		endDefinition(16450)
lbl(16529)	definition(x(3) 16657 pid('SafeAdd' 7 pos('./standard/Object.oz' 266 2) nil 11) <P: 216> [y(156) y(149) y(148)])
		testNumber(x(0) 0 16540)
		return
lbl(16540)	allocateL7
		callBI('.' [x(1) x(0)]#[x(7)])
		inlineDot(x(7) 1 x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		testBI('Dictionary.member' [x(3) x(8)]#[x(9)] 16604)
		callBI('Dictionary.get' [x(3) x(8)]#[x(7)])
		inlineDot(x(2) <U: ooPrintName> x(9) cache)
		inlineDot(x(7) <U: ooPrintName> x(7) cache)
		putRecord(object 5 x(10))
		setConstant(sharing)
		setValue(x(9))
		setValue(x(7))
		setConstant(method)
		setValue(x(8))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(16604)	testBI('Dictionary.member' [x(4) x(8)]#[x(9)] 16610)
		branch(16627)
lbl(16610)	callBI('Dictionary.put' [x(3) x(8) x(2)]#nil)
		move(x(7) x(0))
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		move(y(6) x(3))
		genFastCall(<P: 213> 8)
lbl(16627)	move(y(0) x(0))
		inlineMinus1(x(0) x(7))
		move(x(7) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		deAllocateL7
		genFastCall(<P: 216> 15)
		endDefinition(16529)
lbl(16657)	definition(x(3) 16744 pid('SafeAddMethods' 5 pos('./standard/Object.oz' 285 2) nil 9) <P: 217> nil)
		match(x(0) ht(16729 [onScalar(nil 16666) onRecord('|' 2 16667)]))
lbl(16666)	return
lbl(16667)	allocateL5
		getVarVar(x(7) y(0))
		inlineDot(x(7) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) x(1))
		move(x(8) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		moveMoveYXYX(y(3) x(5) y(4) x(6))
		genFastCall(<P: 216> 14)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 217> 11)
lbl(16729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(290)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16657)
lbl(16744)	definition(x(3) 16852 pid('InheritMethods' 4 pos('./standard/Object.oz' 293 2) nil 7) <P: 218> [y(132)])
		match(x(0) ht(16837 [onScalar(nil 16753) onRecord('|' 2 16754)]))
lbl(16753)	return
lbl(16754)	allocateL4
		getVarVar(x(0) x(5))
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		testLiteral(x(4) nil 16806)
		inlineDot(x(6) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 215> 10)
		branch(16823)
lbl(16806)	callBI('NewDictionary' nil#[x(6)])
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 217> 10)
lbl(16823)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 218> 9)
lbl(16837)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(302)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16744)
lbl(16852)	definition(x(3) 16913 pid('AddOther' 3 pos('./standard/Object.oz' 312 6) nil 5) <P: 219> [y(156) y(148)])
		match(x(0) ht(16898 [onScalar(nil 16861) onRecord('|' 2 16862)]))
lbl(16861)	return
lbl(16862)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(4)] 16880)
		branch(16886)
lbl(16880)	callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
lbl(16886)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 219> 7)
lbl(16898)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(319)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16852)
lbl(16913)	definition(x(3) 17023 pid('SafeAdd' 5 pos('./standard/Object.oz' 322 6) nil 9) <P: 220> [y(156) y(149) y(148)])
		match(x(0) ht(17008 [onScalar(nil 16922) onRecord('|' 2 16923)]))
lbl(16922)	return
lbl(16923)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 16976)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		inlineDot(x(2) <U: ooPrintName> x(7) cache)
		inlineDot(x(6) <U: ooPrintName> x(6) cache)
		putRecord(object 5 x(8))
		setConstant(sharing)
		setValue(x(7))
		setValue(x(6))
		setConstant('feature or attribute')
		setValue(x(0))
		callBI('Exception.raiseError' [x(8)]#nil)
lbl(16976)	testBI('Dictionary.member' [x(4) x(0)]#[x(6)] 16982)
		branch(16991)
lbl(16982)	callBI('.' [x(1) x(0)]#[x(6)])
		callBI('Dictionary.put' [x(4) x(0) x(6)]#nil)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
lbl(16991)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 220> 11)
lbl(17008)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(338)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16913)
lbl(17023)	definition(x(3) 17097 pid('SafeAddOther' 4 pos('./standard/Object.oz' 341 6) nil 6) <P: 221> nil)
		match(x(0) ht(17082 [onScalar(nil 17032) onRecord('|' 2 17033)]))
lbl(17032)	return
lbl(17033)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		callBI('Arity' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		genFastCall(<P: 220> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<P: 221> 9)
lbl(17082)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17023)
lbl(17097)	definition(x(3) 17190 pid('InheritOther' 3 pos('./standard/Object.oz' 349 6) nil 6) <P: 222> [y(132)])
		match(x(0) ht(17175 [onScalar(nil 17106) onRecord('|' 2 17107)]))
lbl(17106)	return
lbl(17107)	allocateL3
		getVarVar(x(0) x(3))
		getList(x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(5) nil 17149)
		callBI('.' [x(4) x(2)]#[x(0)])
		callBI('Arity' [x(0)]#[x(4)])
		move(x(0) x(1))
		move(x(4) x(0))
		move(y(0) x(2))
		genFastCall(<P: 219> 6)
		branch(17163)
lbl(17149)	callBI('NewDictionary' nil#[x(4)])
		move(x(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<P: 221> 8)
lbl(17163)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 222> 7)
lbl(17175)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(356)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17097)
lbl(17190)	definition(x(3) 17277 pid('Free' 3 pos('./standard/Object.oz' 365 6) nil 6) <P: 223> nil)
		match(x(0) ht(17262 [onScalar(nil 17199) onRecord('|' 2 17203)]))
lbl(17199)	getLiteral(nil x(2))
		return
lbl(17203)	allocateL3
		getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(4)]#[x(5)] 17250)
lbl(17222)	testLiteral(x(4) <U: ooFreeFlag> 17250)
lbl(17226)	getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17250)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17262)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17190)
lbl(17277)	definition(x(3) 17318 pid('MakeFree' 2 pos('./standard/Object.oz' 375 6) nil 4) <P: 224> [y(2)])
		allocateL2
		callBI('Arity' [x(0)]#[x(3)])
		move(x(1) y(0))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 223> 6)
		putConstant(free x(0))
		move(y(1) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(17277)
lbl(17318)	definition(x(3) 17335 pid('Add' 2 pos('./standard/Object.oz' 382 6) nil 2) <P: 225> nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		return
		endDefinition(17318)
lbl(17335)	definition(x(20) 17374 pid('AddFree' 3 pos('./standard/Object.oz' 386 6) nil 3) <P: 226> [x(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('AdjoinList' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(17335)
lbl(17374)	definition(x(3) 17465 pid('CheckParents' 2 pos('./standard/Object.oz' 395 3) nil 5) <P: 227> nil)
		match(x(0) ht(17450 [onScalar(nil 17383) onRecord('|' 2 17384)]))
lbl(17383)	return
lbl(17384)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(<U: ooPrintName> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17428)
		putConstant(<U: ooParents> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17409)
		branch(17441)
lbl(17409)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(3))
		setConstant(final)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17428)	putRecord(object 3 x(3))
		setConstant(inheritanceFromNonClass)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17441)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 227> 5)
lbl(17450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(406)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17374)
lbl(17465)	definition(x(3) 17524 pid('HasPropertyParents' 3 pos('./standard/Object.oz' 412 3) nil 5) <P: 228> nil)
		match(x(0) ht(17509 [onScalar(nil 17474) onRecord('|' 2 17478)]))
lbl(17474)	getLiteral(false x(2))
		return
lbl(17478)	getVarVar(x(0) x(3))
		callBI('.' [x(0) x(1)]#[x(4)])
		testBool(x(4) 17492 17498)
		getLiteral(true x(2))
		return
lbl(17492)	move(x(3) x(0))
		genFastCall(<P: 228> 7)
lbl(17498)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17509)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(415)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17465)
lbl(17524)	definition(x(3) 18113 pid('`class`' 7 pos('./standard/Object.oz' 423 3) nil 7) <P: 229> [x(23) y(132) y(155) x(19) y(104)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYYX(x(6) y(6) y(5) x(1))
		genFastCall(<P: 227> 4)
		move(y(4) x(1))
		putConstant(locking x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(8))
		testBool(y(7) 17578 17591)
		getLiteral(true y(8))
		branch(17602)
lbl(17578)	moveMoveYXYX(y(0) x(0) y(8) x(2))
		putConstant(<U: ooLocking> x(1))
		genFastCall(<P: 228> 6)
		branch(17602)
lbl(17591)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(432)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17602)	move(y(4) x(1))
		putConstant(native x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(9))
		testBool(y(7) 17625 17638)
		getLiteral(true y(9))
		branch(17649)
lbl(17625)	moveMoveYXYX(y(0) x(0) y(9) x(2))
		putConstant(<U: ooNative> x(1))
		genFastCall(<P: 228> 6)
		branch(17649)
lbl(17638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(433)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17649)	move(y(4) x(1))
		putConstant(final x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooId> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooNewAttr> <U: ooNewFeat> <U: ooNewMeth> <U: ooParents> <U: ooPrintName> <U: ooUnFreeFeat>] y(4))
		setVariable(y(10))
		setVariable(y(11))
		setValue(g(0))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(x(0))
		setValue(y(8))
		setVariable(y(14))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(1))
		setVariable(x(1))
		setValue(y(5))
		setVariable(y(15))
		callBI('NewName' nil#[x(2)])
		unify(x(2) x(0))
		move(y(0) x(0))
		genFastCall(<P: 28> 4)
		match(y(0) ht(18009 [onScalar(nil 17710) onRecord('|' 2 17766)]))
lbl(17710)	callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		unify(y(10) y(2))
		unify(y(15) y(3))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17766)	getVarVar(y(0) x(0))
		testLiteral(x(0) nil 17875)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(14))
		inlineDot(x(0) <U: ooFastMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(12))
		inlineDot(x(0) <U: ooDefaults> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(11))
		move(y(1) x(1))
		callBI('Width' [x(1)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(14) x(2) y(12) x(3))
		move(y(11) x(4))
		genFastCall(<P: 214> 10)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		move(y(2) x(2))
		callBI('Adjoin' [x(1) x(2)]#[x(3)])
		unify(x(3) y(10))
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		move(y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(15))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17875)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 212> 4)
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		moveMoveYXYX(y(0) x(0) y(14) x(1))
		moveMoveYXYX(y(12) x(2) y(11) x(3))
		genFastCall(<P: 218> 8)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewAttr> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(10) x(2))
		putConstant(a x(0))
		genFastCall(<P: 108> 6)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewFeat> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(15) x(2))
		putConstant(f x(0))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(18009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(503)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18022)	move(y(14) x(0))
		callBI('Dictionary.markSafe' [x(0)]#nil)
		move(y(12) x(1))
		callBI('Dictionary.markSafe' [x(1)]#nil)
		move(y(11) x(2))
		callBI('Dictionary.markSafe' [x(2)]#nil)
		createVariable(y(0))
		testBool(y(7) 18072 18077)
		getRecord('class' [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] y(0))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(g(0))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(8))
		unifyValue(y(14))
		unifyValue(y(9))
		unifyValue(y(5))
		unifyValue(y(15))
		branch(18088)
lbl(18072)	unify(y(0) y(4))
		branch(18088)
lbl(18077)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(512)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18088)	moveMoveYXYX(y(12) x(0) y(0) x(1))
		moveMoveYXYX(y(15) x(2) y(11) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		callBI(makeClass [x(0) x(1) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(6))
		deAllocateL
		return
		endDefinition(17524)
lbl(18113)	definition(x(19) 18259 pid('`extend`' 4 pos('./standard/Object.oz' 527 3) nil 12) <P: 230> [x(23)])
		allocateL10
		inlineDot(x(0) <U: ooDefaults> x(4) cache)
		inlineDot(x(0) <U: ooLocking> x(5) cache)
		inlineDot(x(0) <U: ooNative> x(6) cache)
		inlineDot(x(0) <U: ooMeth> x(7) cache)
		inlineDot(x(0) <U: ooFastMeth> x(8) cache)
		inlineDot(x(0) <U: ooAttr> x(9) cache)
		inlineDot(x(0) <U: ooPrintName> x(10) cache)
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		callBI('Adjoin' [x(0) x(1)]#[x(11)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 226> 6)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 224> 4)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] x(0))
		setValue(y(6))
		setValue(y(1))
		setValue(g(0))
		setValue(y(5))
		setValue(y(9))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		setValue(y(7))
		setValue(y(8))
		moveMoveYXYX(y(5) x(1) y(8) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		move(y(3) x(5))
		callBI(makeClass [x(1) x(0) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(0))
		deAllocateL10
		return
		endDefinition(18113)
lbl(18259)	putConstant('NewName' x(20))
		putConstant(1 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
		moveMoveXYXY(x(1) y(172) x(4) y(173))
		moveMoveXYXY(x(5) y(174) x(6) y(175))
		moveMoveXYXY(x(7) y(176) x(8) y(177))
		moveMoveXYXY(x(9) y(178) x(13) y(179))
		moveMoveXYXY(x(21) y(180) x(22) y(181))
		moveMoveXYXY(x(19) y(182) x(18) y(183))
		moveMoveXYXY(x(2) y(184) x(14) y(185))
		moveMoveXYXY(x(17) y(186) x(16) y(187))
		moveMoveXYXY(x(15) y(188) x(0) y(189))
		moveMoveXYXY(x(10) y(190) x(11) y(191))
		moveMoveXYXY(x(12) y(192) x(3) y(193))
		move(x(24) x(1))
		putConstant(ooPrivate x(0))
		genFastCall(<P: 1> 4)
		putConstant('@' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('@' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<-' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<-' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooExch x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooExch x(0))
		genFastCall(<P: 1> 4)
		putConstant(',' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(',' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooGetLock x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooGetLock x(0))
		genFastCall(<P: 1> 4)
		move(y(193) x(1))
		putConstant('class' x(0))
		genFastCall(<P: 1> 4)
lbl(18416)	definition(x(7) 18425 pid('BaseObject,noop/fast' 0 pos('./standard/Object.oz' 572 6) nil 0) <P: 231> nil)
		return
		endDefinition(18416)
lbl(18425)	definition(x(8) 18439 pid('BaseObject,noop/slow' 1 pos('./standard/Object.oz' 572 6) nil 1) unit nil)
		getLiteral(noop x(0))
		genFastCall(<P: 231> 1)
		endDefinition(18425)
lbl(18439)	putRecord('#' [1 2 fast] x(9))
		setConstant(noop)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('BaseObject' x(5))
		createVariableMove(y(194) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Slaves>] x(2))
		setConstant(nil)
lbl(18488)	definition(x(7) 18505 pid('MasterObject,init/fast' 0 pos('./standard/Object.oz' 590 2) nil 1) <P: 232> nil)
		putConstant(nil x(0))
		inlineAssign(<N: Slaves> x(0) cache)
		return
		endDefinition(18488)
lbl(18505)	definition(x(8) 18519 pid('MasterObject,init/slow' 1 pos('./standard/Object.oz' 590 2) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 232> 1)
		endDefinition(18505)
lbl(18519)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(18529)	definition(x(7) 18546 pid('MasterObject,getSlaves/fast' 1 pos('./standard/Object.oz' 593 2) nil 2) <P: 233> nil)
		inlineAt(<N: Slaves> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(18529)
lbl(18546)	definition(x(8) 18572 pid('MasterObject,getSlaves/slow' 1 pos('./standard/Object.oz' 593 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 233> 3)
		endDefinition(18546)
lbl(18572)	putRecord('#' [1 2 fast] x(10))
		setConstant(getSlaves)
		setValue(x(8))
		setValue(x(7))
lbl(18582)	definition(x(7) 18606 pid('MasterObject,AddSlave/fast' 1 pos('./standard/Object.oz' 596 2) nil 4) <P: 234> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		putConstant(<N: Slaves> x(0))
		callBI(ooExch [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(18582)
lbl(18606)	definition(x(8) 18632 pid('MasterObject,AddSlave/slow' 1 pos('./standard/Object.oz' 596 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 234> 3)
		endDefinition(18606)
lbl(18632)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: AddSlave>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(195))
lbl(18644)	definition(x(7) 18676 pid('MasterObject,DoDel/fast' 3 pos('./standard/Object.oz' 601 2) nil 5) <P: 235> [y(195)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 18664)
		unify(x(2) x(3))
		return
lbl(18664)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18644)
lbl(18676)	definition(x(8) 18717 pid('MasterObject,DoDel/slow' 1 pos('./standard/Object.oz' 601 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 235> 7)
		endDefinition(18676)
lbl(18717)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: DoDel>)
		setValue(x(8))
		setValue(x(7))
lbl(18727)	definition(x(7) 18755 pid('MasterObject,DelSlave/fast' 1 pos('./standard/Object.oz' 606 2) nil 5) <P: 236> [y(195)])
		putConstant(<N: Slaves> x(3))
		createVariable(x(1))
		callBI(ooExch [x(3) x(1)]#[x(4)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18727)
lbl(18755)	definition(x(8) 18781 pid('MasterObject,DelSlave/slow' 1 pos('./standard/Object.oz' 606 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 236> 3)
		endDefinition(18755)
lbl(18781)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: DelSlave>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(195) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MasterObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Master>] x(2))
		setConstant(unit)
lbl(18832)	definition(x(7) 18883 pid('SlaveObject,becomeSlave/fast' 1 pos('./standard/Object.oz' 617 2) nil 4) <P: 237> nil)
		putConstant(<N: Master> x(1))
		createVariable(x(2))
		callBI(ooExch [x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 18869)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(<N: AddSlave> y(0) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(18869)	unify(x(2) x(3))
		putRecord(object 1 x(0))
		setConstant(slaveNotFree)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(18832)
lbl(18883)	definition(x(8) 18909 pid('SlaveObject,becomeSlave/slow' 1 pos('./standard/Object.oz' 617 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 237> 3)
		endDefinition(18883)
lbl(18909)	putRecord('#' [1 2 fast] x(9))
		setConstant(becomeSlave)
		setValue(x(8))
		setValue(x(7))
lbl(18919)	definition(x(7) 18942 pid('SlaveObject,isFree/fast' 1 pos('./standard/Object.oz' 629 2) nil 4) <P: 238> nil)
		inlineAt(<N: Master> x(1) cache)
		putConstant(unit x(2))
		callBI('==' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(18919)
lbl(18942)	definition(x(8) 18968 pid('SlaveObject,isFree/slow' 1 pos('./standard/Object.oz' 629 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 238> 3)
		endDefinition(18942)
lbl(18968)	putRecord('#' [1 2 fast] x(10))
		setConstant(isFree)
		setValue(x(8))
		setValue(x(7))
lbl(18978)	definition(x(7) 19024 pid('SlaveObject,free/fast' 0 pos('./standard/Object.oz' 632 2) nil 3) <P: 239> nil)
		putConstant(<N: Master> x(0))
		createVariable(x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		testLiteral(x(2) unit 19005)
		putRecord(object 1 x(0))
		setConstant(slaveAlreadyFree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(19005)	allocateL1
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(<N: DelSlave> x(2) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(18978)
lbl(19024)	definition(x(8) 19038 pid('SlaveObject,free/slow' 1 pos('./standard/Object.oz' 632 2) nil 1) unit nil)
		getLiteral(free x(0))
		genFastCall(<P: 239> 1)
		endDefinition(19024)
lbl(19038)	putRecord('#' [1 2 fast] x(11))
		setConstant(free)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SlaveObject' x(5))
		createVariableMove(y(196) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(19073)	definition(x(7) 19134 pid('MetaObject,GetAttr/fast' 2 pos('./standard/Object.oz' 651 2) nil 5) <P: 240> nil)
		match(x(0) ht(19119 [onScalar(nil 19082) onRecord('|' 2 19086)]))
lbl(19082)	getLiteral(nil x(1))
		return
lbl(19086)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		callBI('@' [x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetAttr> x(4) 2 cache)
lbl(19119)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(654)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19073)
lbl(19134)	definition(x(8) 19169 pid('MetaObject,GetAttr/slow' 1 pos('./standard/Object.oz' 651 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 240> 5)
		endDefinition(19134)
lbl(19169)	putRecord('#' [1 2 fast] x(9))
		setConstant(<N: GetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19179)	definition(x(7) 19242 pid('MetaObject,GetFeat/fast' 2 pos('./standard/Object.oz' 657 2) nil 6) <P: 241> nil)
		match(x(0) ht(19227 [onScalar(nil 19188) onRecord('|' 2 19192)]))
lbl(19188)	getLiteral(nil x(1))
		return
lbl(19192)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		getSelf(x(5))
		callBI('.' [x(5) x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetFeat> x(4) 2 cache)
lbl(19227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(660)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19179)
lbl(19242)	definition(x(8) 19277 pid('MetaObject,GetFeat/slow' 1 pos('./standard/Object.oz' 657 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 241> 5)
		endDefinition(19242)
lbl(19277)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: GetFeat>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(197))
lbl(19289)	definition(x(7) 19394 pid('MetaObject,toChunk/fast' 1 pos('./standard/Object.oz' 663 2) nil 4) <P: 242> [y(197) y(172)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		putRecord(o ['attr' 'class' 'feat'] x(1))
		setValue(y(2))
		setValue(y(1))
		setValue(y(3))
		putRecord(c [<N: PRIVATE>] x(0))
		setValue(x(1))
		callBI('NewChunk' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL4
		return
		endDefinition(19289)
lbl(19394)	definition(x(8) 19420 pid('MetaObject,toChunk/slow' 1 pos('./standard/Object.oz' 663 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 242> 3)
		endDefinition(19394)
lbl(19420)	putRecord('#' [1 2 fast] x(11))
		setConstant(toChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19430)	definition(x(7) 19475 pid('MetaObject,SetAttr/fast' 1 pos('./standard/Object.oz' 673 2) nil 3) <P: 243> nil)
		match(x(0) ht(19460 [onScalar(nil 19439) onRecord('|' 2 19440)]))
lbl(19439)	return
lbl(19440)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('<-' [x(1) x(2)]#nil)
		getSelf(x(2))
		tailSendMsg(<N: SetAttr> x(2) 1 cache)
lbl(19460)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(676)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19430)
lbl(19475)	definition(x(8) 19501 pid('MetaObject,SetAttr/slow' 1 pos('./standard/Object.oz' 673 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 243> 3)
		endDefinition(19475)
lbl(19501)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: SetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19511)	definition(x(7) 19561 pid('MetaObject,SetFeat/fast' 1 pos('./standard/Object.oz' 679 2) nil 5) <P: 244> nil)
		match(x(0) ht(19546 [onScalar(nil 19520) onRecord('|' 2 19521)]))
lbl(19520)	return
lbl(19521)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getSelf(x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		unify(x(4) x(2))
		getSelf(x(2))
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
lbl(19546)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(682)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19511)
lbl(19561)	definition(x(8) 19587 pid('MetaObject,SetFeat/slow' 1 pos('./standard/Object.oz' 679 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 244> 3)
		endDefinition(19561)
lbl(19587)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: SetFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(19597)	definition(x(7) 19662 pid('MetaObject,frmChunk/fast' 1 pos('./standard/Object.oz' 685 2) nil 4) <P: 245> [y(197)])
		allocateL2
		putRecord(o ['attr' 'class' 'feat'] x(2))
		setVariable(y(0))
		setVariable(x(1))
		setVariable(y(1))
		inlineDot(x(0) <N: PRIVATE> x(3) cache)
		unify(x(3) x(2))
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		getSelf(x(0))
		call(x(2) 2)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(<N: SetAttr> x(1) 1 cache)
		getSelf(x(2))
		move(y(1) x(0))
		deAllocateL2
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
		endDefinition(19597)
lbl(19662)	definition(x(8) 19688 pid('MetaObject,frmChunk/slow' 1 pos('./standard/Object.oz' 685 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 245> 3)
		endDefinition(19662)
lbl(19688)	putRecord('#' [1 2 fast] x(14))
		setConstant(frmChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19698)	definition(x(7) 19816 pid('MetaObject,clone/fast' 1 pos('./standard/Object.oz' 693 2) nil 4) <P: 246> [y(197)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(<N: SetAttr> y(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		move(y(1) x(0))
		sendMsg(<N: SetFeat> y(3) 1 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(19698)
lbl(19816)	definition(x(8) 19842 pid('MetaObject,clone/slow' 1 pos('./standard/Object.oz' 693 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 246> 3)
		endDefinition(19816)
lbl(19842)	putRecord('#' [1 2 fast] x(15))
		setConstant(clone)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MetaObject' x(5))
		createVariableMove(y(198) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(object [',' '<-' '@' base 'class' is master meta new send slave] y(199))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setValue(y(194))
		setValue(y(193))
		setValue(y(180))
		setValue(y(195))
		setValue(y(198))
		setValue(y(181))
		setVariable(x(3))
		setValue(y(196))
		putConstant(',' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		unify(x(6) x(0))
		putConstant('@' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(0)])
		unify(x(0) x(2))
		putConstant('<-' x(2))
		putConstant(2 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(1))
		putConstant(send x(2))
		putConstant(3 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(3))
lbl(19965)	definition(x(0) 19991 pid('IsClass' 2 pos('./standard/Class.oz' 29 0) nil 4) <P: 247> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 19985)
		putConstant(<U: ooPrintName> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(19985)	getLiteral(false x(1))
		return
		endDefinition(19965)
lbl(19991)	putConstant(getClass x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
lbl(20000)	definition(x(2) 20062 pid('AssertClass' 2 pos('./standard/Class.oz' 36 3) nil 2) <P: 248> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 20024 20049)
		deAllocateL3
		return
lbl(20024)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setConstant('class')
		setConstant(1)
		setConstant('Module Class')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20049)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(37)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20000)
lbl(20062)	definition(x(2) 20110 pid('AssertNonFinal' 2 pos('./standard/Class.oz' 43 3) nil 3) <P: 249> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 20089)
		deAllocateL2
		return
lbl(20089)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(1))
		setConstant(fromFinalClass)
		setValue(x(0))
		setValue(y(1))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20062)
lbl(20110)	definition(x(2) 20144 pid('GetParents' 2 pos('./standard/Class.oz' 50 3) nil 2) <P: 250> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.parents' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooParents> x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20110)
lbl(20144)	definition(x(3) 20181 pid('MethodNames' 2 pos('./standard/Class.oz' 55 3) nil 2) <P: 251> [y(151)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.methodNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20144)
lbl(20181)	definition(x(4) 20218 pid('AttrNames' 2 pos('./standard/Class.oz' 60 3) nil 2) <P: 252> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.attrNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20181)
lbl(20218)	definition(x(5) 20255 pid('FeatNames' 2 pos('./standard/Class.oz' 65 3) nil 2) <P: 253> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.featNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20218)
lbl(20255)	definition(x(6) 20362 pid('PropNames' 2 pos('./standard/Class.oz' 70 3) nil 3) <P: 254> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.propNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 20326)
		getList(y(1))
		unifyLiteral(final)
		unifyVariable(x(1))
		inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20310 20315)
		getList(x(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20310)	getLiteral(nil x(1))
		deAllocateL2
		return
lbl(20315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20326)	inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20344 20349)
		getList(y(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20344)	getLiteral(nil y(1))
		deAllocateL2
		return
lbl(20349)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(76)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20255)
lbl(20362)	definition(x(7) 20432 pid('HasProperty' 3 pos('./standard/Class.oz' 80 3) nil 3) <P: 255> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		putConstant('Class.property' x(1))
		genFastCall(<P: 248> 4)
		match(y(1) ht(20417 [onScalar(final 20386) onScalar(locking 20403)]))
lbl(20386)	move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(2))
		deAllocateL3
		return
lbl(20403)	move(y(0) x(0))
		inlineDot(x(0) <U: ooLocking> x(1) cache)
		unify(x(1) y(2))
		deAllocateL3
		return
lbl(20417)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20362)
lbl(20432)	definition(x(8) 20507 pid('SubClassOfParent' 3 pos('./standard/Class.oz' 92 6) nil 3) <P: 256> nil)
		match(x(0) ht(20492 [onScalar(nil 20441) onRecord('|' 2 20445)]))
lbl(20441)	getLiteral(false x(2))
		return
lbl(20445)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 257> 6)
		testBool(y(3) 20469 20481)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20469)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
lbl(20481)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20492)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(95)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20432)
lbl(20507)	definition(x(8) 20573 pid('SubClass' 3 pos('./standard/Class.oz' 98 6) nil 3) <P: 257> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 248> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 20544)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20544)	putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 250> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
		endDefinition(20507)
lbl(20573)	definition(x(8) 20590 pid('IsInstanceOf' 3 pos('./standard/Class.oz' 106 6) nil 4) <P: 258> nil)
		callBI(getClass [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 257> 7)
		endDefinition(20573)
lbl(20590)	getRecord('class' [attrNames extendFeatures featNames get getFeature hasFeature hasProperty is isInstanceOf methodNames parents propNames] y(197))
		unifyValue(x(4))
		unifyValue(y(182))
		unifyValue(x(5))
		unifyValVar(x(1) x(9))
		unifyVariable(x(10))
		unifyValue(x(7))
		unifyValue(x(0))
		unifyValue(x(8))
		unifyValue(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
lbl(20617)	definition(x(2) 20666 pid('Class.getFeature' 3 pos('./standard/Class.oz' 120 19) nil 5) <P: 259> nil)
		allocateL2
		inlineDot(x(0) <U: ooUnFreeFeat> x(3) cache)
		callBI('.' [x(3) x(1)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		testBI('IsDet' [x(4)]#[x(3)] 20659)
lbl(20642)	testLiteral(y(1) <U: ooFreeFlag> 20659)
lbl(20646)	putRecord(kernel 3 x(2))
		setConstant('.')
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(20659)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(20617)
lbl(20666)	unify(x(2) x(9))
lbl(20669)	definition(x(2) 20711 pid('Class.hasFeature' 3 pos('./standard/Class.oz' 128 19) nil 5) <P: 260> nil)
		allocateL1
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		putConstant(<U: ooFreeFlag> x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		move(x(2) y(0))
		testBI('IsDet' [x(4)]#[x(0)] 20704)
lbl(20695)	testLiteral(x(4) <U: ooFreeFlag> 20704)
lbl(20699)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(20704)	getLiteral(true y(0))
		deAllocateL1
		return
		endDefinition(20669)
lbl(20711)	unify(x(2) x(10))
		putConstant('BitArray.is' x(2))
		putConstant(2 x(7))
		callBI(builtin [x(2) x(7)]#[x(8)])
		putRecord(bitArray [and card clear clone complementToList disjoint high is low new nimpl 'or' set test toList] y(182))
		setVariable(x(2))
		setVariable(x(7))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setValue(x(8))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putConstant('BitArray.new' x(21))
		putConstant(3 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(15))
		putConstant('BitArray.set' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(18))
		putConstant('BitArray.clear' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('BitArray.test' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(19))
		putConstant('BitArray.low' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(14))
		putConstant('BitArray.high' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(13))
		putConstant('BitArray.clone' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(10))
		putConstant('BitArray.or' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(17))
		putConstant('BitArray.and' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('BitArray.nimpl' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(16))
		putConstant('BitArray.disjoint' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(12))
		putConstant('BitArray.card' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(7))
		putConstant('BitArray.toList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(20))
		putConstant('BitArray.complementToList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(11))
		putConstant('IsForeignPointer' x(9))
		putConstant(2 x(11))
		callBI(builtin [x(9) x(11)]#[x(21)])
		putRecord(foreignPointer [is toInt] y(195))
		setValue(x(21))
		setVariable(x(9))
		putConstant('ForeignPointer.toInt' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('Thread.is' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		putConstant('Thread.getPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(24)])
		putConstant('Thread.setPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(25)])
		putConstant('Thread.this' x(11))
		putConstant(1 x(22))
		callBI(builtin [x(11) x(22)]#[x(26)])
lbl(20990)	definition(x(11) 21008 pid('GetThisPriority' 1 pos('./standard/Thread.oz' 46 3) nil 3) <P: 261> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.getPriority' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(20990)
lbl(21008)	definition(x(22) 21023 pid('SetThisPriority' 1 pos('./standard/Thread.oz' 49 3) nil 2) <P: 262> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.setPriority' [x(1) x(0)]#nil)
		return
		endDefinition(21008)
lbl(21023)	putRecord('thread' [getPriority getThisPriority injectException is isSuspended preempt resume setPriority setThisPriority state suspend terminate this] y(196))
		setValue(x(24))
		setValue(x(11))
		setVariable(x(27))
		setValue(x(23))
		setVariable(x(28))
		setVariable(x(29))
		setVariable(x(30))
		setValue(x(25))
		setValue(x(22))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(y(198))
		setValue(x(26))
		putConstant('Thread.suspend' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(32))
		putConstant('Thread.resume' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(30))
		putConstant('Thread.preempt' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(29))
lbl(21089)	definition(x(11) 21134 pid('Thread.terminate' 1 pos('./standard/Thread.oz' 63 26) nil 4) <P: 263> [x(27) y(105)])
		allocateL2
		move(g(1) x(1))
		inlineDot(x(1) system x(2) cache)
		putRecord(kernel 1 x(3))
		setConstant(terminate)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailCall(g(0) 2)
		endDefinition(21089)
lbl(21134)	unify(x(11) y(198))
		putConstant('Thread.injectException' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(27))
		putConstant('Thread.state' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(31))
		putConstant('Thread.isSuspended' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(28))
		putConstant('Exception.raiseDebugCheck' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		putConstant('Exception.taskStackError' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		putConstant('Exception.location' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		createVariable(y(200))
lbl(21202)	definition(x(11) 21291 pid('RaiseDebugExtend' 2 pos('./standard/Exception.oz' 35 3) nil 7) <P: 264> [y(200)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Label' [x(2)]#[x(3)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Exception.taskStackError' nil#[x(4)])
		callBI('Exception.location' nil#[x(5)])
		putRecord('#' 2 x(6))
		setConstant(stack)
		setValue(x(4))
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putRecord('#' 2 x(6))
		setConstant(loc)
		setValue(x(5))
		putList(x(5))
		setValue(x(6))
		setValue(x(4))
		putRecord('#' 2 x(4))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(4))
		setValue(x(5))
		callBI(record [x(3) x(1)]#[x(4)])
		callBI('Adjoin' [x(2) x(4)]#[x(1)])
		putConstant(debug x(2))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(21202)
lbl(21291)	moveMoveXYXY(x(0) y(201) x(8) y(202))
		moveMoveXYXY(x(21) y(203) x(23) y(204))
		moveMoveXYXY(x(15) y(205) x(18) y(206))
		moveMoveXYXY(x(19) y(207) x(14) y(208))
		moveMoveXYXY(x(13) y(209) x(10) y(210))
		moveMoveXYXY(x(17) y(211) x(2) y(212))
		moveMoveXYXY(x(16) y(213) x(12) y(214))
		moveMoveXYXY(x(7) y(215) x(20) y(216))
		moveMoveXYXY(x(9) y(217) x(1) y(218))
		moveMoveXYXY(x(3) y(219) x(4) y(220))
		moveMoveXYXY(x(5) y(221) x(6) y(222))
		moveMoveXYXY(x(26) y(223) x(22) y(224))
		moveMoveXYXY(x(27) y(225) x(11) y(226))
		move(x(25) x(1))
		putConstant('RaiseDebugCheck' x(0))
		genFastCall(<P: 1> 4)
		move(y(226) x(1))
		putConstant('RaiseDebugExtend' x(0))
		genFastCall(<P: 1> 4)
		unify(y(200) y(0))
lbl(21377)	definition(x(7) 21398 pid('FailureX' 2 pos('./standard/Exception.oz' 57 3) nil 2) <P: 265> nil)
		getRecord('failure' [debug] x(1))
		unifyVariable(x(1))
		getRecord('failure' [info] x(1))
		unifyValue(x(0))
		return
		endDefinition(21377)
lbl(21398)	definition(x(0) 21420 pid('PredefX' 2 pos('./standard/Exception.oz' 61 3) nil 3) <P: 266> nil)
		getRecord(system [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21398)
lbl(21420)	definition(x(8) 21459 pid('PredefXD' 3 pos('./standard/Exception.oz' 65 3) nil 4) <P: 267> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(system [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21420)
lbl(21459)	definition(x(9) 21498 pid('ErrorXD' 3 pos('./standard/Exception.oz' 72 3) nil 4) <P: 268> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(error [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21459)
lbl(21498)	definition(x(10) 21520 pid('ErrorX' 2 pos('./standard/Exception.oz' 79 3) nil 3) <P: 269> nil)
		getRecord(error [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21498)
lbl(21520)	getRecord(exception [error errorDebug 'failure' 'raise' raiseError system systemDebug] y(105))
		unifyValue(x(10))
		unifyValue(x(9))
		unifyValue(x(7))
		unifyValue(y(200))
		unifyValue(y(1))
		unifyValue(x(0))
		unifyValue(x(8))
		putConstant('Alarm' x(7))
		putConstant(2 x(8))
		callBI(builtin [x(7) x(8)]#[x(1)])
		putConstant('Delay' x(7))
		putConstant(1 x(8))
		callBI(builtin [x(7) x(8)]#[x(2)])
lbl(21556)	definition(x(7) 21671 pid('AddWaiter' 4 pos('./standard/Time.oz' 38 3) nil 9) <P: 270> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(x(0) 21653)
lbl(21574)	getVarVar(x(0) x(4))
		createVariable(y(3))
		shallowGuard(21653)
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(21589)	shallowThen
		testLT(x(1) x(5) x(0) 21632)
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		getList(x(3))
		unifyVariable(x(7))
		unifyValue(x(4))
		getRecord('#' 2 x(7))
		unifyVariable(x(8))
		unifyValue(x(6))
		inlineMinus(x(5) x(1) x(0))
		unify(x(0) x(8))
		deAllocateL4
		return
lbl(21632)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(x(5))
		unifyValue(x(6))
		move(x(4) x(0))
		deAllocateL4
		genFastCall(<P: 270> 9)
lbl(21653)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
		endDefinition(21556)
lbl(21671)	definition(x(7) 21683 pid('DefaultFun' 1 pos('./standard/Time.oz' 53 23) nil 1) <P: 271> nil)
		getNumber(1000 x(0))
		return
		endDefinition(21671)
lbl(21683)	putList(x(8))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: ActDelay> <N: Action> <N: DelayFun> <N: Final> <N: NumReset> <N: NumberA> <N: Stop>] x(9))
		setConstant(1000)
		setConstant(dummyRep)
		setValue(x(7))
		setConstant(finalRep)
		setConstant(~1)
		setConstant(~1)
		setConstant(unit)
		putRecord(messagePattern [action delay delayFun final number] x(10))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(21729)	definition(x(11) 21916 pid('Repeat,setRepAll' 1 pos('./standard/Time.oz' 86 6) nil 3) unit [x(10) x(7) y(0)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21768)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
		branch(21771)
lbl(21768)	getLiteral(dummyRep y(1))
lbl(21771)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21794)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(2))
		branch(21797)
lbl(21794)	getLiteral(finalRep y(2))
lbl(21797)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21820)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
		branch(21823)
lbl(21820)	getNumber(1000 y(3))
lbl(21823)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21846)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
		branch(21849)
lbl(21846)	unify(y(4) g(1))
lbl(21849)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(number x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21872)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(5))
		branch(21875)
lbl(21872)	getNumber(~1 y(5))
lbl(21875)	move(y(1) x(0))
		genCall(gci(g(2) true setRepAction false 1) 0)
		move(y(2) x(0))
		genCall(gci(g(2) true setRepFinal false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true setRepNum false 1) 0)
		move(y(4) x(0))
		move(g(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 21910)
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(2) true setRepDelay true 1) 0)
lbl(21910)	deAllocateL6
		genCall(gci(g(2) true setRepDelayFun true 1) 0)
		endDefinition(21729)
lbl(21916)	putList(x(10))
		setConstant(setRepAll)
		setValue(x(11))
lbl(21922)	definition(x(11) 21979 pid('Repeat,getRep/fast' [action actual delay delayFun final number] pos('./standard/Time.oz' 102 6) nil 7) <P: 272> nil)
		inlineAt(<N: Action> x(6) cache)
		unify(x(6) x(0))
		inlineAt(<N: Final> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<N: ActDelay> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<N: DelayFun> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<N: NumReset> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<N: NumberA> x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(21922)
lbl(21979)	putRecord(messagePattern [action actual delay delayFun final number] x(12))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(21995)	definition(x(13) 22158 pid('Repeat,getRep/slow' 1 pos('./standard/Time.oz' 102 6) nil 7) unit [x(12)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22032)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
lbl(22032)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(actual x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22053)
		inlineDot(x(0) actual x(1) cache)
		unify(x(1) y(2))
lbl(22053)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22074)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
lbl(22074)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22095)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
lbl(22095)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22116)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(5))
lbl(22116)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(number x(6))
		testBI('HasFeature' [x(0) x(6)]#[x(1)] 22137)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(6))
lbl(22137)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		deAllocateL7
		genFastCall(<P: 272> 13)
		endDefinition(21995)
lbl(22158)	putRecord(getRep [action actual delay delayFun final number] x(12))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(14))
		setConstant(getRep)
		setValue(x(13))
		setValue(x(12))
		setValue(x(11))
		putRecord(messagePattern 1 x(11))
		setConstant(unit)
lbl(22192)	definition(x(12) 22246 pid('Repeat,setRepAction' 1 pos('./standard/Time.oz' 117 6) nil 3) unit [x(11)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22231)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22234)
lbl(22231)	getLiteral(dummyRep y(1))
lbl(22234)	move(y(1) x(0))
		inlineAssign(<N: Action> x(0) cache)
		deAllocateL2
		return
		endDefinition(22192)
lbl(22246)	putList(x(11))
		setConstant(setRepAction)
		setValue(x(12))
		putRecord(messagePattern 1 x(12))
		setConstant(unit)
lbl(22258)	definition(x(13) 22312 pid('Repeat,setRepFinal' 1 pos('./standard/Time.oz' 121 6) nil 3) unit [x(12)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22297)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22300)
lbl(22297)	getLiteral(finalRep y(1))
lbl(22300)	move(y(1) x(0))
		inlineAssign(<N: Final> x(0) cache)
		deAllocateL2
		return
		endDefinition(22258)
lbl(22312)	putList(x(12))
		setConstant(setRepFinal)
		setValue(x(13))
		putRecord(messagePattern 1 x(13))
		setConstant(unit)
lbl(22324)	definition(x(15) 22395 pid('Repeat,setRepDelay' 1 pos('./standard/Time.oz' 125 6) nil 3) unit [x(13)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22363)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22366)
lbl(22363)	getNumber(1000 y(1))
lbl(22366)	move(y(1) x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
lbl(22374)	definition(x(1) 22386 pid('' 1 pos('./standard/Time.oz' 127 14) nil 1) unit [y(1)])
		unify(x(0) g(0))
		return
		endDefinition(22374)
lbl(22386)	inlineAssign(<N: DelayFun> x(1) cache)
		deAllocateL2
		return
		endDefinition(22324)
lbl(22395)	putList(x(13))
		setConstant(setRepDelay)
		setValue(x(15))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22407)	definition(x(16) 22469 pid('Repeat,setRepDelayFun' 1 pos('./standard/Time.oz' 130 6) nil 3) unit [x(15) x(7)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22446)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22449)
lbl(22446)	unify(y(1) g(1))
lbl(22449)	putConstant(~1 x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: DelayFun> x(0) cache)
		deAllocateL2
		return
		endDefinition(22407)
lbl(22469)	putList(x(7))
		setConstant(setRepDelayFun)
		setValue(x(16))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22481)	definition(x(16) 22540 pid('Repeat,setRepNum' 1 pos('./standard/Time.oz' 135 6) nil 3) unit [x(15)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22520)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22523)
lbl(22520)	getNumber(~1 y(1))
lbl(22523)	move(y(1) x(0))
		inlineAssign(<N: NumberA> x(0) cache)
		inlineAssign(<N: NumReset> x(0) cache)
		deAllocateL2
		return
		endDefinition(22481)
lbl(22540)	putList(x(15))
		setConstant(setRepNum)
		setValue(x(16))
lbl(22546)	definition(x(16) 22611 pid('Repeat,go/fast' 0 pos('./standard/Time.oz' 144 6) nil 2) <P: 273> [y(0)])
		allocateL1
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22588 x(0))
		inlineAt(<N: Stop> x(0) cache)
		createVariable(y(0))
		testBI('IsDet' [x(0)]#[x(1)] 22584)
		createVariable(x(0))
		inlineAssign(<N: Stop> x(0) cache)
		getLiteral(true y(0))
		branch(22587)
lbl(22584)	getLiteral(false y(0))
lbl(22587)	return
lbl(22588)	testBool(y(0) 22596 22598)
		deAllocateL1
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22596)	deAllocateL1
		return
lbl(22598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22546)
lbl(22611)	definition(x(17) 22625 pid('Repeat,go/slow' 1 pos('./standard/Time.oz' 144 6) nil 1) unit nil)
		getLiteral(go x(0))
		genFastCall(<P: 273> 1)
		endDefinition(22611)
lbl(22625)	putRecord('#' [1 2 fast] x(18))
		setConstant(go)
		setValue(x(17))
		setValue(x(16))
lbl(22635)	definition(x(16) 22674 pid('Repeat,stop/fast' 0 pos('./standard/Time.oz' 155 6) nil 2) <P: 274> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22671 x(0))
		putConstant(unit x(0))
		inlineAt(<N: Stop> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<N: NumReset> x(0) cache)
		inlineAssign(<N: NumberA> x(0) cache)
		return
lbl(22671)	return
		endDefinition(22635)
lbl(22674)	definition(x(17) 22688 pid('Repeat,stop/slow' 1 pos('./standard/Time.oz' 155 6) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 274> 1)
		endDefinition(22674)
lbl(22688)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(17))
		setValue(x(16))
lbl(22698)	definition(x(16) 22860 pid('Repeat,Run/fast' 0 pos('./standard/Time.oz' 162 6) nil 5) <P: 275> [y(0)])
		allocateL5
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22752 x(0))
		inlineAt(<N: Stop> x(0) cache)
		inlineAt(<N: ActDelay> x(1) cache)
		inlineAt(<N: Action> x(2) cache)
		inlineAt(<N: Final> x(3) cache)
		inlineAt(<N: NumberA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) y(4))
		return
lbl(22752)	move(y(0) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 22761)
		deAllocateL5
		return
lbl(22761)	testNumber(y(3) 0 22785)
		getSelf(x(1))
		sendMsg(stop x(1) 0 cache)
		getSelf(x(2))
		move(y(4) x(0))
		deAllocateL5
		tailSendMsg(<N: Do> x(2) 1 cache)
lbl(22785)	move(y(1) x(1))
		createVariable(x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
		move(x(2) y(1))
		getSelf(x(3))
		move(y(2) x(0))
		sendMsg(<N: Do> x(3) 1 cache)
		move(y(3) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 22826)
		inlineMinus1(x(0) x(1))
		inlineAssign(<N: NumberA> x(1) cache)
lbl(22826)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 22845 22847)
		deAllocateL5
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22845)	deAllocateL5
		return
lbl(22847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22698)
lbl(22860)	definition(x(17) 22874 pid('Repeat,Run/slow' 1 pos('./standard/Time.oz' 162 6) nil 1) unit nil)
		getLiteral(<N: Run> x(0))
		genFastCall(<P: 275> 1)
		endDefinition(22860)
lbl(22874)	putRecord('#' [1 2 fast] x(20))
		setConstant(<N: Run>)
		setValue(x(17))
		setValue(x(16))
lbl(22884)	definition(x(16) 22904 pid('Repeat,Do/fast' 1 pos('./standard/Time.oz' 195 6) nil 2) <P: 276> nil)
		testBI('IsProcedure' [x(0)]#[x(1)] 22897)
		tailCall(x(0) 0)
lbl(22897)	getSelf(x(1))
		tailCall(x(1) 1)
		endDefinition(22884)
lbl(22904)	definition(x(17) 22930 pid('Repeat,Do/slow' 1 pos('./standard/Time.oz' 195 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 276> 3)
		endDefinition(22904)
lbl(22930)	putRecord('#' [1 2 fast] x(21))
		setConstant(<N: Do>)
		setValue(x(17))
		setValue(x(16))
lbl(22940)	definition(x(16) 22949 pid('Repeat,finalRep/fast' 0 pos('./standard/Time.oz' 204 6) nil 0) <P: 277> nil)
		return
		endDefinition(22940)
lbl(22949)	definition(x(17) 22963 pid('Repeat,finalRep/slow' 1 pos('./standard/Time.oz' 204 6) nil 1) unit nil)
		getLiteral(finalRep x(0))
		genFastCall(<P: 277> 1)
		endDefinition(22949)
lbl(22963)	putRecord('#' [1 2 fast] x(22))
		setConstant(finalRep)
		setValue(x(17))
		setValue(x(16))
lbl(22973)	definition(x(16) 22982 pid('Repeat,dummyRep/fast' 0 pos('./standard/Time.oz' 208 6) nil 0) <P: 278> nil)
		return
		endDefinition(22973)
lbl(22982)	definition(x(17) 22996 pid('Repeat,dummyRep/slow' 1 pos('./standard/Time.oz' 208 6) nil 1) unit nil)
		getLiteral(dummyRep x(0))
		genFastCall(<P: 278> 1)
		endDefinition(22982)
lbl(22996)	putRecord('#' [1 2 fast] x(23))
		setConstant(dummyRep)
		setValue(x(17))
		setValue(x(16))
		putRecord('#' 13 x(16))
		setValue(x(10))
		setValue(x(14))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(7))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		moveMoveXYXY(x(1) y(226) x(2) y(227))
		move(x(0) y(228))
		move(x(8) x(0))
		move(x(16) x(1))
		move(x(9) x(2))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('Repeat' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(time [alarm delay repeat time] y(229))
		setValue(y(226))
		setValue(y(227))
		setValue(y(0))
		setVariable(x(0))
		putConstant('Time.time' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(23098)	definition(x(0) 23124 pid('IsFunctor' 2 pos('./standard/Functor.oz' 30 3) nil 4) <P: 279> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 23118)
		putConstant(<U: functorID> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(23118)	getLiteral(false x(1))
		return
		endDefinition(23098)
lbl(23124)	definition(x(1) 23151 pid('NewFunctor' 4 pos('./standard/Functor.oz' 34 3) nil 5) <P: 280> nil)
		putRecord(f [<U: functorID> apply 'export' 'import'] x(4))
		setConstant(unit)
		setValue(x(2))
		setValue(x(1))
		setValue(x(0))
		callBI('NewChunk' [x(4)]#[x(0)])
		unify(x(0) x(3))
		return
		endDefinition(23124)
lbl(23151)	moveMoveXYXY(x(0) y(0) x(1) y(230))
		putConstant('NewFunctor' x(0))
		genFastCall(<P: 1> 4)
lbl(23162)	definition(x(3) 23187 pid('GetFeatures' 2 pos('./standard/Functor.oz' 44 3) nil 2) <P: 281> nil)
		inlineDot(x(0) type x(0) cache)
		testList(x(0) 23181)
lbl(23177)	unify(x(1) x(0))
		return
lbl(23181)	getLiteral(nil x(1))
		return
		endDefinition(23162)
lbl(23187)	putRecord('functor' [getFeatures is new] y(231))
		setValue(x(3))
		setValue(y(0))
		setValue(y(230))
		move(g(0) x(1))
		putConstant('export' x(0))
		createVariableMove(y(230) x(2))
		genFastCall(<P: 108> 6)
lbl(23209)	definition(x(0) 23227 pid('IsNotNL' 2 pos('./sp/Error.oz' 38 13) nil 4) <P: 282> nil)
		putConstant(10 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23209)
lbl(23227)	definition(x(3) 23258 pid('ToLower' 2 pos('./sp/Error.oz' 39 13) nil 3) <P: 283> [y(54)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(23227)
lbl(23258)	definition(x(3) 23535 pid('EscapeVariableChar' 3 pos('./sp/Error.oz' 45 6) nil 6) <P: 284> nil)
		shallowGuard(23522)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23272)	shallowThen
		testLiteral(x(4) nil 23284)
lbl(23277)	getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(23284)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 23311)
lbl(23297)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23311)	testNumber(y(2) 92 23317)
		branch(23297)
lbl(23317)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 23361)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(23361)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 23412)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23412)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 23463)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23463)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 23514)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23514)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23522)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(45)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23258)
lbl(23535)	definition(x(4) 23619 pid('PrintNameToVS' 2 pos('./sp/Error.oz' 56 6) nil 4) <P: 285> [y(39) x(3)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 23581)
lbl(23553)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 23581)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(23581)	match(y(0) ht(23612 [onScalar(nil 23584) onScalar('#' 23604)]))
lbl(23584)	getList(y(1))
		unifyNumber(110)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(105)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(108)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23604)	getList(y(1))
		unifyNumber(35)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23612)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(23535)
lbl(23619)	definition(x(3) 23721 pid('ListToVS' 3 pos('./sp/Error.oz' 66 3) nil 5) <P: 286> nil)
		testLiteral(x(0) nil 23633)
lbl(23629)	getLiteral('' x(2))
		return
lbl(23633)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 23660)
lbl(23645)	getVarVar(x(3) x(4))
		testLiteral(x(4) nil 23660)
		getRecord(oz 1 y(2))
		unifyValue(x(3))
		deAllocateL3
		return
lbl(23660)	testList(y(0) 23706)
lbl(23663)	getVarVar(x(0) x(1))
		shallowGuard(23706)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(23674)	shallowThen
		getRecord('#' 3 y(2))
		unifyVariable(x(1))
		unifyValVar(y(1) x(4))
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 286> 7)
lbl(23706)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(74)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23619)
lbl(23721)	definition(x(1) 23907 pid('PosToVS' 5 pos('./sp/Error.oz' 77 3) nil 5) <P: 287> nil)
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		testLiteral(x(0) '' 23749)
		getLiteral(nil y(4))
		branch(23759)
lbl(23749)	getRecord('#' 3 y(4))
		unifyLiteral('file "')
		unifyValue(x(0))
		unifyLiteral('"')
lbl(23759)	createVariable(y(5))
		testLiteral(y(0) unit 23770)
		getLiteral(nil y(5))
		branch(23778)
lbl(23770)	getRecord('#' 2 y(5))
		unifyLiteral('line ')
		unifyValue(y(0))
lbl(23778)	createVariable(y(0))
		match(y(1) ht(23793 [onScalar(unit 23783) onScalar(~1 23788)]))
lbl(23783)	getLiteral(nil y(0))
		branch(23801)
lbl(23788)	getLiteral(nil y(0))
		branch(23801)
lbl(23793)	getRecord('#' 2 y(0))
		unifyLiteral('column ')
		unifyValue(y(1))
lbl(23801)	createVariable(y(1))
		testLiteral(y(2) unit 23812)
		getLiteral(nil y(1))
		branch(23820)
lbl(23812)	getRecord('#' 2 y(1))
		unifyLiteral('PC = ')
		unifyValue(y(2))
lbl(23820)	definition(x(1) 23838 pid('' 2 pos('./sp/Error.oz' 84 7) nil 4) unit nil)
		putConstant(nil x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23820)
lbl(23838)	putList(x(4))
		setValue(y(1))
		setConstant(nil)
		putList(x(3))
		setValue(y(0))
		setValue(x(4))
		putList(x(2))
		setValue(y(5))
		setValue(x(3))
		putList(x(0))
		setValue(y(4))
		setValue(x(2))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testList(y(0) 23900)
lbl(23871)	getVarVar(x(2) x(0))
lbl(23874)	definition(x(1) 23893 pid('' 3 pos('./sp/Error.oz' 87 12) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(', ')
		unifyValue(x(1))
		return
		endDefinition(23874)
lbl(23893)	move(y(3) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
lbl(23900)	getLiteral(nil y(3))
		deAllocateL6
		return
		endDefinition(23721)
lbl(23907)	definition(x(2) 23926 pid('StarLine' 2 pos('./sp/Error.oz' 92 3) nil 2) <P: 288> nil)
		getRecord('#' 3 x(1))
		unifyLiteral('%** ')
		unifyValue(x(0))
		unifyLiteral('\n')
		return
		endDefinition(23907)
lbl(23926)	definition(x(3) 23965 pid('Repeat' 3 pos('./sp/Error.oz' 96 3) nil 3) <P: 289> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(23944)	definition(x(1) 23956 pid('' 1 pos('./sp/Error.oz' 98 16) nil 1) unit [y(0)])
		unify(x(0) g(0))
		return
		endDefinition(23944)
lbl(23956)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(23926)
lbl(23965)	definition(x(3) 24022 pid('MaxLeftSize' 2 pos('./sp/Error.oz' 101 3) nil 5) <P: 290> nil)
lbl(23971)	definition(x(4) 24008 pid('' 3 pos('./sp/Error.oz' 102 16) nil 5) unit nil)
		shallowGuard(23995)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23987)	shallowThen
		callBI('Max' [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(23995)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(102)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23971)
lbl(24008)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(0 x(2))
		genFastCall(<P: 30> 9)
		endDefinition(23965)
lbl(24022)	putRecord('#' 3 y(232))
		setConstant('%**')
		setVariable(x(3))
		setConstant('\n')
		putConstant(65 x(4))
		putConstant(3 x(5))
		inlineMinus(x(4) x(5) x(6))
		moveMoveXYXY(x(4) y(233) x(0) y(234))
		moveMoveXYXY(x(1) y(235) x(2) y(236))
		move(x(6) x(0))
		move(x(3) x(2))
		putConstant(45 x(1))
		genFastCall(<P: 289> 6)
		putConstant('%***' x(0))
		createVariableMove(y(237) x(1))
		genFastCall(<P: 196> 4)
		putConstant(0 x(4))
lbl(24076)	definition(x(2) 27815 pid('' 2 pos('./sp/Error.oz' 111 3) nil 4) <P: 291> [y(143) y(234) y(39) y(130) y(163) x(4) y(233) y(237) y(236) y(232) y(134) y(224) y(235)])
		putList(x(2))
		setPredicateRef(<Q: 292>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 294>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 327>)
		setValue(x(2))
lbl(24298)	definitionCopy(x(3) 27810 pid('/body' 0 pos('./sp/Error.oz' 111 3) [once] 14) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) x(1) g(12)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(2) printError x(4) cache)
lbl(24333)	definition(x(5) 24428 pid('DoFormatTypes' 3 pos('./sp/Error.oz' 151 2) nil 5) <Q: 292> [g(1) g(2)])
		testLiteral(x(1) nil 24347)
lbl(24343)	getLiteral(nil x(2))
		return
lbl(24347)	allocateL4
		inlineDot(x(1) 2 x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		move(x(3) y(1))
		testLiteral(y(0) '' 24401)
lbl(24387)	getRecord(hint [m] x(2))
		unifyVariable(x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
		branch(24414)
lbl(24401)	getRecord(hint [l m] x(2))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
lbl(24414)	moveMoveYXYX(y(3) x(1) y(1) x(2))
		putConstant('' x(0))
		deAllocateL4
		genFastCall(<Q: 292> 7)
		endDefinition(24333)
lbl(24428)	definition(x(5) 24457 pid('FormatTypes' 2 pos('./sp/Error.oz' 166 2) nil 5) <Q: 293> [g(3)])
		callBI('AtomToString' [x(0)]#[x(3)])
		putList(x(4))
		setConstant(10)
		setValue(x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant('Expected type' x(0))
		genFastCall(<Q: 292> 7)
		endDefinition(24428)
lbl(24457)	definition(x(6) 24571 pid('FormatPartialAppl' 4 pos('./sp/Error.oz' 171 6) nil 6) <Q: 294> [g(4)])
		allocateL2
		getRecord('#' 4 x(3))
		unifyLiteral('{')
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(oz 1 x(3))
		unifyValue(x(0))
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		testLiteral(x(1) nil 24496)
lbl(24491)	getLiteral('' x(4))
		branch(24512)
lbl(24496)	getRecord('#' 2 x(4))
		unifyLiteral(' ')
		unifyVariable(x(0))
		getRecord(list 2 x(0))
		unifyValue(x(1))
		unifyLiteral(' ')
lbl(24512)	testNumber(y(0) 0 24524)
		getList(y(1))
		unifyNumber(125)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(24524)	getRecord('#' 2 y(1))
		unifyVariable(x(5))
		unifyLiteral('}')
lbl(24532)	definition(x(3) 24553 pid('' 3 pos('./sp/Error.oz' 176 8) nil 3) unit nil)
		getList(x(2))
		unifyNumber(32)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(95)
		unifyValue(x(0))
		return
		endDefinition(24532)
lbl(24553)	move(y(0) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		putConstant(nil x(4))
		deAllocateL2
		genFastCall(<P: 105> 13)
		endDefinition(24457)
lbl(24571)	definition(x(6) 24588 pid('FormatAppl' 3 pos('./sp/Error.oz' 180 6) nil 4) <Q: 295> nil)
		move(x(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 294> 9)
		endDefinition(24571)
lbl(24588)	definition(x(7) 24645 pid('DoFormatHint' 2 pos('./sp/Error.oz' 185 2) nil 4) <Q: 296> [g(1) g(2)])
		testLiteral(x(0) nil 24602)
lbl(24598)	getLiteral(nil x(1))
		return
lbl(24602)	allocateL3
		inlineDot(x(0) 2 x(0) cache)
		move(x(1) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 57> 8)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(line 1 x(0))
		unifyValue(y(1))
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 296> 5)
		endDefinition(24588)
lbl(24645)	definition(x(7) 24738 pid('FormatHint' 2 pos('./sp/Error.oz' 193 2) nil 4) <Q: 297> [x(1)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		inlineDot(x(0) hints x(0) cache)
		testBool(x(0) 24692 24725)
lbl(24688)	testLiteral(y(0) nil 24697)
lbl(24692)	getLiteral(nil y(1))
		deAllocateL3
		return
lbl(24697)	getList(y(1))
		unifyLiteral(unit)
		unifyVariable(y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 194> 4)
		putList(x(0))
		setConstant(10)
		setValue(y(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 296> 5)
lbl(24725)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(24645)
lbl(24738)	definition(x(8) 24786 pid('InfoField' 2 pos('./sp/Error.oz' 203 6) nil 3) <Q: 298> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 24779)
lbl(24761)	putConstant(info x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 24779)
lbl(24768)	inlineDot(x(0) info x(1) cache)
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(24779)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(24738)
lbl(24786)	definition(x(9) 24825 pid('DebugField' 2 pos('./sp/Error.oz' 211 6) nil 4) <Q: 299> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24818)
lbl(24800)	putConstant(debug x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24818)
lbl(24807)	inlineDot(x(0) debug x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24818)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24786)
lbl(24825)	definition(x(9) 24864 pid('DispatchField' 2 pos('./sp/Error.oz' 217 6) nil 4) <Q: 300> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24857)
lbl(24839)	putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24857)
lbl(24846)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24857)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24825)
lbl(24864)	definition(x(10) 24904 pid('HasDispatchField' 2 pos('./sp/Error.oz' 223 6) nil 4) <Q: 301> nil)
		testBI('IsRecord' [x(0)]#[x(2)] 24898)
		putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24894)
		inlineDot(x(0) 1 x(0) cache)
		callBI('IsRecord' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(24894)	getLiteral(false x(1))
		return
lbl(24898)	getLiteral(false x(1))
		return
		endDefinition(24864)
lbl(24904)	definition(x(10) 25026 pid('DebugInfo' 2 pos('./sp/Error.oz' 229 6) nil 6) <Q: 302> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 298> 4)
		match(y(1) ht(25019 [onScalar(unit 24923) onScalar(nil 24928) onRecord('|' 2 24933)]))
lbl(24923)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24928)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24933)	getVarVar(x(0) x(3))
		getList(y(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		match(x(0) ht(24997 [onRecord(apply 2 24950) onRecord(fapply 3 24966) onRecord(vs 1 24987)]))
lbl(24950)	getVarVar(x(0) x(1))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		genFastCall(<Q: 295> 6)
		branch(25010)
lbl(24966)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		move(x(4) x(3))
		genFastCall(<Q: 294> 8)
		branch(25010)
lbl(24987)	getVariable(x(0))
		getRecord(hint [l] x(4))
		unifyValue(x(0))
		branch(25010)
lbl(24997)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(242)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(25010)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 302> 5)
lbl(25019)	getLiteral(nil y(0))
		deAllocateL2
		return
		endDefinition(24904)
lbl(25026)	definition(x(10) 25061 pid('DebugLoc' 2 pos('./sp/Error.oz' 249 6) nil 4) <Q: 303> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		putConstant(loc x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(0))
		deAllocateL2
		return
		endDefinition(25026)
lbl(25061)	definition(x(10) 25145 pid('DebugStack' 2 pos('./sp/Error.oz' 255 6) nil 4) <Q: 304> [x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 299> 4)
		move(y(3) x(0))
		putConstant(stack x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 25138)
lbl(25110)	move(y(2) x(1))
		inlineDot(x(1) 'thread' x(1) cache)
		putConstant(0 x(2))
		testLT(x(2) x(1) x(3) 25138)
lbl(25127)	inlineDot(x(0) stack x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
lbl(25138)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(25061)
lbl(25145)	definition(x(10) 25214 pid('OzValueToVS' 2 pos('./sp/Error.oz' 275 6) nil 6) <Q: 305> [x(1) x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(1))
		inlineDot(x(1) depth x(5) cache)
		inlineDot(x(1) width x(2) cache)
		move(y(0) x(0))
		move(x(5) x(1))
		move(y(1) x(3))
		deAllocateL3
		tailCall(x(4) 4)
		endDefinition(25145)
lbl(25214)	createVariable(y(0))
lbl(25216)	definition(x(10) 25327 pid('AlmostVSToVS' 2 pos('./sp/Error.oz' 280 6) nil 6) <Q: 306> [g(5) y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 25316)
lbl(25232)	testBI('IsRecord' [x(0)]#[x(2)] 25316)
lbl(25236)	match(y(0) ht(25290 [onRecord(oz 1 25239) onRecord(pn 1 25245) onRecord('pos' 3 25251) onRecord(list 2 25269)]))
lbl(25239)	getVariable(x(0))
		deAllocateL2
		genFastCall(<Q: 305> 5)
lbl(25245)	getVariable(x(0))
		deAllocateL2
		genFastCall(<P: 285> 5)
lbl(25251)	getVarVar(x(0) x(5))
		getVariable(x(2))
		move(x(5) x(1))
		move(y(1) x(4))
		putConstant(unit x(3))
		deAllocateL2
		genFastCall(<P: 287> 11)
lbl(25269)	getVarVar(x(0) x(3))
		move(x(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 286> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 306> 5)
lbl(25290)	testBI('IsTuple' [x(0)]#[x(2)] 25311)
lbl(25294)	callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) '#' 25311)
lbl(25301)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 161> 7)
lbl(25311)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(25316)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 305> 5)
		endDefinition(25216)
lbl(25327)	unify(x(10) y(0))
lbl(25330)	definition(x(10) 25425 pid('AttachLeftSizes' 2 pos('./sp/Error.oz' 301 6) nil 4) <Q: 307> nil)
lbl(25336)	definition(x(3) 25414 pid('' 2 pos('./sp/Error.oz' 303 3) nil 3) unit nil)
		match(x(0) ht(25403 [onRecord(hint [l] 25345) onRecord(hint [l m] 25374)]))
lbl(25345)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25374)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25403)	getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyValue(x(0))
		return
		endDefinition(25336)
lbl(25414)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(25330)
lbl(25425)	definition(x(10) 25510 pid('LineOutput' 2 pos('./sp/Error.oz' 317 6) nil 5) <Q: 308> [x(4)])
		testLiteral(x(1) none 25436)
lbl(25435)	return
lbl(25436)	allocateL1
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(3)])
lbl(25443)	definition(x(2) 25483 pid('' 1 pos('./sp/Error.oz' 325 6) nil 3) unit [x(3)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(25443)
lbl(25483)	move(x(3) y(0))
		move(x(0) x(4))
		move(x(2) x(0))
		call(x(4) 2)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		move(x(1) x(0))
		deAllocateL1
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(25425)
lbl(25510)	definition(x(4) 25527 pid('Spaces' 2 pos('./sp/Error.oz' 333 6) nil 3) <Q: 309> nil)
		move(x(1) x(2))
		putConstant(32 x(1))
		genFastCall(<P: 289> 7)
		endDefinition(25510)
lbl(25527)	definition(x(4) 25808 pid('Lines' 2 pos('./sp/Error.oz' 337 6) nil 4) <Q: 310> [g(6)])
		allocateL3
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 307> 4)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 290> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		inlinePlus(x(0) x(1) x(2))
lbl(25565)	definition(x(3) 25796 pid('' 1 pos('./sp/Error.oz' 342 3) nil 5) unit [y(0) x(2)])
		shallowGuard(25783)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(25581)	shallowThen
		match(x(2) ht(25782 [onScalar(unit 25585) onScalar(hint 25602) onRecord(line 1 25619) onRecord('pos' 3 25635) onRecord(hint [l] 25671) onRecord(hint [m] 25687) onRecord(hint [l m] 25734)]))
lbl(25585)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25602)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25619)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25635)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		genFastCall(<P: 287> 10)
		putRecord('#' 2 x(0))
		setConstant('in ')
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25671)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25687)	allocateL2
		getVariable(y(0))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		putConstant(2 x(3))
		inlinePlus(x(2) x(3) x(4))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL2
		tailCall(g(0) 1)
lbl(25734)	allocateL3
		getVarVar(y(0) y(1))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		inlinePlus1(x(2) x(3))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(':')
		setValue(y(2))
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(0) 1)
lbl(25782)	return
lbl(25783)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(25565)
lbl(25796)	move(y(1) x(0))
		move(x(3) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(25527)
lbl(25808)	definition(x(4) 25881 pid('Location' 2 pos('./sp/Error.oz' 368 6) nil 4) <Q: 311> nil)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) nil 25827)
lbl(25822)	getLiteral(nil y(0))
		deAllocateL1
		return
lbl(25827)	testLiteral(x(0) unit 25833)
		branch(25822)
lbl(25833)	getList(y(0))
		unifyLiteral('')
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 2 x(2))
		unifyLiteral('Level: ')
		unifyVariable(x(3))
lbl(25853)	definition(x(1) 25872 pid('' 3 pos('./sp/Error.oz' 373 33) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' ')
		unifyValue(x(1))
		return
		endDefinition(25853)
lbl(25872)	putConstant('' x(2))
		deAllocateL1
		genFastCall(<P: 32> 9)
		endDefinition(25808)
lbl(25881)	definition(x(4) 26223 pid('DoStack' 3 pos('./sp/Error.oz' 382 2) nil 10) <Q: 312> [x(2)])
		match(x(0) ht(26208 [onScalar(nil 25890) onRecord('|' 2 25894)]))
lbl(25890)	getLiteral(nil x(2))
		return
lbl(25894)	allocateL8
		getVarVar(x(0) y(0))
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26200)
		putConstant(file x(5))
		putConstant('' x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(7)])
		putConstant(line x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(8)])
		putConstant(column x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(9)])
		putConstant('PC' x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(2))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 287> 10)
		move(y(3) x(0))
		inlineDot(x(0) kind x(1) cache)
		createVariable(y(5))
		match(x(1) ht(26059 [onScalar('call/c' 25979) onScalar('call/f' 25984) onScalar('lock/c' 25989) onScalar('lock/f' 25994) onScalar('exception handler/c' 25999) onScalar('exception handler/f' 26004) onScalar('conditional/c' 26009) onScalar('conditional/f' 26014) onScalar('definition/c' 26019) onScalar('definition/f' 26024) onScalar('skip/c' 26029) onScalar('skip/f' 26034) onScalar('fail/c' 26039) onScalar('fail/f' 26044) onScalar('thread/c' 26049) onScalar('thread/f' 26054)]))
lbl(25979)	getLiteral('call' y(5))
		branch(26062)
lbl(25984)	getLiteral('call' y(5))
		branch(26062)
lbl(25989)	getLiteral('lock' y(5))
		branch(26062)
lbl(25994)	getLiteral('lock' y(5))
		branch(26062)
lbl(25999)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26004)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26009)	getLiteral(conditional y(5))
		branch(26062)
lbl(26014)	getLiteral(conditional y(5))
		branch(26062)
lbl(26019)	getLiteral('definition' y(5))
		branch(26062)
lbl(26024)	getLiteral('definition' y(5))
		branch(26062)
lbl(26029)	getLiteral('skip' y(5))
		branch(26062)
lbl(26034)	getLiteral('skip' y(5))
		branch(26062)
lbl(26039)	getLiteral('fail' y(5))
		branch(26062)
lbl(26044)	getLiteral('fail' y(5))
		branch(26062)
lbl(26049)	getLiteral('thread' y(5))
		branch(26062)
lbl(26054)	getLiteral('thread' y(5))
		branch(26062)
lbl(26059)	unify(y(5) x(1))
lbl(26062)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(y(2))
		getRecord('#' 2 x(0))
		unifyVariable(y(6))
		unifyVariable(y(7))
		testLiteral(y(5) 'call' 26165)
lbl(26080)	move(y(3) x(0))
		inlineDot(x(0) data x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 26160)
		move(g(0) x(1))
		inlineDot(x(1) printName x(2) cache)
		move(x(0) y(3))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(3) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 26139)
		testLiteral(y(5) '' 26127)
		getLiteral('object application' y(6))
		branch(26168)
lbl(26127)	getRecord('#' 3 y(6))
		unifyLiteral('object application of class \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26139)	testLiteral(y(5) '' 26148)
		getLiteral(procedure y(6))
		branch(26168)
lbl(26148)	getRecord('#' 3 y(6))
		unifyLiteral('procedure \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26160)	getLiteral('procedure _' y(6))
		branch(26168)
lbl(26165)	unify(y(6) y(5))
lbl(26168)	testLiteral(y(4) nil 26177)
		getLiteral(nil y(7))
		branch(26185)
lbl(26177)	getRecord('#' 2 y(7))
		unifyLiteral(' in ')
		unifyValue(y(4))
lbl(26185)	move(y(1) x(0))
		inlineMinus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL8
		genFastCall(<Q: 312> 7)
lbl(26200)	getList(x(2))
		unifyLiteral('...')
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(26208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(25881)
lbl(26223)	definition(x(4) 26337 pid('GetStack' 3 pos('./sp/Error.oz' 442 2) nil 5) <Q: 313> nil)
		testLiteral(x(0) unit 26237)
		getLiteral(nil x(2))
		return
lbl(26237)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26331)
		allocateL4
lbl(26246)	definition(x(3) 26264 pid('' 2 pos('./sp/Error.oz' 446 21) nil 4) unit nil)
		putConstant(toplevel x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(26246)
lbl(26264)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 26299 26320)
		getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('On toplevel')
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(26299)	getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('CallStack: ')
		unifyVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 312> 7)
lbl(26320)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(446)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(26331)	getLiteral(nil x(2))
		return
		endDefinition(26223)
lbl(26337)	definition(x(4) 26485 pid('ErrorTitle' 2 pos('./sp/Error.oz' 488 2) nil 6) <Q: 314> [g(7) g(8)])
		allocateL5
		putConstant(kind x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(4) unit 26367)
lbl(26362)	getLiteral('' y(1))
		branch(26377)
lbl(26367)	getRecord('#' 3 y(1))
		unifyLiteral(' ')
		unifyValue(x(4))
		unifyLiteral(' ')
lbl(26377)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		move(g(0) x(0))
		move(y(2) x(1))
		inlineMinus(x(0) x(1) x(2))
		move(g(1) x(1))
		inlineMinus(x(2) x(1) x(3))
		putConstant(2 x(4))
		callBI('div' [x(3) x(4)]#[x(5)])
		inlinePlus1(x(3) x(2))
		putConstant(2 x(3))
		callBI('div' [x(2) x(3)]#[x(4)])
		move(x(4) y(2))
		move(x(5) x(0))
		putConstant(42 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 289> 6)
		move(y(2) x(0))
		putConstant(42 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 289> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		move(y(4) x(3))
		putConstant('%***' x(0))
		putConstant('\n' x(4))
		sendMsg('#' y(0) 5 cache)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL5
		tailCall(x(1) 1)
		endDefinition(26337)
lbl(26485)	definition(x(4) 26544 pid('ErrorMsgLine' 2 pos('./sp/Error.oz' 503 2) nil 5) <Q: 315> nil)
		putConstant(msg x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26505)
lbl(26504)	return
lbl(26505)	allocateL2
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		move(y(1) x(0))
		call(y(0) 1)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(26485)
lbl(26544)	definition(x(4) 26572 pid('ErrorItems' 2 pos('./sp/Error.oz' 512 2) nil 5) <Q: 316> nil)
		putConstant(items x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26564)
lbl(26563)	return
lbl(26564)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26544)
lbl(26572)	definition(x(4) 26628 pid('ErrorLoc' 2 pos('./sp/Error.oz' 521 2) nil 5) <Q: 317> [g(9)])
		putConstant(loc x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26592)
lbl(26591)	return
lbl(26592)	allocateL3
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 311> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26572)
lbl(26628)	definition(x(4) 26713 pid('ErrorStack' 2 pos('./sp/Error.oz' 532 2) nil 5) <Q: 318> [x(1) g(9)])
		putConstant(stack x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26648)
lbl(26647)	return
lbl(26648)	allocateL3
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(y(2) x(0))
		inlineDot(x(0) 'thread' x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 313> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26628)
lbl(26713)	definition(x(4) 26755 pid('ErrorFooter' 2 pos('./sp/Error.oz' 544 2) nil 5) <Q: 319> [g(10)])
		putConstant(footer x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testBool(x(4) 26741 26742)
		move(x(0) x(1))
		move(g(0) x(0))
		tailCall(x(1) 1)
lbl(26741)	return
lbl(26742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(26713)
lbl(26755)	definition(x(4) 26783 pid('ErrorInfo' 2 pos('./sp/Error.oz' 550 2) nil 5) <Q: 320> nil)
		putConstant(info x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26775)
lbl(26774)	return
lbl(26775)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26755)
lbl(26783)	definition(x(4) 26841 pid('ErrorMsg' 2 pos('./sp/Error.oz' 559 2) nil 2) <Q: 321> nil)
		testLiteral(x(1) none 26794)
lbl(26793)	return
lbl(26794)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26783)
lbl(26841)	definition(x(10) 26923 pid('ErrorMsgDebug' 2 pos('./sp/Error.oz' 571 2) nil 2) <Q: 322> nil)
		testLiteral(x(1) none 26852)
lbl(26851)	return
lbl(26852)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 317> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 320> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 318> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26841)
lbl(26923)	definition(x(11) 27159 pid('Format' 5 pos('./sp/Error.oz' 591 6) nil 10) <Q: 323> [g(11)])
		allocateL7
		putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(footer)
		setValue(x(9))
		putList(x(7))
		setConstant(stack)
		setValue(x(8))
		putList(x(6))
		setConstant(loc)
		setValue(x(7))
		putList(x(5))
		setConstant(items)
		setValue(x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(error y(5))
		createVariable(y(6))
		testLiteral(y(0) unit 26999)
		testLiteral(y(1) unit 26991)
		unify(y(6) x(5))
		branch(27023)
lbl(26991)	getList(y(6))
		unifyLiteral(msg)
		unifyValue(x(5))
		branch(27023)
lbl(26999)	testLiteral(y(1) unit 27011)
		getList(y(6))
		unifyLiteral(kind)
		unifyValue(x(5))
		branch(27023)
lbl(27011)	getList(y(6))
		unifyLiteral(kind)
		unifyVariable(x(6))
		getList(x(6))
		unifyLiteral(msg)
		unifyValue(x(5))
lbl(27023)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		move(y(4) x(2))
		genFastCall(<P: 110> 6)
		testLiteral(y(0) unit 27040)
		branch(27052)
lbl(27040)	move(y(4) x(0))
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(0))
lbl(27052)	move(y(1) x(0))
		putConstant(unit x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		testBool(x(2) 27090 27079)
		move(y(4) x(1))
		inlineDot(x(1) msg x(2) cache)
		unify(x(2) y(1))
		branch(27090)
lbl(27079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(608)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27090)	move(y(4) x(0))
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(2))
		inlineDot(x(0) loc x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 303> 4)
		move(y(4) x(0))
		inlineDot(x(0) stack x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 304> 4)
		putConstant(true x(2))
		move(y(4) x(0))
		inlineDot(x(0) footer x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) info x(1) cache)
		move(y(3) x(0))
		deAllocateL7
		genFastCall(<Q: 302> 5)
		endDefinition(26923)
lbl(27159)	definition(x(12) 27281 pid('FormatReRaiseExc' 3 pos('./sp/Error.oz' 619 6) nil 14) <Q: 324> nil)
		allocateL3
		getRecord(error [items loc stack title] x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('Unable to Print Error Message')
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(hint [l m] x(3))
		unifyLiteral('Initial exception')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(0))
		getList(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(hint [l m] x(6))
		unifyLiteral('Format exception Kind')
		unifyVariable(x(8))
		getList(x(7))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(hint [l m] x(9))
		unifyLiteral('Format exception')
		unifyVariable(x(11))
		getRecord(oz 1 x(11))
		unifyVariable(x(12))
		getList(x(10))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(line 1 x(13))
		unifyLiteral('Please send bug report to oz@ps.uni-sb.de')
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(8))
		move(x(0) y(2))
		move(x(1) x(0))
		move(x(12) x(1))
		genFastCall(<Q: 300> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 303> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 304> 5)
		endDefinition(27159)
lbl(27281)	definition(x(12) 27325 pid('GenericFormatter' 3 pos('./sp/Error.oz' 635 6) nil 6) <Q: 325> nil)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(line 1 x(3))
		setValue(x(4))
		putList(x(5))
		setValue(x(3))
		setConstant(nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(unit x(0))
		genFastCall(<Q: 323> 11)
		endDefinition(27281)
lbl(27325)	definition(x(13) 27619 pid('FormatOzError' 2 pos('./sp/Error.oz' 643 6) nil 5) <Q: 326> [x(3)])
		testBI('IsRecord' [x(0)]#[x(2)] 27605)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'failure' 27378)
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('failure' x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(27378)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Error: unhandled exception' y(2))
		testLiteral(x(2) error 27519)
lbl(27391)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 301> 4)
		testBool(y(3) 27496 27508)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 300> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) exists x(2) cache)
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 27473 27485)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27473)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27485)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(655)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27496)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27508)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27519)	testLiteral(x(2) system 27525)
		branch(27391)
lbl(27525)	callBI('Label' [x(0)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) exists x(4) cache)
		moveMoveXYYX(x(2) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(4) 2)
		testBool(y(4) 27582 27594)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27582)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(665)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27605)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant('Error: unhandled exception' x(0))
		genFastCall(<Q: 325> 7)
		endDefinition(27325)
lbl(27619)	definition(x(3) 27715 pid('DefExHdl' 1 pos('./sp/Error.oz' 681 2) nil 3) <Q: 327> [x(10) g(12) x(2)])
		allocateL2
		move(x(0) y(0))
		exHandler(27654)
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 324> 6)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		branch(27679)
lbl(27654)	putConstant(high x(0))
		genFastCall(<P: 262> 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 326> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		popEx
lbl(27679)	move(g(2) x(0))
		inlineDot(x(0) onToplevel x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		testBool(y(0) 27700 27702)
		deAllocateL2
		return
lbl(27700)	deAllocateL2
		failure
lbl(27702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(27619)
lbl(27715)	inlineDot(x(1) put x(2) cache)
		moveMoveXYXY(x(1) y(1) x(5) y(2))
		moveMoveXYXY(x(6) y(3) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYXY(x(4) y(7) x(10) y(8))
		moveMoveXYXY(x(11) y(9) x(12) y(10))
		move(x(13) y(11))
		move(x(3) x(1))
		putConstant('errors.handler' x(0))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('errors.handler' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		getRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] g(13))
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(g(14))
		unifyValue(y(2))
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(1))
		deAllocateL
		return
		endDefinition(24298)
lbl(27810)	tailCall(x(3) 0)
		endDefinition(24076)
lbl(27815)	putList(x(4))
		setConstant(exists)
		setConstant(nil)
		putList(x(3))
		setConstant(get)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putList(x(6))
		setConstant(get)
		setValue(x(7))
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(12))
		setConstant(onToplevel)
		setConstant(nil)
		putList(x(11))
		setConstant(valueToVirtualString)
		setValue(x(12))
		putList(x(10))
		setConstant(printError)
		setValue(x(11))
		putList(x(9))
		setConstant(printName)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord('import' ['ErrorRegistry' 'Property' 'System'] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putConstant('procedure/2' x(4))
		putConstant('procedure/5' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/3' x(8))
		putConstant('procedure/2' x(9))
		putConstant('procedure/2' x(10))
		putConstant('procedure/5' x(11))
		putConstant('procedure/2' x(12))
		putConstant('procedure/2' x(13))
		putConstant('procedure/2' x(14))
		putConstant('procedure/2' x(15))
		putConstant(value x(16))
		putRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		createVariableMove(y(224) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(27966)	definition(x(4) 28131 pid('LayoutDot' 5 pos('./sp/ErrorRegistry.oz' 33 3) nil 11) <P: 328> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('IsDet' [x(0)]#[x(5)] 28112)
lbl(27990)	testBI('IsRecord' [x(0)]#[x(5)] 28112)
lbl(27994)	callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		putConstant(5 x(1))
		testLT(x(1) x(0) x(2) 28112)
lbl(28017)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		getRecord('#' 6 x(2))
		unifyLiteral('R ')
		unifyValue(y(3))
		unifyLiteral(' ')
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(1))
		getRecord(oz 1 x(4))
		unifyValue(y(2))
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(hint [l m] x(5))
		unifyLiteral('Expected fields')
		unifyVariable(x(7))
		getRecord(list 2 x(7))
		unifyVariable(x(8))
		unifyLiteral(' ')
		getList(x(6))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(hint [l m] x(9))
		unifyLiteral('Record value')
		unifyVariable(x(10))
		getRecord(oz 1 x(10))
		unifyValue(y(0))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(8))
		deAllocateL6
		return
lbl(28112)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		genFastCall(<P: 329> 11)
		endDefinition(27966)
lbl(28131)	definition(x(4) 28188 pid('LayoutComma' 3 pos('./sp/ErrorRegistry.oz' 46 3) nil 8) <P: 330> nil)
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(hint [l m] x(2))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		getRecord('#' 2 x(4))
		unifyLiteral('C, ')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(1))
		getList(x(3))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(hint [l m] x(6))
		unifyLiteral('Class value')
		unifyVariable(x(7))
		getRecord(oz 1 x(7))
		unifyValue(x(0))
		return
		endDefinition(28131)
lbl(28188)	definition(x(4) 28247 pid('LayoutBin' 5 pos('./sp/ErrorRegistry.oz' 51 3) nil 9) <P: 329> nil)
		getList(x(4))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(5))
		getRecord('#' 7 x(5))
		unifyVariable(x(6))
		unifyLiteral(' ')
		unifyValue(x(3))
		unifyLiteral(' ')
		unifyVariable(x(7))
		unifyLiteral(' = ')
		unifyVariable(x(8))
		getRecord(oz 1 x(6))
		unifyValue(x(0))
		getRecord(oz 1 x(7))
		unifyValue(x(1))
		getRecord(oz 1 x(8))
		unifyValue(x(2))
		return
		endDefinition(28188)
lbl(28247)	definition(x(2) 34810 pid('' 2 pos('./sp/ErrorRegistry.oz' 57 3) nil 4) <P: 331> [y(128) y(151) y(191) y(192) y(208) y(209) y(1) y(148) y(149) y(156)])
		putList(x(2))
		setPredicateRef(<Q: 332>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 341>)
		setValue(x(2))
lbl(28313)	definitionCopy(x(3) 34805 pid('/body' 0 pos('./sp/ErrorRegistry.oz' 57 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) x(1)])
		allocateL9
		move(g(0) x(0))
		inlineDot(x(0) 'Error' x(2) cache)
lbl(28329)	definition(x(1) 31295 pid('KernelFormatter' 2 pos('./sp/ErrorRegistry.oz' 79 6) nil 20) <Q: 332> [x(2) g(1) g(2) g(3) g(4) g(5) g(6)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) kernel 6 29165)
lbl(28361)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) type 29165)
		putRecord('#' 2 y(2))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		move(x(5) y(8))
		testRecord(y(2) '#' 2 28475)
lbl(28402)	getVarVar(x(0) x(6))
		shallowGuard(28475)
		getLiteral('.' x(0))
		getList(x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(28428)	shallowThen
		move(x(6) x(1))
		move(x(8) x(2))
		putConstant('.' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28475)	testRecord(y(2) '#' 2 28550)
lbl(28480)	getVarVar(x(0) x(1))
		shallowGuard(28550)
		getLiteral('^' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28506)	shallowThen
		move(x(3) x(2))
		putConstant('^' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28550)	testRecord(y(2) '#' 2 28616)
lbl(28555)	getVarVar(x(0) x(1))
		shallowGuard(28616)
		getLiteral(',' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28575)	shallowThen
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 330> 6)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28616)	testRecord(y(2) '#' 2 28747)
lbl(28621)	getVarVar(x(0) x(1))
		shallowGuard(28747)
		getLiteral('+1' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28641)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' + 1 = ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(9))
		setValue(x(0))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord('#' 4 x(8))
		setConstant('1 + ')
		setValue(x(9))
		setConstant(' = ')
		setValue(x(10))
		putRecord(hint [l m] x(7))
		setConstant('Possible origin')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(y(2))
		setValue(x(1))
		setValue(x(6))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28747)	testRecord(y(2) '#' 2 28842)
lbl(28752)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(28842)
		getLiteral(fdTellConstraint x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28774)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' :: ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putList(y(6))
		setValue(x(1))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28842)	putList(x(8))
		setConstant('\\=')
		setConstant(nil)
		putList(x(7))
		setConstant('>=')
		setValue(x(8))
		putList(x(6))
		setConstant('=<')
		setValue(x(7))
		putList(x(5))
		setConstant('>')
		setValue(x(6))
		putList(x(4))
		setConstant('<')
		setValue(x(5))
		putList(x(3))
		setConstant('/')
		setValue(x(4))
		putList(x(2))
		setConstant('*')
		setValue(x(3))
		putList(x(0))
		setConstant('-')
		setValue(x(2))
		putList(x(1))
		setConstant('+')
		setValue(x(0))
		move(y(6) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 29007 29069)
		createVariable(y(9))
		testList(y(7) 28945)
lbl(28914)	getVarVar(x(0) x(1))
		shallowGuard(28945)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28931)	shallowThen
		move(x(3) x(2))
		moveMoveYXYX(y(6) x(3) y(9) x(4))
		genFastCall(<P: 329> 10)
		branch(28976)
lbl(28945)	getList(y(9))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(28976)	move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29007)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setVariable(x(2))
		putList(y(9))
		setValue(x(0))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(117)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(29080)	move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('type error' y(3))
		createVariable(y(7))
		testNumber(y(4) 0 29120)
lbl(29115)	unify(y(7) y(5))
		branch(29134)
lbl(29120)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(4))
lbl(29134)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29165)	testRecord(y(2) kernel 6 29338)
lbl(29170)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) instantiation 29338)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(5) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setConstant(nil)
		move(y(6) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('instantiation error' y(2))
		createVariable(y(7))
		testNumber(y(3) 0 29293)
lbl(29288)	unify(y(7) y(4))
		branch(29307)
lbl(29293)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(3))
lbl(29307)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29338)	testRecord(y(2) kernel 3 29414)
lbl(29343)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) apply 29414)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		inlineDot(x(0) formatAppl x(4) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(4) 3)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(3))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(5) y(0) x(3))
		move(y(1) x(4))
		putConstant('error in application' x(0))
		putConstant('Application of non-procedure and non-object' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29414)	testRecord(y(2) kernel 3 29477)
lbl(29419)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '.' 29477)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariable(x(2))
		putConstant('.' x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 328> 10)
		moveMoveYXYX(y(2) x(5) y(3) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: illegal field selection' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29477)	testRecord(y(2) kernel 3 29560)
lbl(29482)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) recordConstruction 29560)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Label')
		setValue(x(4))
		putRecord(list 2 x(9))
		setValue(x(2))
		setConstant(' ')
		putRecord(hint [l m] x(8))
		setConstant('Feature-field Pairs')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: duplicate fields' x(0))
		putConstant('Duplicate fields in record construction' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29560)	testRecord(y(2) kernel 3 29744)
lbl(29565)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) arity 29744)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariable(y(4))
		testBI('IsProcedure' [x(1)]#[x(0)] 29593)
		callBI('ProcedureArity' [x(1)]#[x(0)])
		unify(x(0) y(4))
		branch(29596)
lbl(29593)	getNumber(1 y(4))
lbl(29596)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(7) x(2))
		call(x(3) 3)
		putConstant('Error: illegal number of arguments' y(2))
		createVariable(y(3))
		testNumber(y(4) 1 29648)
		getLiteral('' y(3))
		branch(29651)
lbl(29648)	getLiteral(s y(3))
lbl(29651)	createVariable(y(8))
		testNumber(y(5) 1 29662)
		getLiteral('' y(8))
		branch(29665)
lbl(29662)	getLiteral(s y(8))
lbl(29665)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(7))
		putRecord('#' 3 x(4))
		setValue(y(4))
		setConstant(' argument')
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('Expected')
		setValue(x(4))
		putRecord('#' 3 x(7))
		setValue(y(5))
		setConstant(' argument')
		setValue(y(8))
		putRecord(hint [l m] x(6))
		setConstant('Found')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(2) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29744)	testRecord(y(2) kernel 2 29794)
lbl(29749)	getVarVar(x(0) x(1))
		testLiteral(x(0) noElse 29794)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29794)	testRecord(y(2) kernel 3 29869)
lbl(29799)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) noElse 29869)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Matching')
		setValue(x(8))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29869)	testRecord(y(2) kernel 2 29919)
lbl(29874)	getVarVar(x(0) x(1))
		testLiteral(x(0) boolCaseType 29919)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: boolean conditional failed' x(0))
		putConstant('Non-boolean value found' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29919)	testRecord(y(2) kernel 2 29985)
lbl(29924)	getVarVar(x(0) x(1))
		testLiteral(x(0) div0 29985)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' div 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29985)	testRecord(y(2) kernel 2 30051)
lbl(29990)	getVarVar(x(0) x(1))
		testLiteral(x(0) mod0 30051)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' mod 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30051)	testRecord(y(2) kernel 3 30155)
lbl(30056)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) dict 30155)
		callBI('Dictionary.keys' [x(1)]#[x(5)])
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Dictionary')
		setValue(x(4))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Key found')
		setValue(x(10))
		putRecord(oz 1 x(13))
		setValue(x(5))
		putRecord(hint [l m] x(12))
		setConstant('Legal keys')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(3))
		setValue(x(8))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Dictionary' x(0))
		putConstant('Key not found' x(1))
		deAllocateL10
		tailCall(x(6) 5)
lbl(30155)	testRecord(y(2) kernel 3 30260)
lbl(30160)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) array 30260)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Array.low' [x(1)]#[x(6)])
		callBI('Array.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index Found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Array' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30260)	testRecord(y(2) kernel 3 30329)
lbl(30265)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.new' 30329)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Lower bound')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Upper bound')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Illegal boundaries to BitArray.new' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30329)	testRecord(y(2) kernel 3 30434)
lbl(30334)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.index' 30434)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Bit array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30434)	testRecord(y(2) kernel 3 30575)
lbl(30439)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.binop' 30575)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		callBI('BitArray.low' [x(2)]#[x(8)])
		callBI('BitArray.high' [x(2)]#[x(9)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('First bit array')
		setValue(x(4))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('First bounds')
		setValue(x(13))
		putRecord(oz 1 x(16))
		setValue(x(2))
		putRecord(hint [l m] x(15))
		setConstant('Second bit array')
		setValue(x(16))
		putRecord('#' 3 x(19))
		setValue(x(8))
		setConstant(' - ')
		setValue(x(9))
		putRecord(hint [l m] x(18))
		setConstant('Second bounds')
		setValue(x(19))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(14))
		setValue(x(15))
		setValue(x(17))
		putList(x(11))
		setValue(x(12))
		setValue(x(14))
		putList(x(10))
		setValue(x(3))
		setValue(x(11))
		move(x(10) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Incompatible bounds in binary operation on BitArrays' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30575)	testRecord(y(2) kernel 2 30635)
lbl(30580)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoFloat 30635)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to float failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30635)	testRecord(y(2) kernel 2 30695)
lbl(30640)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoInt 30695)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to integer failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30695)	testRecord(y(2) kernel 2 30755)
lbl(30700)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoAtom 30755)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to atom failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30755)	testRecord(y(2) kernel 2 30815)
lbl(30760)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoValue 30815)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to Oz value failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30815)	testRecord(y(2) kernel 2 30918)
lbl(30820)	getVarVar(x(0) x(1))
		testLiteral(x(0) globalState 30918)
		createVariable(y(2))
		testLiteral(x(1) array 30838)
lbl(30833)	getLiteral('Assignment to global array' y(2))
		branch(30886)
lbl(30838)	testLiteral(x(1) dict 30847)
lbl(30842)	getLiteral('Assignment to global dictionary' y(2))
		branch(30886)
lbl(30847)	testLiteral(x(1) cell 30856)
lbl(30851)	getLiteral('Assignment to global cell' y(2))
		branch(30886)
lbl(30856)	testLiteral(x(1) io 30865)
lbl(30860)	getLiteral('Input/Output' y(2))
		branch(30886)
lbl(30865)	testLiteral(x(1) object 30874)
lbl(30869)	getLiteral('Assignment to global object' y(2))
		branch(30886)
lbl(30874)	testLiteral(x(1) 'lock' 30883)
lbl(30878)	getLiteral('Request of global lock' y(2))
		branch(30886)
lbl(30883)	unify(y(2) x(1))
lbl(30886)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 2 x(1))
		setValue(y(2))
		setConstant(' from local space')
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: space hierarchy' x(0))
		putConstant(nil x(2))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30918)	testRecord(y(2) kernel 2 30974)
lbl(30923)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceMerged 30974)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Space already merged' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30974)	testRecord(y(2) kernel 2 31030)
lbl(30979)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceSuper 31030)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Merge of superordinated space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31030)	testRecord(y(2) kernel 2 31086)
lbl(31035)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceParent 31086)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Current space must be parent space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31086)	testRecord(y(2) kernel 2 31142)
lbl(31091)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceNoChoice 31142)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('No choices left' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31142)	testRecord(y(2) kernel 2 31198)
lbl(31147)	getVarVar(x(0) x(1))
		testLiteral(x(0) portClosed 31198)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Port')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Port' x(0))
		putConstant('Port already closed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31198)	testRecord(y(2) kernel 1 31214)
lbl(31203)	getVariable(x(0))
		testLiteral(x(0) terminate 31214)
		getLiteral(none y(1))
		deAllocateL10
		return
lbl(31214)	testRecord(y(2) kernel 2 31272)
lbl(31219)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) block 31272)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Thread')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Thread' x(0))
		putConstant('Purely sequential thread blocked' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31272)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('Kernel' x(0))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(28329)
lbl(31295)	definition(x(3) 32387 pid('ObjectFormatter' 2 pos('./sp/ErrorRegistry.oz' 470 6) nil 16) <Q: 333> [x(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in object system' y(3))
		testRecord(y(2) object 4 31448)
lbl(31330)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) '<-' 31448)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(oz 1 x(9))
		setValue(x(3))
		putRecord('#' 3 x(4))
		setValue(x(8))
		setConstant(' <- ')
		setValue(x(9))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(4))
		putRecord(oz 1 x(12))
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Attribute does not exist')
		setValue(x(12))
		putRecord(list 2 x(15))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(14))
		setConstant('Expected Attribute(s)')
		setValue(x(15))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(13))
		putList(x(7))
		setValue(x(1))
		setValue(x(10))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31448)	testRecord(y(2) object 3 31564)
lbl(31453)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '@' 31564)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(4))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setConstant('@')
		setValue(x(4))
		setConstant(' = _')
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Attribute does not exist')
		setValue(x(10))
		putRecord(list 2 x(13))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(12))
		setConstant('Expected attribute(s)')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31564)	testRecord(y(2) object 5 31668)
lbl(31569)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		testLiteral(x(0) sharing 31668)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(8))
		setValue(x(1))
		setConstant(' and ')
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Classes')
		setValue(x(8))
		putRecord('#' 2 x(11))
		setConstant('Shared ')
		setValue(x(3))
		putRecord(oz 1 x(13))
		setValue(x(4))
		putRecord('#' 2 x(12))
		setValue(x(13))
		setConstant(' (is not redefined)')
		putRecord(hint [l m] x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes not ordered by inheritance' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31668)	testRecord(y(2) object 2 31832)
lbl(31673)	getVarVar(x(0) x(1))
		shallowGuard(31832)
		getLiteral(order x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31695)	shallowThen
lbl(31696)	definition(x(0) 31715 pid('Rel' 3 pos('./sp/ErrorRegistry.oz' 498 5) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' < ')
		unifyValue(x(1))
		return
		endDefinition(31696)
lbl(31715)	move(g(0) x(4))
		inlineDot(x(4) format x(5) cache)
		moveMoveXYXY(x(1) y(2) x(0) y(4))
		move(x(5) y(5))
		move(x(2) x(0))
		move(x(3) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
lbl(31744)	definition(x(1) 31792 pid('' 2 pos('./sp/ErrorRegistry.oz' 503 16) nil 5) unit [y(4)])
		shallowGuard(31779)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31760)	shallowThen
		getRecord(hint [m] x(1))
		unifyVariable(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		tailCall(g(0) 3)
lbl(31779)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(31744)
lbl(31792)	move(y(2) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		putRecord(hint [l m] x(0))
		setConstant('Relation found')
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(y(4))
		moveMoveYXYX(y(5) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes cannot be ordered' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31832)	testRecord(y(2) object 3 31928)
lbl(31837)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) lookup 31928)
		putRecord(oz 1 x(0))
		setValue(x(1))
		putRecord(hint [l m] y(2))
		setConstant('Class')
		setValue(x(0))
		putRecord(oz 1 x(0))
		setValue(x(2))
		putRecord(hint [l m] y(4))
		setConstant('Message')
		setValue(x(0))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('Method undefined and no otherwise method given' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method lookup in message sending' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31928)	testRecord(y(2) object 3 32012)
lbl(31933)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) final 32012)
		putRecord(hint [l m] y(2))
		setConstant('Final class used as parent')
		setValue(x(1))
		putRecord(hint [l m] y(4))
		setConstant('Class to be created')
		setValue(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('remove prop final from parent class or change inheritance relation' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Inheritance from final class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32012)	testRecord(y(2) object 3 32087)
lbl(32017)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) inheritanceFromNonClass 32087)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Non-class used as parent')
		setValue(x(4))
		putRecord(hint [l m] x(8))
		setConstant('Class to be created')
		setValue(x(2))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Inheritance from non-class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32087)	testRecord(y(2) object 2 32143)
lbl(32092)	getVarVar(x(0) x(1))
		testLiteral(x(0) arityMismatchDefaultMethod 32143)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Unexpected feature')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Arity mismatch for method with defaults' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32143)	testRecord(y(2) object 1 32190)
lbl(32148)	getVariable(x(0))
		testLiteral(x(0) slaveNotFree 32190)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is not free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method becomeSlave' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32190)	testRecord(y(2) object 1 32237)
lbl(32195)	getVariable(x(0))
		testLiteral(x(0) slaveAlreadyFree 32237)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is already free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method free' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32237)	testRecord(y(2) object 2 32293)
lbl(32242)	getVarVar(x(0) x(1))
		testLiteral(x(0) locking 32293)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Object')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Attempt to lock unlockable object' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32293)	testRecord(y(2) object 3 32364)
lbl(32298)	getVarVar(x(0) x(1))
		getVariable(x(2))
		createVariable(y(2))
		testLiteral(x(0) fromFinalClass 32364)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Final class')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Operation')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Final class not allowed' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32364)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(31295)
lbl(32387)	definition(x(4) 33160 pid('FailureFormatter' 2 pos('./sp/ErrorRegistry.oz' 574 6) nil 12) <Q: 334> [x(2)])
		allocateL8
		move(g(0) x(2))
		inlineDot(x(2) info x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testLiteral(y(2) unit 32439)
lbl(32418)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('failure' x(0))
		deAllocateL8
		tailCall(x(3) 3)
lbl(32439)	testLiteral(y(2) 'fail' 32481)
lbl(32443)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setConstant('fail')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32481)	testRecord(y(2) apply 2 32958)
lbl(32486)	getVarVar(x(0) x(1))
		move(g(0) x(2))
		inlineDot(x(2) format x(3) cache)
		putRecord('#' 2 y(2))
		setValue(x(0))
		setValue(x(1))
		putConstant('failure' y(3))
		move(x(3) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(0) y(6) x(1) y(7))
		testRecord(y(2) '#' 2 32585)
lbl(32524)	getVarVar(x(4) x(5))
		shallowGuard(32585)
		getLiteral('^' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(32544)	shallowThen
		getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Tell')
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyVariable(x(5))
		unifyLiteral(' ^ ')
		unifyVariable(x(7))
		unifyLiteral(' = _')
		getRecord(oz 1 x(5))
		unifyValue(x(4))
		getRecord(oz 1 x(7))
		unifyValue(x(6))
		branch(32938)
lbl(32585)	testRecord(y(2) '#' 2 32649)
lbl(32590)	getVarVar(x(0) x(1))
		shallowGuard(32649)
		getLiteral('=' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32610)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' = ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32649)	testRecord(y(2) '#' 2 32713)
lbl(32654)	getVarVar(x(0) x(1))
		shallowGuard(32713)
		getLiteral(fdPutList x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32674)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' :: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32713)	testRecord(y(2) '#' 2 32777)
lbl(32718)	getVarVar(x(0) x(1))
		shallowGuard(32777)
		getLiteral(fdPutGe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32738)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' >: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32777)	testRecord(y(2) '#' 2 32841)
lbl(32782)	getVarVar(x(0) x(1))
		shallowGuard(32841)
		getLiteral(fdPutLe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32802)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' <: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32841)	testRecord(y(2) '#' 2 32907)
lbl(32846)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(32907)
		getLiteral(fdPutNot x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32868)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' \\=: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32907)	getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(32938)	moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32958)	testRecord(y(2) eq 2 33026)
lbl(32963)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33026)	testRecord(y(2) tell 2 33114)
lbl(33031)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putRecord(oz 1 x(11))
		setValue(x(5))
		putRecord(hint [l m] x(10))
		setConstant('Store')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(9))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33114)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(1))
		setConstant('??? ')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
		endDefinition(32387)
lbl(33160)	definition(x(5) 33330 pid('RecordCFormatter' 2 pos('./sp/ErrorRegistry.oz' 645 6) nil 7) <Q: 335> [x(2)])
		allocateL9
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: records' y(3))
		testRecord(y(2) record 5 33307)
lbl(33195)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) width 33307)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(x(5) y(6))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(7) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(3))
		setConstant('Statement')
		setValue(y(7))
		putList(x(1))
		setValue(x(3))
		setValue(y(8))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL9
		tailCall(x(5) 5)
lbl(33307)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL9
		tailCall(x(3) 3)
		endDefinition(33160)
lbl(33330)	definition(x(6) 34066 pid('SystemFormatter' 2 pos('./sp/ErrorRegistry.oz' 670 6) nil 11) <Q: 336> [x(2)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('system error' y(3))
		testRecord(y(2) system 2 33416)
lbl(33365)	getVarVar(x(0) x(1))
		testLiteral(x(0) parameter 33416)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Illegal system parameter ')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33416)	testRecord(y(2) system 2 33466)
lbl(33421)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitInternal 33466)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Internal System Limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33466)	testRecord(y(2) system 2 33516)
lbl(33471)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitExternal 33516)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('External system limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33516)	testRecord(y(2) system 2 33566)
lbl(33521)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackInstalledTwice 33566)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure installed twice')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33566)	testRecord(y(2) system 2 33616)
lbl(33571)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackNotInstalled 33616)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure not installed')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33616)	testRecord(y(2) system 2 33666)
lbl(33621)	getVarVar(x(0) x(1))
		testLiteral(x(0) builtinUndefined 33666)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Requested')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Undefined builtin' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33666)	testRecord(y(2) system 4 33750)
lbl(33671)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) builtinArity 33750)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in Oz-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33750)	testRecord(y(2) system 4 33834)
lbl(33755)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) inconsistentArity 33834)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in emulator-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33834)	testRecord(y(2) system 1 33893)
lbl(33839)	getVariable(x(0))
		testLiteral(x(0) inconsistentFastcall 33893)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Inconsistency in optimized application')
		putRecord(hint [l] x(4))
		setConstant('Maybe due to previous toplevel failure')
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal inconsistency' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33893)	testRecord(y(2) system 1 33931)
lbl(33898)	getVariable(x(0))
		testLiteral(x(0) onceOnlyFunctor 33931)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Procedure definition with flag `once\' executed more than once' x(1))
		putConstant(nil x(2))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33931)	testRecord(y(2) system 2 33991)
lbl(33936)	getVarVar(x(0) x(1))
		testLiteral(x(0) fatal 33991)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(line 1 x(3))
		setValue(x(1))
		putRecord(line 1 x(6))
		setConstant('Please send bug report to oz@ps.uni-sb.de')
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Fatal exception' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33991)	testRecord(y(2) system 2 34043)
lbl(33996)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) reinstallFormatter 34043)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Exception name already in use')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Registration of error formatter failed' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34043)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(33330)
lbl(34066)	definition(x(7) 34283 pid('OSFormatter' 2 pos('./sp/ErrorRegistry.oz' 796 6) nil 11) <Q: 337> [x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) os 4 34260)
lbl(34098)	getVarVar(x(0) x(5))
		getVarVar(x(6) x(7))
		match(x(0) ht(34239 [onScalar(os 34107) onScalar(host 34173)]))
lbl(34107)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Operating system error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34173)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Network Error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34239)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(34260)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(34066)
lbl(34283)	definition(x(8) 34610 pid('DPFormatter' 2 pos('./sp/ErrorRegistry.oz' 834 6) nil 6) <Q: 338> [x(2)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: distributed programming' y(3))
		testRecord(y(2) dp 3 34417)
lbl(34318)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) generic 34417)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
lbl(34336)	definition(x(4) 34380 pid('' 2 pos('./sp/ErrorRegistry.oz' 843 17) nil 4) unit nil)
		shallowGuard(34367)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(34352)	shallowThen
		getRecord(hint [l m] x(1))
		unifyValVar(x(2) x(0))
		getRecord(oz 1 x(0))
		unifyValue(x(3))
		return
lbl(34367)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(843)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34336)
lbl(34380)	moveMoveXYXY(x(1) y(2) x(3) y(3))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(5) y(2) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34417)	testRecord(y(2) dp 1 34473)
lbl(34422)	getVariable(x(0))
		shallowGuard(34473)
		getRecord(connection 2 x(0))
		unifyLiteral(illegalTicket)
		unifyVariable(x(1))
lbl(34434)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal ticket for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34473)	testRecord(y(2) dp 1 34529)
lbl(34478)	getVariable(x(0))
		shallowGuard(34529)
		getRecord(connection 2 x(0))
		unifyLiteral(refusedTicket)
		unifyVariable(x(1))
lbl(34490)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34529)	testRecord(y(2) dp 1 34587)
lbl(34534)	getVariable(x(0))
		createVariable(y(2))
		shallowGuard(34587)
		getRecord(connection 2 x(0))
		unifyLiteral(ticketToDeadSite)
		unifyVariable(x(1))
lbl(34548)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused: refers to dead site' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34587)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(34283)
lbl(34610)	callBI('NewDictionary' nil#[x(2)])
lbl(34613)	definition(x(9) 34672 pid('NewFormatter' 2 pos('./sp/ErrorRegistry.oz' 874 6) nil 3) <Q: 339> [g(7) g(8) x(2)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 341> 4)
		testBool(y(2) 34646 34659)
		putRecord(system 2 x(0))
		setConstant(reinstallFormatter)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(34646)	move(g(2) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(34659)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(876)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34613)
lbl(34672)	definition(x(10) 34690 pid('GetFormatter' 2 pos('./sp/ErrorRegistry.oz' 886 6) nil 4) <Q: 340> [g(9) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34672)
lbl(34690)	definition(x(11) 34708 pid('ExFormatter' 2 pos('./sp/ErrorRegistry.oz' 892 6) nil 4) <Q: 341> [g(10) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34690)
lbl(34708)	moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) y(8))
		putConstant(kernel x(0))
		genFastCall(<Q: 339> 4)
		move(y(0) x(1))
		putConstant(object x(0))
		genFastCall(<Q: 339> 4)
		move(y(1) x(1))
		putConstant('failure' x(0))
		genFastCall(<Q: 339> 4)
		move(y(2) x(1))
		putConstant(recordC x(0))
		genFastCall(<Q: 339> 4)
		move(y(3) x(1))
		putConstant(system x(0))
		genFastCall(<Q: 339> 4)
		move(y(5) x(1))
		putConstant(dp x(0))
		genFastCall(<Q: 339> 4)
		move(y(4) x(1))
		putConstant(os x(0))
		genFastCall(<Q: 339> 4)
		getRecord('export' [exists get put] g(11))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(6))
		deAllocateL9
		return
		endDefinition(28313)
lbl(34805)	tailCall(x(3) 0)
		endDefinition(28247)
lbl(34810)	putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(dispatch)
		setValue(x(9))
		putList(x(7))
		setConstant(format)
		setValue(x(8))
		putList(x(6))
		setConstant(formatHint)
		setValue(x(7))
		putList(x(5))
		setConstant(formatTypes)
		setValue(x(6))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord('import' ['Error'] x(0))
		setValue(x(1))
		putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/2' x(6))
		putRecord('export' [exists get put] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(191) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		createVariable(x(4))
lbl(34891)	definition(x(0) 34977 pid('VectorToType' 2 pos('./cp/FD.oz' 33 3) nil 3) <P: 342> [y(1) x(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 34918 34964)
		getLiteral(list y(1))
		deAllocateL3
		return
lbl(34918)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 34930)
		getLiteral(tuple y(1))
		deAllocateL3
		return
lbl(34930)	testBI('IsRecord' [x(0)]#[x(1)] 34939)
		getLiteral(record y(1))
		deAllocateL3
		return
lbl(34939)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setValue(g(1))
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('Vector as input argument expected.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(34964)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34891)
lbl(34977)	unify(x(0) x(4))
lbl(34980)	definition(x(4) 35018 pid('VectorToList' 2 pos('./cp/FD.oz' 44 3) nil 2) <P: 343> [y(165)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) list 35007)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(35007)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
		endDefinition(34980)
lbl(35018)	definition(x(5) 35049 pid('VectorsToLists' 2 pos('./cp/FD.oz' 50 3) nil 3) <P: 344> [x(4)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(35018)
lbl(35049)	definition(x(4) 35098 pid('RecordToTuple' 4 pos('./cp/FD.oz' 55 6) nil 6) <P: 345> nil)
		match(x(0) ht(35083 [onScalar(nil 35058) onRecord('|' 2 35059)]))
lbl(35058)	return
lbl(35059)	getVarVar(x(0) x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(5))
		inlinePlus1(x(1) x(5))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 345> 9)
lbl(35083)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(58)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35049)
lbl(35098)	definition(x(4) 35184 pid('VectorToTuple' 2 pos('./cp/FD.oz' 61 6) nil 5) <P: 346> [y(145)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(35169 [onScalar(list 35119) onScalar(tuple 35131) onScalar(record 35136)]))
lbl(35119)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL3
		genFastCall(<P: 77> 7)
lbl(35131)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(35136)	move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		unify(x(2) y(1))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(1 x(1))
		deAllocateL3
		genFastCall(<P: 345> 9)
lbl(35169)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(67)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(35098)
lbl(35184)	definition(x(4) 35225 pid('CloneList' 2 pos('./cp/FD.oz' 71 3) nil 2) <P: 347> nil)
		match(x(0) ht(35210 [onScalar(nil 35193) onRecord('|' 2 35197)]))
lbl(35193)	getLiteral(nil x(1))
		return
lbl(35197)	getVoid(1)
		getVariable(x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		genFastCall(<P: 347> 5)
lbl(35210)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(74)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35184)
lbl(35225)	definition(x(5) 35255 pid('ExpandPair' 4 pos('./cp/FD.oz' 78 6) nil 5) <P: 348> nil)
		testLE(x(0) x(1) x(4) 35249)
		getListValVar(x(3) x(0) x(3))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 348> 9)
lbl(35249)	unify(x(3) x(2))
		return
		endDefinition(35225)
lbl(35255)	definition(x(5) 35331 pid('Expand' 2 pos('./cp/FD.oz' 82 6) nil 4) <P: 349> nil)
		match(x(0) ht(35316 [onScalar(nil 35264) onRecord('|' 2 35268)]))
lbl(35264)	getLiteral(nil x(1))
		return
lbl(35268)	getVarVar(x(0) x(2))
		testRecord(x(0) '#' 2 35306)
lbl(35276)	allocateL4
		getVarVar(y(0) y(1))
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 349> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 348> 9)
lbl(35306)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 349> 5)
lbl(35316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(88)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35255)
lbl(35331)	putRecord(fwdRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(5))
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord(negRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(6))
		setConstant('>=:')
		setConstant('\\=:')
		setConstant('>:')
		setConstant('=<:')
		setConstant('<:')
		setConstant('=:')
lbl(35363)	definition(x(7) 35375 pid('WaitStable' 0 pos('./cp/FD.oz' 110 3) nil 0) <P: 350> nil)
		createChoice
lbl(35370)	lastClause
		emptyClause
lbl(35372)	return
		endDefinition(35363)
lbl(35375)	putList(x(8))
		setConstant('>=:')
		setConstant(nil)
		putList(x(3))
		setConstant('>:')
		setValue(x(8))
		putList(x(2))
		setConstant('=<:')
		setValue(x(3))
		putList(x(1))
		setConstant('<:')
		setValue(x(2))
		putList(x(0))
		setConstant('\\=:')
		setValue(x(1))
		putList(x(7))
		setConstant('=:')
		setValue(x(0))
		putList(x(1))
		setConstant(nil)
		setConstant(nil)
		putList(x(0))
		setConstant('FD.atLeast')
		setValue(x(1))
		putList(x(3))
		setConstant(nil)
		setConstant(nil)
		putList(x(2))
		setConstant('FD.atMost')
		setValue(x(3))
		putList(x(10))
		setConstant(nil)
		setConstant(nil)
		putList(x(9))
		setConstant('FD.reified.card')
		setValue(x(10))
		putList(x(12))
		setConstant(nil)
		setConstant(nil)
		putList(x(11))
		setConstant('FD.conj')
		setValue(x(12))
		putList(x(14))
		setConstant(nil)
		setConstant(nil)
		putList(x(13))
		setConstant('FD.disj')
		setValue(x(14))
		putList(x(16))
		setConstant(nil)
		setConstant(nil)
		putList(x(15))
		setConstant('FD.disjoint')
		setValue(x(16))
		putList(x(18))
		setConstant(nil)
		setConstant(nil)
		putList(x(17))
		setConstant('FD.disjointC')
		setValue(x(18))
		putList(x(20))
		setConstant(nil)
		setConstant(nil)
		putList(x(19))
		setConstant('FD.distance')
		setValue(x(20))
		putList(x(22))
		setConstant(nil)
		setConstant(nil)
		putList(x(21))
		setConstant('FD.distinct')
		setValue(x(22))
		putList(x(24))
		setConstant(nil)
		setConstant(nil)
		putList(x(23))
		setConstant('FD.distinctOffset')
		setValue(x(24))
		putList(x(26))
		setConstant(nil)
		setConstant(nil)
		putList(x(25))
		setConstant('FD.divD')
		setValue(x(26))
		putList(x(28))
		setConstant(nil)
		setConstant(nil)
		putList(x(27))
		setConstant('FD.divI')
		setValue(x(28))
		putList(x(30))
		setConstant(nil)
		setConstant(nil)
		putList(x(29))
		setConstant('FD.element')
		setValue(x(30))
		putList(x(32))
		setConstant(nil)
		setConstant(nil)
		putList(x(31))
		setConstant('FD.equi')
		setValue(x(32))
		putList(x(34))
		setConstant(nil)
		setConstant(nil)
		putList(x(33))
		setConstant('FD.exactly')
		setValue(x(34))
		putList(x(36))
		setConstant(nil)
		setConstant(nil)
		putList(x(35))
		setConstant('FD.exor')
		setValue(x(36))
		putList(x(39))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(38))
		setValue(x(39))
		setConstant(nil)
		putList(x(37))
		setConstant(fdConstrDisj)
		setValue(x(38))
		putList(x(42))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(41))
		setValue(x(42))
		setConstant(nil)
		putList(x(40))
		setConstant(fdConstrDisjSetUp)
		setValue(x(41))
		putList(x(44))
		setConstant(nil)
		setConstant(nil)
		putList(x(43))
		setConstant('FD.reflect.size')
		setValue(x(44))
		putList(x(47))
		setConstant('FD.reflect.domList')
		setConstant(nil)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant('FD.reflect.dom')
		setValue(x(46))
		putList(x(49))
		setConstant(nil)
		setConstant(nil)
		putList(x(48))
		setConstant('FD.reflect.max')
		setValue(x(49))
		putList(x(51))
		setConstant(nil)
		setConstant(nil)
		putList(x(50))
		setConstant('FD.reflect.mid')
		setValue(x(51))
		putList(x(53))
		setConstant(nil)
		setConstant(nil)
		putList(x(52))
		setConstant('FD.reflect.min')
		setValue(x(53))
		putList(x(55))
		setConstant(nil)
		setConstant(nil)
		putList(x(54))
		setConstant('FD.reflect.nextLarger')
		setValue(x(55))
		putList(x(57))
		setConstant(nil)
		setConstant(nil)
		putList(x(56))
		setConstant('FD.reflect.nextSmaller')
		setValue(x(57))
		putList(x(59))
		setConstant(nil)
		setConstant(nil)
		putList(x(58))
		setConstant('FD.watch.max')
		setValue(x(59))
		putList(x(61))
		setConstant(nil)
		setConstant(nil)
		putList(x(60))
		setConstant('FD.watch.min')
		setValue(x(61))
		putList(x(63))
		setConstant(nil)
		setConstant(nil)
		putList(x(62))
		setConstant('FD.watch.size')
		setValue(x(63))
		putList(x(65))
		setConstant(nil)
		setConstant(nil)
		putList(x(64))
		setConstant('FD.impl')
		setValue(x(65))
		putList(x(68))
		setConstant('FD.reified.dom')
		setConstant(nil)
		putList(x(67))
		setValue(x(68))
		setConstant(nil)
		putList(x(66))
		setConstant('FD.refied.int')
		setValue(x(67))
		putList(x(70))
		setConstant(nil)
		setConstant(nil)
		putList(x(69))
		setConstant('FD.inter')
		setValue(x(70))
		putList(x(84))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(83))
		setConstant('FD.disjointC')
		setValue(x(84))
		putList(x(82))
		setConstant('FD.disjoint')
		setValue(x(83))
		putList(x(81))
		setConstant('FD.modI')
		setValue(x(82))
		putList(x(80))
		setConstant('FD.modD')
		setValue(x(81))
		putList(x(79))
		setConstant('FD.max')
		setValue(x(80))
		putList(x(78))
		setConstant('FD.min')
		setValue(x(79))
		putList(x(77))
		setConstant('>:')
		setValue(x(78))
		putList(x(76))
		setConstant('>=:')
		setValue(x(77))
		putList(x(75))
		setConstant('<:')
		setValue(x(76))
		putList(x(74))
		setConstant('=<:')
		setValue(x(75))
		putList(x(73))
		setConstant('FD.sumC')
		setValue(x(74))
		putList(x(72))
		setValue(x(73))
		setConstant(nil)
		putList(x(71))
		setConstant('FD.lesseq')
		setValue(x(72))
		putList(x(86))
		setConstant(nil)
		setConstant(nil)
		putList(x(85))
		setConstant('FD.max')
		setValue(x(86))
		putList(x(88))
		setConstant(nil)
		setConstant(nil)
		putList(x(87))
		setConstant('FD.min')
		setValue(x(88))
		putList(x(90))
		setConstant(nil)
		setConstant(nil)
		putList(x(89))
		setConstant('FD.minus')
		setValue(x(90))
		putList(x(92))
		setConstant(nil)
		setConstant(nil)
		putList(x(91))
		setConstant('FD.modD')
		setValue(x(92))
		putList(x(94))
		setConstant(nil)
		setConstant(nil)
		putList(x(93))
		setConstant('FD.modI')
		setValue(x(94))
		putList(x(99))
		setConstant('FD.equi')
		setConstant(nil)
		putList(x(98))
		setConstant('FD.impl')
		setValue(x(99))
		putList(x(97))
		setConstant('FD.exor')
		setValue(x(98))
		putList(x(96))
		setValue(x(97))
		setConstant(nil)
		putList(x(95))
		setConstant('FD.nega')
		setValue(x(96))
		putList(x(103))
		setConstant('\\=:')
		setConstant(nil)
		putList(x(102))
		setConstant('FD.sumC')
		setValue(x(103))
		putList(x(101))
		setValue(x(102))
		setConstant(nil)
		putList(x(100))
		setConstant(notEqOff)
		setValue(x(101))
		putList(x(106))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(105))
		setValue(x(106))
		setConstant(nil)
		putList(x(104))
		setConstant('FD.plus')
		setValue(x(105))
		putList(x(110))
		setConstant('+')
		setConstant(nil)
		putList(x(109))
		setConstant('FD.distance')
		setValue(x(110))
		putList(x(108))
		setValue(x(109))
		setConstant(nil)
		putList(x(107))
		setConstant('FD.plus')
		setValue(x(108))
		putList(x(112))
		setConstant(nil)
		setConstant(nil)
		putList(x(111))
		setConstant('FD.schedule.serialized')
		setValue(x(112))
		putList(x(114))
		setConstant(nil)
		setConstant(nil)
		putList(x(113))
		setConstant('FD.schedule.disjoint')
		setValue(x(114))
		putList(x(116))
		setConstant(nil)
		setConstant(nil)
		putList(x(115))
		setConstant('FD.schedule.serializedDisj')
		setValue(x(116))
		putList(x(119))
		setConstant('FD.times')
		setConstant(nil)
		putList(x(118))
		setValue(x(119))
		setConstant(nil)
		putList(x(117))
		setConstant(square)
		setValue(x(118))
		putList(x(123))
		setConstant('FD.inter')
		setConstant(nil)
		putList(x(122))
		setConstant('FD.union')
		setValue(x(123))
		putList(x(121))
		setValue(x(122))
		setConstant(nil)
		putList(x(120))
		setConstant(subset)
		setValue(x(121))
		putList(x(125))
		setConstant(nil)
		setConstant(nil)
		putList(x(124))
		setConstant('FD.sumAC')
		setValue(x(125))
		putList(x(129))
		setConstant('FD.reified.sumC')
		setValue(x(7))
		putList(x(128))
		setConstant('FD.sumCN')
		setValue(x(129))
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant('FD.sumC')
		setValue(x(127))
		putList(x(132))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(131))
		setValue(x(132))
		setConstant(nil)
		putList(x(130))
		setConstant(sumCCD)
		setValue(x(131))
		putList(x(135))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(134))
		setValue(x(135))
		setConstant(nil)
		putList(x(133))
		setConstant(sumCD)
		setValue(x(134))
		putList(x(137))
		setValue(x(7))
		setConstant(nil)
		putList(x(136))
		setConstant('FD.sumCN')
		setValue(x(137))
		putList(x(140))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(139))
		setValue(x(140))
		setConstant(nil)
		putList(x(138))
		setConstant(sumCNCD)
		setValue(x(139))
		putList(x(142))
		setValue(x(7))
		setConstant(nil)
		putList(x(141))
		setConstant('FD.reified.sumC')
		setValue(x(142))
		putList(x(144))
		setConstant(nil)
		setConstant(nil)
		putList(x(143))
		setConstant('FD.times')
		setValue(x(144))
		putList(x(148))
		setConstant('*')
		setConstant(nil)
		putList(x(147))
		setConstant('FD.distance')
		setValue(x(148))
		putList(x(146))
		setValue(x(147))
		setConstant(nil)
		putList(x(145))
		setConstant('FD.plus')
		setValue(x(146))
		putList(x(152))
		setConstant('FD.minus')
		setConstant(nil)
		putList(x(151))
		setConstant('FD.plus')
		setValue(x(152))
		putList(x(150))
		setValue(x(151))
		setConstant(nil)
		putList(x(149))
		setConstant(twice)
		setValue(x(150))
		putList(x(154))
		setConstant(nil)
		setConstant(nil)
		putList(x(153))
		setConstant('FD.union')
		setValue(x(154))
		putRecord(bi [atLeast atMost card conj disj disjoint disjointC distance distinct distinctOffset divD divI element equi exactly exor fdConstrDisj fdConstrDisjSetUp fdGetCard fdGetDom fdGetMax fdGetMid fdGetMin fdGetNextLarger fdGetNextSmaller fdWatchMax fdWatchMin fdWatchSize impl intR inter lessEqOff maximum minimum minus modD modI nega notEqOff plus plus_rel sched_cpIterate sched_disjoint_card sched_disjunctive square subset sumAC sumC sumCCD sumCD sumCN sumCNCD sumCR times times_rel twice union] x(8))
		setValue(x(0))
		setValue(x(2))
		setValue(x(9))
		setValue(x(11))
		setValue(x(13))
		setValue(x(15))
		setValue(x(17))
		setValue(x(19))
		setValue(x(21))
		setValue(x(23))
		setValue(x(25))
		setValue(x(27))
		setValue(x(29))
		setValue(x(31))
		setValue(x(33))
		setValue(x(35))
		setValue(x(37))
		setValue(x(40))
		setValue(x(43))
		setValue(x(45))
		setValue(x(48))
		setValue(x(50))
		setValue(x(52))
		setValue(x(54))
		setValue(x(56))
		setValue(x(58))
		setValue(x(60))
		setValue(x(62))
		setValue(x(64))
		setValue(x(66))
		setValue(x(69))
		setValue(x(71))
		setValue(x(85))
		setValue(x(87))
		setValue(x(89))
		setValue(x(91))
		setValue(x(93))
		setValue(x(95))
		setValue(x(100))
		setValue(x(104))
		setValue(x(107))
		setValue(x(111))
		setValue(x(113))
		setValue(x(115))
		setValue(x(117))
		setValue(x(120))
		setValue(x(124))
		setValue(x(126))
		setValue(x(130))
		setValue(x(133))
		setValue(x(136))
		setValue(x(138))
		setValue(x(141))
		setValue(x(143))
		setValue(x(145))
		setValue(x(149))
		setValue(x(153))
lbl(36429)	definition(x(7) 36473 pid('BIPrintName' 2 pos('./cp/FD.oz' 190 6) nil 4) <P: 351> [x(8)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsAtom' [x(0)]#[x(2)] 36466)
lbl(36445)	move(g(0) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 36466)
lbl(36452)	callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 1 x(0) cache)
		unify(x(0) y(1))
		deAllocateL2
		return
lbl(36466)	unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(36429)
lbl(36473)	definition(x(7) 36503 pid('BIOrigin' 2 pos('./cp/FD.oz' 197 6) nil 4) <P: 352> [x(8)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 2 x(0) cache)
		inlineDot(x(0) 1 x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(36473)
lbl(36503)	definition(x(7) 36611 pid('FormatOrigin' 2 pos('./cp/FD.oz' 203 6) nil 7) <P: 353> [x(8)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 351> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 36542)
lbl(36529)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 352> 4)
		testLiteral(y(2) nil 36547)
lbl(36542)	getLiteral(nil y(0))
		deAllocateL3
		return
lbl(36547)	getList(y(0))
		unifyLiteral(unit)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(hint [l m] x(1))
		unifyLiteral('Possible origin of procedure')
		unifyVariable(x(3))
		getRecord(oz 1 x(3))
		unifyVariable(x(4))
		getList(x(2))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(line 1 x(5))
		unifyVariable(x(6))
		getRecord(oz 1 x(6))
		unifyVariable(y(0))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 351> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 352> 5)
		endDefinition(36503)
lbl(36611)	definition(x(2) 42111 pid('' 2 pos('./cp/FD.oz' 218 3) nil 4) <P: 354> [y(91) x(5) x(4) y(108) y(1) x(6) y(163) y(92) y(157)])
		putList(x(2))
		setPredicateRef(<Q: 355>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 356>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 357>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 358>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 359>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 360>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 361>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 362>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 363>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 364>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 365>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 366>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 367>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 368>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 369>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 370>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 371>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 372>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 373>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 374>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 375>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 376>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 377>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 378>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 379>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 380>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 381>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ForceClone>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 391>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 392>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 393>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 394>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 395>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 403>)
		setValue(x(2))
lbl(36917)	definitionCopy(x(3) 42106 pid('/body' 0 pos('./cp/FD.oz' 218 3) [once] 54) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(53)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(1) cache)
		inlineDot(x(0) 'FDP' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Error' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(2) plus x(6) cache)
		inlineDot(x(2) minus x(7) cache)
		inlineDot(x(2) times x(8) cache)
		inlineDot(x(2) power x(9) cache)
		inlineDot(x(2) divD x(10) cache)
		inlineDot(x(2) divI x(11) cache)
		inlineDot(x(2) modD x(12) cache)
		inlineDot(x(2) modI x(13) cache)
		inlineDot(x(2) conj x(14) cache)
		inlineDot(x(2) disj x(15) cache)
		inlineDot(x(2) exor x(16) cache)
		inlineDot(x(2) impl x(17) cache)
		inlineDot(x(2) nega x(18) cache)
		inlineDot(x(2) equi x(19) cache)
		inlineDot(x(2) intR x(20) cache)
		inlineDot(x(2) card x(21) cache)
		inlineDot(x(2) exactly x(22) cache)
		inlineDot(x(2) atLeast x(23) cache)
		inlineDot(x(2) atMost x(24) cache)
		inlineDot(x(2) element x(25) cache)
		inlineDot(x(2) lessEqOff x(26) cache)
		inlineDot(x(2) minimum x(27) cache)
		inlineDot(x(2) maximum x(28) cache)
		inlineDot(x(2) distinct x(29) cache)
		inlineDot(x(2) distinct2 x(30) cache)
		inlineDot(x(2) distinctD x(31) cache)
		inlineDot(x(2) distinctOffset x(32) cache)
		inlineDot(x(2) disjoint x(33) cache)
		inlineDot(x(2) disjointC x(34) cache)
		inlineDot(x(2) distance x(35) cache)
		inlineDot(x(2) sum x(36) cache)
		inlineDot(x(2) sumC x(37) cache)
		inlineDot(x(2) dsum x(38) cache)
		inlineDot(x(2) dsumC x(39) cache)
		inlineDot(x(2) sumAC x(40) cache)
		inlineDot(x(2) sumCN x(41) cache)
		inlineDot(x(2) sumR x(42) cache)
		inlineDot(x(2) sumCR x(43) cache)
		inlineDot(x(2) sumCNR x(44) cache)
		inlineDot(x(2) sumCD x(45) cache)
		inlineDot(x(2) sumCCD x(46) cache)
		inlineDot(x(2) sumCNCD x(47) cache)
		inlineDot(x(2) selVarMin x(48) cache)
		inlineDot(x(2) selVarMax x(49) cache)
		inlineDot(x(2) selVarSize x(50) cache)
		inlineDot(x(2) selVarNaive x(51) cache)
		inlineDot(x(2) selVarNbSusps x(2) cache)
		inlineDot(x(1) tellConstraint x(52) cache)
lbl(37246)	definition(x(53) 37290 pid('ListDom' 2 pos('./cp/FD.oz' 373 2) nil 2) <Q: 355> [x(52)])
		match(x(0) ht(37275 [onScalar(nil 37255) onRecord('|' 2 37256)]))
lbl(37255)	return
lbl(37256)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 355> 5)
lbl(37275)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37246)
lbl(37290)	definition(x(53) 37346 pid('TupleDom' 3 pos('./cp/FD.oz' 379 2) nil 5) <Q: 356> [x(52)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37343)
		allocateL3
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37343)	return
		endDefinition(37290)
lbl(37346)	definition(x(53) 37404 pid('RecordDom' 3 pos('./cp/FD.oz' 385 2) nil 4) <Q: 357> [x(52)])
		match(x(0) ht(37389 [onScalar(nil 37355) onRecord('|' 2 37356)]))
lbl(37355)	return
lbl(37356)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37389)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(388)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37346)
lbl(37404)	inlineDot(x(1) getLimits x(53) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		moveMoveXYXY(x(8) y(6) x(9) y(7))
		moveMoveXYXY(x(10) y(8) x(11) y(9))
		moveMoveXYXY(x(12) y(10) x(13) y(11))
		moveMoveXYXY(x(14) y(12) x(15) y(13))
		moveMoveXYXY(x(16) y(14) x(17) y(15))
		moveMoveXYXY(x(18) y(16) x(19) y(17))
		moveMoveXYXY(x(20) y(18) x(21) y(19))
		moveMoveXYXY(x(22) y(20) x(23) y(21))
		moveMoveXYXY(x(24) y(22) x(25) y(23))
		moveMoveXYXY(x(26) y(24) x(27) y(25))
		moveMoveXYXY(x(28) y(26) x(29) y(27))
		moveMoveXYXY(x(30) y(28) x(31) y(29))
		moveMoveXYXY(x(32) y(30) x(33) y(31))
		moveMoveXYXY(x(34) y(32) x(35) y(33))
		moveMoveXYXY(x(36) y(34) x(37) y(35))
		moveMoveXYXY(x(38) y(36) x(39) y(37))
		moveMoveXYXY(x(40) y(38) x(41) y(39))
		moveMoveXYXY(x(42) y(40) x(43) y(41))
		moveMoveXYXY(x(44) y(42) x(45) y(43))
		moveMoveXYXY(x(46) y(44) x(47) y(45))
		moveMoveXYXY(x(48) y(46) x(49) y(47))
		moveMoveXYXY(x(50) y(48) x(51) y(49))
		moveMoveXYXY(x(2) y(50) x(52) y(51))
		createVariable(x(0))
		createVariableMove(y(52) x(1))
		call(x(53) 2)
lbl(37548)	definition(x(0) 37568 pid('FdInt' 2 pos('./cp/FD.oz' 393 2) nil 2) <Q: 358> [y(51)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37548)
lbl(37568)	putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
lbl(37582)	definition(x(1) 37596 pid('FdBool' 1 pos('./cp/FD.oz' 400 5) nil 2) <Q: 359> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37582)
lbl(37596)	putRecord('#' 2 x(3))
		setConstant(0)
		setValue(y(52))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
lbl(37610)	definition(x(3) 37624 pid('FdDecl' 1 pos('./cp/FD.oz' 408 5) nil 2) <Q: 360> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37610)
lbl(37624)	definition(x(2) 37708 pid('FdDom' 2 pos('./cp/FD.oz' 413 2) nil 4) <Q: 361> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(37693 [onScalar(list 37648) onScalar(tuple 37657) onScalar(record 37675)]))
lbl(37648)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 355> 5)
lbl(37657)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37675)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37693)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(418)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(37624)
lbl(37708)	definition(x(4) 37764 pid('FdList' 3 pos('./cp/FD.oz' 421 2) nil 5) <Q: 362> [y(51)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37758)
		allocateL3
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) x(0))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 362> 7)
lbl(37758)	getLiteral(nil x(2))
		return
		endDefinition(37708)
lbl(37764)	definition(x(5) 37787 pid('FdTuple' 4 pos('./cp/FD.oz' 427 2) nil 5) <Q: 363> nil)
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 356> 7)
		endDefinition(37764)
lbl(37787)	definition(x(6) 37821 pid('FdRecord' 4 pos('./cp/FD.oz' 431 2) nil 4) <Q: 364> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
		endDefinition(37787)
lbl(37821)	move(y(0) x(7))
		inlineDot(x(7) is x(8) cache)
		inlineDot(x(7) getDom x(9) cache)
		putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] y(51))
		setValue(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		inlineDot(x(7) getMin x(18) cache)
		unify(x(18) x(13))
		inlineDot(x(7) getMid x(18) cache)
		unify(x(18) x(12))
		inlineDot(x(7) getMax x(18) cache)
		unify(x(18) x(11))
		inlineDot(x(7) getNextLarger x(18) cache)
		unify(x(18) x(15))
		inlineDot(x(7) getNextSmaller x(15) cache)
		unify(x(15) x(16))
		inlineDot(x(7) getCard x(15) cache)
		unify(x(15) x(17))
		move(y(3) x(15))
		inlineDot(x(15) nbSusps x(16) cache)
		unify(x(16) x(14))
lbl(37924)	definition(x(15) 37951 pid('FdReflect.domList' 2 pos('./cp/FD.oz' 453 23) nil 2) <Q: 365> [x(9)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 349> 5)
		endDefinition(37924)
lbl(37951)	unify(x(15) x(10))
		inlineDot(x(7) tellConstraintCD x(9) cache)
lbl(37960)	definition(x(10) 38009 pid('ListDomCD' 3 pos('./cp/FD.oz' 468 2) nil 3) <Q: 366> [x(9)])
		match(x(0) ht(37994 [onScalar(nil 37969) onRecord('|' 2 37970)]))
lbl(37969)	return
lbl(37970)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 366> 7)
lbl(37994)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(471)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37960)
lbl(38009)	definition(x(10) 38072 pid('TupleDomCD' 4 pos('./cp/FD.oz' 474 2) nil 6) <Q: 367> [x(9)])
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 38069)
		allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38069)	return
		endDefinition(38009)
lbl(38072)	definition(x(10) 38137 pid('RecordDomCD' 4 pos('./cp/FD.oz' 480 2) nil 5) <Q: 368> [x(9)])
		match(x(0) ht(38122 [onScalar(nil 38081) onRecord('|' 2 38082)]))
lbl(38081)	return
lbl(38082)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38122)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(483)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(38072)
lbl(38137)	definition(x(10) 38157 pid('FdIntCD' 3 pos('./cp/FD.oz' 486 2) nil 3) <Q: 369> [x(9)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38137)
lbl(38157)	definition(x(9) 38252 pid('FdDomCD' 3 pos('./cp/FD.oz' 490 2) nil 5) <Q: 370> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 342> 4)
		match(y(3) ht(38237 [onScalar(list 38183) onScalar(tuple 38195) onScalar(record 38216)]))
lbl(38183)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 366> 7)
lbl(38195)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38216)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38237)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(495)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(38157)
lbl(38252)	putRecord(cd ['body' dom header int sum sumC sumCN] y(3))
		setVariable(x(15))
		setValue(x(9))
		setVariable(x(16))
		setValue(x(10))
		setValue(y(43))
		setValue(y(44))
		setValue(y(45))
		inlineDot(x(7) constrDisjSetUp x(9) cache)
		unify(x(9) x(16))
		inlineDot(x(7) constrDisj x(9) cache)
		unify(x(9) x(15))
lbl(38288)	definition(x(9) 38583 pid('GenSumACN' 4 pos('./cp/FD.oz' 515 6) nil 5) <Q: 371> [g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		thread(38579)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 38378 38568)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(2) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(2) false '' true 4) 0)
lbl(38378)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(8))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(11))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(4))
		setVariable(y(11))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(2))
		call(g(5) 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(8) x(3))
		move(y(4) x(4))
		call(g(6) 5)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(11) x(4))
		call(g(6) 5)
		putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(11))
		putRecord('#' 2 x(2))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(1))
		deAllocateL
		tailCall(g(7) 3)
lbl(38568)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(38579)	deAllocateL
		return
		endDefinition(38288)
lbl(38583)	definition(x(10) 38623 pid('FdIntR' 3 pos('./cp/FD.oz' 545 2) nil 3) <Q: 372> [y(18)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 359> 2)
		move(y(1) x(0))
		genFastCall(<Q: 360> 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38583)
lbl(38623)	definition(x(18) 38662 pid('GenSumR' 4 pos('./cp/FD.oz' 549 2) nil 4) <Q: 373> [y(40)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genCall(gci(g(0) false '' true 4) 0)
		endDefinition(38623)
lbl(38662)	definition(x(19) 38706 pid('GenSumCR' 5 pos('./cp/FD.oz' 553 2) nil 5) <Q: 374> [y(41)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38662)
lbl(38706)	definition(x(20) 38750 pid('GenSumCNR' 5 pos('./cp/FD.oz' 557 2) nil 5) <Q: 375> [y(42)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38706)
lbl(38750)	definition(x(21) 38813 pid('MapIntR' 4 pos('./cp/FD.oz' 562 5) nil 6) <Q: 376> nil)
		testNumber(x(0) 0 38761)
		return
lbl(38761)	allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<Q: 372> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 376> 9)
		endDefinition(38750)
lbl(38813)	definition(x(21) 38886 pid('FdDomR' 3 pos('./cp/FD.oz' 568 5) nil 5) <Q: 377> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		thread(38882)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		move(y(3) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		moveMoveXYXY(x(1) y(1) x(2) y(4))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(3))
		genFastCall(<Q: 376> 8)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		putConstant('=:' x(1))
		deAllocateL5
		genFastCall(<Q: 373> 9)
lbl(38882)	deAllocateL5
		return
		endDefinition(38813)
lbl(38886)	definition(x(22) 39096 pid('Card' 4 pos('./cp/FD.oz' 580 2) nil 5) <Q: 378> [x(8) y(52) y(19) g(5)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		thread(39092)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38924)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38937)	move(y(1) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 38982)
		createOr
lbl(38945)	nextClause(38957)
		clause
		getNumber(1 y(3))
		getNumber(0 y(0))
		waitTop
lbl(38955)	deAllocateL6
		return
lbl(38957)	lastClause
		clause
		thread(38979)
		getNumber(0 y(3))
		putRecord('#' 2 x(0))
		setConstant(1)
		setValue(g(1))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 358> 5)
lbl(38979)	waitTop
lbl(38980)	deAllocateL6
		return
lbl(38982)	createVariableMove(y(4) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(2) false '' true 4) 0)
lbl(39002)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createVariable(y(5))
		testBool(y(4) 39022 39027)
		getNumber(3 y(5))
		branch(39038)
lbl(39022)	getNumber(1 y(5))
		branch(39038)
lbl(39027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39038)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('FD.reified.card')
		setValue(x(1))
		setConstant(fd)
		setValue(y(5))
		setConstant('Cardinality limits must be finite domain.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(583)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39092)	deAllocateL6
		return
		endDefinition(38886)
lbl(39096)	definition(x(23) 39487 pid('GenSumACR' 5 pos('./cp/FD.oz' 603 2) nil 5) <Q: 379> [g(6) g(7) g(1) g(2) y(35) g(8) x(16) y(44) x(15)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39483)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 161> 6)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39267 39472)
		createOr
lbl(39180)	nextClause(39218)
		clause
		thread(39215)
		getNumber(1 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39215)	waitTop
lbl(39216)	deAllocateL
		return
lbl(39218)	nextClause(39243)
		clause
		thread(39240)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39240)	waitTop
lbl(39241)	deAllocateL
		return
lbl(39243)	lastClause
		clause
		thread(39264)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39264)	waitTop
lbl(39265)	deAllocateL
		return
lbl(39267)	createOr
lbl(39268)	nextClause(39435)
		clause
		thread(39432)
		move(y(7) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(2)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(4)])
		putRecord(v 1 x(3))
		setVariable(y(1))
		moveMoveXYXY(x(2) y(8) x(4) y(9))
		move(x(3) x(0))
		move(y(8) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setVariable(y(11))
		move(y(9) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setValue(y(3))
		move(y(7) x(1))
		createVariableMove(y(13) x(2))
		genFastCall(<P: 14> 6)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(2))
		call(g(6) 4)
		moveMoveYXYX(y(6) x(0) y(8) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(11) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39432)	waitTop
lbl(39433)	deAllocateL
		return
lbl(39435)	lastClause
		clause
		thread(39469)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39469)	waitTop
lbl(39470)	deAllocateL
		return
lbl(39472)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(611)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39483)	deAllocateL
		return
		endDefinition(39096)
lbl(39487)	definition(x(24) 39930 pid('GenSumACNR' 5 pos('./cp/FD.oz' 642 2) nil 5) <Q: 380> [g(6) g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(17)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39926)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(2) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39658 39915)
		createOr
lbl(39571)	nextClause(39609)
		clause
		thread(39606)
		getNumber(1 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39606)	waitTop
lbl(39607)	deAllocateL
		return
lbl(39609)	nextClause(39634)
		clause
		thread(39631)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39631)	waitTop
lbl(39632)	deAllocateL
		return
lbl(39634)	lastClause
		clause
		thread(39655)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39655)	waitTop
lbl(39656)	deAllocateL
		return
lbl(39658)	createOr
lbl(39659)	nextClause(39878)
		clause
		thread(39875)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(7) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(8) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(12))
		setValue(y(11))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(13))
		createVariableMove(y(13) x(1))
		genFastCall(<P: 346> 4)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(2))
		call(g(6) 4)
		move(y(7) x(0))
		createVariableMove(y(16) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(1) x(0) y(16) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(12) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39875)	waitTop
lbl(39876)	deAllocateL
		return
lbl(39878)	lastClause
		clause
		thread(39912)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39912)	waitTop
lbl(39913)	deAllocateL
		return
lbl(39915)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(650)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39926)	deAllocateL
		return
		endDefinition(39487)
lbl(39930)	definition(x(15) 39971 pid('DistanceR' 5 pos('./cp/FD.oz' 681 2) nil 8) <Q: 381> nil)
		putList(x(6))
		setConstant(~1)
		setConstant(nil)
		putList(x(5))
		setConstant(1)
		setValue(x(6))
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		putList(x(6))
		setValue(x(0))
		setValue(x(7))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 379> 11)
		endDefinition(39930)
lbl(39971)	putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] y(18))
		setValue(x(22))
		setValue(x(15))
		setValue(x(21))
		setValue(x(10))
		setValue(x(18))
		setValue(x(23))
		setValue(x(24))
		setValue(x(19))
		setValue(x(20))
lbl(39993)	definition(x(10) 40105 pid('MakeDistrTuple' 2 pos('./cp/FD.oz' 708 5) nil 4) <Q: 382> [g(9) x(8) g(5)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) tuple 40029)
		move(y(0) x(0))
		putConstant(<M: ForceClone> x(3))
		callBI('Adjoin' [x(0) x(3)]#[x(1)])
		unify(x(1) y(1))
		branch(40037)
lbl(40029)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<P: 346> 4)
lbl(40037)	move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 165> 6)
		testBool(y(2) 40055 40092)
		deAllocateL3
		return
lbl(40055)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(list 1 x(3))
		setConstant(fd)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('MakeDistrTuple')
		setValue(x(1))
		setValue(x(3))
		setConstant(1)
		setConstant('Distribution vector must contain finite domains.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40092)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(39993)
lbl(40105)	putRecord(map [max mid min splitMax splitMin] x(10))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		unify(x(18) x(13))
		unify(x(15) x(11))
		unify(x(16) x(12))
lbl(40128)	definition(x(15) 40147 pid('SelVal.splitMin' 2 pos('./cp/FD.oz' 726 14) nil 2) <Q: 383> [x(12)])
		getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyVariable(x(1))
		tailCall(g(0) 2)
		endDefinition(40128)
lbl(40147)	unify(x(15) x(20))
lbl(40150)	definition(x(15) 40184 pid('SelVal.splitMax' 2 pos('./cp/FD.oz' 729 14) nil 2) <Q: 384> [y(52) x(12)])
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(g(0))
		createVariableMove(y(1) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(40150)
lbl(40184)	unify(x(15) x(19))
		putRecord(map [max min naive nbSusps size] x(12))
		setValue(y(47))
		setValue(y(46))
		setValue(y(49))
		setValue(y(50))
		setValue(y(48))
		putRecord(map [max min naive nbSusps size] x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		setVariable(x(21))
lbl(40215)	definition(x(22) 40227 pid('GenSelVar.naive' 3 pos('./cp/FD.oz' 741 30) nil 3) <Q: 385> nil)
		getLiteral(false x(2))
		return
		endDefinition(40215)
lbl(40227)	unify(x(22) x(19))
lbl(40230)	definition(x(19) 40272 pid('GenSelVar.size' 3 pos('./cp/FD.oz' 744 16) nil 3) <Q: 386> [x(17)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40230)
lbl(40272)	unify(x(19) x(21))
lbl(40275)	definition(x(19) 40362 pid('GenSelVar.nbSusps' 3 pos('./cp/FD.oz' 747 16) nil 3) <Q: 387> [x(14) x(17)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testLT(x(1) x(0) x(2) 40320)
		getLiteral(true y(2))
		deAllocateL5
		return
lbl(40320)	testBI('==' [x(0) x(1)]#[x(2)] 40355)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL5
		return
lbl(40355)	getLiteral(false y(2))
		deAllocateL5
		return
		endDefinition(40275)
lbl(40362)	unify(x(19) x(20))
lbl(40365)	definition(x(14) 40407 pid('GenSelVar.min' 3 pos('./cp/FD.oz' 755 16) nil 3) <Q: 388> [x(13)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40365)
lbl(40407)	unify(x(14) x(18))
lbl(40410)	definition(x(13) 40452 pid('GenSelVar.max' 3 pos('./cp/FD.oz' 758 16) nil 3) <Q: 389> [x(11)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40410)
lbl(40452)	unify(x(13) x(16))
		putRecord(map [undet] x(11))
		setVariable(x(13))
lbl(40461)	definition(x(14) 40493 pid('GenSelFil.undet' 2 pos('./cp/FD.oz' 762 29) nil 3) <Q: 390> [x(17)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(40461)
lbl(40493)	unify(x(14) x(13))
		putRecord(map [noProc] x(13))
		setVariable(x(14))
lbl(40502)	definition(x(16) 40511 pid('GenSelPro.noProc' 0 pos('./cp/FD.oz' 766 29) nil 0) <Q: 391> nil)
		return
		endDefinition(40502)
lbl(40511)	unify(x(16) x(14))
		putRecord(map [id] x(14))
		setVariable(x(16))
lbl(40520)	definition(x(17) 40532 pid('GenSelSel.id' 2 pos('./cp/FD.oz' 770 29) nil 2) <Q: 392> nil)
		unify(x(1) x(0))
		return
		endDefinition(40520)
lbl(40532)	unify(x(17) x(16))
lbl(40535)	definition(x(16) 40558 pid('MapSelect' 3 pos('./cp/FD.oz' 774 5) nil 4) <Q: 393> nil)
		testBI('IsAtom' [x(1)]#[x(3)] 40552)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(40552)	unify(x(2) x(1))
		return
		endDefinition(40535)
lbl(40558)	definition(x(16) 40829 pid('PreProcessSpec' 2 pos('./cp/FD.oz' 780 5) nil 6) <Q: 394> [x(12) x(10) x(15) x(14) x(11) x(13)])
		allocateL5
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(40594 [onScalar(naive 40573) onScalar(ff 40581) onScalar(split 40586)]))
lbl(40573)	getRecord(generic [order] y(1))
		unifyLiteral(naive)
		branch(40597)
lbl(40581)	getLiteral(generic y(1))
		branch(40597)
lbl(40586)	getRecord(generic [value] y(1))
		unifyLiteral(splitMin)
		branch(40597)
lbl(40594)	unify(y(1) x(0))
lbl(40597)	putRecord(generic [filter order procedure select value] x(0))
		setConstant(undet)
		setConstant(size)
		setConstant(noProc)
		setConstant(id)
		setConstant(min)
		move(y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(2))
		testRecord(y(1) generic [filter order procedure select value] 40664)
lbl(40627)	getVarVar(x(0) x(1))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(40664)
		getLiteral(undet x(0))
		getLiteral(noProc x(3))
		getLiteral(id x(4))
lbl(40646)	shallowThen
		testBI('IsAtom' [x(1)]#[x(0)] 40659)
		callBI('IsAtom' [x(5)]#[x(0)])
		unify(x(0) y(2))
		branch(40667)
lbl(40659)	getLiteral(false y(2))
		branch(40667)
lbl(40664)	getLiteral(false y(2))
lbl(40667)	testBool(y(2) 40714 40816)
		getRecord(opt [order value] y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(1) x(2))
		inlineDot(x(2) order x(3) cache)
		move(g(0) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		unify(x(5) x(0))
		inlineDot(x(2) value x(0) cache)
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		deAllocateL5
		return
lbl(40714)	getRecord(gen [filter order procedure select value] y(0))
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		move(y(1) x(0))
		inlineDot(x(0) order x(1) cache)
		move(g(2) x(0))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(1) x(0))
		move(y(4) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) select x(1) cache)
		move(g(3) x(0))
		move(y(3) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) filter x(1) cache)
		move(g(4) x(0))
		move(y(0) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		move(g(5) x(0))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 393> 7)
lbl(40816)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(800)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40558)
lbl(40829)	definition(x(10) 40918 pid('Choose' 4 pos('./cp/FD.oz' 813 2) nil 4) <Q: 395> nil)
		match(x(0) ht(40903 [onScalar(nil 40838) onRecord('|' 2 40842)]))
lbl(40838)	unify(x(3) x(1))
		return
lbl(40842)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		createVariable(y(6))
		testBool(y(5) 40873 40878)
		unify(y(6) y(0))
		branch(40889)
lbl(40873)	unify(y(6) y(2))
		branch(40889)
lbl(40878)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40889)	moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 395> 9)
lbl(40903)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(816)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(40829)
lbl(40918)	definition(x(10) 41204 pid('FdDistribute' 2 pos('./cp/FD.oz' 821 2) nil 7) <Q: 396> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 350> 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 394> 4)
		match(y(2) ht(41189 [onRecord(opt [order value] 40945) onRecord(gen [filter order procedure select value] 41044)]))
lbl(40945)	getVarVar(y(0) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 382> 4)
		createVariable(x(0))
lbl(40959)	definition(x(1) 41021 pid('Do' 0 pos('./cp/FD.oz' 826 8) nil 2) unit [y(0) y(3) y(2) x(0)])
		allocateL2
		move(g(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		call(g(2) 2)
		createChoice
lbl(40985)	nextClause(40998)
		emptyClause
lbl(40988)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 358> 4)
		branch(41012)
lbl(40998)	lastClause
		emptyClause
lbl(41000)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		genFastCall(<Q: 358> 4)
lbl(41012)	genFastCall(<P: 350> 0)
		deAllocateL2
		tailCall(g(3) 0)
		endDefinition(40959)
lbl(41021)	unify(x(1) x(0))
		move(x(0) y(0))
		exHandler(41038)
		testNumber(x(0) ~1 41035)
lbl(41033)	deAllocateL4
		return
lbl(41035)	callBI('Exception.raise' [x(0)]#nil)
lbl(41038)	call(y(0) 0)
		popEx
		deAllocateL4
		return
lbl(41044)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		getVariable(x(6))
		createVariable(y(0))
lbl(41054)	definition(x(0) 41168 pid('Do' 1 pos('./cp/FD.oz' 844 8) nil 4) unit [x(2) x(3) x(5) x(6) x(4) y(0)])
		allocateL3
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(0) nil 41076)
lbl(41074)	deAllocateL3
		return
lbl(41076)	testList(y(0) 41153)
lbl(41079)	getVarVar(x(1) x(0))
		move(g(1) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 395> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(2) 2)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(g(3) 2)
		call(g(4) 0)
		genFastCall(<P: 350> 0)
		createChoice
lbl(41116)	nextClause(41129)
		emptyClause
lbl(41119)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 358> 4)
		branch(41143)
lbl(41129)	lastClause
		emptyClause
lbl(41131)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(2) x(1))
		genFastCall(<Q: 358> 4)
lbl(41143)	genFastCall(<P: 350> 0)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(5) 1)
lbl(41153)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(854)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(41054)
lbl(41168)	unify(x(0) y(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(0) x(1) y(2) x(0))
		deAllocateL4
		tailCall(x(1) 1)
lbl(41189)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(858)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40918)
lbl(41204)	definition(x(11) 41418 pid('FdChoose' 4 pos('./cp/FD.oz' 862 2) nil 5) <Q: 397> [g(5)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		genFastCall(<P: 350> 0)
		exHandler(41274)
		testNumber(x(0) ~1 41271)
lbl(41230)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fd 5 x(0))
		setConstant(noChoice)
		setConstant('FD.choose')
		setValue(x(1))
		setConstant(2)
		setConstant('Vector must contain non-determined elements.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41271)	callBI('Exception.raise' [x(0)]#nil)
lbl(41274)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 394> 4)
		match(y(4) ht(41400 [onRecord(opt [order value] 41286) onRecord(gen [filter order procedure select value] 41316)]))
lbl(41286)	getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 382> 4)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		call(y(4) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(5) 2)
		branch(41413)
lbl(41316)	getVarVar(y(4) y(5))
		getVoid(1)
		getVarVar(y(6) y(7))
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(8) x(0) y(4) x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(9) nil 41354)
lbl(41348)	putConstant(~1 x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(41354)	testList(y(9) 41387)
lbl(41357)	getVarVar(x(1) x(0))
		move(y(5) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 395> 8)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(6) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(7) 2)
		branch(41413)
lbl(41387)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(880)
		setValue(y(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41400)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(881)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41413)	popEx
		deAllocateL10
		return
		endDefinition(41204)
lbl(41418)	putRecord(watch [max min size] y(19))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		inlineDot(x(7) watchSize x(15) cache)
		unify(x(15) x(14))
		inlineDot(x(7) watchMin x(14) cache)
		unify(x(14) x(13))
		inlineDot(x(7) watchMax x(13) cache)
		unify(x(13) x(12))
lbl(41455)	definition(x(7) 41469 pid('FdLess' 2 pos('./cp/FD.oz' 904 6) nil 3) <Q: 398> [y(24)])
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41455)
lbl(41469)	definition(x(12) 41492 pid('FdGreater' 2 pos('./cp/FD.oz' 907 6) nil 3) <Q: 399> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41469)
lbl(41492)	definition(x(13) 41506 pid('FdLesseq' 2 pos('./cp/FD.oz' 910 6) nil 3) <Q: 400> [y(24)])
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41492)
lbl(41506)	definition(x(14) 41529 pid('FdGreatereq' 2 pos('./cp/FD.oz' 913 6) nil 3) <Q: 401> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41506)
lbl(41529)	definition(x(15) 41573 pid('FdDisjointC' 5 pos('./cp/FD.oz' 916 6) nil 5) <Q: 402> [y(32)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(41529)
lbl(41573)	move(y(1) x(16))
		inlineDot(x(16) put x(16) cache)
lbl(41582)	definition(x(17) 41943 pid('' 2 pos('./cp/FD.oz' 929 7) nil 8) <Q: 403> [y(2)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in finite domain system' y(3))
		testRecord(y(2) fd 6 41781)
lbl(41617)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) scheduling 41781)
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		inlineDot(x(0) formatTypes x(7) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYXY(x(5) y(6) x(6) y(7))
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		call(x(7) 2)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(9))
		putList(x(1))
		setValue(x(0))
		setValue(y(6))
		move(y(8) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putList(x(2))
		setValue(x(0))
		setValue(y(2))
		moveMoveYXYX(y(7) x(5) y(4) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41781)	testRecord(y(2) fd 5 41920)
lbl(41786)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) noChoice 41920)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		move(y(4) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		call(x(6) 3)
		move(y(4) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(y(8))
		putList(x(1))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(7) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41920)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(41582)
lbl(41943)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(3) y(2) x(2) y(24))
		moveMoveXYXY(x(4) y(32) x(5) y(40))
		moveMoveXYXY(x(6) y(41) x(8) y(42))
		moveMoveXYXY(x(9) y(43) x(10) y(44))
		moveMoveXYXY(x(11) y(45) x(7) y(46))
		moveMoveXYXY(x(12) y(47) x(13) y(48))
		moveMoveXYXY(x(14) y(49) x(15) y(50))
		move(x(17) x(1))
		putConstant(fd x(0))
		call(x(16) 2)
		getRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] g(10))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(1))
		unifyValue(y(3))
		unifyValue(y(45))
		unifyValue(y(12))
		unifyValue(y(2))
		unifyValue(y(13))
		unifyValue(y(31))
		unifyValue(y(50))
		unifyValue(y(33))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(44))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(24))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(20))
		unifyValue(y(14))
		unifyValue(y(47))
		unifyValue(y(49))
		unifyValue(y(15))
		unifyValue(y(0))
		unifyValue(y(42))
		unifyValue(y(46))
		unifyValue(y(48))
		unifyValue(y(32))
		unifyValue(y(26))
		unifyValue(y(25))
		unifyValue(y(5))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(16))
		unifyValue(y(4))
		unifyValue(y(7))
		unifyValue(y(41))
		unifyValue(y(51))
		unifyValue(y(18))
		unifyValue(y(34))
		unifyValue(y(38))
		unifyValue(y(43))
		unifyValue(y(35))
		unifyValue(y(37))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(6))
		unifyValue(y(40))
		unifyValue(y(19))
		deAllocateL
		return
		endDefinition(36917)
lbl(42106)	tailCall(x(3) 0)
		endDefinition(36611)
lbl(42111)	putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] x(4))
		setConstant(value)
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(watch [max min size] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] x(4))
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(cd ['body' dom header int sum sumC sumCN] x(4))
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putList(x(12))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(11))
		setConstant(format)
		setValue(x(12))
		putList(x(10))
		setConstant(formatHint)
		setValue(x(11))
		putList(x(9))
		setConstant(formatTypes)
		setValue(x(10))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(9))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(14))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(13))
		setValue(x(14))
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FDB')
		setConstant(nil)
		putRecord(info ['from' type] x(16))
		setConstant('x-oz://boot/FDP')
		setConstant(nil)
		putList(x(18))
		setConstant(nbSusps)
		setConstant(nil)
		putRecord(info [type] x(17))
		setValue(x(18))
		putRecord('import' ['Error' 'ErrorRegistry' 'FDB' 'FDP' 'System'] x(0))
		setValue(x(1))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(value x(4))
		putConstant(value x(9))
		putConstant('procedure/1' x(10))
		putConstant('procedure/4' x(11))
		putConstant(value x(12))
		putConstant('procedure/1' x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant('procedure/5' x(16))
		putConstant(value x(17))
		putConstant(value x(18))
		putConstant(value x(19))
		putConstant(value x(20))
		putConstant(value x(21))
		putConstant('procedure/2' x(22))
		putConstant(value x(23))
		putConstant(value x(24))
		putConstant('procedure/2' x(25))
		putConstant(value x(26))
		putConstant(value x(27))
		putConstant(value x(28))
		putConstant(value x(29))
		putConstant('procedure/2' x(30))
		putConstant('procedure/2' x(31))
		putConstant(value x(32))
		putConstant('procedure/2' x(33))
		putConstant(value x(34))
		putConstant('procedure/2' x(35))
		putConstant('procedure/2' x(36))
		putConstant('procedure/3' x(37))
		putConstant(value x(38))
		putConstant(value x(39))
		putConstant(value x(40))
		putConstant(value x(41))
		putConstant(value x(42))
		putConstant(value x(43))
		putConstant(value x(44))
		putConstant(value x(45))
		putConstant('procedure/4' x(46))
		putConstant(value x(47))
		putConstant(value x(48))
		putConstant('procedure/4' x(49))
		putConstant(value x(50))
		putConstant(value x(51))
		putConstant(value x(52))
		putConstant(value x(53))
		putConstant(value x(54))
		putConstant(value x(55))
		putConstant('procedure/4' x(56))
		putRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] x(1))
		setValue(x(4))
		setValue(x(9))
		setValue(x(10))
		setValue(x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(5))
		setValue(x(7))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(6))
		createVariableMove(y(91) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(42566)	definition(x(2) 47983 pid('' 2 pos('./cp/FS.oz' 28 0) nil 4) <P: 404> [y(98) y(100) y(165) y(1) y(148) y(149) y(150) y(161)])
		putList(x(2))
		setPredicateRef(<Q: 405>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 406>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 407>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 408>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 409>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 410>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 411>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 412>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 413>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 414>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MINELEM>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MAXELEM>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 415>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 416>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 417>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 418>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 419>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 420>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 421>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 422>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 423>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 424>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 425>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 427>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 428>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 429>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 438>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 439>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 440>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 441>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 442>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 443>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 444>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 445>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 446>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 447>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 448>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 449>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 450>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 451>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 452>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 453>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 454>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 455>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 456>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 457>)
		setValue(x(3))
lbl(42902)	definitionCopy(x(2) 47978 pid('/body' 0 pos('./cp/FS.oz' 28 0) [once] 31) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(47)
		move(g(0) x(0))
		inlineDot(x(0) 'FSB' x(1) cache)
		inlineDot(x(0) 'FSP' x(2) cache)
		inlineDot(x(0) 'FD' x(3) cache)
lbl(42931)	definition(x(4) 42963 pid('Head' 2 pos('./cp/FS.oz' 87 10) nil 4) <Q: 405> nil)
		shallowGuard(42950)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42945)	shallowThen
		unify(x(1) x(2))
		return
lbl(42950)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(87)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42931)
lbl(42963)	definition(x(4) 42995 pid('Tail' 2 pos('./cp/FS.oz' 88 10) nil 4) <Q: 406> nil)
		shallowGuard(42982)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42977)	shallowThen
		unify(x(1) x(3))
		return
lbl(42982)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42963)
lbl(42995)	definition(x(4) 43068 pid('ExpandList' 2 pos('./cp/FS.oz' 91 3) nil 5) <Q: 407> [g(2)])
lbl(43001)	definition(x(4) 43054 pid('' 3 pos('./cp/FS.oz' 93 7) nil 5) unit [g(0)])
		testRecord(x(0) '#' 2 43045)
lbl(43012)	allocateL3
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(1 x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 80> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 21> 7)
lbl(43045)	getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(43001)
lbl(43054)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(42995)
lbl(43068)	inlineDot(x(2) include x(4) cache)
		inlineDot(x(2) exclude x(5) cache)
		inlineDot(x(2) 'match' x(6) cache)
		inlineDot(x(2) minN x(7) cache)
		inlineDot(x(2) maxN x(8) cache)
		inlineDot(x(2) seq x(9) cache)
		inlineDot(x(2) isIn x(10) cache)
		inlineDot(x(2) isInR x(11) cache)
lbl(43116)	definition(x(12) 43159 pid('FSIsInReif' 3 pos('./cp/FS.oz' 110 6) nil 5) <Q: 408> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43116)
lbl(43159)	inlineDot(x(2) equalR x(11) cache)
lbl(43165)	definition(x(12) 43208 pid('FSEqualReif' 3 pos('./cp/FS.oz' 119 6) nil 5) <Q: 409> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43165)
lbl(43208)	inlineDot(x(1) 'setValue' x(11) cache)
		inlineDot(x(1) set x(13) cache)
		inlineDot(x(2) disjoint x(14) cache)
		inlineDot(x(2) distinct x(15) cache)
lbl(43232)	definition(x(16) 43261 pid('FSDistinctWith' 2 pos('./cp/FS.oz' 134 3) nil 3) <Q: 410> [x(15)])
lbl(43238)	definition(x(2) 43255 pid('' 1 pos('./cp/FS.oz' 135 6) nil 2) unit [g(0) x(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(43238)
lbl(43255)	unify(x(2) x(1))
		return
		endDefinition(43232)
lbl(43261)	inlineDot(x(2) union x(16) cache)
		inlineDot(x(2) intersection x(17) cache)
		inlineDot(x(2) subsume x(18) cache)
		inlineDot(x(2) diff x(19) cache)
		inlineDot(x(2) min x(20) cache)
		inlineDot(x(2) max x(21) cache)
		inlineDot(x(2) convex x(22) cache)
		inlineDot(x(1) isVarB x(23) cache)
		inlineDot(x(1) isValueB x(24) cache)
		inlineDot(x(1) valueToString x(25) cache)
lbl(43321)	definition(x(26) 43482 pid('GetFeaturePath' 4 pos('./cp/FS.oz' 155 6) nil 5) <Q: 411> nil)
		allocateL10
		move(x(3) y(0))
		testList(x(2) 43475)
lbl(43334)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createCond(43475)
lbl(43344)	nextClause(43399)
		clause
		createVariable(y(5))
		createVariable(y(6))
		getRecord('#' 2 y(1))
		unifyValue(y(5))
		unifyValue(y(6))
		getLiteral(nil y(2))
		ask
lbl(43363)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 43386)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(0))
		callBI('.' [x(0) x(2)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL10
		return
lbl(43386)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL10
		return
lbl(43399)	lastClause
		clause
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		getRecord('#' 2 y(1))
		unifyValue(y(7))
		unifyValue(y(8))
		unify(y(9) y(2))
		ask
lbl(43419)	moveMoveYXYX(y(4) x(0) y(7) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 43452)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(1))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43452)	moveMoveYXYX(y(3) x(1) y(8) x(2))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43475)	getLiteral(found_nil_in_path y(0))
		deAllocateL10
		return
		endDefinition(43321)
lbl(43482)	definition(x(26) 43578 pid('Find' 3 pos('./cp/FS.oz' 168 6) nil 4) <Q: 412> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 406> 4)
lbl(43503)	definition(x(0) 43551 pid('' 3 pos('./cp/FS.oz' 170 3) nil 3) unit [y(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		call(g(0) 3)
		testBool(y(3) 43533 43538)
		unify(y(2) y(0))
		deAllocateL4
		return
lbl(43533)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(43538)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(43503)
lbl(43551)	moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(43482)
lbl(43578)	definition(x(26) 43613 pid('MinElement' 2 pos('./cp/FS.oz' 175 6) nil 2) <Q: 413> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 405> 4)
		testRecord(y(1) '#' 2 43606)
lbl(43599)	getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43606)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43578)
lbl(43613)	definition(x(26) 43650 pid('MaxElement' 2 pos('./cp/FS.oz' 180 6) nil 2) <Q: 414> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(1) '#' 2 43643)
lbl(43634)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43643)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43613)
lbl(43650)	definition(x(26) 43802 pid('LESS' 3 pos('./cp/FS.oz' 188 6) nil 5) <Q: 415> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43695)
lbl(43678)	getVarVar(x(3) x(4))
		shallowGuard(43695)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43689)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43695)	testRecord(y(0) '#' 2 43711)
lbl(43700)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43711)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43711)	testRecord(y(0) '#' 2 43729)
lbl(43716)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43729)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43729)	testRecord(y(0) '#' 2 43751)
lbl(43734)	getVarVar(x(0) x(1))
		shallowGuard(43751)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43745)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43751)	testRecord(y(0) '#' 2 43767)
lbl(43756)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43767)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43767)	testRecord(y(0) '#' 2 43787)
lbl(43772)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43787)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43787)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43650)
lbl(43802)	definition(x(27) 43954 pid('GREATER' 3 pos('./cp/FS.oz' 201 6) nil 5) <Q: 416> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43847)
lbl(43830)	getVarVar(x(3) x(4))
		shallowGuard(43847)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43841)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43847)	testRecord(y(0) '#' 2 43863)
lbl(43852)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43863)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43863)	testRecord(y(0) '#' 2 43881)
lbl(43868)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43881)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43881)	testRecord(y(0) '#' 2 43903)
lbl(43886)	getVarVar(x(0) x(1))
		shallowGuard(43903)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43897)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43903)	testRecord(y(0) '#' 2 43919)
lbl(43908)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43919)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43919)	testRecord(y(0) '#' 2 43939)
lbl(43924)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43939)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43939)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43802)
lbl(43954)	definition(x(28) 44045 pid('WeightMin' 2 pos('./cp/FS.oz' 214 6) nil 3) <Q: 417> nil)
lbl(43960)	definition(x(2) 44039 pid('' 3 pos('./cp/FS.oz' 215 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 43974)
		unify(x(2) g(0))
		return
lbl(43974)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(43986)	definition(x(1) 44028 pid('' 3 pos('./cp/FS.oz' 217 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(43986)
lbl(44028)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(43960)
lbl(44039)	unify(x(2) x(1))
		return
		endDefinition(43954)
lbl(44045)	definition(x(28) 44136 pid('WeightMax' 2 pos('./cp/FS.oz' 223 6) nil 3) <Q: 418> nil)
lbl(44051)	definition(x(2) 44130 pid('' 3 pos('./cp/FS.oz' 224 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 44065)
		unify(x(2) g(0))
		return
lbl(44065)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(44077)	definition(x(1) 44119 pid('' 3 pos('./cp/FS.oz' 226 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(44077)
lbl(44119)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(44051)
lbl(44130)	unify(x(2) x(1))
		return
		endDefinition(44045)
lbl(44136)	definition(x(28) 44215 pid('WeightSum' 3 pos('./cp/FS.oz' 232 6) nil 5) <Q: 419> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) sum x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 407> 4)
lbl(44166)	definition(x(1) 44177 pid('' 2 pos('./cp/FS.oz' 233 31) nil 2) unit [y(0)])
		tailCall(g(0) 2)
		endDefinition(44166)
lbl(44177)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant('=:' x(1))
		call(y(2) 3)
		move(g(0) x(0))
		inlineDot(x(0) decl x(1) cache)
		move(y(1) x(0))
		deAllocateL4
		tailCall(x(1) 1)
		endDefinition(44136)
lbl(44215)	createVariable(y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
lbl(44227)	definition(x(29) 44788 pid('OrderFun' 4 pos('./cp/FS.oz' 237 6) nil 9) <Q: 420> [y(0) y(1) y(2) y(3) y(4) y(5) x(28) x(27) x(26)])
		allocateL(11)
		putRecord(c [lowerBound unknown upperBound] x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
lbl(44245)	definition(x(8) 44272 pid('CardTable.unknown' 2 pos('./cp/FS.oz' 240 16) nil 2) unit [x(1) g(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44245)
lbl(44272)	unify(x(8) x(6))
lbl(44275)	definition(x(6) 44302 pid('CardTable.lowerBound' 2 pos('./cp/FS.oz' 241 16) nil 2) unit [x(1) g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44275)
lbl(44302)	unify(x(6) x(5))
lbl(44305)	definition(x(5) 44332 pid('CardTable.upperBound' 2 pos('./cp/FS.oz' 242 16) nil 2) unit [x(1) g(2)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44305)
lbl(44332)	unify(x(5) x(7))
lbl(44335)	definition(x(5) 44483 pid('MakeCompTableWeight' 2 pos('./cp/FS.oz' 245 2) nil 5) unit [x(1) g(3) x(2) g(4) g(5)])
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(44351)	definition(x(4) 44391 pid('Result3.unknown' 2 pos('./cp/FS.oz' 246 19) nil 3) unit [g(0) g(1) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44351)
lbl(44391)	unify(x(4) x(2))
lbl(44394)	definition(x(2) 44434 pid('Result3.lowerBound' 2 pos('./cp/FS.oz' 247 19) nil 3) unit [g(0) g(3) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44394)
lbl(44434)	unify(x(2) x(1))
lbl(44437)	definition(x(1) 44477 pid('Result3.upperBound' 2 pos('./cp/FS.oz' 248 19) nil 3) unit [g(0) g(4) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44437)
lbl(44477)	unify(x(1) x(3))
		return
		endDefinition(44335)
lbl(44483)	putRecord(c [card weightMax weightMin weightSum] x(1))
		setValue(x(4))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		putRecord(c [card weightMax weightMin weightSum] x(2))
		setValue(x(4))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		putRecord(s [max min] y(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(7) x(3) y(8))
		move(x(5) y(9))
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(10) x(0) y(5) x(1))
		call(y(9) 2)
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(6) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(3) x(1))
		call(y(9) 2)
		putRecord(s [max min] x(0))
		setValue(g(7))
		setValue(g(8))
		move(y(7) x(1))
		testBI('IsProcedure' [x(1)]#[x(2)] 44629)
		unify(y(8) y(7))
		deAllocateL
		return
lbl(44629)	testLiteral(y(7) naive 44650)
lbl(44633)	definition(x(0) 44645 pid('' 2 pos('./cp/FS.oz' 267 29) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(44633)
lbl(44645)	unify(x(0) y(8))
		deAllocateL
		return
lbl(44650)	putRecord('#' 2 x(3))
		setConstant(sel)
		setConstant(min)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 411> 8)
		putRecord('#' 2 x(0))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(3))
		setConstant(cost)
		setConstant(card)
		putRecord('#' 2 x(5))
		setConstant(comp)
		setConstant(unknown)
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(4))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 411> 8)
lbl(44723)	definition(x(0) 44781 pid('' 2 pos('./cp/FS.oz' 275 8) nil 4) unit [y(2) y(1)])
lbl(44729)	definition(x(3) 44770 pid('' 3 pos('./cp/FS.oz' 276 12) nil 3) unit [g(0) g(1)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(g(1) 3)
		endDefinition(44729)
lbl(44770)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 44> 7)
		endDefinition(44723)
lbl(44781)	unify(x(0) y(8))
		deAllocateL
		return
		endDefinition(44227)
lbl(44788)	createVariable(y(6))
lbl(44790)	definition(x(26) 45107 pid('ElementFun' 4 pos('./cp/FS.oz' 283 6) nil 11) <Q: 421> [y(6)])
		putRecord(v [unknown weight] x(5))
		setVariable(x(6))
		setVariable(x(7))
		putRecord(v [unknown weight] x(8))
		setVariable(x(9))
		setVariable(x(10))
		putRecord(v [max min] x(4))
		setValue(x(5))
		setValue(x(8))
lbl(44820)	definition(x(5) 44867 pid('ElementFunTable.min.unknown' 2 pos('./cp/FS.oz' 285 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 413> 5)
		endDefinition(44820)
lbl(44867)	unify(x(5) x(9))
lbl(44870)	definition(x(5) 44937 pid('ElementFunTable.min.weight' 2 pos('./cp/FS.oz' 288 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 417> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44870)
lbl(44937)	unify(x(5) x(10))
lbl(44940)	definition(x(5) 44987 pid('ElementFunTable.max.unknown' 2 pos('./cp/FS.oz' 293 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 414> 5)
		endDefinition(44940)
lbl(44987)	unify(x(5) x(6))
lbl(44990)	definition(x(5) 45057 pid('ElementFunTable.max.weight' 2 pos('./cp/FS.oz' 296 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44990)
lbl(45057)	unify(x(5) x(7))
		testBI('IsProcedure' [x(0)]#[x(1)] 45068)
		unify(x(3) x(0))
		return
lbl(45068)	putRecord('#' 2 x(1))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(6))
		setConstant(wrt)
		setConstant(unknown)
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(5))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 411> 9)
		endDefinition(44790)
lbl(45107)	definition(x(26) 45220 pid('FilterFun' 3 pos('./cp/FS.oz' 309 6) nil 4) <Q: 422> [y(0)])
		testLiteral(x(0) true 45162)
lbl(45117)	definition(x(0) 45158 pid('' 2 pos('./cp/FS.oz' 312 5) nil 3) unit [x(1) g(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(45117)
lbl(45158)	unify(x(0) x(2))
		return
lbl(45162)	definition(x(3) 45214 pid('' 2 pos('./cp/FS.oz' 314 5) nil 3) unit [x(1) g(0) x(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 45207)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		tailCall(g(2) 2)
lbl(45207)	getLiteral(false y(0))
		deAllocateL3
		return
		endDefinition(45162)
lbl(45214)	unify(x(3) x(2))
		return
		endDefinition(45107)
lbl(45220)	definition(x(26) 45252 pid('SelectFun' 2 pos('./cp/FS.oz' 321 6) nil 2) <Q: 423> nil)
		testLiteral(x(0) id 45246)
lbl(45230)	definition(x(0) 45242 pid('' 2 pos('./cp/FS.oz' 323 13) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45230)
lbl(45242)	unify(x(0) x(1))
		return
lbl(45246)	unify(x(1) x(0))
		return
		endDefinition(45220)
lbl(45252)	definition(x(26) 45341 pid('RRobinFun' 2 pos('./cp/FS.oz' 329 6) nil 2) <Q: 424> nil)
		testBool(x(0) 45312 45328)
lbl(45262)	definition(x(0) 45308 pid('' 2 pos('./cp/FS.oz' 330 17) nil 5) unit nil)
		shallowGuard(45295)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(45276)	shallowThen
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 21> 7)
lbl(45295)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45262)
lbl(45308)	unify(x(0) x(1))
		return
lbl(45312)	definition(x(0) 45324 pid('' 2 pos('./cp/FS.oz' 331 7) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45312)
lbl(45324)	unify(x(0) x(1))
		return
lbl(45328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45252)
lbl(45341)	definition(x(26) 45473 pid('FSDistNaive' 1 pos('./cp/FS.oz' 336 6) nil 2) <Q: 425> [y(6) x(4) x(5)])
		testLiteral(x(0) nil 45352)
		return
lbl(45352)	allocateL4
		move(x(0) y(0))
		createChoice
lbl(45357)	lastClause
		emptyClause
lbl(45359)	move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testLiteral(y(3) nil 45408)
lbl(45392)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 406> 4)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45408)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 413> 4)
		createChoice
lbl(45418)	nextClause(45445)
		emptyClause
lbl(45421)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45445)	lastClause
		emptyClause
lbl(45447)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
		endDefinition(45341)
lbl(45473)	createVariable(y(7))
lbl(45475)	definition(x(26) 45660 pid('FSDistGeneric' 7 pos('./cp/FS.oz' 360 6) nil 7) <Q: 426> [y(7) x(4) x(5)])
		allocateL10
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createChoice
lbl(45504)	lastClause
		emptyClause
lbl(45506)	call(y(5) 0)
		createChoice
lbl(45510)	lastClause
		emptyClause
lbl(45512)	moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 39> 6)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		call(y(0) 2)
		testLiteral(y(6) nil 45538)
		deAllocateL10
		return
lbl(45538)	move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(9) x(1))
		call(y(4) 2)
		createChoice
lbl(45575)	nextClause(45617)
		emptyClause
lbl(45578)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
lbl(45617)	lastClause
		emptyClause
lbl(45619)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
		endDefinition(45475)
lbl(45660)	createVariable(y(8))
lbl(45662)	definition(x(26) 45886 pid('FSDistribute' 2 pos('./cp/FS.oz' 390 6) nil 8) <Q: 427> [y(7) y(8)])
		allocateL7
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testLiteral(y(0) naive 45692)
lbl(45685)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<Q: 425> 3)
lbl(45692)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) generic 45873)
lbl(45702)	putConstant(select x(2))
		putConstant(id x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 423> 4)
		putConstant(nil x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		putConstant(weights x(4))
		move(y(3) x(1))
		callBI('CondSelect' [x(0) x(4) x(1)]#[x(2)])
		putConstant(order x(4))
		putConstant(order x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(2) y(3))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 420> 8)
		move(y(0) x(0))
		putConstant(filter x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(5)])
		move(x(5) x(0))
		move(y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 422> 6)
		move(y(0) x(0))
		putConstant(element x(4))
		putConstant(element x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(6) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 421> 8)
		move(y(0) x(0))
		putConstant(rrobin x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 424> 4)
lbl(45836)	definition(x(0) 45845 pid('' 0 pos('./cp/FS.oz' 404 42) nil 0) unit nil)
		return
		endDefinition(45836)
lbl(45845)	move(y(0) x(1))
		putConstant(procedure x(7))
		callBI('CondSelect' [x(1) x(7) x(0)]#[x(6)])
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(2) x(5))
		deAllocateL7
		genFastCall(<Q: 426> 15)
lbl(45873)	putRecord('#' 2 x(1))
		setConstant('Error in FSDistribute')
		setValue(y(0))
		callBI('Exception.raise' [x(1)]#nil)
		endDefinition(45662)
lbl(45886)	definition(x(27) 45986 pid('FDWatchMax' 2 pos('./cp/FS.oz' 423 3) nil 4) <Q: 428> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 45899)
		tailCall(x(1) 1)
lbl(45899)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 45971 45973)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 428> 5)
lbl(45971)	deAllocateL4
		return
lbl(45973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(429)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45886)
lbl(45986)	definition(x(27) 46086 pid('FDWatchMin' 2 pos('./cp/FS.oz' 435 3) nil 4) <Q: 429> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 45999)
		tailCall(x(1) 1)
lbl(45999)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 46071 46073)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 429> 5)
lbl(46071)	deAllocateL4
		return
lbl(46073)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45986)
lbl(46086)	inlineDot(x(2) card x(27) cache)
lbl(46092)	definition(x(28) 46130 pid('FSCard' 2 pos('./cp/FS.oz' 452 6) nil 4) <Q: 430> [x(3) x(27)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) decl x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		call(x(3) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(46092)
lbl(46130)	inlineDot(x(1) cardRange x(27) cache)
		inlineDot(x(1) getUnknown x(29) cache)
		unify(x(29) y(3))
		inlineDot(x(1) getGlb x(29) cache)
		unify(x(29) y(4))
		inlineDot(x(1) getLub x(29) cache)
		unify(x(29) y(5))
		inlineDot(x(1) getCard x(29) cache)
		inlineDot(x(1) getNumOfKnownIn x(30) cache)
		unify(x(30) y(1))
		inlineDot(x(1) getNumOfKnownNotIn x(30) cache)
		unify(x(30) y(2))
		inlineDot(x(1) getNumOfUnknown x(30) cache)
		unify(x(30) y(0))
		inlineDot(x(1) sup x(1) cache)
		moveMoveXYXY(x(2) y(9) x(3) y(10))
		moveMoveXYXY(x(4) y(11) x(5) y(12))
		moveMoveXYXY(x(6) y(13) x(7) y(14))
		moveMoveXYXY(x(8) y(15) x(9) y(16))
		moveMoveXYXY(x(10) y(17) x(12) y(18))
		moveMoveXYXY(x(11) y(19) x(13) y(20))
		moveMoveXYXY(x(14) y(21) x(15) y(22))
		moveMoveXYXY(x(16) y(23) x(17) y(24))
		moveMoveXYXY(x(18) y(25) x(19) y(26))
		moveMoveXYXY(x(20) y(27) x(21) y(28))
		moveMoveXYXY(x(22) y(29) x(23) y(30))
		moveMoveXYXY(x(24) y(31) x(25) y(32))
		moveMoveXYXY(x(26) y(33) x(28) y(34))
		moveMoveXYXY(x(27) y(35) x(29) y(36))
		createVariableMove(y(37) x(0))
		call(x(1) 1)
		putRecord('#' 2 x(0))
		setConstant(0)
		setValue(y(37))
		putList(y(38))
		setValue(x(0))
		setConstant(nil)
		move(y(38) x(0))
		createVariableMove(y(39) x(1))
		call(y(19) 2)
lbl(46301)	definition(x(0) 46380 pid('VectorToList' 2 pos('./cp/FS.oz' 479 3) nil 3) <Q: 431> [g(3) g(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 46328 46367)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(46328)	move(y(0) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 46342)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
lbl(46342)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setConstant('VectorToTuple')
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('A propagator expected a vector as input argument.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(46367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(480)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46301)
lbl(46380)	unify(x(0) y(7))
lbl(46383)	definition(x(0) 46417 pid('FSIntersectN' 2 pos('./cp/FS.oz' 495 3) nil 4) <Q: 432> [y(24) y(39)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 431> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(g(1) x(2))
		move(y(0) x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(46383)
lbl(46417)	definition(x(1) 46507 pid('FSUnionN' 2 pos('./cp/FS.oz' 500 3) nil 4) <Q: 433> [y(9) y(10)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unionN x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) sum x(1) cache)
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 431> 4)
lbl(46461)	definition(x(1) 46472 pid('' 2 pos('./cp/FS.oz' 502 37) nil 2) unit nil)
		genFastCall(<Q: 430> 5)
		endDefinition(46461)
lbl(46472)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 430> 4)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(y(3) x(2))
		putConstant('=:' x(1))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(46417)
lbl(46507)	move(y(9) x(2))
		inlineDot(x(2) disjointN x(3) cache)
lbl(46516)	definition(x(4) 46582 pid('FSDistinctN' 1 pos('./cp/FS.oz' 508 3) nil 2) <Q: 434> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 431> 4)
lbl(46529)	definition(x(1) 46573 pid('' 1 pos('./cp/FS.oz' 511 7) nil 2) unit nil)
		match(x(0) ht(46558 [onScalar(nil 46538) onRecord('|' 2 46539)]))
lbl(46538)	return
lbl(46539)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 410> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(46558)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(515)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(46529)
lbl(46573)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 37> 5)
		endDefinition(46516)
lbl(46582)	inlineDot(x(2) partition x(5) cache)
lbl(46588)	definition(x(6) 46829 pid('FSNewWeights' 2 pos('./cp/FS.oz' 521 3) nil 6) <Q: 435> [g(5) g(6) g(7)])
		allocateL2
		callBI('NewDictionary' nil#[x(2)])
		createVariable(x(3))
lbl(46600)	definition(x(4) 46772 pid('ScanWeightDescr' 1 pos('./cp/FS.oz' 524 6) nil 8) unit [g(0) x(2) x(3)])
		allocateL1
		move(x(0) y(0))
		testList(y(0) 46643)
lbl(46613)	getVarVar(x(1) x(2))
		shallowGuard(46643)
		getRecord('#' 2 x(1))
		unifyLiteral(default)
		unifyVariable(x(3))
lbl(46626)	shallowThen
		move(g(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		move(x(2) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46643)	testList(y(0) 46721)
lbl(46646)	getVarVar(x(0) x(1))
		shallowGuard(46721)
		getRecord('#' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(46667)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		createVariable(y(0))
		testLT(x(3) x(4) x(5) 46711)
		getList(y(0))
		unifyVariable(x(5))
		unifyValue(x(1))
		getRecord('#' 2 x(5))
		unifyVariable(x(6))
		unifyValue(x(2))
		getRecord('#' 2 x(6))
		unifyVariable(x(7))
		unifyValue(x(4))
		inlinePlus1(x(3) x(1))
		unify(x(1) x(7))
		branch(46714)
lbl(46711)	unify(y(0) x(1))
lbl(46714)	move(y(0) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46721)	testList(y(0) 46751)
lbl(46724)	getVarVar(x(0) x(1))
		shallowGuard(46751)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(46737)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(3)]#nil)
		move(x(1) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46751)	testLiteral(y(0) nil 46757)
lbl(46755)	deAllocateL1
		return
lbl(46757)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(538)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46600)
lbl(46772)	unify(x(4) x(3))
		putConstant(default x(4))
		putConstant(0 x(5))
		callBI('Dictionary.put' [x(2) x(4) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(3) 1)
		move(y(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
lbl(46801)	definition(x(1) 46822 pid('' 2 pos('./cp/FS.oz' 546 6) nil 5) unit [g(2) y(1) x(2)])
		move(g(1) x(2))
		move(g(2) x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(46801)
lbl(46822)	unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(46588)
lbl(46829)	unify(x(6) y(8))
lbl(46832)	definition(x(6) 46852 pid('FSCompl' 2 pos('./cp/FS.oz' 552 3) nil 3) <Q: 436> [y(26) y(39)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46832)
lbl(46852)	definition(x(7) 46886 pid('FSComplIn' 3 pos('./cp/FS.oz' 556 3) nil 3) <Q: 437> [y(21) y(23)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(46852)
lbl(46886)	createVariable(y(7))
lbl(46888)	definition(x(8) 46915 pid('FSForAllIn' 2 pos('./cp/FS.oz' 562 3) nil 2) <Q: 438> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(46888)
lbl(46915)	putRecord(l [decl lowerBound new upperBound] x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		putRecord(r [decl lowerBound new upperBound] x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putRecord(t [decl lowerBound new upperBound] x(21))
		setVariable(x(22))
		setVariable(x(23))
		setVariable(x(24))
		setVariable(x(25))
		putRecord(v [decl is list lowerBound new record tuple upperBound] y(39))
		setVariable(x(9))
		setValue(y(30))
		setValue(x(10))
		setVariable(x(15))
		setValue(y(20))
		setValue(x(16))
		setValue(x(21))
		setVariable(x(26))
lbl(46971)	definition(x(10) 46991 pid('FSVar.decl' 1 pos('./cp/FS.oz' 568 14) nil 3) <Q: 439> [y(20) y(38)])
		move(x(0) x(2))
		move(g(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46971)
lbl(46991)	unify(x(10) x(9))
lbl(46994)	definition(x(10) 47014 pid('FSVar.upperBound' 2 pos('./cp/FS.oz' 572 10) nil 3) <Q: 440> [y(20)])
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46994)
lbl(47014)	unify(x(10) x(26))
lbl(47017)	definition(x(10) 47034 pid('FSVar.lowerBound' 2 pos('./cp/FS.oz' 576 19) nil 3) <Q: 441> [y(20) y(38)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47017)
lbl(47034)	unify(x(10) x(15))
lbl(47037)	definition(x(10) 47070 pid('FSVar.list.decl' 2 pos('./cp/FS.oz' 582 22) nil 2) <Q: 442> [x(9)])
		allocateL1
		move(x(1) y(0))
		genFastCall(<P: 19> 4)
lbl(47050)	definition(x(1) 47061 pid('' 1 pos('./cp/FS.oz' 585 12) nil 1) unit [g(0)])
		genFastCall(<Q: 439> 3)
		endDefinition(47050)
lbl(47061)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(47037)
lbl(47070)	unify(x(10) x(11))
lbl(47073)	definition(x(10) 47117 pid('FSVar.list.upperBound' 3 pos('./cp/FS.oz' 589 22) nil 3) <Q: 443> [x(26)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47091)	definition(x(1) 47108 pid('' 1 pos('./cp/FS.oz' 592 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47091)
lbl(47108)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47073)
lbl(47117)	unify(x(10) x(14))
lbl(47120)	definition(x(10) 47164 pid('FSVar.list.lowerBound' 3 pos('./cp/FS.oz' 596 22) nil 3) <Q: 444> [x(15)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47138)	definition(x(1) 47155 pid('' 1 pos('./cp/FS.oz' 599 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47138)
lbl(47155)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47120)
lbl(47164)	unify(x(10) x(12))
lbl(47167)	definition(x(10) 47216 pid('FSVar.list.new' 4 pos('./cp/FS.oz' 603 15) nil 4) <Q: 445> [y(20)])
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<P: 19> 4)
lbl(47187)	definition(x(1) 47207 pid('' 1 pos('./cp/FS.oz' 606 12) nil 3) unit [g(0) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47187)
lbl(47207)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(47167)
lbl(47216)	unify(x(10) x(13))
lbl(47219)	definition(x(10) 47250 pid('FSVar.tuple.decl' 3 pos('./cp/FS.oz' 611 22) nil 4) <Q: 446> [g(8) x(9)])
		callBI('MakeTuple' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
lbl(47231)	definition(x(1) 47242 pid('' 1 pos('./cp/FS.oz' 614 12) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47231)
lbl(47242)	move(x(2) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47219)
lbl(47250)	unify(x(10) x(22))
lbl(47253)	definition(x(10) 47290 pid('FSVar.tuple.upperBound' 4 pos('./cp/FS.oz' 618 22) nil 5) <Q: 447> [g(8) x(26)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47265)	definition(x(1) 47282 pid('' 1 pos('./cp/FS.oz' 621 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47265)
lbl(47282)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47253)
lbl(47290)	unify(x(10) x(25))
lbl(47293)	definition(x(10) 47330 pid('FSVar.tuple.lowerBound' 4 pos('./cp/FS.oz' 625 22) nil 5) <Q: 448> [g(8) x(15)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47305)	definition(x(1) 47322 pid('' 1 pos('./cp/FS.oz' 628 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47305)
lbl(47322)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47293)
lbl(47330)	unify(x(10) x(23))
lbl(47333)	definition(x(10) 47373 pid('FSVar.tuple.new' 5 pos('./cp/FS.oz' 632 15) nil 6) <Q: 449> [g(8) y(20)])
		callBI('MakeTuple' [x(0) x(1)]#[x(5)])
		unify(x(5) x(4))
lbl(47345)	definition(x(1) 47365 pid('' 1 pos('./cp/FS.oz' 635 12) nil 3) unit [g(1) x(2) x(3)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47345)
lbl(47365)	move(x(4) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47333)
lbl(47373)	unify(x(10) x(24))
lbl(47376)	definition(x(10) 47409 pid('FSVar.record.decl' 3 pos('./cp/FS.oz' 641 23) nil 3) <Q: 450> [g(8) x(9)])
		allocateL1
		move(x(2) y(0))
		genFastCall(<P: 110> 6)
lbl(47389)	definition(x(1) 47400 pid('' 1 pos('./cp/FS.oz' 644 6) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47389)
lbl(47400)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 164> 5)
		endDefinition(47376)
lbl(47409)	unify(x(10) x(17))
lbl(47412)	definition(x(9) 47456 pid('FSVar.record.upperBound' 4 pos('./cp/FS.oz' 648 23) nil 4) <Q: 451> [g(8) x(26)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47430)	definition(x(1) 47447 pid('' 1 pos('./cp/FS.oz' 651 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47430)
lbl(47447)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47412)
lbl(47456)	unify(x(9) x(20))
lbl(47459)	definition(x(9) 47503 pid('FSVar.record.lowerBound' 4 pos('./cp/FS.oz' 655 23) nil 4) <Q: 452> [g(8) x(15)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47477)	definition(x(1) 47494 pid('' 1 pos('./cp/FS.oz' 658 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47477)
lbl(47494)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47459)
lbl(47503)	unify(x(9) x(18))
lbl(47506)	definition(x(9) 47555 pid('FSVar.record.new' 5 pos('./cp/FS.oz' 662 16) nil 5) <Q: 453> [g(8) y(20)])
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYYX(x(4) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
lbl(47526)	definition(x(1) 47546 pid('' 1 pos('./cp/FS.oz' 665 6) nil 3) unit [g(1) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47526)
lbl(47546)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 164> 5)
		endDefinition(47506)
lbl(47555)	unify(x(9) x(19))
		putRecord(c [empty is new singl toString universal] y(20))
		setVariable(x(9))
		setValue(y(31))
		setValue(y(19))
		setVariable(y(30))
		setValue(y(32))
		setVariable(y(40))
		moveMoveXYXY(x(0) y(31) x(1) y(32))
		moveMoveXYXY(x(3) y(41) x(4) y(42))
		moveMoveXYXY(x(5) y(43) x(6) y(44))
		moveMoveXYXY(x(7) y(45) x(8) y(46))
		move(x(9) x(1))
		putConstant(nil x(0))
		call(y(19) 2)
		moveMoveYXYX(y(38) x(0) y(40) x(1))
		call(y(19) 2)
lbl(47611)	definition(x(0) 47631 pid('FSValue.singl' 2 pos('./cp/FS.oz' 674 14) nil 3) <Q: 454> [y(19)])
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(47611)
lbl(47631)	unify(x(0) y(30))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setValue(y(18))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
lbl(47652)	definition(x(7) 47695 pid('FSReified.isIn' 3 pos('./cp/FS.oz' 682 31) nil 5) <Q: 455> [y(10)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 408> 7)
		endDefinition(47652)
lbl(47695)	unify(x(7) x(5))
lbl(47698)	definition(x(5) 47774 pid('FSReified.areIn' 3 pos('./cp/FS.oz' 686 17) nil 5) <Q: 456> [y(10)])
		allocateL5
		move(g(0) x(3))
		inlineDot(x(3) list x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		call(y(3) 3)
lbl(47746)	definition(x(1) 47763 pid('' 2 pos('./cp/FS.oz' 690 9) nil 3) unit [y(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 408> 7)
		endDefinition(47746)
lbl(47763)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(47698)
lbl(47774)	unify(x(5) x(1))
lbl(47777)	definition(x(1) 47829 pid('FSReified.include' 3 pos('./cp/FS.oz' 692 17) nil 5) <Q: 457> [y(10) y(9)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		move(g(1) x(0))
		inlineDot(x(0) includeR x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(47777)
lbl(47829)	unify(x(1) x(4))
		move(y(9) x(1))
		inlineDot(x(1) bounds x(4) cache)
		unify(x(4) x(2))
		inlineDot(x(1) boundsN x(2) cache)
		unify(x(2) x(3))
		inlineDot(x(1) partitionReified x(2) cache)
		unify(x(2) x(6))
		inlineDot(x(1) monitorIn x(2) cache)
		unify(x(2) y(7))
		getRecord(r [card cardOf lowerBound unknown upperBound] y(6))
		unifyValVar(y(36) x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		putRecord(i [convex 'match' max maxN min minN seq] x(1))
		setValue(y(29))
		setValue(y(13))
		setValue(y(28))
		setValue(y(15))
		setValue(y(27))
		setValue(y(14))
		setValue(y(16))
		getRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] g(9))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(44))
		unifyValue(y(45))
		unifyValue(y(26))
		unifyValue(y(21))
		unifyValue(y(41))
		unifyValue(y(22))
		unifyValue(y(42))
		unifyValue(y(33))
		unifyValue(y(12))
		unifyValue(y(46))
		unifyValue(y(11))
		unifyNumber(0)
		unifyValue(x(1))
		unifyValue(y(24))
		unifyValue(y(31))
		unifyValue(y(17))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(43))
		unifyValue(y(6))
		unifyValue(x(0))
		unifyValue(y(25))
		unifyValue(y(37))
		unifyValue(y(23))
		unifyValue(y(32))
		unifyValue(y(20))
		unifyValue(y(39))
		deAllocateL
		return
		endDefinition(42902)
lbl(47978)	tailCall(x(2) 0)
		endDefinition(42566)
lbl(47983)	putRecord(l [decl lowerBound new upperBound] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/3')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(r [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(t [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(v [decl is list lowerBound new record tuple upperBound] x(4))
		setConstant('procedure/1')
		setConstant(value)
		setValue(x(5))
		setConstant('procedure/2')
		setConstant(value)
		setValue(x(6))
		setValue(x(7))
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(c [empty is new singl toString universal] x(4))
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(4))
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant(value)
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(c [lowerBound unknown upperBound] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(r [card cardOf lowerBound unknown upperBound] x(4))
		setConstant(value)
		setValue(x(8))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(i [convex 'match' max maxN min minN seq] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(9))
		setValue(x(4))
		putList(x(13))
		setConstant(watch)
		setConstant(nil)
		putList(x(12))
		setConstant(sum)
		setValue(x(13))
		putList(x(11))
		setConstant(reflect)
		setValue(x(12))
		putList(x(10))
		setConstant(list)
		setValue(x(11))
		putList(x(4))
		setConstant(decl)
		setValue(x(10))
		putList(x(3))
		setConstant(bool)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(14))
		setConstant('x-oz://boot/FSB')
		setConstant(nil)
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FSP')
		setConstant(nil)
		putRecord('import' ['FD' 'FSB' 'FSP'] x(0))
		setValue(x(1))
		setValue(x(14))
		setValue(x(15))
		putConstant('procedure/2' x(4))
		putConstant(value x(10))
		putConstant('procedure/2' x(11))
		putConstant('procedure/3' x(12))
		putConstant(value x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant(value x(16))
		putConstant('procedure/1' x(17))
		putConstant('procedure/2' x(18))
		putConstant(value x(19))
		putConstant('procedure/2' x(20))
		putConstant(value x(21))
		putConstant(char x(22))
		putConstant(value x(23))
		putConstant('procedure/2' x(24))
		putConstant(value x(25))
		putConstant(value x(26))
		putConstant('procedure/2' x(27))
		putConstant(value x(28))
		putConstant(value x(29))
		putConstant(value x(30))
		putConstant(value x(31))
		putConstant('procedure/2' x(32))
		putRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] x(1))
		setValue(x(4))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(9))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(8))
		setValue(x(7))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(92) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(48377)	definition(x(7) 48401 pid('NewKiller' 2 pos('./cp/Search.oz' 27 3) nil 3) <P: 458> nil)
lbl(48383)	definition(x(2) 48395 pid('Killer' 0 pos('./cp/Search.oz' 28 6) nil 0) unit [x(1)])
		getLiteral(kill g(0))
		return
		endDefinition(48383)
lbl(48395)	unify(x(2) x(0))
		return
		endDefinition(48377)
lbl(48401)	definition(x(7) 48413 pid('WrapS' 2 pos('./cp/Search.oz' 36 3) nil 2) <P: 459> nil)
		unify(x(1) x(0))
		return
		endDefinition(48401)
lbl(48413)	definition(x(8) 48446 pid('WrapP' 2 pos('./cp/Search.oz' 40 3) nil 3) <P: 460> [y(186) y(185)])
lbl(48419)	definition(x(2) 48440 pid('' 1 pos('./cp/Search.oz' 41 6) nil 4) unit [g(0) g(1) x(0)])
		move(g(2) x(1))
		callBI('Space.clone' [x(1)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(48419)
lbl(48440)	unify(x(2) x(1))
		return
		endDefinition(48413)
lbl(48446)	definition(x(9) 48491 pid('ReDo' 2 pos('./cp/Search.oz' 50 6) nil 2) <P: 461> [y(188)])
		match(x(0) ht(48476 [onScalar(nil 48455) onRecord('|' 2 48456)]))
lbl(48455)	return
lbl(48456)	allocateL2
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		genFastCall(<P: 461> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(48476)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(53)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(48446)
lbl(48491)	definition(x(9) 48514 pid('Recompute' 3 pos('./cp/Search.oz' 56 6) nil 4) <P: 462> [y(185)])
		callBI('Space.clone' [x(0)]#[x(3)])
		unify(x(3) x(2))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 461> 5)
		endDefinition(48491)
lbl(48514)	definition(x(9) 48552 pid('Better' 3 pos('./cp/Search.oz' 64 3) nil 4) <P: 463> [y(185) y(187) y(186)])
		callBI('Space.clone' [x(2)]#[x(3)])
lbl(48523)	definition(x(2) 48546 pid('' 1 pos('./cp/Search.oz' 67 22) nil 3) unit [g(2) x(3) x(1)])
		move(g(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		move(x(0) x(1))
		move(x(2) x(0))
		tailCall(g(2) 2)
		endDefinition(48523)
lbl(48546)	callBI('Space.inject' [x(0) x(2)]#nil)
		return
		endDefinition(48514)
lbl(48552)	definition(x(9) 48653 pid('OneDepthNR' 3 pos('./cp/Search.oz' 74 3) nil 5) <P: 464> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(3)] 48647)
		callBI('Space.ask' [x(1)]#[x(3)])
		match(x(3) ht(48634 [onScalar(failed 48568) onScalar(succeeded 48572) onRecord(alternatives 1 48576)]))
lbl(48568)	getLiteral(nil x(2))
		return
lbl(48572)	unify(x(2) x(1))
		return
lbl(48576)	allocateL5
		getVariable(y(0))
		callBI('Space.clone' [x(1)]#[x(3)])
		putConstant(1 x(4))
		callBI('Space.commit' [x(1) x(4)]#nil)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(4) nil 48629)
lbl(48606)	putRecord('#' 2 x(0))
		setConstant(2)
		setValue(y(0))
		move(y(3) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 464> 7)
lbl(48629)	unify(y(2) y(4))
		deAllocateL5
		return
lbl(48634)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(48647)	getLiteral(nil x(2))
		return
		endDefinition(48552)
lbl(48653)	definition(x(9) 48767 pid('AltCopy' 6 pos('./cp/Search.oz' 91 6) nil 8) <P: 465> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(6)] 48684)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 466> 15)
lbl(48684)	allocateL7
		callBI('Space.clone' [x(3)]#[x(6)])
		callBI('Space.commit' [x(6) x(1)]#nil)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(1))
		move(y(3) x(2))
		move(x(7) x(3))
		move(y(4) x(5))
		putConstant(1 x(4))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 48760)
lbl(48737)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL7
		genFastCall(<P: 465> 13)
lbl(48760)	unify(y(5) y(6))
		deAllocateL7
		return
		endDefinition(48653)
lbl(48767)	definition(x(9) 48906 pid('Alt' 9 pos('./cp/Search.oz' 104 6) nil 10) <P: 467> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(9)] 48807)
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(9) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		genFastCall(<P: 466> 15)
lbl(48807)	allocateL9
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		createVariableMove(y(8) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(8) nil 48899)
lbl(48858)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(8) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		deAllocateL9
		genFastCall(<P: 467> 19)
lbl(48899)	unify(y(7) y(8))
		deAllocateL9
		return
		endDefinition(48767)
lbl(48906)	definition(x(9) 49003 pid('OneDepthR' 7 pos('./cp/Search.oz' 114 6) nil 10) <P: 466> [y(184)])
		testBI('IsFree' [x(0)]#[x(7)] 48997)
		callBI('Space.ask' [x(1)]#[x(7)])
		match(x(7) ht(48984 [onScalar(failed 48922) onScalar(succeeded 48926) onRecord(alternatives 1 48930)]))
lbl(48922)	getLiteral(nil x(6))
		return
lbl(48926)	unify(x(6) x(1))
		return
lbl(48930)	getVariable(x(7))
		testBI('==' [x(4) x(5)]#[x(8)] 48954)
		move(x(1) x(3))
		move(x(7) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		putConstant(1 x(1))
		genFastCall(<P: 465> 13)
lbl(48954)	inlinePlus1(x(4) x(9))
		move(x(2) x(4))
		move(x(7) x(2))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(8))
		move(x(9) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 467> 19)
lbl(48984)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(123)
		setValue(x(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(48997)	getLiteral(nil x(6))
		return
		endDefinition(48906)
lbl(49003)	definition(x(9) 49069 pid('OneDepth' 4 pos('./cp/Search.oz' 130 6) nil 7) <P: 468> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 49046)
		moveMoveYXYX(y(3) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 464> 7)
lbl(49046)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(y(2) x(6))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 466> 15)
		endDefinition(49003)
lbl(49069)	definition(x(9) 49203 pid('AltCopy' 8 pos('./cp/Search.oz' 139 2) nil 10) <P: 469> [y(188) y(185) y(179)])
		testBI('==' [x(1) x(2)]#[x(8)] 49103)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		putConstant(nil x(3))
		genFastCall(<P: 470> 19)
lbl(49103)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		move(x(6) x(7))
		move(y(5) x(6))
		putConstant(1 x(5))
		createVariableMove(y(7) x(8))
		genFastCall(<P: 470> 18)
		move(y(7) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 49170)
		unify(y(6) y(7))
		deAllocateL8
		return
lbl(49170)	move(y(1) x(1))
		inlinePlus1(x(1) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(7) x(6) y(6) x(7))
		deAllocateL8
		genFastCall(<P: 469> 17)
		endDefinition(49069)
lbl(49203)	definition(x(9) 49366 pid('Alt' 11 pos('./cp/Search.oz' 154 2) nil 12) <P: 471> [y(188) y(179)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 49249)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 470> 19)
lbl(49249)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(10) y(8))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		move(y(7) x(6))
		move(x(9) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<P: 470> 18)
		move(y(9) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 49318)
		unify(y(8) y(9))
		deAllocateL
		return
lbl(49318)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(10) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		moveMoveYXYX(y(9) x(9) y(8) x(10))
		deAllocateL
		genFastCall(<P: 471> 23)
		endDefinition(49203)
lbl(49366)	definition(x(9) 49493 pid('OneBoundR' 9 pos('./cp/Search.oz' 165 2) nil 13) <P: 470> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 49487)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(49474 [onScalar(failed 49382) onScalar(succeeded 49386) onRecord(alternatives 1 49390)]))
lbl(49382)	unify(x(8) x(7))
		return
lbl(49386)	unify(x(8) x(1))
		return
lbl(49390)	getVariable(x(9))
		putConstant(0 x(10))
		testLE(x(4) x(10) x(11) 49404)
		getLiteral(cut x(8))
		return
lbl(49404)	testBI('==' [x(5) x(6)]#[x(10)] 49435)
		inlineMinus1(x(4) x(10))
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(10) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 469> 17)
lbl(49435)	inlineMinus1(x(4) x(11))
		inlinePlus1(x(5) x(12))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		move(x(7) x(9))
		move(x(12) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 471> 23)
lbl(49474)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(49487)	getLiteral(nil x(8))
		return
		endDefinition(49366)
lbl(49493)	definition(x(9) 49581 pid('OneIterR' 5 pos('./cp/Search.oz' 180 8) nil 10) <P: 472> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 49575)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(9)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(9) x(1))
		move(x(9) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(3) x(6))
		putConstant(nil x(3))
		putConstant(nil x(7))
		createVariableMove(y(5) x(8))
		genFastCall(<P: 470> 18)
		testLiteral(y(5) cut 49570)
lbl(49550)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 472> 11)
lbl(49570)	unify(y(4) y(5))
		deAllocateL6
		return
lbl(49575)	getLiteral(nil x(4))
		return
		endDefinition(49493)
lbl(49581)	definition(x(9) 49640 pid('OneBound' 5 pos('./cp/Search.oz' 191 2) nil 9) <P: 473> [y(183)])
		allocateL5
		callBI('Space.new' [x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(4))
		moveMoveYXYX(y(1) x(5) y(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 470> 19)
		endDefinition(49581)
lbl(49640)	definition(x(9) 49687 pid('OneIter' 4 pos('./cp/Search.oz' 197 2) nil 5) <P: 474> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		moveMoveYXYX(y(3) x(0) y(1) x(3))
		move(y(2) x(4))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 472> 11)
		endDefinition(49640)
lbl(49687)	definition(x(9) 49802 pid('Probe' 3 pos('./cp/Search.oz' 203 2) nil 6) <P: 475> [y(184) y(188) y(185)])
		testBI('IsDet' [x(2)]#[x(3)] 49703)
		putConstant(killed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(49703)	callBI('Space.ask' [x(0)]#[x(3)])
		match(x(3) ht(49787 [onScalar(failed 49709) onScalar(succeeded 49710) onRecord(alternatives 1 49719)]))
lbl(49709)	return
lbl(49710)	putRecord(succeeded 1 x(1))
		setValue(x(0))
		callBI('Exception.raise' [x(1)]#nil)
lbl(49719)	getVariable(x(3))
		testNumber(x(1) 0 49737)
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		putConstant(0 x(1))
		genFastCall(<P: 475> 7)
lbl(49737)	allocateL3
		callBI('Space.clone' [x(0)]#[x(4)])
		putRecord('#' 2 x(5))
		setConstant(2)
		setValue(x(3))
		callBI('Space.commit' [x(0) x(5)]#nil)
		inlineMinus1(x(1) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(x(3) x(1))
		genFastCall(<P: 475> 6)
		move(y(2) x(0))
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 475> 7)
lbl(49787)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(49687)
lbl(49802)	definition(x(9) 49861 pid('Iterate' 4 pos('./cp/Search.oz' 220 2) nil 5) <P: 476> [y(185)])
		testBI('==' [x(2) x(1)]#[x(4)] 49818)
		move(x(3) x(2))
		genFastCall(<P: 475> 7)
lbl(49818)	allocateL4
		callBI('Space.clone' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(y(3) x(2))
		genFastCall(<P: 475> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 476> 9)
		endDefinition(49802)
lbl(49861)	definition(x(9) 49902 pid('LDS' 3 pos('./cp/Search.oz' 226 2) nil 4) <P: 477> [y(183)])
		allocateL3
		callBI('Space.new' [x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		move(y(2) x(3))
		putConstant(0 x(1))
		deAllocateL3
		genFastCall(<P: 476> 9)
		endDefinition(49861)
lbl(49902)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] y(100))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(y(187))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
lbl(49930)	definition(x(0) 49974 pid('OneModule.depth' 4 pos('./cp/Search.oz' 233 32) nil 4) <P: 478> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 49955)
lbl(49950)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(49955)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(49930)
lbl(49974)	unify(x(0) y(187))
lbl(49977)	definition(x(0) 50017 pid('OneModule.depthP' 4 pos('./cp/Search.oz' 239 18) nil 4) <P: 479> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50002)
lbl(49997)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50002)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(49977)
lbl(50017)	unify(x(0) x(12))
lbl(50020)	definition(x(0) 50055 pid('OneModule.depthS' 4 pos('./cp/Search.oz' 245 18) nil 4) <P: 480> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50045)
lbl(50040)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50045)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50020)
lbl(50055)	unify(x(0) x(13))
lbl(50058)	definition(x(0) 50106 pid('OneModule.bound' 5 pos('./cp/Search.oz' 252 18) nil 5) <P: 481> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50087 [onScalar(nil 50077) onScalar(cut 50082)]))
lbl(50077)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50082)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50087)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50058)
lbl(50106)	unify(x(0) x(9))
lbl(50109)	definition(x(0) 50153 pid('OneModule.boundP' 5 pos('./cp/Search.oz' 259 18) nil 5) <P: 482> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50138 [onScalar(nil 50128) onScalar(cut 50133)]))
lbl(50128)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50133)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50138)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50109)
lbl(50153)	unify(x(0) x(10))
lbl(50156)	definition(x(0) 50195 pid('OneModule.boundS' 5 pos('./cp/Search.oz' 266 18) nil 5) <P: 483> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50185 [onScalar(nil 50175) onScalar(cut 50180)]))
lbl(50175)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50180)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50185)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50156)
lbl(50195)	unify(x(0) x(11))
lbl(50198)	definition(x(0) 50242 pid('OneModule.iter' 4 pos('./cp/Search.oz' 274 18) nil 4) <P: 484> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50223)
lbl(50218)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50223)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50198)
lbl(50242)	unify(x(0) x(14))
lbl(50245)	definition(x(0) 50285 pid('OneModule.iterP' 4 pos('./cp/Search.oz' 280 18) nil 4) <P: 485> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50270)
lbl(50265)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50270)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50245)
lbl(50285)	unify(x(0) x(15))
lbl(50288)	definition(x(0) 50323 pid('OneModule.iterS' 4 pos('./cp/Search.oz' 286 18) nil 4) <P: 486> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50313)
lbl(50308)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50313)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50288)
lbl(50323)	unify(x(0) x(16))
lbl(50326)	definition(x(0) 50391 pid('OneModule.lds' 4 pos('./cp/Search.oz' 293 18) nil 4) <P: 487> [y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50372)
		match(x(0) ht(50369 [onScalar(killed 50348) onRecord(succeeded 1 50353)]))
lbl(50348)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50353)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.merge' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL4
		return
lbl(50369)	callBI('Exception.raise' [x(0)]#nil)
lbl(50372)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50326)
lbl(50391)	unify(x(0) x(17))
lbl(50394)	definition(x(0) 50455 pid('OneModule.ldsP' 4 pos('./cp/Search.oz' 299 18) nil 4) <P: 488> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50436)
		match(x(0) ht(50433 [onScalar(killed 50416) onRecord(succeeded 1 50421)]))
lbl(50416)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50421)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL4
		genFastCall(<P: 460> 5)
lbl(50433)	callBI('Exception.raise' [x(0)]#nil)
lbl(50436)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50394)
lbl(50455)	unify(x(0) x(18))
lbl(50458)	definition(x(0) 50517 pid('OneModule.ldsS' 4 pos('./cp/Search.oz' 305 18) nil 4) <P: 489> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50498)
		match(x(0) ht(50495 [onScalar(killed 50480) onRecord(succeeded 1 50485)]))
lbl(50480)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50485)	getVariable(x(0))
		getList(y(3))
		unifyValue(x(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(50495)	callBI('Exception.raise' [x(0)]#nil)
lbl(50498)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50458)
lbl(50517)	unify(x(0) x(19))
lbl(50520)	definition(x(9) 50630 pid('AllNR' 5 pos('./cp/Search.oz' 320 6) nil 8) <P: 490> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 50624)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(50611 [onScalar(failed 50536) onScalar(succeeded 50540) onRecord(alternatives 1 50555)]))
lbl(50536)	unify(x(4) x(3))
		return
lbl(50540)	getList(x(4))
		unifyVariable(x(4))
		unifyValue(x(3))
		move(x(1) x(0))
		move(x(4) x(1))
		tailCall(x(2) 2)
lbl(50555)	allocateL5
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 490> 10)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 490> 11)
lbl(50611)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(329)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(50624)	unify(x(4) x(3))
		return
		endDefinition(50520)
lbl(50630)	definition(x(9) 50754 pid('AltCopy' 8 pos('./cp/Search.oz' 335 2) nil 10) <P: 491> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 50667)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 492> 19)
lbl(50667)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(x(7) x(8))
		putConstant(1 x(4))
		createVariableMove(y(7) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		move(y(7) x(7))
		deAllocateL8
		genFastCall(<P: 491> 17)
		endDefinition(50630)
lbl(50754)	definition(x(9) 50908 pid('Alt' 11 pos('./cp/Search.oz' 346 2) nil 12) <P: 493> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 50800)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 492> 19)
lbl(50800)	allocateL(13)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		moveMoveXYXY(x(8) y(8) x(9) y(9))
		moveMoveXYYX(x(10) y(10) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(11) x(2))
		genFastCall(<P: 462> 6)
		putList(x(3))
		setValue(y(1))
		setValue(y(5))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(6) x(4))
		moveMoveYXYX(y(7) x(5) y(8) x(6))
		move(y(10) x(8))
		createVariableMove(y(12) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(11) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		moveMoveYXYX(y(7) x(7) y(8) x(8))
		moveMoveYXYX(y(9) x(9) y(12) x(10))
		deAllocateL
		genFastCall(<P: 493> 23)
		endDefinition(50754)
lbl(50908)	definition(x(9) 51028 pid('AllR' 9 pos('./cp/Search.oz' 356 2) nil 12) <P: 492> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 51022)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51009 [onScalar(failed 50924) onScalar(succeeded 50928) onRecord(alternatives 1 50943)]))
lbl(50924)	unify(x(8) x(7))
		return
lbl(50928)	getList(x(8))
		unifyVariable(x(2))
		unifyValue(x(7))
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(6) 2)
lbl(50943)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 50973)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 491> 17)
lbl(50973)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 493> 23)
lbl(51009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(365)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51022)	unify(x(8) x(7))
		return
		endDefinition(50908)
lbl(51028)	definition(x(0) 51107 pid('All' 4 pos('./cp/Search.oz' 371 6) nil 9) <P: 494> [y(183) y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51078)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51078)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51028)
lbl(51107)	definition(x(1) 51186 pid('AllS' 4 pos('./cp/Search.oz' 379 6) nil 9) <P: 495> [y(183) x(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51157)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51157)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51107)
lbl(51186)	definition(x(2) 51265 pid('AllP' 4 pos('./cp/Search.oz' 387 6) nil 9) <P: 496> [y(183) x(8)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51236)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51236)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51186)
lbl(51265)	definition(x(7) 51413 pid('BABNR' 5 pos('./cp/Search.oz' 404 2) nil 8) <P: 497> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 51407)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(51394 [onScalar(failed 51281) onScalar(succeeded 51285) onRecord(alternatives 1 51289)]))
lbl(51281)	unify(x(4) x(3))
		return
lbl(51285)	unify(x(4) x(1))
		return
lbl(51289)	allocateL6
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(6) y(4))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 497> 10)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51357)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51357)	testLiteral(y(5) nil 51366)
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(51366)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51394)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(416)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51407)	getLiteral(nil x(4))
		return
		endDefinition(51265)
lbl(51413)	definition(x(7) 51618 pid('AltCopy' 8 pos('./cp/Search.oz' 422 5) nil 10) <P: 498> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 51450)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 499> 19)
lbl(51450)	allocateL9
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(y(6) x(7))
		putConstant(1 x(4))
		createVariableMove(y(8) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(8) x(0) y(6) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51549)
		move(y(1) x(0))
		inlinePlus1(x(0) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(6) x(6) y(7) x(7))
		deAllocateL9
		genFastCall(<P: 498> 17)
lbl(51549)	testLiteral(y(8) nil 51558)
		getLiteral(nil y(7))
		deAllocateL9
		return
lbl(51558)	move(y(1) x(1))
		inlinePlus1(x(1) x(3))
		putRecord('#' 2 x(1))
		setValue(x(3))
		setValue(y(2))
		move(y(3) x(2))
		callBI('Space.commit' [x(2) x(1)]#nil)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(8) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(8) x(7) y(7) x(8))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<P: 499> 19)
		endDefinition(51413)
lbl(51618)	definition(x(7) 51863 pid('Alt' 11 pos('./cp/Search.oz' 440 5) nil 12) <P: 500> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 51664)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 499> 19)
lbl(51664)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		moveMoveYXYX(y(7) x(6) y(8) x(7))
		createVariableMove(y(10) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(10) x(0) y(8) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51783)
		move(y(1) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		moveMoveYXYX(y(7) x(8) y(8) x(9))
		move(y(9) x(10))
		deAllocateL
		genFastCall(<P: 500> 23)
lbl(51783)	testLiteral(y(10) nil 51792)
		getLiteral(nil y(9))
		deAllocateL
		return
lbl(51792)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(3))
		putRecord('#' 2 x(0))
		setValue(x(3))
		setValue(y(2))
		move(y(5) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(10) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(4))
		moveMoveYXYX(y(6) x(5) y(7) x(6))
		moveMoveYXYX(y(10) x(7) y(9) x(8))
		putConstant(nil x(3))
		deAllocateL
		genFastCall(<P: 499> 19)
		endDefinition(51618)
lbl(51863)	definition(x(7) 51972 pid('BABR' 9 pos('./cp/Search.oz' 458 5) nil 12) <P: 499> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 51966)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51953 [onScalar(failed 51879) onScalar(succeeded 51883) onRecord(alternatives 1 51887)]))
lbl(51879)	unify(x(8) x(7))
		return
lbl(51883)	unify(x(8) x(1))
		return
lbl(51887)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 51917)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 498> 17)
lbl(51917)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 500> 23)
lbl(51953)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(467)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51966)	getLiteral(nil x(8))
		return
		endDefinition(51863)
lbl(51972)	definition(x(7) 52051 pid('BestBAB' 5 pos('./cp/Search.oz' 474 2) nil 9) <P: 501> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52023)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 497> 11)
lbl(52023)	move(y(4) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(2) x(4) y(2) x(5))
		moveMoveYXYX(y(1) x(6) y(3) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 499> 19)
		endDefinition(51972)
lbl(52051)	definition(x(7) 52127 pid('RestartNR' 5 pos('./cp/Search.oz' 484 2) nil 6) <P: 502> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 52121)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(5) nil 52093)
lbl(52088)	unify(y(3) y(2))
		deAllocateL6
		return
lbl(52093)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 502> 11)
lbl(52121)	getLiteral(nil x(4))
		return
		endDefinition(52051)
lbl(52127)	definition(x(7) 52216 pid('RestartR' 6 pos('./cp/Search.oz' 494 2) nil 7) <P: 503> [y(185)])
		testBI('IsFree' [x(0)]#[x(6)] 52210)
		allocateL7
		callBI('Space.clone' [x(1)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(1) x(2))
		move(y(3) x(5))
		putConstant(nil x(3))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 52180)
lbl(52175)	unify(y(4) y(2))
		deAllocateL7
		return
lbl(52180)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL7
		genFastCall(<P: 503> 13)
lbl(52210)	getLiteral(nil x(5))
		return
		endDefinition(52127)
lbl(52216)	definition(x(7) 52286 pid('BestRestart' 5 pos('./cp/Search.oz' 504 2) nil 6) <P: 504> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52267)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 502> 11)
lbl(52267)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 503> 13)
		endDefinition(52216)
lbl(52286)	putRecord(best [bab babP babS restart restartP restartS] y(192))
		setVariable(y(208))
		setVariable(x(7))
		setVariable(x(8))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
lbl(52302)	definition(x(3) 52346 pid('BestModule.bab' 5 pos('./cp/Search.oz' 516 34) nil 5) <P: 505> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52327)
lbl(52322)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52327)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52302)
lbl(52346)	unify(x(3) y(208))
lbl(52349)	definition(x(3) 52389 pid('BestModule.babP' 5 pos('./cp/Search.oz' 522 13) nil 5) <P: 506> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52374)
lbl(52369)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52374)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52349)
lbl(52389)	unify(x(3) x(7))
lbl(52392)	definition(x(3) 52427 pid('BestModule.babS' 5 pos('./cp/Search.oz' 528 13) nil 5) <P: 507> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52417)
lbl(52412)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52417)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52392)
lbl(52427)	unify(x(3) x(8))
lbl(52430)	definition(x(3) 52474 pid('BestModule.restart' 5 pos('./cp/Search.oz' 535 13) nil 5) <P: 508> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52455)
lbl(52450)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52455)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52430)
lbl(52474)	unify(x(3) x(9))
lbl(52477)	definition(x(3) 52517 pid('BestModule.restartP' 5 pos('./cp/Search.oz' 541 13) nil 5) <P: 509> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52502)
lbl(52497)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52502)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52477)
lbl(52517)	unify(x(3) x(10))
lbl(52520)	definition(x(3) 52555 pid('BestModule.restartS' 5 pos('./cp/Search.oz' 547 13) nil 5) <P: 510> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52545)
lbl(52540)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52545)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52520)
lbl(52555)	unify(x(3) x(11))
lbl(52558)	definition(x(7) 52626 pid('Recompute' 2 pos('./cp/Search.oz' 559 2) nil 4) <P: 511> [y(179) y(185) y(188)])
		shallowGuard(52613)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(52572)	shallowThen
		testBI('IsSpace' [x(2)]#[x(0)] 52584)
		callBI('Space.clone' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(52584)	allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genFastCall(<P: 511> 4)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(0) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		deAllocateL2
		return
lbl(52613)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(52558)
lbl(52626)	putRecord('attr' [backtrack cur isStopped prev rd sol stack] x(7))
		setConstant(false)
		setConstant(<U: ooFreeFlag>)
		setConstant(false)
		setConstant(nil)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		setConstant(nil)
		putRecord('feat' [manager mrd order] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(52654)	definition(x(8) 52714 pid('ReClass,init/fast' 3 pos('./cp/Search.oz' 572 5) nil 4) <P: 512> [y(183)])
		callBI('Space.new' [x(0)]#[x(3)])
		inlineAssign(cur x(3) cache)
		inlineAssign(rd x(2) cache)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		putConstant(false x(0))
		inlineAssign(backtrack x(0) cache)
		getSelf(x(0))
		inlineDot(x(0) mrd x(3) cache)
		unify(x(3) x(2))
		getSelf(x(0))
		inlineDot(x(0) order x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(52654)
lbl(52714)	definition(x(9) 52755 pid('ReClass,init/slow' 1 pos('./cp/Search.oz' 572 5) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 512> 7)
		endDefinition(52714)
lbl(52755)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(52765)	definition(x(8) 52782 pid('ReClass,stop/fast' 0 pos('./cp/Search.oz' 581 5) nil 1) <P: 513> nil)
		putConstant(true x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52765)
lbl(52782)	definition(x(9) 52796 pid('ReClass,stop/slow' 1 pos('./cp/Search.oz' 581 5) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 513> 1)
		endDefinition(52782)
lbl(52796)	putRecord('#' [1 2 fast] x(11))
		setConstant(stop)
		setValue(x(9))
		setValue(x(8))
lbl(52806)	definition(x(8) 52823 pid('ReClass,resume/fast' 0 pos('./cp/Search.oz' 585 5) nil 1) <P: 514> nil)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52806)
lbl(52823)	definition(x(9) 52837 pid('ReClass,resume/slow' 1 pos('./cp/Search.oz' 585 5) nil 1) unit nil)
		getLiteral(resume x(0))
		genFastCall(<P: 514> 1)
		endDefinition(52823)
lbl(52837)	putRecord('#' [1 2 fast] x(12))
		setConstant(resume)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(209))
lbl(52849)	definition(x(8) 52905 pid('ReClass,last/fast' 1 pos('./cp/Search.oz' 589 5) nil 3) <P: 515> [y(209)])
		allocateL2
		move(x(0) y(0))
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(next x(2) 1 cache)
		match(y(1) ht(52888 [onScalar(stopped 52873) onScalar(nil 52878)]))
lbl(52873)	getLiteral(stopped y(0))
		deAllocateL2
		return
lbl(52878)	inlineAt(prev x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(52888)	move(y(1) x(0))
		inlineAssign(prev x(0) cache)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true last true 1) 0)
		endDefinition(52849)
lbl(52905)	definition(x(9) 52931 pid('ReClass,last/slow' 1 pos('./cp/Search.oz' 589 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 515> 3)
		endDefinition(52905)
lbl(52931)	putRecord('#' [1 2 fast] x(13))
		setConstant(last)
		setValue(x(9))
		setValue(x(8))
lbl(52941)	definition(x(8) 52998 pid('ReClass,next/fast' 1 pos('./cp/Search.oz' 597 5) nil 3) <P: 516> [y(209)])
		allocateL1
		inlineAt(backtrack x(1) cache)
		move(x(0) y(0))
		testBool(x(1) 52984 52973)
		genCall(gci(g(0) true backtrack false 0) 0)
		putConstant(false x(1))
		inlineAssign(backtrack x(1) cache)
		branch(52984)
lbl(52973)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(598)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(52984)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(explore x(2) 1 cache)
		endDefinition(52941)
lbl(52998)	definition(x(9) 53024 pid('ReClass,next/slow' 1 pos('./cp/Search.oz' 597 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 516> 3)
		endDefinition(52998)
lbl(53024)	putRecord('#' [1 2 fast] x(14))
		setConstant(next)
		setValue(x(9))
		setValue(x(8))
lbl(53034)	definition(x(8) 53158 pid('ReClass,push/fast' 1 pos('./cp/Search.oz' 606 5) nil 7) <P: 517> [y(185)])
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAt(rd x(2) cache)
		testBI('==' [x(1) x(2)]#[x(3)] 53111)
		putConstant(1 x(1))
		inlineAssign(rd x(1) cache)
		inlineAt(sol x(1) cache)
		inlineAt(cur x(2) cache)
		callBI('Space.clone' [x(2)]#[x(3)])
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(5))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(6))
		setValue(x(3))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		inlineAssign(stack x(4) cache)
		return
lbl(53111)	inlineAt(rd x(1) cache)
		inlinePlus1(x(1) x(2))
		inlineAssign(rd x(2) cache)
		inlineAt(sol x(1) cache)
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(4))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(x(2))
		inlineAssign(stack x(3) cache)
		return
		endDefinition(53034)
lbl(53158)	definition(x(9) 53184 pid('ReClass,push/slow' 1 pos('./cp/Search.oz' 606 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 517> 3)
		endDefinition(53158)
lbl(53184)	putRecord('#' [1 2 fast] x(15))
		setConstant(push)
		setValue(x(9))
		setValue(x(8))
lbl(53194)	definition(x(8) 53491 pid('ReClass,backtrack/fast' 0 pos('./cp/Search.oz' 616 5) nil 7) <P: 518> [y(209) y(179) y(188)])
		inlineAt(stack x(0) cache)
		match(x(0) ht(53476 [onScalar(nil 53208) onRecord('|' 2 53217)]))
lbl(53208)	putConstant(false x(0))
		inlineAssign(cur x(0) cache)
		return
lbl(53217)	getVarVar(x(0) x(1))
		testRecord(x(0) '#' 3 53468)
lbl(53225)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testBI('==' [x(0) x(2)]#[x(4)] 53255)
		inlineAssign(stack x(1) cache)
		inlineAt(rd x(0) cache)
		inlineMinus1(x(0) x(1))
		inlineAssign(rd x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53255)	allocateL4
		inlinePlus1(x(0) x(4))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		testBI('==' [x(2) x(4)]#[x(6)] 53337)
lbl(53279)	testBI('IsSpace' [x(0)]#[x(6)] 53337)
lbl(53283)	callBI('Space.commit' [x(0) x(2)]#nil)
		inlineAssign(stack x(5) cache)
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAssign(rd x(1) cache)
		inlineAssign(cur x(0) cache)
		inlineAt(sol x(1) cache)
		testBI('==' [x(1) x(3)]#[x(2)] 53320)
		deAllocateL4
		return
lbl(53320)	getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		deAllocateL4
		genFastCall(<P: 463> 7)
lbl(53337)	inlineAt(sol x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 53391)
		putRecord('#' 3 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(2))
		putList(x(2))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(stack x(2) cache)
		inlineAt(stack x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 511> 4)
		move(y(0) x(0))
		inlineAssign(cur x(0) cache)
		deAllocateL4
		return
lbl(53391)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 511> 4)
		move(y(2) x(0))
		inlineAssign(cur x(0) cache)
		inlineAt(cur x(0) cache)
		putRecord('#' 2 x(1))
		setValue(y(3))
		setValue(y(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		inlineAt(cur x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		genFastCall(<P: 463> 6)
		getSelf(x(0))
		inlineDot(x(0) mrd x(0) cache)
		inlineAssign(rd x(0) cache)
		move(y(0) x(0))
		inlineAssign(stack x(0) cache)
		deAllocateL4
		return
lbl(53468)	inlineAssign(stack x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53476)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(646)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(53194)
lbl(53491)	definition(x(9) 53505 pid('ReClass,backtrack/slow' 1 pos('./cp/Search.oz' 616 5) nil 1) unit nil)
		getLiteral(backtrack x(0))
		genFastCall(<P: 518> 1)
		endDefinition(53491)
lbl(53505)	putRecord('#' [1 2 fast] x(16))
		setConstant(backtrack)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 7 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		moveMoveXYXY(x(0) y(232) x(1) y(233))
		move(x(2) y(234))
		move(x(8) x(1))
		move(x(7) x(2))
		move(y(209) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('ReClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(235))
lbl(53576)	definition(x(7) 53696 pid('All,explore/fast' 1 pos('./cp/Search.oz' 653 5) nil 3) <P: 519> [y(184) y(235) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53600 53683)
		getLiteral(stopped x(0))
		return
lbl(53600)	testLiteral(x(1) false 53608)
		getLiteral(nil x(0))
		return
lbl(53608)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53670 [onScalar(failed 53614) onScalar(succeeded 53628) onRecord(alternatives 1 53640)]))
lbl(53614)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53628)	unify(x(0) x(1))
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53640)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(1) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53670)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(665)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53683)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(656)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53576)
lbl(53696)	definition(x(8) 53722 pid('All,explore/slow' 1 pos('./cp/Search.oz' 653 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 519> 3)
		endDefinition(53696)
lbl(53722)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(235) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('All' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(236))
lbl(53767)	definition(x(7) 53892 pid('Best,explore/fast' 1 pos('./cp/Search.oz' 670 5) nil 3) <P: 520> [y(184) y(236) y(209) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53791 53879)
		getLiteral(stopped x(0))
		return
lbl(53791)	testLiteral(x(1) false 53799)
		getLiteral(nil x(0))
		return
lbl(53799)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53866 [onScalar(failed 53805) onScalar(succeeded 53819) onRecord(alternatives 1 53836)]))
lbl(53805)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53819)	unify(x(0) x(1))
		inlineAssign(sol x(0) cache)
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53836)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(2) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53866)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(682)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53879)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(673)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53767)
lbl(53892)	definition(x(8) 53918 pid('Best,explore/slow' 1 pos('./cp/Search.oz' 670 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 520> 3)
		endDefinition(53892)
lbl(53918)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(236) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('Best' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(53949)	definition(x(7) 53958 pid('Dummy' 1 pos('./cp/Search.oz' 687 6) nil 1) <P: 521> nil)
		return
		endDefinition(53949)
lbl(53958)	putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: MyAgent> <N: RCD>] x(2))
		setValue(x(7))
		setConstant(1)
lbl(53978)	definition(x(8) 54102 pid('SearchObject,script' 1 pos('./cp/Search.oz' 700 2) nil 5) unit [y(236) y(235)])
		allocateL3
		inlineDot(x(0) 1 x(3) cache)
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54098 x(1))
		inlineAt(<N: RCD> x(1) cache)
		putConstant(rcd x(2))
		callBI('CondSelect' [x(0) x(2) x(1)]#[x(4)])
		move(x(4) y(0))
		createVariable(y(1))
		putConstant(2 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 54054)
		inlineDot(x(0) 2 x(1) cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(2)])
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
		branch(54081)
lbl(54054)	move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		putConstant(false x(1))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
lbl(54081)	move(y(1) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<N: RCD> x(0) cache)
		return
lbl(54098)	deAllocateL3
		return
		endDefinition(53978)
lbl(54102)	putList(x(9))
		setConstant(script)
		setValue(x(8))
lbl(54108)	definition(x(8) 54153 pid('SearchObject,Next/fast' 1 pos('./cp/Search.oz' 711 2) nil 2) <P: 522> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54149 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(next y(1) 1 cache)
		return
lbl(54149)	deAllocateL2
		return
		endDefinition(54108)
lbl(54153)	definition(x(10) 54179 pid('SearchObject,Next/slow' 1 pos('./cp/Search.oz' 711 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 522> 3)
		endDefinition(54153)
lbl(54179)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Next>)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(184))
lbl(54191)	definition(x(8) 54238 pid('SearchObject,next/fast' 1 pos('./cp/Search.oz' 715 2) nil 3) <P: 523> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54231)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54231)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54191)
lbl(54238)	definition(x(10) 54264 pid('SearchObject,next/slow' 1 pos('./cp/Search.oz' 715 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 523> 3)
		endDefinition(54238)
lbl(54264)	putRecord('#' [1 2 fast] x(12))
		setConstant(next)
		setValue(x(10))
		setValue(x(8))
lbl(54274)	definition(x(8) 54318 pid('SearchObject,nextS/fast' 1 pos('./cp/Search.oz' 723 2) nil 3) <P: 524> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54311)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54311)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54274)
lbl(54318)	definition(x(10) 54344 pid('SearchObject,nextS/slow' 1 pos('./cp/Search.oz' 723 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 524> 3)
		endDefinition(54318)
lbl(54344)	putRecord('#' [1 2 fast] x(13))
		setConstant(nextS)
		setValue(x(10))
		setValue(x(8))
lbl(54354)	definition(x(8) 54394 pid('SearchObject,nextP/fast' 1 pos('./cp/Search.oz' 731 2) nil 2) <P: 525> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54387)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54387)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54354)
lbl(54394)	definition(x(10) 54420 pid('SearchObject,nextP/slow' 1 pos('./cp/Search.oz' 731 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 525> 3)
		endDefinition(54394)
lbl(54420)	putRecord('#' [1 2 fast] x(14))
		setConstant(nextP)
		setValue(x(10))
		setValue(x(8))
lbl(54430)	definition(x(8) 54475 pid('SearchObject,Last/fast' 1 pos('./cp/Search.oz' 739 2) nil 2) <P: 526> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54471 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(last y(1) 1 cache)
		return
lbl(54471)	deAllocateL2
		return
		endDefinition(54430)
lbl(54475)	definition(x(10) 54501 pid('SearchObject,Last/slow' 1 pos('./cp/Search.oz' 739 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 526> 3)
		endDefinition(54475)
lbl(54501)	putRecord('#' [1 2 fast] x(15))
		setConstant(<N: Last>)
		setValue(x(10))
		setValue(x(8))
lbl(54511)	definition(x(8) 54558 pid('SearchObject,last/fast' 1 pos('./cp/Search.oz' 743 2) nil 3) <P: 527> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54551)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54551)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54511)
lbl(54558)	definition(x(10) 54584 pid('SearchObject,last/slow' 1 pos('./cp/Search.oz' 743 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 527> 3)
		endDefinition(54558)
lbl(54584)	putRecord('#' [1 2 fast] x(16))
		setConstant(last)
		setValue(x(10))
		setValue(x(8))
lbl(54594)	definition(x(8) 54638 pid('SearchObject,lastS/fast' 1 pos('./cp/Search.oz' 751 2) nil 3) <P: 528> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54631)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54631)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54594)
lbl(54638)	definition(x(10) 54664 pid('SearchObject,lastS/slow' 1 pos('./cp/Search.oz' 751 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 528> 3)
		endDefinition(54638)
lbl(54664)	putRecord('#' [1 2 fast] x(17))
		setConstant(lastS)
		setValue(x(10))
		setValue(x(8))
lbl(54674)	definition(x(8) 54714 pid('SearchObject,lastP/fast' 1 pos('./cp/Search.oz' 759 2) nil 2) <P: 529> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54707)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54707)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54674)
lbl(54714)	definition(x(10) 54740 pid('SearchObject,lastP/slow' 1 pos('./cp/Search.oz' 759 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 529> 3)
		endDefinition(54714)
lbl(54740)	putRecord('#' [1 2 fast] x(18))
		setConstant(lastP)
		setValue(x(10))
		setValue(x(8))
lbl(54750)	definition(x(8) 54769 pid('SearchObject,stop/fast' 0 pos('./cp/Search.oz' 767 2) nil 1) <P: 530> nil)
		inlineAt(<N: MyAgent> x(0) cache)
		tailSendMsg(stop x(0) 0 cache)
		endDefinition(54750)
lbl(54769)	definition(x(10) 54783 pid('SearchObject,stop/slow' 1 pos('./cp/Search.oz' 767 2) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 530> 1)
		endDefinition(54769)
lbl(54783)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(10))
		setValue(x(8))
lbl(54793)	definition(x(8) 54830 pid('SearchObject,clear/fast' 0 pos('./cp/Search.oz' 771 2) nil 1) <P: 531> [x(7)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(54827 x(0))
		inlineAt(<N: MyAgent> x(0) cache)
		sendMsg(stop x(0) 0 cache)
		move(g(0) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		return
lbl(54827)	return
		endDefinition(54793)
lbl(54830)	definition(x(7) 54844 pid('SearchObject,clear/slow' 1 pos('./cp/Search.oz' 771 2) nil 1) unit nil)
		getLiteral(clear x(0))
		genFastCall(<P: 531> 1)
		endDefinition(54830)
lbl(54844)	putRecord('#' [1 2 fast] x(10))
		setConstant(clear)
		setValue(x(7))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(10))
		move(y(184) x(6))
		putConstant('feat' x(3))
		putConstant('SearchObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(54892)	definition(x(4) 54911 pid('SearchOne' 2 pos('./cp/Search.oz' 784 3) nil 4) <P: 532> [y(187)])
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 478> 9)
		endDefinition(54892)
lbl(54911)	definition(x(5) 54930 pid('SearchAll' 2 pos('./cp/Search.oz' 788 3) nil 4) <P: 533> nil)
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 494> 9)
		endDefinition(54911)
lbl(54930)	definition(x(6) 54949 pid('SearchBest' 3 pos('./cp/Search.oz' 792 3) nil 5) <P: 534> [y(208)])
		move(x(2) x(4))
		putConstant(1 x(2))
		createVariable(x(3))
		genFastCall(<P: 505> 11)
		endDefinition(54930)
lbl(54949)	putRecord(base [all best one] x(7))
		setValue(x(5))
		setValue(x(6))
		setValue(x(4))
lbl(54959)	definition(x(2) 55000 pid('' 2 pos('./cp/Search.oz' 802 3) nil 2) <P: 535> [y(232) y(234) y(233) x(7) y(192) y(184) y(100)])
		putConstant(nil x(0))
lbl(54968)	definitionCopy(x(0) 54995 pid('/body' 0 pos('./cp/Search.oz' 802 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4) g(5) g(6)])
		getRecord('export' [all allP allS base best object one] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		unifyValue(g(6))
		unifyValue(g(7))
		return
		endDefinition(54968)
lbl(54995)	tailCall(x(0) 0)
		endDefinition(54959)
lbl(55000)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(best [bab babP babS restart restartP restartS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(base [all best one] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/2')
		putRecord(record 1 x(7))
		setValue(x(4))
		putConstant('procedure/4' x(4))
		putConstant('procedure/4' x(8))
		putConstant('procedure/4' x(9))
		putConstant('class' x(10))
		putRecord('export' [all allP allS base best object one] x(1))
		setValue(x(4))
		setValue(x(8))
		setValue(x(9))
		setValue(x(7))
		setValue(x(6))
		setValue(x(10))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(100) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(100) x(1))
		call(x(2) 2)
lbl(55129)	definition(x(2) 55205 pid('NewTagTest' 2 pos('./op/HtmlTable.oz' 25 3) nil 3) <P: 536> [y(2) y(165)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 159> 4)
lbl(55145)	definition(x(1) 55162 pid('' 2 pos('./op/HtmlTable.oz' 27 28) nil 2) unit nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(unit)
		return
		endDefinition(55145)
lbl(55162)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		putConstant(tags x(0))
		move(y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
lbl(55180)	definition(x(0) 55198 pid('' 2 pos('./op/HtmlTable.oz' 29 6) nil 4) unit [x(2)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(55180)
lbl(55198)	unify(x(0) y(0))
		deAllocateL3
		return
		endDefinition(55129)
lbl(55205)	putRecord(tags 91 x(0))
		setConstant(a)
		setConstant(abbr)
		setConstant(acronym)
		setConstant(address)
		setConstant(applet)
		setConstant(area)
		setConstant(b)
		setConstant(base)
		setConstant(basefont)
		setConstant(bdo)
		setConstant(big)
		setConstant(blockquote)
		setConstant('body')
		setConstant(br)
		setConstant(button)
		setConstant(caption)
		setConstant(center)
		setConstant(cite)
		setConstant(code)
		setConstant(col)
		setConstant(colgroup)
		setConstant(dd)
		setConstant(del)
		setConstant(dfn)
		setConstant(dir)
		setConstant('div')
		setConstant(dl)
		setConstant(dt)
		setConstant(em)
		setConstant(fieldset)
		setConstant(font)
		setConstant(form)
		setConstant(frame)
		setConstant(frameset)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(hr)
		setConstant(html)
		setConstant(i)
		setConstant(iframe)
		setConstant(img)
		setConstant(input)
		setConstant(ins)
		setConstant(isindex)
		setConstant(kbd)
		setConstant(label)
		setConstant(legend)
		setConstant(li)
		setConstant(link)
		setConstant(map)
		setConstant(menu)
		setConstant(meta)
		setConstant(noframes)
		setConstant(noscript)
		setConstant(object)
		setConstant(ol)
		setConstant(optgroup)
		setConstant(option)
		setConstant(p)
		setConstant(param)
		setConstant(pre)
		setConstant(q)
		setConstant(s)
		setConstant(samp)
		setConstant(script)
		setConstant(select)
		setConstant(small)
		setConstant(span)
		setConstant(strike)
		setConstant(strong)
		setConstant(style)
		setConstant(sub)
		setConstant(sup)
		setConstant(table)
		setConstant(tbody)
		setConstant(td)
		setConstant(textarea)
		setConstant(tfoot)
		setConstant(th)
		setConstant(thead)
		setConstant(title)
		setConstant(tr)
		setConstant(tt)
		setConstant(u)
		setConstant(ul)
		setConstant(var)
		createVariableMove(y(184) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 13 x(0))
		setConstant(area)
		setConstant(base)
		setConstant(basefont)
		setConstant(br)
		setConstant(col)
		setConstant(frame)
		setConstant(hr)
		setConstant(img)
		setConstant(input)
		setConstant(isindex)
		setConstant(link)
		setConstant(meta)
		setConstant(param)
		createVariableMove(y(185) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 19 x(0))
		setConstant(blockquote)
		setConstant('body')
		setConstant(center)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(html)
		setConstant(map)
		setConstant(menu)
		setConstant(p)
		setConstant(pre)
		setConstant(table)
		setConstant(td)
		setConstant(th)
		setConstant(title)
		createVariableMove(y(186) x(1))
		genFastCall(<P: 536> 4)
lbl(55481)	definition(x(4) 55538 pid('GetOptions' 4 pos('./op/Open.oz' 27 3) nil 7) <P: 537> nil)
		match(x(0) ht(55523 [onScalar(nil 55490) onRecord('|' 2 55497)]))
lbl(55490)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(55497)	getVarVar(x(4) x(5))
		testBI('IsInt' [x(4)]#[x(6)] 55516)
		inlinePlus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 537> 9)
lbl(55516)	unify(x(2) x(1))
		unify(x(0) x(3))
		return
lbl(55523)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(33)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55481)
lbl(55538)	definition(x(4) 55600 pid('BuildOptions' 3 pos('./op/Open.oz' 36 3) nil 6) <P: 538> nil)
		match(x(0) ht(55585 [onScalar(nil 55547) onRecord('|' 2 55551)]))
lbl(55547)	getLiteral('' x(2))
		return
lbl(55551)	getVarVar(x(0) x(3))
		getRecord('#' 6 x(2))
		unifyLiteral(' ')
		unifyValue(x(0))
		unifyLiteral('="')
		unifyVariable(x(2))
		unifyLiteral('"')
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 538> 7)
lbl(55585)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55538)
lbl(55600)	putList(x(3))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(2))
		setConstant('S_IXGRP')
		setValue(x(3))
		putList(x(1))
		setConstant('S_IXUSR')
		setValue(x(2))
		putList(x(7))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(6))
		setConstant('S_IRGRP')
		setValue(x(7))
		putList(x(5))
		setConstant('S_IRUSR')
		setValue(x(6))
		putList(x(10))
		setConstant('S_IWOTH')
		setConstant(nil)
		putList(x(9))
		setConstant('S_IWGRP')
		setValue(x(10))
		putList(x(8))
		setConstant('S_IWUSR')
		setValue(x(9))
		putRecord(access [execute read write] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putList(x(12))
		setConstant('S_IXGRP')
		setConstant(nil)
		putList(x(13))
		setConstant('S_IRGRP')
		setConstant(nil)
		putList(x(14))
		setConstant('S_IWGRP')
		setConstant(nil)
		putRecord(access [execute read write] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(16))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(17))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(18))
		setConstant('S_IWOTH')
		setConstant(nil)
		putRecord(access [execute read write] x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(20))
		setConstant('S_IXUSR')
		setConstant(nil)
		putList(x(21))
		setConstant('S_IRUSR')
		setConstant(nil)
		putList(x(22))
		setConstant('S_IWUSR')
		setConstant(nil)
		putRecord(access [execute read write] x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		putRecord(map [all group others owner] x(4))
		setValue(x(0))
		setValue(x(11))
		setValue(x(15))
		setValue(x(19))
lbl(55760)	definition(x(5) 55858 pid('ModeToOS' 2 pos('./op/Open.oz' 77 6) nil 5) <P: 539> [y(159) x(4)])
lbl(55766)	definition(x(4) 55844 pid('' 4 pos('./op/Open.oz' 79 3) nil 5) unit [g(1)])
lbl(55772)	definition(x(4) 55830 pid('' 3 pos('./op/Open.oz' 81 7) nil 7) unit [g(0) x(0)])
		testLiteral(x(0) false 55786)
		getLiteral(false x(2))
		return
lbl(55786)	allocateL1
		move(x(2) y(0))
		move(g(0) x(3))
		move(g(1) x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 55823)
lbl(55800)	callBI('.' [x(3) x(4)]#[x(5)])
		testBI('HasFeature' [x(5) x(1)]#[x(6)] 55823)
lbl(55807)	callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(5) x(1)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		deAllocateL1
		genFastCall(<P: 21> 7)
lbl(55823)	getLiteral(false y(0))
		deAllocateL1
		return
		endDefinition(55772)
lbl(55830)	move(x(2) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(55766)
lbl(55844)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 173> 9)
		endDefinition(55760)
lbl(55858)	putRecord(map [append create exclude truncate] x(4))
		setConstant('O_APPEND')
		setConstant('O_CREAT')
		setConstant('O_EXCL')
		setConstant('O_TRUNC')
lbl(55870)	definition(x(5) 56054 pid('FlagsToOS' 2 pos('./op/Open.oz' 100 6) nil 4) <P: 540> [x(4)])
		allocateL5
lbl(55877)	definition(x(2) 55940 pid('' 3 pos('./op/Open.oz' 102 3) nil 5) unit [g(0)])
		testLiteral(x(0) false 55891)
		getLiteral(false x(2))
		return
lbl(55891)	allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) read 55906)
lbl(55901)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(55906)	testLiteral(x(1) write 55912)
		branch(55901)
lbl(55912)	move(g(0) x(3))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 55933)
		getList(y(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		deAllocateL2
		return
lbl(55933)	getLiteral(false y(1))
		deAllocateL2
		return
		endDefinition(55877)
lbl(55940)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(1))
		putConstant(read x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		testBool(y(3) 55986 56023)
lbl(55965)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 55986 56023)
lbl(55981)	getLiteral('O_RDWR' y(4))
		branch(56034)
lbl(55986)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 56007 56012)
		getLiteral('O_WRONLY' y(4))
		branch(56034)
lbl(56007)	getLiteral('O_RDONLY' y(4))
		branch(56034)
lbl(56012)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(111)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56023)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56034)	putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(55870)
lbl(56054)	putConstant(4096 x(4))
		putConstant(1024 x(5))
		putConstant(500 x(6))
lbl(56063)	definition(x(2) 63109 pid('' 2 pos('./op/Open.oz' 120 3) nil 4) <P: 541> [y(228) y(194) x(4) x(5) x(6) y(184) y(185) y(186)])
		putList(x(2))
		setPredicateRef(<Q: 542>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 543>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 544>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 545>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 546>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 547>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 548>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 549>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 550>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 551>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 552>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 553>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 554>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 555>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 556>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 557>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 558>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 559>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 560>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 561>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 562>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 563>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 564>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 565>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 566>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 567>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 568>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 569>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PID>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 570>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: WriteTagBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 571>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 572>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 573>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 574>)
		setValue(x(3))
lbl(56279)	definitionCopy(x(2) 63104 pid('/body' 0 pos('./op/Open.oz' 120 3) [once] 21) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL8
		move(g(0) x(0))
		inlineDot(x(0) 'OS' x(1) cache)
		inlineDot(x(0) 'Error' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Resolve' x(4) cache)
lbl(56313)	definition(x(7) 56347 pid('RaiseClosed' 2 pos('./op/Open.oz' 166 6) nil 3) <Q: 542> [g(1)])
		allocateL1
		putRecord(open 3 x(2))
		setConstant(alreadyClosed)
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(56313)
lbl(56347)	definition(x(7) 56426 pid('DoWrite' 4 pos('./op/Open.oz' 173 6) nil 6) <Q: 543> [x(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 56410)
lbl(56382)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 543> 9)
lbl(56410)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(56347)
lbl(56426)	putList(x(7))
		setConstant(0)
		setConstant(nil)
		putList(x(8))
		setValue(g(2))
		setConstant(nil)
		putList(x(9))
		setConstant(native)
		setConstant(nil)
		putRecord('attr' [<N: AtEnd> <N: Buff> <N: Last> <N: ReadDesc> <N: WriteDesc>] x(10))
		setConstant(false)
		setConstant(nil)
		setValue(x(7))
		setConstant(false)
		setConstant(false)
		putRecord('feat' [<N: ReadLock> <N: WriteLock>] x(7))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(56466)	definition(x(11) 56543 pid('DescClass,InitLocks/fast' 1 pos('./op/Open.oz' 193 2) nil 3) <Q: 544> [g(1)])
		allocateL1
		move(x(0) y(0))
		exHandler(56510)
		testRecord(x(0) 'failure' [debug] 56507)
lbl(56483)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(alreadyInitialized)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(56507)	callBI('Exception.raise' [x(0)]#nil)
lbl(56510)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		popEx
		deAllocateL1
		return
		endDefinition(56466)
lbl(56543)	definition(x(12) 56569 pid('DescClass,InitLocks/slow' 1 pos('./op/Open.oz' 193 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 544> 3)
		endDefinition(56543)
lbl(56569)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: InitLocks>)
		setValue(x(12))
		setValue(x(11))
		createVariable(y(0))
lbl(56581)	definition(x(11) 56627 pid('DescClass,dOpen/fast' 2 pos('./op/Open.oz' 203 2) nil 3) <Q: 545> [y(0)])
		allocateL2
		putRecord(dOpen 2 x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <N: InitLocks> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
		endDefinition(56581)
lbl(56627)	definition(x(12) 56662 pid('DescClass,dOpen/slow' 1 pos('./op/Open.oz' 203 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 545> 5)
		endDefinition(56627)
lbl(56662)	putRecord('#' [1 2 fast] x(14))
		setConstant(dOpen)
		setValue(x(12))
		setValue(x(11))
lbl(56672)	definition(x(11) 56721 pid('DescClass,getDesc/fast' 2 pos('./op/Open.oz' 209 2) nil 3) <Q: 546> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(56718 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(56717 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		unify(x(0) x(1))
		return
lbl(56717)	return
lbl(56718)	return
		endDefinition(56672)
lbl(56721)	definition(x(12) 56756 pid('DescClass,getDesc/slow' 1 pos('./op/Open.oz' 209 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 546> 5)
		endDefinition(56721)
lbl(56756)	putRecord('#' [1 2 fast] x(15))
		setConstant(getDesc)
		setValue(x(12))
		setValue(x(11))
lbl(56766)	definition(x(11) 56879 pid('DescClass,CloseDescs/fast' 0 pos('./op/Open.oz' 218 2) nil 4) <Q: 547> [x(1)])
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 56876)
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) deSelect x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 56858)
lbl(56828)	move(g(0) x(0))
		inlineDot(x(0) deSelect x(2) cache)
		move(y(1) x(0))
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
lbl(56858)	putConstant(true x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		putConstant(true x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
lbl(56876)	return
		endDefinition(56766)
lbl(56879)	definition(x(12) 56893 pid('DescClass,CloseDescs/slow' 1 pos('./op/Open.oz' 218 2) nil 1) unit nil)
		getLiteral(<N: CloseDescs> x(0))
		genFastCall(<Q: 547> 1)
		endDefinition(56879)
lbl(56893)	putRecord('#' [1 2 fast] x(16))
		setConstant(<N: CloseDescs>)
		setValue(x(12))
		setValue(x(11))
lbl(56903)	definition(x(11) 56939 pid('DescClass,close/fast' 0 pos('./op/Open.oz' 232 2) nil 1) <Q: 548> [y(0)])
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(56936 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(56935 x(0))
		genCall(gci(g(0) true <N: CloseDescs> false 0) 0)
		return
lbl(56935)	return
lbl(56936)	return
		endDefinition(56903)
lbl(56939)	definition(x(12) 56953 pid('DescClass,close/slow' 1 pos('./op/Open.oz' 232 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 548> 1)
		endDefinition(56939)
lbl(56953)	putRecord('#' [1 2 fast] x(17))
		setConstant(close)
		setValue(x(12))
		setValue(x(11))
		putRecord('#' 5 x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(8) x(0))
		move(x(11) x(1))
		move(x(10) x(2))
		move(x(7) x(3))
		move(x(9) x(4))
		move(y(0) x(6))
		putConstant('DescClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(57011)	definition(x(7) 57089 pid('DoReadAll' 5 pos('./op/Open.oz' 247 2) nil 7) <Q: 549> [y(1) g(3)])
		allocateL6
		move(g(0) x(5))
		inlineDot(x(5) read x(6) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		call(x(6) 5)
		testNumber(y(5) 0 57064)
lbl(57056)	unify(y(4) y(1))
		unify(y(2) y(3))
		deAllocateL6
		return
lbl(57064)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 549> 11)
		endDefinition(57011)
lbl(57089)	definition(x(7) 57168 pid('DoWrite' 4 pos('./op/Open.oz' 256 2) nil 6) <Q: 550> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 57152)
lbl(57124)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 550> 9)
lbl(57152)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(57089)
lbl(57168)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [flags mode name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57186)	definition(x(8) 57640 pid('File,init' 1 pos('./op/Open.oz' 268 5) nil 5) unit [x(7) y(0) g(1) y(1) y(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(flags x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57225)
		inlineDot(x(0) flags x(1) cache)
		unify(x(1) y(1))
		branch(57231)
lbl(57225)	getList(y(1))
		unifyLiteral(read)
		unifyLiteral(nil)
lbl(57231)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(mode x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57254)
		inlineDot(x(0) mode x(1) cache)
		unify(x(1) y(2))
		branch(57274)
lbl(57254)	putList(x(1))
		setConstant(read)
		setConstant(nil)
		putList(x(2))
		setConstant(write)
		setConstant(nil)
		getRecord(mode [all owner] y(2))
		unifyValue(x(1))
		unifyValue(x(2))
lbl(57274)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57297)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(57300)
lbl(57297)	getLiteral(<N: NoArg> y(3))
lbl(57300)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57323)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(57326)
lbl(57323)	getLiteral(<N: NoArg> y(4))
lbl(57326)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 540> 4)
		testLiteral(y(5) false 57369)
lbl(57345)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalFlags)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57369)	move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 539> 4)
		testLiteral(y(1) false 57406)
lbl(57382)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalModes)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57406)	testLiteral(y(3) <N: NoArg> 57438)
lbl(57410)	testLiteral(y(4) <N: NoArg> 57438)
lbl(57414)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(nameOrUrl)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57438)	testLiteral(y(3) <N: NoArg> 57632)
lbl(57442)	createVariable(y(2))
		match(y(3) ht(57595 [onScalar(stdin 57447) onScalar(stdout 57467) onScalar(stderr 57487) onScalar(<N: NoArg> 57507)]))
lbl(57447)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDIN_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57467)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDOUT_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57487)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDERR_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57507)	move(y(5) x(1))
		putConstant('O_RDWR' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57547 57584)
lbl(57523)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(urlIsReadOnly)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57547)	move(y(5) x(1))
		putConstant('O_WRONLY' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57565 57584)
		branch(57523)
lbl(57565)	move(g(4) x(0))
		inlineDot(x(0) open x(2) cache)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(x(2) 2)
		branch(57617)
lbl(57584)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(57595)	move(g(3) x(0))
		inlineDot(x(0) open x(4) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		call(x(4) 4)
lbl(57617)	move(y(2) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
lbl(57632)	testLiteral(y(4) <N: NoArg> 57414)
lbl(57636)	branch(57442)
		endDefinition(57186)
lbl(57640)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		putRecord(messagePattern [len list size tail] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57658)	definition(x(9) 57854 pid('File,read' 1 pos('./op/Open.oz' 316 5) nil 6) unit [x(8) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 57706)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(57709)
lbl(57706)	getLiteral(nil y(2))
lbl(57709)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57730)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(57730)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57753)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(57756)
lbl(57753)	getNumber(1024 y(4))
lbl(57756)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(57850 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(57849 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 57831)
		testLiteral(y(4) all 57807)
lbl(57791)	moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(4))
		putConstant(0 x(3))
		genFastCall(<Q: 549> 10)
		branch(57848)
lbl(57807)	move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		call(x(5) 5)
		branch(57848)
lbl(57831)	putRecord(read [len list size tail] x(1))
		setValue(y(3))
		setValue(y(1))
		setValue(y(4))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57848)	return
lbl(57849)	return
lbl(57850)	deAllocateL5
		return
		endDefinition(57658)
lbl(57854)	putList(x(8))
		setConstant(read)
		setValue(x(9))
lbl(57860)	definition(x(9) 57932 pid('File,write/fast' [len vs] pos('./op/Open.oz' 332 5) nil 4) <Q: 551> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(57929 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(57928 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 57911)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 550> 8)
		branch(57927)
lbl(57911)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57927)	return
lbl(57928)	return
lbl(57929)	return
		endDefinition(57860)
lbl(57932)	putRecord(messagePattern [len vs] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(57940)	definition(x(11) 57995 pid('File,write/slow' 1 pos('./op/Open.oz' 332 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 57977)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(57977)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 551> 5)
		endDefinition(57940)
lbl(57995)	putRecord(write [len vs] x(10))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(write)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58015)	definition(x(9) 58140 pid('File,seek/fast' [offset whence] pos('./op/Open.oz' 342 5) nil 6) <Q: 552> [y(1)])
		allocateL4
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(58136 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58135 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 58118)
		move(g(0) x(3))
		inlineDot(x(3) lSeek x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariable(y(3))
		match(x(1) ht(58090 [onScalar(set 58075) onScalar(current 58080) onScalar('end' 58085)]))
lbl(58075)	getLiteral('SEEK_SET' y(3))
		branch(58103)
lbl(58080)	getLiteral('SEEK_CUR' y(3))
		branch(58103)
lbl(58085)	getLiteral('SEEK_END' y(3))
		branch(58103)
lbl(58090)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(350)
		setValue(x(1))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(58103)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		call(y(2) 4)
		branch(58134)
lbl(58118)	putRecord(seek [offset whence] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58134)	return
lbl(58135)	return
lbl(58136)	deAllocateL4
		return
		endDefinition(58015)
lbl(58140)	putRecord(messagePattern [offset whence] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(58148)	definition(x(11) 58227 pid('File,seek/slow' 1 pos('./op/Open.oz' 342 5) nil 3) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(offset x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58187)
		inlineDot(x(0) offset x(1) cache)
		unify(x(1) y(1))
		branch(58190)
lbl(58187)	getNumber(0 y(1))
lbl(58190)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(whence x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 58213)
		inlineDot(x(0) whence x(1) cache)
		unify(x(1) y(2))
		branch(58216)
lbl(58213)	getLiteral(set y(2))
lbl(58216)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 552> 5)
		endDefinition(58148)
lbl(58227)	putRecord(seek [offset whence] x(10))
		setConstant(0)
		setConstant(set)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(seek)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58247)	definition(x(9) 58326 pid('File,tell/fast' [offset] pos('./op/Open.oz' 357 5) nil 5) <Q: 553> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(58323 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(58322 x(1))
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 58310)
		move(g(0) x(2))
		inlineDot(x(2) lSeek x(4) cache)
		move(x(0) x(3))
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant('SEEK_CUR' x(2))
		call(x(4) 4)
		branch(58321)
lbl(58310)	putRecord(tell [offset] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58321)	return
lbl(58322)	return
lbl(58323)	return
		endDefinition(58247)
lbl(58326)	definition(x(10) 58352 pid('File,tell/slow' 1 pos('./op/Open.oz' 357 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) offset x(0) cache)
		genFastCall(<Q: 553> 3)
		endDefinition(58326)
lbl(58352)	putRecord('#' [1 2 fast] x(11))
		setConstant(tell)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 5 x(1))
		setValue(x(7))
		setValue(x(8))
		setValue(x(12))
		setValue(x(13))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('File' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [len list size tail] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(58412)	definition(x(8) 58576 pid('SockAndPipe,read' 1 pos('./op/Open.oz' 378 2) nil 6) unit [x(7) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58449)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58449)	move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(2))
		createVariable(y(3))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 58481)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(3))
		branch(58484)
lbl(58481)	getLiteral(nil y(3))
lbl(58484)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58507)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(58510)
lbl(58507)	getNumber(1024 y(4))
lbl(58510)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58572 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 58554)
		move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(1) x(4))
		call(x(5) 5)
		branch(58571)
lbl(58554)	putRecord(read [len list size tail] x(1))
		setValue(y(1))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58571)	return
lbl(58572)	deAllocateL5
		return
		endDefinition(58412)
lbl(58576)	putList(x(7))
		setConstant(read)
		setValue(x(8))
lbl(58582)	definition(x(8) 58642 pid('SockAndPipe,write/fast' [len vs] pos('./op/Open.oz' 391 2) nil 4) <Q: 554> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58639 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 58622)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 543> 8)
		branch(58638)
lbl(58622)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58638)	return
lbl(58639)	return
		endDefinition(58582)
lbl(58642)	putRecord(messagePattern [len vs] x(9))
		setConstant(unit)
		setConstant(unit)
lbl(58650)	definition(x(10) 58705 pid('SockAndPipe,write/slow' 1 pos('./op/Open.oz' 391 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 58687)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58687)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 554> 5)
		endDefinition(58650)
lbl(58705)	putRecord(write [len vs] x(9))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(11))
		setConstant(write)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
lbl(58725)	definition(x(8) 58863 pid('SockAndPipe,flush/fast' [how] pos('./op/Open.oz' 399 2) nil 3) <Q: 555> nil)
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 58792 58850)
lbl(58762)	testBool(y(2) 58792 58850)
lbl(58766)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58790 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58789 x(0))
		return
lbl(58789)	return
lbl(58790)	deAllocateL3
		return
lbl(58792)	testBool(y(1) 58810 58839)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58808 x(0))
		return
lbl(58808)	deAllocateL3
		return
lbl(58810)	testBool(y(2) 58826 58828)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58826 x(0))
		return
lbl(58826)	deAllocateL3
		return
lbl(58828)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58839)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58850)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(403)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(58725)
lbl(58863)	putRecord(messagePattern [how] x(9))
		setConstant(unit)
lbl(58869)	definition(x(10) 58929 pid('SockAndPipe,flush/slow' 1 pos('./op/Open.oz' 399 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58908)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(58920)
lbl(58908)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(58920)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 555> 3)
		endDefinition(58869)
lbl(58929)	putRecord(flush [how] x(9))
		setVariable(x(12))
		putList(x(13))
		setConstant(send)
		setConstant(nil)
		getList(x(12))
		unifyLiteral(receive)
		unifyValue(x(13))
		putRecord('#' [1 2 default fast] x(12))
		setConstant(flush)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 3 x(1))
		setValue(x(7))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SockAndPipe' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(58987)	definition(x(7) 59069 pid('DoSend' 4 pos('./op/Open.oz' 418 2) nil 6) <Q: 556> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) send x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		call(x(5) 4)
		testRecord(y(3) suspend 3 59053)
lbl(59025)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 556> 9)
lbl(59053)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(58987)
lbl(59069)	definition(x(7) 59166 pid('DoSendTo' 6 pos('./op/Open.oz' 425 2) nil 8) <Q: 557> [y(1)])
		allocateL6
		move(g(0) x(6))
		inlineDot(x(6) sendTo x(7) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYYX(x(5) y(4) y(1) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		createVariableMove(y(5) x(5))
		call(x(7) 6)
		testRecord(y(5) suspend 3 59150)
lbl(59117)	getVarVar(x(0) x(1))
		getVariable(x(6))
		callBI('Wait' [x(1)]#nil)
		move(y(3) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(y(0) x(0))
		move(x(6) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 557> 13)
lbl(59150)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(4))
		deAllocateL6
		return
		endDefinition(59069)
lbl(59166)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<N: TimeOut>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [protocol time type] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(59188)	definition(x(8) 59373 pid('Socket,init' 1 pos('./op/Open.oz' 438 5) nil 4) unit [x(7) y(0) y(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(type x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59227)
		inlineDot(x(0) type x(1) cache)
		unify(x(1) y(1))
		branch(59230)
lbl(59227)	getLiteral(stream y(1))
lbl(59230)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(protocol x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59253)
		inlineDot(x(0) protocol x(1) cache)
		unify(x(1) y(2))
		branch(59256)
lbl(59253)	getLiteral(nil y(2))
lbl(59256)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(time x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59279)
		inlineDot(x(0) time x(1) cache)
		unify(x(1) y(3))
		branch(59282)
lbl(59279)	getNumber(~1 y(3))
lbl(59282)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(g(2) x(0))
		inlineDot(x(0) socket x(1) cache)
		move(x(1) y(0))
		putConstant('PF_INET' y(4))
		createVariable(y(5))
		match(y(1) ht(59318 [onScalar(stream 59308) onScalar(datagram 59313)]))
lbl(59308)	getLiteral('SOCK_STREAM' y(5))
		branch(59331)
lbl(59313)	getLiteral('SOCK_DGRAM' y(5))
		branch(59331)
lbl(59318)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(443)
		setValue(y(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(59331)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(1) x(3))
		call(y(0) 4)
		getSelf(x(0))
		inlineDot(x(0) <N: TimeOut> x(1) cache)
		unify(x(1) y(3))
		move(y(1) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
		endDefinition(59188)
lbl(59373)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		createVariable(y(6))
lbl(59381)	definition(x(8) 59478 pid('Socket,server' 1 pos('./op/Open.oz' 450 5) nil 3) unit [y(6)])
		allocateL3
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59409)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59409)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59430)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(2))
lbl(59430)	genCall(gci(g(0) true init false 0) 0)
		move(y(0) x(0))
		putConstant(takePort x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59457)
		inlineDot(x(0) takePort x(1) cache)
		move(y(1) x(0))
		genCall(gci(g(0) true bind false [port takePort]) 0)
		branch(59463)
lbl(59457)	move(y(1) x(0))
		genCall(gci(g(0) true bind false [port]) 0)
lbl(59463)	putConstant(1 x(0))
		genCall(gci(g(0) true listen false [backLog]) 0)
		move(y(2) x(0))
		deAllocateL3
		genCall(gci(g(0) true accept true [host]) 0)
		endDefinition(59381)
lbl(59478)	putList(x(9))
		setConstant(server)
		setValue(x(8))
lbl(59484)	definition(x(8) 59510 pid('Socket,client/fast' [host port] pos('./op/Open.oz' 461 5) nil 2) <Q: 558> [y(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true connect true [host port]) 0)
		endDefinition(59484)
lbl(59510)	putRecord(messagePattern [host port] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(59518)	definition(x(11) 59578 pid('Socket,client/slow' 1 pos('./op/Open.oz' 461 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 59557)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(59560)
lbl(59557)	getLiteral(localhost y(1))
lbl(59560)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 558> 5)
		endDefinition(59518)
lbl(59578)	putRecord(client [host port] x(10))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(client)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59598)	definition(x(8) 59674 pid('Socket,listen/fast' [backLog] pos('./op/Open.oz' 466 5) nil 4) <Q: 559> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(59671 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(59670 x(1))
		inlineAt(<N: ReadDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 59658)
		move(g(0) x(2))
		inlineDot(x(2) listen x(3) cache)
		move(x(1) x(4))
		move(x(0) x(1))
		move(x(4) x(0))
		call(x(3) 2)
		branch(59669)
lbl(59658)	putRecord(listen [backLog] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59669)	return
lbl(59670)	return
lbl(59671)	return
		endDefinition(59598)
lbl(59674)	putRecord(messagePattern [backLog] x(10))
		setConstant(unit)
lbl(59680)	definition(x(11) 59731 pid('Socket,listen/slow' 1 pos('./op/Open.oz' 466 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(backLog x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59719)
		inlineDot(x(0) backLog x(1) cache)
		unify(x(1) y(1))
		branch(59722)
lbl(59719)	getNumber(5 y(1))
lbl(59722)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 559> 3)
		endDefinition(59680)
lbl(59731)	putRecord(listen [backLog] x(10))
		setConstant(5)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(listen)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59749)	definition(x(8) 59904 pid('Socket,bind' 1 pos('./op/Open.oz' 476 5) nil 5) unit [y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59777)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59777)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(59900 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(59899 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 59890)
		move(y(0) x(1))
		putConstant(takePort x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 59853)
		move(g(0) x(2))
		inlineDot(x(2) bind x(3) cache)
		inlineDot(x(1) takePort x(4) cache)
		move(x(4) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		inlineDot(x(0) takePort x(1) cache)
		unify(x(1) y(1))
		branch(59898)
lbl(59853)	move(g(0) x(1))
		inlineDot(x(1) bind x(2) cache)
		move(x(0) y(0))
		putConstant(0 x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) getSockName x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		call(x(2) 2)
		branch(59898)
lbl(59890)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59898)	return
lbl(59899)	return
lbl(59900)	deAllocateL2
		return
		endDefinition(59749)
lbl(59904)	putList(x(10))
		setConstant(bind)
		setValue(x(8))
lbl(59910)	definition(x(8) 60157 pid('Socket,accept' 1 pos('./op/Open.oz' 493 5) nil 5) unit [y(1) y(0)])
		allocateL6
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59938)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
lbl(59938)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59959)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(2))
lbl(59959)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60153 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60152 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60143)
		getSelf(x(1))
		inlineDot(x(1) <N: TimeOut> x(1) cache)
		move(x(0) y(3))
		createVariable(y(4))
		match(x(1) ht(60006 [onScalar(~1 60012)]))
lbl(60006)	move(y(4) x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
lbl(60012)	createVariable(y(5))
		thread(60036)
		move(g(0) x(0))
		inlineDot(x(0) acceptSelect x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		getLiteral(unit y(5))
		deAllocateL6
		return
lbl(60036)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		testBI('IsDet' [x(1)]#[x(0)] 60135)
		move(g(0) x(0))
		inlineDot(x(0) accept x(4) cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		putConstant(accepted x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60117)
		inlineDot(x(0) accepted x(1) cache)
		inlineDot(x(0) acceptClass x(2) cache)
		callBI(newObject [x(2)]#[x(0)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveYXYX(y(4) x(0) y(4) x(1))
		sendMsg(dOpen y(1) 2 cache)
		unify(y(1) y(0))
		branch(60151)
lbl(60117)	genCall(gci(g(1) true <N: CloseDescs> false 0) 0)
		move(y(4) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		branch(60151)
lbl(60135)	getLiteral(false y(2))
		getLiteral(false y(1))
		branch(60151)
lbl(60143)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60151)	return
lbl(60152)	return
lbl(60153)	deAllocateL6
		return
		endDefinition(59910)
lbl(60157)	putList(x(11))
		setConstant(accept)
		setValue(x(8))
lbl(60163)	definition(x(8) 60247 pid('Socket,connect/fast' [host port] pos('./op/Open.oz' 525 5) nil 5) <Q: 560> [y(1)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(60244 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(60243 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 60226)
		move(g(0) x(3))
		inlineDot(x(3) connect x(4) cache)
		move(x(2) x(5))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		call(x(4) 3)
		branch(60242)
lbl(60226)	putRecord(connect [host port] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60242)	return
lbl(60243)	return
lbl(60244)	return
		endDefinition(60163)
lbl(60247)	putRecord(messagePattern [host port] x(14))
		setConstant(unit)
		setConstant(unit)
lbl(60255)	definition(x(15) 60315 pid('Socket,connect/slow' 1 pos('./op/Open.oz' 525 5) nil 3) unit [x(14)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 60294)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(60297)
lbl(60294)	getLiteral(localhost y(1))
lbl(60297)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 560> 5)
		endDefinition(60255)
lbl(60315)	putRecord(connect [host port] x(14))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(16))
		setConstant(connect)
		setValue(x(15))
		setValue(x(14))
		setValue(x(8))
		putRecord(messagePattern [host len port vs] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60347)	definition(x(14) 60522 pid('Socket,send' 1 pos('./op/Open.oz' 535 5) nil 6) unit [x(8)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 60393)
		inlineDot(x(0) len x(2) cache)
		unify(x(2) y(2))
lbl(60393)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60416)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(3))
		branch(60419)
lbl(60416)	getLiteral(localhost y(3))
lbl(60419)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60442)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(4))
		branch(60445)
lbl(60442)	getLiteral(<N: Missing> y(4))
lbl(60445)	getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60518 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60500)
		testLiteral(y(4) <N: Missing> 60482)
lbl(60469)	moveMoveYXYX(y(1) x(1) y(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 556> 8)
		branch(60517)
lbl(60482)	moveMoveYXYX(y(1) x(1) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(2) x(5))
		putConstant(0 x(4))
		genFastCall(<Q: 557> 12)
		branch(60517)
lbl(60500)	putRecord(send [host len port vs] x(1))
		setValue(y(3))
		setValue(y(2))
		setValue(y(4))
		setValue(y(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60517)	return
lbl(60518)	deAllocateL5
		return
		endDefinition(60347)
lbl(60522)	putList(x(8))
		setConstant(send)
		setValue(x(14))
		putRecord(messagePattern [host len list port size tail] x(14))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60544)	definition(x(15) 60762 pid('Socket,receive' 1 pos('./op/Open.oz' 546 5) nil 9) unit [x(14) y(1)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 60592)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(60595)
lbl(60592)	getLiteral(nil y(2))
lbl(60595)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60616)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(60616)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60637)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(4))
lbl(60637)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60658)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(5))
lbl(60658)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60681)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(6))
		branch(60684)
lbl(60681)	getNumber(1024 y(6))
lbl(60684)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60758 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60736)
		move(g(1) x(1))
		inlineDot(x(1) receiveFrom x(8) cache)
		moveMoveYXYX(y(6) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(3) x(7))
		putConstant(nil x(2))
		call(x(8) 8)
		branch(60757)
lbl(60736)	putRecord(receive [host len list port size tail] x(1))
		setValue(y(4))
		setValue(y(3))
		setValue(y(1))
		setValue(y(5))
		setValue(y(6))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60757)	return
lbl(60758)	deAllocateL7
		return
		endDefinition(60544)
lbl(60762)	putList(x(14))
		setConstant(receive)
		setValue(x(15))
lbl(60768)	definition(x(15) 61071 pid('Socket,shutDown/fast' [how] pos('./op/Open.oz' 560 5) nil 4) <Q: 561> [y(1)])
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 60926 61058)
lbl(60805)	testBool(y(2) 60926 61058)
lbl(60809)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60924 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60923 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 60911)
lbl(60845)	testBI('IsInt' [x(1)]#[x(2)] 60911)
lbl(60849)	testBI('==' [x(0) x(1)]#[x(2)] 60873)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(x(1) x(0))
		putConstant(2 x(1))
		call(x(2) 2)
		branch(60922)
lbl(60873)	move(g(0) x(2))
		inlineDot(x(2) shutDown x(3) cache)
		move(x(1) y(0))
		putConstant(0 x(1))
		call(x(3) 2)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(60922)
lbl(60911)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60922)	return
lbl(60923)	return
lbl(60924)	deAllocateL3
		return
lbl(60926)	testBool(y(1) 60981 61047)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60979 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60967)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(0 x(1))
		call(x(2) 2)
		branch(60978)
lbl(60967)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60978)	return
lbl(60979)	deAllocateL3
		return
lbl(60981)	testBool(y(2) 61034 61036)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(61034 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 61022)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(1 x(1))
		call(x(2) 2)
		branch(61033)
lbl(61022)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(61033)	return
lbl(61034)	deAllocateL3
		return
lbl(61036)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61047)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(579)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61058)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(60768)
lbl(61071)	putRecord(messagePattern [how] x(17))
		setConstant(unit)
lbl(61077)	definition(x(18) 61137 pid('Socket,shutDown/slow' 1 pos('./op/Open.oz' 560 5) nil 3) unit [x(17)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61116)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(61128)
lbl(61116)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(61128)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 561> 3)
		endDefinition(61077)
lbl(61137)	putRecord(shutDown [how] x(17))
		setVariable(x(19))
		putList(x(20))
		setConstant(send)
		setConstant(nil)
		getList(x(19))
		unifyLiteral(receive)
		unifyValue(x(20))
		putRecord('#' [1 2 default fast] x(19))
		setConstant(shutDown)
		setValue(x(18))
		setValue(x(17))
		setValue(x(15))
		putRecord('#' 10 x(1))
		setValue(x(7))
		setValue(x(9))
		setValue(x(12))
		setValue(x(13))
		setValue(x(10))
		setValue(x(11))
		setValue(x(16))
		setValue(x(8))
		setValue(x(14))
		setValue(x(19))
		move(y(6) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Socket' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(61206)	definition(x(7) 61327 pid('DoReadLine' 5 pos('./op/Open.oz' 604 2) nil 6) <Q: 562> [y(1) g(4)])
		match(x(0) ht(61312 [onScalar(nil 61215) onRecord('|' 2 61285)]))
lbl(61215)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61268)
lbl(61257)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(61268)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 562> 11)
lbl(61285)	getVarVar(x(0) x(5))
		testNumber(x(0) 10 61302)
lbl(61292)	unify(x(2) x(5))
		getLiteral(false x(3))
		getLiteral(nil x(4))
		return
lbl(61302)	getListValVar(x(4) x(0) x(4))
		move(x(5) x(0))
		genFastCall(<Q: 562> 11)
lbl(61312)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(615)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61206)
lbl(61327)	definition(x(7) 61434 pid('DoReadOne' 5 pos('./op/Open.oz' 618 2) nil 6) <Q: 563> [y(1) g(4)])
		match(x(0) ht(61419 [onScalar(nil 61336) onRecord('|' 2 61406)]))
lbl(61336)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61389)
lbl(61378)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(false y(3))
		deAllocateL6
		return
lbl(61389)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 563> 11)
lbl(61406)	getVarVar(x(0) x(1))
		unify(x(2) x(1))
		getLiteral(false x(3))
		unify(x(0) x(4))
		return
lbl(61419)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(626)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61327)
lbl(61434)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(61440)	definition(x(7) 61558 pid('Text,getC/fast' 1 pos('./op/Open.oz' 633 5) nil 7) <Q: 564> nil)
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61554 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: Last> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		createVariable(x(6))
		inlineAssign(<N: Last> x(6) cache)
		testBool(x(1) 61512 61542)
		getLiteral(false x(0))
		getLiteral(true x(4))
		getLiteral(nil x(5))
		unify(x(6) x(3))
		branch(61553)
lbl(61512)	inlineAt(<N: ReadDesc> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(6) y(1))
		move(x(2) x(0))
		move(x(5) x(2))
		move(x(4) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 563> 10)
		unify(y(1) y(0))
		branch(61553)
lbl(61542)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61553)	return
lbl(61554)	deAllocateL2
		return
		endDefinition(61440)
lbl(61558)	definition(x(8) 61584 pid('Text,getC/slow' 1 pos('./op/Open.oz' 633 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 564> 3)
		endDefinition(61558)
lbl(61584)	putRecord('#' [1 2 fast] x(9))
		setConstant(getC)
		setValue(x(8))
		setValue(x(7))
lbl(61594)	definition(x(7) 61619 pid('Text,putC/fast' 1 pos('./op/Open.oz' 652 5) nil 4) <Q: 565> nil)
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61594)
lbl(61619)	definition(x(8) 61645 pid('Text,putC/slow' 1 pos('./op/Open.oz' 652 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 565> 3)
		endDefinition(61619)
lbl(61645)	putRecord('#' [1 2 fast] x(10))
		setConstant(putC)
		setValue(x(8))
		setValue(x(7))
lbl(61655)	definition(x(7) 61790 pid('Text,getS/fast' 1 pos('./op/Open.oz' 656 5) nil 6) <Q: 566> nil)
		allocateL3
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61786 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: ReadDesc> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		testBool(x(1) 61717 61774)
		getLiteral(true x(4))
		getLiteral(nil x(5))
		getLiteral(false x(0))
		branch(61785)
lbl(61717)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		move(y(1) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 562> 10)
		testBool(y(1) 61758 61763)
		testLiteral(y(2) nil 61753)
lbl(61748)	getLiteral(false y(0))
		branch(61785)
lbl(61753)	unify(y(0) y(2))
		branch(61785)
lbl(61758)	unify(y(0) y(2))
		branch(61785)
lbl(61763)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61774)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61785)	return
lbl(61786)	deAllocateL3
		return
		endDefinition(61655)
lbl(61790)	definition(x(8) 61816 pid('Text,getS/slow' 1 pos('./op/Open.oz' 656 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 566> 3)
		endDefinition(61790)
lbl(61816)	putRecord('#' [1 2 fast] x(11))
		setConstant(getS)
		setValue(x(8))
		setValue(x(7))
lbl(61826)	definition(x(7) 61853 pid('Text,putS/fast' 1 pos('./op/Open.oz' 678 5) nil 4) <Q: 567> nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setConstant('\n')
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61826)
lbl(61853)	definition(x(8) 61879 pid('Text,putS/slow' 1 pos('./op/Open.oz' 678 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 567> 3)
		endDefinition(61853)
lbl(61879)	putRecord('#' [1 2 fast] x(12))
		setConstant(putS)
		setValue(x(8))
		setValue(x(7))
lbl(61889)	definition(x(7) 61950 pid('Text,unGetC/fast' 0 pos('./op/Open.oz' 682 5) nil 3) <Q: 568> nil)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(61947 x(0))
		inlineAt(<N: Last> x(0) cache)
		inlineAt(<N: Buff> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<N: Buff> x(2) cache)
		putList(x(0))
		setConstant(0)
		setConstant(nil)
		inlineAssign(<N: Last> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<N: AtEnd> x(0) cache)
		return
lbl(61947)	return
		endDefinition(61889)
lbl(61950)	definition(x(8) 61964 pid('Text,unGetC/slow' 1 pos('./op/Open.oz' 682 5) nil 1) unit nil)
		getLiteral(unGetC x(0))
		genFastCall(<Q: 568> 1)
		endDefinition(61950)
lbl(61964)	putRecord('#' [1 2 fast] x(13))
		setConstant(unGetC)
		setValue(x(8))
		setValue(x(7))
lbl(61974)	definition(x(7) 62017 pid('Text,atEnd/fast' 1 pos('./op/Open.oz' 690 5) nil 2) <Q: 569> nil)
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(62014 x(1))
		inlineAt(<N: Buff> x(1) cache)
		testLiteral(x(1) nil 62010)
		inlineAt(<N: AtEnd> x(1) cache)
		unify(x(1) x(0))
		branch(62013)
lbl(62010)	getLiteral(false x(0))
lbl(62013)	return
lbl(62014)	return
		endDefinition(61974)
lbl(62017)	definition(x(8) 62043 pid('Text,atEnd/slow' 1 pos('./op/Open.oz' 690 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 569> 3)
		endDefinition(62017)
lbl(62043)	putRecord('#' [1 2 fast] x(14))
		setConstant(atEnd)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Text' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<M: PID>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [args cmd 'pid'] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(62109)	definition(x(8) 62246 pid('Pipe,init' 1 pos('./op/Open.oz' 706 2) nil 5) unit [x(7) y(0) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) cmd x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(args x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 62157)
		inlineDot(x(0) args x(2) cache)
		unify(x(2) y(2))
		branch(62160)
lbl(62157)	getLiteral(nil y(2))
lbl(62160)	createVariable(y(3))
		move(y(0) x(0))
		putConstant('pid' x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62181)
		inlineDot(x(0) 'pid' x(1) cache)
		unify(x(1) y(3))
lbl(62181)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(0))
		setVariable(y(4))
		move(g(2) x(0))
		inlineDot(x(0) pipe x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		call(x(4) 4)
		getSelf(x(0))
		inlineDot(x(0) <M: PID> x(1) cache)
		unify(x(1) y(3))
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(4) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL5
		return
		endDefinition(62109)
lbl(62246)	putList(x(7))
		setConstant(init)
		setValue(x(8))
lbl(62252)	definition(x(8) 62361 pid('Pipe,close/fast' 0 pos('./op/Open.oz' 715 2) nil 5) <Q: 570> [y(1) g(5) y(0)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(0) cache)
		lockThread(62358 x(0))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(0) cache)
		lockThread(62357 x(0))
		move(g(0) x(0))
		inlineDot(x(0) system x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: PID> x(3) cache)
		putRecord('#' 3 x(4))
		setConstant('kill ')
		setValue(x(3))
		setConstant(' 2> /dev/null')
		move(x(4) x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(1) x(0))
		callBI('Delay' [x(0)]#nil)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		genCall(gci(g(2) true close false 0) 0)
		return
lbl(62357)	return
lbl(62358)	return
		endDefinition(62252)
lbl(62361)	definition(x(9) 62375 pid('Pipe,close/slow' 1 pos('./op/Open.oz' 715 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 570> 1)
		endDefinition(62361)
lbl(62375)	putRecord('#' [1 2 fast] x(10))
		setConstant(close)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(1))
		setValue(x(7))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Pipe' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(62408)	definition(x(7) 62427 pid('Html,header/fast' 0 pos('./op/Open.oz' 732 2) nil 3) <Q: 571> nil)
		getSelf(x(2))
		putConstant('Content-type: text/html\n\n' x(0))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62408)
lbl(62427)	definition(x(8) 62441 pid('Html,header/slow' 1 pos('./op/Open.oz' 732 2) nil 1) unit nil)
		getLiteral(header x(0))
		genFastCall(<Q: 571> 1)
		endDefinition(62427)
lbl(62441)	putRecord('#' [1 2 fast] x(9))
		setConstant(header)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(62453)	definition(x(7) 62503 pid('Html,WriteTagBody/fast' 3 pos('./op/Open.oz' 736 2) nil 4) <Q: 572> [y(1)])
		testLT(x(1) x(0) x(3) 62465)
		return
lbl(62465)	allocateL3
		callBI('.' [x(2) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true tag false 1) 0)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: WriteTagBody> true 3) 0)
		endDefinition(62453)
lbl(62503)	definition(x(8) 62544 pid('Html,WriteTagBody/slow' 1 pos('./op/Open.oz' 736 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 572> 7)
		endDefinition(62503)
lbl(62544)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: WriteTagBody>)
		setValue(x(8))
		setValue(x(7))
lbl(62554)	definition(x(7) 62829 pid('Html,tag/fast' 1 pos('./op/Open.oz' 742 2) nil 5) <Q: 573> [g(6) y(1) g(7) g(8)])
		testBI('IsRecord' [x(0)]#[x(1)] 62798)
		allocateL6
		callBI('Label' [x(0)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		testBool(y(2) 62755 62787)
		getSelf(x(1))
		move(x(1) y(2))
		createVariable(y(3))
		createVariable(y(4))
		move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(2)] 62613)
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) y(3))
		getLiteral('' y(4))
		branch(62642)
lbl(62613)	callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		move(y(3) x(2))
		putConstant(0 x(1))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 537> 8)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 538> 6)
lbl(62642)	putRecord('#' 4 x(0))
		setConstant('<')
		setValue(y(1))
		setValue(y(4))
		setConstant('>')
		sendMsg(write y(2) [vs] cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		putConstant(1 x(0))
		genCall(gci(g(1) true <M: WriteTagBody> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(2) 2)
		testBool(y(0) 62686 62706)
		branch(62717)
lbl(62686)	putRecord('#' 3 x(0))
		setConstant('</')
		setValue(y(1))
		setConstant('>')
		getSelf(x(2))
		sendMsg(write x(2) [vs] cache)
		branch(62717)
lbl(62706)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62717)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(3) 2)
		testBool(y(0) 62742 62744)
		getSelf(x(2))
		putConstant('\n' x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62742)	deAllocateL6
		return
lbl(62744)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(761)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62755)	testLiteral(y(1) '#' 62775)
		move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(y(0) x(2))
		putConstant(1 x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: WriteTagBody> true 3) 0)
lbl(62775)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62787)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(746)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62798)	testBI('IsProcedure' [x(0)]#[x(1)] 62819)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true tag true 1) 0)
lbl(62819)	getSelf(x(2))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62554)
lbl(62829)	definition(x(8) 62855 pid('Html,tag/slow' 1 pos('./op/Open.oz' 742 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 573> 3)
		endDefinition(62829)
lbl(62855)	putRecord('#' [1 2 fast] x(11))
		setConstant(tag)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Html' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(3) x(0))
		inlineDot(x(0) put x(2) cache)
lbl(62905)	definition(x(1) 63080 pid('' 2 pos('./op/Open.oz' 785 7) nil 6) <Q: 574> [y(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) open 3 63057)
lbl(62937)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) format x(4) cache)
		putConstant('error in Open module' y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(4) y(5))
		createVariable(y(6))
		match(x(0) ht(62997 [onScalar(alreadyClosed 62967) onScalar(alreadyInitialized 62972) onScalar(illegalFlags 62977) onScalar(illegalModes 62982) onScalar(nameOrUrl 62987) onScalar(urlIsReadOnly 62992)]))
lbl(62967)	getLiteral('Object already closed' y(6))
		branch(63000)
lbl(62972)	getLiteral('Object already initialized' y(6))
		branch(63000)
lbl(62977)	getLiteral('Illegal value for flags' y(6))
		branch(63000)
lbl(62982)	getLiteral('Illegal value for mode' y(6))
		branch(63000)
lbl(62987)	getLiteral('Exactly one of \'name\' or \'url\' feature needed' y(6))
		branch(63000)
lbl(62992)	getLiteral('Only reading access to url-files allowed' y(6))
		branch(63000)
lbl(62997)	getLiteral('Unknown' y(6))
lbl(63000)	putRecord(oz 1 x(3))
		setValue(y(3))
		putRecord(oz 1 x(4))
		setValue(y(4))
		putRecord('#' 5 x(1))
		setConstant('{')
		setValue(x(3))
		setConstant(' ')
		setValue(x(4))
		setConstant('}')
		putRecord(hint [l m] x(0))
		setConstant('Object Application')
		setValue(x(1))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(1) x(4))
		deAllocateL7
		tailCall(x(5) 5)
lbl(63057)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in Open module' x(0))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(62905)
lbl(63080)	putConstant(open x(0))
		call(x(2) 2)
		getRecord('export' [file html pipe socket text] g(9))
		unifyValue(y(4))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL8
		return
		endDefinition(56279)
lbl(63104)	tailCall(x(2) 0)
		endDefinition(56063)
lbl(63109)	putList(x(5))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(4))
		setConstant(format)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putList(x(29))
		setConstant('wait')
		setConstant(nil)
		putList(x(28))
		setConstant(pipe)
		setValue(x(29))
		putList(x(27))
		setConstant(system)
		setValue(x(28))
		putList(x(26))
		setConstant(deSelect)
		setValue(x(27))
		putList(x(25))
		setConstant(acceptSelect)
		setValue(x(26))
		putList(x(24))
		setConstant(getSockName)
		setValue(x(25))
		putList(x(23))
		setConstant(receiveFrom)
		setValue(x(24))
		putList(x(22))
		setConstant(sendTo)
		setValue(x(23))
		putList(x(21))
		setConstant(send)
		setValue(x(22))
		putList(x(20))
		setConstant(shutDown)
		setValue(x(21))
		putList(x(19))
		setConstant(accept)
		setValue(x(20))
		putList(x(18))
		setConstant(connect)
		setValue(x(19))
		putList(x(17))
		setConstant(listen)
		setValue(x(18))
		putList(x(16))
		setConstant(bind)
		setValue(x(17))
		putList(x(15))
		setConstant(socket)
		setValue(x(16))
		putList(x(14))
		setConstant(lSeek)
		setValue(x(15))
		putList(x(13))
		setConstant(read)
		setValue(x(14))
		putList(x(12))
		setConstant(write)
		setValue(x(13))
		putList(x(11))
		setConstant(close)
		setValue(x(12))
		putList(x(10))
		setConstant(fileDesc)
		setValue(x(11))
		putList(x(9))
		setConstant(open)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putList(x(31))
		setConstant(open)
		setConstant(nil)
		putRecord(info [type] x(30))
		setValue(x(31))
		putRecord('import' ['Error' 'ErrorRegistry' 'OS' 'Resolve'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		setValue(x(30))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putRecord('export' [file html pipe socket text] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		createVariableMove(y(159) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(63336)	definition(x(4) 63359 pid('IsFeature' 2 pos('./support/Type.oz' 30 3) nil 3) <P: 575> nil)
		testBI('IsInt' [x(0)]#[x(2)] 63350)
		getLiteral(true x(1))
		return
lbl(63350)	callBI('IsLiteral' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63336)
lbl(63359)	definition(x(5) 63382 pid('IsOrdered' 2 pos('./support/Type.oz' 34 3) nil 3) <P: 576> nil)
		testBI('IsNumber' [x(0)]#[x(2)] 63373)
		getLiteral(true x(1))
		return
lbl(63373)	callBI('IsAtom' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63359)
lbl(63382)	definition(x(6) 63419 pid('IsUnary' 2 pos('./support/Type.oz' 38 3) nil 4) <P: 577> nil)
		testBI('IsObject' [x(0)]#[x(2)] 63396)
		getLiteral(true x(1))
		return
lbl(63396)	testBI('IsProcedure' [x(0)]#[x(2)] 63413)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(63413)	getLiteral(false x(1))
		return
		endDefinition(63382)
lbl(63419)	definition(x(7) 63440 pid('IsPair' 2 pos('./support/Type.oz' 43 3) nil 2) <P: 578> nil)
		testRecord(x(0) '#' 2 63434)
lbl(63430)	getLiteral(true x(1))
		return
lbl(63434)	getLiteral(false x(1))
		return
		endDefinition(63419)
lbl(63440)	definition(x(8) 63506 pid('IsListOf' 3 pos('./support/Type.oz' 47 3) nil 3) <P: 579> nil)
		match(x(0) ht(63500 [onScalar(nil 63449) onRecord('|' 2 63453)]))
lbl(63449)	getLiteral(true x(2))
		return
lbl(63453)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 63484 63489)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 579> 7)
lbl(63484)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(63489)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63500)	getLiteral(false x(2))
		return
		endDefinition(63440)
lbl(63506)	definition(x(8) 63607 pid('IsPairOf' 4 pos('./support/Type.oz' 53 3) nil 4) <P: 580> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(4) 63589 63594)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(1) 2)
		testBool(y(4) 63573 63578)
		move(y(0) x(0))
		inlineDot(x(0) 2 x(0) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(63573)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63578)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63589)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63506)
lbl(63607)	definition(x(8) 63693 pid('IsRecordOf' 4 pos('./support/Type.oz' 57 3) nil 5) <P: 581> nil)
		match(x(1) ht(63678 [onScalar(nil 63616) onRecord('|' 2 63620)]))
lbl(63616)	getLiteral(true x(3))
		return
lbl(63620)	allocateL5
		getVarVar(x(1) y(0))
		callBI('.' [x(0) x(1)]#[x(4)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 63662 63667)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 581> 9)
lbl(63662)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63667)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(59)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63678)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(60)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63607)
lbl(63693)	definition(x(8) 63767 pid('IsPropertyList' 2 pos('./support/Type.oz' 63 3) nil 4) <P: 582> nil)
lbl(63699)	definition(x(3) 63756 pid('' 2 pos('./support/Type.oz' 64 19) nil 2) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(2) 63738 63743)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		callBI('IsLiteral' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL3
		return
lbl(63738)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(63743)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63699)
lbl(63756)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 579> 7)
		endDefinition(63693)
lbl(63767)	definition(x(9) 63858 pid('IsComplexDomSpec' 2 pos('./support/Type.oz' 68 6) nil 4) <P: 583> [y(57)])
		testBI('IsInt' [x(0)]#[x(2)] 63781)
		getLiteral(true x(1))
		return
lbl(63781)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(1))
		move(g(0) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 580> 8)
		testBool(y(2) 63808 63845)
		getLiteral(true y(1))
		deAllocateL3
		return
lbl(63808)	definition(x(1) 63836 pid('' 2 pos('./support/Type.oz' 71 15) nil 4) unit [g(0)])
		testBI('IsInt' [x(0)]#[x(2)] 63822)
		getLiteral(true x(1))
		return
lbl(63822)	move(x(1) x(3))
		move(g(0) x(1))
		move(g(0) x(2))
		genFastCall(<P: 580> 9)
		endDefinition(63808)
lbl(63836)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 579> 7)
lbl(63845)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63767)
lbl(63858)	definition(x(9) 63879 pid('IsDomainSpec' 2 pos('./support/Type.oz' 76 6) nil 2) <P: 584> nil)
		testRecord(x(0) compl 1 63874)
lbl(63869)	getVariable(x(0))
		genFastCall(<P: 583> 5)
lbl(63874)	genFastCall(<P: 583> 5)
		endDefinition(63858)
lbl(63879)	definition(x(10) 63897 pid('IsTrue' 2 pos('./support/Type.oz' 83 3) nil 4) <P: 585> nil)
		putConstant(true x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63879)
lbl(63897)	definition(x(11) 63915 pid('IsFalse' 2 pos('./support/Type.oz' 87 3) nil 4) <P: 586> nil)
		putConstant(false x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63897)
lbl(63915)	definition(x(12) 63938 pid('IsComparable' 2 pos('./support/Type.oz' 91 3) nil 3) <P: 587> nil)
		testBI('IsNumber' [x(0)]#[x(2)] 63929)
		getLiteral(true x(1))
		return
lbl(63929)	callBI('IsAtom' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63915)
lbl(63938)	definition(x(13) 63961 pid('IsRecordOrChunk' 2 pos('./support/Type.oz' 95 3) nil 3) <P: 588> nil)
		testBI('IsRecord' [x(0)]#[x(2)] 63952)
		getLiteral(true x(1))
		return
lbl(63952)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63938)
lbl(63961)	definition(x(14) 63984 pid('IsRecordCOrChunk' 2 pos('./support/Type.oz' 99 3) nil 3) <P: 589> nil)
		testBI('IsRecordC' [x(0)]#[x(2)] 63975)
		getLiteral(true x(1))
		return
lbl(63975)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63961)
lbl(63984)	definition(x(15) 64007 pid('IsProcedureOrObject' 2 pos('./support/Type.oz' 103 3) nil 3) <P: 590> nil)
		testBI('IsProcedure' [x(0)]#[x(2)] 63998)
		getLiteral(true x(1))
		return
lbl(63998)	callBI('IsObject' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63984)
lbl(64007)	definition(x(16) 64036 pid('IsProcedure0' 2 pos('./support/Type.oz' 107 3) nil 4) <P: 591> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64030)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(0 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64030)	getLiteral(false x(1))
		return
		endDefinition(64007)
lbl(64036)	definition(x(17) 64065 pid('IsProcedure1' 2 pos('./support/Type.oz' 111 3) nil 4) <P: 592> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64059)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64059)	getLiteral(false x(1))
		return
		endDefinition(64036)
lbl(64065)	definition(x(18) 64094 pid('IsProcedure2' 2 pos('./support/Type.oz' 115 3) nil 4) <P: 593> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64088)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(2 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64088)	getLiteral(false x(1))
		return
		endDefinition(64065)
lbl(64094)	definition(x(19) 64123 pid('IsProcedure3' 2 pos('./support/Type.oz' 119 3) nil 4) <P: 594> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64117)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(3 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64117)	getLiteral(false x(1))
		return
		endDefinition(64094)
lbl(64123)	definition(x(20) 64152 pid('IsProcedure4' 2 pos('./support/Type.oz' 123 3) nil 4) <P: 595> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64146)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(4 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64146)	getLiteral(false x(1))
		return
		endDefinition(64123)
lbl(64152)	definition(x(21) 64181 pid('IsProcedure5' 2 pos('./support/Type.oz' 127 3) nil 4) <P: 596> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64175)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64175)	getLiteral(false x(1))
		return
		endDefinition(64152)
lbl(64181)	definition(x(22) 64210 pid('IsProcedure6' 2 pos('./support/Type.oz' 131 3) nil 4) <P: 597> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64204)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64204)	getLiteral(false x(1))
		return
		endDefinition(64181)
lbl(64210)	definition(x(23) 64239 pid('IsProcedure7Plus' 2 pos('./support/Type.oz' 135 3) nil 4) <P: 598> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64233)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('<' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64233)	getLiteral(false x(1))
		return
		endDefinition(64210)
lbl(64239)	definition(x(24) 64257 pid('IsNil' 2 pos('./support/Type.oz' 139 3) nil 4) <P: 599> nil)
		putConstant(nil x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(64239)
lbl(64257)	definition(x(25) 64276 pid('IsCons' 2 pos('./support/Type.oz' 143 3) nil 2) <P: 600> nil)
		testList(x(0) 64270)
lbl(64266)	getLiteral(true x(1))
		return
lbl(64270)	getLiteral(false x(1))
		return
		endDefinition(64257)
lbl(64276)	definition(x(2) 65418 pid('' 2 pos('./support/Type.oz' 149 3) nil 4) <P: 601> [y(176) y(38) y(202) y(42) y(30) y(50) y(173) y(201) x(12) x(25) y(131) x(9) x(11) x(4) y(64) y(203) y(57) y(107) y(26) y(28) y(40) x(24) y(86) y(180) x(5) x(7) y(35) y(127) x(16) x(17) x(18) x(19) x(20) x(21) x(22) x(23) x(15) x(8) y(133) y(138) x(14) x(13) y(179) y(46) y(204) x(10) y(90) x(6) y(27) y(174) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 602>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 603>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 604>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 605>)
		setValue(x(2))
lbl(64306)	definitionCopy(x(3) 65413 pid('/body' 0 pos('./support/Type.oz' 149 3) [once] 8) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) x(1)])
		allocateL(60)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(3) cache)
		inlineDot(x(0) 'FSB' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(3) is x(1) cache)
		inlineDot(x(4) isValueB x(2) cache)
		inlineDot(x(4) isVarB x(3) cache)
lbl(64353)	definition(x(4) 64400 pid('IsFDVector' 2 pos('./support/Type.oz' 170 6) nil 5) <Q: 602> [x(1)])
		testBI('IsRecord' [x(0)]#[x(2)] 64394)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) '|' 64379)
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 579> 7)
lbl(64379)	callBI('Arity' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(4) x(1))
		move(g(0) x(2))
		genFastCall(<P: 581> 9)
lbl(64394)	getLiteral(false x(1))
		return
		endDefinition(64353)
lbl(64400)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(0))
		setValue(g(1))
		setValue(g(2))
		setValue(g(3))
		setValue(g(4))
		setValue(g(5))
		setValue(g(6))
		setValue(g(7))
		setValue(g(8))
		setValue(g(9))
		setValue(g(10))
		setValue(g(11))
		setValue(g(12))
		setValue(g(13))
		setValue(x(1))
		setValue(x(4))
		setValue(g(14))
		setValue(g(15))
		setValue(g(16))
		setValue(x(2))
		setValue(x(3))
		setValue(g(17))
		setValue(g(18))
		setValue(g(19))
		setValue(g(20))
		setValue(g(21))
		setValue(g(22))
		setValue(g(23))
		setValue(g(24))
		setValue(g(25))
		setValue(g(26))
		setValue(g(27))
		setValue(g(28))
		setValue(g(29))
		setValue(g(30))
		setValue(g(31))
		setValue(g(32))
		setValue(g(33))
		setValue(g(34))
		setValue(g(35))
		setValue(g(36))
		setValue(g(37))
		setValue(g(38))
		setValue(g(39))
		setValue(g(40))
		setValue(g(41))
		setValue(g(42))
		setValue(g(43))
		setValue(g(44))
		setValue(g(45))
		setValue(g(46))
		setValue(g(47))
		setValue(g(48))
		setValue(g(49))
		setVariable(x(6))
		setValue(g(50))
lbl(64514)	definition(x(7) 64526 pid('Is.value' 2 pos('./support/Type.oz' 232 28) nil 2) <Q: 603> nil)
		getLiteral(true x(1))
		return
		endDefinition(64514)
lbl(64526)	unify(x(7) x(6))
lbl(64529)	definition(x(6) 64619 pid('GenericAsk' 3 pos('./support/Type.oz' 237 2) nil 4) <Q: 604> [g(51) x(5)])
lbl(64535)	definition(x(3) 64613 pid('' 1 pos('./support/Type.oz' 238 5) nil 3) unit [x(0) g(0) g(1) x(1)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		testBool(y(1) 64557 64600)
		deAllocateL2
		return
lbl(64557)	move(g(2) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(g(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setValue(g(3))
		setConstant(1)
		setConstant('Type.ask')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64600)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(239)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(64535)
lbl(64613)	unify(x(3) x(2))
		return
		endDefinition(64529)
lbl(64619)	putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(1))
		setVariable(x(5))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setValue(x(6))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		moveMoveXYXY(x(1) y(56) x(2) y(57))
		moveMoveXYXY(x(3) y(58) x(4) y(59))
		move(g(1) x(0))
		move(x(5) x(2))
		putConstant(array x(1))
		genFastCall(<Q: 604> 6)
		move(g(2) x(0))
		move(y(2) x(2))
		putConstant(atom x(1))
		genFastCall(<Q: 604> 6)
		move(g(3) x(0))
		move(y(3) x(2))
		putConstant(bitArray x(1))
		genFastCall(<Q: 604> 6)
		move(g(4) x(0))
		move(y(4) x(2))
		putConstant(bool x(1))
		genFastCall(<Q: 604> 6)
		move(g(5) x(0))
		move(y(5) x(2))
		putConstant(cell x(1))
		genFastCall(<Q: 604> 6)
		move(g(6) x(0))
		move(y(6) x(2))
		putConstant(char x(1))
		genFastCall(<Q: 604> 6)
		move(g(7) x(0))
		move(y(7) x(2))
		putConstant(chunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(8) x(0))
		move(y(8) x(2))
		putConstant('class' x(1))
		genFastCall(<Q: 604> 6)
		move(g(9) x(0))
		move(y(9) x(2))
		putConstant(comparable x(1))
		genFastCall(<Q: 604> 6)
		move(g(10) x(0))
		move(y(10) x(2))
		putConstant(cons x(1))
		genFastCall(<Q: 604> 6)
		move(g(11) x(0))
		move(y(11) x(2))
		putConstant(dictionary x(1))
		genFastCall(<Q: 604> 6)
		move(g(12) x(0))
		move(y(12) x(2))
		putConstant(domainSpec x(1))
		genFastCall(<Q: 604> 6)
		move(g(17) x(0))
		move(y(21) x(2))
		putConstant(int x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(56) x(0) y(14) x(2))
		putConstant(fd x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(59) x(0) y(15) x(2))
		putConstant(fdVector x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(13) x(2))
		putConstant('false' x(1))
		genFastCall(<Q: 604> 6)
		move(g(14) x(0))
		move(y(16) x(2))
		putConstant(feature x(1))
		genFastCall(<Q: 604> 6)
		move(g(15) x(0))
		move(y(17) x(2))
		putConstant(float x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(57) x(0) y(19) x(2))
		putConstant(fset x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(58) x(0) y(20) x(2))
		putConstant(fsetC x(1))
		genFastCall(<Q: 604> 6)
		move(g(16) x(0))
		move(y(18) x(2))
		putConstant(foreignPointer x(1))
		genFastCall(<Q: 604> 6)
		move(g(18) x(0))
		move(y(22) x(2))
		putConstant(list x(1))
		genFastCall(<Q: 604> 6)
		move(g(19) x(0))
		move(y(23) x(2))
		putConstant(literal x(1))
		genFastCall(<Q: 604> 6)
		move(g(20) x(0))
		move(y(24) x(2))
		putConstant('lock' x(1))
		genFastCall(<Q: 604> 6)
		move(g(21) x(0))
		move(y(25) x(2))
		putConstant(name x(1))
		genFastCall(<Q: 604> 6)
		move(g(22) x(0))
		move(y(26) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 604> 6)
		move(g(23) x(0))
		move(y(27) x(2))
		putConstant(number x(1))
		genFastCall(<Q: 604> 6)
		move(g(24) x(0))
		move(y(28) x(2))
		putConstant(object x(1))
		genFastCall(<Q: 604> 6)
		move(g(25) x(0))
		move(y(29) x(2))
		putConstant(ordered x(1))
		genFastCall(<Q: 604> 6)
		move(g(26) x(0))
		move(y(30) x(2))
		putConstant(pair x(1))
		genFastCall(<Q: 604> 6)
		move(g(27) x(0))
		move(y(31) x(2))
		putConstant(port x(1))
		genFastCall(<Q: 604> 6)
		move(g(28) x(0))
		move(y(32) x(2))
		putConstant(procedure x(1))
		genFastCall(<Q: 604> 6)
		move(g(29) x(0))
		move(y(33) x(2))
		putConstant('procedure/0' x(1))
		genFastCall(<Q: 604> 6)
		move(g(30) x(0))
		move(y(34) x(2))
		putConstant('procedure/1' x(1))
		genFastCall(<Q: 604> 6)
		move(g(31) x(0))
		move(y(35) x(2))
		putConstant('procedure/2' x(1))
		genFastCall(<Q: 604> 6)
		move(g(32) x(0))
		move(y(36) x(2))
		putConstant('procedure/3' x(1))
		genFastCall(<Q: 604> 6)
		move(g(33) x(0))
		move(y(37) x(2))
		putConstant('procedure/4' x(1))
		genFastCall(<Q: 604> 6)
		move(g(34) x(0))
		move(y(38) x(2))
		putConstant('procedure/5' x(1))
		genFastCall(<Q: 604> 6)
		move(g(35) x(0))
		move(y(39) x(2))
		putConstant('procedure/6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(36) x(0))
		move(y(40) x(2))
		putConstant('procedure/>6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(37) x(0))
		move(y(41) x(2))
		putConstant(procedureOrObject x(1))
		genFastCall(<Q: 604> 6)
		move(g(38) x(0))
		move(y(42) x(2))
		putConstant(propertyList x(1))
		genFastCall(<Q: 604> 6)
		move(g(39) x(0))
		move(y(43) x(2))
		putConstant(record x(1))
		genFastCall(<Q: 604> 6)
		move(g(40) x(0))
		move(y(44) x(2))
		putConstant(recordC x(1))
		genFastCall(<Q: 604> 6)
		move(g(42) x(0))
		move(y(46) x(2))
		putConstant(recordOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(41) x(0))
		move(y(45) x(2))
		putConstant(recordCOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(43) x(0))
		move(y(47) x(2))
		putConstant(space x(1))
		genFastCall(<Q: 604> 6)
		move(g(44) x(0))
		move(y(48) x(2))
		putConstant(string x(1))
		genFastCall(<Q: 604> 6)
		move(g(45) x(0))
		move(y(49) x(2))
		putConstant('thread' x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(50) x(2))
		putConstant('true' x(1))
		genFastCall(<Q: 604> 6)
		move(g(47) x(0))
		move(y(51) x(2))
		putConstant(tuple x(1))
		genFastCall(<Q: 604> 6)
		move(g(48) x(0))
		move(y(52) x(2))
		putConstant(unary x(1))
		genFastCall(<Q: 604> 6)
		move(g(49) x(0))
		move(y(53) x(2))
		putConstant('unit' x(1))
		genFastCall(<Q: 604> 6)
lbl(65377)	definition(x(0) 65386 pid('Ask.value' 1 pos('./support/Type.oz' 308 24) nil 1) <Q: 605> nil)
		return
		endDefinition(65377)
lbl(65386)	unify(x(0) y(54))
		move(g(50) x(0))
		move(y(55) x(2))
		putConstant(virtualString x(1))
		genFastCall(<Q: 604> 6)
		getRecord('export' ['ask' is] g(52))
		unifyValue(y(1))
		unifyValue(y(0))
		deAllocateL
		return
		endDefinition(64306)
lbl(65413)	tailCall(x(3) 0)
		endDefinition(64276)
lbl(65418)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/1')
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putList(x(3))
		setConstant(is)
		setConstant(nil)
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/FDB')
		setValue(x(3))
		putList(x(8))
		setConstant(isVarB)
		setConstant(nil)
		putList(x(7))
		setConstant(isValueB)
		setValue(x(8))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/FSB')
		setValue(x(7))
		putList(x(10))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['FDB' 'FSB' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(9))
		putRecord('export' ['ask' is] x(1))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(184) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putList(x(4))
		setConstant(46)
		setConstant(nil)
		putList(x(0))
		setConstant(46)
		setConstant(nil)
		putList(x(5))
		setConstant(46)
		setValue(x(0))
lbl(65748)	definition(x(6) 65848 pid('Normalize' 3 pos('./dp/URL.oz' 29 6) nil 7) <P: 606> [x(4) x(5)])
		match(x(0) ht(65833 [onScalar(nil 65757) onRecord('|' 2 65766)]))
lbl(65757)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 28> 5)
lbl(65766)	getVarVar(x(0) x(3))
		move(g(0) x(4))
		testBI('==' [x(0) x(4)]#[x(5)] 65782)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65782)	move(g(1) x(5))
		testBI('==' [x(0) x(5)]#[x(6)] 65818)
		testLiteral(x(1) nil 65806)
		getListValVar(x(2) g(1) x(2))
		move(x(3) x(0))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
lbl(65806)	inlineDot(x(1) 2 x(1) cache)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65818)	putList(x(6))
		setValue(x(0))
		setValue(x(1))
		move(x(3) x(0))
		move(x(6) x(1))
		genFastCall(<P: 606> 7)
lbl(65833)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(65748)
lbl(65848)	definition(x(4) 65865 pid('NormalizePath' 2 pos('./dp/URL.oz' 42 6) nil 3) <P: 607> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
		endDefinition(65848)
lbl(65865)	definition(x(4) 65926 pid('StripLast' 3 pos('./dp/URL.oz' 48 6) nil 5) <P: 608> nil)
		shallowGuard(65913)
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(65879)	shallowThen
		match(x(4) ht(65900 [onScalar(nil 65883) onRecord('|' 2 65890)]))
lbl(65883)	unify(x(1) x(3))
		getLiteral(nil x(2))
		return
lbl(65890)	getListValVar(x(2) x(3) x(2))
		move(x(4) x(0))
		genFastCall(<P: 608> 7)
lbl(65900)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(51)
		setValue(x(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65913)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(48)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(65865)
lbl(65926)	definition(x(4) 66035 pid('PathResolve' 3 pos('./dp/URL.oz' 54 6) nil 6) <P: 609> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(1) 1 x(1) cache)
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(2) x(3))
		putConstant(1 x(2))
		marshalledFastCall(<R: tuple> 8)
		createVariable(y(3))
		testLiteral(y(1) nil 65985)
		unify(y(3) y(2))
		branch(66024)
lbl(65985)	move(y(1) x(0))
		createVariable(x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 608> 6)
		createVariable(y(1))
		testLiteral(y(2) nil 66010)
		getList(y(1))
		unifyLiteral(nil)
		unifyLiteral(nil)
		branch(66013)
lbl(66010)	unify(y(1) y(2))
lbl(66013)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(66024)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<P: 607> 5)
		endDefinition(65926)
lbl(66035)	definition(x(4) 66098 pid('Split' 3 pos('./dp/URL.oz' 71 2) nil 4) <P: 610> nil)
		match(x(0) ht(66083 [onScalar(nil 66044) onRecord('|' 2 66051)]))
lbl(66044)	unify(x(1) x(2))
		getLiteral(nil x(1))
		return
lbl(66051)	getVarVar(x(0) x(3))
		testNumber(x(0) 47 66073)
		getLiteral(nil x(1))
		getList(x(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66073)	getListValVar(x(1) x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66083)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66035)
lbl(66098)	definition(x(4) 66115 pid('SplitPath' 2 pos('./dp/URL.oz' 80 2) nil 3) <P: 611> nil)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		genFastCall(<P: 610> 7)
		endDefinition(66098)
lbl(66115)	definition(x(4) 66693 pid('StringToUrl' 2 pos('./dp/URL.oz' 86 6) nil 4) <P: 612> [y(55) y(54) y(146) y(160) y(82)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(66153)
		move(x(0) y(2))
		createCond(66147)
lbl(66135)	lastClause
		clause
		ask
lbl(66138)	putRecord(illegalUrl 1 x(0))
		setValue(y(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66147)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66153)	createVariable(y(2))
		testLiteral(y(0) nil 66164)
		getLiteral(url y(2))
		branch(66685)
lbl(66164)	move(y(0) x(1))
		putConstant(35 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(5))
		testBool(y(3) 66203 66211)
		getRecord(o [fragment] y(5))
		unifyVariable(x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(2))
		putConstant(35 x(1))
		genFastCall(<P: 2> 8)
		branch(66222)
lbl(66203)	unify(y(4) y(0))
		getLiteral(o y(5))
		branch(66222)
lbl(66211)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(95)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66222)	createVariable(y(3))
		createVariable(y(6))
		testLiteral(y(4) nil 66238)
lbl(66230)	unify(y(3) y(4))
		getLiteral(o y(6))
		branch(66305)
lbl(66238)	move(y(4) x(0))
		inlineDot(x(0) 2 x(1) cache)
		putConstant(58 x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(7) 66230 66294)
lbl(66260)	getRecord(o [scheme] y(6))
		unifyVariable(y(7))
		moveMoveYXYX(y(4) x(0) y(3) x(3))
		putConstant(58 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 2> 8)
		move(y(8) x(0))
		move(g(1) x(1))
		move(y(7) x(2))
		genFastCall(<P: 29> 6)
		branch(66305)
lbl(66294)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66305)	putList(x(1))
		setConstant(47)
		setConstant(nil)
		putList(x(0))
		setConstant(47)
		setValue(x(1))
		move(y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 78> 6)
		createVariable(y(7))
		createVariable(y(8))
		testBool(y(4) 66436 66444)
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		inlineDot(x(3) 2 x(0) cache)
		moveMoveXYYX(x(0) y(3) y(3) x(1))
		putConstant(47 x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 66405 66425)
		getList(y(7))
		unifyNumber(47)
		unifyVariable(x(3))
		getRecord(o [netloc] y(8))
		unifyVariable(y(4))
		move(y(3) x(0))
		putConstant(47 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 2> 8)
		move(y(9) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		branch(66455)
lbl(66405)	getLiteral(nil y(7))
		getRecord(o [netloc] y(8))
		unifyVariable(x(2))
		move(y(3) x(0))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		branch(66455)
lbl(66425)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66436)	unify(y(7) y(3))
		getLiteral(o y(8))
		branch(66455)
lbl(66444)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(108)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66455)	move(y(7) x(1))
		putConstant(63 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(9))
		testBool(y(3) 66494 66502)
		getRecord(o [query] y(9))
		unifyVariable(x(3))
		moveMoveYXYX(y(7) x(0) y(4) x(2))
		putConstant(63 x(1))
		genFastCall(<P: 2> 8)
		branch(66513)
lbl(66494)	unify(y(4) y(7))
		getLiteral(o y(9))
		branch(66513)
lbl(66502)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66513)	move(y(4) x(1))
		putConstant(59 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(7))
		createVariable(y(10))
		testBool(y(3) 66552 66560)
		getRecord(o [parameter] y(10))
		unifyVariable(x(3))
		moveMoveYXYX(y(4) x(0) y(7) x(2))
		putConstant(59 x(1))
		genFastCall(<P: 2> 8)
		branch(66571)
lbl(66552)	unify(y(7) y(4))
		getLiteral(o y(10))
		branch(66571)
lbl(66560)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66571)	createVariable(y(3))
		match(y(7) ht(66644 [onScalar(nil 66576) onRecord('|' 2 66581)]))
lbl(66576)	getLiteral(o y(3))
		branch(66657)
lbl(66581)	getVarVar(x(0) x(2))
		getRecord(o [path] y(3))
		unifyVariable(x(3))
		testNumber(x(0) 47 66619)
		getRecord(abs 1 x(3))
		unifyVariable(y(4))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66657)
lbl(66619)	getRecord(rel 1 x(3))
		unifyVariable(y(4))
		move(y(7) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(11) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66657)
lbl(66644)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(137)
		setValue(y(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66657)	putRecord('#' 6 x(0))
		setValue(y(6))
		setValue(y(5))
		setValue(y(8))
		setValue(y(9))
		setValue(y(10))
		setValue(y(3))
		move(g(4) x(1))
		move(y(2) x(3))
		putConstant(url x(2))
		genFastCall(<P: 163> 8)
lbl(66685)	unify(y(1) y(2))
		popEx
		deAllocateL
		return
		endDefinition(66115)
lbl(66693)	definition(x(4) 66742 pid('UrlIsAbs' 2 pos('./dp/URL.oz' 148 3) nil 4) <P: 613> nil)
		putConstant(scheme x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66710)
		getLiteral(true x(1))
		return
lbl(66710)	putConstant(path x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66736)
		inlineDot(x(0) path x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(abs x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(66736)	getLiteral(false x(1))
		return
		endDefinition(66693)
lbl(66742)	definition(x(5) 66785 pid('Copy' 3 pos('./dp/URL.oz' 154 6) nil 6) <P: 614> nil)
		match(x(0) ht(66770 [onScalar(nil 66751) onRecord('|' 2 66752)]))
lbl(66751)	return
lbl(66752)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(4))
		move(x(3) x(0))
		genFastCall(<P: 614> 7)
lbl(66770)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(157)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66742)
lbl(66785)	definition(x(5) 66858 pid('Project' 3 pos('./dp/URL.oz' 160 6) nil 4) <P: 615> nil)
		allocateL3
lbl(66792)	definition(x(3) 66810 pid('' 2 pos('./dp/URL.oz' 161 16) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(66792)
lbl(66810)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 614> 7)
		endDefinition(66785)
lbl(66858)	definition(x(5) 67157 pid('UrlResolve' 3 pos('./dp/URL.oz' 169 6) nil 6) <P: 616> nil)
		testLiteral(x(0) url 66872)
		unify(x(2) x(1))
		return
lbl(66872)	testLiteral(x(1) url 66880)
		unify(x(2) x(0))
		return
lbl(66880)	putConstant(scheme x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66891)
		unify(x(2) x(1))
		return
lbl(66891)	putConstant(netloc x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66932)
		allocateL3
		putList(x(3))
		setConstant(scheme)
		setConstant(nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66932)	putConstant(path x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 67080)
		inlineDot(x(1) path x(3) cache)
		callBI('Label' [x(3)]#[x(4)])
		testLiteral(x(4) abs 66992)
		allocateL3
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66992)	allocateL4
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		putRecord(abs 1 x(1))
		setConstant(nil)
		move(y(0) x(3))
		putConstant(path x(4))
		callBI('CondSelect' [x(3) x(4) x(1)]#[x(5)])
		inlineDot(x(0) path x(1) cache)
		move(x(2) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 609> 6)
		move(y(0) x(0))
		putConstant(path x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL4
		return
lbl(67080)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		putConstant(parameter x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 67103)
		getLiteral(nil y(3))
		branch(67109)
lbl(67103)	getList(y(3))
		unifyLiteral(query)
		unifyLiteral(nil)
lbl(67109)	putList(x(3))
		setConstant(parameter)
		setValue(y(3))
		putList(x(2))
		setConstant(path)
		setValue(x(3))
		putList(x(0))
		setConstant(netloc)
		setValue(x(2))
		putList(x(1))
		setConstant(scheme)
		setValue(x(0))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(66858)
lbl(67157)	definition(x(6) 67461 pid('UrlToVs' 2 pos('./dp/URL.oz' 200 3) nil 9) <P: 617> nil)
		allocateL6
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		putConstant(scheme x(7))
		testBI('HasFeature' [x(0) x(7)]#[x(8)] 67221)
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral('://')
		inlineDot(x(0) scheme x(7) cache)
		unify(x(7) x(1))
		branch(67224)
lbl(67221)	getLiteral('' x(1))
lbl(67224)	move(y(0) x(0))
		putConstant(netloc x(1))
		putConstant('' x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(1))
		putConstant(path x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67352)
		inlineDot(x(0) path x(1) cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		callBI('Label' [x(1)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		testLiteral(x(4) abs 67277)
		getLiteral('/' x(2))
		branch(67280)
lbl(67277)	getLiteral('' x(2))
lbl(67280)	move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
		testLiteral(x(1) nil 67298)
		getLiteral('' y(2))
		branch(67355)
lbl(67298)	inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 2 x(4) cache)
lbl(67310)	definition(x(1) 67329 pid('' 3 pos('./dp/URL.oz' 207 18) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral('/')
		unifyValue(x(1))
		return
		endDefinition(67310)
lbl(67329)	inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(5) 1 x(2) cache)
		move(x(4) x(0))
		move(y(2) x(3))
		genFastCall(<P: 30> 8)
		branch(67355)
lbl(67352)	getLiteral('' y(2))
lbl(67355)	move(y(0) x(0))
		putConstant(parameter x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67384)
		getRecord('#' 2 y(3))
		unifyLiteral(';')
		unifyVariable(x(1))
		inlineDot(x(0) parameter x(2) cache)
		unify(x(2) x(1))
		branch(67387)
lbl(67384)	getLiteral('' y(3))
lbl(67387)	move(y(0) x(0))
		putConstant(query x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67416)
		getRecord('#' 2 y(4))
		unifyLiteral('?')
		unifyVariable(x(1))
		inlineDot(x(0) query x(2) cache)
		unify(x(2) x(1))
		branch(67419)
lbl(67416)	getLiteral('' y(4))
lbl(67419)	move(y(0) x(0))
		putConstant(fragment x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67454)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(1))
		unifyNumber(35)
		unifyLiteral(nil)
		inlineDot(x(0) fragment x(1) cache)
		unify(x(1) x(2))
		deAllocateL6
		return
lbl(67454)	getLiteral('' y(5))
		deAllocateL6
		return
		endDefinition(67157)
lbl(67461)	definition(x(7) 67488 pid('VsToUrl' 2 pos('./dp/URL.oz' 217 3) nil 2) <P: 618> [y(170)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 612> 5)
		endDefinition(67461)
lbl(67488)	definition(x(8) 67515 pid('UrlToAtom' 2 pos('./dp/URL.oz' 221 3) nil 2) <P: 619> [y(169)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 617> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 195> 5)
		endDefinition(67488)
lbl(67515)	definition(x(2) 67552 pid('' 2 pos('./dp/URL.oz' 227 3) nil 2) <P: 620> [x(7) x(4) x(5) x(8) x(6)])
		putConstant(nil x(0))
lbl(67524)	definitionCopy(x(0) 67547 pid('/body' 0 pos('./dp/URL.oz' 227 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4)])
		getRecord('export' [fromVs isAbsUrl resolve toAtom toVs] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		return
		endDefinition(67524)
lbl(67547)	tailCall(x(0) 0)
		endDefinition(67515)
lbl(67552)	putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/2' x(8))
		putRecord('export' [fromVs isAbsUrl resolve toAtom toVs] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		putConstant('import' x(0))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(146) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(146) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) fromVs x(2) cache)
		putList(x(18))
		setConstant(89)
		setConstant(nil)
		putList(x(17))
		setConstant(77)
		setValue(x(18))
		putList(x(16))
		setConstant(77)
		setValue(x(17))
		putList(x(15))
		setConstant(85)
		setValue(x(16))
		putList(x(14))
		setConstant(68)
		setValue(x(15))
		putList(x(13))
		setConstant(47)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(111)
		setValue(x(12))
		putList(x(10))
		setConstant(111)
		setValue(x(11))
		putList(x(9))
		setConstant(98)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(185) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) fromVs x(2) cache)
		putList(x(20))
		setConstant(89)
		setConstant(nil)
		putList(x(19))
		setConstant(77)
		setValue(x(20))
		putList(x(18))
		setConstant(77)
		setValue(x(19))
		putList(x(17))
		setConstant(85)
		setValue(x(18))
		putList(x(16))
		setConstant(68)
		setValue(x(17))
		putList(x(15))
		setConstant(47)
		setValue(x(16))
		putList(x(14))
		setConstant(109)
		setValue(x(15))
		putList(x(13))
		setConstant(101)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(121)
		setValue(x(11))
		putList(x(9))
		setConstant(115)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(186) x(1))
		call(x(2) 2)
		move(y(185) x(0))
		inlineDot(x(0) scheme x(0) cache)
		move(y(186) x(1))
		inlineDot(x(1) scheme x(2) cache)
		unify(x(2) x(0))
		putRecord(url ['functor' home pickle] x(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
lbl(67891)	definition(x(1) 67900 pid('Swallow' 1 pos('./init/Module.oz' 41 3) nil 1) <P: 621> nil)
		return
		endDefinition(67891)
lbl(67900)	putList(x(26))
		setConstant('Misc')
		setConstant(nil)
		putList(x(25))
		setConstant('Type')
		setValue(x(26))
		putList(x(24))
		setConstant('RunTimeLibrary')
		setValue(x(25))
		putList(x(23))
		setConstant('Compiler')
		setValue(x(24))
		putList(x(22))
		setConstant('TkTools')
		setValue(x(23))
		putList(x(21))
		setConstant('Tk')
		setValue(x(22))
		putList(x(20))
		setConstant('Open')
		setValue(x(21))
		putList(x(19))
		setConstant('URL')
		setValue(x(20))
		putList(x(18))
		setConstant('VirtualSite')
		setValue(x(19))
		putList(x(17))
		setConstant('Remote')
		setValue(x(18))
		putList(x(16))
		setConstant('Connection')
		setValue(x(17))
		putList(x(15))
		setConstant('Fault')
		setValue(x(16))
		putList(x(14))
		setConstant('Foreign')
		setValue(x(15))
		putList(x(13))
		setConstant('Finalize')
		setValue(x(14))
		putList(x(12))
		setConstant('ErrorRegistry')
		setValue(x(13))
		putList(x(11))
		setConstant('Error')
		setValue(x(12))
		putList(x(10))
		setConstant('FS')
		setValue(x(11))
		putList(x(9))
		setConstant('Schedule')
		setValue(x(10))
		putList(x(8))
		setConstant('FD')
		setValue(x(9))
		putList(x(7))
		setConstant('Search')
		setValue(x(8))
		putList(x(6))
		setConstant('Servlet')
		setValue(x(7))
		putList(x(5))
		setConstant('Syslet')
		setValue(x(6))
		putList(x(4))
		setConstant('Applet')
		setValue(x(5))
		putList(x(3))
		setConstant('GetArgs')
		setValue(x(4))
		putList(x(2))
		setConstant('Application')
		setValue(x(3))
		putList(x(36))
		setConstant('GumpParser')
		setConstant(nil)
		putList(x(35))
		setConstant('GumpScanner')
		setValue(x(36))
		putList(x(34))
		setConstant('Gump')
		setValue(x(35))
		putList(x(33))
		setConstant('Profiler')
		setValue(x(34))
		putList(x(32))
		setConstant('Ozcar')
		setValue(x(33))
		putList(x(31))
		setConstant('Emacs')
		setValue(x(32))
		putList(x(30))
		setConstant('CompilerPanel')
		setValue(x(31))
		putList(x(29))
		setConstant('Explorer')
		setValue(x(30))
		putList(x(28))
		setConstant('Browser')
		setValue(x(29))
		putList(x(27))
		setConstant('Panel')
		setValue(x(28))
		putList(x(42))
		setConstant('System')
		setConstant(nil)
		putList(x(41))
		setConstant('Pickle')
		setValue(x(42))
		putList(x(40))
		setConstant('Property')
		setValue(x(41))
		putList(x(39))
		setConstant('OS')
		setValue(x(40))
		putList(x(38))
		setConstant('Resolve')
		setValue(x(39))
		putList(x(37))
		setConstant('Module')
		setValue(x(38))
		putRecord(defaults [lib tools volatile] y(185))
		setValue(x(2))
		setValue(x(27))
		setValue(x(37))
		move(y(146) x(2))
		inlineDot(x(2) fromVs x(3) cache)
		putList(x(22))
		setConstant(89)
		setConstant(nil)
		putList(x(21))
		setConstant(77)
		setValue(x(22))
		putList(x(20))
		setConstant(77)
		setValue(x(21))
		putList(x(19))
		setConstant(85)
		setValue(x(20))
		putList(x(18))
		setConstant(68)
		setValue(x(19))
		putList(x(17))
		setConstant(47)
		setValue(x(18))
		putList(x(16))
		setConstant(109)
		setValue(x(17))
		putList(x(15))
		setConstant(101)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(115)
		setValue(x(14))
		putList(x(12))
		setConstant(121)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(47)
		setValue(x(11))
		putList(x(9))
		setConstant(47)
		setValue(x(10))
		putList(x(8))
		setConstant(58)
		setValue(x(9))
		putList(x(7))
		setConstant(122)
		setValue(x(8))
		putList(x(6))
		setConstant(111)
		setValue(x(7))
		putList(x(5))
		setConstant(45)
		setValue(x(6))
		putList(x(4))
		setConstant(120)
		setValue(x(5))
		moveMoveXYXY(x(0) y(186) x(1) y(187))
		move(x(4) x(0))
		createVariableMove(y(188) x(1))
		call(x(3) 2)
		move(y(185) x(0))
		inlineDot(x(0) volatile x(1) cache)
		inlineDot(x(0) lib x(3) cache)
		inlineDot(x(0) tools x(4) cache)
		move(x(1) y(185))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(192) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(185) x(0) y(192) x(1))
		createVariableMove(y(208) x(2))
		genFastCall(<P: 21> 6)
lbl(68340)	definition(x(1) 68395 pid('' 2 pos('./init/Module.oz' 56 3) nil 4) <P: 622> [y(146) y(188)])
		allocateL3
		getRecord('#' 2 x(1))
		unifyValVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) resolve x(2) cache)
		inlineDot(x(1) fromVs x(3) cache)
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(1) x(3))
		move(g(1) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(68340)
lbl(68395)	move(y(208) x(0))
		createVariableMove(y(185) x(2))
		genFastCall(<P: 29> 6)
		putConstant(map x(7))
		move(y(185) x(0))
		callBI(record [x(7) x(0)]#[x(8)])
lbl(68413)	definition(x(7) 68476 pid('ModNameToUrl' 2 pos('./init/Module.oz' 63 3) nil 5) <P: 623> [y(169) x(8) y(146)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 68447)
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
lbl(68447)	move(g(2) x(2))
		inlineDot(x(2) fromVs x(3) cache)
		putRecord('#' 2 x(4))
		setValue(y(1))
		setConstant('.ozf')
		move(x(4) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(68413)
lbl(68476)	definition(x(7) 68512 pid('NameOrUrlToUrl' 3 pos('./init/Module.oz' 75 3) nil 4) <P: 624> [y(146)])
		testLiteral(x(1) <N: NONE> 68492)
		move(x(2) x(1))
		genFastCall(<P: 623> 5)
lbl(68492)	move(g(0) x(0))
		inlineDot(x(0) fromVs x(3) cache)
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
		endDefinition(68476)
lbl(68512)	putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('feat' [<N: ModuleMap>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(68524)	definition(x(7) 68547 pid('BaseManager,init/fast' 0 pos('./init/Module.oz' 88 6) nil 2) <P: 625> [y(132)])
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		return
		endDefinition(68524)
lbl(68547)	definition(x(8) 68561 pid('BaseManager,init/slow' 1 pos('./init/Module.oz' 88 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 625> 1)
		endDefinition(68547)
lbl(68561)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(68571)	definition(x(7) 68737 pid('BaseManager,Link/fast' 2 pos('./init/Module.oz' 92 6) nil 4) <P: 626> [y(146) y(156) y(149) y(186) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intLink 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(68733 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 68661)
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(68732)
lbl(68661)	getSelf(x(2))
lbl(68663)	definition(x(3) 68723 pid('' 1 pos('./init/Module.oz' 100 7) nil 6) unit [x(2) y(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		putConstant(scheme x(3))
		putConstant(unit x(4))
		callBI('CondSelect' [x(2) x(3) x(4)]#[x(5)])
		move(g(2) x(3))
		testBI('==' [x(5) x(3)]#[x(4)] 68707)
		getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(system x(4) 2 cache)
lbl(68707)	getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(load x(4) 2 cache)
		endDefinition(68663)
lbl(68723)	callBI('ByNeed' [x(3)]#[x(2)])
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(1) x(2))
lbl(68732)	return
lbl(68733)	deAllocateL3
		return
		endDefinition(68571)
lbl(68737)	definition(x(8) 68772 pid('BaseManager,Link/slow' 1 pos('./init/Module.oz' 92 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 626> 5)
		endDefinition(68737)
lbl(68772)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: Link>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(185))
lbl(68784)	definition(x(7) 68956 pid('BaseManager,Apply/fast' 3 pos('./init/Module.oz' 114 6) nil 5) <P: 627> [y(146) y(164) y(185)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) toAtom x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(x(4) 2)
		putRecord(intApply 1 x(0))
		setValue(y(3))
		getSelf(x(3))
		sendMsg(trace x(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) 'import' x(3) cache)
		getSelf(x(4))
lbl(68839)	definition(x(1) 68927 pid('' 3 pos('./init/Module.oz' 118 6) nil 6) unit [x(4) g(0) y(0) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		move(x(2) y(0))
		createVariable(y(1))
		putConstant('from' x(4))
		testBI('HasFeature' [x(1) x(4)]#[x(5)] 68889)
		move(g(1) x(0))
		inlineDot(x(0) fromVs x(4) cache)
		inlineDot(x(1) 'from' x(5) cache)
		move(x(5) x(0))
		move(y(1) x(1))
		call(x(4) 2)
		branch(68895)
lbl(68889)	move(y(1) x(1))
		genFastCall(<P: 623> 4)
lbl(68895)	move(g(1) x(0))
		inlineDot(x(0) resolve x(3) cache)
		move(g(2) x(0))
		move(y(1) x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(3) true <N: Link> true 2) 0)
		endDefinition(68839)
lbl(68927)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailCall(x(2) 2)
		endDefinition(68784)
lbl(68956)	definition(x(8) 68997 pid('BaseManager,Apply/slow' 1 pos('./init/Module.oz' 114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 627> 7)
		endDefinition(68956)
lbl(68997)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Apply>)
		setValue(x(8))
		setValue(x(7))
lbl(69007)	definition(x(7) 69119 pid('BaseManager,Enter/fast' 2 pos('./init/Module.oz' 131 6) nil 4) <P: 628> [y(146) y(156) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intEnter 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(69115 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 69100)
		putRecord(module 2 x(0))
		setConstant(alreadyInstalled)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(69100)	getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(69114)	return
lbl(69115)	deAllocateL3
		return
		endDefinition(69007)
lbl(69119)	definition(x(8) 69154 pid('BaseManager,Enter/slow' 1 pos('./init/Module.oz' 131 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 628> 5)
		endDefinition(69119)
lbl(69154)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: Enter>)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern [1 name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69174)	definition(x(8) 69305 pid('BaseManager,link' 1 pos('./init/Module.oz' 147 6) nil 4) unit [x(7) y(185)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69211)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
lbl(69211)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69234)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(2))
		branch(69237)
lbl(69234)	getLiteral(<N: NONE> y(2))
lbl(69237)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69260)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69263)
lbl(69260)	getLiteral(<N: NONE> y(3))
lbl(69263)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(1) true <N: Link> false 2) 0)
		move(y(0) x(0))
		putConstant(1 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 69301)
		move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(69301)	deAllocateL5
		return
		endDefinition(69174)
lbl(69305)	putList(x(7))
		setConstant(link)
		setValue(x(8))
		putRecord(messagePattern [1 2 name url] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69323)	definition(x(13) 69466 pid('BaseManager,apply' 1 pos('./init/Module.oz' 156 6) nil 4) unit [x(8) y(185)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69369)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(69369)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69392)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(69395)
lbl(69392)	getLiteral(<N: NONE> y(3))
lbl(69395)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69418)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(69421)
lbl(69418)	getLiteral(<N: NONE> y(4))
lbl(69421)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(1) true <N: Apply> false 3) 0)
		move(y(0) x(0))
		putConstant(2 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 69462)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(69462)	deAllocateL6
		return
		endDefinition(69323)
lbl(69466)	putList(x(8))
		setConstant(apply)
		setValue(x(13))
		putRecord(messagePattern [1 name url] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69482)	definition(x(14) 69581 pid('BaseManager,enter' 1 pos('./init/Module.oz' 166 6) nil 4) unit [x(13) y(185)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(name x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69530)
		inlineDot(x(0) name x(2) cache)
		unify(x(2) y(2))
		branch(69533)
lbl(69530)	getLiteral(<N: NONE> y(2))
lbl(69533)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69556)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69559)
lbl(69556)	getLiteral(<N: NONE> y(3))
lbl(69559)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(1) true <N: Enter> true 2) 0)
		endDefinition(69482)
lbl(69581)	putList(x(13))
		setConstant(enter)
		setValue(x(14))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(7))
		setValue(x(8))
		setValue(x(13))
		move(y(185) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('BaseManager' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(69620)	definition(x(2) 70474 pid('' 2 pos('./init/Module.oz' 178 3) nil 4) <P: 629> [y(187) y(185) y(146) y(55)])
		putList(x(2))
		setPredicateRef(<Q: 630>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 631>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 632>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 633>)
		setValue(x(2))
lbl(69650)	definitionCopy(x(3) 70469 pid('/body' 0 pos('./init/Module.oz' 178 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL5
		move(g(0) x(0))
		inlineDot(x(0) 'Pickle' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'OS' x(3) cache)
		inlineDot(x(0) 'Boot' x(4) cache)
		inlineDot(x(3) getEnv x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		putConstant('OZ_TRACE_MODULE' x(0))
		createVariableMove(y(3) x(1))
		call(x(3) 2)
		createVariable(y(4))
		testLiteral(y(3) false 69718)
		unify(y(4) g(1))
		branch(69730)
lbl(69718)	move(y(1) x(0))
		inlineDot(x(0) show x(1) cache)
		unify(x(1) y(4))
lbl(69730)	putList(x(0))
		setValue(g(2))
		setConstant(nil)
lbl(69736)	definition(x(7) 69747 pid('RootManager,trace/fast' 1 pos('./init/Module.oz' 196 2) nil 1) <Q: 630> [y(4)])
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(69736)
lbl(69747)	definition(x(8) 69773 pid('RootManager,trace/slow' 1 pos('./init/Module.oz' 196 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 630> 3)
		endDefinition(69747)
lbl(69773)	putRecord('#' [1 2 fast] x(9))
		setConstant(trace)
		setValue(x(8))
		setValue(x(7))
lbl(69783)	definition(x(7) 69850 pid('RootManager,load/fast' 2 pos('./init/Module.oz' 200 2) nil 6) <Q: 631> [y(0) g(3)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) load x(3) cache)
		move(g(1) x(4))
		inlineDot(x(4) toVs x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg(<N: Apply> x(4) 3 cache)
		endDefinition(69783)
lbl(69850)	definition(x(8) 69885 pid('RootManager,load/slow' 1 pos('./init/Module.oz' 200 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 631> 5)
		endDefinition(69850)
lbl(69885)	putRecord('#' [1 2 fast] x(10))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(69895)	definition(x(7) 70280 pid('RootManager,system/fast' 2 pos('./init/Module.oz' 205 2) nil 5) <Q: 632> [g(3) g(4) y(2) y(0)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(systemOrBoot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		exHandler(70076)
		move(x(0) y(2))
		createCond(70070)
lbl(69943)	nextClause(70007)
		clause
		thread(69977)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(url 2 x(1))
		unifyLiteral(load)
		unifyVoid(1)
		deAllocateL5
		return
lbl(69977)	ask
lbl(69978)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(systemNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70007)	lastClause
		clause
		thread(70040)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(system 2 x(1))
		unifyLiteral(unknownBootModule)
		unifyVoid(1)
		deAllocateL5
		return
lbl(70040)	ask
lbl(70041)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(bootNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70070)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70076)	move(y(0) x(0))
		inlineDot(x(0) netloc x(1) cache)
		callBI('StringToAtom' [x(1)]#[x(2)])
		inlineDot(x(0) path x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(46 x(1))
		createVariableMove(y(3) x(2))
		createVariable(x(3))
		genFastCall(<P: 2> 8)
		createVariable(y(4))
		match(y(2) ht(70259 [onScalar(boot 70128) onScalar(system 70179)]))
lbl(70128)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(boot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) manager x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		call(x(2) 2)
		branch(70272)
lbl(70179)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(system 2 x(0))
		setValue(y(3))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(3) x(0))
		inlineDot(x(0) load x(2) cache)
		putRecord('#' 3 x(3))
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setValue(y(3))
		setConstant('.ozf')
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(<N: Apply> x(4) 3 cache)
		branch(70272)
lbl(70259)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(220)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70272)	unify(y(1) y(4))
		popEx
		deAllocateL5
		return
		endDefinition(69895)
lbl(70280)	definition(x(8) 70315 pid('RootManager,system/slow' 1 pos('./init/Module.oz' 205 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 632> 5)
		endDefinition(70280)
lbl(70315)	putRecord('#' [1 2 fast] x(11))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('RootManager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(70374)	definition(x(7) 70388 pid('Manager,system/fast' 2 pos('./init/Module.oz' 235 2) nil 3) <Q: 633> [y(1)])
		tailSendMsg(<N: Link> g(0) 2 cache)
		endDefinition(70374)
lbl(70388)	definition(x(8) 70423 pid('Manager,system/slow' 1 pos('./init/Module.oz' 235 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 633> 5)
		endDefinition(70388)
lbl(70423)	putRecord('#' [1 2 fast] x(9))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Manager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [manager root] g(5))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL5
		return
		endDefinition(69650)
lbl(70469)	tailCall(x(3) 0)
		endDefinition(69620)
lbl(70474)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		putConstant('class' x(4))
		putConstant(object x(5))
		putRecord('export' [manager root] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(70530)	definition(x(2) 70883 pid('' 2 pos('./compiler/FunMisc.oz' 1 0) nil 4) <P: 634> [y(53) y(39) y(52) y(47) y(54)])
		putList(x(2))
		setPredicateRef(<Q: 635>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 636>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 637>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 638>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAConstruction>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAValueNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAVariableOccurrence>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAToken>)
		setValue(x(2))
lbl(70584)	definitionCopy(x(3) 70878 pid('/body' 0 pos('./compiler/FunMisc.oz' 1 0) [once] 5) unit [x(0) g(0) g(1) g(2) g(3) g(4) x(1)])
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
lbl(70599)	definition(x(2) 70625 pid('IsIDChar' 2 pos('./compiler/Misc.oz' 27 3) nil 4) <Q: 635> [g(1)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 70613)
		getLiteral(true x(1))
		return
lbl(70613)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(70599)
lbl(70625)	definition(x(3) 70696 pid('IsQuotedVariable' 2 pos('./compiler/Misc.oz' 31 3) nil 3) <Q: 636> nil)
		match(x(0) ht(70681 [onScalar(nil 70634) onRecord('|' 2 70638)]))
lbl(70634)	getLiteral(false x(1))
		return
lbl(70638)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 70663)
lbl(70654)	testLiteral(y(2) nil 70663)
lbl(70658)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(70663)	testNumber(y(1) 0 70672)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(70672)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 636> 5)
lbl(70681)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(38)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(70625)
lbl(70696)	definition(x(3) 70768 pid('IsPrintName' 2 pos('./compiler/Misc.oz' 41 3) nil 4) <Q: 637> [g(2) g(3) x(2)])
		testBI('IsAtom' [x(0)]#[x(2)] 70762)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70749 [onScalar(nil 70712) onRecord('|' 2 70716)]))
lbl(70712)	getLiteral(false x(1))
		return
lbl(70716)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 70729)
lbl(70723)	move(x(2) x(0))
		genFastCall(<Q: 636> 5)
lbl(70729)	testBI('Char.isUpper' [x(0)]#[x(3)] 70745)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(70745)	getLiteral(false x(1))
		return
lbl(70749)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(53)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70762)	getLiteral(false x(1))
		return
		endDefinition(70696)
lbl(70768)	definition(x(2) 70843 pid('DowncasePrintName' 2 pos('./compiler/Misc.oz' 58 0) nil 5) <Q: 638> [g(2) g(3) g(4) g(5)])
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70828 [onScalar(nil 70780) onRecord('|' 2 70784)]))
lbl(70780)	unify(x(1) x(0))
		return
lbl(70784)	getVarVar(x(2) x(3))
		testBI('Char.isUpper' [x(2)]#[x(4)] 70807)
		callBI('Char.toLower' [x(2)]#[x(0)])
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		callBI('StringToAtom' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(70807)	testNumber(x(2) 96 70815)
lbl(70811)	unify(x(1) x(0))
		return
lbl(70815)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(63)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70828)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(66)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(70768)
lbl(70843)	inlineDot(x(1) nameVariable x(4) cache)
		inlineDot(x(1) isBuiltin x(1) cache)
		getRecord('export' [downcasePrintName imAConstruction imAToken imAValueNode imAVariableOccurrence isBuiltin isPrintName nameVariable] g(6))
		unifyValue(x(2))
		unifyLiteral(<M: ImAConstruction>)
		unifyLiteral(<M: ImAToken>)
		unifyLiteral(<M: ImAValueNode>)
		unifyLiteral(<M: ImAVariableOccurrence>)
		unifyValue(x(1))
		unifyValue(x(3))
		unifyValue(x(4))
		return
		endDefinition(70584)
lbl(70878)	tailCall(x(3) 0)
		endDefinition(70530)
lbl(70883)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord('import' ['CompilerSupport'] x(0))
		setValue(x(1))
		putConstant('procedure/2' x(4))
		putConstant(name x(5))
		putConstant(name x(6))
		putConstant(name x(7))
		putConstant(name x(8))
		putConstant(value x(9))
		putConstant('procedure/2' x(10))
		putConstant(value x(11))
		putRecord('export' [downcasePrintName imAConstruction imAToken imAValueNode imAVariableOccurrence isBuiltin isPrintName nameVariable] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(54) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(any 1 x(4))
		setConstant(det)
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setConstant(det)
		setValue(x(3))
		putList(x(1))
		setConstant(det)
		setValue(x(2))
		putList(x(6))
		setConstant(false)
		setConstant(nil)
		putList(x(5))
		setConstant(false)
		setValue(x(6))
		putList(x(9))
		setConstant(number)
		setConstant(nil)
		putList(x(8))
		setConstant(number)
		setValue(x(9))
		putList(x(7))
		setConstant(number)
		setValue(x(8))
		putRecord(builtin [det imods types] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(7))
		putRecord(any 1 x(14))
		setConstant(det)
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(12))
		setConstant(det)
		setValue(x(13))
		putList(x(11))
		setConstant(det)
		setValue(x(12))
		putList(x(16))
		setConstant(false)
		setConstant(nil)
		putList(x(15))
		setConstant(false)
		setValue(x(16))
		putList(x(19))
		setConstant(number)
		setConstant(nil)
		putList(x(18))
		setConstant(number)
		setValue(x(19))
		putList(x(17))
		setConstant(number)
		setValue(x(18))
		putRecord(builtin [det imods types] x(10))
		setValue(x(11))
		setValue(x(15))
		setValue(x(17))
		putRecord(any 1 x(23))
		setConstant(det)
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(21))
		setConstant(det)
		setValue(x(22))
		putList(x(24))
		setConstant(false)
		setConstant(nil)
		putList(x(26))
		setConstant(int)
		setConstant(nil)
		putList(x(25))
		setConstant(int)
		setValue(x(26))
		putRecord(builtin [det imods types] x(20))
		setValue(x(21))
		setValue(x(24))
		setValue(x(25))
		putList(x(29))
		setConstant(det)
		setConstant(nil)
		putList(x(28))
		setConstant(det)
		setValue(x(29))
		putList(x(31))
		setConstant(false)
		setConstant(nil)
		putList(x(30))
		setConstant(false)
		setValue(x(31))
		putList(x(33))
		setConstant(record)
		setConstant(nil)
		putList(x(32))
		setConstant('class')
		setValue(x(33))
		putRecord(builtin [det imods types] x(27))
		setValue(x(28))
		setValue(x(30))
		setValue(x(32))
		putRecord(any 1 x(38))
		setConstant(det)
		putList(x(37))
		setValue(x(38))
		setConstant(nil)
		putList(x(36))
		setConstant(det)
		setValue(x(37))
		putList(x(35))
		setConstant(det)
		setValue(x(36))
		putList(x(40))
		setConstant(false)
		setConstant(nil)
		putList(x(39))
		setConstant(false)
		setValue(x(40))
		putList(x(43))
		setConstant(number)
		setConstant(nil)
		putList(x(42))
		setConstant(number)
		setValue(x(43))
		putList(x(41))
		setConstant(number)
		setValue(x(42))
		putRecord(builtin [det imods types] x(34))
		setValue(x(35))
		setValue(x(39))
		setValue(x(41))
		putRecord(any 1 x(47))
		setConstant(det)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant(det)
		setValue(x(46))
		putList(x(48))
		setConstant(false)
		setConstant(nil)
		putList(x(50))
		setConstant(int)
		setConstant(nil)
		putList(x(49))
		setConstant(int)
		setValue(x(50))
		putRecord(builtin [det imods types] x(44))
		setValue(x(45))
		setValue(x(48))
		setValue(x(49))
		putList(x(54))
		setConstant(any)
		setConstant(nil)
		putList(x(53))
		setConstant(det)
		setValue(x(54))
		putList(x(52))
		setConstant(detOrKinded)
		setValue(x(53))
		putList(x(56))
		setConstant(false)
		setConstant(nil)
		putList(x(55))
		setConstant(false)
		setValue(x(56))
		putList(x(59))
		setConstant(value)
		setConstant(nil)
		putList(x(58))
		setConstant(feature)
		setValue(x(59))
		putList(x(57))
		setConstant(recordCOrChunk)
		setValue(x(58))
		putRecord(builtin [det imods types] x(51))
		setValue(x(52))
		setValue(x(55))
		setValue(x(57))
		putRecord(any 1 x(64))
		setConstant(det)
		putList(x(63))
		setValue(x(64))
		setConstant(nil)
		putList(x(62))
		setConstant(det)
		setValue(x(63))
		putList(x(61))
		setConstant(det)
		setValue(x(62))
		putList(x(66))
		setConstant(false)
		setConstant(nil)
		putList(x(65))
		setConstant(false)
		setValue(x(66))
		putList(x(69))
		setConstant(float)
		setConstant(nil)
		putList(x(68))
		setConstant(float)
		setValue(x(69))
		putList(x(67))
		setConstant(float)
		setValue(x(68))
		putRecord(builtin [det imods types] x(60))
		setValue(x(61))
		setValue(x(65))
		setValue(x(67))
		putRecord(any 1 x(74))
		setConstant(det)
		putList(x(73))
		setValue(x(74))
		setConstant(nil)
		putList(x(72))
		setConstant(det)
		setValue(x(73))
		putList(x(71))
		setConstant(det)
		setValue(x(72))
		putList(x(76))
		setConstant(false)
		setConstant(nil)
		putList(x(75))
		setConstant(false)
		setValue(x(76))
		putList(x(79))
		setConstant(bool)
		setConstant(nil)
		putList(x(78))
		setConstant(comparable)
		setValue(x(79))
		putList(x(77))
		setConstant(comparable)
		setValue(x(78))
		putRecord(builtin [det imods negated test types] x(70))
		setValue(x(71))
		setValue(x(75))
		setConstant('>=')
		setConstant(true)
		setValue(x(77))
		putList(x(82))
		setConstant(any)
		setConstant(nil)
		putList(x(81))
		setConstant(any)
		setValue(x(82))
		putList(x(84))
		setConstant(false)
		setConstant(nil)
		putList(x(83))
		setConstant(false)
		setValue(x(84))
		putList(x(86))
		setConstant(value)
		setConstant(nil)
		putList(x(85))
		setConstant(value)
		setValue(x(86))
		putRecord(builtin [det imods types] x(80))
		setValue(x(81))
		setValue(x(83))
		setValue(x(85))
		putList(x(89))
		setConstant(any)
		setConstant(nil)
		putList(x(88))
		setConstant(any)
		setValue(x(89))
		putList(x(91))
		setConstant(false)
		setConstant(nil)
		putList(x(90))
		setConstant(false)
		setValue(x(91))
		putList(x(93))
		setConstant(value)
		setConstant(nil)
		putList(x(92))
		setConstant(value)
		setValue(x(93))
		putRecord(builtin [det imods types] x(87))
		setValue(x(88))
		setValue(x(90))
		setValue(x(92))
		putRecord(any 1 x(98))
		setConstant(det)
		putList(x(97))
		setValue(x(98))
		setConstant(nil)
		putList(x(96))
		setConstant(det)
		setValue(x(97))
		putList(x(95))
		setConstant(det)
		setValue(x(96))
		putList(x(100))
		setConstant(false)
		setConstant(nil)
		putList(x(99))
		setConstant(false)
		setValue(x(100))
		putList(x(103))
		setConstant(bool)
		setConstant(nil)
		putList(x(102))
		setConstant(comparable)
		setValue(x(103))
		putList(x(101))
		setConstant(comparable)
		setValue(x(102))
		putRecord(builtin [det imods negated test types] x(94))
		setValue(x(95))
		setValue(x(99))
		setConstant('>')
		setConstant(true)
		setValue(x(101))
		putRecord(any 1 x(108))
		setConstant(det)
		putList(x(107))
		setValue(x(108))
		setConstant(nil)
		putList(x(106))
		setConstant(detOrKinded)
		setValue(x(107))
		putList(x(105))
		setConstant(detOrKinded)
		setValue(x(106))
		putList(x(110))
		setConstant(false)
		setConstant(nil)
		putList(x(109))
		setConstant(false)
		setValue(x(110))
		putList(x(113))
		setConstant(bool)
		setConstant(nil)
		putList(x(112))
		setConstant(value)
		setValue(x(113))
		putList(x(111))
		setConstant(value)
		setValue(x(112))
		putRecord(builtin [det imods negated test types] x(104))
		setValue(x(105))
		setValue(x(109))
		setConstant('\\=')
		setConstant(true)
		setValue(x(111))
		putRecord(any 1 x(118))
		setConstant(det)
		putList(x(117))
		setValue(x(118))
		setConstant(nil)
		putList(x(116))
		setConstant(det)
		setValue(x(117))
		putList(x(115))
		setConstant(det)
		setValue(x(116))
		putList(x(120))
		setConstant(false)
		setConstant(nil)
		putList(x(119))
		setConstant(false)
		setValue(x(120))
		putList(x(123))
		setConstant(bool)
		setConstant(nil)
		putList(x(122))
		setConstant(comparable)
		setValue(x(123))
		putList(x(121))
		setConstant(comparable)
		setValue(x(122))
		putRecord(builtin [det imods negated test types] x(114))
		setValue(x(115))
		setValue(x(119))
		setConstant('=<')
		setConstant(true)
		setValue(x(121))
		putRecord(any 1 x(128))
		setConstant(det)
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant(det)
		setValue(x(127))
		putList(x(125))
		setConstant(det)
		setValue(x(126))
		putList(x(130))
		setConstant(false)
		setConstant(nil)
		putList(x(129))
		setConstant(false)
		setValue(x(130))
		putList(x(133))
		setConstant(bool)
		setConstant(nil)
		putList(x(132))
		setConstant(comparable)
		setValue(x(133))
		putList(x(131))
		setConstant(comparable)
		setValue(x(132))
		putRecord(builtin [det imods negated test types] x(124))
		setValue(x(125))
		setValue(x(129))
		setConstant('<')
		setConstant(true)
		setValue(x(131))
		putList(x(136))
		setConstant(any)
		setConstant(nil)
		putList(x(135))
		setConstant(any)
		setValue(x(136))
		putList(x(137))
		setConstant(false)
		setConstant(nil)
		putList(x(139))
		setConstant(value)
		setConstant(nil)
		putList(x(138))
		setConstant(value)
		setValue(x(139))
		putRecord(builtin [det imods types] x(134))
		setValue(x(135))
		setValue(x(137))
		setValue(x(138))
		putRecord(any 1 x(143))
		setConstant(det)
		putList(x(142))
		setValue(x(143))
		setConstant(nil)
		putList(x(141))
		setConstant(det)
		setValue(x(142))
		putList(x(144))
		setConstant(false)
		setConstant(nil)
		putList(x(146))
		setConstant(number)
		setConstant(nil)
		putList(x(145))
		setConstant(number)
		setValue(x(146))
		putRecord(builtin [det imods types] x(140))
		setValue(x(141))
		setValue(x(144))
		setValue(x(145))
		putList(x(149))
		setConstant(any)
		setConstant(nil)
		putList(x(148))
		setConstant(det)
		setValue(x(149))
		putList(x(150))
		setConstant(false)
		setConstant(nil)
		putList(x(152))
		setConstant(value)
		setConstant(nil)
		putList(x(151))
		setConstant(cell)
		setValue(x(152))
		putRecord(builtin [det imods types] x(147))
		setValue(x(148))
		setValue(x(150))
		setValue(x(151))
		putRecord(any 1 x(156))
		setConstant(det)
		putList(x(155))
		setValue(x(156))
		setConstant(nil)
		putList(x(154))
		setConstant(det)
		setValue(x(155))
		putList(x(157))
		setConstant(false)
		setConstant(nil)
		putList(x(159))
		setConstant(float)
		setConstant(nil)
		putList(x(158))
		setConstant(float)
		setValue(x(159))
		putRecord(builtin [det imods types] x(153))
		setValue(x(154))
		setValue(x(157))
		setValue(x(158))
		putRecord(any 1 x(164))
		setConstant(det)
		putList(x(163))
		setValue(x(164))
		setConstant(nil)
		putList(x(162))
		setConstant(det)
		setValue(x(163))
		putList(x(161))
		setConstant(det)
		setValue(x(162))
		putList(x(166))
		setConstant(false)
		setConstant(nil)
		putList(x(165))
		setConstant(false)
		setValue(x(166))
		putList(x(169))
		setConstant(record)
		setConstant(nil)
		putList(x(168))
		setConstant(record)
		setValue(x(169))
		putList(x(167))
		setConstant(record)
		setValue(x(168))
		putRecord(builtin [det imods types] x(160))
		setValue(x(161))
		setValue(x(165))
		setValue(x(167))
		putRecord(any 1 x(175))
		setConstant(det)
		putList(x(174))
		setValue(x(175))
		setConstant(nil)
		putList(x(173))
		setConstant(any)
		setValue(x(174))
		putList(x(172))
		setConstant(det)
		setValue(x(173))
		putList(x(171))
		setConstant(det)
		setValue(x(172))
		putList(x(178))
		setConstant(false)
		setConstant(nil)
		putList(x(177))
		setConstant(false)
		setValue(x(178))
		putList(x(176))
		setConstant(false)
		setValue(x(177))
		putList(x(182))
		setConstant(record)
		setConstant(nil)
		putList(x(181))
		setConstant(value)
		setValue(x(182))
		putList(x(180))
		setConstant(feature)
		setValue(x(181))
		putList(x(179))
		setConstant(record)
		setValue(x(180))
		putRecord(builtin [det imods types] x(170))
		setValue(x(171))
		setValue(x(176))
		setValue(x(179))
		putRecord(any 1 x(187))
		setConstant(det)
		putList(x(186))
		setValue(x(187))
		setConstant(nil)
		putList(x(185))
		setConstant(det)
		setValue(x(186))
		putList(x(184))
		setConstant(det)
		setValue(x(185))
		putList(x(189))
		setConstant(false)
		setConstant(nil)
		putList(x(188))
		setConstant(false)
		setValue(x(189))
		putRecord(pair 2 x(193))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(192))
		setValue(x(193))
		putList(x(194))
		setConstant(record)
		setConstant(nil)
		putList(x(191))
		setValue(x(192))
		setValue(x(194))
		putList(x(190))
		setConstant(record)
		setValue(x(191))
		putRecord(builtin [det imods types] x(183))
		setValue(x(184))
		setValue(x(188))
		setValue(x(190))
		putList(x(197))
		setConstant(any)
		setConstant(nil)
		putList(x(196))
		setConstant(det)
		setValue(x(197))
		putList(x(199))
		setConstant(false)
		setConstant(nil)
		putList(x(198))
		setConstant(false)
		setValue(x(199))
		putList(x(201))
		setConstant('unit')
		setConstant(nil)
		putList(x(200))
		setConstant(int)
		setValue(x(201))
		putRecord(builtin [det imods types] x(195))
		setValue(x(196))
		setValue(x(198))
		setValue(x(200))
		putRecord(any 1 x(206))
		setConstant(det)
		putList(x(205))
		setValue(x(206))
		setConstant(nil)
		putList(x(204))
		setConstant(det)
		setValue(x(205))
		putList(x(203))
		setConstant(det)
		setValue(x(204))
		putList(x(208))
		setConstant(false)
		setConstant(nil)
		putList(x(207))
		setConstant(false)
		setValue(x(208))
		putList(x(211))
		setConstant(bool)
		setConstant(nil)
		putList(x(210))
		setConstant(bool)
		setValue(x(211))
		putList(x(209))
		setConstant(bool)
		setValue(x(210))
		putRecord(builtin [det imods test types] x(202))
		setValue(x(203))
		setValue(x(207))
		setConstant(true)
		setValue(x(209))
		putRecord(any 1 x(215))
		setConstant(det)
		putList(x(214))
		setValue(x(215))
		setConstant(nil)
		putList(x(213))
		setConstant(det)
		setValue(x(214))
		putList(x(216))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(219))
		setConstant(feature)
		putList(x(218))
		setValue(x(219))
		setConstant(nil)
		putList(x(217))
		setConstant(record)
		setValue(x(218))
		putRecord(builtin [det imods types] x(212))
		setValue(x(213))
		setValue(x(216))
		setValue(x(217))
		putRecord(any 1 x(223))
		setConstant(det)
		putList(x(222))
		setValue(x(223))
		setConstant(nil)
		putList(x(221))
		setConstant(det)
		setValue(x(222))
		putList(x(224))
		setConstant(false)
		setConstant(nil)
		putList(x(226))
		setConstant(int)
		setConstant(nil)
		putList(x(225))
		setConstant(array)
		setValue(x(226))
		putRecord(builtin [det imods types] x(220))
		setValue(x(221))
		setValue(x(224))
		setValue(x(225))
		putRecord(any 1 x(230))
		setConstant(det)
		putList(x(229))
		setValue(x(230))
		setConstant(nil)
		putList(x(228))
		setConstant(det)
		setValue(x(229))
		putList(x(231))
		setConstant(false)
		setConstant(nil)
		putList(x(233))
		setConstant(int)
		setConstant(nil)
		putList(x(232))
		setConstant(array)
		setValue(x(233))
		putRecord(builtin [det imods types] x(227))
		setValue(x(228))
		setValue(x(231))
		setValue(x(232))
		putRecord(any 1 x(237))
		setConstant(det)
		putList(x(236))
		setValue(x(237))
		setConstant(nil)
		putList(x(235))
		setConstant(det)
		setValue(x(236))
		putList(x(238))
		setConstant(false)
		setConstant(nil)
		putList(x(240))
		setConstant(float)
		setConstant(nil)
		putList(x(239))
		setConstant(float)
		setValue(x(240))
		putRecord(builtin [det imods types] x(234))
		setValue(x(235))
		setValue(x(238))
		setValue(x(239))
		putList(x(243))
		setConstant(any)
		setConstant(nil)
		putList(x(242))
		setConstant(det)
		setValue(x(243))
		putList(x(245))
		setConstant(false)
		setConstant(nil)
		putList(x(244))
		setConstant(false)
		setValue(x(245))
		putList(x(247))
		setConstant(value)
		setConstant(nil)
		putList(x(246))
		setConstant(cell)
		setValue(x(247))
		putRecord(builtin [det imods types] x(241))
		setValue(x(242))
		setValue(x(244))
		setValue(x(246))
		putRecord(any 1 x(251))
		setConstant(det)
		putList(x(250))
		setValue(x(251))
		setConstant(nil)
		putList(x(249))
		setConstant(det)
		setValue(x(250))
		putList(x(252))
		setConstant(false)
		setConstant(nil)
		putList(x(254))
		setConstant(float)
		setConstant(nil)
		putList(x(253))
		setConstant(float)
		setValue(x(254))
		putRecord(builtin [det imods types] x(248))
		setValue(x(249))
		setValue(x(252))
		setValue(x(253))
		putRecord(any 1 x(259))
		setConstant(det)
		putList(x(258))
		setValue(x(259))
		setConstant(nil)
		putList(x(257))
		setConstant(det)
		setValue(x(258))
		putList(x(256))
		setConstant(det)
		setValue(x(257))
		putList(x(261))
		setConstant(false)
		setConstant(nil)
		putList(x(260))
		setConstant(false)
		setValue(x(261))
		putList(x(264))
		setConstant(float)
		setConstant(nil)
		putList(x(263))
		setConstant(float)
		setValue(x(264))
		putList(x(262))
		setConstant(float)
		setValue(x(263))
		putRecord(builtin [det imods types] x(255))
		setValue(x(256))
		setValue(x(260))
		setValue(x(262))
		putRecord(any 1 x(268))
		setConstant(det)
		putList(x(267))
		setValue(x(268))
		setConstant(nil)
		putList(x(266))
		setConstant(det)
		setValue(x(267))
		putList(x(269))
		setConstant(false)
		setConstant(nil)
		putList(x(271))
		setConstant(string)
		setConstant(nil)
		putList(x(270))
		setConstant(atom)
		setValue(x(271))
		putRecord(builtin [det imods types] x(265))
		setValue(x(266))
		setValue(x(269))
		setValue(x(270))
		putList(x(274))
		setConstant(det)
		setConstant(nil)
		putList(x(273))
		setConstant(det)
		setValue(x(274))
		putList(x(276))
		setConstant(false)
		setConstant(nil)
		putList(x(275))
		setConstant(false)
		setValue(x(276))
		putList(x(278))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(277))
		setConstant(bitArray)
		setValue(x(278))
		putRecord(builtin [det imods types] x(272))
		setValue(x(273))
		setValue(x(275))
		setValue(x(277))
		putRecord(any 1 x(282))
		setConstant(det)
		putList(x(281))
		setValue(x(282))
		setConstant(nil)
		putList(x(280))
		setConstant(det)
		setValue(x(281))
		putList(x(283))
		setConstant(false)
		setConstant(nil)
		putList(x(285))
		setConstant(int)
		setConstant(nil)
		putList(x(284))
		setConstant(bitArray)
		setValue(x(285))
		putRecord(builtin [det imods types] x(279))
		setValue(x(280))
		setValue(x(283))
		setValue(x(284))
		putList(x(288))
		setConstant(det)
		setConstant(nil)
		putList(x(287))
		setConstant(det)
		setValue(x(288))
		putList(x(290))
		setConstant(false)
		setConstant(nil)
		putList(x(289))
		setConstant(false)
		setValue(x(290))
		putList(x(292))
		setConstant(int)
		setConstant(nil)
		putList(x(291))
		setConstant(bitArray)
		setValue(x(292))
		putRecord(builtin [det imods types] x(286))
		setValue(x(287))
		setValue(x(289))
		setValue(x(291))
		putRecord(any 1 x(296))
		setConstant(det)
		putList(x(295))
		setValue(x(296))
		setConstant(nil)
		putList(x(294))
		setConstant(det)
		setValue(x(295))
		putList(x(297))
		setConstant(false)
		setConstant(nil)
		putList(x(299))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(298))
		setConstant(bitArray)
		setValue(x(299))
		putRecord(builtin [det imods types] x(293))
		setValue(x(294))
		setValue(x(297))
		setValue(x(298))
		putRecord(any 1 x(303))
		setConstant(det)
		putList(x(302))
		setValue(x(303))
		setConstant(nil)
		putList(x(301))
		setConstant(det)
		setValue(x(302))
		putList(x(304))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(307))
		setConstant(int)
		putList(x(306))
		setValue(x(307))
		setConstant(nil)
		putList(x(305))
		setConstant(bitArray)
		setValue(x(306))
		putRecord(builtin [det imods types] x(300))
		setValue(x(301))
		setValue(x(304))
		setValue(x(305))
		putRecord(any 1 x(312))
		setConstant(det)
		putList(x(311))
		setValue(x(312))
		setConstant(nil)
		putList(x(310))
		setConstant(det)
		setValue(x(311))
		putList(x(309))
		setConstant(det)
		setValue(x(310))
		putList(x(314))
		setConstant(false)
		setConstant(nil)
		putList(x(313))
		setConstant(false)
		setValue(x(314))
		putList(x(317))
		setConstant(bool)
		setConstant(nil)
		putList(x(316))
		setConstant(bitArray)
		setValue(x(317))
		putList(x(315))
		setConstant(bitArray)
		setValue(x(316))
		putRecord(builtin [det imods test types] x(308))
		setValue(x(309))
		setValue(x(313))
		setConstant(true)
		setValue(x(315))
		putRecord(any 1 x(321))
		setConstant(det)
		putList(x(320))
		setValue(x(321))
		setConstant(nil)
		putList(x(319))
		setConstant(det)
		setValue(x(320))
		putList(x(322))
		setConstant(false)
		setConstant(nil)
		putList(x(324))
		setConstant(int)
		setConstant(nil)
		putList(x(323))
		setConstant(bitArray)
		setValue(x(324))
		putRecord(builtin [det imods types] x(318))
		setValue(x(319))
		setValue(x(322))
		setValue(x(323))
		putRecord(any 1 x(328))
		setConstant(det)
		putList(x(327))
		setValue(x(328))
		setConstant(nil)
		putList(x(326))
		setConstant(det)
		setValue(x(327))
		putList(x(329))
		setConstant(false)
		setConstant(nil)
		putList(x(331))
		setConstant(bool)
		setConstant(nil)
		putList(x(330))
		setConstant(value)
		setValue(x(331))
		putRecord(builtin [det imods test types] x(325))
		setValue(x(326))
		setValue(x(329))
		setConstant(true)
		setValue(x(330))
		putRecord(any 1 x(335))
		setConstant(det)
		putList(x(334))
		setValue(x(335))
		setConstant(nil)
		putList(x(333))
		setConstant(det)
		setValue(x(334))
		putList(x(336))
		setConstant(false)
		setConstant(nil)
		putList(x(338))
		setConstant(int)
		setConstant(nil)
		putList(x(337))
		setConstant(bitArray)
		setValue(x(338))
		putRecord(builtin [det imods types] x(332))
		setValue(x(333))
		setValue(x(336))
		setValue(x(337))
		putRecord(any 1 x(343))
		setConstant(det)
		putList(x(342))
		setValue(x(343))
		setConstant(nil)
		putList(x(341))
		setConstant(det)
		setValue(x(342))
		putList(x(340))
		setConstant(det)
		setValue(x(341))
		putList(x(345))
		setConstant(false)
		setConstant(nil)
		putList(x(344))
		setConstant(false)
		setValue(x(345))
		putList(x(348))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(347))
		setConstant(int)
		setValue(x(348))
		putList(x(346))
		setConstant(int)
		setValue(x(347))
		putRecord(builtin [det imods types] x(339))
		setValue(x(340))
		setValue(x(344))
		setValue(x(346))
		putList(x(351))
		setConstant(det)
		setConstant(nil)
		putList(x(350))
		setConstant(det)
		setValue(x(351))
		putList(x(353))
		setConstant(false)
		setConstant(nil)
		putList(x(352))
		setConstant(false)
		setValue(x(353))
		putList(x(355))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(354))
		setConstant(bitArray)
		setValue(x(355))
		putRecord(builtin [det imods types] x(349))
		setValue(x(350))
		setValue(x(352))
		setValue(x(354))
		putList(x(358))
		setConstant(det)
		setConstant(nil)
		putList(x(357))
		setConstant(det)
		setValue(x(358))
		putList(x(360))
		setConstant(false)
		setConstant(nil)
		putList(x(359))
		setConstant(false)
		setValue(x(360))
		putList(x(362))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(361))
		setConstant(bitArray)
		setValue(x(362))
		putRecord(builtin [det imods types] x(356))
		setValue(x(357))
		setValue(x(359))
		setValue(x(361))
		putList(x(365))
		setConstant(det)
		setConstant(nil)
		putList(x(364))
		setConstant(det)
		setValue(x(365))
		putList(x(367))
		setConstant(false)
		setConstant(nil)
		putList(x(366))
		setConstant(false)
		setValue(x(367))
		putList(x(369))
		setConstant(int)
		setConstant(nil)
		putList(x(368))
		setConstant(bitArray)
		setValue(x(369))
		putRecord(builtin [det imods types] x(363))
		setValue(x(364))
		setValue(x(366))
		setValue(x(368))
		putRecord(any 1 x(374))
		setConstant(det)
		putList(x(373))
		setValue(x(374))
		setConstant(nil)
		putList(x(372))
		setConstant(det)
		setValue(x(373))
		putList(x(371))
		setConstant(det)
		setValue(x(372))
		putList(x(376))
		setConstant(false)
		setConstant(nil)
		putList(x(375))
		setConstant(false)
		setValue(x(376))
		putList(x(379))
		setConstant(bool)
		setConstant(nil)
		putList(x(378))
		setConstant(int)
		setValue(x(379))
		putList(x(377))
		setConstant(bitArray)
		setValue(x(378))
		putRecord(builtin [det imods test types] x(370))
		setValue(x(371))
		setValue(x(375))
		setConstant(true)
		setValue(x(377))
		putRecord(any 1 x(383))
		setConstant(det)
		putList(x(382))
		setValue(x(383))
		setConstant(nil)
		putList(x(381))
		setConstant(det)
		setValue(x(382))
		putList(x(384))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(387))
		setConstant(int)
		putList(x(386))
		setValue(x(387))
		setConstant(nil)
		putList(x(385))
		setConstant(bitArray)
		setValue(x(386))
		putRecord(builtin [det imods types] x(380))
		setValue(x(381))
		setValue(x(384))
		setValue(x(385))
		putRecord(any 1 x(391))
		setConstant(det)
		putList(x(390))
		setValue(x(391))
		setConstant(nil)
		putList(x(389))
		setConstant(det)
		setValue(x(390))
		putList(x(392))
		setConstant(false)
		setConstant(nil)
		putList(x(394))
		setConstant(record)
		setConstant(nil)
		putList(x(393))
		setConstant(virtualString)
		setValue(x(394))
		putRecord(builtin [det imods types] x(388))
		setValue(x(389))
		setValue(x(392))
		setValue(x(393))
		putList(x(397))
		setConstant(any)
		setConstant(nil)
		putList(x(396))
		setConstant(any)
		setValue(x(397))
		putList(x(398))
		setConstant(false)
		setConstant(nil)
		putList(x(400))
		setConstant(value)
		setConstant(nil)
		putList(x(399))
		setConstant(value)
		setValue(x(400))
		putRecord(builtin [det imods types] x(395))
		setValue(x(396))
		setValue(x(398))
		setValue(x(399))
		putRecord(any 1 x(404))
		setConstant(det)
		putList(x(403))
		setValue(x(404))
		setConstant(nil)
		putList(x(402))
		setConstant(det)
		setValue(x(403))
		putList(x(405))
		setConstant(false)
		setConstant(nil)
		putList(x(407))
		setConstant(float)
		setConstant(nil)
		putList(x(406))
		setConstant(float)
		setValue(x(407))
		putRecord(builtin [det imods types] x(401))
		setValue(x(402))
		setValue(x(405))
		setValue(x(406))
		putRecord(any 1 x(411))
		setConstant(det)
		putList(x(410))
		setValue(x(411))
		setConstant(nil)
		putList(x(409))
		setConstant(det)
		setValue(x(410))
		putList(x(412))
		setConstant(false)
		setConstant(nil)
		putList(x(414))
		setConstant(bool)
		setConstant(nil)
		putList(x(413))
		setConstant(char)
		setValue(x(414))
		putRecord(builtin [det imods test types] x(408))
		setValue(x(409))
		setValue(x(412))
		setConstant(true)
		setValue(x(413))
		putRecord(any 1 x(418))
		setConstant(det)
		putList(x(417))
		setValue(x(418))
		setConstant(nil)
		putList(x(416))
		setConstant(det)
		setValue(x(417))
		putList(x(419))
		setConstant(false)
		setConstant(nil)
		putList(x(421))
		setConstant(bool)
		setConstant(nil)
		putList(x(420))
		setConstant(char)
		setValue(x(421))
		putRecord(builtin [det imods test types] x(415))
		setValue(x(416))
		setValue(x(419))
		setConstant(true)
		setValue(x(420))
		putRecord(any 1 x(425))
		setConstant(det)
		putList(x(424))
		setValue(x(425))
		setConstant(nil)
		putList(x(423))
		setConstant(det)
		setValue(x(424))
		putList(x(426))
		setConstant(false)
		setConstant(nil)
		putList(x(428))
		setConstant(bool)
		setConstant(nil)
		putList(x(427))
		setConstant(char)
		setValue(x(428))
		putRecord(builtin [det imods test types] x(422))
		setValue(x(423))
		setValue(x(426))
		setConstant(true)
		setValue(x(427))
		putRecord(any 1 x(432))
		setConstant(det)
		putList(x(431))
		setValue(x(432))
		setConstant(nil)
		putList(x(430))
		setConstant(det)
		setValue(x(431))
		putList(x(433))
		setConstant(false)
		setConstant(nil)
		putList(x(435))
		setConstant(bool)
		setConstant(nil)
		putList(x(434))
		setConstant(char)
		setValue(x(435))
		putRecord(builtin [det imods test types] x(429))
		setValue(x(430))
		setValue(x(433))
		setConstant(true)
		setValue(x(434))
		putRecord(any 1 x(439))
		setConstant(det)
		putList(x(438))
		setValue(x(439))
		setConstant(nil)
		putList(x(437))
		setConstant(det)
		setValue(x(438))
		putList(x(440))
		setConstant(false)
		setConstant(nil)
		putList(x(442))
		setConstant(bool)
		setConstant(nil)
		putList(x(441))
		setConstant(char)
		setValue(x(442))
		putRecord(builtin [det imods test types] x(436))
		setValue(x(437))
		setValue(x(440))
		setConstant(true)
		setValue(x(441))
		putRecord(any 1 x(446))
		setConstant(det)
		putList(x(445))
		setValue(x(446))
		setConstant(nil)
		putList(x(444))
		setConstant(det)
		setValue(x(445))
		putList(x(447))
		setConstant(false)
		setConstant(nil)
		putList(x(449))
		setConstant(bool)
		setConstant(nil)
		putList(x(448))
		setConstant(char)
		setValue(x(449))
		putRecord(builtin [det imods test types] x(443))
		setValue(x(444))
		setValue(x(447))
		setConstant(true)
		setValue(x(448))
		putRecord(any 1 x(453))
		setConstant(det)
		putList(x(452))
		setValue(x(453))
		setConstant(nil)
		putList(x(451))
		setConstant(det)
		setValue(x(452))
		putList(x(454))
		setConstant(false)
		setConstant(nil)
		putList(x(456))
		setConstant(bool)
		setConstant(nil)
		putList(x(455))
		setConstant(char)
		setValue(x(456))
		putRecord(builtin [det imods test types] x(450))
		setValue(x(451))
		setValue(x(454))
		setConstant(true)
		setValue(x(455))
		putRecord(any 1 x(460))
		setConstant(det)
		putList(x(459))
		setValue(x(460))
		setConstant(nil)
		putList(x(458))
		setConstant(det)
		setValue(x(459))
		putList(x(461))
		setConstant(false)
		setConstant(nil)
		putList(x(463))
		setConstant(bool)
		setConstant(nil)
		putList(x(462))
		setConstant(char)
		setValue(x(463))
		putRecord(builtin [det imods test types] x(457))
		setValue(x(458))
		setValue(x(461))
		setConstant(true)
		setValue(x(462))
		putRecord(any 1 x(467))
		setConstant(det)
		putList(x(466))
		setValue(x(467))
		setConstant(nil)
		putList(x(465))
		setConstant(det)
		setValue(x(466))
		putList(x(468))
		setConstant(false)
		setConstant(nil)
		putList(x(470))
		setConstant(bool)
		setConstant(nil)
		putList(x(469))
		setConstant(char)
		setValue(x(470))
		putRecord(builtin [det imods test types] x(464))
		setValue(x(465))
		setValue(x(468))
		setConstant(true)
		setValue(x(469))
		putRecord(any 1 x(474))
		setConstant(det)
		putList(x(473))
		setValue(x(474))
		setConstant(nil)
		putList(x(472))
		setConstant(det)
		setValue(x(473))
		putList(x(475))
		setConstant(false)
		setConstant(nil)
		putList(x(477))
		setConstant(bool)
		setConstant(nil)
		putList(x(476))
		setConstant(char)
		setValue(x(477))
		putRecord(builtin [det imods test types] x(471))
		setValue(x(472))
		setValue(x(475))
		setConstant(true)
		setValue(x(476))
		putRecord(any 1 x(481))
		setConstant(det)
		putList(x(480))
		setValue(x(481))
		setConstant(nil)
		putList(x(479))
		setConstant(det)
		setValue(x(480))
		putList(x(482))
		setConstant(false)
		setConstant(nil)
		putList(x(484))
		setConstant(bool)
		setConstant(nil)
		putList(x(483))
		setConstant(char)
		setValue(x(484))
		putRecord(builtin [det imods test types] x(478))
		setValue(x(479))
		setValue(x(482))
		setConstant(true)
		setValue(x(483))
		putRecord(any 1 x(488))
		setConstant(det)
		putList(x(487))
		setValue(x(488))
		setConstant(nil)
		putList(x(486))
		setConstant(det)
		setValue(x(487))
		putList(x(489))
		setConstant(false)
		setConstant(nil)
		putList(x(491))
		setConstant(atom)
		setConstant(nil)
		putList(x(490))
		setConstant(char)
		setValue(x(491))
		putRecord(builtin [det imods types] x(485))
		setValue(x(486))
		setValue(x(489))
		setValue(x(490))
		putRecord(any 1 x(495))
		setConstant(det)
		putList(x(494))
		setValue(x(495))
		setConstant(nil)
		putList(x(493))
		setConstant(det)
		setValue(x(494))
		putList(x(496))
		setConstant(false)
		setConstant(nil)
		putList(x(498))
		setConstant(char)
		setConstant(nil)
		putList(x(497))
		setConstant(char)
		setValue(x(498))
		putRecord(builtin [det imods types] x(492))
		setValue(x(493))
		setValue(x(496))
		setValue(x(497))
		putRecord(any 1 x(502))
		setConstant(det)
		putList(x(501))
		setValue(x(502))
		setConstant(nil)
		putList(x(500))
		setConstant(det)
		setValue(x(501))
		putList(x(503))
		setConstant(false)
		setConstant(nil)
		putList(x(505))
		setConstant(char)
		setConstant(nil)
		putList(x(504))
		setConstant(char)
		setValue(x(505))
		putRecord(builtin [det imods types] x(499))
		setValue(x(500))
		setValue(x(503))
		setValue(x(504))
		putRecord(any 1 x(509))
		setConstant(det)
		putList(x(508))
		setValue(x(509))
		setConstant(nil)
		putList(x(507))
		setConstant(det)
		setValue(x(508))
		putList(x(510))
		setConstant(false)
		setConstant(nil)
		putList(x(512))
		setConstant(atom)
		setConstant(nil)
		putList(x(511))
		setConstant(char)
		setValue(x(512))
		putRecord(builtin [det imods types] x(506))
		setValue(x(507))
		setValue(x(510))
		setValue(x(511))
		putList(x(517))
		setConstant(any)
		setConstant(nil)
		putList(x(516))
		setConstant(any)
		setValue(x(517))
		putList(x(515))
		setConstant(det)
		setValue(x(516))
		putList(x(514))
		setConstant(detOrKinded)
		setValue(x(515))
		putList(x(520))
		setConstant(false)
		setConstant(nil)
		putList(x(519))
		setConstant(false)
		setValue(x(520))
		putList(x(518))
		setConstant(false)
		setValue(x(519))
		putList(x(524))
		setConstant(value)
		setConstant(nil)
		putList(x(523))
		setConstant(value)
		setValue(x(524))
		putList(x(522))
		setConstant(feature)
		setValue(x(523))
		putList(x(521))
		setConstant(recordCOrChunk)
		setValue(x(522))
		putRecord(builtin [det imods types] x(513))
		setValue(x(514))
		setValue(x(518))
		setValue(x(521))
		putRecord(any 1 x(528))
		setConstant(det)
		putList(x(527))
		setValue(x(528))
		setConstant(nil)
		putList(x(526))
		setConstant(det)
		setValue(x(527))
		putList(x(529))
		setConstant(false)
		setConstant(nil)
		putList(x(531))
		setConstant(float)
		setConstant(nil)
		putList(x(530))
		setConstant(float)
		setValue(x(531))
		putRecord(builtin [det imods types] x(525))
		setValue(x(526))
		setValue(x(529))
		setValue(x(530))
		putList(x(533))
		setConstant(det)
		setConstant(nil)
		putList(x(534))
		setConstant(true)
		setConstant(nil)
		putList(x(535))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(532))
		setValue(x(533))
		setValue(x(534))
		setValue(x(535))
		putRecord(any 1 x(539))
		setConstant(det)
		putList(x(538))
		setValue(x(539))
		setConstant(nil)
		putList(x(537))
		setConstant(det)
		setValue(x(538))
		putList(x(540))
		setConstant(false)
		setConstant(nil)
		putList(x(542))
		setConstant(dictionary)
		setConstant(nil)
		putList(x(541))
		setConstant(dictionary)
		setValue(x(542))
		putRecord(builtin [det imods types] x(536))
		setValue(x(537))
		setValue(x(540))
		setValue(x(541))
		putList(x(547))
		setConstant(any)
		setConstant(nil)
		putList(x(546))
		setConstant(any)
		setValue(x(547))
		putList(x(545))
		setConstant(det)
		setValue(x(546))
		putList(x(544))
		setConstant(det)
		setValue(x(545))
		putList(x(550))
		setConstant(false)
		setConstant(nil)
		putList(x(549))
		setConstant(false)
		setValue(x(550))
		putList(x(548))
		setConstant(false)
		setValue(x(549))
		putList(x(554))
		setConstant(value)
		setConstant(nil)
		putList(x(553))
		setConstant(value)
		setValue(x(554))
		putList(x(552))
		setConstant(feature)
		setValue(x(553))
		putList(x(551))
		setConstant(dictionary)
		setValue(x(552))
		putRecord(builtin [det imods types] x(543))
		setValue(x(544))
		setValue(x(548))
		setValue(x(551))
		putRecord(any 1 x(558))
		setConstant(det)
		putList(x(557))
		setValue(x(558))
		setConstant(nil)
		putList(x(556))
		setConstant(det)
		setValue(x(557))
		putList(x(559))
		setConstant(false)
		setConstant(nil)
		putRecord(pair 2 x(563))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(562))
		setValue(x(563))
		putList(x(561))
		setValue(x(562))
		setConstant(nil)
		putList(x(560))
		setConstant(dictionary)
		setValue(x(561))
		putRecord(builtin [det imods types] x(555))
		setValue(x(556))
		setValue(x(559))
		setValue(x(560))
		putList(x(567))
		setConstant(any)
		setConstant(nil)
		putList(x(566))
		setConstant(det)
		setValue(x(567))
		putList(x(565))
		setConstant(det)
		setValue(x(566))
		putList(x(569))
		setConstant(false)
		setConstant(nil)
		putList(x(568))
		setConstant(false)
		setValue(x(569))
		putList(x(572))
		setConstant(value)
		setConstant(nil)
		putList(x(571))
		setConstant(feature)
		setValue(x(572))
		putList(x(570))
		setConstant(dictionary)
		setValue(x(571))
		putRecord(builtin [det imods types] x(564))
		setValue(x(565))
		setValue(x(568))
		setValue(x(570))
		putRecord(any 1 x(576))
		setConstant(det)
		putList(x(575))
		setValue(x(576))
		setConstant(nil)
		putList(x(574))
		setConstant(det)
		setValue(x(575))
		putList(x(577))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(580))
		setConstant(value)
		putList(x(579))
		setValue(x(580))
		setConstant(nil)
		putList(x(578))
		setConstant(dictionary)
		setValue(x(579))
		putRecord(builtin [det imods types] x(573))
		setValue(x(574))
		setValue(x(577))
		setValue(x(578))
		putRecord(any 1 x(584))
		setConstant(det)
		putList(x(583))
		setValue(x(584))
		setConstant(nil)
		putList(x(582))
		setConstant(det)
		setValue(x(583))
		putList(x(585))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(588))
		setConstant(feature)
		putList(x(587))
		setValue(x(588))
		setConstant(nil)
		putList(x(586))
		setConstant(dictionary)
		setValue(x(587))
		putRecord(builtin [det imods types] x(581))
		setValue(x(582))
		setValue(x(585))
		setValue(x(586))
		putList(x(590))
		setConstant(det)
		setConstant(nil)
		putList(x(591))
		setConstant(false)
		setConstant(nil)
		putList(x(592))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(589))
		setValue(x(590))
		setValue(x(591))
		setValue(x(592))
		putRecord(any 1 x(597))
		setConstant(det)
		putList(x(596))
		setValue(x(597))
		setConstant(nil)
		putList(x(595))
		setConstant(det)
		setValue(x(596))
		putList(x(594))
		setConstant(det)
		setValue(x(595))
		putList(x(599))
		setConstant(false)
		setConstant(nil)
		putList(x(598))
		setConstant(false)
		setValue(x(599))
		putList(x(602))
		setConstant(bool)
		setConstant(nil)
		putList(x(601))
		setConstant(feature)
		setValue(x(602))
		putList(x(600))
		setConstant(dictionary)
		setValue(x(601))
		putRecord(builtin [det imods test types] x(593))
		setValue(x(594))
		setValue(x(598))
		setConstant(true)
		setValue(x(600))
		putList(x(606))
		setConstant(any)
		setConstant(nil)
		putList(x(605))
		setConstant(det)
		setValue(x(606))
		putList(x(604))
		setConstant(det)
		setValue(x(605))
		putList(x(609))
		setConstant(false)
		setConstant(nil)
		putList(x(608))
		setConstant(false)
		setValue(x(609))
		putList(x(607))
		setConstant(false)
		setValue(x(608))
		putList(x(612))
		setConstant(value)
		setConstant(nil)
		putList(x(611))
		setConstant(feature)
		setValue(x(612))
		putList(x(610))
		setConstant(dictionary)
		setValue(x(611))
		putRecord(builtin [det imods types] x(603))
		setValue(x(604))
		setValue(x(607))
		setValue(x(610))
		putList(x(615))
		setConstant(det)
		setConstant(nil)
		putList(x(614))
		setConstant(det)
		setValue(x(615))
		putList(x(617))
		setConstant(false)
		setConstant(nil)
		putList(x(616))
		setConstant(false)
		setValue(x(617))
		putList(x(619))
		setConstant(feature)
		setConstant(nil)
		putList(x(618))
		setConstant(dictionary)
		setValue(x(619))
		putRecord(builtin [det imods types] x(613))
		setValue(x(614))
		setValue(x(616))
		setValue(x(618))
		putList(x(621))
		setConstant(det)
		setConstant(nil)
		putList(x(622))
		setConstant(false)
		setConstant(nil)
		putList(x(623))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(620))
		setValue(x(621))
		setValue(x(622))
		setValue(x(623))
		putRecord(any 1 x(626))
		setConstant(det)
		putList(x(625))
		setValue(x(626))
		setConstant(nil)
		putRecord(list 1 x(628))
		setConstant(atom)
		putList(x(627))
		setValue(x(628))
		setConstant(nil)
		putRecord(builtin [det imods types] x(624))
		setValue(x(625))
		setConstant(nil)
		setValue(x(627))
		putList(x(630))
		setConstant(any)
		setConstant(nil)
		putList(x(631))
		setConstant(false)
		setConstant(nil)
		putList(x(632))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(629))
		setValue(x(630))
		setConstant(true)
		setValue(x(631))
		setValue(x(632))
		putList(x(634))
		setConstant(any)
		setConstant(nil)
		putList(x(635))
		setConstant(false)
		setConstant(nil)
		putList(x(636))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(633))
		setValue(x(634))
		setConstant(true)
		setValue(x(635))
		setValue(x(636))
		putRecord(any 1 x(640))
		setConstant(det)
		putList(x(639))
		setValue(x(640))
		setConstant(nil)
		putList(x(638))
		setConstant(any)
		setValue(x(639))
		putList(x(641))
		setConstant(false)
		setConstant(nil)
		putList(x(643))
		setConstant(bool)
		setConstant(nil)
		putList(x(642))
		setConstant(value)
		setValue(x(643))
		putRecord(builtin [det imods test types] x(637))
		setValue(x(638))
		setValue(x(641))
		setConstant(true)
		setValue(x(642))
		putList(x(645))
		setConstant(any)
		setConstant(nil)
		putList(x(646))
		setConstant(false)
		setConstant(nil)
		putList(x(647))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(644))
		setValue(x(645))
		setConstant(true)
		setValue(x(646))
		setValue(x(647))
		putRecord(any 1 x(650))
		setConstant(det)
		putList(x(649))
		setValue(x(650))
		setConstant(nil)
		putRecord(list 1 x(652))
		setConstant(record)
		putList(x(651))
		setValue(x(652))
		setConstant(nil)
		putRecord(builtin [det imods types] x(648))
		setValue(x(649))
		setConstant(nil)
		setValue(x(651))
		putList(x(656))
		setConstant(any)
		setConstant(nil)
		putList(x(655))
		setConstant(any)
		setValue(x(656))
		putList(x(654))
		setConstant(det)
		setValue(x(655))
		putList(x(659))
		setConstant(false)
		setConstant(nil)
		putList(x(658))
		setConstant(false)
		setValue(x(659))
		putList(x(657))
		setConstant(false)
		setValue(x(658))
		putList(x(662))
		setConstant(value)
		setConstant(nil)
		putList(x(661))
		setConstant(value)
		setValue(x(662))
		putList(x(660))
		setConstant(cell)
		setValue(x(661))
		putRecord(builtin [det imods types] x(653))
		setValue(x(654))
		setValue(x(657))
		setValue(x(660))
		putRecord(any 1 x(666))
		setConstant(det)
		putList(x(665))
		setValue(x(666))
		setConstant(nil)
		putList(x(664))
		setConstant(det)
		setValue(x(665))
		putList(x(667))
		setConstant(false)
		setConstant(nil)
		putList(x(669))
		setConstant(float)
		setConstant(nil)
		putList(x(668))
		setConstant(float)
		setValue(x(669))
		putRecord(builtin [det imods types] x(663))
		setValue(x(664))
		setValue(x(667))
		setValue(x(668))
		putRecord(any 1 x(673))
		setConstant(det)
		putList(x(672))
		setValue(x(673))
		setConstant(nil)
		putList(x(671))
		setConstant(det)
		setValue(x(672))
		putList(x(674))
		setConstant(false)
		setConstant(nil)
		putList(x(676))
		setConstant(int)
		setConstant(nil)
		putList(x(675))
		setConstant(float)
		setValue(x(676))
		putRecord(builtin [det imods types] x(670))
		setValue(x(671))
		setValue(x(674))
		setValue(x(675))
		putRecord(any 1 x(680))
		setConstant(det)
		putList(x(679))
		setValue(x(680))
		setConstant(nil)
		putList(x(678))
		setConstant(det)
		setValue(x(679))
		putList(x(681))
		setConstant(false)
		setConstant(nil)
		putList(x(683))
		setConstant(string)
		setConstant(nil)
		putList(x(682))
		setConstant(float)
		setValue(x(683))
		putRecord(builtin [det imods types] x(677))
		setValue(x(678))
		setValue(x(681))
		setValue(x(682))
		putRecord(any 1 x(687))
		setConstant(det)
		putList(x(686))
		setValue(x(687))
		setConstant(nil)
		putList(x(685))
		setConstant(det)
		setValue(x(686))
		putList(x(688))
		setConstant(false)
		setConstant(nil)
		putList(x(690))
		setConstant(float)
		setConstant(nil)
		putList(x(689))
		setConstant(float)
		setValue(x(690))
		putRecord(builtin [det imods types] x(684))
		setValue(x(685))
		setValue(x(688))
		setValue(x(689))
		putRecord(any 1 x(694))
		setConstant(det)
		putList(x(693))
		setValue(x(694))
		setConstant(nil)
		putList(x(692))
		setConstant(det)
		setValue(x(693))
		putList(x(695))
		setConstant(false)
		setConstant(nil)
		putList(x(697))
		setConstant(int)
		setConstant(nil)
		putList(x(696))
		setConstant(foreignPointer)
		setValue(x(697))
		putRecord(builtin [det imods types] x(691))
		setValue(x(692))
		setValue(x(695))
		setValue(x(696))
		putList(x(700))
		setConstant(any)
		setConstant(nil)
		putList(x(699))
		setConstant(any)
		setValue(x(700))
		putList(x(701))
		setConstant(false)
		setConstant(nil)
		putList(x(703))
		setConstant(value)
		setConstant(nil)
		putList(x(702))
		setConstant(value)
		setValue(x(703))
		putRecord(builtin [det imods types] x(698))
		setValue(x(699))
		setValue(x(701))
		setValue(x(702))
		putList(x(707))
		setConstant(any)
		setConstant(nil)
		putList(x(706))
		setConstant(det)
		setValue(x(707))
		putList(x(705))
		setConstant(det)
		setValue(x(706))
		putList(x(709))
		setConstant(false)
		setConstant(nil)
		putList(x(708))
		setConstant(false)
		setValue(x(709))
		putList(x(712))
		setConstant(value)
		setConstant(nil)
		putList(x(711))
		setConstant(int)
		setValue(x(712))
		putList(x(710))
		setConstant(array)
		setValue(x(711))
		putRecord(builtin [det imods types] x(704))
		setValue(x(705))
		setValue(x(708))
		setValue(x(710))
		putRecord(any 1 x(717))
		setConstant(det)
		putList(x(716))
		setValue(x(717))
		setConstant(nil)
		putList(x(715))
		setConstant(det)
		setValue(x(716))
		putList(x(714))
		setConstant(detOrKinded)
		setValue(x(715))
		putList(x(719))
		setConstant(false)
		setConstant(nil)
		putList(x(718))
		setConstant(false)
		setValue(x(719))
		putList(x(722))
		setConstant(bool)
		setConstant(nil)
		putList(x(721))
		setConstant(feature)
		setValue(x(722))
		putList(x(720))
		setConstant(recordCOrChunk)
		setValue(x(721))
		putRecord(builtin [det imods test types] x(713))
		setValue(x(714))
		setValue(x(718))
		setConstant(true)
		setValue(x(720))
		putRecord(any 1 x(726))
		setConstant(det)
		putList(x(725))
		setValue(x(726))
		setConstant(nil)
		putList(x(724))
		setConstant(det)
		setValue(x(725))
		putList(x(727))
		setConstant(false)
		setConstant(nil)
		putList(x(729))
		setConstant(float)
		setConstant(nil)
		putList(x(728))
		setConstant(int)
		setValue(x(729))
		putRecord(builtin [det imods types] x(723))
		setValue(x(724))
		setValue(x(727))
		setValue(x(728))
		putRecord(any 1 x(733))
		setConstant(det)
		putList(x(732))
		setValue(x(733))
		setConstant(nil)
		putList(x(731))
		setConstant(det)
		setValue(x(732))
		putList(x(734))
		setConstant(false)
		setConstant(nil)
		putList(x(736))
		setConstant(string)
		setConstant(nil)
		putList(x(735))
		setConstant(int)
		setValue(x(736))
		putRecord(builtin [det imods types] x(730))
		setValue(x(731))
		setValue(x(734))
		setValue(x(735))
		putRecord(any 1 x(740))
		setConstant(det)
		putList(x(739))
		setValue(x(740))
		setConstant(nil)
		putList(x(738))
		setConstant(det)
		setValue(x(739))
		putList(x(741))
		setConstant(false)
		setConstant(nil)
		putList(x(743))
		setConstant(bool)
		setConstant(nil)
		putList(x(742))
		setConstant(value)
		setValue(x(743))
		putRecord(builtin [det imods test types] x(737))
		setValue(x(738))
		setValue(x(741))
		setConstant(true)
		setValue(x(742))
		putRecord(any 1 x(747))
		setConstant(det)
		putList(x(746))
		setValue(x(747))
		setConstant(nil)
		putList(x(745))
		setConstant(det)
		setValue(x(746))
		putList(x(748))
		setConstant(false)
		setConstant(nil)
		putList(x(750))
		setConstant(bool)
		setConstant(nil)
		putList(x(749))
		setConstant(value)
		setValue(x(750))
		putRecord(builtin [det imods test types] x(744))
		setValue(x(745))
		setValue(x(748))
		setConstant(true)
		setValue(x(749))
		putRecord(any 1 x(754))
		setConstant(det)
		putList(x(753))
		setValue(x(754))
		setConstant(nil)
		putList(x(752))
		setConstant(det)
		setValue(x(753))
		putList(x(755))
		setConstant(false)
		setConstant(nil)
		putList(x(757))
		setConstant(bool)
		setConstant(nil)
		putList(x(756))
		setConstant(value)
		setValue(x(757))
		putRecord(builtin [det imods test types] x(751))
		setValue(x(752))
		setValue(x(755))
		setConstant(true)
		setValue(x(756))
		putRecord(any 1 x(761))
		setConstant(det)
		putList(x(760))
		setValue(x(761))
		setConstant(nil)
		putList(x(759))
		setConstant(det)
		setValue(x(760))
		putList(x(762))
		setConstant(false)
		setConstant(nil)
		putList(x(764))
		setConstant(bool)
		setConstant(nil)
		putList(x(763))
		setConstant(value)
		setValue(x(764))
		putRecord(builtin [det imods test types] x(758))
		setValue(x(759))
		setValue(x(762))
		setConstant(true)
		setValue(x(763))
		putRecord(any 1 x(768))
		setConstant(det)
		putList(x(767))
		setValue(x(768))
		setConstant(nil)
		putList(x(766))
		setConstant(det)
		setValue(x(767))
		putList(x(769))
		setConstant(false)
		setConstant(nil)
		putList(x(771))
		setConstant(bool)
		setConstant(nil)
		putList(x(770))
		setConstant(value)
		setValue(x(771))
		putRecord(builtin [det imods test types] x(765))
		setValue(x(766))
		setValue(x(769))
		setConstant(true)
		setValue(x(770))
		putRecord(any 1 x(775))
		setConstant(det)
		putList(x(774))
		setValue(x(775))
		setConstant(nil)
		putList(x(773))
		setConstant(det)
		setValue(x(774))
		putList(x(776))
		setConstant(false)
		setConstant(nil)
		putList(x(778))
		setConstant(bool)
		setConstant(nil)
		putList(x(777))
		setConstant(value)
		setValue(x(778))
		putRecord(builtin [det imods test types] x(772))
		setValue(x(773))
		setValue(x(776))
		setConstant(true)
		setValue(x(777))
		putRecord(any 1 x(782))
		setConstant(det)
		putList(x(781))
		setValue(x(782))
		setConstant(nil)
		putList(x(780))
		setConstant(any)
		setValue(x(781))
		putList(x(783))
		setConstant(false)
		setConstant(nil)
		putList(x(785))
		setConstant(bool)
		setConstant(nil)
		putList(x(784))
		setConstant(value)
		setValue(x(785))
		putRecord(builtin [det imods test types] x(779))
		setValue(x(780))
		setValue(x(783))
		setConstant(true)
		setValue(x(784))
		putRecord(any 1 x(789))
		setConstant(det)
		putList(x(788))
		setValue(x(789))
		setConstant(nil)
		putList(x(787))
		setConstant(det)
		setValue(x(788))
		putList(x(790))
		setConstant(false)
		setConstant(nil)
		putList(x(792))
		setConstant(bool)
		setConstant(nil)
		putList(x(791))
		setConstant(value)
		setValue(x(792))
		putRecord(builtin [det imods test types] x(786))
		setValue(x(787))
		setValue(x(790))
		setConstant(true)
		setValue(x(791))
		putRecord(any 1 x(796))
		setConstant(det)
		putList(x(795))
		setValue(x(796))
		setConstant(nil)
		putList(x(794))
		setConstant(det)
		setValue(x(795))
		putList(x(797))
		setConstant(false)
		setConstant(nil)
		putList(x(799))
		setConstant(bool)
		setConstant(nil)
		putList(x(798))
		setConstant(value)
		setValue(x(799))
		putRecord(builtin [det imods test types] x(793))
		setValue(x(794))
		setValue(x(797))
		setConstant(true)
		setValue(x(798))
		putRecord(any 1 x(803))
		setConstant(det)
		putList(x(802))
		setValue(x(803))
		setConstant(nil)
		putList(x(801))
		setConstant(det)
		setValue(x(802))
		putList(x(804))
		setConstant(false)
		setConstant(nil)
		putList(x(806))
		setConstant(bool)
		setConstant(nil)
		putList(x(805))
		setConstant(value)
		setValue(x(806))
		putRecord(builtin [det imods test types] x(800))
		setValue(x(801))
		setValue(x(804))
		setConstant(true)
		setValue(x(805))
		putRecord(any 1 x(810))
		setConstant(det)
		putList(x(809))
		setValue(x(810))
		setConstant(nil)
		putList(x(808))
		setConstant(any)
		setValue(x(809))
		putList(x(811))
		setConstant(false)
		setConstant(nil)
		putList(x(813))
		setConstant(bool)
		setConstant(nil)
		putList(x(812))
		setConstant(value)
		setValue(x(813))
		putRecord(builtin [det imods test types] x(807))
		setValue(x(808))
		setValue(x(811))
		setConstant(true)
		setValue(x(812))
		putRecord(any 1 x(817))
		setConstant(det)
		putList(x(816))
		setValue(x(817))
		setConstant(nil)
		putList(x(815))
		setConstant(det)
		setValue(x(816))
		putList(x(818))
		setConstant(false)
		setConstant(nil)
		putList(x(820))
		setConstant(bool)
		setConstant(nil)
		putList(x(819))
		setConstant(value)
		setValue(x(820))
		putRecord(builtin [det imods test types] x(814))
		setValue(x(815))
		setValue(x(818))
		setConstant(true)
		setValue(x(819))
		putRecord(any 1 x(824))
		setConstant(det)
		putList(x(823))
		setValue(x(824))
		setConstant(nil)
		putList(x(822))
		setConstant(any)
		setValue(x(823))
		putList(x(825))
		setConstant(false)
		setConstant(nil)
		putList(x(827))
		setConstant(bool)
		setConstant(nil)
		putList(x(826))
		setConstant(value)
		setValue(x(827))
		putRecord(builtin [det imods test types] x(821))
		setValue(x(822))
		setValue(x(825))
		setConstant(true)
		setValue(x(826))
		putRecord(any 1 x(831))
		setConstant(det)
		putList(x(830))
		setValue(x(831))
		setConstant(nil)
		putList(x(829))
		setConstant(det)
		setValue(x(830))
		putList(x(832))
		setConstant(false)
		setConstant(nil)
		putList(x(834))
		setConstant(bool)
		setConstant(nil)
		putList(x(833))
		setConstant(value)
		setValue(x(834))
		putRecord(builtin [det imods test types] x(828))
		setValue(x(829))
		setValue(x(832))
		setConstant(true)
		setValue(x(833))
		putRecord(any 1 x(838))
		setConstant(det)
		putList(x(837))
		setValue(x(838))
		setConstant(nil)
		putList(x(836))
		setConstant(det)
		setValue(x(837))
		putList(x(839))
		setConstant(false)
		setConstant(nil)
		putList(x(841))
		setConstant(bool)
		setConstant(nil)
		putList(x(840))
		setConstant(value)
		setValue(x(841))
		putRecord(builtin [det imods test types] x(835))
		setValue(x(836))
		setValue(x(839))
		setConstant(true)
		setValue(x(840))
		putRecord(any 1 x(845))
		setConstant(det)
		putList(x(844))
		setValue(x(845))
		setConstant(nil)
		putList(x(843))
		setConstant(det)
		setValue(x(844))
		putList(x(846))
		setConstant(false)
		setConstant(nil)
		putList(x(848))
		setConstant(bool)
		setConstant(nil)
		putList(x(847))
		setConstant(value)
		setValue(x(848))
		putRecord(builtin [det imods test types] x(842))
		setValue(x(843))
		setValue(x(846))
		setConstant(true)
		setValue(x(847))
		putRecord(any 1 x(852))
		setConstant(det)
		putList(x(851))
		setValue(x(852))
		setConstant(nil)
		putList(x(850))
		setConstant(det)
		setValue(x(851))
		putList(x(853))
		setConstant(false)
		setConstant(nil)
		putList(x(855))
		setConstant(bool)
		setConstant(nil)
		putList(x(854))
		setConstant(value)
		setValue(x(855))
		putRecord(builtin [det imods test types] x(849))
		setValue(x(850))
		setValue(x(853))
		setConstant(true)
		setValue(x(854))
		putRecord(any 1 x(859))
		setConstant(det)
		putList(x(858))
		setValue(x(859))
		setConstant(nil)
		putList(x(857))
		setConstant(det)
		setValue(x(858))
		putList(x(860))
		setConstant(false)
		setConstant(nil)
		putList(x(862))
		setConstant(bool)
		setConstant(nil)
		putList(x(861))
		setConstant(value)
		setValue(x(862))
		putRecord(builtin [det imods test types] x(856))
		setValue(x(857))
		setValue(x(860))
		setConstant(true)
		setValue(x(861))
		putRecord(any 1 x(866))
		setConstant(det)
		putList(x(865))
		setValue(x(866))
		setConstant(nil)
		putList(x(864))
		setConstant(det)
		setValue(x(865))
		putList(x(867))
		setConstant(false)
		setConstant(nil)
		putList(x(869))
		setConstant(bool)
		setConstant(nil)
		putList(x(868))
		setConstant(value)
		setValue(x(869))
		putRecord(builtin [det imods test types] x(863))
		setValue(x(864))
		setValue(x(867))
		setConstant(true)
		setValue(x(868))
		putRecord(any 1 x(873))
		setConstant(det)
		putList(x(872))
		setValue(x(873))
		setConstant(nil)
		putList(x(871))
		setConstant(det)
		setValue(x(872))
		putList(x(874))
		setConstant(false)
		setConstant(nil)
		putList(x(876))
		setConstant(bool)
		setConstant(nil)
		putList(x(875))
		setConstant(value)
		setValue(x(876))
		putRecord(builtin [det imods test types] x(870))
		setValue(x(871))
		setValue(x(874))
		setConstant(true)
		setValue(x(875))
		putRecord(any 1 x(880))
		setConstant(det)
		putList(x(879))
		setValue(x(880))
		setConstant(nil)
		putList(x(878))
		setConstant(det)
		setValue(x(879))
		putList(x(881))
		setConstant(false)
		setConstant(nil)
		putList(x(883))
		setConstant(bool)
		setConstant(nil)
		putList(x(882))
		setConstant(value)
		setValue(x(883))
		putRecord(builtin [det imods test types] x(877))
		setValue(x(878))
		setValue(x(881))
		setConstant(true)
		setValue(x(882))
		putRecord(any 1 x(887))
		setConstant(det)
		putList(x(886))
		setValue(x(887))
		setConstant(nil)
		putList(x(885))
		setConstant(det)
		setValue(x(886))
		putList(x(888))
		setConstant(false)
		setConstant(nil)
		putList(x(890))
		setConstant(bool)
		setConstant(nil)
		putList(x(889))
		setConstant(value)
		setValue(x(890))
		putRecord(builtin [det imods test types] x(884))
		setValue(x(885))
		setValue(x(888))
		setConstant(true)
		setValue(x(889))
		putRecord(any 1 x(894))
		setConstant(det)
		putList(x(893))
		setValue(x(894))
		setConstant(nil)
		putList(x(892))
		setConstant(det)
		setValue(x(893))
		putList(x(895))
		setConstant(false)
		setConstant(nil)
		putList(x(897))
		setConstant(bool)
		setConstant(nil)
		putList(x(896))
		setConstant(value)
		setValue(x(897))
		putRecord(builtin [det imods test types] x(891))
		setValue(x(892))
		setValue(x(895))
		setConstant(true)
		setValue(x(896))
		putRecord(any 1 x(901))
		setConstant(det)
		putList(x(900))
		setValue(x(901))
		setConstant(nil)
		putList(x(899))
		setConstant(det)
		setValue(x(900))
		putList(x(902))
		setConstant(false)
		setConstant(nil)
		putList(x(904))
		setConstant(bool)
		setConstant(nil)
		putList(x(903))
		setConstant(value)
		setValue(x(904))
		putRecord(builtin [det imods test types] x(898))
		setValue(x(899))
		setValue(x(902))
		setConstant(true)
		setValue(x(903))
		putRecord(any 1 x(908))
		setConstant(det)
		putList(x(907))
		setValue(x(908))
		setConstant(nil)
		putList(x(906))
		setConstant(det)
		setValue(x(907))
		putList(x(909))
		setConstant(false)
		setConstant(nil)
		putList(x(911))
		setConstant(bool)
		setConstant(nil)
		putList(x(910))
		setConstant(value)
		setValue(x(911))
		putRecord(builtin [det imods test types] x(905))
		setValue(x(906))
		setValue(x(909))
		setConstant(true)
		setValue(x(910))
		putRecord(any 1 x(915))
		setConstant(det)
		putList(x(914))
		setValue(x(915))
		setConstant(nil)
		putList(x(913))
		setConstant(det)
		setValue(x(914))
		putList(x(916))
		setConstant(false)
		setConstant(nil)
		putList(x(918))
		setConstant(bool)
		setConstant(nil)
		putList(x(917))
		setConstant(value)
		setValue(x(918))
		putRecord(builtin [det imods test types] x(912))
		setValue(x(913))
		setValue(x(916))
		setConstant(true)
		setValue(x(917))
		putRecord(any 1 x(922))
		setConstant(det)
		putList(x(921))
		setValue(x(922))
		setConstant(nil)
		putList(x(920))
		setConstant(det)
		setValue(x(921))
		putList(x(923))
		setConstant(true)
		setConstant(nil)
		putList(x(925))
		setConstant(bool)
		setConstant(nil)
		putList(x(924))
		setConstant(value)
		setValue(x(925))
		putRecord(builtin [det imods test types] x(919))
		setValue(x(920))
		setValue(x(923))
		setConstant(true)
		setValue(x(924))
		putRecord(any 1 x(929))
		setConstant(det)
		putList(x(928))
		setValue(x(929))
		setConstant(nil)
		putList(x(927))
		setConstant(detOrKinded)
		setValue(x(928))
		putList(x(930))
		setConstant(false)
		setConstant(nil)
		putList(x(932))
		setConstant(literal)
		setConstant(nil)
		putList(x(931))
		setConstant(recordC)
		setValue(x(932))
		putRecord(builtin [det imods types] x(926))
		setValue(x(927))
		setValue(x(930))
		setValue(x(931))
		putList(x(934))
		setConstant(det)
		setConstant(nil)
		putList(x(935))
		setConstant(false)
		setConstant(nil)
		putList(x(936))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(933))
		setValue(x(934))
		setValue(x(935))
		setValue(x(936))
		putRecord(any 1 x(940))
		setConstant(det)
		putList(x(939))
		setValue(x(940))
		setConstant(nil)
		putList(x(938))
		setConstant(det)
		setValue(x(939))
		putList(x(941))
		setConstant(false)
		setConstant(nil)
		putList(x(943))
		setConstant(float)
		setConstant(nil)
		putList(x(942))
		setConstant(float)
		setValue(x(943))
		putRecord(builtin [det imods types] x(937))
		setValue(x(938))
		setValue(x(941))
		setValue(x(942))
		putRecord(any 1 x(948))
		setConstant(det)
		putList(x(947))
		setValue(x(948))
		setConstant(nil)
		putList(x(946))
		setConstant(det)
		setValue(x(947))
		putList(x(945))
		setConstant(det)
		setValue(x(946))
		putList(x(950))
		setConstant(false)
		setConstant(nil)
		putList(x(949))
		setConstant(false)
		setValue(x(950))
		putList(x(953))
		setConstant(tuple)
		setConstant(nil)
		putList(x(952))
		setConstant(int)
		setValue(x(953))
		putList(x(951))
		setConstant(literal)
		setValue(x(952))
		putRecord(builtin [det imods types] x(944))
		setValue(x(945))
		setValue(x(949))
		setValue(x(951))
		putRecord(any 1 x(958))
		setConstant(det)
		putList(x(957))
		setValue(x(958))
		setConstant(nil)
		putList(x(956))
		setConstant(det)
		setValue(x(957))
		putList(x(955))
		setConstant(det)
		setValue(x(956))
		putList(x(960))
		setConstant(false)
		setConstant(nil)
		putList(x(959))
		setConstant(false)
		setValue(x(960))
		putList(x(963))
		setConstant(comparable)
		setConstant(nil)
		putList(x(962))
		setConstant(comparable)
		setValue(x(963))
		putList(x(961))
		setConstant(comparable)
		setValue(x(962))
		putRecord(builtin [det imods types] x(954))
		setValue(x(955))
		setValue(x(959))
		setValue(x(961))
		putRecord(any 1 x(968))
		setConstant(det)
		putList(x(967))
		setValue(x(968))
		setConstant(nil)
		putList(x(966))
		setConstant(det)
		setValue(x(967))
		putList(x(965))
		setConstant(det)
		setValue(x(966))
		putList(x(970))
		setConstant(false)
		setConstant(nil)
		putList(x(969))
		setConstant(false)
		setValue(x(970))
		putList(x(973))
		setConstant(comparable)
		setConstant(nil)
		putList(x(972))
		setConstant(comparable)
		setValue(x(973))
		putList(x(971))
		setConstant(comparable)
		setValue(x(972))
		putRecord(builtin [det imods types] x(964))
		setValue(x(965))
		setValue(x(969))
		setValue(x(971))
		putList(x(977))
		setConstant(any)
		setConstant(nil)
		putList(x(976))
		setConstant(det)
		setValue(x(977))
		putList(x(975))
		setConstant(det)
		setValue(x(976))
		putList(x(980))
		setConstant(false)
		setConstant(nil)
		putList(x(979))
		setConstant(false)
		setValue(x(980))
		putList(x(978))
		setConstant(false)
		setValue(x(979))
		putList(x(983))
		setConstant(value)
		setConstant(nil)
		putList(x(982))
		setConstant(record)
		setValue(x(983))
		putList(x(981))
		setConstant('class')
		setValue(x(982))
		putRecord(builtin [det imods types] x(974))
		setValue(x(975))
		setValue(x(978))
		setValue(x(981))
		putRecord(any 1 x(989))
		setConstant(det)
		putList(x(988))
		setValue(x(989))
		setConstant(nil)
		putList(x(987))
		setConstant(any)
		setValue(x(988))
		putList(x(986))
		setConstant(det)
		setValue(x(987))
		putList(x(985))
		setConstant(det)
		setValue(x(986))
		putList(x(992))
		setConstant(false)
		setConstant(nil)
		putList(x(991))
		setConstant(false)
		setValue(x(992))
		putList(x(990))
		setConstant(false)
		setValue(x(991))
		putList(x(996))
		setConstant(array)
		setConstant(nil)
		putList(x(995))
		setConstant(value)
		setValue(x(996))
		putList(x(994))
		setConstant(int)
		setValue(x(995))
		putList(x(993))
		setConstant(int)
		setValue(x(994))
		putRecord(builtin [det imods types] x(984))
		setValue(x(985))
		setValue(x(990))
		setValue(x(993))
		putRecord(any 1 x(1000))
		setConstant(det)
		putList(x(999))
		setValue(x(1000))
		setConstant(nil)
		putList(x(998))
		setConstant(any)
		setValue(x(999))
		putList(x(1001))
		setConstant(false)
		setConstant(nil)
		putList(x(1003))
		setConstant(cell)
		setConstant(nil)
		putList(x(1002))
		setConstant(value)
		setValue(x(1003))
		putRecord(builtin [det imods types] x(997))
		setValue(x(998))
		setValue(x(1001))
		setValue(x(1002))
		putRecord(any 1 x(1007))
		setConstant(det)
		putList(x(1006))
		setValue(x(1007))
		setConstant(nil)
		putList(x(1005))
		setConstant(det)
		setValue(x(1006))
		putList(x(1008))
		setConstant(false)
		setConstant(nil)
		putList(x(1010))
		setConstant(chunk)
		setConstant(nil)
		putList(x(1009))
		setConstant(record)
		setValue(x(1010))
		putRecord(builtin [det imods types] x(1004))
		setValue(x(1005))
		setValue(x(1008))
		setValue(x(1009))
		putRecord(any 1 x(1013))
		setConstant(det)
		putList(x(1012))
		setValue(x(1013))
		setConstant(nil)
		putList(x(1014))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1011))
		setValue(x(1012))
		setConstant(nil)
		setValue(x(1014))
		putRecord(any 1 x(1017))
		setConstant(det)
		putList(x(1016))
		setValue(x(1017))
		setConstant(nil)
		putList(x(1018))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1015))
		setValue(x(1016))
		setConstant(nil)
		setValue(x(1018))
		putRecord(any 1 x(1021))
		setConstant(det)
		putList(x(1020))
		setValue(x(1021))
		setConstant(nil)
		putList(x(1022))
		setConstant(name)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1019))
		setValue(x(1020))
		setConstant(nil)
		setValue(x(1022))
		putRecord(any 1 x(1026))
		setConstant(det)
		putList(x(1025))
		setValue(x(1026))
		setConstant(nil)
		putList(x(1024))
		setConstant(any)
		setValue(x(1025))
		putList(x(1027))
		setConstant(false)
		setConstant(nil)
		putList(x(1029))
		setConstant(port)
		setConstant(nil)
		putList(x(1028))
		setConstant(value)
		setValue(x(1029))
		putRecord(builtin [det imods types] x(1023))
		setValue(x(1024))
		setValue(x(1027))
		setValue(x(1028))
		putRecord(any 1 x(1033))
		setConstant(det)
		putList(x(1032))
		setValue(x(1033))
		setConstant(nil)
		putList(x(1031))
		setConstant(det)
		setValue(x(1032))
		putList(x(1034))
		setConstant(false)
		setConstant(nil)
		putList(x(1036))
		setConstant(name)
		setConstant(nil)
		putList(x(1035))
		setConstant(atom)
		setValue(x(1036))
		putRecord(builtin [det imods types] x(1030))
		setValue(x(1031))
		setValue(x(1034))
		setValue(x(1035))
		putRecord(any 1 x(1040))
		setConstant(det)
		putList(x(1039))
		setValue(x(1040))
		setConstant(nil)
		putList(x(1038))
		setConstant(det)
		setValue(x(1039))
		putList(x(1041))
		setConstant(false)
		setConstant(nil)
		putList(x(1043))
		setConstant(bool)
		setConstant(nil)
		putList(x(1042))
		setConstant(bool)
		setValue(x(1043))
		putRecord(builtin [det imods test types] x(1037))
		setValue(x(1038))
		setValue(x(1041))
		setConstant(true)
		setValue(x(1042))
		putRecord(any 1 x(1048))
		setConstant(det)
		putList(x(1047))
		setValue(x(1048))
		setConstant(nil)
		putList(x(1046))
		setConstant(det)
		setValue(x(1047))
		putList(x(1045))
		setConstant(det)
		setValue(x(1046))
		putList(x(1050))
		setConstant(false)
		setConstant(nil)
		putList(x(1049))
		setConstant(false)
		setValue(x(1050))
		putList(x(1053))
		setConstant(bool)
		setConstant(nil)
		putList(x(1052))
		setConstant(bool)
		setValue(x(1053))
		putList(x(1051))
		setConstant(bool)
		setValue(x(1052))
		putRecord(builtin [det imods test types] x(1044))
		setValue(x(1045))
		setValue(x(1049))
		setConstant(true)
		setValue(x(1051))
		putRecord(any 1 x(1057))
		setConstant(det)
		putList(x(1056))
		setValue(x(1057))
		setConstant(nil)
		putList(x(1055))
		setConstant(det)
		setValue(x(1056))
		putList(x(1058))
		setConstant(false)
		setConstant(nil)
		putList(x(1060))
		setConstant(int)
		setConstant(nil)
		putList(x(1059))
		setConstant(procedure)
		setValue(x(1060))
		putRecord(builtin [det imods types] x(1054))
		setValue(x(1055))
		setValue(x(1058))
		setValue(x(1059))
		putList(x(1064))
		setConstant(any)
		setConstant(nil)
		putList(x(1063))
		setConstant(det)
		setValue(x(1064))
		putList(x(1062))
		setConstant(det)
		setValue(x(1063))
		putList(x(1067))
		setConstant(false)
		setConstant(nil)
		putList(x(1066))
		setConstant(false)
		setValue(x(1067))
		putList(x(1065))
		setConstant(false)
		setValue(x(1066))
		putList(x(1070))
		setConstant(value)
		setConstant(nil)
		putList(x(1069))
		setConstant(int)
		setValue(x(1070))
		putList(x(1068))
		setConstant(array)
		setValue(x(1069))
		putRecord(builtin [det imods types] x(1061))
		setValue(x(1062))
		setValue(x(1065))
		setValue(x(1068))
		putRecord(any 1 x(1074))
		setConstant(det)
		putList(x(1073))
		setValue(x(1074))
		setConstant(nil)
		putList(x(1072))
		setConstant(det)
		setValue(x(1073))
		putList(x(1075))
		setConstant(false)
		setConstant(nil)
		putList(x(1077))
		setConstant(float)
		setConstant(nil)
		putList(x(1076))
		setConstant(float)
		setValue(x(1077))
		putRecord(builtin [det imods types] x(1071))
		setValue(x(1072))
		setValue(x(1075))
		setValue(x(1076))
		putList(x(1080))
		setConstant(any)
		setConstant(nil)
		putList(x(1079))
		setConstant(det)
		setValue(x(1080))
		putList(x(1082))
		setConstant(false)
		setConstant(nil)
		putList(x(1081))
		setConstant(false)
		setValue(x(1082))
		putList(x(1084))
		setConstant(value)
		setConstant(nil)
		putList(x(1083))
		setConstant(port)
		setValue(x(1084))
		putRecord(builtin [det imods types] x(1078))
		setValue(x(1079))
		setValue(x(1081))
		setValue(x(1083))
		putRecord(any 1 x(1088))
		setConstant(det)
		putList(x(1087))
		setValue(x(1088))
		setConstant(nil)
		putList(x(1086))
		setConstant(det)
		setValue(x(1087))
		putList(x(1089))
		setConstant(false)
		setConstant(nil)
		putList(x(1091))
		setConstant(float)
		setConstant(nil)
		putList(x(1090))
		setConstant(float)
		setValue(x(1091))
		putRecord(builtin [det imods types] x(1085))
		setValue(x(1086))
		setValue(x(1089))
		setValue(x(1090))
		putRecord(any 1 x(1095))
		setConstant(det)
		putList(x(1094))
		setValue(x(1095))
		setConstant(nil)
		putList(x(1093))
		setConstant(det)
		setValue(x(1094))
		putList(x(1096))
		setConstant(false)
		setConstant(nil)
		putList(x(1098))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1097))
		setConstant(space)
		setValue(x(1098))
		putRecord(builtin [det imods types] x(1092))
		setValue(x(1093))
		setValue(x(1096))
		setValue(x(1097))
		putList(x(1101))
		setConstant(any)
		setConstant(nil)
		putList(x(1100))
		setConstant(det)
		setValue(x(1101))
		putList(x(1103))
		setConstant(true)
		setConstant(nil)
		putList(x(1102))
		setConstant(false)
		setValue(x(1103))
		putList(x(1105))
		setConstant(value)
		setConstant(nil)
		putList(x(1104))
		setConstant(space)
		setValue(x(1105))
		putRecord(builtin [det imods types] x(1099))
		setValue(x(1100))
		setValue(x(1102))
		setValue(x(1104))
		putRecord(any 1 x(1109))
		setConstant(det)
		putList(x(1108))
		setValue(x(1109))
		setConstant(nil)
		putList(x(1107))
		setConstant(det)
		setValue(x(1108))
		putList(x(1110))
		setConstant(false)
		setConstant(nil)
		putList(x(1112))
		setConstant(space)
		setConstant(nil)
		putList(x(1111))
		setConstant(space)
		setValue(x(1112))
		putRecord(builtin [det imods types] x(1106))
		setValue(x(1107))
		setValue(x(1110))
		setValue(x(1111))
		putList(x(1115))
		setConstant(det)
		setConstant(nil)
		putList(x(1114))
		setConstant(det)
		setValue(x(1115))
		putList(x(1117))
		setConstant(false)
		setConstant(nil)
		putList(x(1116))
		setConstant(false)
		setValue(x(1117))
		putList(x(1119))
		setConstant(value)
		setConstant(nil)
		putList(x(1118))
		setConstant(space)
		setValue(x(1119))
		putRecord(builtin [det imods types] x(1113))
		setValue(x(1114))
		setValue(x(1116))
		setValue(x(1118))
		putList(x(1122))
		setConstant(det)
		setConstant(nil)
		putList(x(1121))
		setConstant(det)
		setValue(x(1122))
		putList(x(1124))
		setConstant(false)
		setConstant(nil)
		putList(x(1123))
		setConstant(false)
		setValue(x(1124))
		putList(x(1126))
		setConstant('procedure/1')
		setConstant(nil)
		putList(x(1125))
		setConstant(space)
		setValue(x(1126))
		putRecord(builtin [det imods types] x(1120))
		setValue(x(1121))
		setValue(x(1123))
		setValue(x(1125))
		putRecord(any 1 x(1130))
		setConstant(det)
		putList(x(1129))
		setValue(x(1130))
		setConstant(nil)
		putList(x(1128))
		setConstant(det)
		setValue(x(1129))
		putList(x(1131))
		setConstant(false)
		setConstant(nil)
		putList(x(1133))
		setConstant(value)
		setConstant(nil)
		putList(x(1132))
		setConstant(space)
		setValue(x(1133))
		putRecord(builtin [det imods types] x(1127))
		setValue(x(1128))
		setValue(x(1131))
		setValue(x(1132))
		putRecord(any 1 x(1137))
		setConstant(det)
		putList(x(1136))
		setValue(x(1137))
		setConstant(nil)
		putList(x(1135))
		setConstant(det)
		setValue(x(1136))
		putList(x(1138))
		setConstant(false)
		setConstant(nil)
		putList(x(1140))
		setConstant(space)
		setConstant(nil)
		putList(x(1139))
		setConstant('procedure/1')
		setValue(x(1140))
		putRecord(builtin [det imods types] x(1134))
		setValue(x(1135))
		setValue(x(1138))
		setValue(x(1139))
		putRecord(any 1 x(1144))
		setConstant(det)
		putList(x(1143))
		setValue(x(1144))
		setConstant(nil)
		putList(x(1142))
		setConstant(det)
		setValue(x(1143))
		putList(x(1145))
		setConstant(false)
		setConstant(nil)
		putList(x(1147))
		setConstant(float)
		setConstant(nil)
		putList(x(1146))
		setConstant(float)
		setValue(x(1147))
		putRecord(builtin [det imods types] x(1141))
		setValue(x(1142))
		setValue(x(1145))
		setValue(x(1146))
		putRecord(any 1 x(1151))
		setConstant(det)
		putList(x(1150))
		setValue(x(1151))
		setConstant(nil)
		putList(x(1149))
		setConstant(det)
		setValue(x(1150))
		putList(x(1152))
		setConstant(false)
		setConstant(nil)
		putList(x(1154))
		setConstant(atom)
		setConstant(nil)
		putList(x(1153))
		setConstant(string)
		setValue(x(1154))
		putRecord(builtin [det imods types] x(1148))
		setValue(x(1149))
		setValue(x(1152))
		setValue(x(1153))
		putRecord(any 1 x(1158))
		setConstant(det)
		putList(x(1157))
		setValue(x(1158))
		setConstant(nil)
		putList(x(1156))
		setConstant(det)
		setValue(x(1157))
		putList(x(1159))
		setConstant(false)
		setConstant(nil)
		putList(x(1161))
		setConstant(float)
		setConstant(nil)
		putList(x(1160))
		setConstant(string)
		setValue(x(1161))
		putRecord(builtin [det imods types] x(1155))
		setValue(x(1156))
		setValue(x(1159))
		setValue(x(1160))
		putRecord(any 1 x(1165))
		setConstant(det)
		putList(x(1164))
		setValue(x(1165))
		setConstant(nil)
		putList(x(1163))
		setConstant(det)
		setValue(x(1164))
		putList(x(1166))
		setConstant(false)
		setConstant(nil)
		putList(x(1168))
		setConstant(int)
		setConstant(nil)
		putList(x(1167))
		setConstant(string)
		setValue(x(1168))
		putRecord(builtin [det imods types] x(1162))
		setValue(x(1163))
		setValue(x(1166))
		setValue(x(1167))
		putRecord(any 1 x(1172))
		setConstant(det)
		putList(x(1171))
		setValue(x(1172))
		setConstant(nil)
		putList(x(1170))
		setConstant(det)
		setValue(x(1171))
		putList(x(1173))
		setConstant(false)
		setConstant(nil)
		putList(x(1175))
		setConstant(float)
		setConstant(nil)
		putList(x(1174))
		setConstant(float)
		setValue(x(1175))
		putRecord(builtin [det imods types] x(1169))
		setValue(x(1170))
		setValue(x(1173))
		setValue(x(1174))
		putList(x(1178))
		setConstant(any)
		setConstant(nil)
		putList(x(1177))
		setConstant(det)
		setValue(x(1178))
		putList(x(1180))
		setConstant(false)
		setConstant(nil)
		putList(x(1179))
		setConstant(false)
		setValue(x(1180))
		putList(x(1182))
		setConstant(record)
		setConstant(nil)
		putList(x(1181))
		setConstant(literal)
		setValue(x(1182))
		putRecord(builtin [det imods types] x(1176))
		setValue(x(1177))
		setValue(x(1179))
		setValue(x(1181))
		putList(x(1184))
		setConstant(det)
		setConstant(nil)
		putList(x(1185))
		setConstant(false)
		setConstant(nil)
		putList(x(1186))
		setConstant(procedure)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1183))
		setValue(x(1184))
		setValue(x(1185))
		setValue(x(1186))
		putRecord(any 1 x(1190))
		setConstant(det)
		putList(x(1189))
		setValue(x(1190))
		setConstant(nil)
		putList(x(1188))
		setConstant(det)
		setValue(x(1189))
		putList(x(1191))
		setConstant(false)
		setConstant(nil)
		putList(x(1193))
		setConstant(atom)
		setConstant(nil)
		putList(x(1192))
		setConstant('thread')
		setValue(x(1193))
		putRecord(builtin [det imods types] x(1187))
		setValue(x(1188))
		setValue(x(1191))
		setValue(x(1192))
		putList(x(1196))
		setConstant(det)
		setConstant(nil)
		putList(x(1195))
		setConstant(det)
		setValue(x(1196))
		putList(x(1198))
		setConstant(false)
		setConstant(nil)
		putList(x(1197))
		setConstant(false)
		setValue(x(1198))
		putList(x(1200))
		setConstant(value)
		setConstant(nil)
		putList(x(1199))
		setConstant('thread')
		setValue(x(1200))
		putRecord(builtin [det imods types] x(1194))
		setValue(x(1195))
		setValue(x(1197))
		setValue(x(1199))
		putRecord(any 1 x(1204))
		setConstant(det)
		putList(x(1203))
		setValue(x(1204))
		setConstant(nil)
		putList(x(1202))
		setConstant(det)
		setValue(x(1203))
		putList(x(1205))
		setConstant(false)
		setConstant(nil)
		putList(x(1207))
		setConstant(bool)
		setConstant(nil)
		putList(x(1206))
		setConstant(value)
		setValue(x(1207))
		putRecord(builtin [det imods test types] x(1201))
		setValue(x(1202))
		setValue(x(1205))
		setConstant(true)
		setValue(x(1206))
		putRecord(any 1 x(1211))
		setConstant(det)
		putList(x(1210))
		setValue(x(1211))
		setConstant(nil)
		putList(x(1209))
		setConstant(det)
		setValue(x(1210))
		putList(x(1212))
		setConstant(false)
		setConstant(nil)
		putList(x(1214))
		setConstant(bool)
		setConstant(nil)
		putList(x(1213))
		setConstant('thread')
		setValue(x(1214))
		putRecord(builtin [det imods test types] x(1208))
		setValue(x(1209))
		setValue(x(1212))
		setConstant(true)
		setValue(x(1213))
		putList(x(1216))
		setConstant(det)
		setConstant(nil)
		putList(x(1217))
		setConstant(false)
		setConstant(nil)
		putList(x(1218))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1215))
		setValue(x(1216))
		setValue(x(1217))
		setValue(x(1218))
		putList(x(1220))
		setConstant(det)
		setConstant(nil)
		putList(x(1221))
		setConstant(false)
		setConstant(nil)
		putList(x(1222))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1219))
		setValue(x(1220))
		setValue(x(1221))
		setValue(x(1222))
		putList(x(1225))
		setConstant(det)
		setConstant(nil)
		putList(x(1224))
		setConstant(det)
		setValue(x(1225))
		putList(x(1227))
		setConstant(false)
		setConstant(nil)
		putList(x(1226))
		setConstant(false)
		setValue(x(1227))
		putList(x(1229))
		setConstant(atom)
		setConstant(nil)
		putList(x(1228))
		setConstant('thread')
		setValue(x(1229))
		putRecord(builtin [det imods types] x(1223))
		setValue(x(1224))
		setValue(x(1226))
		setValue(x(1228))
		putRecord(any 1 x(1233))
		setConstant(det)
		putList(x(1232))
		setValue(x(1233))
		setConstant(nil)
		putList(x(1231))
		setConstant(det)
		setValue(x(1232))
		putList(x(1234))
		setConstant(false)
		setConstant(nil)
		putList(x(1236))
		setConstant(atom)
		setConstant(nil)
		putList(x(1235))
		setConstant('thread')
		setValue(x(1236))
		putRecord(builtin [det imods types] x(1230))
		setValue(x(1231))
		setValue(x(1234))
		setValue(x(1235))
		putList(x(1238))
		setConstant(det)
		setConstant(nil)
		putList(x(1239))
		setConstant(false)
		setConstant(nil)
		putList(x(1240))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1237))
		setValue(x(1238))
		setValue(x(1239))
		setValue(x(1240))
		putRecord(any 1 x(1243))
		setConstant(det)
		putList(x(1242))
		setValue(x(1243))
		setConstant(nil)
		putList(x(1244))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1241))
		setValue(x(1242))
		setConstant(nil)
		setValue(x(1244))
		putRecord(any 1 x(1247))
		setConstant(det)
		putList(x(1246))
		setValue(x(1247))
		setConstant(nil)
		putList(x(1248))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1245))
		setValue(x(1246))
		setConstant(nil)
		setValue(x(1248))
		putList(x(1250))
		setConstant(det)
		setConstant(nil)
		putList(x(1251))
		setConstant(false)
		setConstant(nil)
		putList(x(1252))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1249))
		setValue(x(1250))
		setValue(x(1251))
		setValue(x(1252))
		putRecord(any 1 x(1256))
		setConstant(det)
		putList(x(1255))
		setValue(x(1256))
		setConstant(nil)
		putList(x(1254))
		setConstant(any)
		setValue(x(1255))
		putList(x(1257))
		setConstant(false)
		setConstant(nil)
		putList(x(1259))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1258))
		setConstant(value)
		setValue(x(1259))
		putRecord(builtin [det imods types] x(1253))
		setValue(x(1254))
		setValue(x(1257))
		setValue(x(1258))
		putRecord(any 1 x(1263))
		setConstant(det)
		putList(x(1262))
		setValue(x(1263))
		setConstant(nil)
		putList(x(1261))
		setConstant(det)
		setValue(x(1262))
		putList(x(1264))
		setConstant(false)
		setConstant(nil)
		putList(x(1266))
		setConstant(atom)
		setConstant(nil)
		putList(x(1265))
		setConstant(value)
		setValue(x(1266))
		putRecord(builtin [det imods types] x(1260))
		setValue(x(1261))
		setValue(x(1264))
		setValue(x(1265))
		putList(x(1268))
		setConstant(det)
		setConstant(nil)
		putList(x(1269))
		setConstant(false)
		setConstant(nil)
		putList(x(1270))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1267))
		setValue(x(1268))
		setValue(x(1269))
		setValue(x(1270))
		putList(x(1273))
		setConstant(any)
		setConstant(nil)
		putList(x(1272))
		setConstant(any)
		setValue(x(1273))
		putList(x(1275))
		setConstant(false)
		setConstant(nil)
		putList(x(1274))
		setConstant(false)
		setValue(x(1275))
		putList(x(1277))
		setConstant(value)
		setConstant(nil)
		putList(x(1276))
		setConstant(value)
		setValue(x(1277))
		putRecord(builtin [det imods types] x(1271))
		setValue(x(1272))
		setValue(x(1274))
		setValue(x(1276))
		putRecord(any 1 x(1281))
		setConstant(det)
		putList(x(1280))
		setValue(x(1281))
		setConstant(nil)
		putList(x(1279))
		setConstant(det)
		setValue(x(1280))
		putList(x(1282))
		setConstant(false)
		setConstant(nil)
		putList(x(1284))
		setConstant(int)
		setConstant(nil)
		putList(x(1283))
		setConstant(record)
		setValue(x(1284))
		putRecord(builtin [det imods types] x(1278))
		setValue(x(1279))
		setValue(x(1282))
		setValue(x(1283))
		putList(x(1287))
		setConstant(any)
		setConstant(nil)
		putList(x(1286))
		setConstant(detOrKinded)
		setValue(x(1287))
		putList(x(1289))
		setConstant(false)
		setConstant(nil)
		putList(x(1288))
		setConstant(false)
		setValue(x(1289))
		putList(x(1291))
		setConstant(int)
		setConstant(nil)
		putList(x(1290))
		setConstant(record)
		setValue(x(1291))
		putRecord(builtin [det imods types] x(1285))
		setValue(x(1286))
		setValue(x(1288))
		setValue(x(1290))
		putRecord(any 1 x(1296))
		setConstant(det)
		putList(x(1295))
		setValue(x(1296))
		setConstant(nil)
		putList(x(1294))
		setConstant(detOrKinded)
		setValue(x(1295))
		putList(x(1293))
		setConstant(detOrKinded)
		setValue(x(1294))
		putList(x(1298))
		setConstant(false)
		setConstant(nil)
		putList(x(1297))
		setConstant(false)
		setValue(x(1298))
		putList(x(1301))
		setConstant(bool)
		setConstant(nil)
		putList(x(1300))
		setConstant(value)
		setValue(x(1301))
		putList(x(1299))
		setConstant(value)
		setValue(x(1300))
		putRecord(builtin [det imods negated test types] x(1292))
		setValue(x(1293))
		setValue(x(1297))
		setConstant('==')
		setConstant(true)
		setValue(x(1299))
		putList(x(1305))
		setConstant(any)
		setConstant(nil)
		putList(x(1304))
		setConstant(det)
		setValue(x(1305))
		putList(x(1303))
		setConstant(detOrKinded)
		setValue(x(1304))
		putList(x(1307))
		setConstant(false)
		setConstant(nil)
		putList(x(1306))
		setConstant(false)
		setValue(x(1307))
		putList(x(1310))
		setConstant(value)
		setConstant(nil)
		putList(x(1309))
		setConstant(feature)
		setValue(x(1310))
		putList(x(1308))
		setConstant(recordCOrChunk)
		setValue(x(1309))
		putRecord(builtin [det imods types] x(1302))
		setValue(x(1303))
		setValue(x(1306))
		setValue(x(1308))
		putRecord(any 1 x(1315))
		setConstant(det)
		putList(x(1314))
		setValue(x(1315))
		setConstant(nil)
		putList(x(1313))
		setConstant(det)
		setValue(x(1314))
		putList(x(1312))
		setConstant(det)
		setValue(x(1313))
		putList(x(1317))
		setConstant(false)
		setConstant(nil)
		putList(x(1316))
		setConstant(false)
		setValue(x(1317))
		putList(x(1320))
		setConstant(procedure)
		setConstant(nil)
		putList(x(1319))
		setConstant(int)
		setValue(x(1320))
		putList(x(1318))
		setConstant(virtualString)
		setValue(x(1319))
		putRecord(builtin [det imods types] x(1311))
		setValue(x(1312))
		setValue(x(1316))
		setValue(x(1318))
		putRecord(any 1 x(1324))
		setConstant(det)
		putList(x(1323))
		setValue(x(1324))
		setConstant(nil)
		putList(x(1322))
		setConstant(det)
		setValue(x(1323))
		putList(x(1325))
		setConstant(false)
		setConstant(nil)
		putList(x(1327))
		setConstant(record)
		setConstant(nil)
		putList(x(1326))
		setConstant(record)
		setValue(x(1327))
		putRecord(builtin [det imods types] x(1321))
		setValue(x(1322))
		setValue(x(1325))
		setValue(x(1326))
		putRecord(any 1 x(1332))
		setConstant(det)
		putList(x(1331))
		setValue(x(1332))
		setConstant(nil)
		putList(x(1330))
		setConstant(det)
		setValue(x(1331))
		putList(x(1329))
		setConstant(det)
		setValue(x(1330))
		putList(x(1334))
		setConstant(false)
		setConstant(nil)
		putList(x(1333))
		setConstant(false)
		setValue(x(1334))
		putList(x(1337))
		setConstant(int)
		setConstant(nil)
		putList(x(1336))
		setConstant(int)
		setValue(x(1337))
		putList(x(1335))
		setConstant(int)
		setValue(x(1336))
		putRecord(builtin [det imods types] x(1328))
		setValue(x(1329))
		setValue(x(1333))
		setValue(x(1335))
		putRecord(any 1 x(1342))
		setConstant(det)
		putList(x(1341))
		setValue(x(1342))
		setConstant(nil)
		putList(x(1340))
		setConstant(det)
		setValue(x(1341))
		putList(x(1339))
		setConstant(det)
		setValue(x(1340))
		putList(x(1344))
		setConstant(false)
		setConstant(nil)
		putList(x(1343))
		setConstant(false)
		setValue(x(1344))
		putList(x(1347))
		setConstant(float)
		setConstant(nil)
		putList(x(1346))
		setConstant(float)
		setValue(x(1347))
		putList(x(1345))
		setConstant(float)
		setValue(x(1346))
		putRecord(builtin [det imods types] x(1338))
		setValue(x(1339))
		setValue(x(1343))
		setValue(x(1345))
		putRecord(any 1 x(1351))
		setConstant(det)
		putList(x(1350))
		setValue(x(1351))
		setConstant(nil)
		putList(x(1349))
		setConstant(det)
		setValue(x(1350))
		putList(x(1352))
		setConstant(false)
		setConstant(nil)
		putList(x(1354))
		setConstant('class')
		setConstant(nil)
		putList(x(1353))
		setConstant(object)
		setValue(x(1354))
		putRecord(builtin [det imods types] x(1348))
		setValue(x(1349))
		setValue(x(1352))
		setValue(x(1353))
		putRecord(any 1 x(1358))
		setConstant(det)
		putList(x(1357))
		setValue(x(1358))
		setConstant(nil)
		putList(x(1356))
		setConstant(any)
		setValue(x(1357))
		putList(x(1359))
		setConstant(false)
		setConstant(nil)
		putList(x(1361))
		setConstant(bool)
		setConstant(nil)
		putList(x(1360))
		setConstant(value)
		setValue(x(1361))
		putRecord(builtin [det imods test types] x(1355))
		setValue(x(1356))
		setValue(x(1359))
		setConstant(true)
		setValue(x(1360))
		putRecord(any 1 x(1370))
		setConstant(det)
		putList(x(1369))
		setValue(x(1370))
		setConstant(nil)
		putList(x(1368))
		setConstant(det)
		setValue(x(1369))
		putList(x(1367))
		setConstant(det)
		setValue(x(1368))
		putList(x(1366))
		setConstant(det)
		setValue(x(1367))
		putList(x(1365))
		setConstant(det)
		setValue(x(1366))
		putList(x(1364))
		setConstant(det)
		setValue(x(1365))
		putList(x(1363))
		setConstant(det)
		setValue(x(1364))
		putList(x(1376))
		setConstant(false)
		setConstant(nil)
		putList(x(1375))
		setConstant(false)
		setValue(x(1376))
		putList(x(1374))
		setConstant(false)
		setValue(x(1375))
		putList(x(1373))
		setConstant(false)
		setValue(x(1374))
		putList(x(1372))
		setConstant(false)
		setValue(x(1373))
		putList(x(1371))
		setConstant(false)
		setValue(x(1372))
		putList(x(1383))
		setConstant('class')
		setConstant(nil)
		putList(x(1382))
		setConstant(bool)
		setValue(x(1383))
		putList(x(1381))
		setConstant(bool)
		setValue(x(1382))
		putList(x(1380))
		setConstant(dictionary)
		setValue(x(1381))
		putList(x(1379))
		setConstant(record)
		setValue(x(1380))
		putList(x(1378))
		setConstant(record)
		setValue(x(1379))
		putList(x(1377))
		setConstant(dictionary)
		setValue(x(1378))
		putRecord(builtin [det imods types] x(1362))
		setValue(x(1363))
		setValue(x(1371))
		setValue(x(1377))
		putRecord(any 1 x(1388))
		setConstant(det)
		putList(x(1387))
		setValue(x(1388))
		setConstant(nil)
		putList(x(1386))
		setConstant(det)
		setValue(x(1387))
		putList(x(1385))
		setConstant(det)
		setValue(x(1386))
		putList(x(1390))
		setConstant(false)
		setConstant(nil)
		putList(x(1389))
		setConstant(false)
		setValue(x(1390))
		putList(x(1393))
		setConstant(int)
		setConstant(nil)
		putList(x(1392))
		setConstant(int)
		setValue(x(1393))
		putList(x(1391))
		setConstant(int)
		setValue(x(1392))
		putRecord(builtin [det imods types] x(1384))
		setValue(x(1385))
		setValue(x(1389))
		setValue(x(1391))
		putList(x(1397))
		setConstant(any)
		setConstant(nil)
		putList(x(1396))
		setConstant(any)
		setValue(x(1397))
		putList(x(1395))
		setConstant(detOrKinded)
		setValue(x(1396))
		putList(x(1400))
		setConstant(false)
		setConstant(nil)
		putList(x(1399))
		setConstant(false)
		setValue(x(1400))
		putList(x(1398))
		setConstant(false)
		setValue(x(1399))
		putRecord(list 1 x(1404))
		setConstant(feature)
		putList(x(1403))
		setValue(x(1404))
		setConstant(nil)
		putList(x(1402))
		setConstant(value)
		setValue(x(1403))
		putList(x(1401))
		setConstant(recordC)
		setValue(x(1402))
		putRecord(builtin [det imods types] x(1394))
		setValue(x(1395))
		setValue(x(1398))
		setValue(x(1401))
		putRecord(any 1 x(1408))
		setConstant(det)
		putList(x(1407))
		setValue(x(1408))
		setConstant(nil)
		putList(x(1406))
		setConstant(det)
		setValue(x(1407))
		putList(x(1409))
		setConstant(false)
		setConstant(nil)
		putList(x(1411))
		setConstant(object)
		setConstant(nil)
		putList(x(1410))
		setConstant('class')
		setValue(x(1411))
		putRecord(builtin [det imods types] x(1405))
		setValue(x(1406))
		setValue(x(1409))
		setValue(x(1410))
		putList(x(1415))
		setConstant(any)
		setConstant(nil)
		putList(x(1414))
		setConstant(any)
		setValue(x(1415))
		putList(x(1413))
		setConstant(any)
		setValue(x(1414))
		putList(x(1417))
		setConstant(false)
		setConstant(nil)
		putList(x(1416))
		setConstant(false)
		setValue(x(1417))
		putList(x(1420))
		setConstant(value)
		setConstant(nil)
		putList(x(1419))
		setConstant(value)
		setValue(x(1420))
		putList(x(1418))
		setConstant(value)
		setValue(x(1419))
		putRecord(builtin [det imods types] x(1412))
		setValue(x(1413))
		setValue(x(1416))
		setValue(x(1418))
		putList(x(1422))
		setConstant(any)
		setConstant(nil)
		putList(x(1423))
		setConstant(false)
		setConstant(nil)
		putList(x(1424))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1421))
		setValue(x(1422))
		setValue(x(1423))
		setValue(x(1424))
		putRecord(any 1 x(1429))
		setConstant(det)
		putList(x(1428))
		setValue(x(1429))
		setConstant(nil)
		putList(x(1427))
		setConstant(det)
		setValue(x(1428))
		putList(x(1426))
		setConstant(det)
		setValue(x(1427))
		putList(x(1431))
		setConstant(false)
		setConstant(nil)
		putList(x(1430))
		setConstant(false)
		setValue(x(1431))
		putRecord(pair 2 x(1435))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(1434))
		setValue(x(1435))
		putList(x(1436))
		setConstant(record)
		setConstant(nil)
		putList(x(1433))
		setValue(x(1434))
		setValue(x(1436))
		putList(x(1432))
		setConstant(literal)
		setValue(x(1433))
		putRecord(builtin [det imods types] x(1425))
		setValue(x(1426))
		setValue(x(1430))
		setValue(x(1432))
		putList(x(1440))
		setConstant(det)
		setConstant(nil)
		putList(x(1439))
		setConstant(det)
		setValue(x(1440))
		putList(x(1438))
		setConstant(det)
		setValue(x(1439))
		putList(x(1443))
		setConstant(false)
		setConstant(nil)
		putList(x(1442))
		setConstant(false)
		setValue(x(1443))
		putList(x(1441))
		setConstant(false)
		setValue(x(1442))
		putList(x(1446))
		setConstant(object)
		setConstant(nil)
		putList(x(1445))
		setConstant('class')
		setValue(x(1446))
		putList(x(1444))
		setConstant(record)
		setValue(x(1445))
		putRecord(builtin [det imods types] x(1437))
		setValue(x(1438))
		setValue(x(1441))
		setValue(x(1444))
		putList(x(1450))
		setConstant(any)
		setConstant(nil)
		putList(x(1449))
		setConstant(det)
		setValue(x(1450))
		putList(x(1448))
		setConstant(det)
		setValue(x(1449))
		putList(x(1453))
		setConstant(false)
		setConstant(nil)
		putList(x(1452))
		setConstant(false)
		setValue(x(1453))
		putList(x(1451))
		setConstant(false)
		setValue(x(1452))
		putList(x(1456))
		setConstant(record)
		setConstant(nil)
		putList(x(1455))
		setConstant(int)
		setValue(x(1456))
		putList(x(1454))
		setConstant(literal)
		setValue(x(1455))
		putRecord(builtin [det imods types] x(1447))
		setValue(x(1448))
		setValue(x(1451))
		setValue(x(1454))
		putRecord(any 1 x(1461))
		setConstant(det)
		putList(x(1460))
		setValue(x(1461))
		setConstant(nil)
		putList(x(1459))
		setConstant(det)
		setValue(x(1460))
		putList(x(1458))
		setConstant(any)
		setValue(x(1459))
		putList(x(1463))
		setConstant(true)
		setConstant(nil)
		putList(x(1462))
		setConstant(true)
		setValue(x(1463))
		putList(x(1466))
		setConstant(int)
		setConstant(nil)
		putList(x(1465))
		setConstant(int)
		setValue(x(1466))
		putList(x(1464))
		setConstant(virtualString)
		setValue(x(1465))
		putRecord(builtin [det imods types] x(1457))
		setValue(x(1458))
		setValue(x(1462))
		setValue(x(1464))
		putRecord(any 1 x(1470))
		setConstant(det)
		putList(x(1469))
		setValue(x(1470))
		setConstant(nil)
		putList(x(1468))
		setConstant(det)
		setValue(x(1469))
		putList(x(1471))
		setConstant(false)
		setConstant(nil)
		putList(x(1473))
		setConstant(number)
		setConstant(nil)
		putList(x(1472))
		setConstant(number)
		setValue(x(1473))
		putRecord(builtin [det imods types] x(1467))
		setValue(x(1468))
		setValue(x(1471))
		setValue(x(1472))
		putRecord(builtinTable ['*' '+' '+1' ',' '-' '-1' '.' '/' '<' '<-' '=' '=<' '==' '>' '>=' '@' 'Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'And' 'Arity' 'Array.high' 'Array.low' 'Asin' 'Assign' 'Atan' 'Atan2' 'AtomToString' 'BitArray.and' 'BitArray.card' 'BitArray.clear' 'BitArray.clone' 'BitArray.complementToList' 'BitArray.disjoint' 'BitArray.high' 'BitArray.is' 'BitArray.low' 'BitArray.new' 'BitArray.nimpl' 'BitArray.or' 'BitArray.set' 'BitArray.test' 'BitArray.toList' 'BootManager' 'ByNeed' 'Ceil' 'Char.isAlNum' 'Char.isAlpha' 'Char.isCntrl' 'Char.isDigit' 'Char.isGraph' 'Char.isLower' 'Char.isPrint' 'Char.isPunct' 'Char.isSpace' 'Char.isUpper' 'Char.isXDigit' 'Char.toAtom' 'Char.toLower' 'Char.toUpper' 'Char.type' 'CondSelect' 'Cos' 'Delay' 'Dictionary.clone' 'Dictionary.condGet' 'Dictionary.entries' 'Dictionary.get' 'Dictionary.items' 'Dictionary.keys' 'Dictionary.markSafe' 'Dictionary.member' 'Dictionary.put' 'Dictionary.remove' 'Dictionary.removeAll' 'Exception.location' 'Exception.raise' 'Exception.raiseDebug' 'Exception.raiseDebugCheck' 'Exception.raiseError' 'Exception.taskStackError' 'Exchange' 'Exp' 'FloatToInt' 'FloatToString' 'Floor' 'ForeignPointer.toInt' 'Future' 'Get' 'HasFeature' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Lock' 'Log' 'MakeTuple' 'Max' 'Min' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Put' 'Round' 'Send' 'Sin' 'Space.ask' 'Space.askVerbose' 'Space.clone' 'Space.commit' 'Space.inject' 'Space.merge' 'Space.new' 'Sqrt' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread.create' 'Thread.getPriority' 'Thread.injectException' 'Thread.is' 'Thread.isSuspended' 'Thread.preempt' 'Thread.resume' 'Thread.setPriority' 'Thread.state' 'Thread.suspend' 'Thread.this' 'Time.time' 'Unlock' 'Value.status' 'Value.type' 'Wait' 'WaitOr' 'Width' 'WidthC' '\\=' '^' builtin copyRecord 'div' fPow getClass hasLabel makeClass 'mod' monitorArity newObject ooExch ooGetLock record send tellRecordSize virtualStringLength '~'] y(185))
		setValue(x(0))
		setValue(x(10))
		setValue(x(20))
		setValue(x(27))
		setValue(x(34))
		setValue(x(44))
		setValue(x(51))
		setValue(x(60))
		setValue(x(70))
		setValue(x(80))
		setValue(x(87))
		setValue(x(94))
		setValue(x(104))
		setValue(x(114))
		setValue(x(124))
		setValue(x(134))
		setValue(x(140))
		setValue(x(147))
		setValue(x(153))
		setValue(x(160))
		setValue(x(170))
		setValue(x(183))
		setValue(x(195))
		setValue(x(202))
		setValue(x(212))
		setValue(x(220))
		setValue(x(227))
		setValue(x(234))
		setValue(x(241))
		setValue(x(248))
		setValue(x(255))
		setValue(x(265))
		setValue(x(272))
		setValue(x(279))
		setValue(x(286))
		setValue(x(293))
		setValue(x(300))
		setValue(x(308))
		setValue(x(318))
		setValue(x(325))
		setValue(x(332))
		setValue(x(339))
		setValue(x(349))
		setValue(x(356))
		setValue(x(363))
		setValue(x(370))
		setValue(x(380))
		setValue(x(388))
		setValue(x(395))
		setValue(x(401))
		setValue(x(408))
		setValue(x(415))
		setValue(x(422))
		setValue(x(429))
		setValue(x(436))
		setValue(x(443))
		setValue(x(450))
		setValue(x(457))
		setValue(x(464))
		setValue(x(471))
		setValue(x(478))
		setValue(x(485))
		setValue(x(492))
		setValue(x(499))
		setValue(x(506))
		setValue(x(513))
		setValue(x(525))
		setValue(x(532))
		setValue(x(536))
		setValue(x(543))
		setValue(x(555))
		setValue(x(564))
		setValue(x(573))
		setValue(x(581))
		setValue(x(589))
		setValue(x(593))
		setValue(x(603))
		setValue(x(613))
		setValue(x(620))
		setValue(x(624))
		setValue(x(629))
		setValue(x(633))
		setValue(x(637))
		setValue(x(644))
		setValue(x(648))
		setValue(x(653))
		setValue(x(663))
		setValue(x(670))
		setValue(x(677))
		setValue(x(684))
		setValue(x(691))
		setValue(x(698))
		setValue(x(704))
		setValue(x(713))
		setValue(x(723))
		setValue(x(730))
		setValue(x(737))
		setValue(x(744))
		setValue(x(751))
		setValue(x(758))
		setValue(x(765))
		setValue(x(772))
		setValue(x(779))
		setValue(x(786))
		setValue(x(793))
		setValue(x(800))
		setValue(x(807))
		setValue(x(814))
		setValue(x(821))
		setValue(x(828))
		setValue(x(835))
		setValue(x(842))
		setValue(x(849))
		setValue(x(856))
		setValue(x(863))
		setValue(x(870))
		setValue(x(877))
		setValue(x(884))
		setValue(x(891))
		setValue(x(898))
		setValue(x(905))
		setValue(x(912))
		setValue(x(919))
		setValue(x(926))
		setValue(x(933))
		setValue(x(937))
		setValue(x(944))
		setValue(x(954))
		setValue(x(964))
		setValue(x(974))
		setValue(x(984))
		setValue(x(997))
		setValue(x(1004))
		setValue(x(1011))
		setValue(x(1015))
		setValue(x(1019))
		setValue(x(1023))
		setValue(x(1030))
		setValue(x(1037))
		setValue(x(1044))
		setValue(x(1054))
		setValue(x(1061))
		setValue(x(1071))
		setValue(x(1078))
		setValue(x(1085))
		setValue(x(1092))
		setValue(x(1099))
		setValue(x(1106))
		setValue(x(1113))
		setValue(x(1120))
		setValue(x(1127))
		setValue(x(1134))
		setValue(x(1141))
		setValue(x(1148))
		setValue(x(1155))
		setValue(x(1162))
		setValue(x(1169))
		setValue(x(1176))
		setValue(x(1183))
		setValue(x(1187))
		setValue(x(1194))
		setValue(x(1201))
		setValue(x(1208))
		setValue(x(1215))
		setValue(x(1219))
		setValue(x(1223))
		setValue(x(1230))
		setValue(x(1237))
		setValue(x(1241))
		setValue(x(1245))
		setValue(x(1249))
		setValue(x(1253))
		setValue(x(1260))
		setValue(x(1267))
		setValue(x(1271))
		setValue(x(1278))
		setValue(x(1285))
		setValue(x(1292))
		setValue(x(1302))
		setValue(x(1311))
		setValue(x(1321))
		setValue(x(1328))
		setValue(x(1338))
		setValue(x(1348))
		setValue(x(1355))
		setValue(x(1362))
		setValue(x(1384))
		setValue(x(1394))
		setValue(x(1405))
		setValue(x(1412))
		setValue(x(1421))
		setValue(x(1425))
		setValue(x(1437))
		setValue(x(1447))
		setValue(x(1457))
		setValue(x(1467))
lbl(81105)	definition(x(2) 81126 pid('E' 2 pos('./compiler/Builtins.oz' 58 3) nil 3) <P: 639> [y(1)])
		putRecord(compiler 3 x(2))
		setConstant(badBuiltinTableEntry)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(81105)
lbl(81126)	definition(x(1) 81567 pid('' 2 pos('./compiler/Builtins.oz' 67 4) nil 5) <P: 640> [y(185)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(types x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 81166)
lbl(81145)	inlineDot(x(1) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81166 81177)
		branch(81188)
lbl(81166)	move(y(0) x(0))
		putConstant(types x(1))
		genFastCall(<P: 639> 4)
		branch(81188)
lbl(81177)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(68)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81188)	move(y(1) x(0))
		putConstant(det x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 81219)
lbl(81198)	inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81219 81230)
		branch(81241)
lbl(81219)	move(y(0) x(0))
		putConstant(det x(1))
		genFastCall(<P: 639> 4)
		branch(81241)
lbl(81230)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81241)	move(y(1) x(0))
		inlineDot(x(0) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 81295)
lbl(81286)	move(y(0) x(0))
		putConstant(typesdet x(1))
		genFastCall(<P: 639> 4)
lbl(81295)	move(y(1) x(0))
		putConstant(imods x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81310)
		branch(81388)
lbl(81310)	inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81331 81377)
		branch(81388)
lbl(81331)	move(y(1) x(0))
		inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) iarity x(1) cache)
		move(y(2) x(2))
		testLT(x(1) x(2) x(3) 81388)
lbl(81366)	move(y(0) x(0))
		putConstant(imods x(1))
		genFastCall(<P: 639> 4)
		branch(81388)
lbl(81377)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(78)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81388)	move(y(1) x(0))
		putConstant(test x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81403)
		branch(81424)
lbl(81403)	inlineDot(x(0) test x(1) cache)
		testBI('IsBool' [x(1)]#[x(2)] 81415)
		branch(81424)
lbl(81415)	move(y(0) x(0))
		putConstant(test x(1))
		genFastCall(<P: 639> 4)
lbl(81424)	move(y(1) x(0))
		putConstant(negated x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 81528 81517)
		inlineDot(x(0) negated x(1) cache)
		testBI('IsAtom' [x(1)]#[x(2)] 81506)
		putConstant(test x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 81495)
		move(g(0) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 81484)
		callBI('.' [x(2) x(1)]#[x(3)])
		putConstant(test x(1))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 81473)
		branch(81528)
lbl(81473)	move(y(0) x(0))
		putConstant(negatedNotTest2 x(1))
		genFastCall(<P: 639> 4)
		branch(81528)
lbl(81484)	move(y(0) x(0))
		putConstant(undefinedNegatedBuiltin x(1))
		genFastCall(<P: 639> 4)
		branch(81528)
lbl(81495)	move(y(0) x(0))
		putConstant(negatedNotTest x(1))
		genFastCall(<P: 639> 4)
		branch(81528)
lbl(81506)	move(y(0) x(0))
		putConstant(negated x(1))
		genFastCall(<P: 639> 4)
		branch(81528)
lbl(81517)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(86)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(81528)	move(y(1) x(0))
		putConstant(doesNotReturn x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81543)
		deAllocateL4
		return
lbl(81543)	inlineDot(x(0) doesNotReturn x(0) cache)
		testBI('IsBool' [x(0)]#[x(1)] 81555)
		deAllocateL4
		return
lbl(81555)	move(y(0) x(0))
		putConstant(doesNotReturn x(1))
		deAllocateL4
		genFastCall(<P: 639> 5)
		endDefinition(81126)
lbl(81567)	move(y(185) x(0))
		genFastCall(<P: 175> 4)
lbl(81573)	definition(x(4) 81594 pid('GetBuiltinInfo' 2 pos('./compiler/Builtins.oz' 111 3) nil 5) <P: 641> [y(185)])
		move(g(0) x(2))
		putConstant(noInformation x(3))
		callBI('CondSelect' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(81573)
lbl(81594)	definition(x(2) 81623 pid('' 2 pos('./compiler/FunBuiltins.oz' 4 3) nil 2) <P: 642> [x(4)])
		putConstant(nil x(0))
lbl(81603)	definitionCopy(x(0) 81618 pid('/body' 0 pos('./compiler/FunBuiltins.oz' 4 3) [once] 0) unit [x(1) g(0)])
		getRecord('export' [getInfo] g(0))
		unifyValue(g(1))
		return
		endDefinition(81603)
lbl(81618)	tailCall(x(0) 0)
		endDefinition(81594)
lbl(81623)	putConstant('procedure/2' x(4))
		putRecord('export' [getInfo] x(1))
		setValue(x(4))
		putConstant('import' x(0))
		createVariableMove(y(185) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant(false y(186))
		putConstant(true y(187))
		putConstant(unit x(4))
lbl(81650)	definition(x(2) 126502 pid('' 2 pos('./compiler/FunSA.oz' 1 0) nil 4) <P: 643> [y(134) y(161) y(205) y(129) y(206) y(100) y(89) y(211) y(1) y(213) y(216) y(210) y(202) y(170) y(174) y(142) y(215) y(189) y(157) y(163) y(176) y(38) y(42) y(30) y(50) y(173) y(7) y(131) y(64) y(57) y(107) y(26) y(28) y(40) y(86) y(180) y(35) y(127) y(133) y(138) y(179) y(90) y(27) y(214) y(108) y(212) y(145) y(193) y(194) y(186) y(187) y(165) y(166) y(190) y(99) y(2) y(128) y(175) y(132) y(183) x(4) y(219) y(220) y(221) y(222) y(218) y(47)])
		putList(x(2))
		setPredicateRef(<Q: 644>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 645>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 646>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 647>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 648>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 649>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 650>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 651>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 652>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 653>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 654>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 655>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 656>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 657>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 658>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 659>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 660>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 661>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 662>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 663>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 664>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 665>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 666>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 667>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 668>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 669>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 670>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 671>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 672>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 673>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 674>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 675>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 676>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 677>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 692>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 693>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 694>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 695>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 696>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 697>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 698>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 699>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 700>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 701>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 702>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 703>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 704>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 705>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 706>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 707>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 708>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 709>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 710>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 711>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 712>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 713>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 722>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 723>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 724>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 725>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 726>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 727>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 728>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 729>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 730>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaDo>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaLookahead>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 731>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 732>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 733>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 734>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 735>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 736>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 737>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 738>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 740>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 742>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 743>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstruction>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 744>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 745>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 746>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 747>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 748>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 749>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 750>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 751>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 752>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 753>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 754>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 755>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 756>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 757>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 758>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 759>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 760>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 761>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 762>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 763>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 764>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 765>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 766>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 767>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 768>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AssertTypes>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoDetType>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoRecDetType>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoKindedType>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 769>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 770>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 771>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 772>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 773>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 774>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 775>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 776>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 777>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 778>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 779>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 780>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 781>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 782>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 783>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 784>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 785>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 786>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 787>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 788>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 789>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 790>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 791>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 792>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 793>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 794>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 795>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 796>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 797>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 798>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 799>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 800>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 801>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AssertArity>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 802>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 803>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 804>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 805>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 806>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 807>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 808>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 809>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 810>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 811>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 812>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 813>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 814>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 815>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 816>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 817>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 818>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 819>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 820>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 821>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 822>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 823>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 824>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 825>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 826>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 827>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 828>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 829>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 830>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 831>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 832>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 833>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 834>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 835>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 836>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 837>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 838>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 839>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 840>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 841>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritProperties>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritAttributes>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritMethods>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 842>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 843>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 844>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 845>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 846>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 847>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 848>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 849>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 850>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 851>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 852>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 853>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 854>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 855>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 856>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 857>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 858>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 859>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 860>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 861>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 862>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 863>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 864>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 865>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 866>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 867>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 868>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 869>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 870>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 871>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 872>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 873>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 874>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 875>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 876>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ValToSubst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TypeToSubst>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RecordToSubst>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 877>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 878>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 879>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 880>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 881>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 882>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 883>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 884>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 885>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 886>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 887>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 888>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 889>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 890>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 891>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 892>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 893>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 894>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 895>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 896>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UpdateValue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnifyDeref>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 897>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 898>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 899>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 900>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 901>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 902>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 903>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 904>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 905>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 906>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 907>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 908>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 909>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 910>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 911>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 912>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 913>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 914>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 915>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 916>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 917>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 918>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 919>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 920>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 921>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 922>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 923>)
		setValue(x(2))
lbl(83444)	definitionCopy(x(3) 126497 pid('/body' 0 pos('./compiler/FunSA.oz' 1 0) [once] 87) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) g(51) g(52) g(53) g(54) g(55) g(56) g(57) g(58) g(59) g(60) g(61) g(62) g(63) g(64) g(65) g(66) x(1)])
		allocateL(38)
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
		inlineDot(x(0) 'FD' x(2) cache)
		inlineDot(x(0) 'FS' x(3) cache)
		inlineDot(x(0) 'System' x(4) cache)
		inlineDot(x(0) 'Type' x(5) cache)
		inlineDot(x(0) 'Misc' x(6) cache)
		inlineDot(x(6) imAConstruction x(7) cache)
		inlineDot(x(6) imAValueNode x(8) cache)
		inlineDot(x(6) imAVariableOccurrence x(9) cache)
		inlineDot(x(6) imAToken x(10) cache)
		inlineDot(x(0) 'Core' x(11) cache)
		inlineDot(x(0) 'Builtins' x(12) cache)
		inlineDot(x(0) 'RunTime' x(13) cache)
lbl(83533)	definition(x(14) 83584 pid('Add' 3 pos('./compiler/POTypes.oz' 33 3) nil 3) <Q: 644> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 83563 83571)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(83563)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(83571)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83533)
lbl(83584)	definition(x(14) 83661 pid('GetNames' 2 pos('./compiler/POTypes.oz' 39 3) nil 5) <Q: 645> nil)
lbl(83590)	definition(x(4) 83647 pid('' 3 pos('./compiler/POTypes.oz' 41 7) nil 5) unit nil)
		shallowGuard(83634)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(83606)	shallowThen
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 644> 6)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 644> 7)
lbl(83634)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(41)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83590)
lbl(83647)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(83584)
lbl(83661)	definition(x(14) 84777 pid('PartialOrder' 3 pos('./compiler/POTypes.oz' 45 3) nil 5) <Q: 646> [g(1) g(2) x(2) g(3) x(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 645> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
lbl(83691)	definition(x(1) 83725 pid('' 2 pos('./compiler/POTypes.oz' 49 23) nil 4) unit nil)
		shallowGuard(83712)
		getRecord(def 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(83707)	shallowThen
		unify(x(1) x(2))
		return
lbl(83712)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83691)
lbl(83725)	move(y(1) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(83745)	definition(x(0) 83906 pid('IdxMapping' 1 pos('./compiler/POTypes.oz' 53 6) nil 3) unit [g(0) y(3) g(1) g(2) y(4) y(0)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2i x(0))
		genFastCall(<P: 110> 6)
lbl(83767)	definition(x(1) 83801 pid('' 1 pos('./compiler/POTypes.oz' 58 3) nil 4) unit [g(3) g(4)])
		move(g(0) x(1))
		inlineDot(x(1) int x(2) cache)
		putRecord('#' 2 x(3))
		setConstant(1)
		setValue(g(1))
		move(x(0) x(1))
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(83767)
lbl(83801)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83807)	definition(x(1) 83864 pid('' 1 pos('./compiler/POTypes.oz' 64 3) nil 6) unit [g(3) y(0)])
		shallowGuard(83851)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83823)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) less x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(2)]#[x(5)])
		callBI('.' [x(4) x(1)]#[x(2)])
		move(x(5) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
lbl(83851)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83807)
lbl(83864)	move(g(5) x(0))
		genFastCall(<P: 34> 4)
		move(g(3) x(0))
		inlineDot(x(0) distinct x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(3) x(0))
		inlineDot(x(0) distribute x(2) cache)
		move(y(0) x(1))
		putConstant(naive x(0))
		deAllocateL1
		tailCall(x(2) 2)
		endDefinition(83745)
lbl(83906)	createVariable(y(5))
lbl(83908)	definition(x(1) 84275 pid('BitMapping' 1 pos('./compiler/POTypes.oz' 76 6) nil 3) unit [g(0) y(6) g(1) g(3) y(4) g(4) y(5) y(3) y(0) g(5) g(6)])
		allocateL2
		move(x(0) y(0))
		move(g(1) x(1))
		putConstant(n2s x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 110> 6)
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2b x(0))
		genFastCall(<P: 110> 6)
lbl(83942)	definition(x(1) 83963 pid('' 1 pos('./compiler/POTypes.oz' 84 3) nil 4) unit [g(3) g(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(83942)
lbl(83963)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83969)	definition(x(1) 84056 pid('' 1 pos('./compiler/POTypes.oz' 90 3) nil 6) unit [g(5) g(4) y(1) g(6)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) var x(2) cache)
		inlineDot(x(2) upperBound x(2) cache)
		putRecord('#' 2 x(4))
		setConstant(1)
		setValue(g(1))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(g(2) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		move(g(0) x(2))
		inlineDot(x(2) include x(3) cache)
		move(g(3) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		move(x(5) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(83969)
lbl(84056)	move(g(7) x(0))
		genFastCall(<P: 34> 4)
lbl(84062)	definition(x(1) 84116 pid('' 1 pos('./compiler/POTypes.oz' 99 3) nil 6) unit [g(5) y(1)])
		shallowGuard(84103)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(84078)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) subset x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		callBI('.' [x(4) x(2)]#[x(1)])
		move(x(5) x(0))
		tailCall(x(3) 2)
lbl(84103)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84062)
lbl(84116)	move(g(8) x(0))
		genFastCall(<P: 34> 4)
lbl(84122)	definition(x(1) 84266 pid('' 1 pos('./compiler/POTypes.oz' 105 3) nil 4) unit [y(1) g(5) g(9) g(10) y(0) g(4)])
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createChoice
lbl(84141)	lastClause
		emptyClause
lbl(84143)	move(g(1) x(0))
		inlineDot(x(0) value x(2) cache)
		inlineDot(x(2) new x(1) cache)
		inlineDot(x(0) reflect x(2) cache)
		inlineDot(x(2) lowerBound x(2) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		call(y(2) 2)
lbl(84189)	definition(x(3) 84251 pid('' 1 pos('./compiler/POTypes.oz' 111 3) nil 4) unit [g(1) y(1) g(3) g(4) y(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) isIn x(3) cache)
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		call(x(3) 3)
		testBool(y(1) 84236 84238)
		move(g(3) x(0))
		move(g(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(3))
		callBI('BitArray.set' [x(2) x(3)]#nil)
lbl(84236)	deAllocateL2
		return
lbl(84238)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(112)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84189)
lbl(84251)	move(g(5) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 100> 9)
		endDefinition(84122)
lbl(84266)	move(g(7) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(83908)
lbl(84275)	move(g(7) x(2))
		inlineDot(x(2) base x(3) cache)
		inlineDot(x(3) one x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(6) x(1))
		call(x(3) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		move(y(5) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant(i2n x(2))
		callBI('MakeTuple' [x(2) x(1)]#[x(3)])
lbl(84323)	definition(x(1) 84347 pid('' 1 pos('./compiler/POTypes.oz' 125 7) nil 5) unit [y(5) x(3)])
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		unify(x(4) x(0))
		return
		endDefinition(84323)
lbl(84347)	moveMoveXYYX(x(3) y(5) y(3) x(0))
		genFastCall(<P: 34> 4)
		move(g(7) x(0))
		inlineDot(x(0) base x(2) cache)
		inlineDot(x(2) one x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(2) cache)
lbl(84388)	definition(x(3) 84502 pid('Constrain' 3 pos('./compiler/POTypes.oz' 133 6) nil 5) unit [g(9) x(2) g(10) g(11)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testBI('IsAtom' [x(0)]#[x(3)] 84415)
		move(g(1) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('BitArray.or' [x(2) x(4)]#nil)
		branch(84457)
lbl(84415)	definition(x(3) 84451 pid('' 1 pos('./compiler/POTypes.oz' 138 6) nil 3) unit [g(1) g(0) y(1) g(2)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84438)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		return
lbl(84438)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(constrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84415)
lbl(84451)	move(x(3) x(1))
		genFastCall(<P: 34> 4)
lbl(84457)	definition(x(1) 84493 pid('' 1 pos('./compiler/POTypes.oz' 146 3) nil 3) unit [g(1) g(3) y(1) g(2)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84480)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.nimpl' [x(0) x(2)]#nil)
		return
lbl(84480)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(contrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84457)
lbl(84493)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(84388)
lbl(84502)	definition(x(0) 84540 pid('Encode' 3 pos('./compiler/POTypes.oz' 154 6) nil 6) unit [g(10) g(3) y(4) x(3)])
		testLiteral(x(0) nil 84523)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalType)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84523)	putConstant(1 x(3))
		move(g(2) x(4))
		callBI('BitArray.new' [x(3) x(4)]#[x(5)])
		unify(x(5) x(2))
		tailCall(g(3) 3)
		endDefinition(84502)
lbl(84540)	createVariable(x(4))
lbl(84542)	definition(x(1) 84601 pid('DecodeAux' 2 pos('./compiler/POTypes.oz' 167 2) nil 6) unit [g(12) y(5) g(11) x(2) x(4)])
		callBI('BitArray.toList' [x(0)]#[x(2)])
		testLiteral(x(2) nil 84559)
lbl(84555)	getLiteral(nil x(1))
		return
lbl(84559)	testList(x(2) 84586)
lbl(84562)	getVariable(x(2))
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(g(3) x(2))
		callBI('.' [x(2) x(4)]#[x(5)])
		callBI('BitArray.nimpl' [x(0) x(5)]#nil)
		getListValVar(x(1) x(4) x(1))
		tailCall(g(4) 2)
lbl(84586)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84542)
lbl(84601)	unify(x(1) x(4))
lbl(84604)	definition(x(1) 84632 pid('Decode' 2 pos('./compiler/POTypes.oz' 178 2) nil 3) unit [g(13) x(4)])
		testBI('IsFree' [x(0)]#[x(2)] 84621)
		getList(x(1))
		unifyLiteral(value)
		unifyLiteral(nil)
		return
lbl(84621)	callBI('BitArray.clone' [x(0)]#[x(2)])
		move(x(2) x(0))
		tailCall(g(1) 2)
		endDefinition(84604)
lbl(84632)	definition(x(4) 84725 pid('' 1 pos('./compiler/POTypes.oz' 193 7) nil 3) unit [y(3) g(10) x(2) x(3)])
		shallowGuard(84712)
		getRecord(def 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(84648)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(0) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 84682 84701)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalPartialOrderSpecification)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84682)	move(g(2) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(g(3) 3)
lbl(84701)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84712)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84632)
lbl(84725)	moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		getRecord(po [decl decode encode] y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(0))
lbl(84749)	definition(x(1) 84770 pid('' 1 pos('./compiler/POTypes.oz' 206 12) nil 4) unit [g(3) y(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(84749)
lbl(84770)	unify(x(1) x(0))
		deAllocateL7
		return
		endDefinition(83661)
lbl(84777)	putRecord('#' 2 x(14))
		setConstant('thread')
		setConstant(value)
		putRecord('#' 2 x(16))
		setConstant(space)
		setConstant(value)
		putRecord('#' 2 x(18))
		setConstant(chunk)
		setConstant(value)
		putRecord('#' 2 x(20))
		setConstant(cell)
		setConstant(value)
		putRecord('#' 2 x(22))
		setConstant(foreignPointer)
		setConstant(value)
		putRecord('#' 2 x(24))
		setConstant(fset)
		setConstant(value)
		putRecord('#' 2 x(26))
		setConstant(recordC)
		setConstant(value)
		putRecord('#' 2 x(28))
		setConstant(record)
		setConstant(recordC)
		putRecord('#' 2 x(30))
		setConstant(number)
		setConstant(value)
		putRecord('#' 2 x(32))
		setConstant(int)
		setConstant(number)
		putRecord('#' 2 x(34))
		setConstant(float)
		setConstant(number)
		putRecord('#' 2 x(36))
		setConstant(char)
		setConstant(fdIntC)
		putRecord('#' 2 x(38))
		setConstant(fdIntC)
		setConstant(int)
		putRecord('#' 2 x(40))
		setConstant(tuple)
		setConstant(record)
		putRecord('#' 2 x(42))
		setConstant(literal)
		setConstant(tuple)
		putRecord('#' 2 x(44))
		setConstant(atom)
		setConstant(literal)
		putRecord('#' 2 x(46))
		setConstant(name)
		setConstant(literal)
		putRecord('#' 2 x(48))
		setConstant(nilAtom)
		setConstant(atom)
		putRecord('#' 2 x(50))
		setConstant(cons)
		setConstant(tuple)
		putRecord('#' 2 x(52))
		setConstant(bool)
		setConstant(name)
		putRecord('#' 2 x(54))
		setConstant('unit')
		setConstant(name)
		putRecord('#' 2 x(56))
		setConstant(bitArray)
		setConstant(chunk)
		putRecord('#' 2 x(58))
		setConstant(array)
		setConstant(chunk)
		putRecord('#' 2 x(60))
		setConstant(dictionary)
		setConstant(chunk)
		putRecord('#' 2 x(62))
		setConstant('class')
		setConstant(chunk)
		putRecord('#' 2 x(64))
		setConstant(object)
		setConstant(chunk)
		putRecord('#' 2 x(66))
		setConstant('lock')
		setConstant(chunk)
		putRecord('#' 2 x(68))
		setConstant(port)
		setConstant(chunk)
		putRecord('#' 2 x(70))
		setConstant('procedure/0')
		setConstant(value)
		putRecord('#' 2 x(72))
		setConstant('procedure/1')
		setConstant(value)
		putRecord('#' 2 x(74))
		setConstant('procedure/2')
		setConstant(value)
		putRecord('#' 2 x(76))
		setConstant('procedure/3')
		setConstant(value)
		putRecord('#' 2 x(78))
		setConstant('procedure/4')
		setConstant(value)
		putRecord('#' 2 x(80))
		setConstant('procedure/5')
		setConstant(value)
		putRecord('#' 2 x(82))
		setConstant('procedure/6')
		setConstant(value)
		putRecord('#' 2 x(84))
		setConstant('procedure/>6')
		setConstant(value)
		putRecord('#' 2 x(86))
		setConstant(pair)
		setConstant(tuple)
		putList(x(85))
		setValue(x(86))
		setConstant(nil)
		putList(x(83))
		setValue(x(84))
		setValue(x(85))
		putList(x(81))
		setValue(x(82))
		setValue(x(83))
		putList(x(79))
		setValue(x(80))
		setValue(x(81))
		putList(x(77))
		setValue(x(78))
		setValue(x(79))
		putList(x(75))
		setValue(x(76))
		setValue(x(77))
		putList(x(73))
		setValue(x(74))
		setValue(x(75))
		putList(x(71))
		setValue(x(72))
		setValue(x(73))
		putList(x(69))
		setValue(x(70))
		setValue(x(71))
		putList(x(67))
		setValue(x(68))
		setValue(x(69))
		putList(x(65))
		setValue(x(66))
		setValue(x(67))
		putList(x(63))
		setValue(x(64))
		setValue(x(65))
		putList(x(61))
		setValue(x(62))
		setValue(x(63))
		putList(x(59))
		setValue(x(60))
		setValue(x(61))
		putList(x(57))
		setValue(x(58))
		setValue(x(59))
		putList(x(55))
		setValue(x(56))
		setValue(x(57))
		putList(x(53))
		setValue(x(54))
		setValue(x(55))
		putList(x(51))
		setValue(x(52))
		setValue(x(53))
		putList(x(49))
		setValue(x(50))
		setValue(x(51))
		putList(x(47))
		setValue(x(48))
		setValue(x(49))
		putList(x(45))
		setValue(x(46))
		setValue(x(47))
		putList(x(43))
		setValue(x(44))
		setValue(x(45))
		putList(x(41))
		setValue(x(42))
		setValue(x(43))
		putList(x(39))
		setValue(x(40))
		setValue(x(41))
		putList(x(37))
		setValue(x(38))
		setValue(x(39))
		putList(x(35))
		setValue(x(36))
		setValue(x(37))
		putList(x(33))
		setValue(x(34))
		setValue(x(35))
		putList(x(31))
		setValue(x(32))
		setValue(x(33))
		putList(x(29))
		setValue(x(30))
		setValue(x(31))
		putList(x(27))
		setValue(x(28))
		setValue(x(29))
		putList(x(25))
		setValue(x(26))
		setValue(x(27))
		putList(x(23))
		setValue(x(24))
		setValue(x(25))
		putList(x(21))
		setValue(x(22))
		setValue(x(23))
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(3))
		setValue(x(14))
		setValue(x(15))
		putList(x(17))
		setConstant(literal)
		setConstant(nil)
		putList(x(16))
		setConstant(int)
		setValue(x(17))
		putRecord(def 2 x(15))
		setConstant(feature)
		setValue(x(16))
		putList(x(21))
		setConstant(atom)
		setConstant(nil)
		putList(x(20))
		setConstant(number)
		setValue(x(21))
		putRecord(def 2 x(19))
		setConstant(comparable)
		setValue(x(20))
		putList(x(25))
		setConstant(chunk)
		setConstant(nil)
		putList(x(24))
		setConstant(record)
		setValue(x(25))
		putRecord(def 2 x(23))
		setConstant(recordOrChunk)
		setValue(x(24))
		putList(x(29))
		setConstant(chunk)
		setConstant(nil)
		putList(x(28))
		setConstant(recordC)
		setValue(x(29))
		putRecord(def 2 x(27))
		setConstant(recordCOrChunk)
		setValue(x(28))
		putList(x(33))
		setConstant(cons)
		setConstant(nil)
		putList(x(32))
		setConstant(nilAtom)
		setValue(x(33))
		putRecord(def 2 x(31))
		setConstant(list)
		setValue(x(32))
		putList(x(37))
		setConstant(cons)
		setConstant(nil)
		putList(x(36))
		setConstant(nilAtom)
		setValue(x(37))
		putRecord(def 2 x(35))
		setConstant(string)
		setValue(x(36))
		putList(x(47))
		setConstant('procedure/>6')
		setConstant(nil)
		putList(x(46))
		setConstant('procedure/6')
		setValue(x(47))
		putList(x(45))
		setConstant('procedure/5')
		setValue(x(46))
		putList(x(44))
		setConstant('procedure/4')
		setValue(x(45))
		putList(x(43))
		setConstant('procedure/3')
		setValue(x(44))
		putList(x(42))
		setConstant('procedure/2')
		setValue(x(43))
		putList(x(41))
		setConstant('procedure/1')
		setValue(x(42))
		putList(x(40))
		setConstant('procedure/0')
		setValue(x(41))
		putRecord(def 2 x(39))
		setConstant(procedure)
		setValue(x(40))
		putList(x(51))
		setConstant(record)
		setConstant(nil)
		putList(x(50))
		setConstant(number)
		setValue(x(51))
		putRecord(def 2 x(49))
		setConstant(virtualString)
		setValue(x(50))
		putList(x(55))
		setConstant(object)
		setConstant(nil)
		putList(x(54))
		setConstant(procedure)
		setValue(x(55))
		putRecord(def 2 x(53))
		setConstant(procedureOrObject)
		setValue(x(54))
		putList(x(59))
		setConstant(object)
		setConstant(nil)
		putList(x(58))
		setConstant('procedure/1')
		setValue(x(59))
		putRecord(def 2 x(57))
		setConstant(unaryProcOrObject)
		setValue(x(58))
		putList(x(56))
		setValue(x(57))
		setConstant(nil)
		putList(x(52))
		setValue(x(53))
		setValue(x(56))
		putList(x(48))
		setValue(x(49))
		setValue(x(52))
		putList(x(38))
		setValue(x(39))
		setValue(x(48))
		putList(x(34))
		setValue(x(35))
		setValue(x(38))
		putList(x(30))
		setValue(x(31))
		setValue(x(34))
		putList(x(26))
		setValue(x(27))
		setValue(x(30))
		putList(x(22))
		setValue(x(23))
		setValue(x(26))
		putList(x(18))
		setValue(x(19))
		setValue(x(22))
		putList(x(14))
		setValue(x(15))
		setValue(x(18))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		moveMoveXYXY(x(8) y(6) x(9) y(7))
		moveMoveXYXY(x(10) y(8) x(11) y(9))
		moveMoveXYXY(x(12) y(10) x(13) y(11))
		move(x(3) x(0))
		move(x(14) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<Q: 646> 6)
lbl(85633)	definition(x(3) 86771 pid('OzValueToType' 2 pos('./compiler/POTypes.oz' 277 3) nil 11) <Q: 647> [y(12) y(1) g(13)])
		testBI('IsDet' [x(0)]#[x(2)] 86626)
		testBI('IsInt' [x(0)]#[x(2)] 85750)
		testBI('IsChar' [x(0)]#[x(2)] 85672)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(char x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85672)	allocateL2
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		testBool(y(1) 85717 85739)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85717)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(int x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(285)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(85750)	testBI('IsFloat' [x(0)]#[x(2)] 85775)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(float x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85775)	testBI('IsAtom' [x(0)]#[x(2)] 85825)
		testLiteral(x(0) nil 85804)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(nilAtom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85804)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(atom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85825)	testBI('IsName' [x(0)]#[x(2)] 85913)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) true 85859)
lbl(85837)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(bool x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85859)	testLiteral(x(0) false 85865)
		branch(85837)
lbl(85865)	testLiteral(x(0) unit 85891)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant('unit' x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85891)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(name x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85913)	testBI('IsTuple' [x(0)]#[x(2)] 85983)
		match(x(0) ht(85962 [onRecord('|' 2 85920) onRecord('#' 2 85941)]))
lbl(85920)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cons x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85941)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(pair x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85962)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(tuple x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85983)	testBI('IsRecord' [x(0)]#[x(2)] 86008)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(record x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86008)	testBI('IsProcedure' [x(0)]#[x(2)] 86211)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		testNumber(x(2) 0 86040)
lbl(86019)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86040)	testNumber(x(2) 1 86065)
lbl(86044)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/1' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86065)	testNumber(x(2) 2 86090)
lbl(86069)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86090)	testNumber(x(2) 3 86115)
lbl(86094)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86115)	testNumber(x(2) 4 86140)
lbl(86119)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86140)	testNumber(x(2) 5 86165)
lbl(86144)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86165)	testNumber(x(2) 6 86190)
lbl(86169)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86190)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86211)	testBI('IsCell' [x(0)]#[x(2)] 86236)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cell x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86236)	testBI('IsChunk' [x(0)]#[x(2)] 86507)
		testBI('IsArray' [x(0)]#[x(2)] 86265)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(array x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86265)	testBI('IsDictionary' [x(0)]#[x(2)] 86290)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(dictionary x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86290)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 86328 86496)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('class' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86328)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 86357)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(object x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86357)	testBI('IsLock' [x(0)]#[x(1)] 86383)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('lock' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86383)	testBI('IsPort' [x(0)]#[x(1)] 86409)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(port x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86409)	testBI('BitArray.is' [x(0)]#[x(1)] 86435)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(bitArray x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86435)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(8))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(7))
		setConstant(port)
		setValue(x(8))
		putList(x(6))
		setConstant('lock')
		setValue(x(7))
		putList(x(5))
		setConstant(object)
		setValue(x(6))
		putList(x(4))
		setConstant('class')
		setValue(x(5))
		putList(x(2))
		setConstant(dictionary)
		setValue(x(4))
		putList(x(1))
		setConstant(array)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(chunk x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86496)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(336)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86507)	testBI('IsSpace' [x(0)]#[x(2)] 86532)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(space x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86532)	testBI('Thread.is' [x(0)]#[x(2)] 86557)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('thread' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86557)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(10))
		setConstant('thread')
		setConstant(nil)
		putList(x(9))
		setConstant(space)
		setValue(x(10))
		putList(x(8))
		setConstant(chunk)
		setValue(x(9))
		putList(x(7))
		setConstant(cell)
		setValue(x(8))
		putList(x(6))
		setConstant(procedure)
		setValue(x(7))
		putList(x(5))
		setConstant(record)
		setValue(x(6))
		putList(x(2))
		setConstant(float)
		setValue(x(5))
		putList(x(4))
		setConstant(int)
		setValue(x(2))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant(value x(0))
		tailCall(x(3) 3)
lbl(86626)	testBI('IsKinded' [x(0)]#[x(2)] 86748)
		allocateL3
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testBool(y(2) 86677 86737)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86677)	move(y(0) x(0))
		testBI('IsRecordC' [x(0)]#[x(1)] 86706)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(recordC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86706)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(2))
		setConstant(recordC)
		setConstant(nil)
		putList(x(1))
		setConstant(fdIntC)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(value x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86737)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(360)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86748)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(value x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
		endDefinition(85633)
lbl(86771)	definition(x(3) 86825 pid('NormalizeCoord' 2 pos('./compiler/StaticAnalysis.oz' 54 3) nil 5) <Q: 648> nil)
		testLiteral(x(0) unit 86785)
lbl(86781)	getLiteral(unit x(1))
		return
lbl(86785)	getRecord('pos' 3 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineDot(x(0) 1 x(4) cache)
		unify(x(4) x(1))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(3))
		return
		endDefinition(86771)
lbl(86825)	definition(x(3) 86846 pid('IsMinimalType' 2 pos('./compiler/StaticAnalysis.oz' 60 3) nil 4) <Q: 649> [g(17)])
		callBI('BitArray.card' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(86825)
lbl(86846)	definition(x(0) 86869 pid('FirstOrId' 2 pos('./compiler/StaticAnalysis.oz' 66 3) nil 2) <Q: 650> nil)
		testRecord(x(0) '#' 2 86863)
lbl(86857)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(86863)	unify(x(1) x(0))
		return
		endDefinition(86846)
lbl(86869)	definition(x(3) 86906 pid('LabelToVS' 2 pos('./compiler/StaticAnalysis.oz' 70 3) nil 5) <Q: 651> [y(2)])
		testBI('IsDet' [x(0)]#[x(2)] 86900)
		move(g(0) x(2))
		inlineDot(x(2) valueToVirtualString x(4) cache)
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(86900)	getLiteral('_' x(1))
		return
		endDefinition(86869)
lbl(86906)	definition(x(3) 86967 pid('Bool2Token' 2 pos('./compiler/StaticAnalysis.oz' 74 3) nil 4) <Q: 652> [y(11)])
		testBool(x(0) 86935 86954)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86935)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(75)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(86906)
lbl(86967)	definition(x(3) 86986 pid('CurrentArity' 2 pos('./compiler/StaticAnalysis.oz' 89 3) nil 3) <Q: 653> [g(18)])
		testBI('IsFree' [x(0)]#[x(2)] 86981)
		getLiteral(nil x(1))
		return
lbl(86981)	genFastCall(<P: 114> 5)
		endDefinition(86967)
lbl(86986)	definition(x(3) 87018 pid('HasFeatureNow' 3 pos('./compiler/StaticAnalysis.oz' 97 3) nil 3) <Q: 654> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 22> 7)
		endDefinition(86986)
lbl(87018)	definition(x(3) 87113 pid('GetClassData' 2 pos('./compiler/StaticAnalysis.oz' 107 3) nil 3) <Q: 655> [y(8) y(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87106)
lbl(87046)	testBI('IsObject' [x(0)]#[x(1)] 87106)
lbl(87050)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 87062)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87062)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87084)
lbl(87069)	inlineDot(x(0) kind x(2) cache)
		testLiteral(x(2) 'class' 87084)
lbl(87079)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(87084)	move(y(2) x(0))
		move(g(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87101)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 655> 5)
lbl(87101)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87106)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(87018)
lbl(87113)	definition(x(3) 87216 pid('GetClassOfObjectData' 2 pos('./compiler/StaticAnalysis.oz' 135 3) nil 3) <Q: 656> [y(8) y(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87209)
lbl(87141)	testBI('IsObject' [x(0)]#[x(1)] 87209)
lbl(87145)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 87157)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87157)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87187)
lbl(87164)	inlineDot(x(0) kind x(2) cache)
		testLiteral(x(2) object 87187)
lbl(87174)	move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(getClassNode x(1) 1 cache)
lbl(87187)	move(y(2) x(0))
		move(g(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87204)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 656> 5)
lbl(87204)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87209)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(87113)
lbl(87216)	definition(x(3) 87236 pid('GetDataObject' 2 pos('./compiler/StaticAnalysis.oz' 164 3) nil 3) <Q: 657> nil)
		move(x(0) x(2))
		putConstant(true x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87216)
lbl(87236)	definition(x(1) 87256 pid('GetData' 2 pos('./compiler/StaticAnalysis.oz' 174 3) nil 3) <Q: 658> nil)
		move(x(0) x(2))
		putConstant(false x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87236)
lbl(87256)	definition(x(3) 87282 pid('GetFullData' 2 pos('./compiler/StaticAnalysis.oz' 184 3) nil 4) <Q: 659> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(true x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87256)
lbl(87282)	definition(x(3) 87308 pid('GetPrintData' 2 pos('./compiler/StaticAnalysis.oz' 188 3) nil 4) <Q: 660> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(false x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87282)
lbl(87308)	definition(x(3) 87334 pid('IsToken' 2 pos('./compiler/StaticAnalysis.oz' 195 3) nil 4) <Q: 661> [y(8)])
		testBI('IsObject' [x(0)]#[x(2)] 87328)
		move(g(0) x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87328)	getLiteral(false x(1))
		return
		endDefinition(87308)
lbl(87334)	move(y(3) x(2))
		inlineDot(x(2) is x(2) cache)
lbl(87343)	definition(x(3) 87409 pid('' 2 pos('./compiler/StaticAnalysis.oz' 200 2) nil 6) <Q: 662> [y(5) y(6) y(8)])
		testBI('IsObject' [x(0)]#[x(2)] 87403)
		allocateL2
		move(x(1) y(0))
		createVariable(y(1))
		move(g(0) x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 87371)
		getLiteral(true y(1))
		branch(87392)
lbl(87371)	move(g(1) x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 87383)
		getLiteral(true y(1))
		branch(87392)
lbl(87383)	move(g(2) x(4))
		callBI('HasFeature' [x(0) x(4)]#[x(5)])
		unify(x(5) y(1))
lbl(87392)	move(y(1) x(0))
		callBI('Not' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(87403)	getLiteral(false x(1))
		return
		endDefinition(87343)
lbl(87409)	putConstant(object x(4))
		callBI('AdjoinAt' [x(2) x(4) x(3)]#[x(5)])
		putRecord(dt [any det detOrKinded] y(1))
		setVariable(x(3))
		setVariable(y(3))
		setVariable(y(6))
lbl(87425)	definition(x(2) 87437 pid('DetTests.any' 2 pos('./compiler/StaticAnalysis.oz' 211 16) nil 2) <Q: 663> nil)
		getLiteral(true x(1))
		return
		endDefinition(87425)
lbl(87437)	unify(x(2) x(3))
lbl(87440)	definition(x(2) 87493 pid('DetTests.det' 2 pos('./compiler/StaticAnalysis.oz' 214 9) nil 3) <Q: 664> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87486)
		testBI('IsObject' [x(0)]#[x(1)] 87481)
		move(g(0) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87481)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87486)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(87440)
lbl(87493)	unify(x(2) y(3))
lbl(87496)	definition(x(2) 87552 pid('DetTests.detOrKinded' 2 pos('./compiler/StaticAnalysis.oz' 221 2) nil 3) <Q: 665> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87542)
		testBI('IsObject' [x(0)]#[x(1)] 87537)
		move(g(0) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87537)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87542)	callBI('IsKinded' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(87496)
lbl(87552)	unify(x(2) y(6))
lbl(87555)	definition(x(3) 87593 pid('IsListNow' 2 pos('./compiler/StaticAnalysis.oz' 233 3) nil 3) <Q: 666> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87587)
		testLiteral(x(0) nil 87573)
lbl(87569)	getLiteral(true x(1))
		return
lbl(87573)	testList(x(0) 87583)
lbl(87576)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 666> 5)
lbl(87583)	getLiteral(false x(1))
		return
lbl(87587)	getLiteral(unit x(1))
		return
		endDefinition(87555)
lbl(87593)	definition(x(2) 87649 pid('IsStringNow' 2 pos('./compiler/StaticAnalysis.oz' 243 3) nil 4) <Q: 667> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87643)
		testLiteral(x(0) nil 87611)
lbl(87607)	getLiteral(true x(1))
		return
lbl(87611)	testList(x(0) 87639)
lbl(87614)	getVarVar(x(0) x(2))
		testBI('IsDet' [x(0)]#[x(3)] 87635)
		testBI('IsChar' [x(0)]#[x(3)] 87631)
		move(x(2) x(0))
		genFastCall(<Q: 667> 5)
lbl(87631)	getLiteral(false x(1))
		return
lbl(87635)	getLiteral(false x(1))
		return
lbl(87639)	getLiteral(false x(1))
		return
lbl(87643)	getLiteral(unit x(1))
		return
		endDefinition(87593)
lbl(87649)	definition(x(3) 87740 pid('IsVirtualStringNow' 2 pos('./compiler/StaticAnalysis.oz' 257 3) nil 3) <Q: 668> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87734)
		allocateL3
		move(x(1) y(0))
		testBI('IsAtom' [x(0)]#[x(2)] 87672)
lbl(87667)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(87672)	testBI('IsInt' [x(0)]#[x(2)] 87678)
		branch(87667)
lbl(87678)	testBI('IsFloat' [x(0)]#[x(2)] 87684)
		branch(87667)
lbl(87684)	move(x(0) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 667> 4)
		testBool(y(2) 87699 87723)
		branch(87667)
lbl(87699)	move(y(1) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 87718)
lbl(87706)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 87718)
lbl(87713)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(87718)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(87723)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(259)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87734)	getLiteral(unit x(1))
		return
		endDefinition(87649)
lbl(87740)	definition(x(4) 87807 pid('Maybe' 2 pos('./compiler/StaticAnalysis.oz' 275 6) nil 3) <Q: 669> [y(7)])
lbl(87746)	definition(x(2) 87801 pid('' 2 pos('./compiler/StaticAnalysis.oz' 276 2) nil 3) unit [g(0) x(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87794)
		testBI('IsObject' [x(0)]#[x(1)] 87785)
lbl(87773)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87785)
lbl(87780)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87785)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailCall(g(1) 2)
lbl(87794)	getLiteral(true y(0))
		deAllocateL2
		return
		endDefinition(87746)
lbl(87801)	unify(x(2) x(1))
		return
		endDefinition(87740)
lbl(87807)	createVariable(y(8))
lbl(87809)	definition(x(6) 87917 pid('MaybePairOf' 4 pos('./compiler/StaticAnalysis.oz' 288 6) nil 4) <Q: 670> [y(7) y(8)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87910)
		testBI('IsObject' [x(0)]#[x(1)] 87856)
lbl(87844)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87856)
lbl(87851)	getLiteral(true y(2))
		deAllocateL5
		return
lbl(87856)	testRecord(y(3) '#' 2 87905)
lbl(87861)	getVarVar(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) false '' false 3) 0)
		testBool(y(4) 87889 87894)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(1) false '' true 3) 0)
lbl(87889)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87894)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(298)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87905)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87910)	getLiteral(true y(2))
		deAllocateL5
		return
		endDefinition(87809)
lbl(87917)	definition(x(7) 88025 pid('MaybeListOf' 3 pos('./compiler/StaticAnalysis.oz' 302 6) nil 3) <Q: 671> [y(7) y(8)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88018)
		testBI('IsObject' [x(0)]#[x(1)] 87961)
lbl(87949)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87961)
lbl(87956)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87961)	match(y(2) ht(88013 [onScalar(nil 87964) onRecord('|' 2 87969)]))
lbl(87964)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87969)	getVarVar(x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genCall(gci(g(1) false '' false 3) 0)
		testBool(y(3) 87997 88002)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 671> 7)
lbl(87997)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88002)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(312)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88013)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88018)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(87917)
lbl(88025)	definition(x(8) 88045 pid('MaybeList' 2 pos('./compiler/StaticAnalysis.oz' 317 6) nil 3) <Q: 672> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(value x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(88025)
lbl(88045)	definition(x(9) 88065 pid('MaybeString' 2 pos('./compiler/StaticAnalysis.oz' 320 6) nil 3) <Q: 673> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(char x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(88045)
lbl(88065)	createVariable(x(10))
lbl(88067)	definition(x(11) 88194 pid('MaybeVirtualString' 2 pos('./compiler/StaticAnalysis.oz' 323 6) nil 3) <Q: 674> [y(7) g(19) x(10)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88187)
		testBI('IsObject' [x(0)]#[x(1)] 88108)
lbl(88096)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88108)
lbl(88103)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88108)	move(y(2) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 88120)
lbl(88115)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88120)	testBI('IsInt' [x(0)]#[x(1)] 88126)
		branch(88115)
lbl(88126)	testBI('IsFloat' [x(0)]#[x(1)] 88132)
		branch(88115)
lbl(88132)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 673> 4)
		testBool(y(3) 88147 88176)
		branch(88115)
lbl(88147)	move(y(2) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 88171)
lbl(88154)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 88171)
lbl(88161)	move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 165> 7)
lbl(88171)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88176)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88187)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(88067)
lbl(88194)	unify(x(11) x(10))
		putRecord(dtt [list listOf pairOf string virtualString] y(13))
		setValue(x(8))
		setValue(x(7))
		setValue(x(6))
		setValue(x(9))
		setValue(x(10))
		moveMoveXYXY(x(0) y(14) x(1) y(15))
		moveMoveXYXY(x(5) y(16) x(2) y(17))
		moveMoveXYYX(x(3) y(18) y(16) x(0))
		move(x(4) x(1))
		createVariableMove(y(19) x(2))
		genFastCall(<P: 161> 6)
		moveMoveYXYX(y(19) x(0) y(13) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
lbl(88243)	definition(x(0) 88334 pid('DetTypeTest' 3 pos('./compiler/StaticAnalysis.oz' 354 6) nil 6) <Q: 675> [x(2) g(9)])
		callBI('Width' [x(0)]#[x(3)])
		testNumber(x(3) 0 88274)
		callBI('Label' [x(0)]#[x(3)])
		move(g(0) x(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(4) 2)
lbl(88274)	match(x(0) ht(88315 [onRecord(list 1 88277) onRecord(pair 2 88291)]))
lbl(88277)	getVariable(x(0))
		move(g(0) x(3))
		inlineDot(x(3) listOf x(4) cache)
		tailCall(x(4) 3)
lbl(88291)	getVarVar(x(0) x(4))
		move(g(0) x(3))
		inlineDot(x(3) pairOf x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		tailCall(x(5) 4)
lbl(88315)	putRecord(illegalTypeDeclaration 1 x(3))
		setValue(x(0))
		putRecord(compiler 2 x(1))
		setConstant(internal)
		setValue(x(3))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(88243)
lbl(88334)	unify(x(0) y(8))
		putRecord(doCheckType 2 x(0))
		setConstant(det)
		setValue(g(21))
		putRecord(doCheckType 2 x(1))
		setConstant(det)
		setValue(g(22))
		putRecord(doCheckType 2 x(3))
		setConstant(det)
		setValue(g(23))
		putRecord(doCheckType 2 x(4))
		setConstant(det)
		setValue(g(24))
		putRecord(doCheckType 2 x(5))
		setConstant(det)
		setValue(g(25))
		putRecord(doCheckType 2 x(6))
		setConstant(det)
		setValue(g(26))
		putRecord(doCheckType 2 x(7))
		setConstant(det)
		setValue(g(27))
		putRecord(doCheckType 2 x(8))
		setConstant(det)
		setValue(g(28))
		putRecord(doCheckType 2 x(9))
		setConstant(det)
		setValue(g(29))
		putRecord(doCheckType 2 x(10))
		setConstant(det)
		setValue(g(30))
		putRecord(doCheckType 2 x(11))
		setConstant(rec)
		setValue(g(31))
		putRecord(doCheckType 2 x(12))
		setConstant(det)
		setValue(g(32))
		putRecord(doCheckType 2 x(13))
		setConstant(det)
		setValue(g(33))
		putRecord(doCheckType 2 x(14))
		setConstant(det)
		setValue(g(34))
		putRecord(doCheckType 2 x(15))
		setConstant(det)
		setValue(g(35))
		putRecord(doCheckType 2 x(16))
		setConstant(det)
		setValue(g(36))
		putRecord(doCheckType 2 x(17))
		setConstant(det)
		setValue(g(37))
		putRecord(doCheckType 2 x(18))
		setConstant(det)
		setValue(g(38))
		putRecord(doCheckType 2 x(19))
		setConstant(det)
		setValue(g(39))
		putRecord(doCheckType 2 x(20))
		setConstant(kind)
		setValue(g(40))
		putRecord(doCheckType 2 x(21))
		setConstant(det)
		setValue(g(41))
		putRecord(doCheckType 2 x(22))
		setConstant(rec)
		setValue(y(17))
		putRecord(doCheckType 2 x(23))
		setConstant(det)
		setValue(g(42))
		putRecord(doCheckType 2 x(24))
		setConstant(det)
		setValue(g(43))
		putRecord(doCheckType 2 x(25))
		setConstant(rec)
		setValue(y(18))
		putRecord(bi [',' '.' '<-' '=' '@' 'And' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsInt' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Space.new' 'Width' '^' builtin] y(8))
		setConstant(doComma)
		setConstant(doDot)
		setConstant(doAssignAccess)
		setConstant(doEq)
		setConstant(doAssignAccess)
		setConstant(doAnd)
		setValue(x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setConstant(doLabel)
		setConstant(doNew)
		setConstant(doNewArray)
		setConstant(doNewCell)
		setConstant(doNewChunk)
		setConstant(doNewDictionary)
		setConstant(doNewLock)
		setConstant(doNewName)
		setConstant(doNewPort)
		setConstant(doNewUniqueName)
		setConstant(doNot)
		setConstant(doOr)
		setConstant(doProcedureArity)
		setConstant(doNewSpace)
		setConstant(doWidth)
		setConstant(doHat)
		setConstant(doBuiltin)
lbl(88637)	definition(x(7) 88993 pid('GetReachable' 2 pos('./compiler/StaticAnalysis.oz' 428 3) nil 2) <Q: 676> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getType y(0) 1 cache)
		testLiteral(y(2) unit 88732)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88694 88721)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88694)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88721)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(440)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88732)	createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(4) 88820 88980)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88775 88809)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88775)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88809)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(454)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88820)	createVariableMove(y(4) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(4) 88908 88969)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88863 88897)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88863)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88897)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(468)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88908)	move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88931 88958)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88931)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88958)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(479)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88969)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(462)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88980)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(448)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(88637)
lbl(88993)	definition(x(8) 89013 pid('AppendReachable' 3 pos('./compiler/StaticAnalysis.oz' 492 3) nil 4) <Q: 677> nil)
		move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(88993)
lbl(89013)	definition(x(9) 89117 pid('InstallEntry' 1 pos('./compiler/StaticAnalysis.oz' 496 3) nil 3) <Q: 678> nil)
		allocateL3
		inlineDot(x(0) var x(1) cache)
		inlineDot(x(0) last x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		sendMsg(setLastValue y(1) 1 cache)
		move(y(0) x(0))
		putConstant(data x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 89073)
		inlineDot(x(0) data x(1) cache)
		move(x(1) x(0))
		sendMsg('setValue' y(2) 1 cache)
lbl(89073)	move(y(0) x(0))
		putConstant(type x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 89102 89104)
		inlineDot(x(0) type x(0) cache)
		move(y(1) x(1))
		deAllocateL3
		tailSendMsg(setType x(1) 1 cache)
lbl(89102)	deAllocateL3
		return
lbl(89104)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(509)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89013)
lbl(89117)	definition(x(10) 89154 pid('GetGlobalEnv' 2 pos('./compiler/StaticAnalysis.oz' 514 3) nil 4) <Q: 679> [x(8) x(7)])
		allocateL2
		move(x(1) y(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(89117)
lbl(89154)	definition(x(7) 89168 pid('InstallGlobalEnv' 1 pos('./compiler/StaticAnalysis.oz' 525 3) nil 2) <Q: 680> [x(9)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(89154)
lbl(89168)	definition(x(7) 89294 pid('ValueToErrorLine' 3 pos('./compiler/StaticAnalysis.oz' 538 3) nil 5) <Q: 681> nil)
		testLiteral(x(1) unit 89182)
		getLiteral(nil x(2))
		return
lbl(89182)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(4) 89260 89281)
		getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(pn 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(3))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(89260)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord(oz 1 x(1))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(89281)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89168)
lbl(89294)	definition(x(7) 89592 pid('IssueTypeError' 6 pos('./compiler/StaticAnalysis.oz' 556 3) nil 8) <Q: 682> [g(45)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getErrorMsg y(4) 1 cache)
		createVariableMove(y(7) x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getUnifier y(4) 2 cache)
		putRecord(hint [l m] x(1))
		setConstant('First type')
		setVariable(x(2))
		putRecord(hint [l m] x(4))
		setConstant('Second type')
		setVariable(y(10))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(0))
		setValue(x(1))
		setValue(x(3))
		putList(x(7))
		setVariable(y(13))
		setConstant(nil)
		putList(x(6))
		setVariable(y(12))
		setValue(x(7))
		putList(x(5))
		setVariable(y(11))
		setValue(x(6))
		putList(y(9))
		setValue(x(0))
		setValue(x(5))
		move(y(0) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(2) x(1) y(11) x(2))
		putConstant('First value' x(0))
		genFastCall(<Q: 681> 6)
		moveMoveYXYX(y(3) x(1) y(12) x(2))
		putConstant('Second value' x(0))
		genFastCall(<Q: 681> 6)
		testLiteral(y(7) unit 89438)
lbl(89433)	getLiteral(nil y(13))
		branch(89497)
lbl(89438)	testLiteral(y(8) unit 89444)
lbl(89442)	branch(89433)
lbl(89444)	getList(y(13))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Original assertion')
		unifyVariable(x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(oz 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyVariable(y(0))
		move(y(7) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 660> 4)
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		genFastCall(<Q: 660> 4)
lbl(89497)	move(y(9) x(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(4) 1 cache)
		testBool(y(1) 89552 89579)
		move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('type error' x(2))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(89552)	move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('static analysis warning' x(2))
		deAllocateL
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(89579)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(581)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89294)
lbl(89592)	definition(x(7) 89670 pid('UnifyTypesOf' 5 pos('./compiler/StaticAnalysis.oz' 594 3) nil 6) <Q: 683> [g(46)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getType y(0) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getType y(1) 1 cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(2)] 89657)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		genFastCall(<Q: 682> 12)
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(89657)	callBI('BitArray.and' [x(0) x(1)]#nil)
		callBI('BitArray.and' [x(1) x(0)]#nil)
		getLiteral(true y(4))
		deAllocateL7
		return
		endDefinition(89592)
lbl(89670)	definition(x(7) 89693 pid('ConstrainTypes' 3 pos('./compiler/StaticAnalysis.oz' 614 3) nil 4) <Q: 684> [g(46)])
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(3)] 89684)
		getLiteral(false x(2))
		return
lbl(89684)	callBI('BitArray.and' [x(0) x(1)]#nil)
		getLiteral(true x(2))
		return
		endDefinition(89670)
lbl(89693)	createVariable(x(7))
lbl(89695)	definition(x(0) 89811 pid('OptimizeTypeRepr' 2 pos('./compiler/StaticAnalysis.oz' 631 3) nil 4) <Q: 685> [g(47) y(12) g(20) x(7)])
		match(x(0) ht(89796 [onRecord(type 1 89704) onRecord(value 1 89737) onRecord(record 1 89782)]))
lbl(89704)	allocateL2
		getVariable(y(0))
		move(x(1) y(1))
		testList(y(0) 89725)
lbl(89713)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 89725)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(89725)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL2
		genFastCall(<P: 77> 7)
lbl(89737)	allocateL4
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) decode x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 647> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		putRecord(type 1 x(0))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 685> 5)
lbl(89782)	getVariable(x(0))
		getRecord(record 1 x(1))
		unifyVariable(x(2))
		move(g(3) x(1))
		genFastCall(<P: 161> 7)
lbl(89796)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(640)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(89695)
lbl(89811)	unify(x(0) x(7))
lbl(89814)	definition(x(7) 90108 pid('IssueUnificationFailure' 3 pos('./compiler/StaticAnalysis.oz' 646 3) nil 5) <Q: 686> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getErrorMsg y(0) 1 cache)
		createVariableMove(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getUnifier y(0) 2 cache)
		putRecord(hint [l m] y(7))
		setConstant('Offending expression in')
		setVariable(x(1))
		move(y(1) x(0))
		genFastCall(<Q: 648> 4)
		createVariable(y(8))
		testLiteral(y(5) unit 89884)
lbl(89879)	unify(y(8) y(2))
		branch(89952)
lbl(89884)	testLiteral(y(6) unit 89890)
lbl(89888)	branch(89879)
lbl(89890)	move(y(5) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 660> 4)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(3))
		setValue(y(9))
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 3 x(2))
		setValue(x(3))
		setConstant(' = ')
		setValue(x(4))
		putRecord(hint [l m] x(0))
		setConstant('Original assertion')
		setValue(x(2))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 21> 6)
lbl(89952)	createVariable(y(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 89968)
lbl(89963)	unify(y(2) y(8))
		branch(89988)
lbl(89968)	testLiteral(y(1) unit 89974)
		branch(89963)
lbl(89974)	putList(x(1))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(8) x(0) y(2) x(2))
		genFastCall(<P: 21> 6)
lbl(89988)	createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(0) 1 cache)
		testBool(y(1) 90048 90095)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 90024)
lbl(90019)	getLiteral('unification error in needed statement' y(1))
		branch(90027)
lbl(90024)	unify(y(1) y(4))
lbl(90027)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(90048)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 90071)
lbl(90066)	getLiteral('unification error in possibly unneeded statement' y(1))
		branch(90074)
lbl(90071)	unify(y(1) y(4))
lbl(90074)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(90095)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89814)
lbl(90108)	definition(x(7) 90392 pid('MakeDummyProcedure' 3 pos('./compiler/StaticAnalysis.oz' 690 3) nil 3) <Q: 687> nil)
		match(x(0) ht(90389 [onScalar(0 90117) onScalar(1 90130) onScalar(2 90143) onScalar(3 90156) onScalar(4 90169) onScalar(5 90182) onScalar(6 90195) onScalar(7 90208) onScalar(8 90221) onScalar(9 90234) onScalar(10 90247) onScalar(11 90260) onScalar(12 90273) onScalar(13 90286) onScalar(14 90299) onScalar(15 90312) onScalar(16 90325) onScalar(17 90338) onScalar(18 90351) onScalar(19 90364) onScalar(20 90377)]))
lbl(90117)	definition(x(0) 90126 pid('' 0 pos('./compiler/StaticAnalysis.oz' 692 17) nil 0) unit nil)
		return
		endDefinition(90117)
lbl(90126)	unify(x(0) x(2))
		return
lbl(90130)	definition(x(0) 90139 pid('' 1 pos('./compiler/StaticAnalysis.oz' 693 17) nil 1) unit nil)
		return
		endDefinition(90130)
lbl(90139)	unify(x(0) x(2))
		return
lbl(90143)	definition(x(0) 90152 pid('' 2 pos('./compiler/StaticAnalysis.oz' 694 17) nil 2) unit nil)
		return
		endDefinition(90143)
lbl(90152)	unify(x(0) x(2))
		return
lbl(90156)	definition(x(0) 90165 pid('' 3 pos('./compiler/StaticAnalysis.oz' 695 17) nil 3) unit nil)
		return
		endDefinition(90156)
lbl(90165)	unify(x(0) x(2))
		return
lbl(90169)	definition(x(0) 90178 pid('' 4 pos('./compiler/StaticAnalysis.oz' 696 17) nil 4) unit nil)
		return
		endDefinition(90169)
lbl(90178)	unify(x(0) x(2))
		return
lbl(90182)	definition(x(0) 90191 pid('' 5 pos('./compiler/StaticAnalysis.oz' 697 17) nil 5) unit nil)
		return
		endDefinition(90182)
lbl(90191)	unify(x(0) x(2))
		return
lbl(90195)	definition(x(0) 90204 pid('' 6 pos('./compiler/StaticAnalysis.oz' 698 17) nil 6) unit nil)
		return
		endDefinition(90195)
lbl(90204)	unify(x(0) x(2))
		return
lbl(90208)	definition(x(0) 90217 pid('' 7 pos('./compiler/StaticAnalysis.oz' 699 17) nil 7) unit nil)
		return
		endDefinition(90208)
lbl(90217)	unify(x(0) x(2))
		return
lbl(90221)	definition(x(0) 90230 pid('' 8 pos('./compiler/StaticAnalysis.oz' 700 17) nil 8) unit nil)
		return
		endDefinition(90221)
lbl(90230)	unify(x(0) x(2))
		return
lbl(90234)	definition(x(0) 90243 pid('' 9 pos('./compiler/StaticAnalysis.oz' 701 17) nil 9) unit nil)
		return
		endDefinition(90234)
lbl(90243)	unify(x(0) x(2))
		return
lbl(90247)	definition(x(0) 90256 pid('' 10 pos('./compiler/StaticAnalysis.oz' 702 17) nil 10) unit nil)
		return
		endDefinition(90247)
lbl(90256)	unify(x(0) x(2))
		return
lbl(90260)	definition(x(0) 90269 pid('' 11 pos('./compiler/StaticAnalysis.oz' 703 17) nil 11) unit nil)
		return
		endDefinition(90260)
lbl(90269)	unify(x(0) x(2))
		return
lbl(90273)	definition(x(0) 90282 pid('' 12 pos('./compiler/StaticAnalysis.oz' 704 17) nil 12) unit nil)
		return
		endDefinition(90273)
lbl(90282)	unify(x(0) x(2))
		return
lbl(90286)	definition(x(0) 90295 pid('' 13 pos('./compiler/StaticAnalysis.oz' 705 17) nil 13) unit nil)
		return
		endDefinition(90286)
lbl(90295)	unify(x(0) x(2))
		return
lbl(90299)	definition(x(0) 90308 pid('' 14 pos('./compiler/StaticAnalysis.oz' 706 17) nil 14) unit nil)
		return
		endDefinition(90299)
lbl(90308)	unify(x(0) x(2))
		return
lbl(90312)	definition(x(0) 90321 pid('' 15 pos('./compiler/StaticAnalysis.oz' 707 17) nil 15) unit nil)
		return
		endDefinition(90312)
lbl(90321)	unify(x(0) x(2))
		return
lbl(90325)	definition(x(0) 90334 pid('' 16 pos('./compiler/StaticAnalysis.oz' 708 17) nil 16) unit nil)
		return
		endDefinition(90325)
lbl(90334)	unify(x(0) x(2))
		return
lbl(90338)	definition(x(0) 90347 pid('' 17 pos('./compiler/StaticAnalysis.oz' 709 17) nil 17) unit nil)
		return
		endDefinition(90338)
lbl(90347)	unify(x(0) x(2))
		return
lbl(90351)	definition(x(0) 90360 pid('' 18 pos('./compiler/StaticAnalysis.oz' 710 17) nil 18) unit nil)
		return
		endDefinition(90351)
lbl(90360)	unify(x(0) x(2))
		return
lbl(90364)	definition(x(0) 90373 pid('' 19 pos('./compiler/StaticAnalysis.oz' 711 17) nil 19) unit nil)
		return
		endDefinition(90364)
lbl(90373)	unify(x(0) x(2))
		return
lbl(90377)	definition(x(0) 90386 pid('' 20 pos('./compiler/StaticAnalysis.oz' 712 17) nil 20) unit nil)
		return
		endDefinition(90377)
lbl(90386)	unify(x(0) x(2))
lbl(90389)	return
		endDefinition(90108)
lbl(90392)	definition(x(7) 90454 pid('MakeDummyObject' 2 pos('./compiler/StaticAnalysis.oz' 718 3) nil 8) <Q: 688> [g(48) g(49)])
		allocateL3
		putList(x(7))
		setValue(g(1))
		setConstant(nil)
		move(x(1) y(0))
		move(x(0) x(5))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		createVariableMove(y(1) x(6))
		genFastCall(<P: 229> 14)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		sendMsg(noop y(2) 0 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90392)
lbl(90454)	definition(x(7) 90486 pid('MakeDummyClass' 2 pos('./compiler/StaticAnalysis.oz' 722 3) nil 7) <Q: 689> [g(48)])
		move(x(0) x(5))
		move(x(1) x(6))
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		genFastCall(<P: 229> 15)
		endDefinition(90454)
lbl(90486)	definition(x(7) 90612 pid('ListToVS' 5 pos('./compiler/StaticAnalysis.oz' 729 3) nil 7) <Q: 690> nil)
		testLiteral(x(0) nil 90505)
lbl(90496)	getRecord('#' 2 x(4))
		unifyValue(x(1))
		unifyValue(x(3))
		return
lbl(90505)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testList(y(0) 90541)
lbl(90522)	getVarVar(x(5) x(6))
		testLiteral(x(6) nil 90541)
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValue(x(5))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(90541)	testList(y(0) 90597)
lbl(90544)	getVarVar(x(0) x(1))
		shallowGuard(90597)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(90555)	shallowThen
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValVar(x(0) x(3))
lbl(90565)	definition(x(4) 90584 pid('' 3 pos('./compiler/StaticAnalysis.oz' 738 3) nil 3) unit [y(2)])
		getRecord('#' 3 x(2))
		unifyValue(g(0))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(90565)
lbl(90584)	move(x(1) x(0))
		move(x(4) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 32> 9)
lbl(90597)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(740)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(90486)
lbl(90612)	definition(x(7) 90635 pid('SetToVS' 2 pos('./compiler/StaticAnalysis.oz' 743 3) nil 5) <Q: 691> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(', ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90612)
lbl(90635)	definition(x(7) 90658 pid('ProdToVS' 2 pos('./compiler/StaticAnalysis.oz' 747 3) nil 5) <Q: 692> nil)
		move(x(1) x(4))
		putConstant('' x(1))
		putConstant(' x ' x(2))
		putConstant('' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90635)
lbl(90658)	definition(x(7) 90681 pid('ApplToVS' 2 pos('./compiler/StaticAnalysis.oz' 751 3) nil 5) <Q: 693> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(' ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90658)
lbl(90681)	definition(x(7) 90727 pid('FormatArity' 2 pos('./compiler/StaticAnalysis.oz' 755 3) nil 5) <Q: 694> nil)
		callBI('Arity' [x(0)]#[x(3)])
lbl(90690)	definition(x(4) 90713 pid('' 2 pos('./compiler/StaticAnalysis.oz' 757 7) nil 3) unit nil)
		testBI('IsLiteral' [x(0)]#[x(2)] 90707)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
lbl(90707)	unify(x(1) x(0))
		return
		endDefinition(90690)
lbl(90713)	move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90681)
lbl(90727)	definition(x(7) 90770 pid('Ozify' 2 pos('./compiler/StaticAnalysis.oz' 760 3) nil 4) <Q: 695> nil)
lbl(90733)	definition(x(3) 90759 pid('' 2 pos('./compiler/StaticAnalysis.oz' 762 7) nil 4) unit nil)
		move(x(0) x(2))
		testBI('IsVirtualString' [x(2)]#[x(3)] 90750)
		unify(x(1) x(0))
		return
lbl(90750)	getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(90733)
lbl(90759)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90727)
lbl(90770)	definition(x(7) 90820 pid('TypeToVS' 2 pos('./compiler/StaticAnalysis.oz' 765 3) nil 5) <Q: 696> [y(12)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) decode x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		putConstant('' x(1))
		putConstant(' ++ ' x(2))
		putConstant('' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 690> 10)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90770)
lbl(90820)	definition(x(7) 90917 pid('AllUpToAux' 5 pos('./compiler/StaticAnalysis.oz' 780 6) nil 5) <Q: 697> nil)
		match(x(0) ht(90902 [onScalar(nil 90829) onRecord('|' 2 90836)]))
lbl(90829)	unify(x(3) x(2))
		getLiteral(true x(4))
		return
lbl(90836)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 90883 90891)
		move(y(3) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		deAllocateL7
		genFastCall(<Q: 697> 11)
lbl(90883)	unify(y(4) y(0))
		getLiteral(false y(5))
		deAllocateL7
		return
lbl(90891)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(786)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(90902)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(789)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90820)
lbl(90917)	definition(x(7) 90937 pid('AllUpTo' 4 pos('./compiler/StaticAnalysis.oz' 792 6) nil 5) <Q: 698> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 697> 11)
		endDefinition(90917)
lbl(90937)	definition(x(7) 91031 pid('SomeUpToNAux' 5 pos('./compiler/StaticAnalysis.oz' 803 6) nil 5) <Q: 699> nil)
		match(x(0) ht(91016 [onScalar(nil 90946) onRecord('|' 2 90953)]))
lbl(90946)	unify(x(3) x(2))
		getLiteral(false x(4))
		return
lbl(90953)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariableMove(y(5) x(1))
		call(y(1) 2)
		testBool(y(5) 90985 91005)
		unify(y(3) y(2))
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(90985)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<Q: 699> 11)
lbl(91005)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(809)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91016)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(812)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90937)
lbl(91031)	definition(x(7) 91051 pid('SomeUpToN' 4 pos('./compiler/StaticAnalysis.oz' 815 6) nil 5) <Q: 700> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 699> 11)
		endDefinition(91031)
lbl(91051)	definition(x(7) 91119 pid('AllDistinct' 2 pos('./compiler/StaticAnalysis.oz' 820 3) nil 3) <Q: 701> nil)
		testLiteral(x(0) nil 91065)
lbl(91061)	getLiteral(true x(1))
		return
lbl(91065)	testList(x(0) 91104)
lbl(91068)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 91099)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 701> 5)
lbl(91099)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(91104)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(824)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91051)
lbl(91119)	definition(x(7) 91170 pid('Add' 3 pos('./compiler/StaticAnalysis.oz' 827 3) nil 3) <Q: 702> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 91149 91157)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(91149)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(91157)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(828)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91119)
lbl(91170)	definition(x(7) 91261 pid('Union' 3 pos('./compiler/StaticAnalysis.oz' 832 3) nil 3) <Q: 703> nil)
		testLiteral(x(0) nil 91184)
lbl(91180)	unify(x(2) x(1))
		return
lbl(91184)	testList(x(0) 91246)
lbl(91187)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 91221 91235)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91221)	getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91235)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(835)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91246)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(839)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91170)
lbl(91261)	definition(x(8) 91305 pid('UnionAll' 2 pos('./compiler/StaticAnalysis.oz' 842 3) nil 4) <Q: 704> [x(7)])
		testLiteral(x(0) nil 91275)
lbl(91271)	getLiteral(nil x(1))
		return
lbl(91275)	testList(x(0) 91290)
lbl(91278)	getVarVar(x(2) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<P: 32> 9)
lbl(91290)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(845)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91261)
lbl(91305)	definition(x(7) 91397 pid('PLDotEQ' 3 pos('./compiler/StaticAnalysis.oz' 851 3) nil 5) <Q: 705> [y(2)])
		match(x(1) ht(91382 [onScalar(nil 91314) onRecord('|' 2 91318)]))
lbl(91314)	getLiteral(unit x(2))
		return
lbl(91318)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(g(0) x(3))
		inlineDot(x(3) eq x(4) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		call(x(4) 3)
		testBool(y(4) 91359 91371)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(91359)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 705> 7)
lbl(91371)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(857)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91382)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(864)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91305)
lbl(91397)	definition(x(7) 91502 pid('ApproxInheritance' 3 pos('./compiler/StaticAnalysis.oz' 879 3) nil 5) <Q: 706> nil)
		allocateL3
lbl(91404)	definition(x(4) 91470 pid('' 3 pos('./compiler/StaticAnalysis.oz' 882 1) nil 6) unit nil)
		callBI('Arity' [x(1)]#[x(4)])
lbl(91413)	definition(x(5) 91453 pid('' 3 pos('./compiler/StaticAnalysis.oz' 884 5) nil 6) unit [x(1)])
		testBI('HasFeature' [x(0) x(1)]#[x(3)] 91438)
		putRecord('#' 2 x(3))
		setConstant(nil)
		setConstant(unit)
		callBI('AdjoinAt' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
lbl(91438)	move(g(0) x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		callBI('AdjoinAt' [x(0) x(1) x(4)]#[x(5)])
		unify(x(5) x(2))
		return
		endDefinition(91413)
lbl(91453)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(91404)
lbl(91470)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(m x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(91397)
lbl(91502)	putConstant('NewUniqueName' x(7))
		putConstant(2 x(8))
		callBI(builtin [x(7) x(8)]#[x(9)])
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord errorMsg needed savedToCopy 'self' toCopy top unifierLeft unifierRight] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(true)
		setConstant(nil)
		setConstant(nil)
		setConstant(unit)
		setConstant(true)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [rep switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(91547)	definition(x(8) 91650 pid('Control,init/fast' 2 pos('./compiler/StaticAnalysis.oz' 919 6) nil 4) <Q: 707> nil)
		getSelf(x(2))
		inlineDot(x(2) rep x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) switches x(2) cache)
		unify(x(2) x(1))
		putConstant(nil x(0))
		inlineAssign('self' x(0) cache)
		putConstant(unit x(0))
		inlineAssign(coord x(0) cache)
		putConstant(true x(0))
		inlineAssign(top x(0) cache)
		putConstant(true x(0))
		inlineAssign(needed x(0) cache)
		putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		putConstant(nil x(0))
		inlineAssign(savedToCopy x(0) cache)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(91547)
lbl(91650)	definition(x(9) 91685 pid('Control,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 919 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 707> 5)
		endDefinition(91650)
lbl(91685)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(91695)	definition(x(8) 91720 pid('Control,pushSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 933 6) nil 3) <Q: 708> nil)
		inlineAt('self' x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign('self' x(2) cache)
		return
		endDefinition(91695)
lbl(91720)	definition(x(9) 91746 pid('Control,pushSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 933 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 708> 3)
		endDefinition(91720)
lbl(91746)	putRecord('#' [1 2 fast] x(11))
		setConstant(pushSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91756)	definition(x(8) 91793 pid('Control,popSelf/fast' 0 pos('./compiler/StaticAnalysis.oz' 936 6) nil 1) <Q: 709> [g(9)])
		inlineAt('self' x(0) cache)
		testList(x(0) 91780)
lbl(91770)	getVoid(1)
		getVariable(x(0))
		inlineAssign('self' x(0) cache)
		return
lbl(91780)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(popEmptyStack)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91756)
lbl(91793)	definition(x(9) 91807 pid('Control,popSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 936 6) nil 1) unit nil)
		getLiteral(popSelf x(0))
		genFastCall(<Q: 709> 1)
		endDefinition(91793)
lbl(91807)	putRecord('#' [1 2 fast] x(12))
		setConstant(popSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91817)	definition(x(8) 91856 pid('Control,getSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 943 6) nil 2) <Q: 710> nil)
		inlineAt('self' x(1) cache)
		match(x(1) ht(91841 [onScalar(nil 91831) onRecord('|' 2 91835)]))
lbl(91831)	getLiteral(unit x(0))
		return
lbl(91835)	getVariable(x(1))
		unify(x(0) x(1))
		return
lbl(91841)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(946)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91817)
lbl(91856)	definition(x(9) 91882 pid('Control,getSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 943 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 710> 3)
		endDefinition(91856)
lbl(91882)	putRecord('#' [1 2 fast] x(13))
		setConstant('getSelf')
		setValue(x(9))
		setValue(x(8))
lbl(91892)	definition(x(8) 91906 pid('Control,setCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 949 6) nil 1) <Q: 711> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(91892)
lbl(91906)	definition(x(9) 91932 pid('Control,setCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 949 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 711> 3)
		endDefinition(91906)
lbl(91932)	putRecord('#' [1 2 fast] x(14))
		setConstant(setCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91942)	definition(x(8) 91959 pid('Control,getCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 952 6) nil 2) <Q: 712> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91942)
lbl(91959)	definition(x(9) 91985 pid('Control,getCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 952 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 712> 3)
		endDefinition(91959)
lbl(91985)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91995)	definition(x(8) 92012 pid('Control,getTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 956 6) nil 2) <Q: 713> nil)
		inlineAt(top x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91995)
lbl(92012)	definition(x(9) 92038 pid('Control,getTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 956 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 713> 3)
		endDefinition(92012)
lbl(92038)	putRecord('#' [1 2 fast] x(16))
		setConstant(getTop)
		setValue(x(9))
		setValue(x(8))
lbl(92048)	definition(x(8) 92062 pid('Control,setTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 959 6) nil 1) <Q: 714> nil)
		inlineAssign(top x(0) cache)
		return
		endDefinition(92048)
lbl(92062)	definition(x(9) 92088 pid('Control,setTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 959 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 714> 3)
		endDefinition(92062)
lbl(92088)	putRecord('#' [1 2 fast] x(17))
		setConstant(setTop)
		setValue(x(9))
		setValue(x(8))
lbl(92098)	definition(x(8) 92115 pid('Control,getNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 963 6) nil 2) <Q: 715> nil)
		inlineAt(needed x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92098)
lbl(92115)	definition(x(9) 92141 pid('Control,getNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 963 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 715> 3)
		endDefinition(92115)
lbl(92141)	putRecord('#' [1 2 fast] x(18))
		setConstant(getNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92151)	definition(x(8) 92165 pid('Control,setNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 966 6) nil 1) <Q: 716> nil)
		inlineAssign(needed x(0) cache)
		return
		endDefinition(92151)
lbl(92165)	definition(x(9) 92191 pid('Control,setNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 966 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 716> 3)
		endDefinition(92165)
lbl(92191)	putRecord('#' [1 2 fast] x(19))
		setConstant(setNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92201)	definition(x(8) 92226 pid('Control,getTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 970 6) nil 3) <Q: 717> nil)
		inlineAt(top x(2) cache)
		unify(x(2) x(0))
		inlineAt(needed x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92201)
lbl(92226)	definition(x(9) 92261 pid('Control,getTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 970 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 717> 5)
		endDefinition(92226)
lbl(92261)	putRecord('#' [1 2 fast] x(20))
		setConstant(getTopNeeded)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(13))
lbl(92273)	definition(x(8) 92295 pid('Control,setTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 974 6) nil 2) <Q: 718> [y(13)])
		allocateL1
		move(x(1) y(0))
		genCall(gci(g(0) true setTop false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setNeeded true 1) 0)
		endDefinition(92273)
lbl(92295)	definition(x(9) 92330 pid('Control,setTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 974 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 718> 5)
		endDefinition(92295)
lbl(92330)	putRecord('#' [1 2 fast] x(21))
		setConstant(setTopNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92340)	definition(x(8) 92357 pid('Control,notTopNotNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 978 6) nil 2) <Q: 719> [y(13) g(50)])
		move(g(1) x(0))
		move(g(1) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92340)
lbl(92357)	definition(x(9) 92371 pid('Control,notTopNotNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 978 6) nil 1) unit nil)
		getLiteral(notTopNotNeeded x(0))
		genFastCall(<Q: 719> 1)
		endDefinition(92357)
lbl(92371)	putRecord('#' [1 2 fast] x(22))
		setConstant(notTopNotNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92381)	definition(x(8) 92398 pid('Control,notTopButNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 981 6) nil 2) <Q: 720> [y(13) g(50) g(51)])
		move(g(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92381)
lbl(92398)	definition(x(9) 92412 pid('Control,notTopButNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 981 6) nil 1) unit nil)
		getLiteral(notTopButNeeded x(0))
		genFastCall(<Q: 720> 1)
		endDefinition(92398)
lbl(92412)	putRecord('#' [1 2 fast] x(23))
		setConstant(notTopButNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92422)	definition(x(8) 92463 pid('Control,beginVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 985 6) nil 3) <Q: 721> nil)
		inlineAt(toCopy x(0) cache)
		match(x(0) ht(92436 [onScalar(unit 92452)]))
lbl(92436)	inlineAt(savedToCopy x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedToCopy x(2) cache)
lbl(92452)	putConstant(nil x(0))
		inlineAssign(toCopy x(0) cache)
		return
		endDefinition(92422)
lbl(92463)	definition(x(9) 92489 pid('Control,beginVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 985 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 721> 3)
		endDefinition(92463)
lbl(92489)	putRecord('#' [1 2 fast] x(24))
		setConstant(beginVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92499)	definition(x(8) 92559 pid('Control,declareToplevelName/fast' 2 pos('./compiler/StaticAnalysis.oz' 992 6) nil 5) <Q: 722> [y(0)])
		inlineAt(toCopy x(2) cache)
		testLiteral(x(2) unit 92526)
lbl(92514)	move(g(0) x(2))
		inlineDot(x(2) newNamedName x(3) cache)
		tailCall(x(3) 2)
lbl(92526)	allocateL2
		move(g(0) x(3))
		inlineDot(x(3) newCopyableName x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(4) 2)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92499)
lbl(92559)	definition(x(9) 92594 pid('Control,declareToplevelName/slow' 1 pos('./compiler/StaticAnalysis.oz' 992 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 722> 5)
		endDefinition(92559)
lbl(92594)	putRecord('#' [1 2 fast] x(25))
		setConstant(declareToplevelName)
		setValue(x(9))
		setValue(x(8))
lbl(92604)	definition(x(8) 92664 pid('Control,declareToplevelProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 1000 6) nil 4) <Q: 723> [y(0)])
		inlineAt(toCopy x(1) cache)
		testLiteral(x(1) unit 92631)
lbl(92619)	move(g(0) x(1))
		inlineDot(x(1) newPredicateRef x(2) cache)
		tailCall(x(2) 1)
lbl(92631)	allocateL2
		move(g(0) x(2))
		inlineDot(x(2) newCopyablePredicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92604)
lbl(92664)	definition(x(9) 92690 pid('Control,declareToplevelProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 1000 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 723> 3)
		endDefinition(92664)
lbl(92690)	putRecord('#' [1 2 fast] x(26))
		setConstant(declareToplevelProcedure)
		setValue(x(9))
		setValue(x(8))
lbl(92700)	definition(x(8) 92760 pid('Control,endVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1008 6) nil 2) <Q: 724> nil)
		inlineAt(toCopy x(1) cache)
		unify(x(1) x(0))
		inlineAt(savedToCopy x(0) cache)
		match(x(0) ht(92745 [onScalar(nil 92722) onRecord('|' 2 92731)]))
lbl(92722)	putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		return
lbl(92731)	getVarVar(x(0) x(1))
		inlineAssign(toCopy x(0) cache)
		inlineAssign(savedToCopy x(1) cache)
		return
lbl(92745)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1015)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(92700)
lbl(92760)	definition(x(9) 92786 pid('Control,endVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1008 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 724> 3)
		endDefinition(92760)
lbl(92786)	putRecord('#' [1 2 fast] x(27))
		setConstant(endVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92796)	definition(x(8) 92810 pid('Control,setErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1018 6) nil 1) <Q: 725> nil)
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92796)
lbl(92810)	definition(x(9) 92836 pid('Control,setErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1018 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 725> 3)
		endDefinition(92810)
lbl(92836)	putRecord('#' [1 2 fast] x(28))
		setConstant(setErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92846)	definition(x(8) 92863 pid('Control,resetErrorMsg/fast' 0 pos('./compiler/StaticAnalysis.oz' 1021 6) nil 1) <Q: 726> nil)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92846)
lbl(92863)	definition(x(9) 92877 pid('Control,resetErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1021 6) nil 1) unit nil)
		getLiteral(resetErrorMsg x(0))
		genFastCall(<Q: 726> 1)
		endDefinition(92863)
lbl(92877)	putRecord('#' [1 2 fast] x(29))
		setConstant(resetErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92887)	definition(x(8) 92904 pid('Control,getErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1024 6) nil 2) <Q: 727> nil)
		inlineAt(errorMsg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92887)
lbl(92904)	definition(x(9) 92930 pid('Control,getErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1024 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 727> 3)
		endDefinition(92904)
lbl(92930)	putRecord('#' [1 2 fast] x(30))
		setConstant(getErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92940)	definition(x(8) 92959 pid('Control,setUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1028 6) nil 2) <Q: 728> nil)
		inlineAssign(unifierLeft x(0) cache)
		inlineAssign(unifierRight x(1) cache)
		return
		endDefinition(92940)
lbl(92959)	definition(x(9) 92994 pid('Control,setUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1028 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 728> 5)
		endDefinition(92959)
lbl(92994)	putRecord('#' [1 2 fast] x(31))
		setConstant(setUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(93004)	definition(x(8) 93029 pid('Control,resetUnifier/fast' 0 pos('./compiler/StaticAnalysis.oz' 1032 6) nil 1) <Q: 729> nil)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(93004)
lbl(93029)	definition(x(9) 93043 pid('Control,resetUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1032 6) nil 1) unit nil)
		getLiteral(resetUnifier x(0))
		genFastCall(<Q: 729> 1)
		endDefinition(93029)
lbl(93043)	putRecord('#' [1 2 fast] x(32))
		setConstant(resetUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(93053)	definition(x(8) 93078 pid('Control,getUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1036 6) nil 3) <Q: 730> nil)
		inlineAt(unifierLeft x(2) cache)
		unify(x(2) x(0))
		inlineAt(unifierRight x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(93053)
lbl(93078)	definition(x(9) 93113 pid('Control,getUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1036 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 730> 5)
		endDefinition(93078)
lbl(93113)	putRecord('#' [1 2 fast] x(33))
		setConstant(getUnifier)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 24 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		move(x(2) y(17))
		move(x(7) x(2))
		move(y(13) x(6))
		putConstant(nil x(0))
		putConstant('Control' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(true)
lbl(93199)	definition(x(7) 93238 pid('SAStatement,staticAnalysis/fast' 3 pos('./compiler/StaticAnalysis.oz' 1063 6) nil 4) <Q: 731> [y(13)])
		allocateL1
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 2 cache)
		getSelf(x(3))
		move(y(0) x(0))
		putConstant(true x(1))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(3) 2 cache)
		endDefinition(93199)
lbl(93238)	definition(x(8) 93279 pid('SAStatement,staticAnalysis/slow' 1 pos('./compiler/StaticAnalysis.oz' 1063 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 731> 7)
		endDefinition(93238)
lbl(93279)	putRecord('#' [1 2 fast] x(9))
		setConstant(staticAnalysis)
		setValue(x(8))
		setValue(x(7))
lbl(93289)	definition(x(7) 93420 pid('SAStatement,SaDo/fast' 2 pos('./compiler/StaticAnalysis.oz' 1068 6) nil 4) <Q: 732> nil)
		allocateL1
		move(x(0) y(0))
		testBool(x(1) 93324 93313)
		getSelf(x(1))
		sendMsg(<M: SaLookahead> x(1) 1 cache)
		branch(93324)
lbl(93313)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1069)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(93324)	inlineAt(coord x(0) cache)
		sendMsg(setCoord y(0) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		getSelf(x(2))
		move(y(0) x(0))
		sendMsg(saDescend x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		testBool(x(2) 93405 93407)
		inlineAt(next x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) isComplex x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93405)	deAllocateL1
		return
lbl(93407)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1080)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93289)
lbl(93420)	definition(x(8) 93455 pid('SAStatement,SaDo/slow' 1 pos('./compiler/StaticAnalysis.oz' 1068 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 732> 5)
		endDefinition(93420)
lbl(93455)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: SaDo>)
		setValue(x(8))
		setValue(x(7))
lbl(93465)	definition(x(7) 93537 pid('SAStatement,SaLookahead/fast' 1 pos('./compiler/StaticAnalysis.oz' 1086 6) nil 3) <Q: 733> nil)
		getSelf(x(1))
		inlineDot(x(1) isComplex x(1) cache)
		testBool(x(1) 93484 93524)
		return
lbl(93484)	allocateL1
		move(x(0) y(0))
		getSelf(x(2))
		sendMsg(saSimple x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 93522)
		inlineAt(next x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaLookahead> x(1) 1 cache)
lbl(93522)	deAllocateL1
		return
lbl(93524)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1087)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93465)
lbl(93537)	definition(x(8) 93563 pid('SAStatement,SaLookahead/slow' 1 pos('./compiler/StaticAnalysis.oz' 1086 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 733> 3)
		endDefinition(93537)
lbl(93563)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: SaLookahead>)
		setValue(x(8))
		setValue(x(7))
lbl(93573)	definition(x(7) 93608 pid('SAStatement,saBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 1102 6) nil 3) <Q: 734> nil)
		testList(x(1) 93593)
lbl(93582)	getVariable(x(2))
		putConstant(true x(1))
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93593)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1109)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93573)
lbl(93608)	definition(x(8) 93643 pid('SAStatement,saBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 1102 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 734> 5)
		endDefinition(93608)
lbl(93643)	putRecord('#' [1 2 fast] x(12))
		setConstant(saBody)
		setValue(x(8))
		setValue(x(7))
lbl(93653)	definition(x(7) 93662 pid('SAStatement,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1112 6) nil 1) <Q: 735> nil)
		return
		endDefinition(93653)
lbl(93662)	definition(x(8) 93688 pid('SAStatement,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 735> 3)
		endDefinition(93662)
lbl(93688)	putRecord('#' [1 2 fast] x(13))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(93698)	definition(x(7) 93707 pid('SAStatement,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1118 6) nil 1) <Q: 736> nil)
		return
		endDefinition(93698)
lbl(93707)	definition(x(8) 93733 pid('SAStatement,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 736> 3)
		endDefinition(93707)
lbl(93733)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(93743)	definition(x(7) 93752 pid('SAStatement,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1121 6) nil 1) <Q: 737> nil)
		return
		endDefinition(93743)
lbl(93752)	definition(x(8) 93778 pid('SAStatement,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1121 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 737> 3)
		endDefinition(93752)
lbl(93778)	putRecord('#' [1 2 fast] x(15))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAStatement' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93824)	definition(x(7) 93869 pid('SATypeOf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1127 6) nil 3) <Q: 738> nil)
		allocateL2
		inlineAt(arg x(2) cache)
		putConstant(3 x(0))
		createVariableMove(y(0) x(1))
		sendMsg(reflectType x(2) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 685> 4)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		deAllocateL2
		return
		endDefinition(93824)
lbl(93869)	definition(x(8) 93895 pid('SATypeOf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 738> 3)
		endDefinition(93869)
lbl(93895)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATypeOf' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93932)	definition(x(7) 93948 pid('SAStepPoint,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1135 6) nil 2) <Q: 739> [y(13)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(93932)
lbl(93948)	definition(x(8) 93974 pid('SAStepPoint,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1135 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 739> 3)
		endDefinition(93948)
lbl(93974)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAStepPoint' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94011)	definition(x(7) 94078 pid('SADeclaration,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1141 6) nil 2) <Q: 740> nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getTop x(1) 1 cache)
		testBool(y(0) 94063 94065)
		inlineAt(localVars x(0) cache)
lbl(94039)	definition(x(1) 94059 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1148 24) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(true x(0))
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(94039)
lbl(94059)	deAllocateL1
		genFastCall(<P: 34> 5)
lbl(94063)	deAllocateL1
		return
lbl(94065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1147)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(94011)
lbl(94078)	definition(x(8) 94104 pid('SADeclaration,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1141 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 740> 3)
		endDefinition(94078)
lbl(94104)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94114)	definition(x(7) 94130 pid('SADeclaration,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1151 6) nil 2) <Q: 741> [y(13)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(94114)
lbl(94130)	definition(x(8) 94156 pid('SADeclaration,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1151 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 741> 3)
		endDefinition(94130)
lbl(94156)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADeclaration' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94195)	definition(x(7) 94278 pid('SAEquation,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1158 6) nil 3) <Q: 742> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		putConstant('equality constraint failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(left x(0) cache)
		inlineAt(right x(1) cache)
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(94195)
lbl(94278)	definition(x(8) 94304 pid('SAEquation,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1158 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 742> 3)
		endDefinition(94278)
lbl(94304)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94314)	definition(x(7) 94352 pid('SAEquation,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 2) <Q: 743> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(94314)
lbl(94352)	definition(x(8) 94378 pid('SAEquation,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 743> 3)
		endDefinition(94352)
lbl(94378)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquation' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(<U: ooFreeFlag>)
lbl(94427)	definition(x(7) 94467 pid('SAConstructionOrPattern,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 1184 6) nil 4) <Q: 744> [y(12)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(record x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(94427)
lbl(94467)	definition(x(8) 94481 pid('SAConstructionOrPattern,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 1184 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 744> 1)
		endDefinition(94467)
lbl(94481)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(94491)	definition(x(7) 94508 pid('SAConstructionOrPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1187 6) nil 2) <Q: 745> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94491)
lbl(94508)	definition(x(8) 94534 pid('SAConstructionOrPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1187 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 745> 3)
		endDefinition(94508)
lbl(94534)	putRecord('#' [1 2 fast] x(10))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(94544)	definition(x(7) 94558 pid('SAConstructionOrPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1190 6) nil 1) <Q: 746> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(94544)
lbl(94558)	definition(x(8) 94584 pid('SAConstructionOrPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1190 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 746> 3)
		endDefinition(94558)
lbl(94584)	putRecord('#' [1 2 fast] x(11))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(94594)	definition(x(7) 94611 pid('SAConstructionOrPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1193 6) nil 2) <Q: 747> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94594)
lbl(94611)	definition(x(8) 94637 pid('SAConstructionOrPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1193 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 747> 3)
		endDefinition(94611)
lbl(94637)	putRecord('#' [1 2 fast] x(12))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94647)	definition(x(7) 94661 pid('SAConstructionOrPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1196 6) nil 1) <Q: 748> nil)
		inlineAssign(lastValue x(0) cache)
		return
		endDefinition(94647)
lbl(94661)	definition(x(8) 94687 pid('SAConstructionOrPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1196 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 748> 3)
		endDefinition(94661)
lbl(94687)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94697)	definition(x(7) 94714 pid('SAConstructionOrPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1199 6) nil 2) <Q: 749> nil)
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94697)
lbl(94714)	definition(x(8) 94740 pid('SAConstructionOrPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1199 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 749> 3)
		endDefinition(94714)
lbl(94740)	putRecord('#' [1 2 fast] x(14))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(94750)	definition(x(7) 94767 pid('SAConstructionOrPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 2) <Q: 750> nil)
		inlineAt(args x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94750)
lbl(94767)	definition(x(8) 94793 pid('SAConstructionOrPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 750> 3)
		endDefinition(94767)
lbl(94793)	putRecord('#' [1 2 fast] x(15))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(94803)	definition(x(7) 94820 pid('SAConstructionOrPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 1205 6) nil 2) <Q: 751> nil)
		inlineAt(isOpen x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94803)
lbl(94820)	definition(x(8) 94846 pid('SAConstructionOrPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 1205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 751> 3)
		endDefinition(94820)
lbl(94846)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(94856)	definition(x(7) 94873 pid('SAConstructionOrPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1208 6) nil 2) <Q: 752> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94856)
lbl(94873)	definition(x(8) 94899 pid('SAConstructionOrPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 752> 3)
		endDefinition(94873)
lbl(94899)	putRecord('#' [1 2 fast] x(17))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(94909)	definition(x(7) 95370 pid('SAConstructionOrPattern,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1211 6) nil 5) <Q: 753> [g(52) g(53) y(2) g(54)])
		putConstant(0 x(2))
		testLE(x(0) x(2) x(3) 94931)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
lbl(94931)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 95197)
		inlineAt(value x(0) cache)
		testBI('IsTuple' [x(0)]#[x(1)] 95049)
		inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 159> 4)
lbl(94976)	definition(x(1) 95002 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1224 5) nil 5) unit [y(0)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		tailSendMsg(getPrintType x(4) 2 cache)
		endDefinition(94976)
lbl(95002)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(95049)	inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 160> 4)
lbl(95060)	definition(x(1) 95150 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1229 5) nil 6) unit [g(2) y(0)])
		shallowGuard(95137)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(95076)	shallowThen
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(4))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(5) cache)
		move(x(3) y(1))
		move(x(2) x(0))
		move(x(4) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(5) 4)
		move(g(1) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
lbl(95137)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1229)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(95060)
lbl(95150)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(95197)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 95218)
		inlineAt(type x(0) cache)
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 696> 5)
lbl(95218)	inlineAt(value x(0) cache)
		createVariable(y(2))
		testBI(hasLabel [x(0)]#[x(1)] 95240)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
lbl(95240)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(3))
lbl(95253)	definition(x(1) 95329 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1244 9) nil 5) unit [x(3) g(2) y(0)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(0) y(1))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(4) 4)
		inlineAt(value x(0) cache)
		move(y(1) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(95253)
lbl(95329)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(3) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant('...)' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
		endDefinition(94909)
lbl(95370)	definition(x(8) 95405 pid('SAConstructionOrPattern,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1211 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 753> 5)
		endDefinition(95370)
lbl(95405)	putRecord('#' [1 2 fast] x(18))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(95415)	definition(x(7) 95690 pid('SAConstructionOrPattern,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1252 6) nil 5) <Q: 754> [y(12) g(55) g(56)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(95486)
		move(x(0) y(2))
		createCond(95480)
lbl(95434)	lastClause
		clause
		thread(95452)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(95452)	ask
lbl(95453)	getRecord(type 1 y(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL6
		tailCall(x(2) 2)
lbl(95480)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(95486)	putConstant(decode x(0))
		move(x(0) y(2))
		putConstant(type x(1))
		moveMoveXYYX(x(1) y(3) y(0) x(2))
		putConstant(0 x(3))
		testLE(x(2) x(3) x(4) 95509)
lbl(95508)	failure
lbl(95509)	inlineAt(isOpen x(3) cache)
		testBool(x(3) 95531 95520)
		branch(95508)
lbl(95520)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1254)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(95531)	inlineAt(label x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(reflectType x(2) 2 cache)
		createVariable(y(5))
		testRecord(y(4) value 1 95562)
lbl(95555)	getVariable(x(0))
		unify(y(5) x(0))
		branch(95563)
lbl(95562)	failure
lbl(95563)	inlineAt(args x(0) cache)
lbl(95568)	definition(x(1) 95662 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1259 6) nil 5) unit [y(0)])
		testRecord(x(1) '#' 2 95632)
lbl(95579)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(reflectType x(3) 2 cache)
		testRecord(y(2) value 1 95631)
lbl(95603)	getVariable(x(2))
		getRecord('#' 2 y(1))
		unifyValVar(x(2) x(1))
		move(g(0) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reflectType x(2) 2 cache)
lbl(95631)	failure
lbl(95632)	getRecord('#' 2 x(2))
		unifyValVar(x(0) x(2))
		move(g(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(1) x(4))
		move(x(3) x(0))
		move(x(2) x(1))
		tailSendMsg(reflectType x(4) 2 cache)
		endDefinition(95568)
lbl(95662)	createVariableMove(y(0) x(2))
		genFastCall(<P: 81> 6)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		putRecord(record 1 x(0))
		setValue(x(2))
		unify(y(1) x(0))
		popEx
		deAllocateL6
		return
		endDefinition(95415)
lbl(95690)	definition(x(8) 95725 pid('SAConstructionOrPattern,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1252 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 754> 5)
		endDefinition(95690)
lbl(95725)	putRecord('#' [1 2 fast] x(19))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(95735)	definition(x(7) 95749 pid('SAConstructionOrPattern,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1275 6) nil 1) <Q: 755> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(95735)
lbl(95749)	definition(x(8) 95775 pid('SAConstructionOrPattern,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1275 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 755> 3)
		endDefinition(95749)
lbl(95775)	putRecord('#' [1 2 fast] x(20))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(95785)	definition(x(7) 95817 pid('SAConstructionOrPattern,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 1278 6) nil 3) <Q: 756> nil)
		allocateL1
		move(x(1) y(0))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL1
		return
		endDefinition(95785)
lbl(95817)	definition(x(8) 95852 pid('SAConstructionOrPattern,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1278 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 756> 5)
		endDefinition(95817)
lbl(95852)	putRecord('#' [1 2 fast] x(21))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(95862)	definition(x(7) 96097 pid('SAConstructionOrPattern,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 1282 6) nil 5) <Q: 757> [g(20) g(54)])
		putConstant(0 x(3))
		testLE(x(0) x(3) x(4) 95877)
		return
lbl(95877)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		getSelf(x(3))
		getSelf(x(0))
		sendMsg(deref x(3) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 95949)
		inlineAt(value x(0) cache)
lbl(95910)	definition(x(1) 95942 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1292 27) nil 5) unit [y(0) y(1)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		tailSendMsg(getFullData x(4) 3 cache)
		endDefinition(95910)
lbl(95942)	move(y(2) x(2))
		deAllocateL5
		genFastCall(<P: 161> 7)
lbl(95949)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 95968)
		inlineAt(value x(0) cache)
		unify(x(0) y(2))
		deAllocateL5
		return
lbl(95968)	inlineAt(value x(0) cache)
		createVariable(y(3))
		testBI(hasLabel [x(0)]#[x(1)] 95990)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(3))
lbl(95990)	move(y(3) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		createVariable(y(4))
		testBool(x(1) 96021 96010)
		move(y(4) x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		branch(96021)
lbl(96010)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1301)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96021)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(96034)	definition(x(1) 96084 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1305 2) nil 6) unit [x(2) y(4) y(0) y(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		inlineUparrow(x(2) x(0) x(3))
		inlineAt(value x(4) cache)
		inlineUparrow(x(4) x(0) x(5))
		move(g(2) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		move(g(3) x(1))
		move(x(3) x(2))
		tailSendMsg(getFullData x(5) 3 cache)
		endDefinition(96034)
lbl(96084)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		unify(y(4) y(2))
		deAllocateL5
		return
		endDefinition(95862)
lbl(96097)	definition(x(8) 96138 pid('SAConstructionOrPattern,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1282 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 757> 7)
		endDefinition(96097)
lbl(96138)	putRecord('#' [1 2 fast] x(22))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(22))
lbl(96150)	definition(x(7) 96267 pid('SAConstructionOrPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 1312 6) nil 3) <Q: 758> [y(22)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 96168)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(96168)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 96252 96254)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 96218)
		deAllocateL2
		return
lbl(96218)	testLiteral(y(1) unit 96239)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(96239)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(96252)	deAllocateL2
		return
lbl(96254)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1317)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96150)
lbl(96267)	definition(x(8) 96293 pid('SAConstructionOrPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 1312 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 758> 3)
		endDefinition(96267)
lbl(96293)	putRecord('#' [1 2 fast] x(23))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(96303)	definition(x(7) 96409 pid('SAConstructionOrPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 1338 6) nil 5) <Q: 759> nil)
		allocateL4
		inlineAt(args x(2) cache)
lbl(96315)	definition(x(3) 96371 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1343 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96357)
lbl(96326)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(96357)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(96315)
lbl(96371)	inlineAt(label x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		sendMsg(reachable x(4) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(96303)
lbl(96409)	definition(x(8) 96444 pid('SAConstructionOrPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 1338 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 759> 5)
		endDefinition(96409)
lbl(96444)	putRecord('#' [1 2 fast] x(24))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(96454)	definition(x(7) 96484 pid('SAConstructionOrPattern,makeType/fast' 0 pos('./compiler/StaticAnalysis.oz' 1353 6) nil 2) <Q: 760> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(96454)
lbl(96484)	definition(x(8) 96498 pid('SAConstructionOrPattern,makeType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1353 6) nil 1) unit nil)
		getLiteral(makeType x(0))
		genFastCall(<Q: 760> 1)
		endDefinition(96484)
lbl(96498)	putRecord('#' [1 2 fast] x(25))
		setConstant(makeType)
		setValue(x(8))
		setValue(x(7))
lbl(96508)	definition(x(7) 97099 pid('SAConstructionOrPattern,MakeConstruction/fast' 1 pos('./compiler/StaticAnalysis.oz' 1357 6) nil 7) <Q: 761> [y(17) g(55) y(3) g(56)])
		allocateL7
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(96537)	definition(x(1) 96563 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1360 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 96557)
lbl(96548)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(96557)	unify(x(2) x(0))
		return
		endDefinition(96537)
lbl(96563)	putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		move(g(0) x(0))
		inlineDot(x(0) literal x(2) cache)
		inlineAt(label x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 97021 97086)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 96951 97010)
		inlineAt(label x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(args x(0) cache)
lbl(96640)	definition(x(1) 96676 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1376 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96665)
lbl(96651)	getVarVar(x(0) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(3))
		genFastCall(<Q: 658> 5)
lbl(96665)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(96640)
lbl(96676)	createVariableMove(y(4) x(2))
		genFastCall(<P: 81> 6)
lbl(96682)	definition(x(1) 96716 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1379 27) nil 4) unit nil)
		shallowGuard(96703)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96698)	shallowThen
		unify(x(1) x(2))
		return
lbl(96703)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96682)
lbl(96716)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 96887 96940)
		inlineAt(label x(3) cache)
		putList(x(0))
		setValue(x(3))
		setValue(y(2))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(0) 96867 96876)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 96841 96856)
		move(y(3) x(0))
		createVariable(x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		inlineAssign(value x(1) cache)
		getSelf(x(2))
lbl(96786)	definition(x(1) 96834 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1394 17) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(96821)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96807)	shallowThen
		inlineAt(value x(0) cache)
		inlineUparrow(x(0) x(2) x(4))
		unify(x(4) x(3))
		return
lbl(96821)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96786)
lbl(96834)	move(y(4) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(96841)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		inlineAssign(value x(2) cache)
		deAllocateL7
		return
lbl(96856)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1390)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96867)	createVariable(x(0))
		inlineAssign(value x(0) cache)
		deAllocateL7
		return
lbl(96876)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1387)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96887)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(2))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in record construction' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96940)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1384)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96951)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(97010)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1371)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97021)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(label x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record label ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(97086)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1364)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96508)
lbl(97099)	definition(x(8) 97125 pid('SAConstructionOrPattern,MakeConstruction/slow' 1 pos('./compiler/StaticAnalysis.oz' 1357 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 761> 3)
		endDefinition(97099)
lbl(97125)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: MakeConstruction>)
		setValue(x(8))
		setValue(x(7))
lbl(97135)	definition(x(7) 97203 pid('SAConstructionOrPattern,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 1430 6) nil 5) <Q: 762> [y(22)])
		allocateL4
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 97188 97190)
		move(y(1) x(0))
		deAllocateL4
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(97188)	deAllocateL4
		return
lbl(97190)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1434)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97135)
lbl(97203)	definition(x(8) 97238 pid('SAConstructionOrPattern,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 1430 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 762> 5)
		endDefinition(97203)
lbl(97238)	putRecord('#' [1 2 fast] x(27))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(97248)	definition(x(7) 98294 pid('SAConstructionOrPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 1446 6) nil 12) <Q: 763> nil)
		allocateL8
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 97299)
		deAllocateL8
		return
lbl(97299)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 97991 98281)
		createVariableMove(y(3) x(0))
		sendMsg(getLabel y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getArgs y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(isOpen y(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 97384 97564)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		sendMsg('unify' x(2) 2 cache)
		branch(97575)
lbl(97384)	createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(3) 1 cache)
		testBool(y(1) 97413 97553)
		inlineAt(label x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(3) 2 cache)
		branch(97575)
lbl(97413)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 97575)
lbl(97442)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(value x(3) cache)
		putRecord(oz 1 x(4))
		setValue(y(1))
		putRecord(oz 1 x(5))
		setValue(y(7))
		putRecord('#' 3 x(1))
		setValue(x(4))
		setConstant(' and ')
		setValue(x(5))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible labels')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(3))
		putRecord(hint [l m] x(7))
		setConstant('First value')
		setValue(x(8))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Second value')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(2))
		setValue(x(0))
		setValue(x(6))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
		branch(97575)
lbl(97553)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1468)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97564)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1464)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97575)	inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 97717)
lbl(97584)	move(y(5) x(0))
		testBI('Not' [x(0)]#[x(1)] 97717)
lbl(97591)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 97717)
lbl(97620)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(3) cache)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' and ')
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(6))
		setValue(x(3))
		putRecord(hint [l m] x(5))
		setConstant('First value')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Second value')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putList(x(2))
		setValue(x(0))
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
lbl(97717)	inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 97839)
lbl(97726)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 97839)
lbl(97733)	inlineAt(value x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
lbl(97743)	definition(x(1) 97832 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1507 2) nil 5) unit [x(3) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(value x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97803 97819)
		move(g(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97803)	move(g(2) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1511)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97743)
lbl(97832)	move(x(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97839)	inlineAt(value x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 653> 4)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(97861)	definition(x(1) 97984 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1524 2) nil 4) unit [x(2) y(1) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 97969 97971)
		inlineAt(value x(0) cache)
		move(y(0) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineUparrow(x(0) x(1) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97942 97958)
		move(g(3) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97942)	move(g(3) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97958)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1531)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97969)	deAllocateL3
		return
lbl(97971)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1525)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97861)
lbl(97984)	move(y(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97991)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 98174 98270)
lbl(98004)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 98030 98163)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(98030)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(3) 0 98062)
lbl(98045)	inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(98062)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(0) cache)
		move(x(0) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord('#' 3 x(1))
		setValue(y(3))
		setConstant(' and ')
		setConstant(0)
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('First value')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Second value')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98163)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1551)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98174)	createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 98192)
		branch(98004)
lbl(98192)	inlineAt(value x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('record = number')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [1 l] x(3))
		setValue(x(4))
		setConstant('First value')
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [1 l] x(6))
		setValue(x(7))
		setConstant('Second value')
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98270)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1546)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98281)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1456)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97248)
lbl(98294)	definition(x(8) 98329 pid('SAConstructionOrPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 1446 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 763> 5)
		endDefinition(98294)
lbl(98329)	putRecord('#' [1 2 fast] x(28))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(98339)	definition(x(7) 98410 pid('SAConstructionOrPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1574 6) nil 3) <Q: 764> [y(22)])
		allocateL1
		inlineAt(args x(2) cache)
lbl(98351)	definition(x(1) 98389 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1581 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 98375)
lbl(98362)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
lbl(98375)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(98351)
lbl(98389)	move(x(0) y(0))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: MakeConstruction> false 1) 0)
		deAllocateL1
		genCall(gci(g(0) true makeType true 0) 0)
		endDefinition(98339)
lbl(98410)	definition(x(8) 98436 pid('SAConstructionOrPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1574 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 764> 3)
		endDefinition(98410)
lbl(98436)	putRecord('#' [1 2 fast] x(29))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(98446)	definition(x(7) 98529 pid('SAConstructionOrPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1591 6) nil 2) <Q: 765> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(98472)	definition(x(1) 98523 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1594 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 98509)
lbl(98483)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(98509)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(98472)
lbl(98523)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(98446)
lbl(98529)	definition(x(8) 98555 pid('SAConstructionOrPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1591 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 765> 3)
		endDefinition(98529)
lbl(98555)	putRecord('#' [1 2 fast] x(30))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 22 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		move(y(22) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstructionOrPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(22))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstruction' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
lbl(98664)	definition(x(7) 98886 pid('SADefinition,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 1612 6) nil 3) <Q: 766> [y(9)])
		allocateL4
		inlineAt(formalArgs x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 687> 6)
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		createVariable(y(2))
		testBool(y(1) 98775 98856)
		move(g(0) x(0))
		inlineDot(x(0) clauseBodyToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyStatements x(1) cache)
		inlineAt(statements x(2) cache)
		unify(x(2) x(1))
		branch(98867)
lbl(98775)	move(g(0) x(0))
		inlineDot(x(0) procedureToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 98867 98845)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(1))
		move(y(1) x(1))
		inlineAssign(predicateRef x(1) cache)
		branch(98867)
lbl(98845)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1624)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98856)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1619)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98867)	inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(98664)
lbl(98886)	definition(x(8) 98912 pid('SADefinition,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 1612 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 766> 3)
		endDefinition(98886)
lbl(98912)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(98922)	definition(x(7) 99079 pid('SADefinition,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1637 6) nil 3) <Q: 767> [y(13)])
		allocateL5
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		inlineAt(procFlags x(1) cache)
		putConstant(instantiate x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 99029 99048)
		inlineAt(coord x(0) cache)
		sendMsg(beginVirtualToplevel y(0) 1 cache)
		putConstant(true x(0))
		putConstant(false x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		createVariableMove(y(4) x(0))
		sendMsg(endVirtualToplevel y(0) 1 cache)
		move(y(4) x(0))
		inlineAssign(toCopy x(0) cache)
		branch(99059)
lbl(99029)	sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		branch(99059)
lbl(99048)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99059)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(98922)
lbl(99079)	definition(x(8) 99105 pid('SADefinition,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1637 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 767> 3)
		endDefinition(99079)
lbl(99105)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(99115)	definition(x(7) 99134 pid('SADefinition,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1654 6) nil 2) <Q: 768> nil)
		inlineAt(designator x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(99115)
lbl(99134)	definition(x(8) 99160 pid('SADefinition,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1654 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 768> 3)
		endDefinition(99134)
lbl(99160)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SADefinition' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(25))
lbl(99200)	definition(x(7) 99380 pid('SABuiltinApplication,typeCheckN/fast' 5 pos('./compiler/StaticAnalysis.oz' 1661 6) nil 6) <Q: 769> [g(9) y(25)])
		match(x(2) ht(99365 [onScalar(nil 99209) onRecord('|' 2 99258)]))
lbl(99209)	allocateL1
		move(x(4) y(0))
		testLiteral(x(3) nil 99219)
		branch(99253)
lbl(99219)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99253)	getNumber(0 y(0))
		deAllocateL1
		return
lbl(99258)	allocateL6
		getVarVar(x(5) y(0))
		testList(x(3) 99328)
lbl(99265)	getVarVar(x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(4) y(4))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 675> 6)
		testBool(y(5) 99312 99317)
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		deAllocateL6
		genCall(gci(g(1) true typeCheckN true 5) 0)
lbl(99312)	unify(y(4) y(3))
		deAllocateL6
		return
lbl(99317)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1674)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99328)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		move(x(4) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99365)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1686)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99200)
lbl(99380)	definition(x(8) 99433 pid('SABuiltinApplication,typeCheckN/slow' 1 pos('./compiler/StaticAnalysis.oz' 1661 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 769> 11)
		endDefinition(99380)
lbl(99433)	putRecord('#' [1 2 fast] x(9))
		setConstant(typeCheckN)
		setValue(x(8))
		setValue(x(7))
lbl(99443)	definition(x(7) 99466 pid('SABuiltinApplication,typeCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1689 6) nil 5) <Q: 770> [y(25)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genCall(gci(g(0) true typeCheckN true 5) 0)
		endDefinition(99443)
lbl(99466)	definition(x(8) 99513 pid('SABuiltinApplication,typeCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1689 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 770> 9)
		endDefinition(99466)
lbl(99513)	putRecord('#' [1 2 fast] x(10))
		setConstant(typeCheck)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(26))
lbl(99525)	definition(x(7) 99702 pid('SABuiltinApplication,detCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1693 6) nil 6) <Q: 771> [g(9) y(1) y(26)])
		match(x(1) ht(99687 [onScalar(nil 99534) onRecord('|' 2 99583)]))
lbl(99534)	allocateL1
		move(x(3) y(0))
		testLiteral(x(2) nil 99544)
		branch(99578)
lbl(99544)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99578)	getLiteral(true y(0))
		deAllocateL1
		return
lbl(99583)	allocateL5
		getVarVar(x(4) y(0))
		testList(x(2) 99650)
lbl(99590)	getVarVar(x(1) y(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(1) x(1))
		callBI('.' [x(1) x(2)]#[x(5)])
		moveMoveXYXY(x(0) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(x(5) 2)
		testBool(y(4) 99634 99639)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL5
		genCall(gci(g(2) true detCheck true 4) 0)
lbl(99634)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(99639)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1707)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99650)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		move(x(3) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99687)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1716)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99525)
lbl(99702)	definition(x(8) 99749 pid('SABuiltinApplication,detCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1693 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 771> 9)
		endDefinition(99702)
lbl(99749)	putRecord('#' [1 2 fast] x(11))
		setConstant(detCheck)
		setValue(x(8))
		setValue(x(7))
lbl(99759)	definition(x(7) 100252 pid('SABuiltinApplication,AssertTypes/fast' 5 pos('./compiler/StaticAnalysis.oz' 1719 6) nil 19) <Q: 772> [y(12) y(25)])
		testLiteral(x(2) nil 99770)
lbl(99769)	return
lbl(99770)	testList(x(2) 100237)
lbl(99773)	allocateL(11)
		getVarVar(x(2) x(5))
		putRecord('#' 2 x(6))
		setValue(x(3))
		setValue(x(4))
		testRecord(x(6) '#' 2 100235)
lbl(99791)	getVarVar(x(3) x(4))
		createVariable(y(0))
		shallowGuard(100233)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(99810)	shallowThen
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(5) y(4))
		moveMoveXYXY(x(3) y(5) x(6) y(6))
		move(x(8) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getType y(3) 1 cache)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(5) x(1))
		callBI('Label' [x(1)]#[x(4)])
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(10) 99900 100222)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		moveMoveYXYX(y(6) x(3) y(7) x(4))
		deAllocateL
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
lbl(99900)	putRecord(pn 1 y(4))
		setVariable(x(0))
		inlineAt(designator x(1) cache)
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(99922)	definition(x(1) 99948 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1740 27) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(99922)
lbl(99948)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99959)	definition(x(1) 99976 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1741 27) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(99959)
lbl(99976)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99987)	definition(x(1) 100020 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1742 27) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(2) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 696> 5)
		endDefinition(99987)
lbl(100020)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(9))
		createVariableMove(y(10) x(0))
		sendMsg(getType y(3) 1 cache)
		move(y(10) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 696> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(8))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('At argument')
		setValue(y(2))
		putRecord(oz 1 x(10))
		setValue(y(5))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setValue(x(10))
		putRecord(hint [l m] x(12))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(14))
		setConstant('Application (names)')
		setValue(y(6))
		putRecord(hint [l m] x(16))
		setConstant('Application (values)')
		setValue(y(7))
		putRecord(hint [l m] x(18))
		setConstant('Application (types)')
		setValue(y(8))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(9) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100222)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1732)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(100233)	deAllocateL
		return
lbl(100235)	deAllocateL
		return
lbl(100237)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1762)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99759)
lbl(100252)	definition(x(8) 100305 pid('SABuiltinApplication,AssertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1719 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 772> 11)
		endDefinition(100252)
lbl(100305)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AssertTypes>)
		setValue(x(8))
		setValue(x(7))
lbl(100315)	definition(x(7) 100375 pid('SABuiltinApplication,assertTypes/fast' 2 pos('./compiler/StaticAnalysis.oz' 1765 6) nil 5) <Q: 773> [y(10) y(25)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) getInfo x(3) cache)
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		inlineDot(x(0) types x(3) cache)
		inlineDot(x(0) det x(4) cache)
		inlineAt(actualArgs x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
		endDefinition(100315)
lbl(100375)	definition(x(8) 100410 pid('SABuiltinApplication,assertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1765 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 773> 5)
		endDefinition(100375)
lbl(100410)	putRecord('#' [1 2 fast] x(13))
		setConstant(assertTypes)
		setValue(x(8))
		setValue(x(7))
lbl(100420)	definition(x(7) 101011 pid('SABuiltinApplication,checkMessage/fast' 5 pos('./compiler/StaticAnalysis.oz' 1779 6) nil 12) <Q: 774> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 660> 4)
		createVariable(y(1))
		createVariable(y(7))
		testLiteral(y(3) object 100473)
lbl(100465)	getLiteral('Object' y(1))
		getLiteral('object application' y(7))
		branch(100503)
lbl(100473)	testLiteral(y(3) new 100485)
lbl(100477)	getLiteral('Object' y(1))
		getLiteral('object creation' y(7))
		branch(100503)
lbl(100485)	testLiteral(y(3) 'class' 100497)
lbl(100489)	getLiteral('Class' y(1))
		getLiteral('class application' y(7))
		branch(100503)
lbl(100497)	getLiteral('???' y(1))
		getLiteral('???' y(7))
lbl(100503)	testLiteral(y(2) unit 100509)
		deAllocateL9
		return
lbl(100509)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 101007)
lbl(100516)	testBI('IsRecord' [x(0)]#[x(1)] 101005)
lbl(100520)	callBI('Label' [x(0)]#[x(1)])
		move(y(2) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 100881)
		putRecord('#' 2 x(1))
		setVariable(y(3))
		setVariable(y(8))
		callBI('Label' [x(0)]#[x(3)])
		callBI('.' [x(2) x(3)]#[x(4)])
		unify(x(4) x(1))
		getSelf(x(2))
lbl(100549)	definition(x(1) 100664 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1816 2) nil 15) unit [x(2) y(5) y(0) y(7) y(1) y(4) y(6)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 100568)
		return
lbl(100568)	move(g(2) x(3))
		inlineDot(x(3) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord('#' 2 x(6))
		setConstant('missing message feature in ')
		setValue(g(3))
		putRecord(pn 1 x(9))
		setValue(g(5))
		putRecord(hint [l m] x(8))
		setValue(g(4))
		setValue(x(9))
		putRecord(hint [l m] x(11))
		setConstant('Required feature')
		setValue(x(0))
		putRecord(oz 1 x(14))
		setValue(g(6))
		putRecord(hint [l m] x(13))
		setConstant('Message found')
		setValue(x(14))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(7))
		setValue(x(8))
		setValue(x(10))
		move(x(5) x(0))
		move(x(7) x(1))
		move(x(6) x(3))
		putConstant('static analysis error' x(2))
		tailSendMsg(error x(4) [coord items kind msg] cache)
		endDefinition(100549)
lbl(100664)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(8) unit 100676)
		deAllocateL9
		return
lbl(100676)	move(y(5) x(0))
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(100684)	definition(x(1) 100874 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1834 5) nil 14) unit [x(3) y(3) y(8) y(0) y(7) y(1) y(4) y(6)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100714 100861)
		deAllocateL4
		return
lbl(100714)	move(y(0) x(0))
		move(g(2) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100732 100861)
		deAllocateL4
		return
lbl(100732)	move(g(3) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		move(g(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message feature in ')
		setValue(g(4))
		putRecord(pn 1 x(6))
		setValue(g(6))
		putRecord(hint [l m] x(5))
		setValue(g(5))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Required features')
		setValue(y(2))
		putRecord(hint [l m] x(10))
		setConstant('Optional features')
		setValue(y(3))
		putRecord(oz 1 x(13))
		setValue(g(7))
		putRecord(hint [l m] x(12))
		setConstant('Message found')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL4
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100861)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1835)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100684)
lbl(100874)	move(x(2) x(0))
		deAllocateL9
		genFastCall(<P: 34> 5)
lbl(100881)	putConstant(otherwise x(0))
		testBI('HasFeature' [x(2) x(0)]#[x(1)] 100890)
		deAllocateL9
		return
lbl(100890)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 694> 4)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message label in ')
		setValue(y(7))
		putRecord(pn 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setValue(y(1))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Message found')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL9
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(101005)	deAllocateL9
		return
lbl(101007)	deAllocateL9
		return
		endDefinition(100420)
lbl(101011)	definition(x(8) 101064 pid('SABuiltinApplication,checkMessage/slow' 1 pos('./compiler/StaticAnalysis.oz' 1779 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 774> 11)
		endDefinition(101011)
lbl(101064)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkMessage)
		setValue(x(8))
		setValue(x(7))
lbl(101074)	definition(x(7) 101717 pid('SABuiltinApplication,checkArguments/fast' 3 pos('./compiler/StaticAnalysis.oz' 1873 6) nil 15) <Q: 775> [y(2) y(10) g(57) y(25)])
		allocateL9
		move(g(0) x(3))
		inlineDot(x(3) printName x(4) cache)
		inlineAt(designator x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(y(6) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		move(y(4) x(0))
		testBI('==' [x(0) x(1)]#[x(2)] 101493)
		inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) types x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true typeCheck false 4) 0)
		testNumber(y(4) 0 101238)
lbl(101203)	move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 101215)
		getLiteral(true y(2))
		deAllocateL9
		return
lbl(101215)	inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) det x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		deAllocateL9
		genCall(gci(g(3) true detCheck true 4) 0)
lbl(101238)	inlineAt(actualArgs x(0) cache)
lbl(101243)	definition(x(1) 101269 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1899 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101243)
lbl(101269)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101280)	definition(x(1) 101297 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1900 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101280)
lbl(101297)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		inlineDot(x(0) types x(0) cache)
lbl(101312)	definition(x(1) 101327 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1901 32) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(101312)
lbl(101327)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(7))
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 692> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(5))
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(10))
		setConstant('Expected types')
		setValue(y(8))
		putRecord(hint [l m] x(12))
		setConstant('Argument names')
		setValue(y(1))
		putRecord(hint [l m] x(14))
		setConstant('Argument values')
		setValue(y(3))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(7) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
lbl(101493)	inlineAt(actualArgs x(3) cache)
lbl(101498)	definition(x(4) 101524 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1914 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101498)
lbl(101524)	move(x(1) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101544)	definition(x(1) 101561 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1915 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101544)
lbl(101561)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		putRecord(pn 1 x(3))
		setValue(y(5))
		putList(x(2))
		setValue(x(3))
		setValue(y(3))
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(9))
		setConstant('Found')
		setValue(y(4))
		putRecord(hint [l m] x(11))
		setConstant('Argument names')
		setValue(y(7))
		putRecord(hint [l m] x(13))
		setConstant('Argument values')
		setValue(y(6))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal arity in application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
		endDefinition(101074)
lbl(101717)	definition(x(8) 101758 pid('SABuiltinApplication,checkArguments/slow' 1 pos('./compiler/StaticAnalysis.oz' 1873 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 775> 7)
		endDefinition(101717)
lbl(101758)	putRecord('#' [1 2 fast] x(15))
		setConstant(checkArguments)
		setValue(x(8))
		setValue(x(7))
lbl(101768)	definition(x(7) 102087 pid('SABuiltinApplication,doBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 1931 6) nil 9) <Q: 776> [y(9)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		exHandler(102039)
		move(x(0) y(1))
		createCond(102033)
lbl(101848)	lastClause
		clause
		createVariable(y(4))
		thread(101894)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(1) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		putConstant(system x(0))
		putConstant(1 x(3))
		callBI(tellRecordSize [x(0) x(3) x(1)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(1) x(0) x(3))
		unify(x(3) y(4))
		deAllocateL5
		return
lbl(101894)	ask
lbl(101895)	match(y(4) ht(102020 [onScalar(builtinUndefined 101898) onScalar(builtinArity 101959)]))
lbl(101898)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin undefined' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(101959)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin has wrong arity' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(102020)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1968)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(102033)	move(y(1) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(102039)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(builtin [x(0) x(1)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) builtinToken x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		move(x(5) y(4))
		move(x(2) x(0))
		sendMsg(init y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		popEx
		deAllocateL5
		return
		endDefinition(101768)
lbl(102087)	definition(x(8) 102113 pid('SABuiltinApplication,doBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 1931 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 776> 3)
		endDefinition(102087)
lbl(102113)	putRecord('#' [1 2 fast] x(16))
		setConstant(doBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(102123)	definition(x(7) 102330 pid('SABuiltinApplication,doNewName/fast' 1 pos('./compiler/StaticAnalysis.oz' 1972 6) nil 4) <Q: 777> [y(0) y(9)])
		allocateL6
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getTop y(0) 1 cache)
		createVariable(y(5))
		testBool(y(4) 102196 102228)
lbl(102183)	createVariableMove(y(4) x(0))
		sendMsg(getOrigin y(2) 1 cache)
		testLiteral(y(4) generated 102215)
lbl(102196)	move(g(0) x(0))
		inlineDot(x(0) newNamedName x(2) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		call(x(2) 2)
		branch(102239)
lbl(102215)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		sendMsg(declareToplevelName y(0) 2 cache)
		branch(102239)
lbl(102228)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1978)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(102239)	move(g(1) x(0))
		inlineDot(x(0) nameToken x(1) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(5) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 102315 102317)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(5))
lbl(102315)	deAllocateL6
		return
lbl(102317)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1985)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(102123)
lbl(102330)	definition(x(8) 102356 pid('SABuiltinApplication,doNewName/slow' 1 pos('./compiler/StaticAnalysis.oz' 1972 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 777> 3)
		endDefinition(102330)
lbl(102356)	putRecord('#' [1 2 fast] x(17))
		setConstant(doNewName)
		setValue(x(8))
		setValue(x(7))
lbl(102366)	definition(x(7) 102477 pid('SABuiltinApplication,doNewUniqueName/fast' 1 pos('./compiler/StaticAnalysis.oz' 1989 6) nil 4) <Q: 778> [y(9)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		callBI('NewUniqueName' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
		endDefinition(102366)
lbl(102477)	definition(x(8) 102503 pid('SABuiltinApplication,doNewUniqueName/slow' 1 pos('./compiler/StaticAnalysis.oz' 1989 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 778> 3)
		endDefinition(102477)
lbl(102503)	putRecord('#' [1 2 fast] x(18))
		setConstant(doNewUniqueName)
		setValue(x(8))
		setValue(x(7))
lbl(102513)	definition(x(7) 102580 pid('SABuiltinApplication,doNewLock/fast' 1 pos('./compiler/StaticAnalysis.oz' 2002 6) nil 5) <Q: 779> [y(9)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI('NewLock' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102513)
lbl(102580)	definition(x(8) 102606 pid('SABuiltinApplication,doNewLock/slow' 1 pos('./compiler/StaticAnalysis.oz' 2002 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 779> 3)
		endDefinition(102580)
lbl(102606)	putRecord('#' [1 2 fast] x(19))
		setConstant(doNewLock)
		setValue(x(8))
		setValue(x(7))
lbl(102616)	definition(x(7) 102685 pid('SABuiltinApplication,doNewPort/fast' 1 pos('./compiler/StaticAnalysis.oz' 2009 6) nil 5) <Q: 780> [y(9)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) portToken x(2) cache)
		createVariable(x(3))
		callBI('NewPort' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102616)
lbl(102685)	definition(x(8) 102711 pid('SABuiltinApplication,doNewPort/slow' 1 pos('./compiler/StaticAnalysis.oz' 2009 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 780> 3)
		endDefinition(102685)
lbl(102711)	putRecord('#' [1 2 fast] x(20))
		setConstant(doNewPort)
		setValue(x(8))
		setValue(x(7))
lbl(102721)	definition(x(7) 102790 pid('SABuiltinApplication,doNewCell/fast' 1 pos('./compiler/StaticAnalysis.oz' 2016 6) nil 5) <Q: 781> [y(9)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		createVariable(x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102721)
lbl(102790)	definition(x(8) 102816 pid('SABuiltinApplication,doNewCell/slow' 1 pos('./compiler/StaticAnalysis.oz' 2016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 781> 3)
		endDefinition(102790)
lbl(102816)	putRecord('#' [1 2 fast] x(21))
		setConstant(doNewCell)
		setValue(x(8))
		setValue(x(7))
lbl(102826)	definition(x(7) 102950 pid('SABuiltinApplication,doNewArray/fast' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 6) <Q: 782> [y(9) g(58)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) arrayToken x(1) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		createVariable(x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(5) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(4 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102826)
lbl(102950)	definition(x(8) 102976 pid('SABuiltinApplication,doNewArray/slow' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 782> 3)
		endDefinition(102950)
lbl(102976)	putRecord('#' [1 2 fast] x(22))
		setConstant(doNewArray)
		setValue(x(8))
		setValue(x(7))
lbl(102986)	definition(x(7) 103053 pid('SABuiltinApplication,doNewDictionary/fast' 1 pos('./compiler/StaticAnalysis.oz' 2032 6) nil 5) <Q: 783> [y(9) g(59)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI('NewDictionary' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102986)
lbl(103053)	definition(x(8) 103079 pid('SABuiltinApplication,doNewDictionary/slow' 1 pos('./compiler/StaticAnalysis.oz' 2032 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 783> 3)
		endDefinition(103053)
lbl(103079)	putRecord('#' [1 2 fast] x(23))
		setConstant(doNewDictionary)
		setValue(x(8))
		setValue(x(7))
lbl(103089)	definition(x(7) 103186 pid('SABuiltinApplication,doNewChunk/fast' 1 pos('./compiler/StaticAnalysis.oz' 2039 6) nil 4) <Q: 784> [y(9)])
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) chunkToken x(1) cache)
		move(y(2) x(2))
		callBI('NewChunk' [x(2)]#[x(3)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103089)
lbl(103186)	definition(x(8) 103212 pid('SABuiltinApplication,doNewChunk/slow' 1 pos('./compiler/StaticAnalysis.oz' 2039 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 784> 3)
		endDefinition(103186)
lbl(103212)	putRecord('#' [1 2 fast] x(24))
		setConstant(doNewChunk)
		setValue(x(8))
		setValue(x(7))
lbl(103222)	definition(x(7) 103298 pid('SABuiltinApplication,doNewSpace/fast' 1 pos('./compiler/StaticAnalysis.oz' 2047 6) nil 5) <Q: 785> [y(9) g(60)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
lbl(103238)	definition(x(3) 103247 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2048 46) nil 1) unit nil)
		return
		endDefinition(103238)
lbl(103247)	callBI('Space.new' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103222)
lbl(103298)	definition(x(8) 103324 pid('SABuiltinApplication,doNewSpace/slow' 1 pos('./compiler/StaticAnalysis.oz' 2047 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 785> 3)
		endDefinition(103298)
lbl(103324)	putRecord('#' [1 2 fast] x(25))
		setConstant(doNewSpace)
		setValue(x(8))
		setValue(x(7))
lbl(103334)	definition(x(7) 103498 pid('SABuiltinApplication,doNew/fast' 1 pos('./compiler/StaticAnalysis.oz' 2058 6) nil 5) <Q: 786> [y(9) y(25)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 688> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(g(0) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(5) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		testLiteral(y(3) unit 103470)
		deAllocateL6
		return
lbl(103470)	createVariableMove(y(2) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(5) x(4))
		putConstant(new x(3))
		deAllocateL6
		genCall(gci(g(1) true checkMessage true 5) 0)
		endDefinition(103334)
lbl(103498)	definition(x(8) 103524 pid('SABuiltinApplication,doNew/slow' 1 pos('./compiler/StaticAnalysis.oz' 2058 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 786> 3)
		endDefinition(103498)
lbl(103524)	putRecord('#' [1 2 fast] x(26))
		setConstant(doNew)
		setValue(x(8))
		setValue(x(7))
lbl(103534)	definition(x(7) 103624 pid('SABuiltinApplication,doEq/fast' 1 pos('./compiler/StaticAnalysis.oz' 2079 6) nil 4) <Q: 787> nil)
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		putConstant('equation failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(103534)
lbl(103624)	definition(x(8) 103650 pid('SABuiltinApplication,doEq/slow' 1 pos('./compiler/StaticAnalysis.oz' 2079 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 787> 3)
		endDefinition(103624)
lbl(103650)	putRecord('#' [1 2 fast] x(27))
		setConstant(doEq)
		setValue(x(8))
		setValue(x(7))
lbl(103660)	definition(x(7) 104438 pid('SABuiltinApplication,doDot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2092 6) nil 9) <Q: 788> [y(16)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 103893)
lbl(103726)	move(g(0) x(1))
		inlineDot(x(1) object x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 103893 104425)
lbl(103745)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 656> 4)
		testLiteral(y(2) unit 103760)
lbl(103758)	deAllocateL5
		return
lbl(103760)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103775)
		deAllocateL5
		return
lbl(103775)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103792 103882)
		deAllocateL5
		return
lbl(103792)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from object' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(103882)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2117)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103893)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104067)
lbl(103900)	move(g(0) x(1))
		inlineDot(x(1) 'class' x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 104067 104414)
lbl(103919)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		testLiteral(y(2) unit 103934)
lbl(103932)	deAllocateL5
		return
lbl(103934)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103949)
		deAllocateL5
		return
lbl(103949)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103966 104056)
		deAllocateL5
		return
lbl(103966)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from class' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104056)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2140)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104067)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104271)
lbl(104074)	move(g(0) x(1))
		inlineDot(x(1) record x(2) cache)
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104271 104403)
lbl(104093)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 104184)
		inlineAt(actualArgs x(3) cache)
		move(x(3) x(0))
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104184)	move(y(0) x(2))
		inlineDot(x(2) rep x(2) cache)
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 694> 4)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104271)	move(g(0) x(0))
		inlineDot(x(0) recordC x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104401 104390)
lbl(104293)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104388 104390)
lbl(104308)	inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104388)	deAllocateL5
		return
lbl(104390)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2176)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104401)	deAllocateL5
		return
lbl(104403)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2153)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104414)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104425)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2104)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(103660)
lbl(104438)	definition(x(8) 104464 pid('SABuiltinApplication,doDot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2092 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 788> 3)
		endDefinition(104438)
lbl(104464)	putRecord('#' [1 2 fast] x(28))
		setConstant(doDot)
		setValue(x(8))
		setValue(x(7))
lbl(104474)	definition(x(7) 104738 pid('SABuiltinApplication,doHat/fast' 1 pos('./compiler/StaticAnalysis.oz' 2193 6) nil 9) <Q: 789> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104629 104725)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (^) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104629)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104723)
		move(y(0) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 694> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(3))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104723)	deAllocateL5
		return
lbl(104725)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2203)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104474)
lbl(104738)	definition(x(8) 104764 pid('SABuiltinApplication,doHat/slow' 1 pos('./compiler/StaticAnalysis.oz' 2193 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 789> 3)
		endDefinition(104738)
lbl(104764)	putRecord('#' [1 2 fast] x(29))
		setConstant(doHat)
		setValue(x(8))
		setValue(x(7))
lbl(104774)	definition(x(7) 104881 pid('SABuiltinApplication,doComma/fast' 1 pos('./compiler/StaticAnalysis.oz' 2229 6) nil 5) <Q: 790> [y(25)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		testLiteral(y(2) unit 104853)
		deAllocateL5
		return
lbl(104853)	createVariableMove(y(3) x(0))
		sendMsg(getMethods y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		putConstant('class' x(3))
		deAllocateL5
		genCall(gci(g(0) true checkMessage true 5) 0)
		endDefinition(104774)
lbl(104881)	definition(x(8) 104907 pid('SABuiltinApplication,doComma/slow' 1 pos('./compiler/StaticAnalysis.oz' 2229 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 790> 3)
		endDefinition(104881)
lbl(104907)	putRecord('#' [1 2 fast] x(30))
		setConstant(doComma)
		setValue(x(8))
		setValue(x(7))
lbl(104917)	definition(x(7) 105470 pid('SABuiltinApplication,doAssignAccess/fast' 1 pos('./compiler/StaticAnalysis.oz' 2242 6) nil 13) <Q: 791> [y(3) y(2)])
		allocateL10
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getSelf' y(0) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		createVariableMove(y(4) x(0))
		sendMsg(getAttributes y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getProperties y(1) 1 cache)
		testLiteral(y(4) unit 104983)
		deAllocateL10
		return
lbl(104983)	move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 664> 4)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 105001)
		deAllocateL10
		return
lbl(105001)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 105018 105457)
		deAllocateL10
		return
lbl(105018)	inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		createVariable(y(2))
		testLiteral(y(8) '<-' 105106)
lbl(105082)	getRecord('#' 3 y(2))
		unifyVariable(x(0))
		unifyLiteral(' <- ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105149)
lbl(105106)	testLiteral(y(8) '@' 105136)
lbl(105110)	getRecord('#' 4 y(2))
		unifyLiteral('@')
		unifyVariable(x(0))
		unifyLiteral(' = ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105149)
lbl(105136)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2260)
		setValue(y(8))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105149)	createVariable(y(3))
		testLiteral(y(5) unit 105160)
lbl(105155)	getLiteral(false y(3))
		branch(105171)
lbl(105160)	moveMoveYXYX(y(5) x(1) y(3) x(2))
		putConstant(final x(0))
		genFastCall(<P: 22> 6)
lbl(105171)	createVariable(y(5))
		testBool(y(3) 105182 105187)
		getLiteral('(correct use requires method application)' y(5))
		branch(105198)
lbl(105182)	getLiteral('(may be a correct forward declaration)' y(5))
		branch(105198)
lbl(105187)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2262)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105198)	createVariable(y(6))
		testBool(y(3) 105209 105214)
		getLiteral('In final class' y(6))
		branch(105225)
lbl(105209)	getLiteral('In class' y(6))
		branch(105225)
lbl(105214)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2266)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105225)	testBool(y(3) 105417 105446)
lbl(105229)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(1) x(2))
		inlineDot(x(2) printName x(3) cache)
		inlineAt(designator x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(3) y(7))
		move(x(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 658> 4)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		call(y(7) 2)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(8) x(0))
		createVariableMove(y(1) x(1))
		call(y(7) 2)
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 695> 4)
		move(y(7) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 3 x(3))
		setConstant('applying ')
		setValue(y(9))
		setConstant(' to unavailable attribute')
		putRecord(hint [l m] x(5))
		setConstant('Expression')
		setValue(y(2))
		putRecord(pn 1 x(8))
		setValue(y(1))
		putRecord(hint [l m] x(7))
		setValue(y(6))
		setValue(x(8))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(y(4))
		putRecord(line 1 x(12))
		setValue(y(5))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(105417)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnforward x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 105444 105446)
		branch(105229)
lbl(105444)	deAllocateL10
		return
lbl(105446)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2272)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105457)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2250)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104917)
lbl(105470)	definition(x(8) 105496 pid('SABuiltinApplication,doAssignAccess/slow' 1 pos('./compiler/StaticAnalysis.oz' 2242 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 791> 3)
		endDefinition(105470)
lbl(105496)	putRecord('#' [1 2 fast] x(31))
		setConstant(doAssignAccess)
		setValue(x(8))
		setValue(x(7))
lbl(105506)	definition(x(7) 105658 pid('SABuiltinApplication,doAnd/fast' 1 pos('./compiler/StaticAnalysis.oz' 2290 6) nil 4) <Q: 792> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105654)
lbl(105586)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 105652)
lbl(105593)	callBI('And' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105652)	deAllocateL5
		return
lbl(105654)	deAllocateL5
		return
		endDefinition(105506)
lbl(105658)	definition(x(8) 105684 pid('SABuiltinApplication,doAnd/slow' 1 pos('./compiler/StaticAnalysis.oz' 2290 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 792> 3)
		endDefinition(105658)
lbl(105684)	putRecord('#' [1 2 fast] x(32))
		setConstant(doAnd)
		setValue(x(8))
		setValue(x(7))
lbl(105694)	definition(x(7) 105846 pid('SABuiltinApplication,doOr/fast' 1 pos('./compiler/StaticAnalysis.oz' 2314 6) nil 4) <Q: 793> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105842)
lbl(105774)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 105840)
lbl(105781)	callBI('Or' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105840)	deAllocateL5
		return
lbl(105842)	deAllocateL5
		return
		endDefinition(105694)
lbl(105846)	definition(x(8) 105872 pid('SABuiltinApplication,doOr/slow' 1 pos('./compiler/StaticAnalysis.oz' 2314 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 793> 3)
		endDefinition(105846)
lbl(105872)	putRecord('#' [1 2 fast] x(33))
		setConstant(doOr)
		setValue(x(8))
		setValue(x(7))
lbl(105882)	definition(x(7) 106002 pid('SABuiltinApplication,doNot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2338 6) nil 4) <Q: 794> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105998)
		callBI('Not' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean not failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105998)	deAllocateL4
		return
		endDefinition(105882)
lbl(106002)	definition(x(8) 106028 pid('SABuiltinApplication,doNot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2338 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 794> 3)
		endDefinition(106002)
lbl(106028)	putRecord('#' [1 2 fast] x(34))
		setConstant(doNot)
		setValue(x(8))
		setValue(x(7))
lbl(106038)	definition(x(7) 106158 pid('SABuiltinApplication,doLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2358 6) nil 4) <Q: 795> [y(5)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 106154)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(3) 1 cache)
		putConstant('label assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106154)	deAllocateL4
		return
		endDefinition(106038)
lbl(106158)	definition(x(8) 106184 pid('SABuiltinApplication,doLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2358 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 795> 3)
		endDefinition(106158)
lbl(106184)	putRecord('#' [1 2 fast] x(35))
		setConstant(doLabel)
		setValue(x(8))
		setValue(x(7))
lbl(106194)	definition(x(7) 106337 pid('SABuiltinApplication,doWidth/fast' 1 pos('./compiler/StaticAnalysis.oz' 2378 6) nil 5) <Q: 796> [y(9)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106333)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Width' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('width assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106333)	deAllocateL4
		return
		endDefinition(106194)
lbl(106337)	definition(x(8) 106363 pid('SABuiltinApplication,doWidth/slow' 1 pos('./compiler/StaticAnalysis.oz' 2378 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 796> 3)
		endDefinition(106337)
lbl(106363)	putRecord('#' [1 2 fast] x(36))
		setConstant(doWidth)
		setValue(x(8))
		setValue(x(7))
lbl(106373)	definition(x(7) 106516 pid('SABuiltinApplication,doProcedureArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2398 6) nil 5) <Q: 797> [y(9) g(57)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106512)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('ProcedureArity' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('assertion of procedure arity failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106512)	deAllocateL4
		return
		endDefinition(106373)
lbl(106516)	definition(x(8) 106542 pid('SABuiltinApplication,doProcedureArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2398 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 797> 3)
		endDefinition(106516)
lbl(106542)	putRecord('#' [1 2 fast] x(37))
		setConstant(doProcedureArity)
		setValue(x(8))
		setValue(x(7))
lbl(106552)	definition(x(7) 106603 pid('SABuiltinApplication,doCheckType/fast' 3 pos('./compiler/StaticAnalysis.oz' 2418 6) nil 3) <Q: 798> [y(25)])
		match(x(0) ht(106588 [onScalar(det 106561) onScalar(rec 106570) onScalar(kind 106579)]))
lbl(106561)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoDetType> true 2) 0)
lbl(106570)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoRecDetType> true 2) 0)
lbl(106579)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoKindedType> true 2) 0)
lbl(106588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2426)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(106552)
lbl(106603)	definition(x(8) 106644 pid('SABuiltinApplication,doCheckType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2418 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 798> 7)
		endDefinition(106603)
lbl(106644)	putRecord('#' [1 2 fast] x(38))
		setConstant(doCheckType)
		setValue(x(8))
		setValue(x(7))
lbl(106654)	definition(x(7) 106883 pid('SABuiltinApplication,DoDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 4) <Q: 799> [y(3) y(11)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(4) 106868 106870)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 106791 106841)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106852)
lbl(106791)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106852)
lbl(106841)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2439)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106852)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106868)	deAllocateL5
		return
lbl(106870)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2436)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(106654)
lbl(106883)	definition(x(8) 106918 pid('SABuiltinApplication,DoDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 799> 5)
		endDefinition(106883)
lbl(106918)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: DoDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(106928)	definition(x(7) 107140 pid('SABuiltinApplication,DoRecDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2452 6) nil 4) <Q: 800> [y(11)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 659> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testLiteral(y(2) true 107052)
lbl(107002)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107122)
lbl(107052)	testLiteral(y(2) false 107106)
lbl(107056)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107122)
lbl(107106)	match(y(2) ht(107109 [onScalar(unit 107122)]))
lbl(107109)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2473)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107122)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(106928)
lbl(107140)	definition(x(8) 107175 pid('SABuiltinApplication,DoRecDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 800> 5)
		endDefinition(107140)
lbl(107175)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: DoRecDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(107185)	definition(x(7) 107412 pid('SABuiltinApplication,DoKindedType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2478 6) nil 4) <Q: 801> [y(6) y(11)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 665> 4)
		testBool(y(4) 107394 107383)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 107322 107372)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107394)
lbl(107322)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107394)
lbl(107372)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2485)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107383)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2484)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107394)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(107185)
lbl(107412)	definition(x(8) 107447 pid('SABuiltinApplication,DoKindedType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2478 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 801> 5)
		endDefinition(107412)
lbl(107447)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: DoKindedType>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 33 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		move(y(25) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABuiltinApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(25))
		setConstant(nil)
lbl(107554)	definition(x(7) 108046 pid('SAApplication,AssertArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2501 6) nil 13) <Q: 802> [y(12)])
		allocateL7
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		createVariable(y(3))
		match(y(2) ht(107755 [onScalar(0 107594) onScalar(1 107617) onScalar(2 107640) onScalar(3 107663) onScalar(4 107686) onScalar(5 107709) onScalar(6 107732)]))
lbl(107594)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107617)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant(unaryProcOrObject x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107640)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107663)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107686)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107709)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107732)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107776)
lbl(107755)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
lbl(107776)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(2) 107793 108033)
		deAllocateL7
		return
lbl(107793)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(107812)	definition(x(1) 107838 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2519 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(107812)
lbl(107838)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(107849)	definition(x(1) 107866 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2520 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(107849)
lbl(107866)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 696> 4)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(3))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(4))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(5))
		setValue(y(2))
		putRecord('#' 2 x(3))
		setConstant('wrong arity in application of ')
		setValue(x(5))
		putRecord(hint [l m] x(6))
		setConstant('Procedure type')
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Application arity')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Application (names)')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (values)')
		setValue(y(4))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(6))
		setValue(x(7))
		move(y(5) x(0))
		putConstant('type error' x(2))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108033)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2513)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107554)
lbl(108046)	definition(x(8) 108072 pid('SAApplication,AssertArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2501 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 802> 3)
		endDefinition(108046)
lbl(108072)	putRecord('#' [1 2 fast] x(9))
		setConstant(<M: AssertArity>)
		setValue(x(8))
		setValue(x(7))
lbl(108082)	definition(x(7) 108843 pid('SAApplication,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2535 6) nil 15) <Q: 803> [y(26) y(2) y(8) y(25) g(50) g(51) g(57) y(3)])
		allocateL8
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorBuiltin false 1) 0)
		testBool(y(1) 108247 108830)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		move(g(2) x(0))
		move(y(3) x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(1))
		testLiteral(x(3) unit 108169)
lbl(108155)	move(y(0) x(0))
		move(g(4) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		branch(108221)
lbl(108169)	moveMoveXYYX(x(3) y(2) y(0) x(0))
		move(g(5) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		testBool(y(1) 108221 108210)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		inlinePlus1(x(1) x(2))
		move(y(0) x(1))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(g(3) x(0))
		callBI(',' [x(0) x(3)]#nil)
		branch(108221)
lbl(108210)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2563)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108221)	testBool(y(1) 108234 108236)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL8
		genCall(gci(g(3) true assertTypes true 2) 0)
lbl(108234)	deAllocateL8
		return
lbl(108236)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2582)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108247)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorProcedure false 1) 0)
		testBool(y(1) 108537 108819)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		inlineAt(actualArgs x(0) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 108535)
		inlineAt(actualArgs x(3) cache)
lbl(108316)	definition(x(4) 108342 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2597 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(108316)
lbl(108342)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(108359)	definition(x(1) 108376 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2598 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(108359)
lbl(108376)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putList(x(3))
		setValue(x(4))
		setValue(y(4))
		moveMoveXYXY(x(1) y(4) x(2) y(6))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(5))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (names)')
		setValue(y(7))
		putRecord(hint [l m] x(14))
		setConstant('Application (values)')
		setValue(y(5))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(6) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in application' x(3))
		move(y(4) x(4))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108535)	deAllocateL8
		return
lbl(108537)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorObject false 1) 0)
		testBool(y(1) 108723 108808)
		inlineAt(designator x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getClassNode y(2) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(2) 1 108645)
lbl(108599)	testLiteral(y(3) unit 108605)
		deAllocateL8
		return
lbl(108605)	inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(4))
		putConstant(object x(3))
		deAllocateL8
		genCall(gci(g(0) true checkMessage true 5) 0)
lbl(108645)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(pn 1 x(7))
		setValue(y(1))
		putRecord(hint [l m] x(6))
		setConstant('Object')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setConstant(1)
		putRecord(hint [l m] x(11))
		setConstant('Found')
		setValue(y(2))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(1))
		setValue(x(6))
		setValue(x(8))
		move(x(5) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in object application' x(3))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108723)	inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108790 108797)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(4) cache)
		putRecord(oz 1 x(5))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('applying non-procedure and non-object ')
		setValue(x(5))
		move(x(4) x(0))
		putConstant('static analysis error' x(1))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(108790)	move(y(0) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: AssertArity> true 1) 0)
lbl(108797)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2641)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108808)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2613)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2586)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108830)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2541)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108082)
lbl(108843)	definition(x(8) 108869 pid('SAApplication,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2535 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 803> 3)
		endDefinition(108843)
lbl(108869)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(108879)	definition(x(7) 108963 pid('SAApplication,checkDesignatorBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 2655 6) nil 3) <Q: 804> [y(3) y(4)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108945 108950)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(108945)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(108950)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2657)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108879)
lbl(108963)	definition(x(8) 108989 pid('SAApplication,checkDesignatorBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 2655 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 804> 3)
		endDefinition(108963)
lbl(108989)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkDesignatorBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(108999)	definition(x(7) 109083 pid('SAApplication,checkDesignatorProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 2659 6) nil 3) <Q: 805> [y(3) y(16)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109065 109070)
		move(g(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(109065)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(109070)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2661)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108999)
lbl(109083)	definition(x(8) 109109 pid('SAApplication,checkDesignatorProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 2659 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 805> 3)
		endDefinition(109083)
lbl(109109)	putRecord('#' [1 2 fast] x(12))
		setConstant(checkDesignatorProcedure)
		setValue(x(8))
		setValue(x(7))
lbl(109119)	definition(x(7) 109203 pid('SAApplication,checkDesignatorObject/fast' 1 pos('./compiler/StaticAnalysis.oz' 2663 6) nil 3) <Q: 806> [y(3) y(16)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109185 109190)
		move(g(1) x(0))
		inlineDot(x(0) object x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(109185)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(109190)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2665)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109119)
lbl(109203)	definition(x(8) 109229 pid('SAApplication,checkDesignatorObject/slow' 1 pos('./compiler/StaticAnalysis.oz' 2663 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 806> 3)
		endDefinition(109203)
lbl(109229)	putRecord('#' [1 2 fast] x(13))
		setConstant(checkDesignatorObject)
		setValue(x(8))
		setValue(x(7))
lbl(109239)	definition(x(7) 109291 pid('SAApplication,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2667 6) nil 2) <Q: 807> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(109265)	definition(x(1) 109285 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2670 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(109265)
lbl(109285)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(109239)
lbl(109291)	definition(x(8) 109317 pid('SAApplication,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2667 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 807> 3)
		endDefinition(109291)
lbl(109317)	putRecord('#' [1 2 fast] x(14))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(26) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(109361)	definition(x(7) 110045 pid('SABoolCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2678 6) nil 9) <Q: 808> [y(3) y(16) y(12) y(11)])
		allocateL6
		inlineAt(arbiter x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109716 110032)
lbl(109389)	move(g(1) x(0))
		inlineDot(x(0) bool x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 109716 110032)
lbl(109428)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) 'true' x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 109593 109705)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always true')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109593)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always false')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2689)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109716)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(bool x(0))
		putConstant(nil x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(3) 109867 110021)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'true' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'false' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL6
		tailSendMsg(setTopNeeded x(2) 2 cache)
lbl(109867)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(arbiter x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		inlineAt(arbiter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getType x(2) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 696> 4)
		createVariable(y(4))
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 109948)
		getLiteral(nil y(4))
		branch(109968)
lbl(109948)	getList(y(4))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Name')
		unifyVariable(x(2))
		getRecord(pn 1 x(2))
		unifyValue(y(1))
lbl(109968)	putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Value')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Type')
		setValue(y(5))
		putList(x(7))
		setValue(x(8))
		setValue(y(4))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('type error' x(2))
		putConstant('Non-boolean arbiter in boolean case statement' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(110021)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2722)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(110032)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2681)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109361)
lbl(110045)	definition(x(8) 110071 pid('SABoolCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2678 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 808> 3)
		endDefinition(110045)
lbl(110071)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110081)	definition(x(7) 110100 pid('SABoolCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2752 6) nil 2) <Q: 809> nil)
		inlineAt(arbiter x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110081)
lbl(110100)	definition(x(8) 110126 pid('SABoolCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2752 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 809> 3)
		endDefinition(110100)
lbl(110126)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolCase' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110165)	definition(x(7) 110272 pid('SABoolClause,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2758 6) nil 3) <Q: 810> [y(13)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(4) x(0))
		createVariableMove(y(5) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL6
		genFastCall(<Q: 680> 3)
		endDefinition(110165)
lbl(110272)	definition(x(8) 110313 pid('SABoolClause,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2758 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 810> 7)
		endDefinition(110272)
lbl(110313)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(110323)	definition(x(7) 110396 pid('SABoolClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2773 6) nil 3) <Q: 811> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(110323)
lbl(110396)	definition(x(8) 110422 pid('SABoolClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2773 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 811> 3)
		endDefinition(110396)
lbl(110422)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110432)	definition(x(7) 110448 pid('SABoolClause,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2786 6) nil 2) <Q: 812> [y(13)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(110432)
lbl(110448)	definition(x(8) 110474 pid('SABoolClause,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2786 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 812> 3)
		endDefinition(110448)
lbl(110474)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolClause' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110515)	definition(x(7) 110622 pid('SAPatternCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2799 6) nil 3) <Q: 813> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(2))
lbl(110550)	definition(x(1) 110583 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2807 3) nil 4) unit [x(2) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(arbiter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(saDescendWith x(3) 2 cache)
		endDefinition(110550)
lbl(110583)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescendWith x(2) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110515)
lbl(110622)	definition(x(8) 110648 pid('SAPatternCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2799 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 813> 3)
		endDefinition(110622)
lbl(110648)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110658)	definition(x(7) 110745 pid('SAPatternCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2812 6) nil 3) <Q: 814> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(110705)	definition(x(1) 110725 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2819 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110705)
lbl(110725)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110658)
lbl(110745)	definition(x(8) 110771 pid('SAPatternCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2812 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 814> 3)
		endDefinition(110745)
lbl(110771)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternCase' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110810)	definition(x(7) 110966 pid('SAPatternClause,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2826 6) nil 3) <Q: 815> [y(13)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 679> 4)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		createVariableMove(y(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		putConstant('pattern never matches' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(pattern x(1) cache)
		move(y(1) x(0))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		sendMsg(resetErrorMsg y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(110810)
lbl(110966)	definition(x(8) 111001 pid('SAPatternClause,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2826 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 815> 5)
		endDefinition(110966)
lbl(111001)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(111011)	definition(x(7) 111030 pid('SAPatternClause,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2852 6) nil 2) <Q: 816> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(111011)
lbl(111030)	definition(x(8) 111056 pid('SAPatternClause,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2852 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 816> 3)
		endDefinition(111030)
lbl(111056)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternClause' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(22))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SARecordPattern' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111122)	definition(x(7) 111141 pid('SAEquationPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2867 6) nil 2) <Q: 817> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(111122)
lbl(111141)	definition(x(8) 111167 pid('SAEquationPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2867 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 817> 3)
		endDefinition(111141)
lbl(111167)	putRecord('#' [1 2 fast] x(9))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(111177)	definition(x(7) 111196 pid('SAEquationPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2870 6) nil 2) <Q: 818> nil)
		inlineAt(right x(1) cache)
		tailSendMsg('setValue' x(1) 1 cache)
		endDefinition(111177)
lbl(111196)	definition(x(8) 111222 pid('SAEquationPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2870 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 818> 3)
		endDefinition(111196)
lbl(111222)	putRecord('#' [1 2 fast] x(10))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(111232)	definition(x(7) 111251 pid('SAEquationPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2873 6) nil 2) <Q: 819> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(111232)
lbl(111251)	definition(x(8) 111277 pid('SAEquationPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2873 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 819> 3)
		endDefinition(111251)
lbl(111277)	putRecord('#' [1 2 fast] x(11))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111287)	definition(x(7) 111306 pid('SAEquationPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2876 6) nil 2) <Q: 820> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(setLastValue x(1) 1 cache)
		endDefinition(111287)
lbl(111306)	definition(x(8) 111332 pid('SAEquationPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2876 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 820> 3)
		endDefinition(111306)
lbl(111332)	putRecord('#' [1 2 fast] x(12))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111342)	definition(x(7) 111361 pid('SAEquationPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2879 6) nil 2) <Q: 821> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLabel x(1) 1 cache)
		endDefinition(111342)
lbl(111361)	definition(x(8) 111387 pid('SAEquationPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2879 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 821> 3)
		endDefinition(111361)
lbl(111387)	putRecord('#' [1 2 fast] x(13))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(111397)	definition(x(7) 111416 pid('SAEquationPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 2882 6) nil 2) <Q: 822> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getArgs x(1) 1 cache)
		endDefinition(111397)
lbl(111416)	definition(x(8) 111442 pid('SAEquationPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 2882 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 822> 3)
		endDefinition(111416)
lbl(111442)	putRecord('#' [1 2 fast] x(14))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(111452)	definition(x(7) 111471 pid('SAEquationPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 2885 6) nil 2) <Q: 823> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(111452)
lbl(111471)	definition(x(8) 111497 pid('SAEquationPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2885 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 823> 3)
		endDefinition(111471)
lbl(111497)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(111507)	definition(x(7) 111526 pid('SAEquationPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 2888 6) nil 2) <Q: 824> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isOpen x(1) 1 cache)
		endDefinition(111507)
lbl(111526)	definition(x(8) 111552 pid('SAEquationPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 2888 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 824> 3)
		endDefinition(111526)
lbl(111552)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(111562)	definition(x(7) 111581 pid('SAEquationPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 2892 6) nil 2) <Q: 825> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(111562)
lbl(111581)	definition(x(8) 111607 pid('SAEquationPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 2892 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 825> 3)
		endDefinition(111581)
lbl(111607)	putRecord('#' [1 2 fast] x(17))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(111617)	definition(x(7) 111660 pid('SAEquationPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2896 6) nil 3) <Q: 826> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111617)
lbl(111660)	definition(x(8) 111686 pid('SAEquationPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2896 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 826> 3)
		endDefinition(111660)
lbl(111686)	putRecord('#' [1 2 fast] x(18))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111696)	definition(x(7) 111744 pid('SAEquationPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 2904 6) nil 4) <Q: 827> nil)
		allocateL3
		inlineAt(right x(2) cache)
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
		endDefinition(111696)
lbl(111744)	definition(x(8) 111779 pid('SAEquationPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 2904 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 827> 5)
		endDefinition(111744)
lbl(111779)	putRecord('#' [1 2 fast] x(19))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(111789)	definition(x(7) 111808 pid('SAEquationPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 2913 6) nil 3) <Q: 828> nil)
		inlineAt(right x(2) cache)
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111789)
lbl(111808)	definition(x(8) 111843 pid('SAEquationPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 2913 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 828> 5)
		endDefinition(111808)
lbl(111843)	putRecord('#' [1 2 fast] x(20))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(111853)	definition(x(7) 111891 pid('SAEquationPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2920 6) nil 2) <Q: 829> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(111853)
lbl(111891)	definition(x(8) 111917 pid('SAEquationPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2920 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 829> 3)
		endDefinition(111891)
lbl(111917)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquationPattern' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111978)	definition(x(7) 112051 pid('SAElseNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 3) <Q: 830> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(111978)
lbl(112051)	definition(x(8) 112077 pid('SAElseNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 830> 3)
		endDefinition(112051)
lbl(112077)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(112087)	definition(x(7) 112194 pid('SAElseNode,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2938 6) nil 3) <Q: 831> [y(13)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(112087)
lbl(112194)	definition(x(8) 112235 pid('SAElseNode,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2938 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 831> 7)
		endDefinition(112194)
lbl(112235)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112245)	definition(x(7) 112336 pid('SAElseNode,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2952 6) nil 3) <Q: 832> [y(13)])
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 702> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112245)
lbl(112336)	definition(x(8) 112371 pid('SAElseNode,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2952 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 832> 5)
		endDefinition(112336)
lbl(112371)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112381)	definition(x(7) 112397 pid('SAElseNode,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2965 6) nil 2) <Q: 833> [y(13)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(112381)
lbl(112397)	definition(x(8) 112423 pid('SAElseNode,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2965 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 833> 3)
		endDefinition(112397)
lbl(112423)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAElseNode' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112466)	definition(x(7) 112475 pid('SANoElse,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2970 6) nil 1) <Q: 834> nil)
		return
		endDefinition(112466)
lbl(112475)	definition(x(8) 112501 pid('SANoElse,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2970 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 834> 3)
		endDefinition(112475)
lbl(112501)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(112511)	definition(x(7) 112520 pid('SANoElse,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2973 6) nil 3) <Q: 835> nil)
		return
		endDefinition(112511)
lbl(112520)	definition(x(8) 112561 pid('SANoElse,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2973 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 835> 7)
		endDefinition(112520)
lbl(112561)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112571)	definition(x(7) 112580 pid('SANoElse,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2976 6) nil 2) <Q: 836> nil)
		return
		endDefinition(112571)
lbl(112580)	definition(x(8) 112615 pid('SANoElse,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2976 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 836> 5)
		endDefinition(112580)
lbl(112615)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112625)	definition(x(7) 112634 pid('SANoElse,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2979 6) nil 1) <Q: 837> nil)
		return
		endDefinition(112625)
lbl(112634)	definition(x(8) 112660 pid('SANoElse,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2979 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 837> 3)
		endDefinition(112634)
lbl(112660)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANoElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112703)	definition(x(7) 112776 pid('SAThreadNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2985 6) nil 3) <Q: 838> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112703)
lbl(112776)	definition(x(8) 112802 pid('SAThreadNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2985 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 838> 3)
		endDefinition(112776)
lbl(112802)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAThreadNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112839)	definition(x(7) 112957 pid('SATryNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2999 6) nil 3) <Q: 839> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(tryStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(catchStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112839)
lbl(112957)	definition(x(8) 112983 pid('SATryNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2999 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 839> 3)
		endDefinition(112957)
lbl(112983)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATryNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(113020)	definition(x(7) 113076 pid('SALockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3032 6) nil 3) <Q: 840> [y(13)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(113020)
lbl(113076)	definition(x(8) 113102 pid('SALockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3032 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 840> 3)
		endDefinition(113076)
lbl(113102)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(113112)	definition(x(7) 113131 pid('SALockNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3039 6) nil 2) <Q: 841> nil)
		inlineAt(lockVar x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(113112)
lbl(113131)	definition(x(8) 113157 pid('SALockNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3039 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 841> 3)
		endDefinition(113131)
lbl(113157)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SALockNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
		createVariable(y(30))
lbl(113204)	definition(x(7) 113530 pid('SAClassNode,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 3048 6) nil 5) <Q: 842> [y(9) y(17) y(3) y(30)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 689> 4)
		move(g(0) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		inlineAssign(isToplevel x(0) cache)
		inlineAt(parents x(0) cache)
		move(g(1) x(1))
		inlineDot(x(1) 'class' x(4) cache)
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(3) 113406 113462)
		inlineAt(parents x(0) cache)
lbl(113312)	definition(x(1) 113332 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3067 25) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getValue x(2) 1 cache)
		endDefinition(113312)
lbl(113332)	createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(parents x(0) cache)
		move(g(2) x(1))
		createVariable(x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true <M: InheritProperties> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritAttributes> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritFeatures> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritMethods> false 4) 0)
		branch(113473)
lbl(113406)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 2 x(2))
		setConstant('inheriting from non-class ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant('type error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		branch(113473)
lbl(113462)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3064)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113473)	putConstant('class definition failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(designator x(0) cache)
		move(y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(113204)
lbl(113530)	definition(x(8) 113556 pid('SAClassNode,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 3048 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 842> 3)
		endDefinition(113530)
lbl(113556)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(113566)	definition(x(7) 113976 pid('SAClassNode,InheritProperties/fast' 3 pos('./compiler/StaticAnalysis.oz' 3121 6) nil 6) <Q: 843> [y(17) y(15) y(16) y(3) y(2)])
		allocateL7
		inlineAt(properties x(4) cache)
		move(g(0) x(3))
		inlineDot(x(3) atom x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 113905 113963)
		inlineAt(properties x(0) cache)
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) atom x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 39> 6)
lbl(113646)	definition(x(1) 113699 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3137 21) nil 2) unit [g(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(2) 113681 113686)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getProperties x(1) 1 cache)
lbl(113681)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(113686)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3138)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113646)
lbl(113699)	move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(113708)	definition(x(1) 113736 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3145 6) nil 3) unit nil)
		testLiteral(x(0) unit 113722)
lbl(113718)	getLiteral(false x(1))
		return
lbl(113722)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant(final x(0))
		genFastCall(<P: 22> 7)
		endDefinition(113708)
lbl(113736)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 700> 8)
		testBool(y(6) 113842 113894)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(4) x(2))
		inlineDot(x(2) printName x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(3) y(3) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(4) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(3) 2)
		putRecord(pn 1 x(4))
		setValue(y(4))
		putRecord('#' 2 x(2))
		setConstant('inheritance from final class ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113842)	definition(x(1) 113860 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3156 34) nil 4) unit nil)
		putConstant(unit x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(113842)
lbl(113860)	move(y(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 39> 6)
		putList(x(0))
		setValue(y(4))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setProperties x(1) 1 cache)
lbl(113894)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3148)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113905)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putRecord('#' 2 x(2))
		setConstant('non-atomic class property ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3132)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113566)
lbl(113976)	definition(x(8) 114017 pid('SAClassNode,InheritProperties/slow' 1 pos('./compiler/StaticAnalysis.oz' 3121 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 843> 7)
		endDefinition(113976)
lbl(114017)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: InheritProperties>)
		setValue(x(8))
		setValue(x(7))
lbl(114027)	definition(x(7) 114399 pid('SAClassNode,InheritAttributes/fast' 4 pos('./compiler/StaticAnalysis.oz' 3170 6) nil 7) <Q: 844> [y(14) y(17) y(15) y(16)])
		allocateL7
		inlineAt(attributes x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114319 114386)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114238 114308)
		testBool(y(3) 114225 114227)
lbl(114115)	definition(x(1) 114135 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3191 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getAttributes x(2) 1 cache)
		endDefinition(114115)
lbl(114135)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 114223)
lbl(114163)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114210 114212)
lbl(114185)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setAttributes x(1) 1 cache)
lbl(114210)	deAllocateL7
		return
lbl(114212)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3195)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114223)	deAllocateL7
		return
lbl(114225)	deAllocateL7
		return
lbl(114227)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114238)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Attributes found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate attributes in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114308)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3186)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114319)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Attribute found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class attribute ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114386)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3180)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114027)
lbl(114399)	definition(x(8) 114446 pid('SAClassNode,InheritAttributes/slow' 1 pos('./compiler/StaticAnalysis.oz' 3170 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 844> 9)
		endDefinition(114399)
lbl(114446)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: InheritAttributes>)
		setValue(x(8))
		setValue(x(7))
lbl(114456)	definition(x(7) 114828 pid('SAClassNode,InheritFeatures/fast' 4 pos('./compiler/StaticAnalysis.oz' 3229 6) nil 7) <Q: 845> [y(14) y(17) y(15) y(16)])
		allocateL7
		inlineAt(features x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114748 114815)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114667 114737)
		testBool(y(3) 114654 114656)
lbl(114544)	definition(x(1) 114564 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3250 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFeatures x(2) 1 cache)
		endDefinition(114544)
lbl(114564)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 114652)
lbl(114592)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114639 114641)
lbl(114614)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setFeatures x(1) 1 cache)
lbl(114639)	deAllocateL7
		return
lbl(114641)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3254)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114652)	deAllocateL7
		return
lbl(114654)	deAllocateL7
		return
lbl(114656)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3249)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114667)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114737)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3245)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114748)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114815)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3239)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114456)
lbl(114828)	definition(x(8) 114875 pid('SAClassNode,InheritFeatures/slow' 1 pos('./compiler/StaticAnalysis.oz' 3229 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 845> 9)
		endDefinition(114828)
lbl(114875)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: InheritFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(114885)	definition(x(7) 115909 pid('SAClassNode,InheritMethods/fast' 4 pos('./compiler/StaticAnalysis.oz' 3287 6) nil 10) <Q: 846> [y(17) y(15) y(16) g(56)])
		allocateL(11)
		inlineAt(methods x(4) cache)
lbl(114898)	definition(x(5) 114918 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3288 23) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPattern x(2) 1 cache)
		endDefinition(114898)
lbl(114918)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
lbl(114940)	definition(x(1) 114985 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3298 3) nil 4) unit [g(0)])
		shallowGuard(114972)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(114956)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) literal x(3) cache)
		move(x(2) x(0))
		tailCall(x(3) 2)
lbl(114972)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3298)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114940)
lbl(114985)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
lbl(114997)	definition(x(1) 115056 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3300 3) nil 6) unit [g(0)])
		shallowGuard(115043)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115021)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(115043)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3300)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114997)
lbl(115056)	move(y(4) x(0))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genFastCall(<Q: 698> 8)
lbl(115068)	definition(x(1) 115135 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3302 3) nil 6) unit [g(0)])
		shallowGuard(115122)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115092)	shallowThen
		testLiteral(x(5) unit 115101)
		getLiteral(true x(1))
		return
lbl(115101)	move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(5) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(115122)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3302)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115068)
lbl(115135)	move(y(4) x(0))
		createVariableMove(y(9) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 115824 115896)
		testBool(y(8) 115681 115813)
		testBool(y(10) 115538 115670)
lbl(115159)	definition(x(1) 115259 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3314 6) nil 6) unit [g(1)])
		shallowGuard(115246)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115183)	shallowThen
		allocateL4
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(2) x(0))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		genFastCall(<P: 29> 6)
		testLiteral(y(3) unit 115233)
		unify(y(1) y(3))
		deAllocateL4
		return
lbl(115233)	move(y(3) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
lbl(115246)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3314)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115159)
lbl(115259)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
lbl(115268)	definition(x(1) 115302 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3320 27) nil 4) unit nil)
		shallowGuard(115289)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(115284)	shallowThen
		unify(x(1) x(2))
		return
lbl(115289)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3320)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115268)
lbl(115302)	move(y(5) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 115457 115527)
		testBool(y(3) 115444 115446)
lbl(115328)	definition(x(1) 115348 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3328 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getMethods x(2) 1 cache)
		endDefinition(115328)
lbl(115348)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) literal x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 115431 115433)
lbl(115379)	move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 115429)
lbl(115398)	putConstant(m x(3))
		move(y(5) x(0))
		callBI(record [x(3) x(0)]#[x(1)])
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 706> 6)
		move(y(2) x(0))
		move(y(0) x(1))
		deAllocateL
		tailSendMsg(setMethods x(1) 1 cache)
lbl(115429)	deAllocateL
		return
lbl(115431)	deAllocateL
		return
lbl(115433)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3332)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115444)	deAllocateL
		return
lbl(115446)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115457)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Method names')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate method names in class definition' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115527)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115538)	getRecord('#' 2 y(9))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message label')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115670)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3310)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115681)	getRecord('#' 2 y(7))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message found')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115813)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3307)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115824)	getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('non-literal method label ' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115896)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3304)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114885)
lbl(115909)	definition(x(8) 115956 pid('SAClassNode,InheritMethods/slow' 1 pos('./compiler/StaticAnalysis.oz' 3287 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 846> 9)
		endDefinition(115909)
lbl(115956)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: InheritMethods>)
		setValue(x(8))
		setValue(x(7))
lbl(115966)	definition(x(7) 116022 pid('SAClassNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3392 6) nil 2) <Q: 847> [y(30)])
		allocateL2
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		sendMsg(pushSelf y(0) 1 cache)
		inlineAt(methods x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(0) true <M: SaBody> false 2) 0)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(popSelf x(0) 0 cache)
		endDefinition(115966)
lbl(116022)	definition(x(8) 116048 pid('SAClassNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3392 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 847> 3)
		endDefinition(116022)
lbl(116048)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(116058)	definition(x(7) 116107 pid('SAClassNode,SaBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 3401 6) nil 3) <Q: 848> [y(30)])
		match(x(0) ht(116092 [onScalar(nil 116067) onRecord('|' 2 116068)]))
lbl(116067)	return
lbl(116068)	allocateL2
		getVarVar(x(2) y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		sendMsg(saDescend x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: SaBody> true 2) 0)
lbl(116092)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(3406)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(116058)
lbl(116107)	definition(x(8) 116142 pid('SAClassNode,SaBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 3401 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 848> 5)
		endDefinition(116107)
lbl(116142)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: SaBody>)
		setValue(x(8))
		setValue(x(7))
lbl(116152)	definition(x(7) 116378 pid('SAClassNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3408 6) nil 2) <Q: 849> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(parents x(0) cache)
lbl(116178)	definition(x(1) 116198 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3412 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116178)
lbl(116198)	genFastCall(<P: 34> 4)
		inlineAt(properties x(0) cache)
lbl(116206)	definition(x(1) 116226 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3416 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116206)
lbl(116226)	genFastCall(<P: 34> 4)
		inlineAt(attributes x(0) cache)
lbl(116234)	definition(x(1) 116285 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3418 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116271)
lbl(116245)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116271)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116234)
lbl(116285)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(116293)	definition(x(1) 116344 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3425 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116330)
lbl(116304)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116330)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116293)
lbl(116344)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
lbl(116352)	definition(x(1) 116372 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3432 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(preApplyEnvSubst x(1) 1 cache)
		endDefinition(116352)
lbl(116372)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116152)
lbl(116378)	definition(x(8) 116404 pid('SAClassNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3408 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 849> 3)
		endDefinition(116378)
lbl(116404)	putRecord('#' [1 2 fast] x(16))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(y(30) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAClassNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(116452)	definition(x(7) 116611 pid('SAMethod,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3437 6) nil 4) <Q: 850> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116464)	definition(x(1) 116484 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3440 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116464)
lbl(116484)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116496)	definition(x(1) 116517 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3441 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116496)
lbl(116517)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116529)	definition(x(1) 116547 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3443 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116529)
lbl(116547)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116556)	definition(x(1) 116574 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3444 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116556)
lbl(116574)	move(y(3) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116452)
lbl(116611)	definition(x(8) 116637 pid('SAMethod,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3437 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 850> 3)
		endDefinition(116611)
lbl(116637)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(116647)	definition(x(7) 116762 pid('SAMethod,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3448 6) nil 3) <Q: 851> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 116747 116749)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(1) x(0))
		inlineAssign(predicateRef x(0) cache)
lbl(116747)	deAllocateL4
		return
lbl(116749)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3458)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116647)
lbl(116762)	definition(x(8) 116788 pid('SAMethod,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3448 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 851> 3)
		endDefinition(116762)
lbl(116788)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(116798)	definition(x(7) 116850 pid('SAMethod,preApplyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3462 6) nil 2) <Q: 852> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(formalArgs x(0) cache)
lbl(116824)	definition(x(1) 116844 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3465 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116824)
lbl(116844)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116798)
lbl(116850)	definition(x(8) 116876 pid('SAMethod,preApplyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3462 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 852> 3)
		endDefinition(116850)
lbl(116876)	putRecord('#' [1 2 fast] x(11))
		setConstant(preApplyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethod' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(116917)	definition(x(7) 117104 pid('SAMethodWithDesignator,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3469 6) nil 4) <Q: 853> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116929)	definition(x(1) 116949 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3472 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116929)
lbl(116949)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116961)	definition(x(1) 116982 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3473 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116961)
lbl(116982)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116994)	definition(x(1) 117012 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3475 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116994)
lbl(117012)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(isOpen x(0) cache)
		createVariable(y(2))
		testBool(x(0) 117037 117065)
		getLiteral(unit y(2))
		branch(117076)
lbl(117037)	definition(x(1) 117055 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3476 43) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(117037)
lbl(117055)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		genFastCall(<P: 29> 6)
		branch(117076)
lbl(117065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3476)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(117076)	getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116917)
lbl(117104)	definition(x(8) 117130 pid('SAMethodWithDesignator,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3469 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 853> 3)
		endDefinition(117104)
lbl(117130)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(117140)	definition(x(7) 117213 pid('SAMethodWithDesignator,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3480 6) nil 3) <Q: 854> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(117140)
lbl(117213)	definition(x(8) 117239 pid('SAMethodWithDesignator,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3480 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 854> 3)
		endDefinition(117213)
lbl(117239)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethodWithDesignator' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117278)	definition(x(7) 117301 pid('SAMethFormal,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3494 6) nil 2) <Q: 855> nil)
		getRecord(required 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117278)
lbl(117301)	definition(x(8) 117327 pid('SAMethFormal,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3494 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 855> 3)
		endDefinition(117301)
lbl(117327)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(117337)	definition(x(7) 117356 pid('SAMethFormal,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3497 6) nil 2) <Q: 856> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117337)
lbl(117356)	definition(x(8) 117382 pid('SAMethFormal,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3497 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 856> 3)
		endDefinition(117356)
lbl(117382)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormal' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117421)	definition(x(7) 117444 pid('SAMethFormalOptional,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3502 6) nil 2) <Q: 857> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117421)
lbl(117444)	definition(x(8) 117470 pid('SAMethFormalOptional,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3502 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 857> 3)
		endDefinition(117444)
lbl(117470)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalOptional' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117507)	definition(x(7) 117530 pid('SAMethFormalWithDefault,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3507 6) nil 2) <Q: 858> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117507)
lbl(117530)	definition(x(8) 117556 pid('SAMethFormalWithDefault,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3507 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 858> 3)
		endDefinition(117530)
lbl(117556)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalWithDefault' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117593)	definition(x(7) 117649 pid('SAObjectLockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 3) <Q: 859> [y(13)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117593)
lbl(117649)	definition(x(8) 117675 pid('SAObjectLockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 859> 3)
		endDefinition(117649)
lbl(117675)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAObjectLockNode' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117712)	definition(x(7) 117721 pid('SAGetSelf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3524 6) nil 1) <Q: 860> nil)
		return
		endDefinition(117712)
lbl(117721)	definition(x(8) 117747 pid('SAGetSelf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3524 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 860> 3)
		endDefinition(117721)
lbl(117747)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(117757)	definition(x(7) 117776 pid('SAGetSelf,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3527 6) nil 2) <Q: 861> nil)
		inlineAt(destination x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117757)
lbl(117776)	definition(x(8) 117802 pid('SAGetSelf,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 861> 3)
		endDefinition(117776)
lbl(117802)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAGetSelf' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117841)	definition(x(7) 117928 pid('SAIfNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3533 6) nil 3) <Q: 862> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(117874)	definition(x(1) 117894 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3541 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(117874)
lbl(117894)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117841)
lbl(117928)	definition(x(8) 117954 pid('SAIfNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3533 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 862> 3)
		endDefinition(117928)
lbl(117954)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAIfNode' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117991)	definition(x(7) 118064 pid('SAChoicesAndDisjunctions,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3549 6) nil 3) <Q: 863> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(118024)	definition(x(1) 118044 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3557 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(118024)
lbl(118044)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117991)
lbl(118064)	definition(x(8) 118090 pid('SAChoicesAndDisjunctions,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3549 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 863> 3)
		endDefinition(118064)
lbl(118090)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAChoicesAndDisjunctions' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(118127)	definition(x(7) 118211 pid('SAClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) <Q: 864> [y(13)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(guard x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(118127)
lbl(118211)	definition(x(8) 118237 pid('SAClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 864> 3)
		endDefinition(118211)
lbl(118237)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAClause' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(118280)	definition(x(7) 118310 pid('SAValueNode,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3582 6) nil 2) <Q: 865> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(118280)
lbl(118310)	definition(x(8) 118324 pid('SAValueNode,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3582 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 865> 1)
		endDefinition(118310)
lbl(118324)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(118334)	definition(x(7) 118351 pid('SAValueNode,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3585 6) nil 2) <Q: 866> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118334)
lbl(118351)	definition(x(8) 118377 pid('SAValueNode,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3585 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 866> 3)
		endDefinition(118351)
lbl(118377)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(118387)	definition(x(7) 118403 pid('SAValueNode,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3588 6) nil 2) <Q: 867> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(118387)
lbl(118403)	definition(x(8) 118438 pid('SAValueNode,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3588 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 867> 5)
		endDefinition(118403)
lbl(118438)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(118448)	definition(x(7) 118471 pid('SAValueNode,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3591 6) nil 2) <Q: 868> nil)
		getRecord(value 1 x(1))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118448)
lbl(118471)	definition(x(8) 118506 pid('SAValueNode,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3591 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 868> 5)
		endDefinition(118471)
lbl(118506)	putRecord('#' [1 2 fast] x(12))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(118516)	definition(x(7) 118533 pid('SAValueNode,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 3594 6) nil 2) <Q: 869> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(118516)
lbl(118533)	definition(x(8) 118568 pid('SAValueNode,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3594 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 869> 5)
		endDefinition(118533)
lbl(118568)	putRecord('#' [1 2 fast] x(13))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(118578)	definition(x(7) 118595 pid('SAValueNode,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 3597 6) nil 3) <Q: 870> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(118578)
lbl(118595)	definition(x(8) 118636 pid('SAValueNode,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3597 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 870> 7)
		endDefinition(118595)
lbl(118636)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(118646)	definition(x(7) 118660 pid('SAValueNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3601 6) nil 2) <Q: 871> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(118646)
lbl(118660)	definition(x(8) 118686 pid('SAValueNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3601 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 871> 3)
		endDefinition(118660)
lbl(118686)	putRecord('#' [1 2 fast] x(15))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(118696)	definition(x(7) 118705 pid('SAValueNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3604 6) nil 1) <Q: 872> nil)
		return
		endDefinition(118696)
lbl(118705)	definition(x(8) 118731 pid('SAValueNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3604 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 872> 3)
		endDefinition(118705)
lbl(118731)	putRecord('#' [1 2 fast] x(16))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(118741)	definition(x(7) 118753 pid('SAValueNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3607 6) nil 2) <Q: 873> nil)
		unify(x(0) x(1))
		return
		endDefinition(118741)
lbl(118753)	definition(x(8) 118788 pid('SAValueNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3607 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 873> 5)
		endDefinition(118753)
lbl(118788)	putRecord('#' [1 2 fast] x(17))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(118798)	definition(x(7) 118946 pid('SAValueNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 3613 6) nil 6) <Q: 874> nil)
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(2) 118931 118933)
		inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 118858)
		deAllocateL5
		return
lbl(118858)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(118931)	deAllocateL5
		return
lbl(118933)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3614)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(118798)
lbl(118946)	definition(x(8) 118981 pid('SAValueNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 3613 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 874> 5)
		endDefinition(118946)
lbl(118981)	putRecord('#' [1 2 fast] x(18))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(118991)	definition(x(7) 119000 pid('SAValueNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3631 6) nil 1) <Q: 875> nil)
		return
		endDefinition(118991)
lbl(119000)	definition(x(8) 119026 pid('SAValueNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3631 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 875> 3)
		endDefinition(119000)
lbl(119026)	putRecord('#' [1 2 fast] x(19))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(119036)	definition(x(7) 119045 pid('SAValueNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3634 6) nil 1) <Q: 876> nil)
		return
		endDefinition(119036)
lbl(119045)	definition(x(8) 119071 pid('SAValueNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3634 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 876> 3)
		endDefinition(119045)
lbl(119071)	putRecord('#' [1 2 fast] x(20))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAValueNode' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(119135)	definition(x(7) 119175 pid('SAVariable,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3643 6) nil 4) <Q: 877> [y(12)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(value x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(119135)
lbl(119175)	definition(x(8) 119189 pid('SAVariable,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3643 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 877> 1)
		endDefinition(119175)
lbl(119189)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(119199)	definition(x(7) 119216 pid('SAVariable,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3646 6) nil 2) <Q: 878> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119199)
lbl(119216)	definition(x(8) 119242 pid('SAVariable,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3646 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 878> 3)
		endDefinition(119216)
lbl(119242)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(119252)	definition(x(7) 119266 pid('SAVariable,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3649 6) nil 1) <Q: 879> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(119252)
lbl(119266)	definition(x(8) 119292 pid('SAVariable,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3649 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 879> 3)
		endDefinition(119266)
lbl(119292)	putRecord('#' [1 2 fast] x(11))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(119302)	definition(x(7) 119318 pid('SAVariable,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 2) <Q: 880> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(119302)
lbl(119318)	definition(x(8) 119353 pid('SAVariable,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 880> 5)
		endDefinition(119318)
lbl(119353)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(119363)	definition(x(7) 119411 pid('SAVariable,outputDebugType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 3) <Q: 881> nil)
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 119392)
		inlineAt(type x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 696> 5)
lbl(119392)	inlineAt(lastValue x(2) cache)
		move(x(0) x(1))
		putConstant(3 x(0))
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(119363)
lbl(119411)	definition(x(8) 119437 pid('SAVariable,outputDebugType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 881> 3)
		endDefinition(119411)
lbl(119437)	putRecord('#' [1 2 fast] x(13))
		setConstant(outputDebugType)
		setValue(x(8))
		setValue(x(7))
lbl(119447)	definition(x(7) 119581 pid('SAVariable,outputDebugMeths/fast' 1 pos('./compiler/StaticAnalysis.oz' 3660 6) nil 4) <Q: 882> nil)
		allocateL3
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119471)
lbl(119466)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119471)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119466)
lbl(119483)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119574 [onScalar('class' 119497) onScalar(object 119531)]))
lbl(119497)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getMethods x(1) 1 cache)
		testLiteral(y(1) unit 119520)
lbl(119515)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119520)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119531)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getMethods y(1) 1 cache)
		testLiteral(y(2) unit 119563)
lbl(119558)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119563)	move(y(2) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119574)	getLiteral(unit y(0))
		deAllocateL3
		return
		endDefinition(119447)
lbl(119581)	definition(x(8) 119607 pid('SAVariable,outputDebugMeths/slow' 1 pos('./compiler/StaticAnalysis.oz' 3660 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 882> 3)
		endDefinition(119581)
lbl(119607)	putRecord('#' [1 2 fast] x(14))
		setConstant(outputDebugMeths)
		setValue(x(8))
		setValue(x(7))
lbl(119617)	definition(x(7) 119713 pid('SAVariable,outputDebugAttrs/fast' 1 pos('./compiler/StaticAnalysis.oz' 3676 6) nil 4) <Q: 883> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119641)
lbl(119636)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119641)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119636)
lbl(119653)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119706 [onScalar('class' 119667) onScalar(object 119679)]))
lbl(119667)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119679)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119706)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119617)
lbl(119713)	definition(x(8) 119739 pid('SAVariable,outputDebugAttrs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3676 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 883> 3)
		endDefinition(119713)
lbl(119739)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputDebugAttrs)
		setValue(x(8))
		setValue(x(7))
lbl(119749)	definition(x(7) 119845 pid('SAVariable,outputDebugFeats/fast' 1 pos('./compiler/StaticAnalysis.oz' 3686 6) nil 4) <Q: 884> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119773)
lbl(119768)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119773)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119768)
lbl(119785)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119838 [onScalar('class' 119799) onScalar(object 119811)]))
lbl(119799)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119811)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119838)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119749)
lbl(119845)	definition(x(8) 119871 pid('SAVariable,outputDebugFeats/slow' 1 pos('./compiler/StaticAnalysis.oz' 3686 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 884> 3)
		endDefinition(119845)
lbl(119871)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputDebugFeats)
		setValue(x(8))
		setValue(x(7))
lbl(119881)	definition(x(7) 119951 pid('SAVariable,outputDebugProps/fast' 1 pos('./compiler/StaticAnalysis.oz' 3696 6) nil 4) <Q: 885> nil)
		allocateL1
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119905)
lbl(119900)	getLiteral(unit y(0))
		deAllocateL1
		return
lbl(119905)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119900)
lbl(119917)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		testLiteral(x(1) 'class' 119944)
lbl(119932)	inlineAt(lastValue x(1) cache)
		deAllocateL1
		tailSendMsg(getProperties x(1) 1 cache)
lbl(119944)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(119881)
lbl(119951)	definition(x(8) 119977 pid('SAVariable,outputDebugProps/slow' 1 pos('./compiler/StaticAnalysis.oz' 3696 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 885> 3)
		endDefinition(119951)
lbl(119977)	putRecord('#' [1 2 fast] x(17))
		setConstant(outputDebugProps)
		setValue(x(8))
		setValue(x(7))
lbl(119987)	definition(x(7) 120004 pid('SAVariable,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3705 6) nil 2) <Q: 886> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119987)
lbl(120004)	definition(x(8) 120030 pid('SAVariable,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3705 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 886> 3)
		endDefinition(120004)
lbl(120030)	putRecord('#' [1 2 fast] x(18))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(120040)	definition(x(7) 120081 pid('SAVariable,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3708 6) nil 2) <Q: 887> nil)
		inlineAssign(lastValue x(0) cache)
		testLiteral(x(0) unit 120056)
		return
lbl(120056)	allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getType x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(120040)
lbl(120081)	definition(x(8) 120107 pid('SAVariable,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3708 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 887> 3)
		endDefinition(120081)
lbl(120107)	putRecord('#' [1 2 fast] x(19))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(37))
lbl(120119)	definition(x(7) 120320 pid('SAVariable,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3713 6) nil 3) <Q: 888> [y(37)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 120137)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120137)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 120200 120307)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120193)
		deAllocateL2
		return
lbl(120193)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120200)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 120294 120296)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120246)
		deAllocateL2
		return
lbl(120246)	testLiteral(y(1) unit 120267)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(120267)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120287)
		deAllocateL2
		return
lbl(120287)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120294)	deAllocateL2
		return
lbl(120296)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3729)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(120307)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3719)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(120119)
lbl(120320)	definition(x(8) 120346 pid('SAVariable,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3713 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 888> 3)
		endDefinition(120320)
lbl(120346)	putRecord('#' [1 2 fast] x(20))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(120356)	definition(x(7) 120389 pid('SAVariable,valToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3755 6) nil 6) <Q: 889> nil)
		inlineAt(printName x(4) cache)
		getSelf(x(5))
		move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(1))
		putConstant(3 x(2))
		tailSendMsg(<M: ValToSubst> x(5) 4 cache)
		endDefinition(120356)
lbl(120389)	definition(x(8) 120415 pid('SAVariable,valToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3755 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 889> 3)
		endDefinition(120389)
lbl(120415)	putRecord('#' [1 2 fast] x(21))
		setConstant(valToSubst)
		setValue(x(8))
		setValue(x(7))
lbl(120425)	definition(x(7) 121567 pid('SAVariable,ValToSubst/fast' 4 pos('./compiler/StaticAnalysis.oz' 3758 6) nil 8) <Q: 890> [y(37) g(61) y(9) g(53) g(56) y(4) g(1) g(62) g(63) g(64) g(65) g(2) g(66) g(13)])
		putConstant(0 x(4))
		testLE(x(2) x(4) x(5) 120445)
		move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120445)	testBI('IsDet' [x(3)]#[x(4)] 121559)
		testBI('IsInt' [x(3)]#[x(4)] 120488)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120488)	testBI('IsFloat' [x(3)]#[x(4)] 120527)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120527)	testBI('IsAtom' [x(3)]#[x(4)] 120566)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120566)	testBI('IsName' [x(3)]#[x(4)] 120605)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(true x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120605)	testBI('IsRecord' [x(3)]#[x(4)] 120821)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(x(1) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(1)]#[x(2)] 120675)
		move(g(2) x(2))
		inlineDot(x(2) atomNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120721)
lbl(120675)	testBI('IsName' [x(1)]#[x(2)] 120710)
		move(g(2) x(2))
		inlineDot(x(2) nameToken x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120721)
lbl(120710)	putRecord(kernel 2 x(2))
		setConstant(noElse)
		setConstant(3805)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(120721)	getSelf(x(2))
		putRecord('#' 2 x(7))
		setValue(y(3))
		setValue(x(2))
		putList(x(1))
		setValue(x(7))
		setValue(y(1))
		getSelf(x(3))
		move(x(3) x(6))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		move(y(0) x(3))
		createVariableMove(y(7) x(4))
		createVariableMove(y(8) x(5))
		sendMsg(recordValToArgs x(6) 6 cache)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(7) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(5) x(0) y(8) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL9
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120821)	allocateL7
		move(g(5) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		moveMoveXYYX(x(3) y(0) y(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 120876 121548)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120876)	move(y(0) x(0))
		testBI('IsProcedure' [x(0)]#[x(1)] 120920)
		move(g(2) x(1))
		inlineDot(x(1) procedureToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120920)	createVariableMove(y(1) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(1) 121067 121537)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
lbl(121001)	definition(x(1) 121018 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3845 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(121001)
lbl(121018)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(1) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121067)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 121242)
		callBI(getClass [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(6) y(1) x(0))
		sendMsg(init y(6) 1 cache)
lbl(121150)	definition(x(1) 121167 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3862 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(121150)
lbl(121167)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(6) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(6) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(6) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(6) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(y(6) x(1))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121242)	testBI('IsCell' [x(0)]#[x(1)] 121274)
		move(g(2) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121274)	testBI('IsLock' [x(0)]#[x(1)] 121306)
		move(g(2) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121306)	testBI('IsPort' [x(0)]#[x(1)] 121338)
		move(g(2) x(1))
		inlineDot(x(1) portToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121338)	testBI('IsArray' [x(0)]#[x(1)] 121370)
		move(g(2) x(1))
		inlineDot(x(1) arrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121370)	testBI('IsDictionary' [x(0)]#[x(1)] 121402)
		move(g(2) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121402)	testBI('IsSpace' [x(0)]#[x(1)] 121434)
		move(g(2) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121434)	testBI('Thread.is' [x(0)]#[x(1)] 121466)
		move(g(2) x(1))
		inlineDot(x(1) threadToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121466)	testBI('BitArray.is' [x(0)]#[x(1)] 121498)
		move(g(2) x(1))
		inlineDot(x(1) bitArrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121498)	testBI('IsChunk' [x(0)]#[x(1)] 121530)
		move(g(2) x(1))
		inlineDot(x(1) chunkToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121530)	move(g(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121537)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3836)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121548)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3821)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121559)	move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
		endDefinition(120425)
lbl(121567)	definition(x(8) 121614 pid('SAVariable,ValToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3758 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 890> 9)
		endDefinition(121567)
lbl(121614)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ValToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(121624)	definition(x(7) 121988 pid('SAVariable,recordValToArgs/fast' 6 pos('./compiler/StaticAnalysis.oz' 3924 6) nil 10) <Q: 891> [y(9) g(67)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(5) y(2))
		testList(y(0) 121961)
lbl(121643)	getVarVar(x(6) x(7))
		shallowGuard(121961)
		getRecord('#' 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(121656)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(7) y(7))
		move(y(6) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 705> 6)
		createVariable(y(9))
		move(y(5) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 121719)
		move(g(0) x(1))
		inlineDot(x(1) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121796)
lbl(121719)	testBI('IsName' [x(0)]#[x(1)] 121752)
		move(g(0) x(1))
		inlineDot(x(1) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(true x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121796)
lbl(121752)	testBI('IsInt' [x(0)]#[x(1)] 121785)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121796)
lbl(121785)	putRecord(kernel 2 x(1))
		setConstant(noElse)
		setConstant(3936)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(121796)	createVariable(y(10))
		testLiteral(y(8) unit 121896)
		putRecord('#' 3 x(0))
		setValue(y(4))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 194> 4)
		move(y(8) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(2)])
		moveMoveXYXY(x(1) y(8) x(2) y(11))
		move(y(8) x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(11) 3 cache)
		move(y(3) x(0))
		inlineMinus1(x(0) x(2))
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		move(y(6) x(3))
		sendMsg(<M: ValToSubst> y(11) 4 cache)
		move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(11) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
		branch(121914)
lbl(121896)	move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(8) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
lbl(121914)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(10))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(10))
		getSelf(x(7))
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		tailSendMsg(recordValToArgs x(7) 6 cache)
lbl(121961)	testLiteral(y(0) nil 121973)
lbl(121965)	getLiteral(nil y(1))
		getLiteral(nil y(2))
		deAllocateL
		return
lbl(121973)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(3964)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(121624)
lbl(121988)	definition(x(8) 122047 pid('SAVariable,recordValToArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3924 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 891> 13)
		endDefinition(121988)
lbl(122047)	putRecord('#' [1 2 fast] x(23))
		setConstant(recordValToArgs)
		setValue(x(8))
		setValue(x(7))
		putConstant(3 x(7))
lbl(122060)	definition(x(8) 122074 pid('SAVariable,typeToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3966 6) nil 2) <Q: 892> [y(37) x(7)])
		move(g(1) x(1))
		genCall(gci(g(0) true <M: TypeToSubst> true 2) 0)
		endDefinition(122060)
lbl(122074)	definition(x(7) 122100 pid('SAVariable,typeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3966 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 892> 3)
		endDefinition(122074)
lbl(122100)	putRecord('#' [1 2 fast] x(24))
		setConstant(typeToSubst)
		setValue(x(7))
		setValue(x(8))
lbl(122110)	definition(x(7) 122346 pid('SAVariable,TypeToSubst/fast' 2 pos('./compiler/StaticAnalysis.oz' 3969 6) nil 6) <Q: 893> [y(37) y(12) y(9) g(56)])
		match(x(0) ht(122331 [onRecord(value 1 122119) onRecord(type 1 122124) onRecord(record 1 122152)]))
lbl(122119)	getVariable(x(0))
		genCall(gci(g(0) true valToSubst true 1) 0)
lbl(122124)	allocateL1
		getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) encode x(3) cache)
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setType true 1) 0)
lbl(122152)	allocateL6
		getVariable(x(0))
		callBI('Label' [x(0)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		testBI('IsAtom' [x(2)]#[x(3)] 122203)
		move(g(2) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(unit x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122249)
lbl(122203)	testBI('IsName' [x(2)]#[x(3)] 122238)
		move(g(2) x(3))
		inlineDot(x(3) nameToken x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(true x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122249)
lbl(122238)	putRecord(kernel 2 x(3))
		setConstant(noElse)
		setConstant(3981)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(122249)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: RecordToSubst> false 5) 0)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(122331)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(3987)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(122110)
lbl(122346)	definition(x(8) 122381 pid('SAVariable,TypeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3969 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 893> 5)
		endDefinition(122346)
lbl(122381)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: TypeToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122391)	definition(x(7) 122665 pid('SAVariable,RecordToSubst/fast' 5 pos('./compiler/StaticAnalysis.oz' 3989 6) nil 8) <Q: 894> [y(9) y(37)])
		match(x(0) ht(122650 [onScalar(nil 122400) onRecord('|' 2 122407)]))
lbl(122400)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(122407)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(0)]#[x(5)] 122459)
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122536)
lbl(122459)	testBI('IsName' [x(0)]#[x(5)] 122492)
		move(g(0) x(5))
		inlineDot(x(5) nameToken x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122536)
lbl(122492)	testBI('IsInt' [x(0)]#[x(5)] 122525)
		move(g(0) x(5))
		inlineDot(x(5) intNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122536)
lbl(122525)	putRecord(kernel 2 x(5))
		setConstant(noElse)
		setConstant(3997)
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(122536)	move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(7))
		putConstant('' x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(7) 3 cache)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(3))
		inlineMinus1(x(3) x(4))
		move(x(2) x(0))
		move(x(4) x(1))
		sendMsg(<M: TypeToSubst> y(7) 2 cache)
		putConstant(unit x(0))
		createVariableMove(y(8) x(1))
		sendMsg(occ y(7) 2 cache)
		sendMsg(updateValue y(8) 0 cache)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(8))
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(8))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL9
		genCall(gci(g(1) true <M: RecordToSubst> true 5) 0)
lbl(122650)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4008)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(122391)
lbl(122665)	definition(x(8) 122718 pid('SAVariable,RecordToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3989 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 894> 11)
		endDefinition(122665)
lbl(122718)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: RecordToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122728)	definition(x(7) 122810 pid('SAVariable,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4010 6) nil 5) <Q: 895> [y(12) y(7)])
		inlineAt(lastValue x(2) cache)
		testLiteral(x(2) unit 122769)
lbl(122743)	getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(122769)	move(g(1) x(3))
		testBI('HasFeature' [x(2) x(3)]#[x(4)] 122802)
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(4) cache)
		move(x(4) x(0))
		tailCall(x(2) 2)
lbl(122802)	tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(122728)
lbl(122810)	definition(x(8) 122845 pid('SAVariable,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4010 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 895> 5)
		endDefinition(122810)
lbl(122845)	putRecord('#' [1 2 fast] x(27))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(122855)	definition(x(7) 123040 pid('SAVariable,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 3) <Q: 896> [y(37)])
		allocateL4
		inlineAt(lastValue x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(0) cache)
		testLiteral(x(0) unit 122898)
lbl(122887)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122898)	inlineAt(lastValue x(0) cache)
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 122960 123027)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122960)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(2) 123011 123016)
		inlineAt(lastValue x(0) cache)
		moveMoveXYYX(x(0) y(2) y(0) x(1))
		getSelf(x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(reachable x(2) 2 cache)
lbl(123011)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(123016)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4040)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(123027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4035)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(122855)
lbl(123040)	definition(x(8) 123075 pid('SAVariable,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 896> 5)
		endDefinition(123040)
lbl(123075)	putRecord('#' [1 2 fast] x(28))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 20 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		move(y(37) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(123147)	definition(x(7) 123241 pid('SAVariableOccurrence,outputDebugValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4057 6) nil 5) <Q: 897> [y(2)])
		allocateL4
		getRecord('#' 3 x(0))
		unifyVariable(y(0))
		unifyLiteral(' // ')
		unifyVariable(y(1))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(2))
		getSelf(x(4))
		createVariableMove(y(3) x(0))
		sendMsg(getValue x(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(y(2) 4)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(0))
		getSelf(x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		move(y(1) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		deAllocateL4
		tailCall(x(4) 4)
		endDefinition(123147)
lbl(123241)	definition(x(8) 123267 pid('SAVariableOccurrence,outputDebugValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4057 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 897> 3)
		endDefinition(123241)
lbl(123267)	putRecord('#' [1 2 fast] x(9))
		setConstant(outputDebugValue)
		setValue(x(8))
		setValue(x(7))
lbl(123277)	definition(x(7) 123317 pid('SAVariableOccurrence,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4063 6) nil 2) <Q: 898> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		move(x(0) y(0))
		getSelf(x(0))
		sendMsg(deref x(1) 1 cache)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(123277)
lbl(123317)	definition(x(8) 123343 pid('SAVariableOccurrence,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4063 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 898> 3)
		endDefinition(123317)
lbl(123343)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(123353)	definition(x(7) 123372 pid('SAVariableOccurrence,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4067 6) nil 2) <Q: 899> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(123353)
lbl(123372)	definition(x(8) 123398 pid('SAVariableOccurrence,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4067 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 899> 3)
		endDefinition(123372)
lbl(123398)	putRecord('#' [1 2 fast] x(11))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(123410)	definition(x(7) 123440 pid('SAVariableOccurrence,updateValue/fast' 0 pos('./compiler/StaticAnalysis.oz' 4077 6) nil 2) <Q: 900> [y(2)])
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
		endDefinition(123410)
lbl(123440)	definition(x(8) 123454 pid('SAVariableOccurrence,updateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4077 6) nil 1) unit nil)
		getLiteral(updateValue x(0))
		genFastCall(<Q: 900> 1)
		endDefinition(123440)
lbl(123454)	putRecord('#' [1 2 fast] x(12))
		setConstant(updateValue)
		setValue(x(8))
		setValue(x(7))
lbl(123464)	definition(x(7) 123812 pid('SAVariableOccurrence,UpdateValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4080 6) nil 4) <Q: 901> [y(2) y(9)])
		testLiteral(x(0) unit 123484)
		getSelf(x(2))
		getSelf(x(0))
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123484)	allocateL6
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(0) 1 cache)
		testBool(y(1) 123559 123799)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123531)
lbl(123519)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123531)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		inlineAt(variable x(0) cache)
		move(y(2) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 123519)
lbl(123552)	move(y(1) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
lbl(123559)	createVariableMove(y(1) x(0))
		sendMsg(isConstruction y(0) 1 cache)
		testBool(y(1) 123776 123788)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getArgs y(0) 1 cache)
lbl(123599)	definition(x(1) 123655 pid('' 2 pos('./compiler/StaticAnalysis.oz' 4110 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 123641)
lbl(123610)	allocateL2
		getVarVar(x(2) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(getLastValue x(2) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getLastValue x(1) 1 cache)
lbl(123641)	move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getLastValue x(2) 1 cache)
		endDefinition(123599)
lbl(123655)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123694)
lbl(123673)	moveMoveYXYX(y(1) x(0) y(2) x(2))
		testBI('==' [x(0) x(2)]#[x(3)] 123694)
lbl(123682)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123694)	move(g(1) x(0))
		inlineDot(x(0) construction x(1) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(0))
		sendMsg(isOpen y(0) 1 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(3) x(2))
		sendMsg(init y(5) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(1) x(0))
		sendMsg('setValue' y(5) 1 cache)
		move(y(5) x(0))
		sendMsg(setLastValue y(5) 1 cache)
		getSelf(x(2))
		move(y(5) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123776)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123788)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4100)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(123799)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4088)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(123464)
lbl(123812)	definition(x(8) 123838 pid('SAVariableOccurrence,UpdateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4080 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 901> 3)
		endDefinition(123812)
lbl(123838)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: UpdateValue>)
		setValue(x(8))
		setValue(x(7))
lbl(123848)	definition(x(7) 123867 pid('SAVariableOccurrence,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4152 6) nil 2) <Q: 902> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(setType x(1) 1 cache)
		endDefinition(123848)
lbl(123867)	definition(x(8) 123893 pid('SAVariableOccurrence,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4152 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 902> 3)
		endDefinition(123867)
lbl(123893)	putRecord('#' [1 2 fast] x(14))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(123903)	definition(x(7) 123922 pid('SAVariableOccurrence,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4155 6) nil 2) <Q: 903> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(123903)
lbl(123922)	definition(x(8) 123948 pid('SAVariableOccurrence,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4155 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 903> 3)
		endDefinition(123922)
lbl(123948)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(123958)	definition(x(7) 123977 pid('SAVariableOccurrence,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4158 6) nil 3) <Q: 904> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(123958)
lbl(123977)	definition(x(8) 124012 pid('SAVariableOccurrence,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4158 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 904> 5)
		endDefinition(123977)
lbl(124012)	putRecord('#' [1 2 fast] x(16))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(124022)	definition(x(7) 124041 pid('SAVariableOccurrence,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4161 6) nil 3) <Q: 905> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(124022)
lbl(124041)	definition(x(8) 124076 pid('SAVariableOccurrence,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4161 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 905> 5)
		endDefinition(124041)
lbl(124076)	putRecord('#' [1 2 fast] x(17))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(124086)	definition(x(7) 124126 pid('SAVariableOccurrence,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4165 6) nil 3) <Q: 906> nil)
		allocateL1
		inlineAt(variable x(2) cache)
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(124086)
lbl(124126)	definition(x(8) 124161 pid('SAVariableOccurrence,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4165 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 906> 5)
		endDefinition(124126)
lbl(124161)	putRecord('#' [1 2 fast] x(18))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(124171)	definition(x(7) 124259 pid('SAVariableOccurrence,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4169 6) nil 6) <Q: 907> [y(7) y(4)])
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 124246)
		testBool(x(1) 124194 124235)
		return
lbl(124194)	allocateL3
		move(g(1) x(0))
		inlineDot(x(0) nameVariable x(1) cache)
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(2) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		moveMoveYXYX(y(1) x(2) y(0) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(124235)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4173)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124246)	inlineAt(value x(3) cache)
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(124171)
lbl(124259)	definition(x(8) 124300 pid('SAVariableOccurrence,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4169 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 907> 7)
		endDefinition(124259)
lbl(124300)	putRecord('#' [1 2 fast] x(19))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(124310)	definition(x(7) 124329 pid('SAVariableOccurrence,getPrintName/fast' 1 pos('./compiler/StaticAnalysis.oz' 4182 6) nil 2) <Q: 908> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(124310)
lbl(124329)	definition(x(8) 124355 pid('SAVariableOccurrence,getPrintName/slow' 1 pos('./compiler/StaticAnalysis.oz' 4182 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 908> 3)
		endDefinition(124329)
lbl(124355)	putRecord('#' [1 2 fast] x(20))
		setConstant(getPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(124365)	definition(x(7) 124376 pid('SAVariableOccurrence,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4185 6) nil 1) <Q: 909> [y(2)])
		genCall(gci(g(0) true updateValue true 0) 0)
		endDefinition(124365)
lbl(124376)	definition(x(8) 124402 pid('SAVariableOccurrence,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4185 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 909> 3)
		endDefinition(124376)
lbl(124402)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
lbl(124412)	definition(x(7) 124480 pid('SAVariableOccurrence,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4189 6) nil 4) <Q: 910> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 124450 124467)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(124450)	inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(124467)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4193)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124412)
lbl(124480)	definition(x(8) 124515 pid('SAVariableOccurrence,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4189 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 910> 5)
		endDefinition(124480)
lbl(124515)	putRecord('#' [1 2 fast] x(22))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(124525)	definition(x(7) 124826 pid('SAVariableOccurrence,unifyVal/fast' 2 pos('./compiler/StaticAnalysis.oz' 4204 6) nil 6) <Q: 911> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 124570)
		deAllocateL5
		return
lbl(124570)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 124592 124813)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genCall(gci(g(0) true bind true 2) 0)
lbl(124592)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 124620 124802)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124620)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124776 124791)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124750 124765)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 124675)
		deAllocateL5
		return
lbl(124675)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(2))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(124750)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124765)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124776)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124791)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4224)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124802)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4220)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124813)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4216)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124525)
lbl(124826)	definition(x(8) 124861 pid('SAVariableOccurrence,unifyVal/slow' 1 pos('./compiler/StaticAnalysis.oz' 4204 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 911> 5)
		endDefinition(124826)
lbl(124861)	putRecord('#' [1 2 fast] x(23))
		setConstant(unifyVal)
		setValue(x(8))
		setValue(x(7))
lbl(124871)	definition(x(7) 124931 pid('SAVariableOccurrence,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 4253 6) nil 5) <Q: 912> nil)
		allocateL2
		inlineAt(coord x(3) cache)
		move(x(1) y(0))
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(1) 124916 124918)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(124916)	deAllocateL2
		return
lbl(124918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4257)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124871)
lbl(124931)	definition(x(8) 124966 pid('SAVariableOccurrence,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 4253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 912> 5)
		endDefinition(124931)
lbl(124966)	putRecord('#' [1 2 fast] x(24))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(124976)	definition(x(7) 125130 pid('SAVariableOccurrence,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4269 6) nil 5) <Q: 913> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 125115 125117)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		createVariable(y(4))
		testBool(y(3) 125043 125092)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(125103)
lbl(125043)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 125076 125081)
		move(y(1) x(0))
		sendMsg(deref y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(125103)
lbl(125076)	unify(y(4) y(1))
		branch(125103)
lbl(125081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4292)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125092)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4287)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125103)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnifyDeref> true 3) 0)
lbl(125115)	deAllocateL5
		return
lbl(125117)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4284)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124976)
lbl(125130)	definition(x(8) 125165 pid('SAVariableOccurrence,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4269 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 913> 5)
		endDefinition(125130)
lbl(125165)	putRecord('#' [1 2 fast] x(25))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(125175)	definition(x(7) 125572 pid('SAVariableOccurrence,UnifyDeref/fast' 3 pos('./compiler/StaticAnalysis.oz' 4309 6) nil 6) <Q: 914> nil)
		testBI('==' [x(1) x(2)]#[x(3)] 125186)
		return
lbl(125186)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(3) 125223 125559)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125223)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 125251 125548)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125251)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 125316 125537)
		createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125301 125290)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(bind y(2) 2 cache)
		branch(125301)
lbl(125290)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4330)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125301)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125316)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125344 125526)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125344)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125500 125515)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125474 125489)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 125399)
		deAllocateL6
		return
lbl(125399)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(2) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(5))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL6
		genFastCall(<Q: 686> 7)
lbl(125474)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125489)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4345)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125500)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125515)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4342)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125526)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4338)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125537)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4326)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125548)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4322)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125559)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4318)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125175)
lbl(125572)	definition(x(8) 125613 pid('SAVariableOccurrence,UnifyDeref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4309 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 914> 7)
		endDefinition(125572)
lbl(125613)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: UnifyDeref>)
		setValue(x(8))
		setValue(x(7))
lbl(125623)	definition(x(7) 125632 pid('SAVariableOccurrence,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 4370 6) nil 1) <Q: 915> nil)
		return
		endDefinition(125623)
lbl(125632)	definition(x(8) 125658 pid('SAVariableOccurrence,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 4370 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 915> 3)
		endDefinition(125632)
lbl(125658)	putRecord('#' [1 2 fast] x(27))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 19 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(125737)	definition(x(7) 125767 pid('SAToken,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 4380 6) nil 2) <Q: 916> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(125737)
lbl(125767)	definition(x(8) 125781 pid('SAToken,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 4380 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 916> 1)
		endDefinition(125767)
lbl(125781)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(125791)	definition(x(7) 125805 pid('SAToken,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4383 6) nil 2) <Q: 917> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(125791)
lbl(125805)	definition(x(8) 125831 pid('SAToken,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4383 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 917> 3)
		endDefinition(125805)
lbl(125831)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(125841)	definition(x(7) 125858 pid('SAToken,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4386 6) nil 2) <Q: 918> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(125841)
lbl(125858)	definition(x(8) 125884 pid('SAToken,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4386 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 918> 3)
		endDefinition(125858)
lbl(125884)	putRecord('#' [1 2 fast] x(11))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(125894)	definition(x(7) 125910 pid('SAToken,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4389 6) nil 2) <Q: 919> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(125894)
lbl(125910)	definition(x(8) 125945 pid('SAToken,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4389 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 919> 5)
		endDefinition(125910)
lbl(125945)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(125955)	definition(x(7) 125989 pid('SAToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4392 6) nil 4) <Q: 920> [y(12)])
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(125955)
lbl(125989)	definition(x(8) 126024 pid('SAToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4392 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 920> 5)
		endDefinition(125989)
lbl(126024)	putRecord('#' [1 2 fast] x(13))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(126034)	definition(x(7) 126072 pid('SAToken,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4395 6) nil 2) <Q: 921> nil)
		testBool(x(0) 126050 126059)
		getSelf(x(0))
		unify(x(0) x(1))
		return
lbl(126050)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
lbl(126059)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4396)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126034)
lbl(126072)	definition(x(8) 126107 pid('SAToken,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4395 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 921> 5)
		endDefinition(126072)
lbl(126107)	putRecord('#' [1 2 fast] x(14))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(126117)	definition(x(7) 126155 pid('SAToken,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4399 6) nil 3) <Q: 922> nil)
		testBool(x(1) 126133 126142)
		getSelf(x(0))
		unify(x(0) x(2))
		return
lbl(126133)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
lbl(126142)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4400)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126117)
lbl(126155)	definition(x(8) 126196 pid('SAToken,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4399 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 922> 7)
		endDefinition(126155)
lbl(126196)	putRecord('#' [1 2 fast] x(15))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAToken' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(126242)	definition(x(7) 126347 pid('SANameToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4406 6) nil 4) <Q: 923> [y(0) y(12)])
		allocateL2
		inlineAt(isToplevel x(0) cache)
		move(x(1) y(0))
		testBool(x(0) 126307 126334)
lbl(126261)	move(g(0) x(0))
		inlineDot(x(0) isCopyableName x(2) cache)
		inlineAt(value x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 126307)
lbl(126291)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		deAllocateL2
		return
lbl(126307)	getRecord(type 1 y(0))
		unifyVariable(x(1))
		move(g(1) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL2
		tailCall(x(2) 2)
lbl(126334)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4407)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126242)
lbl(126347)	definition(x(8) 126382 pid('SANameToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4406 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 923> 5)
		endDefinition(126347)
lbl(126382)	putRecord('#' [1 2 fast] x(9))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANameToken' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(68))
		unifyValue(y(26))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(34))
		unifyValue(y(30))
		unifyValue(y(35))
		unifyValue(y(23))
		unifyValue(y(20))
		unifyValue(y(24))
		unifyValue(y(22))
		unifyValue(y(21))
		unifyValue(y(11))
		unifyValue(y(32))
		unifyValue(y(33))
		unifyValue(y(29))
		unifyValue(y(15))
		unifyValue(y(16))
		unifyValue(y(17))
		unifyValue(y(3))
		unifyValue(y(14))
		unifyValue(y(0))
		unifyValue(y(25))
		unifyValue(y(31))
		unifyValue(y(6))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(13))
		unifyValue(y(19))
		unifyValue(y(27))
		unifyValue(y(4))
		unifyValue(y(28))
		unifyValue(y(18))
		unifyValue(y(36))
		unifyValue(y(37))
		unifyValue(y(2))
		deAllocateL
		return
		endDefinition(83444)
lbl(126497)	tailCall(x(3) 0)
		endDefinition(81650)
lbl(126502)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(9))
		setConstant(newCopyablePredicateRef)
		setConstant(nil)
		putList(x(8))
		setConstant(newPredicateRef)
		setValue(x(9))
		putList(x(7))
		setConstant(isCopyableName)
		setValue(x(8))
		putList(x(6))
		setConstant(newCopyableName)
		setValue(x(7))
		putList(x(5))
		setConstant(newNamedName)
		setValue(x(6))
		putRecord(info [type] x(4))
		setValue(x(5))
		putRecord(info [type] x(10))
		setConstant(nil)
		putList(x(16))
		setConstant(distribute)
		setConstant(nil)
		putList(x(15))
		setConstant(distinct)
		setValue(x(16))
		putList(x(14))
		setConstant(less)
		setValue(x(15))
		putList(x(13))
		setConstant(is)
		setValue(x(14))
		putList(x(12))
		setConstant(int)
		setValue(x(13))
		putRecord(info [type] x(11))
		setValue(x(12))
		putList(x(23))
		setConstant(isIn)
		setConstant(nil)
		putList(x(22))
		setConstant(reflect)
		setValue(x(23))
		putList(x(21))
		setConstant(value)
		setValue(x(22))
		putList(x(20))
		setConstant(subset)
		setValue(x(21))
		putList(x(19))
		setConstant(var)
		setValue(x(20))
		putList(x(18))
		setConstant(include)
		setValue(x(19))
		putRecord(info [type] x(17))
		setValue(x(18))
		putList(x(30))
		setConstant(imAToken)
		setConstant(nil)
		putList(x(29))
		setConstant(imAVariableOccurrence)
		setValue(x(30))
		putList(x(28))
		setConstant(imAValueNode)
		setValue(x(29))
		putList(x(27))
		setConstant(imAConstruction)
		setValue(x(28))
		putList(x(26))
		setConstant(nameVariable)
		setValue(x(27))
		putList(x(25))
		setConstant(isBuiltin)
		setValue(x(26))
		putRecord(info [type] x(24))
		setValue(x(25))
		putList(x(32))
		setConstant(tokens)
		setConstant(nil)
		putRecord(info [type] x(31))
		setValue(x(32))
		putList(x(36))
		setConstant(printName)
		setConstant(nil)
		putList(x(35))
		setConstant(valueToVirtualString)
		setValue(x(36))
		putList(x(34))
		setConstant(eq)
		setValue(x(35))
		putRecord(info [type] x(33))
		setValue(x(34))
		putList(x(38))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(37))
		setValue(x(38))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'Misc' 'RunTime' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(10))
		setValue(x(11))
		setValue(x(17))
		setValue(x(24))
		setValue(x(31))
		setValue(x(33))
		setValue(x(37))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(126931)	definition(x(2) 183560 pid('' 2 pos('./compiler/FunCodeGen.oz' 1 0) nil 4) <P: 924> [y(156) y(150) y(206) y(96) y(149) y(154) y(148) y(213) y(216) y(153) y(98) y(186) y(187) y(169) y(95) y(97) y(210) y(207) y(155) y(151) y(205) y(211) y(212) y(99) y(7) y(144) y(2) y(166) y(94) y(203) y(1) y(163) y(165) y(47) y(170)])
		putList(x(2))
		setPredicateRef(<Q: 925>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 926>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 927>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 928>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 929>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 930>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Temporaries>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Permanents>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LastAliveRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ShortLivedTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UsedX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LowestFreeX>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HighestEverX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UsedY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LowestFreeY>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestEverY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GRegRef>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestUsedG>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvSize>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LocalVarnames>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeHd>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CodeTl>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvsInhibited>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AdjDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DelayedInitsDict>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoneDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentID>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stack>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arity>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LetDie>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LetDieSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVInstr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DebugEntry>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DebugExit>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitSendMsg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GenericEmitCall>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SetArguments>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OrderMoves>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetCycle>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordRead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitUnifies>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitDisjunction>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitTestConstant>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrepareShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PushContLabel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PopContLabel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dereference>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DereferenceSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsFirst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: IsLast>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitInitialization>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ReserveTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocatePerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CopyTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CopyPerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FreeX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictArgReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForCall>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictRegForInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictPermReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Emit>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitMultiple>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 931>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 932>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 933>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 934>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 935>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 936>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 937>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 938>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 939>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 940>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 941>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 942>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 943>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 944>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 945>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 946>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 947>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 948>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 949>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 950>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 951>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 952>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 953>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 954>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 955>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 956>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 957>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 958>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 959>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 960>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 961>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 962>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 963>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 964>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 965>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 966>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 967>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 968>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 969>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 970>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 971>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 972>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 973>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 974>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 975>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 976>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 977>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 978>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 979>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 980>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 981>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 982>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 983>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 984>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 985>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 986>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 987>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 988>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 989>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 990>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 991>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 992>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 993>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 994>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 995>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 996>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 997>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 998>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 999>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1000>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1001>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1002>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1003>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1004>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmptyRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Saved>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ComputeOccs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOcc>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOccVArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1005>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1006>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1007>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1008>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1009>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1010>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1011>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1012>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1013>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1014>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1015>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1016>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1017>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1018>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1019>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1020>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1021>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1022>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1023>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1024>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1025>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1026>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1027>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1028>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1029>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1030>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1031>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1032>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1033>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1034>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1035>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1036>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1037>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1038>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1039>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1040>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1041>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1042>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1043>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1044>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1045>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1046>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Scalars>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Records>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AltNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arbiter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: WarnedCatchAll>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Reg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRecord>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeGenRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1047>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1048>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1049>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1050>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1051>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1052>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1053>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1054>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1055>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1056>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1057>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1058>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1059>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1060>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1061>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1062>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1063>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1064>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Val>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1065>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1066>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1067>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1068>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1069>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1070>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1071>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1072>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1073>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1074>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1075>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1076>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1077>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1078>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1079>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1080>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1081>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1082>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1083>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1084>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1085>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1086>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1087>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1088>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1089>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1090>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1091>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1092>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1093>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1094>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1095>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1096>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1097>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1098>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1099>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1100>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1101>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1102>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1103>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1104>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1105>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1106>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1107>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1108>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1109>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1110>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1111>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1112>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1113>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1114>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1115>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1116>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1117>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1118>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1119>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1120>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MessagePatternVO>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1121>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1122>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1123>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1124>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1125>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1126>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1127>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1128>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1129>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1130>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1131>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1132>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1133>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1134>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1135>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1136>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1137>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1138>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1139>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1140>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1141>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1142>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1143>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1144>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1145>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1146>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1147>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1148>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1149>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1150>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1151>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1152>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1153>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1154>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1155>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1156>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1157>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1158>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1159>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1160>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1161>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1162>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1163>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1164>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1165>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1166>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1167>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1168>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1169>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1170>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1171>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1172>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1173>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1174>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1175>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1176>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1177>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ClauseBodyShared>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1178>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1179>)
		setValue(x(3))
lbl(129187)	definitionCopy(x(2) 183555 pid('/body' 0 pos('./compiler/FunCodeGen.oz' 1 0) [once] 84) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) x(1)])
		allocateL(51)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'Misc' x(2) cache)
		inlineDot(x(2) imAVariableOccurrence x(3) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'Core' x(4) cache)
		inlineDot(x(0) 'RunTime' x(5) cache)
lbl(129234)	definition(x(8) 129259 pid('NextFreeIndex' 3 pos('./compiler/CodeEmitter.oz' 25 3) nil 4) <Q: 925> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129253)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 925> 7)
lbl(129253)	unify(x(2) x(1))
		return
		endDefinition(129234)
lbl(129259)	definition(x(8) 129311 pid('NextFreeIndexWithoutPrintName' 4 pos('./compiler/CodeEmitter.oz' 31 3) nil 5) <Q: 926> [g(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129298)
lbl(129280)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 926> 9)
lbl(129298)	testBI('Dictionary.member' [x(1) x(2)]#[x(4)] 129304)
		branch(129280)
lbl(129304)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129259)
lbl(129311)	definition(x(8) 129367 pid('NextFreeIndexWithEmptyPrintName' 4 pos('./compiler/CodeEmitter.oz' 38 3) nil 6) <Q: 927> [g(1) g(2)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129350)
lbl(129332)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 927> 9)
lbl(129350)	putConstant('' x(4))
		callBI('Dictionary.condGet' [x(1) x(2) x(4)]#[x(5)])
		testLiteral(x(5) '' 129332)
lbl(129360)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129311)
lbl(129367)	definition(x(8) 129404 pid('LastUsedIndex' 3 pos('./compiler/CodeEmitter.oz' 46 3) nil 5) <Q: 928> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129381)
		unify(x(2) x(1))
		return
lbl(129381)	putConstant(0 x(3))
		testLE(x(1) x(3) x(4) 129393)
		getNumber(~1 x(2))
		return
lbl(129393)	inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 928> 7)
		endDefinition(129367)
lbl(129404)	definition(x(8) 129524 pid('OccursInVArgs' 3 pos('./compiler/CodeEmitter.oz' 53 3) nil 4) <Q: 929> nil)
		match(x(0) ht(129509 [onScalar(nil 129413) onRecord('|' 2 129417)]))
lbl(129413)	getLiteral(false x(2))
		return
lbl(129417)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testRecord(y(0) value 1 129447)
lbl(129434)	getVariable(x(3))
		shallowGuard(129447)
		unify(y(1) x(3))
lbl(129441)	shallowThen
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129447)	testRecord(y(0) record 3 129497)
lbl(129452)	getVoid(2)
		getVariable(x(0))
		move(y(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(0) 129474 129486)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129474)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129486)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129497)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129509)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(61)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(129404)
lbl(129524)	definition(x(8) 129550 pid('IsStep' 2 pos('./compiler/CodeEmitter.oz' 64 3) nil 3) <Q: 930> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(129544 [onScalar('pos' 129536) onScalar(unit 129540)]))
lbl(129536)	getLiteral(false x(1))
		return
lbl(129540)	getLiteral(false x(1))
		return
lbl(129544)	getLiteral(true x(1))
		return
		endDefinition(129524)
lbl(129550)	putRecord('attr' [<M: AdjDict> <M: Arity> <M: CodeHd> <M: CodeTl> <M: CurrentID> <M: DelayedInitsDict> <M: DoneDict> <M: GRegRef> <M: HighestEverX> <M: HighestEverY> <M: HighestUsedG> <M: LastAliveRS> <M: LocalEnvSize> <M: LocalEnvsInhibited> <M: LocalVarnames> <M: LowestFreeX> <M: LowestFreeY> <M: Permanents> <M: ShortLivedTemps> <M: Stack> <M: Temporaries> <M: UsedX> <M: UsedY> contLabels continuations] x(8))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(129604)	definition(x(9) 129653 pid('Emitter,init/fast' 0 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) <Q: 931> nil)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: GRegRef> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: LocalVarnames> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DelayedInitsDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: AdjDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DoneDict> x(0) cache)
		return
		endDefinition(129604)
lbl(129653)	definition(x(10) 129667 pid('Emitter,init/slow' 1 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 931> 1)
		endDefinition(129653)
lbl(129667)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(0))
		createVariable(y(1))
lbl(129681)	definition(x(9) 130343 pid('Emitter,doEmit/fast' 6 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) <Q: 932> [y(0) g(3) g(4) y(1) g(5) g(2) g(6)])
		allocateL7
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Temporaries> x(6) cache)
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Permanents> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(6) x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
lbl(129733)	definition(x(1) 129748 pid('' 1 pos('./compiler/CodeEmitter.oz' 106 21) nil 2) unit [g(1) y(6)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(129733)
lbl(129748)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		putConstant(nil x(2))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedX> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeX> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverX> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedY> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestUsedG> x(2) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: LocalEnvSize> x(2) cache)
		putRecord('allocateL' 1 x(0))
		setValue(x(2))
		putList(x(3))
		setValue(x(0))
		setVariable(x(4))
		inlineAssign(<M: CodeHd> x(3) cache)
		inlineAssign(<M: CodeTl> x(4) cache)
		putConstant(false x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(continuations x(2) cache)
		putConstant(nil x(2))
		inlineAssign(contLabels x(2) cache)
		getSelf(x(2))
lbl(129878)	definition(x(1) 129902 pid('' 2 pos('./compiler/CodeEmitter.oz' 122 3) nil 4) unit [x(2) g(3)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		createVariable(x(2))
		genCall(gci(g(1) true <M: AllocateThisTemp> true 3) 0)
		endDefinition(129878)
lbl(129902)	move(y(0) x(0))
		genFastCall(<P: 86> 4)
		getSelf(x(2))
lbl(129910)	definition(x(1) 129928 pid('' 1 pos('./compiler/CodeEmitter.oz' 124 3) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(x(1))
		genCall(gci(g(1) true <M: GetPerm> true 2) 0)
		endDefinition(129910)
lbl(129928)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		genCall(gci(g(3) true <M: EmitAddr> false 1) 0)
		inlineAt(<M: HighestUsedG> x(0) cache)
		getSelf(x(6))
lbl(129947)	definition(x(3) 129978 pid('' 3 pos('./compiler/CodeEmitter.oz' 127 4) nil 5) unit [x(6) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(129947)
lbl(129978)	move(y(4) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(nil x(0))
		inlineAt(<M: CodeTl> x(1) cache)
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		testBool(x(0) 130203 130221)
		inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 130075)
lbl(130041)	testLiteral(y(4) nil 130075)
lbl(130045)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('localVarname' 1 x(2))
		unifyLiteral('')
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130232)
lbl(130075)	getRecord('#' 2 y(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: CodeHd> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: HighestEverY> x(0) cache)
		getSelf(x(3))
lbl(130098)	definition(x(1) 130132 pid('' 3 pos('./compiler/CodeEmitter.oz' 140 2) nil 6) unit [x(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: LocalVarnames> x(4) cache)
		callBI('Dictionary.get' [x(4) x(1)]#[x(5)])
		getList(x(2))
		unifyVariable(x(1))
		unifyValue(x(0))
		getRecord('localVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(130098)
lbl(130132)	getSelf(x(3))
lbl(130134)	definition(x(4) 130165 pid('' 2 pos('./compiler/CodeEmitter.oz' 145 3) nil 6) unit [x(3) g(5)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		putConstant('' x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getRecord('globalVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(130134)
lbl(130165)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(0) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(130232)
lbl(130203)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130232)
lbl(130221)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(130232)	inlineAt(<M: HighestEverX> x(0) cache)
		inlinePlus1(x(0) x(1))
		unify(x(1) y(5))
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Temporaries> x(0) cache)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Permanents> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: CodeHd> x(0) cache)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedX> x(0) cache)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: LocalVarnames> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL7
		return
		endDefinition(129681)
lbl(130343)	definition(x(10) 130402 pid('Emitter,doEmit/slow' 1 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 932> 13)
		endDefinition(130343)
lbl(130402)	putRecord('#' [1 2 fast] x(12))
		setConstant(doEmit)
		setValue(x(10))
		setValue(x(9))
lbl(130412)	definition(x(9) 130437 pid('Emitter,newLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 2) <Q: 933> nil)
		inlineAt(nextLabel x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(nextLabel x(1) cache)
		return
		endDefinition(130412)
lbl(130437)	definition(x(10) 130463 pid('Emitter,newLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 933> 3)
		endDefinition(130437)
lbl(130463)	putRecord('#' [1 2 fast] x(13))
		setConstant(newLabel)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(2))
lbl(130475)	definition(x(9) 130737 pid('Emitter,EmitAddr/fast' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 5) <Q: 934> [y(1) g(1) g(7) y(2)])
		match(x(0) ht(130639 [onScalar(nil 130484) onRecord(vShared 4 130519)]))
lbl(130484)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130506 [onScalar(nil 130492) onRecord('|' 2 130495)]))
lbl(130492)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130495)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130506)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130519)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(2) nil 130565)
lbl(130530)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130552 [onScalar(nil 130538) onRecord('|' 2 130541)]))
lbl(130538)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130541)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130552)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130565)	inlineAt(sharedDone x(3) cache)
		testBI('Dictionary.member' [x(3) x(0)]#[x(4)] 130586)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130586)	allocateL2
		inlineAt(sharedDone x(3) cache)
		putConstant(true x(4))
		callBI('Dictionary.put' [x(3) x(0) x(4)]#nil)
		putRecord('lbl' 1 x(3))
		setValue(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putConstant(1 x(2))
		testLT(x(2) x(1) x(0) 130632)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
lbl(130632)	move(y(1) x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130639)	allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(3) x(2))
		callBI('.' [x(2) x(1)]#[x(3)])
		callBI('.' [x(0) x(3)]#[x(1)])
		testLiteral(x(1) nil 130690)
lbl(130680)	genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		putConstant(nil x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130690)	inlineAt(continuations x(3) cache)
		putList(x(4))
		setValue(x(1))
		setValue(x(3))
		inlineAssign(continuations x(4) cache)
		move(x(3) y(1))
		genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		inlineAt(continuations x(1) cache)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineAssign(continuations x(1) cache)
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(130475)
lbl(130737)	definition(x(10) 130763 pid('Emitter,EmitAddr/slow' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 934> 3)
		endDefinition(130737)
lbl(130763)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: EmitAddr>)
		setValue(x(10))
		setValue(x(9))
lbl(130773)	definition(x(9) 130822 pid('Emitter,FlushShortLivedTemps/fast' 0 pos('./compiler/CodeEmitter.oz' 239 6) nil 2) <Q: 935> [y(1)])
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		match(x(0) ht(130807 [onScalar(nil 130787) onRecord('|' 2 130788)]))
lbl(130787)	return
lbl(130788)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL1
		genCall(gci(g(0) true <M: FlushShortLivedTemps> true 0) 0)
lbl(130807)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130773)
lbl(130822)	definition(x(10) 130836 pid('Emitter,FlushShortLivedTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 239 6) nil 1) unit nil)
		getLiteral(<M: FlushShortLivedTemps> x(0))
		genFastCall(<Q: 935> 1)
		endDefinition(130822)
lbl(130836)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(10))
		setValue(x(9))
lbl(130846)	definition(x(9) 130878 pid('Emitter,LetDie/fast' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) <Q: 936> [g(8) g(9) y(1)])
		inlineAt(<M: LastAliveRS> x(1) cache)
		testBI('\\=' [x(1) x(0)]#[x(2)] 130875)
		inlineAssign(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.nimpl' [x(1) x(0)]#nil)
		callBI('BitArray.toList' [x(1)]#[x(0)])
		genCall(gci(g(2) true <M: LetDieSub> true 1) 0)
lbl(130875)	return
		endDefinition(130846)
lbl(130878)	definition(x(10) 130904 pid('Emitter,LetDie/slow' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 936> 3)
		endDefinition(130878)
lbl(130904)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: LetDie>)
		setValue(x(10))
		setValue(x(9))
lbl(130914)	definition(x(9) 131023 pid('Emitter,LetDieSub/fast' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 4) <Q: 937> [g(2) y(1) g(10)])
		match(x(0) ht(131008 [onScalar(nil 130923) onRecord('|' 2 130924)]))
lbl(130923)	return
lbl(130924)	allocateL2
		getVarVar(x(0) y(0))
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(1))
		testRecord(x(3) x 1 130966)
lbl(130947)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(130966)	inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 131001)
lbl(130985)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(131001)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true <M: LetDieSub> true 1) 0)
lbl(131008)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(269)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130914)
lbl(131023)	definition(x(10) 131049 pid('Emitter,LetDieSub/slow' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 937> 3)
		endDefinition(131023)
lbl(131049)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: LetDieSub>)
		setValue(x(10))
		setValue(x(9))
lbl(131059)	definition(x(9) 136279 pid('Emitter,EmitVInstr/fast' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 9) <Q: 938> [y(1) g(1) g(5) g(7) x(7) g(11) g(2) g(12) g(10) g(13)])
		match(x(0) ht(136264 [onRecord(vStepPoint 5 131068) onRecord(vMakePermanent 3 131112) onRecord(vClear 3 131308) onRecord(vUnify 4 131438) onRecord(vFailure 2 131621) onRecord(vEquateNumber 4 131627) onRecord(vEquateLiteral 4 131709) onRecord(vEquateRecord 6 131876) onRecord(vGetVariable 3 132070) onRecord(vCallBuiltin 5 132151) onRecord(vGenCall 8 132865) onRecord(vCall 5 133072) onRecord(vFastCall 5 133147) onRecord(vApplMeth 7 133244) onRecord(vInlineDot 7 133327) onRecord(vInlineAt 4 133538) onRecord(vInlineAssign 4 133611) onRecord(vGetSelf 3 133637) onRecord(vSetSelf 3 133733) onRecord(vDefinition 7 133754) onRecord(vDefinitionCopy 8 134051) onRecord(vExHandler 7 134328) onRecord(vPopEx 3 134461) onRecord(vCreateCond 7 134477) onRecord(vCreateOr 6 134766) onRecord(vCreateEnumOr 6 134786) onRecord(vCreateChoice 6 134806) onRecord(vAsk 2 134826) onRecord(vWait 2 134845) onRecord(vWaitTop 2 134864) onRecord(vShallowGuard 8 134883) onRecord(vTestBool 8 135040) onRecord(vTestBuiltin 7 135333) onRecord(vTestNumber 8 135532) onRecord(vTestLiteral 8 135554) onRecord(vMatch 7 135576) onRecord(vThread 5 135903) onRecord(vLockThread 5 136071) onRecord(vLockEnd 4 136174)]))
lbl(131068)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(131112)	getVoid(1)
		getVariable(x(0))
		getSelf(x(2))
lbl(131118)	definition(x(1) 131305 pid('' 1 pos('./compiler/CodeEmitter.oz' 282 6) nil 4) unit [x(2) g(1) g(0) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(regNames x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 131302)
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131300)
lbl(131152)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131288)
lbl(131174)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoNameVarsSwitch x(0) cache)
		testBool(x(0) 131275 131277)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		createVariableMove(y(3) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putList(x(3))
		setValue(y(3))
		setConstant(nil)
		putList(x(2))
		setValue(y(2))
		setValue(x(3))
		putRecord('#' 2 x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord('callBI' 2 x(0))
		setConstant(nameVariable)
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131275)	deAllocateL4
		return
lbl(131277)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(288)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131288)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131300)	deAllocateL4
		return
lbl(131302)	return
		endDefinition(131118)
lbl(131305)	genFastCall(<P: 34> 5)
lbl(131308)	getVoid(1)
		getVariable(x(0))
		inlineAt(continuations x(1) cache)
		testLiteral(x(1) nil 131322)
		return
lbl(131322)	getSelf(x(2))
lbl(131324)	definition(x(1) 131435 pid('' 1 pos('./compiler/CodeEmitter.oz' 306 2) nil 2) unit [x(2) g(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131351)
lbl(131349)	deAllocateL3
		return
lbl(131351)	testRecord(y(1) y 1 131420)
lbl(131356)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: IsLast> false 2) 0)
		testBool(y(2) 131371 131399)
		branch(131410)
lbl(131371)	move(y(0) x(0))
		genCall(gci(g(1) true <M: FreeReg> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocateUnnamedPerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(131410)
lbl(131399)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(309)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131410)	putRecord(clear 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(131420)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(316)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(131324)
lbl(131435)	genFastCall(<P: 34> 5)
lbl(131438)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 131490)
lbl(131466)	testLiteral(y(3) none 131504)
lbl(131470)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(131504)
lbl(131490)	match(y(3) ht(131493 [onScalar(none 131504)]))
lbl(131493)	putRecord('unify' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
lbl(131504)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131539)
lbl(131517)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		match(y(2) ht(131529 [onScalar(none 131560)]))
lbl(131529)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
		branch(131560)
lbl(131539)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(3) none 131560)
lbl(131552)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
lbl(131560)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131597)
lbl(131573)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131588)
lbl(131586)	deAllocateL4
		return
lbl(131588)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131597)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(0) none 131619)
lbl(131610)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131619)	deAllocateL4
		return
lbl(131621)	putConstant('failure' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131627)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(3) none 131697)
lbl(131648)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(0) 131663 131686)
		deAllocateL4
		return
lbl(131663)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(131686)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131697)	putRecord('getNumber' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131709)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131864)
lbl(131732)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 131765 131853)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131765)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131780 131842)
		deAllocateL5
		return
lbl(131780)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(5))
		putConstant(0 x(3))
		putConstant(nil x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131808 131831)
		deAllocateL5
		return
lbl(131808)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL5
		return
lbl(131831)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131842)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131853)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131864)	putRecord('getLiteral' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131876)	allocateL6
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(x(5))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(3) x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131909 132059)
		deAllocateL6
		return
lbl(131909)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(3) x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131985)
lbl(131936)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131951 131974)
		deAllocateL6
		return
lbl(131951)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordWrite> true 4) 0)
lbl(131974)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131985)	move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 132045 132034)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(5) 132015 132023)
		branch(132045)
lbl(132015)	move(y(2) x(0))
		genCall(gci(g(0) true <M: FreeReg> false 1) 0)
		branch(132045)
lbl(132023)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(398)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132045)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordRead> true 4) 0)
lbl(132059)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132070)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132141)
lbl(132088)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(1) 132111 132130)
		putRecord('getVoid' 1 x(0))
		setConstant(1)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132111)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132130)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132141)	putRecord('unifyValue' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132151)	allocateL(14)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(5) x(0))
		putConstant(test x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(6))
		testBool(x(3) 132681 132686)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(4) vTestBool 8 132676)
lbl(132211)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		getVoid(1)
		getVarVar(x(3) x(4))
		getVariable(x(5))
		createVariable(y(4))
		shallowGuard(132676)
		unify(y(7) x(0))
lbl(132232)	shallowThen
		getSelf(x(6))
		inlineDot(x(6) debugInfoControlSwitch x(6) cache)
		testBI('Not' [x(6)]#[x(7)] 132660)
lbl(132245)	moveMoveXYXY(x(1) y(8) x(2) y(9))
		moveMoveXYXY(x(3) y(10) x(4) y(11))
		move(x(5) y(12))
		createVariableMove(y(13) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(13) 132660 132665)
lbl(132268)	moveMoveYXYX(y(7) x(0) y(8) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132660 132665)
lbl(132283)	moveMoveYXYX(y(7) x(0) y(9) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132660 132665)
lbl(132298)	moveMoveYXYX(y(7) x(0) y(11) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132660 132665)
lbl(132313)	createVariable(y(7))
		match(y(1) ht(132628 [onScalar('==' 132318) onScalar('\\=' 132473)]))
lbl(132318)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132402 [onRecord(vEquateNumber 4 132350) onRecord(vEquateLiteral 4 132376)]))
lbl(132350)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132376)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132402)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132468 [onRecord(vEquateNumber 4 132416) onRecord(vEquateLiteral 4 132442)]))
lbl(132416)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132442)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132468)	getNumber(~1 y(7))
		branch(132631)
lbl(132473)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132557 [onRecord(vEquateNumber 4 132505) onRecord(vEquateLiteral 4 132531)]))
lbl(132505)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132531)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132557)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132623 [onRecord(vEquateNumber 4 132571) onRecord(vEquateLiteral 4 132597)]))
lbl(132571)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132597)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132631)
lbl(132623)	getNumber(~1 y(7))
		branch(132631)
lbl(132628)	getNumber(~1 y(7))
lbl(132631)	testNumber(y(7) ~1 132655)
lbl(132635)	getRecord(vTestBuiltin 7 y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132697)
lbl(132655)	unify(y(6) y(7))
		branch(132697)
lbl(132660)	getNumber(~1 y(6))
		branch(132697)
lbl(132665)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(426)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132676)	getNumber(~1 y(6))
		branch(132697)
lbl(132681)	getNumber(~1 y(6))
		branch(132697)
lbl(132686)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(421)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(132697)	testNumber(y(6) ~1 132841)
lbl(132701)	testLiteral(y(1) 'getReturn' 132770)
lbl(132705)	getList(y(2))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132743)
lbl(132724)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(1))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132743)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132770)	move(y(5) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(2) x(0))
		move(g(7) x(3))
		createVariableMove(y(0) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('#' 2 x(1))
		setValue(y(0))
		setValue(y(4))
		putRecord('callBI' 2 x(0))
		setValue(y(1))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: EmitUnifies> false 1) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(132841)	inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		putList(x(1))
		setValue(y(6))
		setValue(x(0))
		inlineAssign(continuations x(1) cache)
		deAllocateL
		return
lbl(132865)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testRecord(y(6) g 1 132933)
lbl(132891)	putRecord('gci' 5 x(0))
		setVariable(x(4))
		setValue(y(1))
		setValue(y(2))
		setConstant(false)
		setValue(y(3))
		putRecord('genCall' 2 x(3))
		setValue(x(0))
		setConstant(0)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(5) x(6))
		putConstant(any x(0))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132933)	testBool(y(1) 133001 133061)
		putRecord('ami' 2 x(1))
		setValue(y(2))
		setValue(y(3))
		putRecord('applMeth' 2 x(0))
		setValue(x(1))
		setVariable(x(2))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariable(y(3))
		testLiteral(x(1) nil 132974)
lbl(132969)	getLiteral(non_y y(3))
		branch(132977)
lbl(132974)	getLiteral(any y(3))
lbl(132977)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133001)	putRecord('call' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		inlineAt(continuations x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariable(y(6))
		testLiteral(x(3) nil 133033)
lbl(133028)	getLiteral(non_y y(6))
		branch(133036)
lbl(133033)	getLiteral(any y(6))
lbl(133036)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(5) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133061)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133072)	allocateL7
		getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putRecord('call' 2 x(3))
		setVariable(x(4))
		setVariable(x(5))
		inlineAt(continuations x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariable(y(6))
		testLiteral(x(6) nil 133119)
lbl(133114)	getLiteral(non_y y(6))
		branch(133122)
lbl(133119)	getLiteral(any y(6))
lbl(133122)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		move(y(2) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133147)	allocateL5
		getVoid(1)
		getVarVar(x(0) y(0))
		getVariable(y(1))
		createVariable(y(2))
		testBI('IsProcedure' [x(0)]#[x(1)] 133191)
		getRecord('marshalledFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
		branch(133219)
lbl(133191)	getRecord('genFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
lbl(133219)	moveMoveYXYX(y(0) x(2) y(2) x(3))
		move(y(1) x(6))
		putConstant(none x(0))
		putConstant(~1 x(1))
		createVariable(x(4))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL5
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133244)	allocateL6
		getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord('ami' 2 x(6))
		setValue(x(1))
		setValue(x(2))
		putRecord('applMeth' 2 x(5))
		setValue(x(6))
		setVariable(x(7))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) y(4))
		createVariable(y(5))
		testLiteral(x(1) nil 133300)
lbl(133295)	getLiteral(non_y y(5))
		branch(133303)
lbl(133300)	getLiteral(any y(5))
lbl(133303)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(2) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL6
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133327)	allocateL6
		getVoid(1)
		getVarVar(y(0) x(0))
		getVarVar(x(1) x(2))
		getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testBool(y(3) 133352 133408)
		branch(133419)
lbl(133352)	moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133419 133397)
		getSelf(x(3))
		inlineDot(x(3) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('dot access on undetermined variable suspends ')
		setConstant(forever)
		move(y(4) x(0))
		putConstant('code generation warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(133419)
lbl(133397)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133408)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(133419)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 133496)
lbl(133432)	testBool(y(3) 133451 133485)
lbl(133436)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(3) 133451 133485)
		deAllocateL6
		return
lbl(133451)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133485)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(552)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133496)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(2))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133538)	allocateL3
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133580)
lbl(133557)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(2))
		setConstant(cache)
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133580)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133611)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('inlineAssign' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133637)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133706)
lbl(133657)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(2) 133672 133695)
		deAllocateL3
		return
lbl(133672)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(133695)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133706)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getSelf' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133733)	allocateL1
		getVoid(1)
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('setSelf' 1 x(0))
		setValue(y(0))
		deAllocateL1
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133754)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133797 134040)
lbl(133778)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 133797 134040)
lbl(133791)	testLiteral(y(2) unit 133797)
		deAllocateL9
		return
lbl(133797)	getSelf(x(3))
lbl(133799)	definition(x(1) 133851 pid('' 2 pos('./compiler/CodeEmitter.oz' 597 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133844)
lbl(133826)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(133844)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(133799)
lbl(133851)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		createVariable(y(6))
		createVariable(y(7))
		testBool(y(3) 133890 133901)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		getLiteral(false y(7))
		branch(133912)
lbl(133890)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getLiteral(true y(7))
		branch(133912)
lbl(133901)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133912)	createVariableMove(y(3) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(1))
		unifyVariable(y(4))
		putRecord('definition' 6 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(1))
		setValue(y(2))
		setValue(y(5))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(133971)	definition(x(1) 133987 pid('' 1 pos('./compiler/CodeEmitter.oz' 618 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(133971)
lbl(133987)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		testBool(y(7) 134027 134029)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		putRecord('unify' 2 x(0))
		setValue(y(6))
		setValue(y(1))
		deAllocateL9
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134027)	deAllocateL9
		return
lbl(134029)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(620)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134040)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(592)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134051)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 134095 134317)
lbl(134076)	move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(6) 134095 134317)
lbl(134089)	testLiteral(y(3) unit 134095)
		deAllocateL10
		return
lbl(134095)	getSelf(x(3))
lbl(134097)	definition(x(1) 134149 pid('' 2 pos('./compiler/CodeEmitter.oz' 631 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 134142)
lbl(134124)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(134142)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(134097)
lbl(134149)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(4))
		getRecord(x 1 y(4))
		unifyVariable(y(7))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(9) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(y(5))
		putRecord('definitionCopy' 6 x(0))
		setValue(y(4))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(6))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(134233)	definition(x(1) 134249 pid('' 1 pos('./compiler/CodeEmitter.oz' 646 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(134233)
lbl(134249)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(0) none 134305)
lbl(134294)	moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariable(x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(134305)	putRecord('unify' 2 x(0))
		setValue(y(4))
		setValue(y(0))
		deAllocateL10
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134317)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(626)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134328)	allocateL8
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(x(2) y(4))
		move(x(0) y(5))
		move(x(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putRecord('exHandler' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		move(y(1) x(1))
		putConstant(0 x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: AllocateThisTemp> false 3) 0)
		inlineAt(<M: LocalEnvsInhibited> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYYX(x(0) y(1) y(2) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(3) x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(6) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(134461)	getVoid(1)
		getVariable(x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugExit> false 2) 0)
		putConstant('popEx' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134477)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVoid(1)
		getVariable(x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('createCond' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(134551)	definition(x(0) 134701 pid('' 3 pos('./compiler/CodeEmitter.oz' 689 6) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(134688)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(134580)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(134635 [onScalar(nil 134610) onRecord('|' 2 134618)]))
lbl(134610)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134648)
lbl(134618)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134648)
lbl(134635)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(696)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134648)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(134688)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(134551)
lbl(134701)	move(x(0) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(134766)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134786)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createEnumOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134806)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createChoice' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134826)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('ask' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134845)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('wait' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134864)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('waitTop' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134883)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		getVoid(1)
		getVariable(x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('shallowGuard' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitGuard> false 1) 0)
		putConstant('shallowThen' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135040)	allocateL(11)
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		getVariable(x(0))
		move(y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		callBI('And' [x(0) x(1)]#[x(2)])
		move(y(8) x(0))
		callBI('And' [x(2) x(0)]#[x(1)])
		move(y(5) x(0))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(8))
		testLiteral(y(7) none 135181)
lbl(135126)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135184)
lbl(135181)	unify(y(8) y(7))
lbl(135184)	move(y(5) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('testBool' 3 x(0))
		setValue(y(8))
		setValue(y(7))
		setValue(y(10))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135333)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(y(8) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(1) x(0))
		move(g(9) x(3))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		putRecord('#' 2 x(1))
		setValue(y(8))
		setValue(y(9))
		putRecord('testBI' 3 x(0))
		setValue(y(0))
		setValue(x(1))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(6) x(0))
		deAllocateL10
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(135532)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testNumber' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135554)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testLiteral' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135576)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(7))
		testLiteral(y(5) none 135684)
lbl(135629)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as pattern case arbiter')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(3) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135687)
lbl(135684)	unify(y(7) y(5))
lbl(135687)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('ht' 2 x(1))
		setValue(y(5))
		setVariable(y(8))
		putRecord('match' 2 x(0))
		setValue(y(7))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(3))
lbl(135738)	definition(x(1) 135850 pid('' 2 pos('./compiler/CodeEmitter.oz' 844 6) nil 5) unit [x(3) g(0) y(6)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		createVariable(y(0))
		createVariable(y(1))
		match(x(0) ht(135793 [onRecord('onScalar' 2 135757) onRecord('onRecord' 3 135773)]))
lbl(135757)	getVarVar(x(0) x(3))
		unify(y(0) x(3))
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(y(1))
		branch(135806)
lbl(135773)	getVarVar(x(0) x(3))
		getVariable(x(4))
		unify(y(0) x(4))
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		branch(135806)
lbl(135793)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(851)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(135806)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: Dereference> false 3) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(1) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		deAllocateL3
		genCall(gci(g(1) true <M: RestoreAllRegisterMappings> true 1) 0)
		endDefinition(135738)
lbl(135850)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135903)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		move(g(9) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('thread' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(contLabels x(0) cache)
		putConstant(nil x(1))
		inlineAssign(contLabels x(1) cache)
		inlineAt(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYXY(x(0) y(5) x(1) y(6))
		testBool(y(3) 136001 136011)
		branch(136022)
lbl(136001)	putConstant(true x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		branch(136022)
lbl(136011)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(878)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(136022)	moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(6) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(5) x(0))
		inlineAssign(contLabels x(0) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(136071)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVoid(1)
		getVariable(y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(3) 136144 136133)
		getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setConstant('undetermined variable used as lock')
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('code generation warning' x(2))
		putConstant('lock suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		branch(136144)
lbl(136133)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(889)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136144)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(1) x(0))
		putConstant('lock' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('lockThread' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136174)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136211 136216)
		unify(y(2) y(3))
		branch(136227)
lbl(136211)	unify(y(2) y(4))
		branch(136227)
lbl(136216)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136227)	move(y(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		putConstant('lock' x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(136264)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(131059)
lbl(136279)	definition(x(7) 136305 pid('Emitter,EmitVInstr/slow' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 938> 3)
		endDefinition(136279)
lbl(136305)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: EmitVInstr>)
		setValue(x(7))
		setValue(x(9))
lbl(136315)	definition(x(7) 136484 pid('Emitter,DebugEntry/fast' 2 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) <Q: 939> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136469 136471)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136424 [onRecord(fineStep 3 136348) onRecord(fineStep 6 136367) onRecord(coarseStep 3 136386) onRecord(coarseStep 6 136405)]))
lbl(136348)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136437)
lbl(136367)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136437)
lbl(136386)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136437)
lbl(136405)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136437)
lbl(136424)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(926)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136437)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugEntry' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136469)	deAllocateL6
		return
lbl(136471)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136315)
lbl(136484)	definition(x(9) 136519 pid('Emitter,DebugEntry/slow' 1 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 939> 5)
		endDefinition(136484)
lbl(136519)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: DebugEntry>)
		setValue(x(9))
		setValue(x(7))
lbl(136529)	definition(x(7) 136702 pid('Emitter,DebugExit/fast' 2 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) <Q: 940> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136687 136689)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136642 [onRecord(fineStep 3 136562) onRecord(fineStep 6 136581) onRecord(coarseStep 3 136602) onRecord(coarseStep 6 136621)]))
lbl(136562)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136655)
lbl(136581)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136655)
lbl(136602)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136655)
lbl(136621)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136655)
lbl(136642)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(942)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136655)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugExit' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136687)	deAllocateL6
		return
lbl(136689)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(933)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136529)
lbl(136702)	definition(x(9) 136737 pid('Emitter,DebugExit/slow' 1 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 940> 5)
		endDefinition(136702)
lbl(136737)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: DebugExit>)
		setValue(x(9))
		setValue(x(7))
lbl(136747)	definition(x(7) 137158 pid('Emitter,TryToUseAsSendMsg/fast' 7 pos('./compiler/CodeEmitter.oz' 949 6) nil 7) <Q: 941> [y(1)])
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136769 137145)
		getLiteral(false x(6))
		return
lbl(136769)	allocateL(11)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 137129 137134)
		testRecord(y(4) vCall 5 136883)
lbl(136804)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(136883)
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136820)	shallowThen
		moveMoveXYXY(x(0) y(4) x(2) y(6))
		moveMoveXYYX(x(3) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136867 136872)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136867)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136872)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(957)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136883)	testRecord(y(4) vGenCall 8 136974)
lbl(136888)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(136974)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136911)	shallowThen
		moveMoveXYXY(x(0) y(4) x(3) y(6))
		moveMoveXYYX(x(4) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136958 136963)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136958)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(964)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136974)	testRecord(y(4) vCallBuiltin 5 137124)
lbl(136979)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		createVariable(y(4))
		shallowGuard(137124)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getListValVar(x(1) y(0) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(137010)	shallowThen
		moveMoveXYXY(x(0) y(6) x(4) y(7))
		moveMoveXYXY(x(2) y(8) x(3) y(9))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(10) 137108 137113)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putList(x(3))
		setValue(y(6))
		setConstant(nil)
		putRecord('#' 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord('callBI' 2 x(0))
		setConstant(newObject)
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(137108)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137113)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(972)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137124)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137129)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137134)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(955)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137145)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(954)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136747)
lbl(137158)	definition(x(9) 137223 pid('Emitter,TryToUseAsSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 949 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 941> 15)
		endDefinition(137158)
lbl(137223)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137233)	definition(x(7) 137783 pid('Emitter,EmitSendMsg/fast' 6 pos('./compiler/CodeEmitter.oz' 989 6) nil 8) <Q: 942> [y(1) g(15) g(1)])
		allocateL9
		putRecord('sendMsg' 4 x(6))
		setValue(x(1))
		setVariable(x(7))
		setValue(x(2))
		setConstant(cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		createVariable(y(6))
		testBI('IsInt' [x(2)]#[x(1)] 137278)
		unify(y(6) x(2))
		branch(137287)
lbl(137278)	move(x(2) x(0))
		move(y(6) x(1))
		genFastCall(<P: 24> 4)
lbl(137287)	move(y(6) x(0))
		inlinePlus1(x(0) x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: ReserveTemps> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setVariable(y(7))
		getSelf(x(4))
lbl(137309)	definition(x(1) 137692 pid('' 4 pos('./compiler/CodeEmitter.oz' 999 3) nil 13) unit [x(4) g(2) g(0)])
		move(g(0) x(4))
		setSelf(x(4))
		shallowGuard(137679)
		getRecord('#' 2 x(2))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(137330)	shallowThen
		match(x(1) ht(137666 [onRecord(number 1 137334) onRecord(literal 1 137396) onRecord(value 1 137458) onRecord(record 3 137475)]))
lbl(137334)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137396)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137458)	getVariable(x(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyValue(x(6))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(137475)	allocateL8
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(0) x(2))
		testBI('Dictionary.member' [x(1) x(2)]#[x(7)] 137586)
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('move' 2 x(5))
		unifyValVar(y(7) x(6))
		getRecord(x 1 x(6))
		unifyVariable(x(7))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(7))
		deAllocateL8
		return
lbl(137586)	inlineMinus1(x(0) x(2))
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(2) true <M: AllocateThisShortLivedTemp> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyLiteral('skip')
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		deAllocateL8
		return
lbl(137666)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1016)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137679)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(999)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137309)
lbl(137692)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 83> 8)
		inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(x(0) y(1))
		createVariable(y(8))
		testLiteral(y(3) nil 137731)
lbl(137726)	unify(y(8) y(1))
		branch(137737)
lbl(137731)	getList(y(8))
		unifyValue(y(3))
		unifyValue(y(1))
lbl(137737)	move(y(8) x(0))
		inlineAssign(continuations x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		moveMoveYXYX(y(2) x(6) y(7) x(7))
		putConstant(any x(0))
		createVariable(x(5))
		genCall(gci(g(0) true <M: GenericEmitCall> false 8) 0)
		putList(x(0))
		setValue(y(3))
		setValue(y(1))
		inlineAssign(continuations x(0) cache)
		deAllocateL9
		return
		endDefinition(137233)
lbl(137783)	definition(x(9) 137842 pid('Emitter,EmitSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 989 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 942> 13)
		endDefinition(137783)
lbl(137842)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: EmitSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137852)	definition(x(7) 138614 pid('Emitter,GenericEmitCall/fast' 8 pos('./compiler/CodeEmitter.oz' 1026 6) nil 11) <Q: 943> [g(9) g(2) y(1)])
		allocateL(11)
		inlineAt(continuations x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		match(x(8) ht(138054 [onScalar(nil 138067) onRecord('|' 2 137888)]))
lbl(137888)	getVariable(x(8))
		inlineDot(x(8) 1 x(8) cache)
		callBI('BitArray.toList' [x(8)]#[x(9)])
		getSelf(x(8))
lbl(137901)	definition(x(10) 138043 pid('' 1 pos('./compiler/CodeEmitter.oz' 1061 6) nil 5) unit [x(8) g(1) g(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(137966 [onScalar(none 137926) onRecord(x 1 137927)]))
lbl(137926)	return
lbl(137927)	allocateL3
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 137964)
lbl(137943)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(137964)	deAllocateL3
		return
lbl(137966)	allocateL3
		move(x(0) y(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 138028 138030)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 138026)
lbl(137996)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(138026)	deAllocateL3
		return
lbl(138028)	deAllocateL3
		return
lbl(138030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1073)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137901)
lbl(138043)	move(x(9) x(0))
		move(x(10) x(1))
		genFastCall(<P: 34> 4)
		branch(138067)
lbl(138054)	putRecord(kernel 3 x(9))
		setConstant(noElse)
		setConstant(1088)
		setValue(x(8))
		callBI('Exception.raiseError' [x(9)]#nil)
lbl(138067)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		createVariable(y(8))
		testLiteral(y(0) none 138092)
lbl(138087)	getLiteral(none y(8))
		branch(138498)
lbl(138092)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testLiteral(y(9) none 138211)
lbl(138105)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable called ')
		setConstant('as procedure')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(6) x(0))
		putConstant('code generation warning' x(2))
		putConstant('application suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138173 138189)
lbl(138163)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		branch(138200)
lbl(138173)	testLiteral(y(0) non_y 138179)
		branch(138163)
lbl(138179)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		branch(138200)
lbl(138189)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1114)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138200)	putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138414)
lbl(138211)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138359 138403)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138297)
lbl(138237)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(9) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(y(5) x(2))
		testLT(x(1) x(2) x(3) 138414)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138414)
lbl(138297)	testLiteral(y(0) non_y 138414)
lbl(138301)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testRecord(y(9) x 1 138414)
lbl(138315)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(0) x(1) x(2) 138414)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138414)
lbl(138359)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138414)
lbl(138372)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138414)
lbl(138403)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138414)	match(y(0) ht(138485 [onScalar(non_y 138417) onScalar(any 138475)]))
lbl(138417)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testRecord(y(0) y 1 138470)
lbl(138431)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(9) none 138465)
lbl(138444)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138498)
lbl(138465)	unify(y(8) y(9))
		branch(138498)
lbl(138470)	unify(y(8) y(0))
		branch(138498)
lbl(138475)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		branch(138498)
lbl(138485)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1177)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138498)	moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(2) x(2))
		genCall(gci(g(2) true <M: SetArguments> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 138571 138576)
		testRecord(y(8) x 1 138566)
lbl(138526)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(1) x(0) x(2) 138555)
		getRecord(x 1 y(4))
		unifyValue(y(5))
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(4))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138558)
lbl(138555)	unify(y(4) y(8))
lbl(138558)	move(y(5) x(0))
		inlinePlus1(x(0) x(2))
		branch(138587)
lbl(138566)	unify(y(4) y(8))
		branch(138587)
lbl(138571)	unify(y(4) y(8))
		branch(138587)
lbl(138576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138587)	move(y(6) x(0))
		putConstant('call' x(1))
		genCall(gci(g(2) true <M: DebugEntry> false 2) 0)
		move(y(3) x(0))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		move(y(6) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(2) true <M: DebugExit> true 2) 0)
		endDefinition(137852)
lbl(138614)	definition(x(9) 138685 pid('Emitter,GenericEmitCall/slow' 1 pos('./compiler/CodeEmitter.oz' 1026 6) nil 9) unit nil)
		putConstant(8 x(8))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(8))
		inlineDot(x(0) 1 x(8) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		move(x(8) x(0))
		genFastCall(<Q: 943> 17)
		endDefinition(138614)
lbl(138685)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: GenericEmitCall>)
		setValue(x(9))
		setValue(x(7))
lbl(138695)	definition(x(7) 139450 pid('Emitter,SetArguments/fast' 3 pos('./compiler/CodeEmitter.oz' 1207 6) nil 5) <Q: 944> [y(1) g(16) g(1) g(3) g(2) g(10) g(7) g(5) g(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: EnterDelayedInits> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: Arity> x(0) cache)
		getSelf(x(2))
lbl(138723)	definition(x(1) 139277 pid('' 2 pos('./compiler/CodeEmitter.oz' 1233 3) nil 7) unit [x(2) g(2) g(3) g(4) g(5) g(6) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(139264)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(138742)	shallowThen
		inlineMinus1(x(0) x(1))
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(5)] 138772)
		putConstant(0 x(0))
		testLE(x(0) x(3) x(1) 138771)
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.set' [x(0) x(3)]#nil)
lbl(138771)	return
lbl(138772)	inlineAt(<M: Temporaries> x(0) cache)
		putConstant(none x(5))
		callBI('Dictionary.condGet' [x(0) x(3) x(5)]#[x(6)])
		match(x(6) ht(138909 [onRecord(vEquateNumber 4 138786) onRecord(vEquateLiteral 4 138829) onRecord(vGetSelf 3 138872)]))
lbl(138786)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138829)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138872)	inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		putRecord(x 1 x(4))
		setValue(x(1))
		putRecord('getSelf' 1 x(3))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		return
lbl(138909)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(6) true <M: GetTemp> false 2) 0)
		putRecord(x 1 x(0))
		setValue(y(2))
		createVariable(y(4))
		move(y(3) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 138946)
		getLiteral('skip' y(4))
		branch(139249)
lbl(138946)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(6) true <M: GetPerm> false 2) 0)
		testLiteral(y(5) none 139236)
lbl(138959)	match(y(3) ht(139223 [onScalar(none 138962) onRecord(x 1 139181)]))
lbl(138962)	inlineAt(<M: LastAliveRS> x(0) cache)
		move(y(0) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 139117 139170)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 139064)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		getRecord(x 1 y(1))
		unifyVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(1) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139249)
lbl(139064)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(6) true <M: AllocateThisTemp> false 3) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		inlineAt(<M: AdjDict> x(0) cache)
		inlineAt(<M: AdjDict> x(1) cache)
		move(y(2) x(2))
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		putList(x(1))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
		getLiteral('skip' y(4))
		branch(139249)
lbl(139117)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: IsLast> false 2) 0)
		testBool(y(1) 139144 139159)
		getRecord('createVariable' 1 y(4))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139249)
lbl(139144)	getRecord(delayedCreateVariableMove 2 y(4))
		unifyValVar(y(0) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139249)
lbl(139159)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1281)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139170)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1265)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139181)	getVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(3) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139249)
lbl(139223)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1290)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139236)	getRecord('move' 2 y(4))
		unifyValVar(y(5) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
lbl(139249)	inlineAt(<M: DelayedInitsDict> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(139264)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1233)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(138723)
lbl(139277)	move(y(1) x(0))
		genFastCall(<P: 89> 4)
		putConstant(0 x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		putConstant(nil x(4))
		inlineAssign(<M: Stack> x(4) cache)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139309)	definition(x(3) 139337 pid('' 1 pos('./compiler/CodeEmitter.oz' 1305 3) nil 4) unit [x(4) g(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DoneDict> x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 139330)
		return
lbl(139330)	createVariable(x(1))
		genCall(gci(g(2) true <M: OrderMoves> true 2) 0)
		endDefinition(139309)
lbl(139337)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139359)	definition(x(3) 139413 pid('' 1 pos('./compiler/CodeEmitter.oz' 1313 3) nil 4) unit [x(4) g(7) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DelayedInitsDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		match(x(3) ht(139405 [onScalar('skip' 139381) onRecord('move' 2 139382) onRecord(delayedCreateVariableMove 2 139383)]))
lbl(139381)	return
lbl(139382)	return
lbl(139383)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariableMove' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL2
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139405)	move(x(3) x(0))
		genCall(gci(g(2) true <M: Emit> true 1) 0)
		endDefinition(139359)
lbl(139413)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: AdjDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: DoneDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL2
		return
		endDefinition(138695)
lbl(139450)	definition(x(9) 139491 pid('Emitter,SetArguments/slow' 1 pos('./compiler/CodeEmitter.oz' 1207 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 944> 7)
		endDefinition(139450)
lbl(139491)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: SetArguments>)
		setValue(x(9))
		setValue(x(7))
lbl(139501)	definition(x(7) 139560 pid('Emitter,EnterDelayedInits/fast' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 5) <Q: 945> [g(7) y(1)])
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(139545 [onScalar(nil 139514) onRecord('|' 2 139516)]))
lbl(139514)	deAllocateL1
		return
lbl(139516)	getVarVar(x(1) x(2))
		shallowGuard(139545)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(139529)	shallowThen
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.put' [x(0) x(3) x(4)]#nil)
		move(x(2) x(0))
		deAllocateL1
		genCall(gci(g(1) true <M: EnterDelayedInits> true 1) 0)
lbl(139545)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1331)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(139501)
lbl(139560)	definition(x(9) 139586 pid('Emitter,EnterDelayedInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 945> 3)
		endDefinition(139560)
lbl(139586)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(9))
		setValue(x(7))
lbl(139596)	definition(x(7) 139926 pid('Emitter,OrderMoves/fast' 2 pos('./compiler/CodeEmitter.oz' 1333 6) nil 7) <Q: 946> [g(7) g(2) y(1) g(5)])
		allocateL4
		inlineAt(<M: CurrentID> x(2) cache)
		inlineAt(<M: DoneDict> x(3) cache)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
		inlinePlus1(x(2) x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		inlineAt(<M: Stack> x(4) cache)
		putList(x(5))
		setValue(x(0))
		setValue(x(4))
		inlineAssign(<M: Stack> x(5) cache)
		inlineAt(<M: AdjDict> x(3) cache)
		putConstant(nil x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getSelf(x(4))
lbl(139653)	definition(x(6) 139716 pid('' 3 pos('./compiler/CodeEmitter.oz' 1338 4) nil 7) unit [x(4) g(1) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		putConstant(~1 x(5))
		callBI('Dictionary.condGet' [x(4) x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testNumber(x(6) ~1 139698)
lbl(139687)	move(x(1) x(0))
		move(y(2) x(1))
		genCall(gci(g(2) true <M: OrderMoves> false 2) 0)
		branch(139701)
lbl(139698)	unify(y(2) x(6))
lbl(139701)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Min' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(139653)
lbl(139716)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(6) x(1))
		move(y(1) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 139922)
		inlineAt(<M: Stack> x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(2) true <M: GetCycle> false 3) 0)
		testList(y(1) 139791)
lbl(139762)	getVarVar(x(0) x(1))
		testLiteral(x(1) nil 139791)
		inlineAt(<M: DelayedInitsDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) 'move' 2 139789)
lbl(139782)	move(x(2) x(0))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139789)	deAllocateL4
		return
lbl(139791)	testList(y(1) 139909)
lbl(139794)	getVarVar(y(0) y(1))
		putRecord(x 1 y(2))
		setVariable(x(1))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(1))
		putRecord(x 1 x(1))
		setValue(y(0))
		putRecord('move' 2 x(0))
		setValue(x(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(4))
lbl(139830)	definition(x(1) 139880 pid('' 3 pos('./compiler/CodeEmitter.oz' 1358 7) nil 7) unit [x(4) g(2)])
		allocateL2
		move(g(0) x(3))
		setSelf(x(3))
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord(x 1 x(6))
		setValue(x(0))
		putRecord('move' 2 x(4))
		setValue(x(5))
		setValue(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(139830)
lbl(139880)	moveMoveYXYX(y(1) x(0) y(0) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		putRecord(x 1 x(1))
		setValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139909)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1360)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139922)	deAllocateL4
		return
		endDefinition(139596)
lbl(139926)	definition(x(9) 139961 pid('Emitter,OrderMoves/slow' 1 pos('./compiler/CodeEmitter.oz' 1333 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 946> 5)
		endDefinition(139926)
lbl(139961)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: OrderMoves>)
		setValue(x(9))
		setValue(x(7))
lbl(139971)	definition(x(7) 140024 pid('Emitter,GetCycle/fast' 3 pos('./compiler/CodeEmitter.oz' 1363 6) nil 6) <Q: 947> [g(7) y(1)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		inlineAt(<M: Arity> x(5) cache)
		callBI('Dictionary.put' [x(4) x(1) x(5)]#nil)
		testBI('==' [x(0) x(1)]#[x(4)] 140012)
		getList(x(2))
		unifyValue(x(1))
		unifyLiteral(nil)
		inlineAssign(<M: Stack> x(3) cache)
		return
lbl(140012)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(1) true <M: GetCycle> true 3) 0)
		endDefinition(139971)
lbl(140024)	definition(x(9) 140065 pid('Emitter,GetCycle/slow' 1 pos('./compiler/CodeEmitter.oz' 1363 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 947> 7)
		endDefinition(140024)
lbl(140065)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: GetCycle>)
		setValue(x(9))
		setValue(x(7))
lbl(140075)	definition(x(7) 140248 pid('Emitter,CreateNonlinearRegs/fast' 3 pos('./compiler/CodeEmitter.oz' 1374 6) nil 3) <Q: 948> [y(1)])
		match(x(0) ht(140233 [onScalar(nil 140084) onRecord('|' 2 140088)]))
lbl(140084)	unify(x(2) x(1))
		return
lbl(140088)	allocateL5
		getVarVar(x(0) y(0))
		match(x(0) ht(140226 [onRecord(value 1 140095) onRecord(record 3 140201)]))
lbl(140095)	getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 140186)
lbl(140115)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 140160 140175)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140160)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140175)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140186)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140201)	getVoid(2)
		getVariable(x(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140226)	move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140233)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140075)
lbl(140248)	definition(x(9) 140289 pid('Emitter,CreateNonlinearRegs/slow' 1 pos('./compiler/CodeEmitter.oz' 1374 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 948> 7)
		endDefinition(140248)
lbl(140289)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(9))
		setValue(x(7))
lbl(140299)	definition(x(7) 140350 pid('Emitter,EmitRecordWrite/fast' 4 pos('./compiler/CodeEmitter.oz' 1397 6) nil 4) <Q: 949> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: EmitVArgsWrite> false 3) 0)
		putRecord('putRecord' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: EmitMultiple> true 2) 0)
		endDefinition(140299)
lbl(140350)	definition(x(9) 140397 pid('Emitter,EmitRecordWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1397 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 949> 9)
		endDefinition(140350)
lbl(140397)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140407)	definition(x(7) 140655 pid('Emitter,EmitVArgsWrite/fast' 3 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) <Q: 950> [y(1)])
		match(x(0) ht(140640 [onScalar(nil 140416) onRecord('|' 2 140420)]))
lbl(140416)	unify(x(1) x(2))
		return
lbl(140420)	allocateL8
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(140615 [onRecord(number 1 140434) onRecord(literal 1 140450) onRecord(predicateRef 1 140466) onRecord(value 1 140482) onRecord(record 3 140574)]))
lbl(140434)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140628)
lbl(140450)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140628)
lbl(140466)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setPredicateRef' 1 x(1))
		unifyValue(x(0))
		branch(140628)
lbl(140482)	getVariable(y(3))
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(5) none 140560)
lbl(140499)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 140526 140549)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVoid' 1 x(0))
		unifyNumber(1)
		branch(140628)
lbl(140526)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVariable' 1 x(0))
		unifyValue(y(5))
		branch(140628)
lbl(140549)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140560)	getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(5))
		branch(140628)
lbl(140574)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(x(1) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(7) x(2) y(5) x(3))
		genCall(gci(g(0) true <M: EmitRecordWrite> false 4) 0)
		getList(y(6))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(7))
		branch(140628)
lbl(140615)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1428)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(140628)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL8
		genCall(gci(g(0) true <M: EmitVArgsWrite> true 3) 0)
lbl(140640)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140407)
lbl(140655)	definition(x(9) 140696 pid('Emitter,EmitVArgsWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 950> 7)
		endDefinition(140655)
lbl(140696)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140706)	definition(x(7) 140812 pid('Emitter,EmitRecordRead/fast' 4 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) <Q: 951> [y(1)])
		allocateL2
		putRecord('getRecord' 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(3) y(0))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		genCall(gci(g(0) true <M: EmitVArgsRead> false 3) 0)
		getSelf(x(2))
lbl(140746)	definition(x(1) 140803 pid('' 1 pos('./compiler/CodeEmitter.oz' 1441 3) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(140790)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(record 3 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(140777)	shallowThen
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(6) x(3))
		genCall(gci(g(1) true <M: EmitRecordRead> true 4) 0)
lbl(140790)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140746)
lbl(140803)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(140706)
lbl(140812)	definition(x(9) 140859 pid('Emitter,EmitRecordRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 951> 9)
		endDefinition(140812)
lbl(140859)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: EmitRecordRead>)
		setValue(x(9))
		setValue(x(7))
lbl(140869)	definition(x(7) 141086 pid('Emitter,EmitVArgsRead/fast' 3 pos('./compiler/CodeEmitter.oz' 1445 6) nil 5) <Q: 952> [y(1)])
		match(x(0) ht(141071 [onScalar(nil 140878) onRecord('|' 2 140882)]))
lbl(140878)	unify(x(1) x(2))
		return
lbl(140882)	allocateL6
		getVarVar(y(0) x(3))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariable(y(3))
		match(y(0) ht(141046 [onRecord(number 1 140896) onRecord(literal 1 140912) onRecord(value 1 140928) onRecord(record 3 141012)]))
lbl(140896)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyNumber' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141059)
lbl(140912)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyLiteral' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141059)
lbl(140928)	getVariable(y(0))
		unify(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 141001)
lbl(140946)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 140970 140990)
		putRecord('unifyVoid' 1 x(0))
		setConstant(1)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141059)
lbl(140970)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141059)
lbl(140990)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141001)	putRecord('unifyValue' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141059)
lbl(141012)	move(x(1) y(4))
		createVariableMove(y(5) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		branch(141059)
lbl(141046)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1469)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141059)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitVArgsRead> true 3) 0)
lbl(141071)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1473)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140869)
lbl(141086)	definition(x(9) 141127 pid('Emitter,EmitVArgsRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1445 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 952> 7)
		endDefinition(141086)
lbl(141127)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(9))
		setValue(x(7))
lbl(141137)	definition(x(7) 141294 pid('Emitter,AllocateBuiltinArgs/fast' 6 pos('./compiler/CodeEmitter.oz' 1475 6) nil 6) <Q: 953> [y(1)])
		testList(x(1) 141277)
lbl(141146)	allocateL9
		getVarVar(x(1) y(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		getList(x(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		testBool(x(1) 141237 141247)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(8) none 141224)
lbl(141193)	move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141258)
lbl(141224)	putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141258)
lbl(141237)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(141258)
lbl(141247)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1480)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141258)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		deAllocateL9
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> true 6) 0)
lbl(141277)	getLiteral(nil x(2))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
		endDefinition(141137)
lbl(141294)	definition(x(9) 141353 pid('Emitter,AllocateBuiltinArgs/slow' 1 pos('./compiler/CodeEmitter.oz' 1475 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 953> 13)
		endDefinition(141294)
lbl(141353)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(9))
		setValue(x(7))
lbl(141363)	definition(x(7) 141505 pid('Emitter,AllocateBuiltinOutputs/fast' 4 pos('./compiler/CodeEmitter.oz' 1499 6) nil 4) <Q: 954> [y(1)])
		match(x(0) ht(141490 [onScalar(nil 141372) onRecord('|' 2 141379)]))
lbl(141372)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(141379)	allocateL8
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		createVariable(y(3))
		testBool(y(2) 141412 141465)
		move(x(3) y(4))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		unify(y(4) y(3))
		branch(141476)
lbl(141412)	moveMoveXYXY(x(3) y(4) x(0) y(5))
		move(x(2) y(6))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(7) none 141443)
lbl(141430)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		unify(y(4) y(3))
		branch(141476)
lbl(141443)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		branch(141476)
lbl(141465)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1501)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141476)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
lbl(141490)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141363)
lbl(141505)	definition(x(9) 141552 pid('Emitter,AllocateBuiltinOutputs/slow' 1 pos('./compiler/CodeEmitter.oz' 1499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 954> 9)
		endDefinition(141505)
lbl(141552)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(9))
		setValue(x(7))
lbl(141562)	definition(x(7) 141617 pid('Emitter,EmitUnifies/fast' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) <Q: 955> [y(1)])
		match(x(0) ht(141602 [onScalar(nil 141571) onRecord('|' 2 141572)]))
lbl(141571)	return
lbl(141572)	allocateL1
		getVarVar(x(1) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		putRecord('unify' 2 x(0))
		setValue(x(1))
		setValue(x(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitUnifies> true 1) 0)
lbl(141602)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1525)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141562)
lbl(141617)	definition(x(9) 141643 pid('Emitter,EmitUnifies/slow' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 955> 3)
		endDefinition(141617)
lbl(141643)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: EmitUnifies>)
		setValue(x(9))
		setValue(x(7))
lbl(141653)	definition(x(7) 141743 pid('Emitter,EmitGuard/fast' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 6) <Q: 956> [g(17) y(1)])
		allocateL4
		inlineAt(continuations x(1) cache)
		putRecord(vDummy 1 x(2))
		setVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testLiteral(y(0) nil 141688)
lbl(141683)	getLiteral(nil x(3))
		branch(141700)
lbl(141688)	inlineDot(x(0) 1 x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(3))
lbl(141700)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: PushContLabel> false 2) 0)
		putList(x(1))
		setValue(y(2))
		setValue(y(1))
		inlineAssign(continuations x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(continuations x(0) cache)
		move(y(3) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: PopContLabel> true 1) 0)
		endDefinition(141653)
lbl(141743)	definition(x(9) 141769 pid('Emitter,EmitGuard/slow' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 956> 3)
		endDefinition(141743)
lbl(141769)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: EmitGuard>)
		setValue(x(9))
		setValue(x(7))
lbl(141779)	definition(x(7) 142024 pid('Emitter,EmitDisjunction/fast' 6 pos('./compiler/CodeEmitter.oz' 1541 6) nil 6) <Q: 957> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(141834)	definition(x(0) 141984 pid('' 3 pos('./compiler/CodeEmitter.oz' 1550 3) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(141971)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(141863)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(141918 [onScalar(nil 141893) onRecord('|' 2 141901)]))
lbl(141893)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141931)
lbl(141901)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141931)
lbl(141918)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1557)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141931)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(141971)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(141834)
lbl(141984)	move(x(0) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(141779)
lbl(142024)	definition(x(9) 142083 pid('Emitter,EmitDisjunction/slow' 1 pos('./compiler/CodeEmitter.oz' 1541 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 957> 13)
		endDefinition(142024)
lbl(142083)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: EmitDisjunction>)
		setValue(x(9))
		setValue(x(7))
lbl(142093)	definition(x(7) 142400 pid('Emitter,EmitTestConstant/fast' 9 pos('./compiler/CodeEmitter.oz' 1568 6) nil 9) <Q: 958> [y(1)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(7) x(0))
		move(y(6) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(7) x(0) y(8) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(6) x(0))
		move(x(3) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(9))
		testLiteral(y(8) none 142235)
lbl(142180)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(5) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(1) x(0) y(9) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(142238)
lbl(142235)	unify(y(9) y(8))
lbl(142238)	move(y(6) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariable(x(3))
		marshalledFastCall(<R: tuple> 8)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: tuple> 8)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(142093)
lbl(142400)	definition(x(9) 142477 pid('Emitter,EmitTestConstant/slow' 1 pos('./compiler/CodeEmitter.oz' 1568 6) nil 10) unit nil)
		putConstant(9 x(9))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(9))
		inlineDot(x(0) 1 x(9) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		inlineDot(x(0) 9 x(8) cache)
		move(x(9) x(0))
		genFastCall(<Q: 958> 19)
		endDefinition(142400)
lbl(142477)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: EmitTestConstant>)
		setValue(x(9))
		setValue(x(7))
lbl(142487)	definition(x(7) 142712 pid('Emitter,DoInits/fast' 2 pos('./compiler/CodeEmitter.oz' 1603 6) nil 4) <Q: 959> [g(9) y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(1) nil 142545)
lbl(142503)	inlineAt(continuations x(1) cache)
		match(x(1) ht(142532 [onScalar(nil 142511) onRecord('|' 2 142516)]))
lbl(142511)	getLiteral(nil y(1))
		branch(142557)
lbl(142516)	getVariable(x(1))
		inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(142557)
lbl(142532)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1610)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(142545)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(142557)	getSelf(x(2))
lbl(142559)	definition(x(1) 142624 pid('' 1 pos('./compiler/CodeEmitter.oz' 1614 3) nil 2) unit [x(2) g(1)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 142620)
lbl(142584)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetTemp> false 2) 0)
		testLiteral(y(1) none 142599)
lbl(142597)	deAllocateL3
		return
lbl(142599)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142620)	deAllocateL3
		return
		endDefinition(142559)
lbl(142624)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(0) nil 142636)
lbl(142634)	deAllocateL2
		return
lbl(142636)	move(y(0) x(0))
		callBI('BitArray.toList' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(142644)	definition(x(1) 142703 pid('' 1 pos('./compiler/CodeEmitter.oz' 1628 6) nil 2) unit [x(3) g(1)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: IsFirst> false 2) 0)
		testBool(y(1) 142688 142690)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142688)	deAllocateL2
		return
lbl(142690)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1629)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142644)
lbl(142703)	move(x(2) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(142487)
lbl(142712)	definition(x(9) 142747 pid('Emitter,DoInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1603 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 959> 5)
		endDefinition(142712)
lbl(142747)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: DoInits>)
		setValue(x(9))
		setValue(x(7))
lbl(142757)	definition(x(7) 142808 pid('Emitter,PrepareShared/fast' 2 pos('./compiler/CodeEmitter.oz' 1636 6) nil 6) <Q: 960> [y(1)])
		testRecord(x(0) vShared 4 142802)
lbl(142768)	getVoid(2)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		putConstant(1 x(2))
		testLT(x(2) x(4) x(5) 142796)
		getLiteral(false x(1))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> true 2) 0)
lbl(142796)	move(x(3) x(0))
		genCall(gci(g(0) true <M: PrepareShared> true 2) 0)
lbl(142802)	getLiteral(true x(1))
		return
		endDefinition(142757)
lbl(142808)	definition(x(9) 142843 pid('Emitter,PrepareShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1636 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 960> 5)
		endDefinition(142808)
lbl(142843)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: PrepareShared>)
		setValue(x(9))
		setValue(x(7))
lbl(142853)	definition(x(7) 142921 pid('Emitter,PushContLabel/fast' 2 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) <Q: 961> [y(1)])
		allocateL2
		inlineAt(contLabels x(2) cache)
		unify(x(2) x(1))
		move(x(1) y(0))
		testLiteral(x(0) nil 142887)
lbl(142875)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 142906 142908)
lbl(142887)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putList(x(0))
		setValue(y(1))
		setValue(y(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL2
		return
lbl(142906)	deAllocateL2
		return
lbl(142908)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142853)
lbl(142921)	definition(x(9) 142956 pid('Emitter,PushContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 961> 5)
		endDefinition(142921)
lbl(142956)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: PushContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(142966)	definition(x(7) 143034 pid('Emitter,PopContLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) <Q: 962> [y(1)])
		allocateL1
		inlineAt(contLabels x(1) cache)
		move(x(0) y(0))
		testBI('\\=' [x(1) x(0)]#[x(2)] 143022)
lbl(142985)	inlineAt(contLabels x(1) cache)
		testList(x(1) 143009)
lbl(142993)	getVariable(x(1))
		putRecord('lbl' 1 x(2))
		setValue(x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(143022)
lbl(143009)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1659)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(143022)	move(y(0) x(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL1
		return
		endDefinition(142966)
lbl(143034)	definition(x(9) 143060 pid('Emitter,PopContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 962> 3)
		endDefinition(143034)
lbl(143060)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: PopContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(143070)	definition(x(7) 143104 pid('Emitter,Dereference/fast' 3 pos('./compiler/CodeEmitter.oz' 1663 6) nil 3) <Q: 963> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
		endDefinition(143070)
lbl(143104)	definition(x(9) 143145 pid('Emitter,Dereference/slow' 1 pos('./compiler/CodeEmitter.oz' 1663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 963> 7)
		endDefinition(143104)
lbl(143145)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: Dereference>)
		setValue(x(9))
		setValue(x(7))
lbl(143155)	definition(x(7) 143248 pid('Emitter,DereferenceSub/fast' 3 pos('./compiler/CodeEmitter.oz' 1667 6) nil 5) <Q: 964> [y(1)])
		match(x(0) ht(143242 [onScalar(nil 143164) onRecord(vShared 4 143195)]))
lbl(143164)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143182 [onScalar(nil 143172) onRecord('|' 2 143176)]))
lbl(143172)	unify(x(2) x(1))
		return
lbl(143176)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(143182)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1673)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143195)	allocateL3
		getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(0) y(1))
		move(x(3) y(2))
		testLiteral(y(2) nil 143230)
lbl(143216)	inlineAt(contLabels x(4) cache)
		testLiteral(x(4) nil 143230)
lbl(143225)	unify(y(0) x(1))
		deAllocateL3
		return
lbl(143230)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
lbl(143242)	unify(x(2) x(1))
		return
		endDefinition(143155)
lbl(143248)	definition(x(9) 143289 pid('Emitter,DereferenceSub/slow' 1 pos('./compiler/CodeEmitter.oz' 1667 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 964> 7)
		endDefinition(143248)
lbl(143289)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: DereferenceSub>)
		setValue(x(9))
		setValue(x(7))
lbl(143299)	definition(x(7) 143327 pid('Emitter,DeallocateAndReturn/fast' 0 pos('./compiler/CodeEmitter.oz' 1684 6) nil 2) <Q: 965> [y(1)])
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('deAllocateL' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
		endDefinition(143299)
lbl(143327)	definition(x(9) 143341 pid('Emitter,DeallocateAndReturn/slow' 1 pos('./compiler/CodeEmitter.oz' 1684 6) nil 1) unit nil)
		getLiteral(<M: DeallocateAndReturn> x(0))
		genFastCall(<Q: 965> 1)
		endDefinition(143327)
lbl(143341)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(9))
		setValue(x(7))
lbl(143351)	definition(x(7) 143464 pid('Emitter,MayAllocateEnvLocally/fast' 3 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) <Q: 966> nil)
		inlineAt(<M: LocalEnvsInhibited> x(3) cache)
		testBool(x(3) 143370 143451)
		getLiteral(false x(2))
		return
lbl(143370)	allocateL1
		move(x(2) y(0))
		testBool(x(1) 143435 143440)
lbl(143378)	testLiteral(x(0) nil 143435)
lbl(143382)	inlineAt(contLabels x(0) cache)
		testLiteral(x(0) nil 143435)
lbl(143391)	inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 143435)
lbl(143400)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 143435)
lbl(143412)	putConstant(0 x(0))
		inlineAt(<M: LocalEnvSize> x(1) cache)
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		getLiteral(true y(0))
		deAllocateL1
		return
lbl(143435)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(143440)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143451)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143351)
lbl(143464)	definition(x(9) 143505 pid('Emitter,MayAllocateEnvLocally/slow' 1 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 966> 7)
		endDefinition(143464)
lbl(143505)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(9))
		setValue(x(7))
lbl(143515)	definition(x(7) 143611 pid('Emitter,EmitAddrInLocalEnv/fast' 2 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) <Q: 967> [y(1)])
		testBool(x(1) 143595 143598)
		allocateL1
		testRecord(x(0) vShared 4 143536)
lbl(143531)	genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> false 1) 0)
		branch(143562)
lbl(143536)	inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
lbl(143562)	inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(~1 x(0))
		inlineAssign(<M: HighestEverY> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		deAllocateL1
		return
lbl(143595)	genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(143598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1707)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143515)
lbl(143611)	definition(x(9) 143646 pid('Emitter,EmitAddrInLocalEnv/slow' 1 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 967> 5)
		endDefinition(143611)
lbl(143646)	putRecord('#' [1 2 fast] x(46))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(9))
		setValue(x(7))
lbl(143656)	definition(x(7) 143799 pid('Emitter,EmitAddrInLocalEnvShared/fast' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 4) <Q: 968> [y(1) g(1) g(7)])
		testRecord(x(0) vShared 4 143769)
lbl(143667)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(1) nil 143714)
lbl(143679)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143701 [onScalar(nil 143687) onRecord('|' 2 143690)]))
lbl(143687)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(143690)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143701)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1728)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143714)	inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 143735)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143735)	allocateL1
		inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		putRecord('lbl' 1 x(2))
		setValue(x(0))
		move(x(1) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> true 1) 0)
lbl(143769)	allocateL1
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(143656)
lbl(143799)	definition(x(9) 143825 pid('Emitter,EmitAddrInLocalEnvShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 968> 3)
		endDefinition(143799)
lbl(143825)	putRecord('#' [1 2 fast] x(47))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(9))
		setValue(x(7))
lbl(143835)	definition(x(7) 143867 pid('Emitter,IsFirst/fast' 2 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) <Q: 969> [y(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		putConstant(none x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(143835)
lbl(143867)	definition(x(9) 143902 pid('Emitter,IsFirst/slow' 1 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 969> 5)
		endDefinition(143867)
lbl(143902)	putRecord('#' [1 2 fast] x(48))
		setConstant(<M: IsFirst>)
		setValue(x(9))
		setValue(x(7))
lbl(143912)	definition(x(7) 143964 pid('Emitter,IsLast/fast' 2 pos('./compiler/CodeEmitter.oz' 1751 6) nil 4) <Q: 970> [g(18)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 143932)
		getLiteral(false x(1))
		return
lbl(143932)	inlineAt(continuations x(2) cache)
		testList(x(2) 143958)
lbl(143940)	getVariable(x(2))
		inlineDot(x(2) 1 x(2) cache)
		callBI('BitArray.test' [x(2) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(143958)	getLiteral(true x(1))
		return
		endDefinition(143912)
lbl(143964)	definition(x(9) 143999 pid('Emitter,IsLast/slow' 1 pos('./compiler/CodeEmitter.oz' 1751 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 970> 5)
		endDefinition(143964)
lbl(143999)	putRecord('#' [1 2 fast] x(49))
		setConstant(<M: IsLast>)
		setValue(x(9))
		setValue(x(7))
lbl(144009)	definition(x(7) 144055 pid('Emitter,DoesNotOccurIn/fast' 3 pos('./compiler/CodeEmitter.oz' 1760 6) nil 5) <Q: 971> [g(18)])
		inlineAt(minReg x(3) cache)
		testLT(x(0) x(3) x(4) 144029)
		getLiteral(false x(2))
		return
lbl(144029)	testLiteral(x(1) nil 144037)
lbl(144033)	getLiteral(true x(2))
		return
lbl(144037)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.test' [x(1) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(144009)
lbl(144055)	definition(x(9) 144096 pid('Emitter,DoesNotOccurIn/slow' 1 pos('./compiler/CodeEmitter.oz' 1760 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 971> 7)
		endDefinition(144055)
lbl(144096)	putRecord('#' [1 2 fast] x(50))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(9))
		setValue(x(7))
lbl(144106)	definition(x(7) 144175 pid('Emitter,EmitInitialization/fast' 2 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) <Q: 972> [y(1)])
		match(x(0) ht(144160 [onRecord(vEquateNumber 4 144115) onRecord(vEquateLiteral 4 144130) onRecord(vGetSelf 3 144145)]))
lbl(144115)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144130)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144145)	getRecord(x 1 x(1))
		unifyVoid(1)
		putRecord('getSelf' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144160)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(144106)
lbl(144175)	definition(x(9) 144210 pid('Emitter,EmitInitialization/slow' 1 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 972> 5)
		endDefinition(144175)
lbl(144210)	putRecord('#' [1 2 fast] x(51))
		setConstant(<M: EmitInitialization>)
		setValue(x(9))
		setValue(x(7))
lbl(144220)	definition(x(7) 144355 pid('Emitter,GetReg/fast' 2 pos('./compiler/CodeEmitter.oz' 1779 6) nil 5) <Q: 973> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144309 [onScalar(none 144240) onRecord(y 1 144301) onRecord(g 1 144305)]))
lbl(144240)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144286)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144286)	inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
lbl(144301)	unify(x(1) x(4))
		return
lbl(144305)	unify(x(1) x(4))
		return
lbl(144309)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		testRecord(y(1) vGetSelf 3 144341)
lbl(144336)	genCall(gci(g(3) true <M: PredictTemp> false 2) 0)
		branch(144344)
lbl(144341)	genCall(gci(g(3) true <M: PredictReg> false 2) 0)
lbl(144344)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144220)
lbl(144355)	definition(x(9) 144390 pid('Emitter,GetReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 973> 5)
		endDefinition(144355)
lbl(144390)	putRecord('#' [1 2 fast] x(52))
		setConstant(<M: GetReg>)
		setValue(x(9))
		setValue(x(7))
lbl(144400)	definition(x(7) 144523 pid('Emitter,GetPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1806 6) nil 5) <Q: 974> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144478 [onScalar(none 144420) onRecord(y 1 144470) onRecord(g 1 144474)]))
lbl(144420)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144466)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144466)	getLiteral(none x(1))
		return
lbl(144470)	unify(x(1) x(4))
		return
lbl(144474)	unify(x(1) x(4))
		return
lbl(144478)	testRecord(x(4) vGetSelf 3 144487)
lbl(144483)	getLiteral(none x(1))
		return
lbl(144487)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(3) true <M: AllocatePerm> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144400)
lbl(144523)	definition(x(9) 144558 pid('Emitter,GetPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1806 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 974> 5)
		endDefinition(144523)
lbl(144558)	putRecord('#' [1 2 fast] x(53))
		setConstant(<M: GetPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(144568)	definition(x(7) 144632 pid('Emitter,GetTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1829 6) nil 5) <Q: 975> [g(2) g(10) y(1)])
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144596 [onScalar(none 144588) onRecord(x 1 144592)]))
lbl(144588)	getLiteral(none x(1))
		return
lbl(144592)	unify(x(1) x(4))
		return
lbl(144596)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(2) true <M: PredictTemp> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(2) true <M: EmitInitialization> true 2) 0)
		endDefinition(144568)
lbl(144632)	definition(x(9) 144667 pid('Emitter,GetTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1829 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 975> 5)
		endDefinition(144632)
lbl(144667)	putRecord('#' [1 2 fast] x(54))
		setConstant(<M: GetTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144677)	definition(x(7) 144748 pid('Emitter,ReserveTemps/fast' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 4) <Q: 976> nil)
		inlineAt(<M: HighestEverX> x(1) cache)
		testLE(x(0) x(1) x(2) 144732)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(1) x(0) x(2) 144731)
		allocateL1
		inlineAt(<M: UsedX> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 925> 6)
		move(y(0) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		deAllocateL1
		return
lbl(144731)	return
lbl(144732)	inlineMinus1(x(0) x(1))
		inlineAssign(<M: HighestEverX> x(1) cache)
		inlineAssign(<M: LowestFreeX> x(0) cache)
		return
		endDefinition(144677)
lbl(144748)	definition(x(9) 144774 pid('Emitter,ReserveTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 976> 3)
		endDefinition(144748)
lbl(144774)	putRecord('#' [1 2 fast] x(55))
		setConstant(<M: ReserveTemps>)
		setValue(x(9))
		setValue(x(7))
lbl(144784)	definition(x(7) 144899 pid('Emitter,AllocateAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1855 6) nil 4) <Q: 977> [y(1) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 144892)
lbl(144806)	inlineAt(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(1))
		move(x(0) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: HighestEverX> x(0) cache)
		move(y(2) x(1))
		testLT(x(0) x(1) x(2) 144857)
lbl(144852)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(144857)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(144892)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(144784)
lbl(144899)	definition(x(9) 144934 pid('Emitter,AllocateAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1855 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 977> 5)
		endDefinition(144899)
lbl(144934)	putRecord('#' [1 2 fast] x(56))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144944)	definition(x(7) 145051 pid('Emitter,AllocateThisTemp/fast' 3 pos('./compiler/CodeEmitter.oz' 1867 6) nil 5) <Q: 978> [g(7)])
		allocateL4
		inlineAt(<M: LowestFreeX> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('==' [x(3) x(0)]#[x(4)] 144996)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(144996)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		testLT(x(0) x(1) x(2) 145014)
lbl(145009)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(145014)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(2))
		unifyValue(y(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(144944)
lbl(145051)	definition(x(9) 145092 pid('Emitter,AllocateThisTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1867 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 978> 7)
		endDefinition(145051)
lbl(145092)	putRecord('#' [1 2 fast] x(57))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145102)	definition(x(7) 145124 pid('Emitter,AllocateShortLivedTemp/fast' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) <Q: 979> [y(1)])
		inlineAt(<M: LowestFreeX> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateThisShortLivedTemp> true 2) 0)
		endDefinition(145102)
lbl(145124)	definition(x(9) 145150 pid('Emitter,AllocateShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 979> 3)
		endDefinition(145124)
lbl(145150)	putRecord('#' [1 2 fast] x(58))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145160)	definition(x(7) 145282 pid('Emitter,AllocateThisShortLivedTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1881 6) nil 5) <Q: 980> [g(7)])
		allocateL3
		inlineAt(<M: LowestFreeX> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('==' [x(2) x(0)]#[x(3)] 145209)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(145209)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145242 145231)
		inlineAssign(<M: HighestEverX> x(1) cache)
		branch(145242)
lbl(145231)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145242)	inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(x 1 y(1))
		unifyValue(y(0))
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		deAllocateL3
		return
		endDefinition(145160)
lbl(145282)	definition(x(9) 145317 pid('Emitter,AllocateThisShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1881 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 980> 5)
		endDefinition(145282)
lbl(145317)	putRecord('#' [1 2 fast] x(59))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145327)	definition(x(7) 145399 pid('Emitter,AllocateAndInitializeAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1893 6) nil 2) <Q: 981> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 145392)
lbl(145349)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145380)
lbl(145370)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145380)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145392)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145327)
lbl(145399)	definition(x(9) 145434 pid('Emitter,AllocateAndInitializeAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1893 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 981> 5)
		endDefinition(145399)
lbl(145434)	putRecord('#' [1 2 fast] x(60))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145444)	definition(x(7) 145558 pid('Emitter,AllocateUnnamedPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1904 6) nil 4) <Q: 982> [y(1) g(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145551)
lbl(145466)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(1) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: HighestEverY> x(0) cache)
		testLT(x(0) x(1) x(2) 145516)
		inlineAssign(<M: HighestEverY> x(1) cache)
lbl(145516)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(145551)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145444)
lbl(145558)	definition(x(9) 145593 pid('Emitter,AllocateUnnamedPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1904 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 982> 5)
		endDefinition(145558)
lbl(145593)	putRecord('#' [1 2 fast] x(61))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145603)	definition(x(7) 145900 pid('Emitter,AllocatePerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1917 6) nil 5) <Q: 983> [y(1) g(2) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145893)
lbl(145625)	getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		createVariable(y(2))
		testBool(x(0) 145776 145814)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		putConstant('' x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) '' 145697)
lbl(145657)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		branch(145737)
lbl(145697)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(3) y(3))
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 926> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(145737)	inlineAt(<M: LowestFreeY> x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 145825)
		inlineAt(<M: UsedY> x(0) cache)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145825)
lbl(145776)	inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) y(2))
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145825)
lbl(145814)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1919)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145825)	inlineAt(<M: HighestEverY> x(0) cache)
		move(y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145858 145847)
		inlineAssign(<M: HighestEverY> x(1) cache)
		branch(145858)
lbl(145847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1936)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145858)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(145893)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(145603)
lbl(145900)	definition(x(9) 145935 pid('Emitter,AllocatePerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1917 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 983> 5)
		endDefinition(145900)
lbl(145935)	putRecord('#' [1 2 fast] x(62))
		setConstant(<M: AllocatePerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145945)	definition(x(7) 145987 pid('Emitter,CopyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1944 6) nil 6) <Q: 984> [g(7) g(5)])
		getRecord(x 1 x(0))
		unifyVariable(x(2))
		inlineAt(<M: UsedX> x(3) cache)
		inlineAt(<M: UsedX> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.put' [x(2) x(1) x(0)]#nil)
		return
		endDefinition(145945)
lbl(145987)	definition(x(9) 146022 pid('Emitter,CopyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1944 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 984> 5)
		endDefinition(145987)
lbl(146022)	putRecord('#' [1 2 fast] x(63))
		setConstant(<M: CopyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(146032)	definition(x(7) 146102 pid('Emitter,CopyPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1948 6) nil 6) <Q: 985> [g(7) g(5)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(146072 [onRecord(y 1 146047) onRecord(g 1 146070)]))
lbl(146047)	getVariable(x(2))
		inlineAt(<M: UsedY> x(3) cache)
		inlineAt(<M: UsedY> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		branch(146085)
lbl(146070)	branch(146085)
lbl(146072)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1952)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(146085)	inlineAt(<M: Permanents> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
		endDefinition(146032)
lbl(146102)	definition(x(9) 146137 pid('Emitter,CopyPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1948 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 985> 5)
		endDefinition(146102)
lbl(146137)	putRecord('#' [1 2 fast] x(64))
		setConstant(<M: CopyPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(146147)	definition(x(7) 146231 pid('Emitter,FreeReg/fast' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 4) <Q: 986> [g(2) y(1) g(10)])
		allocateL1
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(0))
		testRecord(x(3) x 1 146192)
lbl(146173)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146192)	inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 146227)
lbl(146211)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146227)	deAllocateL1
		return
		endDefinition(146147)
lbl(146231)	definition(x(9) 146257 pid('Emitter,FreeReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 986> 3)
		endDefinition(146231)
lbl(146257)	putRecord('#' [1 2 fast] x(65))
		setConstant(<M: FreeReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146267)	definition(x(7) 146326 pid('Emitter,FreeX/fast' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 4) <Q: 987> [g(2) g(10) g(7)])
		inlineAt(<M: UsedX> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146312 [onScalar(0 146287) onScalar(1 146288)]))
lbl(146287)	return
lbl(146288)	inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(0) x(1) x(2) 146311)
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(146311)	return
lbl(146312)	inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146267)
lbl(146326)	definition(x(9) 146352 pid('Emitter,FreeX/slow' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 987> 3)
		endDefinition(146326)
lbl(146352)	putRecord('#' [1 2 fast] x(66))
		setConstant(<M: FreeX>)
		setValue(x(9))
		setValue(x(7))
lbl(146362)	definition(x(7) 146421 pid('Emitter,FreeY/fast' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 4) <Q: 988> [g(2) g(10) g(7)])
		inlineAt(<M: UsedY> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146407 [onScalar(0 146382) onScalar(1 146383)]))
lbl(146382)	return
lbl(146383)	inlineAt(<M: UsedY> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeY> x(1) cache)
		testLT(x(0) x(1) x(2) 146406)
		inlineAssign(<M: LowestFreeY> x(0) cache)
lbl(146406)	return
lbl(146407)	inlineAt(<M: UsedY> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146362)
lbl(146421)	definition(x(9) 146447 pid('Emitter,FreeY/slow' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 988> 3)
		endDefinition(146421)
lbl(146447)	putRecord('#' [1 2 fast] x(67))
		setConstant(<M: FreeY>)
		setValue(x(9))
		setValue(x(7))
lbl(146457)	definition(x(7) 146539 pid('Emitter,PredictBuiltinOutput/fast' 2 pos('./compiler/CodeEmitter.oz' 1990 6) nil 4) <Q: 989> [y(1) g(3)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146524 [onScalar(nil 146471) onRecord('|' 2 146477)]))
lbl(146471)	move(x(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> true 1) 0)
lbl(146477)	allocateL3
		getVariable(y(0))
		move(y(0) x(2))
		inlineDot(x(2) 1 x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictTemp> true 2) 0)
lbl(146524)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2001)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146457)
lbl(146539)	definition(x(9) 146574 pid('Emitter,PredictBuiltinOutput/slow' 1 pos('./compiler/CodeEmitter.oz' 1990 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 989> 5)
		endDefinition(146539)
lbl(146574)	putRecord('#' [1 2 fast] x(68))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(9))
		setValue(x(7))
lbl(146584)	definition(x(7) 146651 pid('Emitter,PredictTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 2003 6) nil 4) <Q: 990> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146636 [onScalar(nil 146598) onRecord('|' 2 146601)]))
lbl(146598)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146601)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146631)
lbl(146622)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146631)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146636)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2014)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146584)
lbl(146651)	definition(x(9) 146686 pid('Emitter,PredictTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 2003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 990> 5)
		endDefinition(146651)
lbl(146686)	putRecord('#' [1 2 fast] x(69))
		setConstant(<M: PredictTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(146696)	definition(x(7) 146763 pid('Emitter,PredictReg/fast' 2 pos('./compiler/CodeEmitter.oz' 2016 6) nil 4) <Q: 991> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146748 [onScalar(nil 146710) onRecord('|' 2 146713)]))
lbl(146710)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146713)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146743)
lbl(146734)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocatePerm> true 2) 0)
lbl(146743)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146748)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2025)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146696)
lbl(146763)	definition(x(9) 146798 pid('Emitter,PredictReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2016 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 991> 5)
		endDefinition(146763)
lbl(146798)	putRecord('#' [1 2 fast] x(70))
		setConstant(<M: PredictReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146808)	definition(x(7) 147746 pid('Emitter,PredictRegSub/fast' 3 pos('./compiler/CodeEmitter.oz' 2027 6) nil 11) <Q: 992> [y(1) y(2)])
		match(x(1) ht(147726 [onScalar(nil 146817) onRecord(vMakePermanent 3 146823) onRecord(vEquateLiteral 4 146872) onRecord(vEquateRecord 6 147034) onRecord(vCallBuiltin 5 147199) onRecord(vGenCall 8 147255) onRecord(vCall 5 147275) onRecord(vFastCall 5 147293) onRecord(vApplMeth 7 147313) onRecord(vShared 4 147333) onRecord(vExHandler 7 147339) onRecord(vCreateCond 7 147369) onRecord(vCreateOr 6 147372) onRecord(vCreateEnumOr 6 147375) onRecord(vCreateChoice 6 147378) onRecord(vAsk 2 147381) onRecord(vWait 2 147388) onRecord(vWaitTop 2 147395) onRecord(vShallowGuard 8 147402) onRecord(vTestBool 8 147450) onRecord(vTestNumber 8 147495) onRecord(vTestLiteral 8 147532) onRecord(vMatch 7 147569) onRecord(vThread 5 147669) onRecord(vLockThread 5 147689) onRecord(vLockEnd 4 147713) onRecord(vDummy 1 147720)]))
lbl(146817)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146823)	allocateL4
		getVoid(1)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 146849 146861)
		getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(146849)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(146861)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2032)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(146872)	allocateL4
		getVoid(2)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) vCall 5 146925)
lbl(146891)	getVoid(1)
		getVarVar(x(3) x(4))
		getVoid(1)
		getVariable(x(5))
		shallowGuard(146925)
		getList(x(4))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146908)	shallowThen
		move(x(3) x(1))
		move(x(5) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146925)	testRecord(y(0) vGenCall 8 146970)
lbl(146930)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(146970)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146954)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146970)	testRecord(y(0) vCallBuiltin 5 147022)
lbl(146975)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(147022)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(147005)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147022)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147034)	allocateL5
		getVoid(3)
		getVarVar(x(1) x(3))
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testRecord(y(0) vCall 5 147091)
lbl(147057)	getVoid(1)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVariable(x(6))
		shallowGuard(147091)
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(147074)	shallowThen
		move(x(4) x(1))
		move(y(4) x(2))
		move(x(6) x(3))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147091)	testRecord(y(0) vGenCall 8 147136)
lbl(147096)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(147136)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(147120)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147136)	testRecord(y(0) vCallBuiltin 5 147187)
lbl(147141)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(147187)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(147171)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		moveMoveYXYX(y(4) x(2) y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147187)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147199)	allocateL4
		getVoid(2)
		getVariable(x(1))
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 147232 147244)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147232)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147244)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2058)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(147255)	getVoid(5)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147275)	getVoid(1)
		getVarVar(x(1) x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147293)	getVoid(2)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147313)	getVoid(4)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147333)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147339)	getVoid(1)
		getVariable(x(4))
		getVoid(3)
		getVarVar(x(5) x(1))
		putList(x(3))
		setValue(x(5))
		setConstant(nil)
		putList(x(6))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(6) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147369)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147372)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147375)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147378)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147381)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147388)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147395)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147402)	getVoid(1)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVariable(x(7))
		getVoid(1)
		getVariable(x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147450)	getVoid(2)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVarVar(x(7) x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147495)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147532)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147569)	allocateL4
		getVoid(2)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) y(0))
lbl(147580)	definition(x(1) 147626 pid('' 3 pos('./compiler/CodeEmitter.oz' 2103 7) nil 3) unit nil)
		match(x(0) ht(147611 [onRecord('onScalar' 2 147589) onRecord('onRecord' 3 147600)]))
lbl(147589)	getVoid(1)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147600)	getVoid(2)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147611)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(147580)
lbl(147626)	putList(x(3))
		setValue(x(6))
		setConstant(nil)
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(5) x(0))
		move(x(7) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147669)	getVoid(3)
		getVarVar(x(4) x(1))
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(2) x(3))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147689)	getVoid(1)
		getVariable(x(1))
		getVoid(1)
		getVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 147707)
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147707)	move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147713)	getVoid(2)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147720)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147726)	callBI('Label' [x(1)]#[x(3)])
		move(g(1) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		callBI('.' [x(1) x(5)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
		endDefinition(146808)
lbl(147746)	definition(x(9) 147787 pid('Emitter,PredictRegSub/slow' 1 pos('./compiler/CodeEmitter.oz' 2027 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 992> 7)
		endDefinition(147746)
lbl(147787)	putRecord('#' [1 2 fast] x(71))
		setConstant(<M: PredictRegSub>)
		setValue(x(9))
		setValue(x(7))
lbl(147797)	definition(x(7) 147960 pid('Emitter,PredictArgReg/fast' 5 pos('./compiler/CodeEmitter.oz' 2127 6) nil 8) <Q: 993> [y(1) g(18) g(1)])
		match(x(1) ht(147945 [onScalar(nil 147806) onRecord('|' 2 147860)]))
lbl(147806)	allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		testLiteral(x(3) nil 147845)
lbl(147819)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147845)	inlineDot(x(3) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 147819)
lbl(147855)	getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(147860)	allocateL5
		getVarVar(x(1) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('==' [x(1) x(0)]#[x(6)] 147922)
lbl(147881)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 147910)
		inlinePlus1(x(1) x(2))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147910)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147922)	putRecord(value 1 x(6))
		setValue(y(0))
		testBI('\\=' [x(1) x(6)]#[x(7)] 147881)
lbl(147932)	inlinePlus1(x(2) x(6))
		move(y(4) x(1))
		move(x(6) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147945)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2145)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147797)
lbl(147960)	definition(x(9) 148013 pid('Emitter,PredictArgReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2127 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 993> 11)
		endDefinition(147960)
lbl(148013)	putRecord('#' [1 2 fast] x(72))
		setConstant(<M: PredictArgReg>)
		setValue(x(9))
		setValue(x(7))
lbl(148023)	definition(x(7) 148127 pid('Emitter,PredictRegForCall/fast' 5 pos('./compiler/CodeEmitter.oz' 2147 6) nil 7) <Q: 994> [y(1) g(18)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testLiteral(y(3) nil 148110)
lbl(148047)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 148095)
		inlineAt(<M: UsedX> x(1) cache)
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(148095)	moveMoveYXYX(y(2) x(1) y(3) x(3))
		move(y(4) x(4))
		putConstant(0 x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(148110)	inlineDot(x(3) 1 x(5) cache)
		testBI('BitArray.test' [x(5) x(0)]#[x(6)] 148047)
lbl(148120)	getLiteral(anyperm y(4))
		deAllocateL5
		return
		endDefinition(148023)
lbl(148127)	definition(x(9) 148180 pid('Emitter,PredictRegForCall/slow' 1 pos('./compiler/CodeEmitter.oz' 2147 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 994> 11)
		endDefinition(148127)
lbl(148180)	putRecord('#' [1 2 fast] x(73))
		setConstant(<M: PredictRegForCall>)
		setValue(x(9))
		setValue(x(7))
lbl(148190)	definition(x(7) 148218 pid('Emitter,PredictRegForInits/fast' 4 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) <Q: 995> [g(18) y(1)])
		testBI('BitArray.test' [x(1) x(0)]#[x(4)] 148204)
		getLiteral(anyperm x(3))
		return
lbl(148204)	move(x(0) x(1))
		move(x(2) x(0))
		move(x(3) x(2))
		genCall(gci(g(1) true <M: PredictRegForBranches> true 3) 0)
		endDefinition(148190)
lbl(148218)	definition(x(9) 148265 pid('Emitter,PredictRegForInits/slow' 1 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 995> 9)
		endDefinition(148218)
lbl(148265)	putRecord('#' [1 2 fast] x(74))
		setConstant(<M: PredictRegForInits>)
		setValue(x(9))
		setValue(x(7))
lbl(148275)	definition(x(7) 148356 pid('Emitter,PredictRegForBranches/fast' 3 pos('./compiler/CodeEmitter.oz' 2164 6) nil 6) <Q: 996> [y(1) g(18)])
		match(x(0) ht(148341 [onScalar(nil 148284) onRecord('|' 2 148293)]))
lbl(148284)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148293)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) nil 148321)
lbl(148309)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegForBranches> true 3) 0)
lbl(148321)	inlineDot(x(0) 1 x(4) cache)
		testBI('BitArray.test' [x(4) x(1)]#[x(5)] 148309)
lbl(148331)	move(x(0) x(1))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(148341)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(148275)
lbl(148356)	definition(x(9) 148397 pid('Emitter,PredictRegForBranches/slow' 1 pos('./compiler/CodeEmitter.oz' 2164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 996> 7)
		endDefinition(148356)
lbl(148397)	putRecord('#' [1 2 fast] x(75))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(9))
		setValue(x(7))
lbl(148407)	definition(x(7) 148449 pid('Emitter,PredictPermReg/fast' 3 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) <Q: 997> [y(1) g(18)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) nil 148432)
lbl(148423)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148432)	inlineDot(x(1) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 148423)
lbl(148442)	getLiteral(anyperm y(1))
		deAllocateL2
		return
		endDefinition(148407)
lbl(148449)	definition(x(9) 148490 pid('Emitter,PredictPermReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 997> 7)
		endDefinition(148449)
lbl(148490)	putRecord('#' [1 2 fast] x(76))
		setConstant(<M: PredictPermReg>)
		setValue(x(9))
		setValue(x(7))
lbl(148500)	definition(x(7) 148580 pid('Emitter,SaveRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 7) <Q: 998> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 5 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		inlineAt(<M: Permanents> x(5) cache)
		callBI('Dictionary.clone' [x(5)]#[x(6)])
		unify(x(6) x(0))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(5)])
		unify(x(5) x(1))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(4))
		deAllocateL1
		return
		endDefinition(148500)
lbl(148580)	definition(x(9) 148606 pid('Emitter,SaveRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 998> 3)
		endDefinition(148580)
lbl(148606)	putRecord('#' [1 2 fast] x(77))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148616)	definition(x(7) 148724 pid('Emitter,RestoreRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 6) <Q: 999> [g(7) g(5) y(1)])
		allocateL2
		getRecord('#' 5 x(0))
		unifyVariable(x(4))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(x(5))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(5) cache)
		inlineAssign(<M: Permanents> x(4) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148657)	definition(x(3) 148693 pid('' 1 pos('./compiler/CodeEmitter.oz' 2195 3) nil 5) unit [x(5) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148657)
lbl(148693)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		deAllocateL2
		genCall(gci(g(2) true <M: KillAllTemporaries> true 0) 0)
		endDefinition(148616)
lbl(148724)	definition(x(9) 148750 pid('Emitter,RestoreRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 999> 3)
		endDefinition(148724)
lbl(148750)	putRecord('#' [1 2 fast] x(78))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148760)	definition(x(7) 148876 pid('Emitter,SaveAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 10) <Q: 1000> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 8 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		inlineAt(<M: Temporaries> x(8) cache)
		callBI('Dictionary.clone' [x(8)]#[x(9)])
		unify(x(9) x(0))
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(8)])
		unify(x(8) x(1))
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(7))
		deAllocateL1
		return
		endDefinition(148760)
lbl(148876)	definition(x(9) 148902 pid('Emitter,SaveAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1000> 3)
		endDefinition(148876)
lbl(148902)	putRecord('#' [1 2 fast] x(79))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(148912)	definition(x(7) 149082 pid('Emitter,RestoreAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 8) <Q: 1001> [g(6) g(7) g(5)])
		allocateL3
		getRecord('#' 8 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(x(7))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(7) cache)
		inlineAt(<M: Temporaries> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Temporaries> x(4) cache)
		inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: UsedX> x(5) cache)
		inlineAt(<M: Permanents> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Permanents> x(6) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148993)	definition(x(3) 149029 pid('' 1 pos('./compiler/CodeEmitter.oz' 2221 3) nil 5) unit [x(5) g(1) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148993)
lbl(149029)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL3
		return
		endDefinition(148912)
lbl(149082)	definition(x(9) 149108 pid('Emitter,RestoreAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1001> 3)
		endDefinition(149082)
lbl(149108)	putRecord('#' [1 2 fast] x(80))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(149118)	definition(x(7) 149188 pid('Emitter,KillAllTemporaries/fast' 0 pos('./compiler/CodeEmitter.oz' 2230 6) nil 3) <Q: 1002> [g(20) g(5) g(10) g(6)])
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(2)])
lbl(149132)	definition(x(1) 149155 pid('' 1 pos('./compiler/CodeEmitter.oz' 2232 3) nil 3) unit [g(1) x(0) g(2)])
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) x 1 149152)
lbl(149149)	callBI('Dictionary.remove' [x(1) x(0)]#nil)
lbl(149152)	return
		endDefinition(149132)
lbl(149155)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(0 x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		return
		endDefinition(149118)
lbl(149188)	definition(x(9) 149202 pid('Emitter,KillAllTemporaries/slow' 1 pos('./compiler/CodeEmitter.oz' 2230 6) nil 1) unit nil)
		getLiteral(<M: KillAllTemporaries> x(0))
		genFastCall(<Q: 1002> 1)
		endDefinition(149188)
lbl(149202)	putRecord('#' [1 2 fast] x(81))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(9))
		setValue(x(7))
lbl(149212)	definition(x(7) 149240 pid('Emitter,Emit/fast' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) <Q: 1003> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		inlineAt(<M: CodeTl> x(0) cache)
		unify(x(0) x(1))
		inlineAssign(<M: CodeTl> x(2) cache)
		return
		endDefinition(149212)
lbl(149240)	definition(x(9) 149266 pid('Emitter,Emit/slow' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1003> 3)
		endDefinition(149240)
lbl(149266)	putRecord('#' [1 2 fast] x(82))
		setConstant(<M: Emit>)
		setValue(x(9))
		setValue(x(7))
lbl(149276)	definition(x(7) 149298 pid('Emitter,EmitMultiple/fast' 2 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) <Q: 1004> nil)
		inlineAt(<M: CodeTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: CodeTl> x(1) cache)
		return
		endDefinition(149276)
lbl(149298)	definition(x(9) 149333 pid('Emitter,EmitMultiple/slow' 1 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1004> 5)
		endDefinition(149298)
lbl(149333)	putRecord('#' [1 2 fast] x(83))
		setConstant(<M: EmitMultiple>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 74 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(10))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		setValue(x(71))
		setValue(x(72))
		setValue(x(73))
		setValue(x(74))
		setValue(x(75))
		setValue(x(76))
		setValue(x(77))
		setValue(x(78))
		setValue(x(79))
		setValue(x(80))
		setValue(x(81))
		setValue(x(82))
		setValue(x(83))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		move(x(7) x(1))
		move(x(8) x(2))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Emitter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		getRecord(c [vApplMeth vAsk vBranch vCall vCallBuiltin vClear vCreateChoice vCreateCond vCreateEnumOr vCreateOr vDefinition vDefinitionCopy vEquateLiteral vEquateNumber vEquateRecord vExHandler vFailure vFastCall vGenCall vGetSelf vGetVariable vInlineAssign vInlineAt vInlineDot vLockEnd vLockThread vMakePermanent vMatch vPopEx vSetSelf vShallowGuard vShared vStepPoint vTestBool vTestBuiltin vTestLiteral vTestNumber vThread vUnify vWait vWaitTop] y(2))
		unifyNumber(7)
		unifyNumber(2)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(5)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(7)
		unifyNumber(8)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(6)
		unifyNumber(6)
		unifyNumber(2)
		unifyNumber(5)
		unifyNumber(8)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(7)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(7)
		unifyNumber(6)
		unifyNumber(7)
		unifyNumber(7)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(2)
		unifyNumber(2)
		putList(x(0))
		setValue(y(1))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: EmptyRS> <M: NextReg> <M: Saved> minReg nextLabel regNames sharedDone] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [debugInfoControlSwitch debugInfoNameVarsSwitch debugInfoVarnamesSwitch reporter switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(149662)	definition(x(7) 149794 pid('CodeStore,init/fast' 2 pos('./compiler/CodeStore.oz' 77 3) nil 3) <Q: 1005> [y(1)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(regNames x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Saved> x(2) cache)
		putConstant(1 x(2))
		inlineAssign(nextLabel x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(sharedDone x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoControlSwitch x(1) cache)
		putConstant(debuginfocontrol x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoVarnamesSwitch x(1) cache)
		putConstant(debuginfovarnames x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoNameVarsSwitch x(1) cache)
		putConstant(debuginfonamevars x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) switches x(1) cache)
		unify(x(1) y(0))
		getSelf(x(0))
		inlineDot(x(0) reporter x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(149662)
lbl(149794)	definition(x(8) 149829 pid('CodeStore,init/slow' 1 pos('./compiler/CodeStore.oz' 77 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1005> 5)
		endDefinition(149794)
lbl(149829)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(149839)	definition(x(7) 149879 pid('CodeStore,makeRegSet/fast' 1 pos('./compiler/CodeStore.oz' 94 3) nil 4) <Q: 1006> [g(21)])
		inlineAt(minReg x(1) cache)
		inlineAt(<M: NextReg> x(2) cache)
		inlineMinus1(x(2) x(3))
		testLE(x(1) x(3) x(2) 149870)
		callBI('BitArray.new' [x(1) x(3)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(149870)	callBI('BitArray.new' [x(1) x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(149839)
lbl(149879)	definition(x(8) 149905 pid('CodeStore,makeRegSet/slow' 1 pos('./compiler/CodeStore.oz' 94 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1006> 3)
		endDefinition(149879)
lbl(149905)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRegSet)
		setValue(x(8))
		setValue(x(7))
lbl(149915)	definition(x(7) 149984 pid('CodeStore,enterVs/fast' 2 pos('./compiler/CodeStore.oz' 104 3) nil 3) <Q: 1007> [g(3) y(0)])
		match(x(0) ht(149969 [onScalar(nil 149924) onRecord('|' 2 149925)]))
lbl(149924)	return
lbl(149925)	allocateL3
		getVarVar(x(2) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(reg x(2) 1 cache)
		inlineAt(minReg x(0) cache)
		move(y(2) x(1))
		testLE(x(0) x(1) x(2) 149960)
		move(y(1) x(0))
		callBI('BitArray.set' [x(0) x(1)]#nil)
lbl(149960)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(1) true enterVs true 2) 0)
lbl(149969)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(149915)
lbl(149984)	definition(x(8) 150019 pid('CodeStore,enterVs/slow' 1 pos('./compiler/CodeStore.oz' 104 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1007> 5)
		endDefinition(149984)
lbl(150019)	putRecord('#' [1 2 fast] x(11))
		setConstant(enterVs)
		setValue(x(8))
		setValue(x(7))
lbl(150029)	definition(x(7) 150069 pid('CodeStore,startDefinition/fast' 0 pos('./compiler/CodeStore.oz' 113 3) nil 3) <Q: 1008> nil)
		inlineAt(minReg x(0) cache)
		inlineAt(<M: Saved> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<M: Saved> x(2) cache)
		inlineAt(<M: NextReg> x(0) cache)
		inlineAssign(minReg x(0) cache)
		return
		endDefinition(150029)
lbl(150069)	definition(x(8) 150083 pid('CodeStore,startDefinition/slow' 1 pos('./compiler/CodeStore.oz' 113 3) nil 1) unit nil)
		getLiteral(startDefinition x(0))
		genFastCall(<Q: 1008> 1)
		endDefinition(150069)
lbl(150083)	putRecord('#' [1 2 fast] x(12))
		setConstant(startDefinition)
		setValue(x(8))
		setValue(x(7))
lbl(150093)	definition(x(7) 150118 pid('CodeStore,newReg/fast' 1 pos('./compiler/CodeStore.oz' 117 3) nil 2) <Q: 1009> nil)
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		return
		endDefinition(150093)
lbl(150118)	definition(x(8) 150144 pid('CodeStore,newReg/slow' 1 pos('./compiler/CodeStore.oz' 117 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1009> 3)
		endDefinition(150118)
lbl(150144)	putRecord('#' [1 2 fast] x(13))
		setConstant(newReg)
		setValue(x(8))
		setValue(x(7))
lbl(150154)	definition(x(7) 150190 pid('CodeStore,newSelfReg/fast' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) <Q: 1010> [g(7)])
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		inlineAt(regNames x(1) cache)
		putConstant('self' x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(150154)
lbl(150190)	definition(x(8) 150216 pid('CodeStore,newSelfReg/slow' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1010> 3)
		endDefinition(150190)
lbl(150216)	putRecord('#' [1 2 fast] x(14))
		setConstant(newSelfReg)
		setValue(x(8))
		setValue(x(7))
lbl(150226)	definition(x(7) 150312 pid('CodeStore,newVariableReg/fast' 2 pos('./compiler/CodeStore.oz' 126 3) nil 3) <Q: 1011> [g(10) g(7)])
		allocateL4
		inlineAt(<M: NextReg> x(2) cache)
		unify(x(2) x(1))
		inlinePlus1(x(1) x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(2) generated 150280)
lbl(150267)	inlineAt(regNames x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL4
		return
lbl(150280)	inlineAt(regNames x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(150226)
lbl(150312)	definition(x(8) 150347 pid('CodeStore,newVariableReg/slow' 1 pos('./compiler/CodeStore.oz' 126 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1011> 5)
		endDefinition(150312)
lbl(150347)	putRecord('#' [1 2 fast] x(15))
		setConstant(newVariableReg)
		setValue(x(8))
		setValue(x(7))
lbl(150357)	definition(x(7) 150487 pid('CodeStore,endDefinition/fast' 6 pos('./compiler/CodeStore.oz' 135 3) nil 7) <Q: 1012> [y(0) g(6) y(1)])
		allocateL9
		inlineAt(<M: Saved> x(6) cache)
		getList(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(8) x(0))
		inlineAssign(<M: EmptyRS> x(0) cache)
		move(y(2) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		inlineAt(<M: EmptyRS> x(1) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: AddRegOccs> false 2) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		moveMoveYXYX(y(5) x(4) y(7) x(5))
		genCall(gci(g(2) true doEmit false 6) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(minReg x(0) cache)
		inlineAssign(<M: NextReg> x(0) cache)
		move(y(0) x(0))
		inlineAssign(minReg x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: Saved> x(0) cache)
		deAllocateL9
		return
		endDefinition(150357)
lbl(150487)	definition(x(8) 150546 pid('CodeStore,endDefinition/slow' 1 pos('./compiler/CodeStore.oz' 135 3) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1012> 13)
		endDefinition(150487)
lbl(150546)	putRecord('#' [1 2 fast] x(16))
		setConstant('endDefinition')
		setValue(x(8))
		setValue(x(7))
lbl(150556)	definition(x(7) 150600 pid('CodeStore,getRegNames/fast' 2 pos('./compiler/CodeStore.oz' 150 3) nil 5) <Q: 1013> [g(5)])
		getSelf(x(3))
lbl(150564)	definition(x(4) 150589 pid('' 2 pos('./compiler/CodeStore.oz' 151 24) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(150564)
lbl(150589)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(150556)
lbl(150600)	definition(x(8) 150635 pid('CodeStore,getRegNames/slow' 1 pos('./compiler/CodeStore.oz' 150 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1013> 5)
		endDefinition(150600)
lbl(150635)	putRecord('#' [1 2 fast] x(17))
		setConstant(getRegNames)
		setValue(x(8))
		setValue(x(7))
lbl(150645)	definition(x(7) 150676 pid('CodeStore,GetOccs/fast' 2 pos('./compiler/CodeStore.oz' 154 3) nil 3) <Q: 1014> nil)
		testLiteral(x(0) nil 150664)
lbl(150655)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150664)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(150645)
lbl(150676)	definition(x(8) 150711 pid('CodeStore,GetOccs/slow' 1 pos('./compiler/CodeStore.oz' 154 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1014> 5)
		endDefinition(150676)
lbl(150711)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: GetOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(150721)	definition(x(7) 152042 pid('CodeStore,ComputeOccs/fast' 2 pos('./compiler/CodeStore.oz' 157 3) nil 7) <Q: 1015> [y(0) y(2) g(17) g(22) g(23) g(9) g(3)])
		match(x(0) ht(150781 [onScalar(nil 150730) onRecord(vShared 4 150739)]))
lbl(150730)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150739)	allocateL2
		getVariable(x(0))
		getVoid(1)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		inlinePlus1(x(4) x(5))
		callBI('Assign' [x(2) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 150767)
		branch(150776)
lbl(150767)	move(x(3) x(0))
		move(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
lbl(150776)	unify(y(0) y(1))
		deAllocateL2
		return
lbl(150781)	allocateL7
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		callBI('.' [x(0) x(4)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testLiteral(x(2) nil 150820)
lbl(150812)	move(y(0) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		branch(150838)
lbl(150820)	move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(0))
lbl(150838)	match(y(1) ht(152027 [onRecord(vStepPoint 5 150841) onRecord(vMakePermanent 3 150861) onRecord(vClear 3 150872) onRecord(vUnify 4 150883) onRecord(vFailure 2 150903) onRecord(vEquateNumber 4 150905) onRecord(vEquateLiteral 4 150916) onRecord(vEquateRecord 6 150927) onRecord(vGetVariable 3 150947) onRecord(vCallBuiltin 5 150958) onRecord(vGenCall 8 150969) onRecord(vCall 5 150992) onRecord(vFastCall 5 151012) onRecord(vApplMeth 7 151023) onRecord(vInlineDot 7 151046) onRecord(vInlineAt 4 151069) onRecord(vInlineAssign 4 151080) onRecord(vGetSelf 3 151091) onRecord(vSetSelf 3 151102) onRecord(vDefinition 7 151113) onRecord(vDefinitionCopy 8 151136) onRecord(vExHandler 7 151168) onRecord(vPopEx 3 151242) onRecord(vCreateCond 7 151244) onRecord(vCreateOr 6 151504) onRecord(vCreateEnumOr 6 151520) onRecord(vCreateChoice 6 151536) onRecord(vAsk 2 151552) onRecord(vWait 2 151554) onRecord(vWaitTop 2 151556) onRecord(vShallowGuard 8 151558) onRecord(vTestBool 8 151678) onRecord(vMatch 7 151773) onRecord(vThread 5 151978) onRecord(vLockThread 5 152014) onRecord(vLockEnd 4 152025)]))
lbl(150841)	getVoid(1)
		getVariable(x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(150861)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150872)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150883)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150903)	deAllocateL7
		return
lbl(150905)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150916)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150927)	getVoid(3)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(150947)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150958)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150969)	getVoid(1)
		getVariable(x(0))
		getVoid(3)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150992)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151012)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151023)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151046)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151069)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151080)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151091)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151102)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151113)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151136)	getVoid(1)
		getVarVar(x(0) y(1))
		getVoid(2)
		getVariable(y(2))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151168)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		moveMoveYXYX(y(3) x(1) y(5) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(0) x(3))
		callBI('BitArray.and' [x(1) x(3)]#nil)
		callBI('BitArray.clone' [x(0)]#[x(4)])
		callBI('BitArray.and' [x(4) x(2)]#nil)
		callBI('BitArray.or' [x(1) x(4)]#nil)
		callBI('BitArray.or' [x(3) x(0)]#nil)
		callBI('BitArray.or' [x(3) x(2)]#nil)
		deAllocateL7
		return
lbl(151242)	deAllocateL7
		return
lbl(151244)	getVoid(1)
		getVarVar(y(1) x(0))
		getVoid(2)
		getVarVar(y(2) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151271)	definition(x(1) 151361 pid('' 1 pos('./compiler/CodeStore.oz' 245 6) nil 5) unit [x(2) g(0) g(3) y(3) g(2) g(4)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151348)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151294)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(151348)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(245)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151271)
lbl(151361)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(2) ht(151378 [onScalar(nil 151408)]))
lbl(151378)	move(y(2) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(151384)	definition(x(2) 151399 pid('' 1 pos('./compiler/CodeStore.oz' 259 2) nil 2) unit [g(6) y(3)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151384)
lbl(151399)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(151408)	moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151418)	definition(x(1) 151497 pid('' 1 pos('./compiler/CodeStore.oz' 263 6) nil 5) unit [x(2) g(3) g(0) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151484)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151441)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(151484)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(263)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151418)
lbl(151497)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151504)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151520)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151536)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151552)	deAllocateL7
		return
lbl(151554)	deAllocateL7
		return
lbl(151556)	deAllocateL7
		return
lbl(151558)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVarVar(y(3) y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(1) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		match(y(3) ht(151626 [onScalar(nil 151656)]))
lbl(151626)	move(y(3) x(5))
		callBI('BitArray.toList' [x(5)]#[x(6)])
lbl(151632)	definition(x(5) 151647 pid('' 1 pos('./compiler/CodeStore.oz' 294 2) nil 2) unit [g(6) y(4)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151632)
lbl(151647)	move(x(6) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
lbl(151656)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151678)	getVoid(1)
		getVarVar(y(1) x(0))
		getVarVar(y(2) y(3))
		getVoid(2)
		getVariable(y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(2) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151773)	getVoid(1)
		getVarVar(y(1) x(0))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151801)	definition(x(1) 151871 pid('' 1 pos('./compiler/CodeStore.oz' 317 6) nil 3) unit [x(2) g(3) g(0) y(3)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151836 [onRecord('onScalar' 2 151818) onRecord('onRecord' 3 151827)]))
lbl(151818)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151849)
lbl(151827)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151849)
lbl(151836)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(320)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151849)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151801)
lbl(151871)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151901)	definition(x(1) 151971 pid('' 1 pos('./compiler/CodeStore.oz' 327 6) nil 3) unit [x(2) g(3) g(0) y(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151936 [onRecord('onScalar' 2 151918) onRecord('onRecord' 3 151927)]))
lbl(151918)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151949)
lbl(151927)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151949)
lbl(151936)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(330)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151949)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151901)
lbl(151971)	move(y(2) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151978)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(1))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		callBI('BitArray.or' [x(2) x(0)]#nil)
		deAllocateL7
		return
lbl(152014)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(152025)	deAllocateL7
		return
lbl(152027)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(342)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150721)
lbl(152042)	definition(x(8) 152077 pid('CodeStore,ComputeOccs/slow' 1 pos('./compiler/CodeStore.oz' 157 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1015> 5)
		endDefinition(152042)
lbl(152077)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ComputeOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152087)	definition(x(7) 152344 pid('CodeStore,ComputeDisjunctionOccs/fast' 4 pos('./compiler/CodeStore.oz' 345 3) nil 6) <Q: 1016> [g(17) y(0) g(22) g(23) g(9) g(3)])
		allocateL4
		inlineAt(<M: EmptyRS> x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(2))
		getSelf(x(4))
lbl(152107)	definition(x(5) 152197 pid('' 1 pos('./compiler/CodeStore.oz' 348 7) nil 5) unit [x(4) g(1) g(2) x(2) g(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152184)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152130)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(152184)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(348)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152107)
lbl(152197)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(1) ht(152224 [onScalar(nil 152254)]))
lbl(152224)	move(y(1) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(152230)	definition(x(2) 152245 pid('' 1 pos('./compiler/CodeStore.oz' 360 3) nil 2) unit [g(5) y(2)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152230)
lbl(152245)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(152254)	getSelf(x(2))
lbl(152256)	definition(x(1) 152335 pid('' 1 pos('./compiler/CodeStore.oz' 363 7) nil 5) unit [x(2) g(2) g(1) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152322)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152279)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(152322)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(363)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152256)
lbl(152335)	move(y(0) x(0))
		deAllocateL4
		genFastCall(<P: 34> 5)
		endDefinition(152087)
lbl(152344)	definition(x(8) 152391 pid('CodeStore,ComputeDisjunctionOccs/slow' 1 pos('./compiler/CodeStore.oz' 345 3) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1016> 9)
		endDefinition(152344)
lbl(152391)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152401)	definition(x(7) 152424 pid('CodeStore,RegOcc/fast' 2 pos('./compiler/CodeStore.oz' 368 3) nil 4) <Q: 1017> [g(3)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 152418)
		return
lbl(152418)	callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152401)
lbl(152424)	definition(x(8) 152459 pid('CodeStore,RegOcc/slow' 1 pos('./compiler/CodeStore.oz' 368 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1017> 5)
		endDefinition(152424)
lbl(152459)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RegOcc>)
		setValue(x(8))
		setValue(x(7))
lbl(152469)	definition(x(7) 152525 pid('CodeStore,RegOccs/fast' 2 pos('./compiler/CodeStore.oz' 373 3) nil 5) <Q: 1018> [g(3) y(0)])
		match(x(0) ht(152510 [onScalar(nil 152478) onRecord('|' 2 152479)]))
lbl(152478)	return
lbl(152479)	allocateL2
		getVarVar(x(0) x(2))
		inlineAt(minReg x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testLE(x(3) x(0) x(4) 152501)
lbl(152498)	callBI('BitArray.set' [x(1) x(0)]#nil)
lbl(152501)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: RegOccs> true 2) 0)
lbl(152510)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(380)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152469)
lbl(152525)	definition(x(8) 152560 pid('CodeStore,RegOccs/slow' 1 pos('./compiler/CodeStore.oz' 373 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1018> 5)
		endDefinition(152525)
lbl(152560)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: RegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152570)	definition(x(7) 152630 pid('CodeStore,RegOccVArgs/fast' 2 pos('./compiler/CodeStore.oz' 382 3) nil 3) <Q: 1019> [y(0)])
		match(x(0) ht(152615 [onScalar(nil 152579) onRecord('|' 2 152580)]))
lbl(152579)	return
lbl(152580)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		match(x(0) ht(152606 [onRecord(value 1 152592) onRecord(record 3 152599)]))
lbl(152592)	getVariable(x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		branch(152606)
lbl(152599)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(0) true <M: RegOccVArgs> false 2) 0)
lbl(152606)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(152615)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152570)
lbl(152630)	definition(x(8) 152665 pid('CodeStore,RegOccVArgs/slow' 1 pos('./compiler/CodeStore.oz' 382 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1019> 5)
		endDefinition(152630)
lbl(152665)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: RegOccVArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(152675)	definition(x(7) 153186 pid('CodeStore,AddRegOccs/fast' 2 pos('./compiler/CodeStore.oz' 393 3) nil 5) <Q: 1020> [g(22) y(2) y(0) g(1) g(7) g(17)])
		testLiteral(x(0) nil 152686)
lbl(152685)	return
lbl(152686)	allocateL6
		inlineDot(x(0) 1 x(2) cache)
		callBI('BitArray.or' [x(2) x(1)]#nil)
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testNumber(x(4) ~1 152719)
lbl(152714)	unify(y(1) x(1))
		branch(152747)
lbl(152719)	callBI('.' [x(0) x(4)]#[x(2)])
		testLiteral(x(2) nil 152731)
lbl(152726)	unify(y(1) x(1))
		branch(152747)
lbl(152731)	moveMoveXYYX(x(2) y(2) y(2) x(0))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
lbl(152747)	match(y(0) ht(153171 [onRecord(vStepPoint 5 152750) onRecord(vMakePermanent 3 152761) onRecord(vClear 3 152763) onRecord(vUnify 4 152765) onRecord(vFailure 2 152767) onRecord(vEquateNumber 4 152769) onRecord(vEquateLiteral 4 152771) onRecord(vEquateRecord 6 152773) onRecord(vGetVariable 3 152775) onRecord(vCallBuiltin 5 152777) onRecord(vGenCall 8 152779) onRecord(vCall 5 152781) onRecord(vFastCall 5 152783) onRecord(vApplMeth 7 152785) onRecord(vInlineDot 7 152787) onRecord(vInlineAt 4 152789) onRecord(vInlineAssign 4 152791) onRecord(vGetSelf 3 152793) onRecord(vSetSelf 3 152795) onRecord(vDefinition 7 152797) onRecord(vDefinitionCopy 8 152799) onRecord(vShared 4 152801) onRecord(vExHandler 7 152841) onRecord(vPopEx 3 152891) onRecord(vCreateCond 7 152893) onRecord(vCreateOr 6 152927) onRecord(vCreateEnumOr 6 152940) onRecord(vCreateChoice 6 152953) onRecord(vAsk 2 152966) onRecord(vWait 2 152968) onRecord(vWaitTop 2 152970) onRecord(vShallowGuard 8 152972) onRecord(vTestBool 8 153046) onRecord(vMatch 7 153076) onRecord(vThread 5 153156) onRecord(vLockThread 5 153167) onRecord(vLockEnd 4 153169)]))
lbl(152750)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152761)	deAllocateL6
		return
lbl(152763)	deAllocateL6
		return
lbl(152765)	deAllocateL6
		return
lbl(152767)	deAllocateL6
		return
lbl(152769)	deAllocateL6
		return
lbl(152771)	deAllocateL6
		return
lbl(152773)	deAllocateL6
		return
lbl(152775)	deAllocateL6
		return
lbl(152777)	deAllocateL6
		return
lbl(152779)	deAllocateL6
		return
lbl(152781)	deAllocateL6
		return
lbl(152783)	deAllocateL6
		return
lbl(152785)	deAllocateL6
		return
lbl(152787)	deAllocateL6
		return
lbl(152789)	deAllocateL6
		return
lbl(152791)	deAllocateL6
		return
lbl(152793)	deAllocateL6
		return
lbl(152795)	deAllocateL6
		return
lbl(152797)	deAllocateL6
		return
lbl(152799)	deAllocateL6
		return
lbl(152801)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 152820)
		deAllocateL6
		return
lbl(152820)	inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		move(x(1) x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152841)	getVoid(1)
		getVariable(y(0))
		getVoid(1)
		getVariable(y(2))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152891)	deAllocateL6
		return
lbl(152893)	getVoid(1)
		getVarVar(y(0) y(2))
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152927)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152940)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152953)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152966)	deAllocateL6
		return
lbl(152968)	deAllocateL6
		return
lbl(152970)	deAllocateL6
		return
lbl(152972)	getVoid(1)
		getVarVar(y(0) y(2))
		getVariable(y(3))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(153046)	getVoid(2)
		getVarVar(x(0) y(0))
		getVariable(y(2))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(153076)	getVoid(2)
		getVarVar(x(0) y(0))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		getSelf(x(2))
lbl(153089)	definition(x(1) 153149 pid('' 1 pos('./compiler/CodeStore.oz' 469 6) nil 3) unit [x(2) y(1) g(2)])
		allocateL1
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(153124 [onRecord('onScalar' 2 153106) onRecord('onRecord' 3 153115)]))
lbl(153106)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153137)
lbl(153115)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153137)
lbl(153124)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(153137)	move(y(0) x(0))
		move(g(1) x(1))
		deAllocateL1
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
		endDefinition(153089)
lbl(153149)	move(y(0) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(153156)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(153167)	deAllocateL6
		return
lbl(153169)	deAllocateL6
		return
lbl(153171)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(481)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152675)
lbl(153186)	definition(x(8) 153221 pid('CodeStore,AddRegOccs/slow' 1 pos('./compiler/CodeStore.oz' 393 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1020> 5)
		endDefinition(153186)
lbl(153221)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AddRegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(153231)	definition(x(7) 153393 pid('CodeStore,AddRegOccsClauses/fast' 3 pos('./compiler/CodeStore.oz' 484 3) nil 5) <Q: 1021> [g(17) y(0) g(22)])
		allocateL2
		callBI('BitArray.clone' [x(1)]#[x(3)])
		getSelf(x(4))
lbl(153243)	definition(x(1) 153312 pid('' 1 pos('./compiler/CodeStore.oz' 487 7) nil 5) unit [x(4) x(2) g(1) g(2) x(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(153299)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(153266)	shallowThen
		allocateL2
		moveMoveXYYX(x(4) y(0) y(0) x(0))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(4) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(153299)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153243)
lbl(153312)	moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<P: 34> 4)
		getSelf(x(4))
lbl(153322)	definition(x(1) 153380 pid('' 3 pos('./compiler/CodeStore.oz' 492 7) nil 7) unit [x(4) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(153367)
		getRecord('#' 3 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(153345)	shallowThen
		allocateL2
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(y(1) x(0))
		genCall(gci(g(1) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: GetOccs> true 2) 0)
lbl(153367)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(492)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153322)
lbl(153380)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariable(x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(153231)
lbl(153393)	definition(x(8) 153434 pid('CodeStore,AddRegOccsClauses/slow' 1 pos('./compiler/CodeStore.oz' 484 3) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1021> 7)
		endDefinition(153393)
lbl(153434)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 17 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		move(y(0) x(6))
		putConstant('CodeStore' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(153491)	definition(x(7) 153557 pid('CodeGenList' 4 pos('./compiler/CodeGen.oz' 36 3) nil 5) <Q: 1022> nil)
		match(x(0) ht(153542 [onScalar(nil 153500) onRecord('|' 2 153504)]))
lbl(153500)	unify(x(2) x(3))
		return
lbl(153504)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(codeGen x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(153542)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(42)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(153491)
lbl(153557)	definition(x(7) 153586 pid('CoordNoDebug' 2 pos('./compiler/CodeGen.oz' 45 3) nil 4) <Q: 1023> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 153574)
lbl(153570)	unify(x(1) x(0))
		return
lbl(153574)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(153557)
lbl(153586)	definition(x(7) 153658 pid('StepPoint' 6 pos('./compiler/CodeGen.oz' 51 3) nil 6) <Q: 1024> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(6) 153637 153645)
		getLiteral(nil y(5))
		getRecord(vStepPoint 5 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(3))
		deAllocateL7
		return
lbl(153637)	unify(y(2) y(4))
		unify(y(5) y(3))
		deAllocateL7
		return
lbl(153645)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(52)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153586)
lbl(153658)	definition(x(7) 153687 pid('MakeUnify' 4 pos('./compiler/CodeGen.oz' 61 3) nil 5) <Q: 1025> nil)
		testBI('==' [x(0) x(1)]#[x(4)] 153672)
		unify(x(2) x(3))
		return
lbl(153672)	getRecord(vUnify 4 x(2))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(3))
		return
		endDefinition(153658)
lbl(153687)	definition(x(7) 153788 pid('MakePermanent' 4 pos('./compiler/CodeGen.oz' 70 3) nil 5) <Q: 1026> nil)
		allocateL3
lbl(153694)	definition(x(4) 153745 pid('' 3 pos('./compiler/CodeGen.oz' 72 7) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(3) generated 153727)
lbl(153722)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(153727)	getList(y(2))
		unifyVariable(x(0))
		unifyValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(153694)
lbl(153745)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		move(y(0) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 8)
		testLiteral(y(0) nil 153774)
lbl(153769)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(153774)	getRecord(vMakePermanent 3 y(1))
		unifyVoid(1)
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL3
		return
		endDefinition(153687)
lbl(153788)	definition(x(7) 153815 pid('Clear' 3 pos('./compiler/CodeGen.oz' 84 3) nil 3) <Q: 1027> nil)
		testLiteral(x(0) nil 153802)
lbl(153798)	unify(x(1) x(2))
		return
lbl(153802)	getRecord(vClear 3 x(1))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(2))
		return
		endDefinition(153788)
lbl(153815)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [coord reg value] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(153831)	definition(x(7) 153851 pid('PseudoVariableOccurrence,init/fast' 1 pos('./compiler/CodeGen.oz' 102 6) nil 3) <Q: 1028> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(153831)
lbl(153851)	definition(x(8) 153877 pid('PseudoVariableOccurrence,init/slow' 1 pos('./compiler/CodeGen.oz' 102 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1028> 3)
		endDefinition(153851)
lbl(153877)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(153887)	definition(x(7) 153915 pid('PseudoVariableOccurrence,getCoord/fast' 1 pos('./compiler/CodeGen.oz' 105 6) nil 3) <Q: 1029> nil)
		getSelf(x(1))
		inlineDot(x(1) coord x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 153909)
		unify(x(0) x(1))
		return
lbl(153909)	getLiteral(unit x(0))
		return
		endDefinition(153887)
lbl(153915)	definition(x(8) 153941 pid('PseudoVariableOccurrence,getCoord/slow' 1 pos('./compiler/CodeGen.oz' 105 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1029> 3)
		endDefinition(153915)
lbl(153941)	putRecord('#' [1 2 fast] x(10))
		setConstant(getCoord)
		setValue(x(8))
		setValue(x(7))
lbl(153951)	definition(x(7) 153965 pid('PseudoVariableOccurrence,getVariable/fast' 1 pos('./compiler/CodeGen.oz' 108 6) nil 2) <Q: 1030> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(153951)
lbl(153965)	definition(x(8) 153991 pid('PseudoVariableOccurrence,getVariable/slow' 1 pos('./compiler/CodeGen.oz' 108 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1030> 3)
		endDefinition(153965)
lbl(153991)	putRecord('#' [1 2 fast] x(11))
		setConstant('getVariable')
		setValue(x(8))
		setValue(x(7))
lbl(154001)	definition(x(7) 154013 pid('PseudoVariableOccurrence,isToplevel/fast' 1 pos('./compiler/CodeGen.oz' 111 6) nil 1) <Q: 1031> nil)
		getLiteral(false x(0))
		return
		endDefinition(154001)
lbl(154013)	definition(x(8) 154039 pid('PseudoVariableOccurrence,isToplevel/slow' 1 pos('./compiler/CodeGen.oz' 111 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1031> 3)
		endDefinition(154013)
lbl(154039)	putRecord('#' [1 2 fast] x(12))
		setConstant(isToplevel)
		setValue(x(8))
		setValue(x(7))
lbl(154049)	definition(x(7) 154058 pid('PseudoVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 114 6) nil 1) <Q: 1032> nil)
		return
		endDefinition(154049)
lbl(154058)	definition(x(8) 154084 pid('PseudoVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 114 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1032> 3)
		endDefinition(154058)
lbl(154084)	putRecord('#' [1 2 fast] x(13))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(154094)	definition(x(7) 154114 pid('PseudoVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 117 6) nil 3) <Q: 1033> nil)
		getSelf(x(1))
		inlineDot(x(1) value x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154094)
lbl(154114)	definition(x(8) 154140 pid('PseudoVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 117 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1033> 3)
		endDefinition(154114)
lbl(154140)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(154150)	definition(x(7) 154170 pid('PseudoVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 120 6) nil 3) <Q: 1034> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154150)
lbl(154170)	definition(x(8) 154196 pid('PseudoVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 120 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1034> 3)
		endDefinition(154170)
lbl(154196)	putRecord('#' [1 2 fast] x(15))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(154206)	definition(x(7) 154354 pid('PseudoVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 123 6) nil 5) <Q: 1035> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		testBI('IsDet' [x(0)]#[x(4)] 154312)
		testBI('IsNumber' [x(0)]#[x(4)] 154248)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154248)	testBI('IsLiteral' [x(0)]#[x(4)] 154272)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154272)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
lbl(154312)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
		endDefinition(154206)
lbl(154354)	definition(x(8) 154401 pid('PseudoVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 123 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1035> 9)
		endDefinition(154354)
lbl(154401)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(154411)	definition(x(7) 154492 pid('PseudoVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 136 6) nil 4) <Q: 1036> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		unify(x(1) x(2))
		testBI('IsDet' [x(0)]#[x(1)] 154472)
		testBI('IsNumber' [x(0)]#[x(1)] 154443)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(154443)	testBI('IsLiteral' [x(0)]#[x(1)] 154454)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(154454)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
lbl(154472)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154411)
lbl(154492)	definition(x(8) 154539 pid('PseudoVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 136 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1036> 9)
		endDefinition(154492)
lbl(154539)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(154549)	definition(x(7) 154566 pid('PseudoVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 150 6) nil 4) <Q: 1037> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(154549)
lbl(154566)	definition(x(8) 154613 pid('PseudoVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 150 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1037> 9)
		endDefinition(154566)
lbl(154613)	putRecord('#' [1 2 fast] x(18))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('PseudoVariableOccurrence' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(154662)	definition(x(7) 154708 pid('NewPseudoVariableOccurrence' 2 pos('./compiler/CodeGen.oz' 156 3) nil 3) <Q: 1038> [y(1)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(newReg x(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(154662)
lbl(154708)	definition(x(7) 154796 pid('MakeMessageArgs' 5 pos('./compiler/CodeGen.oz' 160 3) nil 6) <Q: 1039> nil)
		match(x(0) ht(154781 [onScalar(nil 154717) onRecord('|' 2 154724)]))
lbl(154717)	getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(154724)	allocateL7
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(4) y(3) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		sendMsg(makeVO x(5) 4 cache)
		createVariableMove(y(6) x(0))
		sendMsg(reg y(5) 1 cache)
		getList(y(2))
		unifyValVar(y(6) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(3) y(3) x(4))
		deAllocateL7
		genFastCall(<Q: 1039> 11)
lbl(154781)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154708)
lbl(154796)	definition(x(7) 154940 pid('LoadActualArgs' 5 pos('./compiler/CodeGen.oz' 173 6) nil 5) <Q: 1040> nil)
		match(x(0) ht(154925 [onScalar(nil 154805) onRecord('|' 2 154812)]))
lbl(154805)	unify(x(2) x(3))
		getLiteral(nil x(4))
		return
lbl(154812)	allocateL9
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 154899)
lbl(154846)	testBI('IsName' [x(0)]#[x(1)] 154899)
lbl(154850)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(0) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(6))
		getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(7))
		move(x(1) x(0))
		sendMsg(reg y(0) 1 cache)
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
		branch(154908)
lbl(154899)	unify(y(3) y(7))
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
lbl(154908)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(4) x(3))
		move(y(8) x(4))
		deAllocateL9
		genFastCall(<Q: 1040> 11)
lbl(154925)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(189)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154796)
lbl(154940)	definition(x(7) 154993 pid('GetRegs' 2 pos('./compiler/CodeGen.oz' 192 6) nil 3) <Q: 1041> nil)
		match(x(0) ht(154978 [onScalar(nil 154949) onRecord('|' 2 154953)]))
lbl(154949)	getLiteral(nil x(1))
		return
lbl(154953)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(reg x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1041> 5)
lbl(154978)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(195)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154940)
lbl(154993)	definition(x(7) 155197 pid('MakeApplication' 6 pos('./compiler/CodeGen.oz' 198 6) nil 7) <Q: 1042> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(4) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1040> 10)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 155077)
lbl(155048)	testBI('IsProcedure' [x(0)]#[x(1)] 155077)
lbl(155052)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(8) x(2) y(3) x(3))
		moveMoveYXYX(y(7) x(4) y(5) x(5))
		move(y(0) x(6))
		deAllocateL9
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(155077)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(4) 155155 155184)
lbl(155099)	move(y(3) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 155155)
lbl(155112)	getRecord(vGenCall 8 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(false)
		unifyLiteral('')
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(8) x(0) y(3) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155155)	getRecord(vCall 5 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155184)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(154993)
lbl(155197)	definition(x(7) 155388 pid('MakeRunTimeProcApplication' 6 pos('./compiler/CodeGen.oz' 218 6) nil 9) <Q: 1043> [y(7) y(4) y(6)])
		allocateL8
		move(g(0) x(6))
		inlineDot(x(6) procs x(7) cache)
		callBI('.' [x(7) x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getLastValue x(8) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(5) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1040> 10)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 155335 155375)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(6) x(0))
		sendMsg(init y(1) 1 cache)
		moveMoveYXYX(y(0) x(1) y(7) x(2))
		moveMoveYXYX(y(2) x(3) y(5) x(4))
		move(y(4) x(5))
		putConstant(unit x(0))
		move(y(1) x(6))
		deAllocateL8
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(155335)	getRecord(vFastCall 5 y(5))
		unifyVoid(1)
		unifyValVar(y(6) x(2))
		unifyValue(y(0))
		unifyValue(y(4))
lbl(155348)	definition(x(1) 155368 pid('' 2 pos('./compiler/CodeGen.oz' 228 26) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155348)
lbl(155368)	move(y(1) x(0))
		deAllocateL8
		genFastCall(<P: 29> 7)
lbl(155375)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(223)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(155197)
lbl(155388)	definition(x(7) 155575 pid('MakeException' 6 pos('./compiler/CodeGen.oz' 234 3) nil 6) <Q: 1044> [y(1)])
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(3) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		putRecord(literal 1 x(1))
		setValue(y(0))
		putRecord(number 1 x(3))
		setVariable(x(4))
		putList(x(2))
		setValue(x(3))
		setVariable(x(5))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(0) x(5) y(8))
		testLiteral(y(1) unit 155474)
lbl(155469)	getNumber(~1 x(4))
		branch(155486)
lbl(155474)	move(y(1) x(1))
		inlineDot(x(1) 2 x(2) cache)
		unify(x(2) x(4))
lbl(155486)	definition(x(1) 155512 pid('' 2 pos('./compiler/CodeGen.oz' 239 15) nil 3) unit nil)
		getRecord(value 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155486)
lbl(155512)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral(kernel)
		unifyVariable(x(1))
		unifyValue(y(6))
		unifyValVar(y(0) y(2))
		move(y(0) x(0))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(0) x(1) y(3) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		putConstant('RaiseError' x(0))
		deAllocateL9
		genFastCall(<Q: 1043> 13)
		endDefinition(155388)
lbl(155575)	definition(x(7) 155637 pid('GuardNeedsThread' 2 pos('./compiler/CodeGen.oz' 245 3) nil 3) <Q: 1045> nil)
		testBI('IsFree' [x(0)]#[x(2)] 155589)
		getLiteral(false x(1))
		return
lbl(155589)	match(x(0) ht(155631 [onScalar(nil 155592) onRecord(vEquateNumber 4 155596) onRecord(vEquateLiteral 4 155603) onRecord(vEquateRecord 6 155610) onRecord(vUnify 4 155617) onRecord(vFailure 2 155624)]))
lbl(155592)	getLiteral(false x(1))
		return
lbl(155596)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155603)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155610)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155617)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155624)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155631)	getLiteral(true x(1))
		return
		endDefinition(155575)
lbl(155637)	definition(x(7) 155692 pid('GuardIsShallow' 2 pos('./compiler/CodeGen.oz' 259 3) nil 3) <Q: 1046> nil)
		testBI('IsFree' [x(0)]#[x(2)] 155651)
		getLiteral(true x(1))
		return
lbl(155651)	match(x(0) ht(155686 [onScalar(nil 155654) onRecord(vEquateNumber 4 155658) onRecord(vEquateLiteral 4 155665) onRecord(vEquateRecord 6 155672) onRecord(vUnify 4 155679)]))
lbl(155654)	getLiteral(true x(1))
		return
lbl(155658)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155665)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155672)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155679)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155686)	getLiteral(false x(1))
		return
		endDefinition(155637)
lbl(155692)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: AltNode> <M: Arbiter> <M: Records> <M: Scalars> <M: WarnedCatchAll> coord] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		setConstant(unit)
		putRecord('feat' [<M: Reg> cs] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(155722)	definition(x(7) 155768 pid('SwitchHashTable,init/fast' 5 pos('./compiler/CodeGen.oz' 278 6) nil 5) <Q: 1047> nil)
		inlineAssign(coord x(0) cache)
		inlineAssign(<M: AltNode> x(2) cache)
		inlineAssign(<M: Arbiter> x(3) cache)
		getSelf(x(0))
		inlineDot(x(0) <M: Reg> x(2) cache)
		unify(x(2) x(1))
		getSelf(x(0))
		inlineDot(x(0) cs x(1) cache)
		unify(x(1) x(4))
		return
		endDefinition(155722)
lbl(155768)	definition(x(8) 155821 pid('SwitchHashTable,init/slow' 1 pos('./compiler/CodeGen.oz' 278 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1047> 11)
		endDefinition(155768)
lbl(155821)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(155831)	definition(x(7) 155866 pid('SwitchHashTable,addScalar/fast' 3 pos('./compiler/CodeGen.oz' 285 6) nil 6) <Q: 1048> nil)
		inlineAt(<M: Scalars> x(3) cache)
		putRecord('#' 3 x(5))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(3))
		inlineAssign(<M: Scalars> x(4) cache)
		return
		endDefinition(155831)
lbl(155866)	definition(x(8) 155907 pid('SwitchHashTable,addScalar/slow' 1 pos('./compiler/CodeGen.oz' 285 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1048> 7)
		endDefinition(155866)
lbl(155907)	putRecord('#' [1 2 fast] x(10))
		setConstant(addScalar)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(155919)	definition(x(7) 155958 pid('SwitchHashTable,addRecord/fast' 2 pos('./compiler/CodeGen.oz' 288 6) nil 5) <Q: 1049> [y(2)])
		allocateL1
		inlineAt(<M: Records> x(4) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(0) x(3))
		genCall(gci(g(0) true <M: AddRecord> false 4) 0)
		move(y(0) x(0))
		inlineAssign(<M: Records> x(0) cache)
		deAllocateL1
		return
		endDefinition(155919)
lbl(155958)	definition(x(8) 155993 pid('SwitchHashTable,addRecord/slow' 1 pos('./compiler/CodeGen.oz' 288 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1049> 5)
		endDefinition(155958)
lbl(155993)	putRecord('#' [1 2 fast] x(11))
		setConstant(addRecord)
		setValue(x(8))
		setValue(x(7))
lbl(156003)	definition(x(7) 156092 pid('SwitchHashTable,AddRecord/fast' 4 pos('./compiler/CodeGen.oz' 291 6) nil 8) <Q: 1050> [y(2)])
		match(x(0) ht(156077 [onScalar(nil 156012) onRecord('|' 2 156032)]))
lbl(156012)	getList(x(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(156032)	getVarVar(x(0) x(4))
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		testBI('==' [x(5) x(1)]#[x(7)] 156067)
		getList(x(3))
		unifyVariable(x(0))
		unifyValue(x(4))
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
		return
lbl(156067)	getListValVar(x(3) x(0) x(3))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: AddRecord> true 4) 0)
lbl(156077)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(298)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156003)
lbl(156092)	definition(x(8) 156139 pid('SwitchHashTable,AddRecord/slow' 1 pos('./compiler/CodeGen.oz' 291 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1050> 9)
		endDefinition(156092)
lbl(156139)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AddRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(156149)	definition(x(7) 156523 pid('SwitchHashTable,codeGen/fast' 2 pos('./compiler/CodeGen.oz' 301 6) nil 5) <Q: 1051> [y(2)])
		allocateL7
		getSelf(x(2))
		inlineDot(x(2) cs x(2) cache)
		inlineAt(<M: Scalars> x(3) cache)
		inlineDot(x(2) debugInfoVarnamesSwitch x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariable(y(4))
		testBool(x(4) 156296 156373)
lbl(156191)	definition(x(4) 156291 pid('' 3 pos('./compiler/CodeGen.oz' 306 6) nil 6) unit [y(2)])
		shallowGuard(156278)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156209)	shallowThen
		allocateL8
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(3) x(0))
		move(g(0) x(1))
		move(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL8
		return
lbl(156278)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(306)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156191)
lbl(156291)	unify(x(4) y(4))
		branch(156384)
lbl(156296)	definition(x(4) 156368 pid('' 3 pos('./compiler/CodeGen.oz' 314 6) nil 6) unit [y(2)])
		shallowGuard(156355)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156314)	shallowThen
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(156355)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(314)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156296)
lbl(156368)	unify(x(4) y(4))
		branch(156384)
lbl(156373)	putRecord(kernel 2 x(4))
		setConstant(boolCaseType)
		setConstant(305)
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(156384)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: Records> x(0) cache)
		getSelf(x(3))
lbl(156405)	definition(x(1) 156452 pid('' 2 pos('./compiler/CodeGen.oz' 321 3) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(156439)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(156426)	shallowThen
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genCall(gci(g(1) true <M: CodeGenRecord> true 3) 0)
lbl(156439)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156405)
lbl(156452)	move(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vMatch 7 y(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValVar(y(6) x(1))
		unifyValue(y(1))
		unifyVoid(1)
		getSelf(x(2))
		inlineDot(x(2) <M: Reg> x(3) cache)
		unify(x(3) x(0))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL7
		return
		endDefinition(156149)
lbl(156523)	definition(x(8) 156558 pid('SwitchHashTable,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 301 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1051> 5)
		endDefinition(156523)
lbl(156558)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
lbl(156568)	definition(x(7) 157622 pid('SwitchHashTable,CodeGenRecord/fast' 3 pos('./compiler/CodeGen.oz' 327 6) nil 10) <Q: 1052> nil)
		allocateL(13)
		getSelf(x(3))
		inlineDot(x(3) cs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testList(y(3) 157071)
lbl(156599)	getVarVar(x(4) x(5))
		shallowGuard(157071)
		getRecord('#' 4 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getLiteral(nil x(5))
lbl(156619)	shallowThen
		createVariable(x(9))
lbl(156622)	definition(x(1) 156708 pid('MakeGuard' 6 pos('./compiler/CodeGen.oz' 335 5) nil 8) unit [y(4) x(9)])
		match(x(0) ht(156693 [onScalar(nil 156631) onRecord('|' 2 156638)]))
lbl(156631)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(156638)	allocateL6
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(g(0) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		move(x(3) x(4))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(5))
		createVariableMove(y(5) x(6))
		sendMsg(makeGetArg x(7) 7 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		deAllocateL6
		tailCall(g(1) 6)
lbl(156693)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(347)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156622)
lbl(156708)	unify(x(1) x(9))
		moveMoveXYXY(x(4) y(3) x(7) y(5))
		move(x(8) y(6))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		call(x(9) 6)
		move(y(4) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(10))
		testBool(x(1) 156796 156812)
		moveMoveYXYX(y(3) x(0) y(10) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(12) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(156823)
lbl(156796)	moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(10) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(156823)
lbl(156812)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(353)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(156823)	move(y(8) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 156835)
		unify(y(7) y(10))
		branch(157565)
lbl(156835)	createVariableMove(y(3) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(3) 156924 157060)
		getLiteral(nil y(9))
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeRegSet y(4) 1 cache)
		inlineAt(<M: Arbiter> x(2) cache)
		putList(x(0))
		setValue(x(2))
		setConstant(nil)
		move(y(5) x(1))
		sendMsg(enterVs y(4) 2 cache)
		getRecord(vShallowGuard 8 y(7))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(3))
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyValue(y(5))
		unifyVoid(1)
		branch(157565)
lbl(156924)	move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 156991 156980)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating deep pattern as ')
		setConstant('general conditional')
		move(y(5) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(156991)
lbl(156980)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(372)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(156991)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord('#' 3 x(1))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		branch(157565)
lbl(157060)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(364)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157071)	createVariable(y(5))
lbl(157073)	definition(x(0) 157140 pid('MakeGuard' 4 pos('./compiler/CodeGen.oz' 384 5) nil 5) unit [y(4) y(5)])
		match(x(0) ht(157125 [onScalar(nil 157082) onRecord('|' 2 157086)]))
lbl(157082)	unify(x(2) x(3))
		return
lbl(157086)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(3) y(2))
		move(g(0) x(0))
		createVariableMove(y(3) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		tailCall(g(1) 4)
lbl(157125)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157073)
lbl(157140)	unify(x(0) y(5))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(3)])
lbl(157149)	definition(x(1) 157163 pid('' 2 pos('./compiler/CodeGen.oz' 395 5) nil 2) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1038> 5)
		endDefinition(157149)
lbl(157163)	move(x(3) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(157172)	definition(x(1) 157196 pid('' 3 pos('./compiler/CodeGen.oz' 397 6) nil 3) unit nil)
		getRecord(vGetVariable 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(157172)
lbl(157196)	moveMoveYXYX(y(6) x(0) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
lbl(157207)	definition(x(1) 157436 pid('' 3 pos('./compiler/CodeGen.oz' 402 6) nil 7) unit [y(5) y(6) y(4)])
		shallowGuard(157423)
		getRecord('#' 4 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(157227)	shallowThen
		allocateL10
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		call(g(0) 4)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(8))
		createVariable(y(9))
		testBool(y(7) 157293 157301)
		getLiteral(nil y(6))
		getRecord(vThread 5 y(8))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(3))
		unifyValue(y(9))
		unifyVoid(1)
		branch(157312)
lbl(157293)	unify(y(6) y(9))
		unify(y(8) y(5))
		branch(157312)
lbl(157301)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(406)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157312)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		move(g(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(3))
		testBool(x(1) 157377 157394)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(4) x(0))
		move(g(2) x(1))
		move(y(6) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(157405)
lbl(157377)	move(y(4) x(0))
		move(g(2) x(1))
		move(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(157405)
lbl(157394)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157405)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		deAllocateL10
		return
lbl(157423)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(402)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157207)
lbl(157436)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 157547 157536)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(3) x(0))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 3 x(0) cache)
		putConstant('optimization warning' x(1))
		putConstant('translating deep pattern as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(157547)
lbl(157536)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(424)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157547)	getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
lbl(157565)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 157596)
		getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
lbl(157596)	getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
		endDefinition(156568)
lbl(157622)	definition(x(8) 157663 pid('SwitchHashTable,CodeGenRecord/slow' 1 pos('./compiler/CodeGen.oz' 327 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1052> 7)
		endDefinition(157622)
lbl(157663)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CodeGenRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('SwitchHashTable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(157701)	definition(x(7) 157816 pid('MakeFromPropSub' 5 pos('./compiler/CodeGen.oz' 440 6) nil 5) <Q: 1053> nil)
		match(x(0) ht(157801 [onScalar(nil 157710) onRecord('|' 2 157720)]))
lbl(157710)	unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyLiteral(nil)
		return
lbl(157720)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1053> 10)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeRecordArgument y(0) 4 cache)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(7) x(1))
		getList(x(1))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(3))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(157801)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(450)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157701)
lbl(157816)	definition(x(7) 157910 pid('MakeFromProp' 5 pos('./compiler/CodeGen.oz' 453 6) nil 6) <Q: 1054> [y(1)])
		allocateL4
		move(x(4) y(0))
		createVariable(y(1))
		match(x(0) ht(157873 [onScalar(nil 157831) onRecord('|' 2 157859)]))
lbl(157831)	moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(newReg x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(1))
		unifyValue(y(3))
		branch(157886)
lbl(157859)	putRecord(value 1 x(5))
		setValue(y(1))
		move(x(5) x(4))
		genFastCall(<Q: 1053> 10)
		branch(157886)
lbl(157873)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(459)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157886)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL4
		return
		endDefinition(157816)
lbl(157910)	definition(x(7) 158027 pid('MakeAttrFeatSub' 3 pos('./compiler/CodeGen.oz' 465 6) nil 5) <Q: 1055> [y(7)])
		match(x(0) ht(158012 [onScalar(nil 157919) onRecord('|' 2 157923)]))
lbl(157919)	getLiteral(nil x(2))
		return
lbl(157923)	allocateL6
		getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(4) y(2))
		testRecord(x(0) '#' 2 157951)
lbl(157946)	unify(x(2) x(0))
		branch(158000)
lbl(157951)	moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(5) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(0) x(2))
		inlineDot(x(2) literals x(3) cache)
		inlineDot(x(3) ooFreeFlag x(4) cache)
		unify(x(4) x(1))
		getRecord('#' 2 y(4))
		unifyValue(y(3))
		unifyValue(y(5))
lbl(158000)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1055> 7)
lbl(158012)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157910)
lbl(158027)	definition(x(7) 158140 pid('MakeAttrFeat' 6 pos('./compiler/CodeGen.oz' 478 6) nil 9) <Q: 1056> [y(6)])
		allocateL7
		move(g(0) x(6))
		inlineDot(x(6) atomNode x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(8) y(5))
		putConstant(unit x(1))
		sendMsg(init y(5) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1055> 6)
		move(g(0) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		move(y(6) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(158027)
lbl(158140)	definition(x(7) 158256 pid('CodeGenRecord,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 489 6) nil 3) <Q: 1057> nil)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 158252)
lbl(158171)	inlineAt(args x(0) cache)
lbl(158176)	definition(x(1) 158219 pid('' 2 pos('./compiler/CodeGen.oz' 492 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 158213)
lbl(158187)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(158213)	getLiteral(true x(1))
		return
		endDefinition(158176)
lbl(158219)	createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 158239 158241)
lbl(158229)	inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(158239)	deAllocateL2
		return
lbl(158241)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158252)	deAllocateL2
		return
		endDefinition(158140)
lbl(158256)	definition(x(8) 158282 pid('CodeGenRecord,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 489 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1057> 3)
		endDefinition(158256)
lbl(158282)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(4))
lbl(158294)	definition(x(7) 158943 pid('CodeGenRecord,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 501 6) nil 6) <Q: 1058> [y(4) g(24) g(25) g(26) g(27) g(28)])
		allocateL8
		inlineAt(args x(4) cache)
lbl(158306)	definition(x(5) 158344 pid('' 1 pos('./compiler/CodeGen.oz' 505 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 158330)
lbl(158317)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
lbl(158330)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
		endDefinition(158306)
lbl(158344)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 158403 158930)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: MakeConstructionOpen> false 4) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158403)	inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(158422)	definition(x(1) 158450 pid('' 3 pos('./compiler/CodeGen.oz' 519 7) nil 3) unit nil)
		testRecord(x(1) '#' 2 158444)
lbl(158433)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(158444)	unify(x(2) x(0))
		return
		endDefinition(158422)
lbl(158450)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		move(y(4) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		move(g(2) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 158520 158919)
lbl(158480)	testBool(y(7) 158520 158919)
lbl(158484)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		move(y(2) x(4))
		createVariableMove(y(6) x(5))
		genCall(gci(g(0) true <M: MakeConstructionBasic> false 6) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158520)	testBool(y(7) 158787 158908)
		inlineAt(args x(1) cache)
lbl(158529)	definition(x(2) 158564 pid('' 3 pos('./compiler/CodeGen.oz' 532 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 158553)
lbl(158540)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(158553)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(158529)
lbl(158564)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(158695)
		move(x(0) y(6))
		createCond(158689)
lbl(158582)	lastClause
		clause
		thread(158600)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(158600)	ask
lbl(158601)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(158639)	definition(x(1) 158676 pid('' 3 pos('./compiler/CodeGen.oz' 541 26) nil 5) unit nil)
		shallowGuard(158663)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(158655)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(158663)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(541)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158639)
lbl(158676)	moveMoveYXYX(y(4) x(0) y(5) x(3))
		putConstant(someLabel x(2))
		genFastCall(<P: 30> 8)
		branch(158708)
lbl(158689)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(158695)	putConstant(someLabel x(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(158708)	move(y(5) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 158748)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		createVariableMove(y(4) x(4))
		genCall(gci(g(0) true <M: MakeConstructionTuple> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158748)	createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158787)	inlineAt(args x(1) cache)
lbl(158792)	definition(x(2) 158866 pid('' 3 pos('./compiler/CodeGen.oz' 554 9) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(1) '#' 2 158824)
lbl(158813)	getVarVar(x(1) x(3))
		unify(y(2) x(1))
		unify(y(3) x(3))
		branch(158827)
lbl(158824)	unify(y(3) x(1))
lbl(158827)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(3))
		moveMoveXYYX(x(0) y(1) y(0) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 158859)
lbl(158844)	testBI('IsInt' [x(1)]#[x(2)] 158853)
lbl(158848)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(158853)	testBI('IsLiteral' [x(1)]#[x(2)] 158859)
		branch(158848)
lbl(158859)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(158792)
lbl(158866)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158908)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(530)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158919)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158930)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(513)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158294)
lbl(158943)	definition(x(8) 158990 pid('CodeGenRecord,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 501 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1058> 9)
		endDefinition(158943)
lbl(158990)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(159000)	definition(x(7) 159508 pid('CodeGenRecord,MakeConstructionBasic/fast' 6 pos('./compiler/CodeGen.oz' 568 6) nil 8) <Q: 1059> [g(26) g(27)])
		testLiteral(x(3) nil 159027)
lbl(159010)	getRecord(vEquateLiteral 4 x(4))
		unifyVoid(1)
		unifyValVar(x(2) x(0))
		unifyValue(x(5))
		tailSendMsg(reg x(1) 1 cache)
lbl(159027)	allocateL9
		inlineAt(args x(6) cache)
lbl(159033)	definition(x(7) 159068 pid('' 3 pos('./compiler/CodeGen.oz' 573 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 159057)
lbl(159044)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(159057)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(159033)
lbl(159068)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(3) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(6))
		exHandler(159237)
		move(x(0) y(7))
		createCond(159231)
lbl(159105)	lastClause
		clause
		thread(159123)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(159123)	ask
lbl(159124)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(159162)	definition(x(0) 159199 pid('' 3 pos('./compiler/CodeGen.oz' 582 30) nil 5) unit nil)
		shallowGuard(159186)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159178)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(159186)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(582)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159162)
lbl(159199)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(159249)
lbl(159231)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(159237)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(159249)	createVariable(y(5))
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 159374)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(8))
lbl(159276)	definition(x(3) 159352 pid('' 3 pos('./compiler/CodeGen.oz' 588 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159339)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159292)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159339)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159276)
lbl(159352)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(159481)
lbl(159374)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(8))
lbl(159388)	definition(x(4) 159464 pid('' 3 pos('./compiler/CodeGen.oz' 595 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159451)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159404)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159451)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(595)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159388)
lbl(159464)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(159481)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValVar(y(5) x(0))
		unifyValue(y(7))
		unifyValue(y(8))
		move(y(1) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(159000)
lbl(159508)	definition(x(8) 159567 pid('CodeGenRecord,MakeConstructionBasic/slow' 1 pos('./compiler/CodeGen.oz' 568 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1059> 13)
		endDefinition(159508)
lbl(159567)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(8))
		setValue(x(7))
lbl(159577)	definition(x(7) 159997 pid('CodeGenRecord,MakeConstructionOpen/fast' 4 pos('./compiler/CodeGen.oz' 603 6) nil 7) <Q: 1060> [y(1) g(29)])
		allocateL10
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(4) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyValVar(y(4) y(2))
		inlineAt(args x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		createVariable(y(7))
		testBool(y(4) 159723 159808)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159819)
lbl(159723)	createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(4) x(0))
		sendMsg(init y(8) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(9))
		unifyValVar(y(4) x(4))
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(y(8))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159819)
lbl(159808)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(614)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(159819)	inlineAt(args x(0) cache)
lbl(159824)	definition(x(1) 159986 pid('' 4 pos('./compiler/CodeGen.oz' 626 3) nil 6) unit [y(0) y(1) y(5)])
		allocateL7
		move(x(3) y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(2) '#' 2 159882)
lbl(159845)	getVarVar(x(4) y(4))
		move(g(0) x(0))
		move(y(1) x(3))
		createVariableMove(y(5) x(2))
		sendMsg(makeVO x(4) 4 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(4) 4 cache)
		branch(159948)
lbl(159882)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(2) y(6))
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(4))
		getRecord(vEquateNumber 4 y(5))
		unifyVoid(1)
		unifyValVar(y(4) x(1))
		unifyVariable(y(5))
		move(x(1) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(6) 4 cache)
lbl(159948)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putList(x(0))
		setValue(y(1))
		setValue(x(1))
		putList(x(2))
		setValue(g(1))
		setValue(x(0))
		move(g(2) x(1))
		move(g(0) x(3))
		moveMoveYXYX(y(3) x(4) y(0) x(5))
		putConstant('^' x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
		endDefinition(159824)
lbl(159986)	moveMoveYXYX(y(7) x(2) y(3) x(3))
		deAllocateL10
		genFastCall(<P: 82> 9)
		endDefinition(159577)
lbl(159997)	definition(x(8) 160044 pid('CodeGenRecord,MakeConstructionOpen/slow' 1 pos('./compiler/CodeGen.oz' 603 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1060> 9)
		endDefinition(159997)
lbl(160044)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(8))
		setValue(x(7))
lbl(160054)	definition(x(7) 160558 pid('CodeGenRecord,MakeConstructionTuple/fast' 5 pos('./compiler/CodeGen.oz' 640 6) nil 7) <Q: 1061> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(x(1) y(8))
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(9) x(0))
		sendMsg(init y(10) 1 cache)
		createVariable(y(11))
		testNumber(y(8) 0 160170)
lbl(160156)	getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(6))
		unifyValue(y(11))
		branch(160360)
lbl(160170)	createVariable(x(4))
lbl(160172)	definition(x(0) 160291 pid('MakeList' 4 pos('./compiler/CodeGen.oz' 655 5) nil 6) unit [y(8) x(4) y(0) y(2)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 160279)
		allocateL7
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(1) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(2) 1 cache)
		move(g(3) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(g(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(160279)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
		endDefinition(160172)
lbl(160291)	unify(x(0) x(4))
		move(y(3) x(1))
		putConstant(2 x(0))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(4) 4)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(4) cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(11))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(13))
		unifyLiteral(nil)
lbl(160360)	getRecord(vEquateNumber 4 y(11))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(9) y(2))
		inlineAt(label x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(3) 160444 160545)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160444)	createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(3) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(3) y(2))
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160545)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(676)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160054)
lbl(160558)	definition(x(8) 160611 pid('CodeGenRecord,MakeConstructionTuple/slow' 1 pos('./compiler/CodeGen.oz' 640 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1061> 11)
		endDefinition(160558)
lbl(160611)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(8))
		setValue(x(7))
lbl(160621)	definition(x(7) 161265 pid('CodeGenRecord,MakeConstructionRecord/fast' 5 pos('./compiler/CodeGen.oz' 688 6) nil 7) <Q: 1062> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		createVariable(y(8))
		testList(y(2) 161077)
lbl(160687)	getVarVar(x(0) x(1))
		shallowGuard(161077)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(160700)	shallowThen
		createVariable(x(4))
lbl(160703)	definition(x(0) 160924 pid('MakePairList' 4 pos('./compiler/CodeGen.oz' 697 5) nil 8) unit [x(4) y(0)])
		allocateL10
		move(x(0) y(0))
		match(y(0) ht(160909 [onScalar(nil 160716) onRecord('|' 2 160727)]))
lbl(160716)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		deAllocateL10
		return
lbl(160727)	getVarVar(x(4) x(5))
		shallowGuard(160909)
		getRecord('#' 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(160740)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(g(0) 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(8))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 160798)
		getRecord(number 1 y(8))
		unifyValue(y(2))
		branch(160825)
lbl(160798)	testBI('IsLiteral' [x(0)]#[x(1)] 160810)
		getRecord(literal 1 y(8))
		unifyValue(y(2))
		branch(160825)
lbl(160810)	getRecord(value 1 y(8))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(160825)	move(g(1) x(0))
		move(y(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeRecordArgument y(3) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(8) x(2))
		getList(x(2))
		unifyValue(y(9))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(6))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(1))
		unifyValue(y(7))
		deAllocateL10
		return
lbl(160909)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(718)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160703)
lbl(160924)	unify(x(0) x(4))
		moveMoveXYXY(x(2) y(2) x(3) y(9))
		move(x(1) x(0))
		move(y(3) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		call(x(4) 4)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		createVariable(y(12))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 160973)
		getRecord(number 1 y(12))
		unifyValue(y(2))
		branch(161000)
lbl(160973)	testBI('IsLiteral' [x(0)]#[x(1)] 160985)
		getRecord(literal 1 y(12))
		unifyValue(y(2))
		branch(161000)
lbl(160985)	getRecord(value 1 y(12))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(161000)	moveMoveYXYX(y(0) x(0) y(10) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(13) x(3))
		sendMsg(makeRecordArgument y(9) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(3) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(12) x(2))
		getList(x(2))
		unifyValue(y(13))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(11))
		unifyLiteral(nil)
		branch(161090)
lbl(161077)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(733)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(161090)	inlineAt(label x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 161157 161252)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161157)	createVariableMove(y(2) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValVar(y(2) y(8))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(3))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161252)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(734)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160621)
lbl(161265)	definition(x(8) 161318 pid('CodeGenRecord,MakeConstructionRecord/slow' 1 pos('./compiler/CodeGen.oz' 688 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1062> 11)
		endDefinition(161265)
lbl(161318)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(4) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenRecord' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(161365)	definition(x(7) 161448 pid('OzValueToVArg' 5 pos('./compiler/CodeGen.oz' 749 6) nil 6) <Q: 1063> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 161385)
		unify(x(2) x(3))
		getRecord(number 1 x(4))
		unifyValue(x(0))
		return
lbl(161385)	testBI('IsLiteral' [x(0)]#[x(5)] 161399)
		unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyValue(x(0))
		return
lbl(161399)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		genFastCall(<Q: 1064> 10)
		getRecord(value 1 y(4))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(161365)
lbl(161448)	definition(x(7) 161786 pid('OzValueToVInstr' 5 pos('./compiler/CodeGen.oz' 763 6) nil 8) <Q: 1064> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 161471)
		getRecord(vEquateNumber 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161471)	testBI('IsLiteral' [x(0)]#[x(5)] 161488)
		getRecord(vEquateLiteral 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161488)	testBI('IsTuple' [x(0)]#[x(5)] 161637)
		allocateL6
		createVariable(x(5))
		createVariable(x(6))
lbl(161497)	definition(x(7) 161576 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 769 5) nil 7) unit [x(5) x(0) x(2) x(6)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 161567)
		allocateL5
		move(g(1) x(5))
		callBI('.' [x(5) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		tailCall(g(3) 4)
lbl(161567)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
		endDefinition(161497)
lbl(161576)	unify(x(7) x(6))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(1))
		putConstant(1 x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(6) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161637)	testBI('IsRecord' [x(0)]#[x(5)] 161783)
		allocateL6
		createVariable(x(5))
lbl(161644)	definition(x(6) 161725 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 784 5) nil 6) unit [x(0) x(2) x(5)])
		match(x(0) ht(161710 [onScalar(nil 161653) onRecord('|' 2 161660)]))
lbl(161653)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(161660)	allocateL5
		getVarVar(x(0) y(0))
		move(g(0) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(g(2) 4)
lbl(161710)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(791)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(161644)
lbl(161725)	unify(x(6) x(5))
		callBI('Arity' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(2) y(3))
		move(y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161783)	return
		endDefinition(161448)
lbl(161786)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [<M: Val> reg] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(161800)	definition(x(7) 161820 pid('CodeGenOzValue,init/fast' 1 pos('./compiler/CodeGen.oz' 808 2) nil 3) <Q: 1065> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161800)
lbl(161820)	definition(x(8) 161846 pid('CodeGenOzValue,init/slow' 1 pos('./compiler/CodeGen.oz' 808 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1065> 3)
		endDefinition(161820)
lbl(161846)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(161856)	definition(x(7) 161876 pid('CodeGenOzValue,reg/fast' 1 pos('./compiler/CodeGen.oz' 811 2) nil 3) <Q: 1066> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161856)
lbl(161876)	definition(x(8) 161902 pid('CodeGenOzValue,reg/slow' 1 pos('./compiler/CodeGen.oz' 811 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1066> 3)
		endDefinition(161876)
lbl(161902)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(161912)	definition(x(7) 161965 pid('CodeGenOzValue,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 814 2) nil 5) <Q: 1067> nil)
		allocateL5
		getSelf(x(4))
		inlineDot(x(4) <M: Val> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<Q: 1064> 11)
		endDefinition(161912)
lbl(161965)	definition(x(8) 162012 pid('CodeGenOzValue,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 814 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1067> 9)
		endDefinition(161965)
lbl(162012)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(162022)	definition(x(7) 162050 pid('CodeGenOzValue,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 817 2) nil 3) <Q: 1068> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(162022)
lbl(162050)	definition(x(8) 162076 pid('CodeGenOzValue,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 817 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1068> 3)
		endDefinition(162050)
lbl(162076)	putRecord('#' [1 2 fast] x(12))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(162086)	definition(x(7) 162145 pid('CodeGenOzValue,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 820 2) nil 4) <Q: 1069> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Val> x(0) cache)
		unify(x(1) x(2))
		testBI('IsNumber' [x(0)]#[x(1)] 162114)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(162114)	testBI('IsLiteral' [x(0)]#[x(1)] 162125)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(162125)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(162086)
lbl(162145)	definition(x(8) 162192 pid('CodeGenOzValue,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 820 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1069> 9)
		endDefinition(162145)
lbl(162192)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(162202)	definition(x(7) 162236 pid('CodeGenOzValue,isConstruction/fast' 1 pos('./compiler/CodeGen.oz' 827 2) nil 3) <Q: 1070> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(1) cache)
		testBI('IsRecord' [x(1)]#[x(2)] 162230)
		callBI('IsLiteral' [x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(1)])
		unify(x(1) x(0))
		return
lbl(162230)	getLiteral(false x(0))
		return
		endDefinition(162202)
lbl(162236)	definition(x(8) 162262 pid('CodeGenOzValue,isConstruction/slow' 1 pos('./compiler/CodeGen.oz' 827 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1070> 3)
		endDefinition(162236)
lbl(162262)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('CodeGenOzValue' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162303)	definition(x(7) 162623 pid('CodeGenStatement,startCodeGen/fast' 7 pos('./compiler/CodeGen.oz' 834 6) nil 12) <Q: 1071> [y(0) g(24)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		move(x(2) x(1))
		sendMsg(init y(5) 2 cache)
lbl(162343)	definition(x(1) 162363 pid('' 1 pos('./compiler/CodeGen.oz' 839 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162343)
lbl(162363)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(162369)	definition(x(1) 162389 pid('' 1 pos('./compiler/CodeGen.oz' 840 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162369)
lbl(162389)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		sendMsg(startDefinition y(5) 0 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		putConstant(nil x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		createVariableMove(y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg('endDefinition' y(5) 6 cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(y(3) x(1))
		sendMsg(getRegNames y(5) 2 cache)
		callBI('NewName' nil#[x(3)])
		callBI('NewName' nil#[x(0)])
		getList(y(4))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
		getList(x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('definition' 6 x(4))
		unifyVariable(x(6))
		unifyValVar(x(0) x(7))
		unifyLiteral(unit)
		unifyVariable(x(8))
		unifyValue(y(2))
		getRecord(x 1 x(6))
		unifyNumber(0)
		getRecord('pid' 5 x(7))
		unifyLiteral('Toplevel abstraction')
		unifyNumber(0)
		unifyVariable(x(9))
		unifyVariable(x(10))
		unifyValue(y(6))
		getRecord('pos' 3 x(9))
		unifyLiteral('')
		unifyNumber(0)
		unifyNumber(0)
		getList(x(10))
		unifyLiteral(native)
		unifyLiteral(nil)
		getList(x(5))
		unifyVariable(x(11))
		unifyVariable(y(3))
		getRecord('endDefinition' 1 x(11))
		unifyValue(x(3))
lbl(162548)	definition(x(1) 162569 pid('' 3 pos('./compiler/CodeGen.oz' 854 30) nil 3) unit nil)
		getRecord(g 1 x(2))
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		unify(x(2) x(1))
		return
		endDefinition(162548)
lbl(162569)	moveMoveXYYX(x(0) y(2) y(0) x(0))
		move(x(8) x(2))
		genFastCall(<P: 81> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		putRecord(x 1 x(4))
		setConstant(0)
		putRecord('tailCall' 2 x(3))
		setValue(x(4))
		setConstant(0)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putList(x(1))
		setValue(x(0))
		setValue(x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL7
		genFastCall(<P: 21> 7)
		endDefinition(162303)
lbl(162623)	definition(x(8) 162688 pid('CodeGenStatement,startCodeGen/slow' 1 pos('./compiler/CodeGen.oz' 834 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1071> 15)
		endDefinition(162623)
lbl(162688)	putRecord('#' [1 2 fast] x(9))
		setConstant(startCodeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStatement' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162725)	definition(x(7) 162787 pid('CodeGenTypeOf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 862 6) nil 6) <Q: 1072> [y(8)])
		allocateL4
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		move(x(3) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(res x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(3) x(4))
		deAllocateL4
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(162725)
lbl(162787)	definition(x(8) 162828 pid('CodeGenTypeOf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 862 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1072> 7)
		endDefinition(162787)
lbl(162828)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162865)	definition(x(7) 162923 pid('CodeGenStepPoint,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 868 6) nil 6) <Q: 1073> nil)
		allocateL4
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(coord x(0) cache)
		inlineAt(kind x(1) cache)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		deAllocateL4
		genFastCall(<Q: 1024> 13)
		endDefinition(162865)
lbl(162923)	definition(x(8) 162964 pid('CodeGenStepPoint,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 868 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1073> 7)
		endDefinition(162923)
lbl(162964)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163001)	definition(x(7) 163144 pid('CodeGenDeclaration,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 875 6) nil 5) <Q: 1074> nil)
		allocateL5
		inlineAt(localVars x(3) cache)
lbl(163013)	definition(x(4) 163033 pid('' 1 pos('./compiler/CodeGen.oz' 876 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(163013)
lbl(163033)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 163111 163131)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(163111)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(163131)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(877)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163001)
lbl(163144)	definition(x(8) 163185 pid('CodeGenDeclaration,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 875 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1074> 7)
		endDefinition(163144)
lbl(163185)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDeclaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163222)	definition(x(7) 163252 pid('CodeGenSkipNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 888 6) nil 6) <Q: 1075> nil)
		inlineAt(coord x(0) cache)
		createVariable(x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(5))
		putConstant('skip' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(163222)
lbl(163252)	definition(x(8) 163293 pid('CodeGenSkipNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 888 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1075> 7)
		endDefinition(163252)
lbl(163293)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenSkipNode' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163330)	definition(x(7) 163363 pid('CodeGenEquation,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 894 6) nil 6) <Q: 1076> nil)
		inlineAt(right x(4) cache)
		inlineAt(left x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(163330)
lbl(163363)	definition(x(8) 163404 pid('CodeGenEquation,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 894 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1076> 7)
		endDefinition(163363)
lbl(163404)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquation' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(4))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(163453)	definition(x(7) 163462 pid('CodeGenConstruction,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 901 6) nil 1) <Q: 1077> nil)
		return
		endDefinition(163453)
lbl(163462)	definition(x(8) 163488 pid('CodeGenConstruction,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 901 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1077> 3)
		endDefinition(163462)
lbl(163488)	putRecord('#' [1 2 fast] x(9))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(163498)	definition(x(7) 163510 pid('CodeGenConstruction,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 904 6) nil 3) <Q: 1078> nil)
		unify(x(1) x(2))
		return
		endDefinition(163498)
lbl(163510)	definition(x(8) 163551 pid('CodeGenConstruction,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 904 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1078> 7)
		endDefinition(163510)
lbl(163551)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(163561)	definition(x(7) 163600 pid('CodeGenConstruction,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 907 6) nil 4) <Q: 1079> [y(4)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true makeEquation true 4) 0)
		endDefinition(163561)
lbl(163600)	definition(x(8) 163647 pid('CodeGenConstruction,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 907 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1079> 9)
		endDefinition(163600)
lbl(163647)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(163657)	definition(x(7) 164269 pid('CodeGenConstruction,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 911 6) nil 6) <Q: 1080> [g(24) g(25) g(26) g(27) y(4)])
		allocateL9
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(4) 1 cache)
		inlineAt(args x(0) cache)
lbl(163693)	definition(x(1) 163721 pid('' 3 pos('./compiler/CodeGen.oz' 914 4) nil 3) unit nil)
		testRecord(x(1) '#' 2 163715)
lbl(163704)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(163715)	unify(x(2) x(0))
		return
		endDefinition(163693)
lbl(163721)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 164218)
lbl(163736)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 164218)
lbl(163743)	move(y(5) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 164218 164256)
lbl(163759)	testLiteral(y(5) nil 163774)
lbl(163763)	unify(y(1) y(2))
		getRecord(literal 1 y(3))
		unifyValue(y(4))
		deAllocateL9
		return
lbl(163774)	inlineAt(args x(1) cache)
lbl(163779)	definition(x(2) 163814 pid('' 3 pos('./compiler/CodeGen.oz' 923 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 163803)
lbl(163790)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(163803)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(163779)
lbl(163814)	move(y(5) x(0))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(163964)
		move(x(0) y(7))
		createCond(163958)
lbl(163832)	lastClause
		clause
		thread(163850)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(163850)	ask
lbl(163851)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(163889)	definition(x(0) 163926 pid('' 3 pos('./compiler/CodeGen.oz' 932 26) nil 5) unit nil)
		shallowGuard(163913)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163905)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(163913)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(932)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163889)
lbl(163926)	moveMoveXYYX(x(0) y(7) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		genFastCall(<P: 30> 8)
		branch(163976)
lbl(163958)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(163964)	moveMoveYXYX(y(4) x(0) y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(163976)	createVariable(y(6))
		createVariable(y(7))
		move(y(5) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 164099)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(1))
lbl(164001)	definition(x(3) 164077 pid('' 3 pos('./compiler/CodeGen.oz' 938 10) nil 6) unit [y(5) y(0)])
		shallowGuard(164064)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(164017)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(164064)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(938)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164001)
lbl(164077)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(164206)
lbl(164099)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(1))
lbl(164113)	definition(x(4) 164189 pid('' 3 pos('./compiler/CodeGen.oz' 945 10) nil 6) unit [y(5) y(0)])
		shallowGuard(164176)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(164129)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(164176)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(945)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164113)
lbl(164189)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(164206)	getRecord(record 3 y(3))
		unifyValue(y(4))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL9
		return
lbl(164218)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		genCall(gci(g(4) true makeEquation false 4) 0)
		getRecord(value 1 y(3))
		unifyVariable(x(0))
		move(y(4) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
lbl(164256)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163657)
lbl(164269)	definition(x(8) 164316 pid('CodeGenConstruction,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 911 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1080> 9)
		endDefinition(164269)
lbl(164316)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenConstruction' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(164353)	definition(x(7) 165513 pid('CodeGenDefinition,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 961 6) nil 7) <Q: 1081> [g(14) g(30) g(31)])
		allocateL(19)
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' x(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariable(y(4))
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164409)
lbl(164398)	getLiteral('' y(4))
		getNumber(1 y(5))
		getNumber(0 y(6))
		branch(164436)
lbl(164409)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(4))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(6))
lbl(164436)	createVariableMove(y(7) x(0))
		sendMsg(getOrigin y(3) 1 cache)
		createVariable(y(8))
		testLiteral(y(7) generated 164461)
lbl(164451)	inlineAt(printName x(0) cache)
		unify(x(0) y(8))
		branch(164470)
lbl(164461)	move(y(8) x(0))
		sendMsg(getPrintName y(3) 1 cache)
lbl(164470)	putRecord('pos' 3 x(0))
		setValue(y(4))
		setValue(y(5))
		setValue(y(6))
		putRecord('pid' 5 y(7))
		setValue(y(8))
		setVariable(x(1))
		setValue(x(0))
		setVariable(y(9))
		setVariable(y(10))
		inlineAt(formalArgs x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(procFlags x(1) cache)
		putConstant(native x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 164528 164533)
		getList(y(9))
		unifyLiteral(native)
		unifyLiteral(nil)
		branch(164544)
lbl(164528)	getLiteral(nil y(9))
		branch(164544)
lbl(164533)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(972)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164544)	inlineAt(isStateUsing x(0) cache)
		createVariable(y(4))
		testBool(x(0) 164601 164606)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 164579 164590)
		move(y(4) x(0))
		sendMsg(newSelfReg y(0) 1 cache)
		branch(164617)
lbl(164579)	move(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		branch(164617)
lbl(164590)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(980)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164601)	getLiteral(none y(4))
		branch(164617)
lbl(164606)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(979)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164617)	inlineAt(toCopy x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164917)
lbl(164630)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164641)	definition(x(1) 164677 pid('' 2 pos('./compiler/CodeGen.oz' 993 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164641)
lbl(164677)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(9))
		testBool(x(1) 164747 164768)
		inlineAt(formalArgs x(4) cache)
		move(x(4) x(0))
		move(y(9) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(12) x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(13) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(164779)
lbl(164747)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(164779)
lbl(164768)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(997)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164779)	inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 164795)
lbl(164790)	getLiteral(nil y(11))
		branch(164826)
lbl(164795)	inlineAt(allVariables x(0) cache)
lbl(164800)	definition(x(1) 164820 pid('' 2 pos('./compiler/CodeGen.oz' 1005 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(164800)
lbl(164820)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(164826)	createVariable(y(12))
		createVariable(y(13))
		testLiteral(y(4) none 164842)
lbl(164834)	unify(y(12) y(9))
		unify(y(5) y(13))
		branch(164862)
lbl(164842)	getRecord(vSetSelf 3 y(12))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(9))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(164862)	moveMoveYXYX(y(12) x(0) y(8) x(1))
		moveMoveYXYX(y(11) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(9))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
		branch(165480)
lbl(164917)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164928)	definition(x(1) 164964 pid('' 2 pos('./compiler/CodeGen.oz' 1026 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164928)
lbl(164964)	createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
		sendMsg(startDefinition y(0) 0 cache)
		inlineAt(statements x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(11) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(allVariables x(0) cache)
		createVariable(y(12))
		testLiteral(x(0) nil 165009)
lbl(165004)	getLiteral(nil y(12))
		branch(165040)
lbl(165009)	inlineAt(allVariables x(0) cache)
lbl(165014)	definition(x(1) 165034 pid('' 2 pos('./compiler/CodeGen.oz' 1033 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(165014)
lbl(165034)	move(y(12) x(2))
		genFastCall(<P: 29> 6)
lbl(165040)	createVariable(y(13))
		createVariable(y(14))
		testLiteral(y(4) none 165056)
lbl(165048)	unify(y(14) y(11))
		unify(y(5) y(13))
		branch(165076)
lbl(165056)	getRecord(vSetSelf 3 y(14))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(11))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(165076)	moveMoveYXYX(y(14) x(0) y(12) x(2))
		putConstant(nil x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		createVariableMove(y(15) x(5))
		sendMsg('endDefinition' y(0) 6 cache)
		createVariableMove(y(14) x(0))
		sendMsg(newReg y(0) 1 cache)
		putRecord('#' 2 x(0))
		setValue(y(8))
		setConstant('/body')
		createVariableMove(y(8) x(1))
		genFastCall(<P: 195> 4)
		inlineAt(procFlags x(0) cache)
lbl(165127)	definition(x(1) 165153 pid('' 2 pos('./compiler/CodeGen.oz' 1048 7) nil 4) unit nil)
		testLiteral(x(0) once 165141)
		getLiteral(true x(1))
		return
lbl(165141)	putConstant(native x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(165127)
lbl(165153)	createVariableMove(y(16) x(2))
		genFastCall(<P: 39> 6)
		putRecord('pid' [1 2 4 5] x(0))
		setValue(y(8))
		setConstant(0)
		setValue(y(16))
		setValue(y(15))
		move(y(7) x(1))
		callBI('Adjoin' [x(1) x(0)]#[x(2)])
		inlineAt(toCopy x(0) cache)
		createVariable(y(8))
		createVariable(y(15))
		testLiteral(x(0) nil 165235)
lbl(165190)	move(x(2) y(16))
		createVariableMove(y(17) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValVar(y(17) x(0))
		getRecord(vDefinitionCopy 8 x(0))
		unifyVoid(1)
		unifyValue(y(17))
		unifyValue(y(14))
		unifyValue(y(16))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
		branch(165413)
lbl(165235)	createVariable(x(4))
lbl(165237)	definition(x(3) 165373 pid('MakeCopyList' 4 pos('./compiler/CodeGen.oz' 1058 8) nil 4) unit [x(4) y(0) g(1) g(2)])
		match(x(0) ht(165358 [onScalar(nil 165246) onRecord('|' 2 165256)]))
lbl(165246)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
lbl(165256)	allocateL7
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(0) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(6))
		move(y(0) x(0))
		testBI('IsForeignPointer' [x(0)]#[x(1)] 165300)
		getRecord(predicateRef 1 y(6))
		unifyValue(y(0))
		branch(165325)
lbl(165300)	testBI('IsName' [x(0)]#[x(1)] 165312)
		getRecord(literal 1 y(6))
		unifyValue(y(0))
		branch(165325)
lbl(165312)	putRecord(compiler 3 x(1))
		setConstant(internalTypeError)
		setValue(y(0))
		setConstant('ForeignPointerOrName')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(165325)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(165358)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1078)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(165237)
lbl(165373)	unify(x(3) x(4))
		putRecord(value 1 x(3))
		setVariable(y(16))
		moveMoveXYYX(x(2) y(17) y(8) x(1))
		createVariableMove(y(18) x(2))
		call(x(4) 4)
		getRecord(vDefinitionCopy 8 y(18))
		unifyVoid(1)
		unifyValue(y(16))
		unifyValue(y(14))
		unifyValue(y(17))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
lbl(165413)	getRecord(vCall 5 y(15))
		unifyVoid(1)
		unifyValue(y(14))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		moveMoveYXYX(y(12) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
lbl(165480)	inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		putConstant('definition' x(1))
		genFastCall(<Q: 1024> 12)
		putConstant(unit x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL
		return
		endDefinition(164353)
lbl(165513)	definition(x(8) 165554 pid('CodeGenDefinition,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 961 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1081> 7)
		endDefinition(165513)
lbl(165554)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFunctionDefinition' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165615)	definition(x(7) 165627 pid('CodeGenClauseBody,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1101 6) nil 3) <Q: 1082> nil)
		unify(x(1) x(2))
		return
		endDefinition(165615)
lbl(165627)	definition(x(8) 165668 pid('CodeGenClauseBody,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1101 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1082> 7)
		endDefinition(165627)
lbl(165668)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBody' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165705)	definition(x(7) 165832 pid('CodeGenApplication,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1109 6) nil 9) <Q: 1083> [g(11)])
		getSelf(x(3))
		inlineDot(x(3) codeGenMakeEquateLiteral x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 165794)
		allocateL6
		putRecord(vEquateLiteral 4 y(0))
		setVoid(1)
		setVariable(x(3))
		setVariable(y(1))
		setVariable(y(2))
		getSelf(x(4))
		inlineDot(x(4) codeGenMakeEquateLiteral x(0) cache)
		unify(x(0) x(3))
		inlineAt(actualArgs x(0) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 79> 4)
		move(y(1) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(0) x(4) y(2) x(5))
		putConstant('name generation' x(1))
		deAllocateL6
		genFastCall(<Q: 1024> 13)
lbl(165794)	inlineAt(designator x(6) cache)
		inlineAt(coord x(7) cache)
		inlineAt(actualArgs x(8) cache)
		move(x(0) x(3))
		move(x(6) x(0))
		move(x(1) x(4))
		move(x(7) x(1))
		move(x(2) x(5))
		move(x(8) x(2))
		genFastCall(<Q: 1042> 13)
		endDefinition(165705)
lbl(165832)	definition(x(8) 165873 pid('CodeGenApplication,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1109 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1083> 7)
		endDefinition(165832)
lbl(165873)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenApplication' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165910)	definition(x(7) 166149 pid('CodeGenBoolCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1123 6) nil 7) <Q: 1084> nil)
		allocateL6
		getSelf(x(3))
		inlineDot(x(3) noBoolShared x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsFree' [x(3)]#[x(4)] 165991)
		getRecord(vShared 4 y(3))
		unifyVoid(1)
		unifyVariable(x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		move(x(4) x(0))
		sendMsg(newLabel y(0) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(4))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(0) x(3) y(5) x(4))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
lbl(165991)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 166036)
lbl(166012)	testLiteral(y(4) true 166036)
lbl(166016)	inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGen x(3) 3 cache)
lbl(166036)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 166067)
lbl(166043)	testLiteral(y(4) false 166067)
lbl(166047)	inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGenNoShared x(3) 3 cache)
lbl(166067)	inlineAt(consequent x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		sendMsg(codeGen x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenShared x(3) 3 cache)
		getRecord(vTestBool 8 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValVar(y(3) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(arbiter x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL6
		return
		endDefinition(165910)
lbl(166149)	definition(x(8) 166190 pid('CodeGenBoolCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1123 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1084> 7)
		endDefinition(166149)
lbl(166190)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolCase' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166227)	definition(x(7) 166255 pid('CodeGenBoolClause,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1146 6) nil 5) <Q: 1085> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1022> 9)
		endDefinition(166227)
lbl(166255)	definition(x(8) 166296 pid('CodeGenBoolClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1146 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1085> 7)
		endDefinition(166255)
lbl(166296)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166333)	definition(x(7) 166702 pid('CodeGenPatternCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1152 6) nil 6) <Q: 1086> [y(2)])
		allocateL5
		inlineAt(clauses x(3) cache)
lbl(166345)	definition(x(4) 166365 pid('' 2 pos('./compiler/CodeGen.oz' 1153 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(isSwitchable x(2) 1 cache)
		endDefinition(166345)
lbl(166365)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 166487 166689)
		inlineAt(arbiter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(3) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(4)])
		moveMoveXYYX(x(4) y(4) y(3) x(1))
		move(y(0) x(4))
		sendMsg(init y(4) 5 cache)
		inlineAt(clauses x(0) cache)
lbl(166443)	definition(x(1) 166469 pid('' 1 pos('./compiler/CodeGen.oz' 1160 6) nil 4) unit [y(3) y(0) y(4)])
		move(x(0) x(3))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(2))
		tailSendMsg(makeSwitchable x(3) 3 cache)
		endDefinition(166443)
lbl(166469)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(codeGen x(2) 2 cache)
lbl(166487)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 166554 166543)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		inlineAt(coord x(4) cache)
		move(x(4) x(0))
		putConstant('optimization warning' x(1))
		putConstant('translating `case\' as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(166554)
lbl(166543)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1163)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(166554)	createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(3))
lbl(166570)	definition(x(1) 166631 pid('' 2 pos('./compiler/CodeGen.oz' 1170 3) nil 4) unit [x(3) y(0) y(3)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPatternGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(2) x(1))
		sendMsg(enterVs g(1) 2 cache)
		inlineAt(arbiter x(1) cache)
		move(g(1) x(0))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(makeCondClause x(3) 3 cache)
		endDefinition(166570)
lbl(166631)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(4) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterNoShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(4))
		unifyValVar(y(2) x(0))
		unifyLiteral(nil)
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL5
		return
lbl(166689)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1153)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(166333)
lbl(166702)	definition(x(8) 166743 pid('CodeGenPatternCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1152 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1086> 7)
		endDefinition(166702)
lbl(166743)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternCase' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166780)	definition(x(7) 166799 pid('CodeGenPatternClause,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1183 6) nil 2) <Q: 1087> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(166780)
lbl(166799)	definition(x(8) 166825 pid('CodeGenPatternClause,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1183 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1087> 3)
		endDefinition(166799)
lbl(166825)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166835)	definition(x(7) 166941 pid('CodeGenPatternClause,makeSwitchable/fast' 3 pos('./compiler/CodeGen.oz' 1186 6) nil 8) <Q: 1088> nil)
		allocateL3
		inlineAt(pattern x(5) cache)
		inlineAt(localVars x(6) cache)
		inlineAt(statements x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(2) x(4))
		sendMsg(makeSwitchable x(5) 5 cache)
		inlineAt(localVars x(0) cache)
lbl(166885)	definition(x(1) 166927 pid('' 1 pos('./compiler/CodeGen.oz' 1190 3) nil 3) unit [y(0)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(reg y(0) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 166913)
		deAllocateL2
		return
lbl(166913)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(newVariableReg g(0) 2 cache)
		endDefinition(166885)
lbl(166927)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(1) y(2) x(0))
		deAllocateL3
		tailCall(x(1) 1)
		endDefinition(166835)
lbl(166941)	definition(x(8) 166982 pid('CodeGenPatternClause,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1186 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1088> 7)
		endDefinition(166941)
lbl(166982)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166992)	definition(x(7) 167250 pid('CodeGenPatternClause,makeCondClause/fast' 3 pos('./compiler/CodeGen.oz' 1197 6) nil 5) <Q: 1089> nil)
		allocateL7
		inlineAt(localVars x(3) cache)
lbl(167004)	definition(x(4) 167024 pid('' 1 pos('./compiler/CodeGen.oz' 1200 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(167004)
lbl(167024)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(5))
		createVariable(y(6))
		testBool(y(1) 167113 167121)
		inlineAt(pattern x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		getLiteral(nil y(4))
		getRecord(vThread 5 y(5))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(6))
		unifyVoid(1)
		branch(167132)
lbl(167113)	unify(y(4) y(6))
		unify(y(5) y(3))
		branch(167132)
lbl(167121)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1202)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167132)	getRecord(vAsk 2 y(6))
		unifyVoid(1)
		unifyLiteral(nil)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(1))
		testBool(x(1) 167204 167225)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(167236)
lbl(167204)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(167236)
lbl(167225)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1211)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167236)	getRecord('#' 3 y(2))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(1))
		deAllocateL7
		return
		endDefinition(166992)
lbl(167250)	definition(x(8) 167291 pid('CodeGenPatternClause,makeCondClause/slow' 1 pos('./compiler/CodeGen.oz' 1197 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1089> 7)
		endDefinition(167250)
lbl(167291)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeCondClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternClause' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(4))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(167344)	definition(x(7) 167364 pid('CodeGenRecordPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1224 6) nil 3) <Q: 1090> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(167344)
lbl(167364)	definition(x(8) 167390 pid('CodeGenRecordPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1224 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1090> 3)
		endDefinition(167364)
lbl(167390)	putRecord('#' [1 2 fast] x(9))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(167400)	definition(x(7) 167506 pid('CodeGenRecordPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1227 6) nil 3) <Q: 1091> nil)
		inlineAt(isOpen x(1) cache)
		testBI('Not' [x(1)]#[x(2)] 167500)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 167495)
		inlineAt(args x(0) cache)
lbl(167445)	definition(x(1) 167488 pid('' 2 pos('./compiler/CodeGen.oz' 1231 4) nil 3) unit nil)
		testRecord(x(0) '#' 2 167482)
lbl(167456)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(167482)	getLiteral(true x(1))
		return
		endDefinition(167445)
lbl(167488)	move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 35> 7)
lbl(167495)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(167500)	getLiteral(false x(0))
		return
		endDefinition(167400)
lbl(167506)	definition(x(8) 167532 pid('CodeGenRecordPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1227 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1091> 3)
		endDefinition(167506)
lbl(167532)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(167542)	definition(x(7) 167854 pid('CodeGenRecordPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1237 6) nil 6) <Q: 1092> [g(24) g(27) g(32) g(33)])
		allocateL8
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(5) 1 cache)
		inlineAt(args x(0) cache)
lbl(167578)	definition(x(1) 167617 pid('' 3 pos('./compiler/CodeGen.oz' 1240 7) nil 4) unit nil)
		testRecord(x(1) '#' 2 167606)
lbl(167589)	getVarVar(x(1) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(167606)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(167578)
lbl(167617)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		createVariable(y(6))
		exHandler(167764)
		move(x(0) y(7))
		createCond(167758)
lbl(167632)	lastClause
		clause
		thread(167650)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(167650)	ask
lbl(167651)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(167689)	definition(x(0) 167726 pid('' 3 pos('./compiler/CodeGen.oz' 1251 27) nil 5) unit nil)
		shallowGuard(167713)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(167705)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(167713)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1251)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(167689)
lbl(167726)	moveMoveXYYX(x(0) y(2) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(7) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(167776)
lbl(167758)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(167764)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(167776)	move(y(6) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 167795)
		getRecord(addScalar 3 y(3))
		unifyValue(y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL8
		return
lbl(167795)	getRecord(addRecord 2 y(3))
		unifyVariable(x(2))
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyValVar(y(0) y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
lbl(167814)	definition(x(1) 167826 pid('' 2 pos('./compiler/CodeGen.oz' 1257 31) nil 2) unit nil)
		getLiteral('' x(1))
		return
		endDefinition(167814)
lbl(167826)	genFastCall(<P: 161> 6)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		genFastCall(<P: 159> 4)
		inlineAt(label x(1) cache)
		move(y(3) x(0))
		deAllocateL8
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(167542)
lbl(167854)	definition(x(8) 167907 pid('CodeGenRecordPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1237 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1092> 11)
		endDefinition(167854)
lbl(167907)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(4))
lbl(167919)	definition(x(7) 168004 pid('CodeGenRecordPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1261 6) nil 7) <Q: 1093> [y(1) y(4)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		genCall(gci(g(1) true makeEquation false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		deAllocateL8
		genCall(gci(g(1) true addPatternVs true 2) 0)
		endDefinition(167919)
lbl(168004)	definition(x(8) 168069 pid('CodeGenRecordPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1261 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1093> 15)
		endDefinition(168004)
lbl(168069)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(168079)	definition(x(7) 168145 pid('CodeGenRecordPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1268 6) nil 6) <Q: 1094> nil)
		inlineAt(args x(4) cache)
lbl(168090)	definition(x(5) 168128 pid('' 3 pos('./compiler/CodeGen.oz' 1270 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 168114)
lbl(168101)	getVoid(1)
		getVariable(x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
lbl(168114)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
		endDefinition(168090)
lbl(168128)	move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(168079)
lbl(168145)	definition(x(8) 168180 pid('CodeGenRecordPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1268 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1094> 5)
		endDefinition(168145)
lbl(168180)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(168190)	definition(x(7) 168218 pid('CodeGenRecordPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1276 6) nil 3) <Q: 1095> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(168190)
lbl(168218)	definition(x(8) 168244 pid('CodeGenRecordPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1276 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1095> 3)
		endDefinition(168218)
lbl(168244)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(168254)	definition(x(7) 168391 pid('CodeGenRecordPattern,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 1279 6) nil 6) <Q: 1096> [y(1)])
		inlineAt(args x(4) cache)
lbl(168265)	definition(x(5) 168374 pid('' 3 pos('./compiler/CodeGen.oz' 1281 3) nil 5) unit [g(0) x(0)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(1) '#' 2 168293)
lbl(168284)	getVoid(1)
		getVariable(x(1))
		unify(y(2) x(1))
		branch(168296)
lbl(168293)	unify(y(2) x(1))
lbl(168296)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 168356 168361)
		createVariableMove(y(3) x(0))
		sendMsg(reg y(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		move(g(1) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		move(y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(168356)	unify(y(0) y(1))
		deAllocateL5
		return
lbl(168361)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1283)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168265)
lbl(168374)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(168254)
lbl(168391)	definition(x(8) 168432 pid('CodeGenRecordPattern,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 1279 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1096> 7)
		endDefinition(168391)
lbl(168432)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(168442)	definition(x(7) 168484 pid('CodeGenRecordPattern,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1291 6) nil 4) <Q: 1097> [y(1)])
		allocateL2
		unify(x(1) x(2))
		getSelf(x(1))
		inlineDot(x(1) reg x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(3) y(0) x(2) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(168442)
lbl(168484)	definition(x(8) 168531 pid('CodeGenRecordPattern,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1291 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1097> 9)
		endDefinition(168484)
lbl(168531)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(168541)	definition(x(7) 168570 pid('CodeGenRecordPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1295 6) nil 4) <Q: 1098> nil)
		unify(x(1) x(2))
		getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(168541)
lbl(168570)	definition(x(8) 168617 pid('CodeGenRecordPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1295 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1098> 9)
		endDefinition(168570)
lbl(168617)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(y(4) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenRecordPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(168664)	definition(x(7) 168683 pid('CodeGenEquationPattern,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1302 6) nil 2) <Q: 1099> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(168664)
lbl(168683)	definition(x(8) 168709 pid('CodeGenEquationPattern,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1302 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1099> 3)
		endDefinition(168683)
lbl(168709)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(168719)	definition(x(7) 168738 pid('CodeGenEquationPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1305 6) nil 2) <Q: 1100> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(168719)
lbl(168738)	definition(x(8) 168764 pid('CodeGenEquationPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1305 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1100> 3)
		endDefinition(168738)
lbl(168764)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(168774)	definition(x(7) 168793 pid('CodeGenEquationPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1308 6) nil 2) <Q: 1101> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(168774)
lbl(168793)	definition(x(8) 168819 pid('CodeGenEquationPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1308 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1101> 3)
		endDefinition(168793)
lbl(168819)	putRecord('#' [1 2 fast] x(11))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168829)	definition(x(7) 168899 pid('CodeGenEquationPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1311 6) nil 6) <Q: 1102> nil)
		allocateL6
		inlineAt(left x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg('getVariable' x(5) 1 cache)
		move(y(0) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(right x(5) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		tailSendMsg(makeSwitchable x(5) 5 cache)
		endDefinition(168829)
lbl(168899)	definition(x(8) 168952 pid('CodeGenEquationPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1311 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1102> 11)
		endDefinition(168899)
lbl(168952)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168962)	definition(x(7) 169132 pid('CodeGenEquationPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1315 6) nil 8) <Q: 1103> [y(1)])
		allocateL9
		inlineAt(left x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' x(7) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(reg x(1) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 169058 169080)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(169091)
lbl(169058)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(7))
		setValue(y(1))
		move(y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(169091)
lbl(169080)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1321)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(169091)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(8) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		deAllocateL9
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(168962)
lbl(169132)	definition(x(8) 169197 pid('CodeGenEquationPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1315 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1103> 15)
		endDefinition(169132)
lbl(169197)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(169207)	definition(x(7) 169299 pid('CodeGenEquationPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1329 6) nil 3) <Q: 1104> nil)
		allocateL4
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 169265 169286)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169265)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(2))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1331)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(169207)
lbl(169299)	definition(x(8) 169334 pid('CodeGenEquationPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1329 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1104> 5)
		endDefinition(169299)
lbl(169334)	putRecord('#' [1 2 fast] x(14))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(169344)	definition(x(7) 169422 pid('CodeGenEquationPattern,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1337 6) nil 5) <Q: 1105> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg y(1) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1025> 8)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(3) x(3))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(169344)
lbl(169422)	definition(x(8) 169469 pid('CodeGenEquationPattern,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1337 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1105> 9)
		endDefinition(169422)
lbl(169469)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(169479)	definition(x(7) 169529 pid('CodeGenEquationPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1341 6) nil 2) <Q: 1106> nil)
		allocateL2
		inlineAt(right x(1) cache)
		inlineDot(x(1) reg x(0) cache)
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(169479)
lbl(169529)	definition(x(8) 169555 pid('CodeGenEquationPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1341 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1106> 3)
		endDefinition(169529)
lbl(169555)	putRecord('#' [1 2 fast] x(16))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(169565)	definition(x(7) 169584 pid('CodeGenEquationPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1344 6) nil 5) <Q: 1107> nil)
		inlineAt(left x(4) cache)
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(169565)
lbl(169584)	definition(x(8) 169631 pid('CodeGenEquationPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1344 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1107> 9)
		endDefinition(169584)
lbl(169631)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquationPattern' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [shared] x(3))
		setConstant(<U: ooFreeFlag>)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenAbstractElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [localVars] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(169717)	definition(x(7) 169736 pid('CodeGenElseNode,codeGenInit/fast' 2 pos('./compiler/CodeGen.oz' 1354 6) nil 2) <Q: 1108> nil)
		inlineAssign(localVars x(0) cache)
		inlineAssign(statements x(1) cache)
		return
		endDefinition(169717)
lbl(169736)	definition(x(8) 169771 pid('CodeGenElseNode,codeGenInit/slow' 1 pos('./compiler/CodeGen.oz' 1354 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1108> 5)
		endDefinition(169736)
lbl(169771)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenInit)
		setValue(x(8))
		setValue(x(7))
lbl(169781)	definition(x(7) 169940 pid('CodeGenElseNode,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1358 6) nil 5) <Q: 1109> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 169937)
		allocateL4
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(0))
		callBI('NewCell' [x(0)]#[x(1)])
		unify(x(1) y(0))
		move(y(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 169909 169926)
lbl(169852)	inlineAt(localVars x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 169909)
lbl(169861)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(0) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<Q: 1027> 7)
lbl(169909)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(169926)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1365)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(169937)	return
		endDefinition(169781)
lbl(169940)	definition(x(8) 169981 pid('CodeGenElseNode,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1358 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1109> 7)
		endDefinition(169940)
lbl(169981)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(24))
lbl(169993)	definition(x(7) 170010 pid('CodeGenElseNode,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1376 6) nil 4) <Q: 1110> [y(24)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenShared true 3) 0)
		endDefinition(169993)
lbl(170010)	definition(x(8) 170057 pid('CodeGenElseNode,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1376 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1110> 9)
		endDefinition(170010)
lbl(170057)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(170067)	definition(x(7) 170179 pid('CodeGenElseNode,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1379 6) nil 5) <Q: 1111> nil)
		allocateL5
		inlineDot(x(0) debugInfoVarnamesSwitch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBool(x(3) 170149 170166)
lbl(170092)	inlineAt(localVars x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 170149)
lbl(170101)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(170149)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(170166)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1380)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(170067)
lbl(170179)	definition(x(8) 170220 pid('CodeGenElseNode,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1379 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1111> 7)
		endDefinition(170179)
lbl(170220)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170230)	definition(x(7) 170247 pid('CodeGenElseNode,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1389 6) nil 4) <Q: 1112> [y(24)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenNoShared true 3) 0)
		endDefinition(170230)
lbl(170247)	definition(x(8) 170294 pid('CodeGenElseNode,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1389 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1112> 9)
		endDefinition(170247)
lbl(170294)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(24) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenElseNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(170336)	definition(x(7) 170420 pid('CodeGenNoElse,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1394 6) nil 7) <Q: 1113> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 170417)
		allocateL3
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		deAllocateL3
		genFastCall(<Q: 1044> 13)
lbl(170417)	return
		endDefinition(170336)
lbl(170420)	definition(x(8) 170461 pid('CodeGenNoElse,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1394 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1113> 7)
		endDefinition(170420)
lbl(170461)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
lbl(170471)	definition(x(7) 170560 pid('CodeGenNoElse,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1404 6) nil 7) <Q: 1114> nil)
		getSelf(x(4))
		inlineDot(x(4) shared x(5) cache)
		unify(x(5) x(2))
		getLiteral(nil x(3))
		testBI('IsFree' [x(2)]#[x(3)] 170557)
		allocateL4
		getRecord(vShared 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(2) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(5))
		deAllocateL4
		genFastCall(<Q: 1044> 13)
lbl(170557)	return
		endDefinition(170471)
lbl(170560)	definition(x(8) 170607 pid('CodeGenNoElse,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1404 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1114> 9)
		endDefinition(170560)
lbl(170607)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(170617)	definition(x(7) 170651 pid('CodeGenNoElse,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1414 6) nil 7) <Q: 1115> nil)
		inlineAt(coord x(6) cache)
		move(x(0) x(3))
		move(x(1) x(4))
		move(x(6) x(1))
		move(x(2) x(5))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		genFastCall(<Q: 1044> 13)
		endDefinition(170617)
lbl(170651)	definition(x(8) 170692 pid('CodeGenNoElse,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1414 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1115> 7)
		endDefinition(170651)
lbl(170692)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170702)	definition(x(7) 170742 pid('CodeGenNoElse,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1417 6) nil 8) <Q: 1116> nil)
		inlineAt(coord x(6) cache)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		move(x(3) x(5))
		move(x(0) x(3))
		move(x(6) x(1))
		move(x(2) x(4))
		move(x(7) x(2))
		putConstant(noElse x(0))
		genFastCall(<Q: 1044> 13)
		endDefinition(170702)
lbl(170742)	definition(x(8) 170789 pid('CodeGenNoElse,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1417 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1116> 9)
		endDefinition(170742)
lbl(170789)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNoElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170832)	definition(x(7) 170889 pid('CodeGenThreadNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1423 6) nil 5) <Q: 1117> nil)
		allocateL3
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getRecord(vThread 5 y(0))
		unifyVoid(1)
		unifyValVar(y(2) x(0))
		unifyValue(y(1))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
		endDefinition(170832)
lbl(170889)	definition(x(8) 170930 pid('CodeGenThreadNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1423 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1117> 7)
		endDefinition(170889)
lbl(170930)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenThreadNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170967)	definition(x(7) 171169 pid('CodeGenTryNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1430 6) nil 6) <Q: 1118> nil)
		allocateL8
		inlineAt(tryStatements x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(vPopEx 3 x(3))
		setVoid(1)
		setValue(x(5))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1022> 8)
		inlineAt(exception x(1) cache)
		move(y(0) x(0))
		sendMsg(setReg x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(4))
		testBool(x(1) 171098 171119)
		inlineAt(exception x(4) cache)
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(5) x(0))
		move(y(4) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(171130)
lbl(171098)	inlineAt(catchStatements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(171130)
lbl(171119)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1433)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(171130)	getRecord(vExHandler 7 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(0))
		unifyValVar(y(4) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(exception x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL8
		return
		endDefinition(170967)
lbl(171169)	definition(x(8) 171210 pid('CodeGenTryNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1430 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1118> 7)
		endDefinition(171169)
lbl(171210)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTryNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171247)	definition(x(7) 171328 pid('CodeGenLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1446 6) nil 5) <Q: 1119> nil)
		allocateL5
		getRecord(vLockThread 5 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(x(1) x(0))
		sendMsg(reg x(3) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
		endDefinition(171247)
lbl(171328)	definition(x(8) 171369 pid('CodeGenLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1446 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1119> 7)
		endDefinition(171328)
lbl(171369)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenLockNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171406)	definition(x(7) 171913 pid('CodeGenClassNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1453 6) nil 8) <Q: 1120> [y(1)])
		allocateL(14)
		inlineAt(parents x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(attributes x(1) cache)
		moveMoveYXYX(y(0) x(2) y(6) x(3))
		putConstant('attr' x(0))
		createVariableMove(y(4) x(4))
		createVariableMove(y(8) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(features x(1) cache)
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		putConstant('feat' x(0))
		createVariableMove(y(6) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(printName x(0) cache)
		createVariable(y(4))
		testLiteral(x(0) '' 171544)
lbl(171519)	inlineAt(designator x(1) cache)
		createVariableMove(y(10) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getPrintName y(10) 1 cache)
		branch(171552)
lbl(171544)	inlineAt(printName x(0) cache)
		unify(x(0) y(4))
lbl(171552)	move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1038> 4)
		inlineAt(methods x(0) cache)
		createVariable(y(11))
		match(x(0) ht(171756 [onScalar(nil 171571) onRecord('|' 2 171591)]))
lbl(171571)	getRecord(vEquateLiteral 4 y(6))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValue(y(11))
		sendMsg(reg y(10) 1 cache)
		branch(171769)
lbl(171591)	getSelf(x(4))
		createVariable(x(5))
lbl(171595)	definition(x(0) 171701 pid('MakeMethods' 4 pos('./compiler/CodeGen.oz' 1470 5) nil 7) unit [x(4) y(0) y(4) x(5)])
		move(g(0) x(4))
		setSelf(x(4))
		match(x(0) ht(171686 [onScalar(nil 171609) onRecord('|' 2 171616)]))
lbl(171609)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(171616)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		inlineAt(isToplevel x(3) cache)
		move(g(2) x(0))
		move(g(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg(makeQuadruple y(0) 6 cache)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(value 1 x(0))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailCall(g(3) 4)
lbl(171686)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1478)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(171595)
lbl(171701)	unify(x(0) x(5))
		inlineAt(methods x(0) cache)
		move(y(6) x(1))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(12))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(1))
		unifyVariable(y(6))
		unifyValue(y(13))
		unifyValue(y(11))
		inlineAt(methods x(0) cache)
		genFastCall(<P: 24> 4)
		move(y(6) x(0))
		sendMsg(reg y(10) 1 cache)
		branch(171769)
lbl(171756)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1487)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(171769)	putConstant(unit x(1))
		inlineAssign(methods x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(11))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(6) y(11))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(6) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(designator x(6) cache)
		putList(x(7))
		setValue(x(6))
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(3))
		setValue(y(9))
		setValue(x(4))
		putList(x(1))
		setValue(y(8))
		setValue(x(3))
		putList(x(0))
		setValue(y(10))
		setValue(x(1))
		putList(x(2))
		setValue(y(5))
		setValue(x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(11) x(4))
		putConstant('class' x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		putConstant('definition' x(1))
		deAllocateL
		genFastCall(<Q: 1024> 13)
		endDefinition(171406)
lbl(171913)	definition(x(8) 171954 pid('CodeGenClassNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1453 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1120> 7)
		endDefinition(171913)
lbl(171954)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClassNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: MessagePatternVO> hasDefaults] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(30))
lbl(172001)	definition(x(7) 173468 pid('CodeGenMethod,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1502 6) nil 12) <Q: 1121> [g(27) g(33) g(34) g(35) y(30) y(1) y(6)])
		allocateL(19)
		inlineAt(formalArgs x(6) cache)
lbl(172014)	definition(x(7) 172056 pid('' 2 pos('./compiler/CodeGen.oz' 1510 3) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(0) x(1))
		createVariableMove(y(1) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(172014)
lbl(172056)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(7))
		exHandler(172168)
		move(x(0) y(6))
		createCond(172162)
lbl(172092)	lastClause
		clause
		thread(172110)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL
		return
lbl(172110)	ask
lbl(172111)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(formalArgs x(0) cache)
		move(y(7) x(1))
		genFastCall(<P: 24> 4)
		branch(172216)
lbl(172162)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(172168)	putConstant(someLabel x(0))
		move(y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBI('IsTuple' [x(2)]#[x(0)] 172192)
		callBI('Width' [x(2)]#[x(0)])
		unify(x(0) y(7))
		branch(172198)
lbl(172192)	callBI('Arity' [x(2)]#[x(0)])
		unify(x(0) y(7))
lbl(172198)	move(y(6) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 159> 4)
		move(y(8) x(0))
		inlineAssign(formalArgs x(0) cache)
		popEx
lbl(172216)	getSelf(x(3))
		inlineDot(x(3) hasDefaults x(2) cache)
		inlineAt(formalArgs x(0) cache)
lbl(172229)	definition(x(1) 172249 pid('' 2 pos('./compiler/CodeGen.oz' 1527 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(172229)
lbl(172249)	genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(6))
		createVariable(y(8))
		createVariable(y(9))
		testLiteral(x(0) unit 172278)
lbl(172267)	getLiteral('' y(6))
		getNumber(1 y(8))
		getNumber(0 y(9))
		branch(172305)
lbl(172278)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(8))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(9))
lbl(172305)	putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setValue(y(7))
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(7))
		setConstant('/fast')
		createVariableMove(y(7) x(1))
		genFastCall(<P: 194> 4)
		move(y(7) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		sendMsg(startDefinition y(1) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(172381)	definition(x(1) 172427 pid('' 2 pos('./compiler/CodeGen.oz' 1541 5) nil 3) unit [y(1)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(g(0) x(0))
		sendMsg(setFreshReg y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172381)
lbl(172427)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 172449)
lbl(172444)	getLiteral(nil y(11))
		branch(172480)
lbl(172449)	inlineAt(allVariables x(0) cache)
lbl(172454)	definition(x(1) 172474 pid('' 2 pos('./compiler/CodeGen.oz' 1546 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(172454)
lbl(172474)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(172480)	move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(13))
		testBool(x(1) 172618 172639)
		createVariableMove(y(14) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(14))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(14) y(15))
		inlineAt(formalArgs x(0) cache)
lbl(172534)	definition(x(1) 172554 pid('' 2 pos('./compiler/CodeGen.oz' 1554 30) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(172534)
lbl(172554)	createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(16) x(0) y(15) x(2))
		createVariableMove(y(17) x(1))
		createVariableMove(y(18) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(18) x(2))
		createVariableMove(y(15) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(17) x(0) y(15) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<Q: 1027> 6)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
		move(y(16) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(172650)
lbl(172618)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(13) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(172650)
lbl(172639)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1548)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(172650)	putConstant(unit x(6))
		inlineAssign(statements x(6) cache)
		moveMoveYXYX(y(13) x(0) y(7) x(1))
		moveMoveYXYX(y(11) x(2) y(12) x(5))
		createVariableMove(y(14) x(3))
		createVariableMove(y(15) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(4))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValVar(y(10) x(1))
		unifyValue(y(14))
		unifyValVar(y(15) y(4))
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(1))
		putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(6))
		setConstant('/slow')
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		createVariableMove(y(0) x(2))
		genCall(gci(g(4) true makeArityCheckInit false 3) 0)
		sendMsg(startDefinition y(1) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		putList(y(6))
		setVariable(x(4))
		setConstant(nil)
		move(y(4) x(0))
		inlineDot(x(0) reg x(1) cache)
		unify(x(1) x(4))
		move(y(1) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(4) true makeArityCheck false 4) 0)
		inlineAt(formalArgs x(0) cache)
lbl(172839)	definition(x(1) 172868 pid('' 3 pos('./compiler/CodeGen.oz' 1586 6) nil 5) unit [y(4) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(172839)
lbl(172868)	move(y(9) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 172950 173065)
		getRecord(vFastCall 5 y(4))
		unifyVoid(1)
		unifyVariable(x(3))
		unifyVariable(x(2))
		unifyLiteral(unit)
		unifyLiteral(nil)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(172908)	definition(x(1) 172945 pid('' 2 pos('./compiler/CodeGen.oz' 1592 6) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172908)
lbl(172945)	genFastCall(<P: 29> 6)
		branch(173076)
lbl(172950)	move(g(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(formalArgs x(0) cache)
lbl(172983)	definition(x(1) 173038 pid('' 2 pos('./compiler/CodeGen.oz' 1600 3) nil 3) unit [g(5)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(172983)
lbl(173038)	createVariableMove(y(11) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(9) x(1))
		moveMoveYXYX(y(11) x(2) y(1) x(3))
		move(y(4) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1042> 12)
		branch(173076)
lbl(173065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1589)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(173076)	moveMoveYXYX(y(8) x(0) y(6) x(1))
		move(y(12) x(5))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyValVar(y(4) y(0))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 173368 173455)
		inlineAt(formalArgs x(0) cache)
lbl(173142)	definition(x(1) 173184 pid('' 2 pos('./compiler/CodeGen.oz' 1612 6) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(0))
		move(x(0) y(1))
		move(x(1) x(0))
		sendMsg(getFeature y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getDefault x(1) 1 cache)
		endDefinition(173142)
lbl(173184)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(6) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		inlineAt(label x(4) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(4))
		move(x(4) x(0))
		move(y(3) x(1))
		putConstant(false x(2))
		sendMsg(init y(4) 3 cache)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		createVariableMove(y(8) x(3))
		sendMsg(makeEquation y(4) 4 cache)
		getRecord(vEquateRecord 6 y(8))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(default)
		unifyVariable(x(4))
		getList(x(4))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(value 1 x(7))
		unifyValue(y(6))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(value 1 x(9))
		unifyVariable(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(value 1 x(11))
		unifyValue(y(7))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		move(x(5) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		sendMsg(makeRecordArgument x(4) 4 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(reg x(1) 1 cache)
lbl(173368)	getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(value 1 x(6))
		unifyValue(y(6))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(value 1 x(8))
		unifyValue(y(7))
		inlineAt(label x(5) cache)
		move(y(1) x(0))
		move(x(4) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(5) 4 cache)
lbl(173455)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1610)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(172001)
lbl(173468)	definition(x(8) 173527 pid('CodeGenMethod,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1502 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1121> 13)
		endDefinition(173468)
lbl(173527)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
lbl(173537)	definition(x(7) 173781 pid('CodeGenMethod,makeArityCheck/fast' 4 pos('./compiler/CodeGen.oz' 1628 6) nil 7) <Q: 1122> [y(1)])
		getSelf(x(4))
		inlineDot(x(4) hasDefaults x(4) cache)
		testBool(x(4) 173617 173768)
		allocateL5
		inlineAt(coord x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		getSelf(x(6))
		inlineDot(x(6) <M: MessagePatternVO> x(6) cache)
		putList(x(0))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(aritySublist x(0))
		deAllocateL5
		genFastCall(<Q: 1043> 13)
lbl(173617)	allocateL7
		inlineAt(formalArgs x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		testNumber(y(4) 0 173691)
lbl(173660)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 173691)
lbl(173667)	getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValVar(y(5) x(1))
		unifyValue(y(3))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(reg x(1) 1 cache)
lbl(173691)	createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(5) y(2))
		inlineAt(coord x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(0))
		setValue(y(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(width x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
lbl(173768)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1629)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173537)
lbl(173781)	definition(x(8) 173828 pid('CodeGenMethod,makeArityCheck/slow' 1 pos('./compiler/CodeGen.oz' 1628 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1122> 9)
		endDefinition(173781)
lbl(173828)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeArityCheck)
		setValue(x(8))
		setValue(x(7))
lbl(173838)	definition(x(7) 174100 pid('CodeGenMethod,makeArityCheckInit/fast' 3 pos('./compiler/CodeGen.oz' 1646 6) nil 5) <Q: 1123> [y(1) y(6)])
		allocateL7
		getSelf(x(3))
		inlineDot(x(3) <M: MessagePatternVO> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		unify(y(5) y(3))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 174082 174087)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		putConstant(messagePattern x(3))
		move(y(4) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(3))
		move(g(1) x(1))
		inlineDot(x(1) construction x(2) cache)
		inlineAt(formalArgs x(3) cache)
lbl(173959)	definition(x(4) 174018 pid('' 2 pos('./compiler/CodeGen.oz' 1656 7) nil 3) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1038> 4)
		putConstant(unit x(1))
		move(y(2) x(0))
		inlineDot(x(0) value x(2) cache)
		unify(x(2) x(1))
		getRecord('#' 2 y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getFeature x(1) 1 cache)
		endDefinition(173959)
lbl(174018)	move(x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(6) 3 cache)
		getSelf(x(4))
		inlineDot(x(4) <M: MessagePatternVO> x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(174082)	unify(y(1) y(2))
		deAllocateL7
		return
lbl(174087)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1649)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173838)
lbl(174100)	definition(x(8) 174141 pid('CodeGenMethod,makeArityCheckInit/slow' 1 pos('./compiler/CodeGen.oz' 1646 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1123> 7)
		endDefinition(174100)
lbl(174141)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeArityCheckInit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(30) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenMethod' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(174179)	definition(x(7) 174870 pid('CodeGenMethodWithDesignator,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1668 6) nil 8) <Q: 1124> [g(34) g(35) y(30) y(1)])
		allocateL(15)
		getSelf(x(3))
		inlineDot(x(3) hasDefaults x(3) cache)
		inlineAt(formalArgs x(6) cache)
lbl(174200)	definition(x(7) 174220 pid('' 2 pos('./compiler/CodeGen.oz' 1672 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(174200)
lbl(174220)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(6) x(0))
		move(x(7) x(1))
		move(x(3) x(2))
		genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		createVariable(y(7))
		testLiteral(x(0) unit 174271)
lbl(174260)	getLiteral('' y(5))
		getNumber(1 y(6))
		getNumber(0 y(7))
		branch(174298)
lbl(174271)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(7))
lbl(174298)	putRecord('pos' 3 x(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(7))
		putRecord('pid' 5 y(8))
		setVariable(y(9))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(10))
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 3 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(9))
		inlineAt(isOpen x(0) cache)
		createVariable(y(0))
		testBool(x(0) 174377 174390)
		unify(y(3) y(0))
		branch(174401)
lbl(174377)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		genCall(gci(g(2) true makeArityCheckInit false 3) 0)
		branch(174401)
lbl(174390)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1687)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174401)	sendMsg(startDefinition y(1) 0 cache)
		inlineAt(messageDesignator x(1) cache)
		move(y(1) x(0))
		sendMsg(setReg x(1) 1 cache)
		inlineAt(messageDesignator x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(3) x(0))
		sendMsg(init y(5) 1 cache)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		inlineAt(allVariables x(1) cache)
		move(x(0) y(3))
		createVariable(y(6))
		testLiteral(x(1) nil 174477)
lbl(174472)	getLiteral(nil y(6))
		branch(174511)
lbl(174477)	inlineAt(allVariables x(3) cache)
lbl(174482)	definition(x(1) 174502 pid('' 2 pos('./compiler/CodeGen.oz' 1698 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(174482)
lbl(174502)	move(x(3) x(0))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(174511)	inlineAt(isOpen x(0) cache)
		createVariable(y(7))
		createVariable(y(9))
		testBool(x(0) 174529 174544)
		unify(y(7) y(9))
		branch(174555)
lbl(174529)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(9) x(3))
		genCall(gci(g(2) true makeArityCheck false 4) 0)
		branch(174555)
lbl(174544)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1700)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174555)	inlineAt(formalArgs x(0) cache)
lbl(174560)	definition(x(1) 174589 pid('' 3 pos('./compiler/CodeGen.oz' 1706 6) nil 5) unit [y(5) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(174560)
lbl(174589)	move(y(9) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(5) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(5))
		testBool(x(1) 174747 174755)
		createVariableMove(y(11) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(5))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(11))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(11) y(12))
		putList(y(13))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(174682)	definition(x(1) 174702 pid('' 2 pos('./compiler/CodeGen.oz' 1717 5) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(174682)
lbl(174702)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(13) x(0) y(12) x(2))
		move(y(7) x(3))
		createVariableMove(y(14) x(1))
		genFastCall(<Q: 1026> 8)
		putList(x(0))
		setValue(y(11))
		setConstant(nil)
		move(y(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1027> 6)
		moveMoveYXYX(y(14) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(174766)
lbl(174747)	unify(y(5) y(7))
		getLiteral(nil y(9))
		branch(174766)
lbl(174755)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1710)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(174766)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		moveMoveYXYX(y(6) x(2) y(10) x(5))
		createVariableMove(y(7) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(8))
		unifyLiteral(unit)
		unifyValue(y(7))
		unifyValVar(y(9) x(4))
		getRecord(vEquateRecord 6 x(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(value 1 x(2))
		unifyValue(y(3))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(174179)
lbl(174870)	definition(x(8) 174929 pid('CodeGenMethodWithDesignator,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1668 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1124> 13)
		endDefinition(174870)
lbl(174929)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethodWithDesignator' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(174966)	definition(x(7) 175015 pid('CodeGenMethFormal,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1737 6) nil 5) <Q: 1125> [y(7) y(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooRequiredArg x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(174966)
lbl(175015)	definition(x(8) 175041 pid('CodeGenMethFormal,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1737 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1125> 3)
		endDefinition(175015)
lbl(175041)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175051)	definition(x(7) 175195 pid('CodeGenMethFormal,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1740 6) nil 6) <Q: 1126> [y(1)])
		allocateL8
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(feature x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeVO x(4) 4 cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(6))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		putConstant('.' x(0))
		deAllocateL8
		genFastCall(<Q: 1043> 13)
		endDefinition(175051)
lbl(175195)	definition(x(8) 175242 pid('CodeGenMethFormal,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1740 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1126> 9)
		endDefinition(175195)
lbl(175242)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormal' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175281)	definition(x(7) 175330 pid('CodeGenMethFormalOptional,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1750 6) nil 5) <Q: 1127> [y(7) y(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooDefaultVar x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175281)
lbl(175330)	definition(x(8) 175356 pid('CodeGenMethFormalOptional,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1750 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1127> 3)
		endDefinition(175330)
lbl(175356)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175366)	definition(x(7) 175639 pid('CodeGenMethFormalOptional,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1753 6) nil 6) <Q: 1128> [y(1)])
		allocateL(11)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(isInitialized x(0) cache)
		testBool(x(0) 175412 175626)
		unify(y(2) y(3))
		deAllocateL
		return
lbl(175412)	inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyLiteral(nil)
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
lbl(175626)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1755)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(175366)
lbl(175639)	definition(x(8) 175686 pid('CodeGenMethFormalOptional,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1753 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1128> 9)
		endDefinition(175639)
lbl(175686)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalOptional' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175725)	definition(x(7) 175764 pid('CodeGenMethFormalWithDefault,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1779 6) nil 4) <Q: 1129> [y(8)])
		allocateL2
		inlineAt(default x(1) cache)
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(1) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175725)
lbl(175764)	definition(x(8) 175790 pid('CodeGenMethFormalWithDefault,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1779 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1129> 3)
		endDefinition(175764)
lbl(175790)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175800)	definition(x(7) 176085 pid('CodeGenMethFormalWithDefault,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1782 6) nil 6) <Q: 1130> [y(1) y(8)])
		allocateL(13)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(default x(0) cache)
		move(g(1) x(1))
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(11))
		sendMsg(init y(11) 1 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(12) x(2))
		putConstant(nil x(3))
		sendMsg(makeEquation y(11) 4 cache)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyValue(y(12))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
		endDefinition(175800)
lbl(176085)	definition(x(8) 176132 pid('CodeGenMethFormalWithDefault,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1782 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1130> 9)
		endDefinition(176085)
lbl(176132)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalWithDefault' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176171)	definition(x(7) 176298 pid('CodeGenObjectLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1806 6) nil 6) <Q: 1131> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(1) x(4))
		putConstant(ooGetLock x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vLockThread 5 y(4))
		unifyVoid(1)
		unifyValVar(y(3) x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		inlineAt(coord x(0) cache)
		unify(x(0) x(4))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(2))
		setValue(x(5))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1022> 9)
		endDefinition(176171)
lbl(176298)	definition(x(8) 176339 pid('CodeGenObjectLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1806 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1131> 7)
		endDefinition(176298)
lbl(176339)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176376)	definition(x(7) 176405 pid('CodeGenGetSelf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1817 6) nil 3) <Q: 1132> nil)
		getRecord(vGetSelf 3 x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		inlineAt(destination x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(176376)
lbl(176405)	definition(x(8) 176446 pid('CodeGenGetSelf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1817 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1132> 7)
		endDefinition(176405)
lbl(176446)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenGetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176483)	definition(x(7) 176516 pid('CodeGenFailNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1823 6) nil 6) <Q: 1133> nil)
		inlineAt(coord x(0) cache)
		putRecord(vFailure 2 x(4))
		setVoid(1)
		setVariable(x(5))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant('fail' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(176483)
lbl(176516)	definition(x(8) 176557 pid('CodeGenFailNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1823 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1133> 7)
		endDefinition(176516)
lbl(176557)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176594)	definition(x(7) 176932 pid('CodeGenIfNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1829 6) nil 6) <Q: 1134> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		testList(x(0) 176801)
lbl(176626)	getVarVar(x(0) x(1))
		createVariable(y(4))
		testLiteral(x(1) nil 176801)
		move(x(0) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getGuardGlobalVars y(5) 1 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		sendMsg(enterVs y(0) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		sendMsg(codeGen y(5) 5 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(0) 176744 176790)
		getLiteral(nil y(7))
		getRecord(vShallowGuard 8 y(1))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValVar(y(5) x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
lbl(176744)	unify(y(7) y(8))
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(5))
		unifyValVar(y(2) x(1))
		unifyValue(y(3))
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL10
		return
lbl(176790)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1837)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(176801)	inlineAt(clauses x(0) cache)
lbl(176806)	definition(x(1) 176877 pid('' 2 pos('./compiler/CodeGen.oz' 1848 3) nil 6) unit [y(0) y(3)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(176806)
lbl(176877)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyValVar(y(2) x(0))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
		endDefinition(176594)
lbl(176932)	definition(x(8) 176973 pid('CodeGenIfNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1829 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1134> 7)
		endDefinition(176932)
lbl(176973)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177010)	definition(x(7) 177177 pid('CodeGenChoicesAndDisjunctions,codeGen/fast' 4 pos('./compiler/CodeGen.oz' 1863 6) nil 6) <Q: 1135> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(makeRegSet y(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(177041)	definition(x(1) 177112 pid('' 2 pos('./compiler/CodeGen.oz' 1866 7) nil 6) unit [y(1) y(4)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(177041)
lbl(177112)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(4))
		setVoid(1)
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(4))
		putList(x(4))
		setVariable(y(4))
		setValue(x(5))
		putList(x(5))
		setValue(y(3))
		setValue(x(4))
		putList(x(4))
		setValue(y(1))
		setValue(x(5))
		putList(x(1))
		setVoid(1)
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		putConstant(6 x(2))
		marshalledFastCall(<R: tuple> 8)
		inlineAt(coord x(0) cache)
		unify(x(0) y(4))
		deAllocateL5
		return
		endDefinition(177010)
lbl(177177)	definition(x(8) 177224 pid('CodeGenChoicesAndDisjunctions,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1863 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1135> 9)
		endDefinition(177177)
lbl(177224)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177261)	definition(x(7) 177284 pid('CodeGenOrNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1878 6) nil 4) <Q: 1136> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177261)
lbl(177284)	definition(x(8) 177325 pid('CodeGenOrNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1878 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1136> 7)
		endDefinition(177284)
lbl(177325)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenOrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177362)	definition(x(7) 177385 pid('CodeGenDisNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1883 6) nil 4) <Q: 1137> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateEnumOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177362)
lbl(177385)	definition(x(8) 177426 pid('CodeGenDisNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1883 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1137> 7)
		endDefinition(177385)
lbl(177426)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177463)	definition(x(7) 177486 pid('CodeGenChoiceNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1888 6) nil 4) <Q: 1138> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateChoice x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177463)
lbl(177486)	definition(x(8) 177527 pid('CodeGenChoiceNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1888 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1138> 7)
		endDefinition(177486)
lbl(177527)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177564)	definition(x(7) 177918 pid('CodeGenClause,codeGen/fast' 5 pos('./compiler/CodeGen.oz' 1894 6) nil 7) <Q: 1139> nil)
		allocateL9
		inlineAt(localVars x(5) cache)
lbl(177576)	definition(x(6) 177596 pid('' 1 pos('./compiler/CodeGen.oz' 1895 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(177576)
lbl(177596)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		testBool(y(7) 177754 177762)
		inlineAt(guard x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 177735 177724)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating `cond\', `or\', `dis\' or `choice\' ')
		setConstant('clause with thread')
		move(y(7) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(177735)
lbl(177724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1899)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177735)	getLiteral(nil y(6))
		getRecord(vThread 5 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(2))
		unifyVoid(1)
		branch(177773)
lbl(177754)	unify(y(6) y(2))
		unify(y(1) y(5))
		branch(177773)
lbl(177762)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1897)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177773)	inlineAt(kind x(0) cache)
		match(x(0) ht(177811 [onScalar('ask' 177781) onScalar('wait' 177791) onScalar('waitTop' 177801)]))
lbl(177781)	getRecord(vAsk 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177824)
lbl(177791)	getRecord(vWait 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177824)
lbl(177801)	getRecord(vWaitTop 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177824)
lbl(177811)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1914)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(177824)	move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 177885 177905)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(4) x(2))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		putConstant(nil x(2))
		deAllocateL9
		genFastCall(<Q: 1027> 7)
lbl(177885)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<Q: 1022> 9)
lbl(177905)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1915)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(177564)
lbl(177918)	definition(x(8) 177971 pid('CodeGenClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1894 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1139> 11)
		endDefinition(177918)
lbl(177971)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178008)	definition(x(7) 178025 pid('CodeGenValueNode,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1926 6) nil 2) <Q: 1140> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178008)
lbl(178025)	definition(x(8) 178051 pid('CodeGenValueNode,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1926 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1140> 3)
		endDefinition(178025)
lbl(178051)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(178061)	definition(x(7) 178073 pid('CodeGenValueNode,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1929 6) nil 1) <Q: 1141> nil)
		getLiteral(true x(0))
		return
		endDefinition(178061)
lbl(178073)	definition(x(8) 178099 pid('CodeGenValueNode,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1929 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1141> 3)
		endDefinition(178073)
lbl(178099)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(178109)	definition(x(7) 178135 pid('CodeGenValueNode,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1932 6) nil 5) <Q: 1142> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(178109)
lbl(178135)	definition(x(8) 178188 pid('CodeGenValueNode,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1932 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1142> 11)
		endDefinition(178135)
lbl(178188)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(178198)	definition(x(7) 178284 pid('CodeGenValueNode,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1935 6) nil 7) <Q: 1143> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(178198)
lbl(178284)	definition(x(8) 178349 pid('CodeGenValueNode,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1935 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1143> 15)
		endDefinition(178284)
lbl(178349)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(178359)	definition(x(7) 178371 pid('CodeGenValueNode,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1942 6) nil 2) <Q: 1144> nil)
		unify(x(1) x(0))
		return
		endDefinition(178359)
lbl(178371)	definition(x(8) 178406 pid('CodeGenValueNode,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1942 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1144> 5)
		endDefinition(178371)
lbl(178406)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(178416)	definition(x(7) 178425 pid('CodeGenValueNode,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1945 6) nil 1) <Q: 1145> nil)
		return
		endDefinition(178416)
lbl(178425)	definition(x(8) 178451 pid('CodeGenValueNode,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1945 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1145> 3)
		endDefinition(178425)
lbl(178451)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178498)	definition(x(7) 178532 pid('CodeGenAtomNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1951 6) nil 4) <Q: 1146> nil)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178498)
lbl(178532)	definition(x(8) 178579 pid('CodeGenAtomNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1951 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1146> 9)
		endDefinition(178532)
lbl(178579)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178589)	definition(x(7) 178615 pid('CodeGenAtomNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1954 6) nil 4) <Q: 1147> nil)
		unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178589)
lbl(178615)	definition(x(8) 178662 pid('CodeGenAtomNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1954 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1147> 9)
		endDefinition(178615)
lbl(178662)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(178672)	definition(x(7) 178744 pid('CodeGenAtomNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1958 6) nil 4) <Q: 1148> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateLiteral 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178672)
lbl(178744)	definition(x(8) 178791 pid('CodeGenAtomNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1958 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1148> 9)
		endDefinition(178744)
lbl(178791)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(178801)	definition(x(7) 178818 pid('CodeGenAtomNode,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 1963 6) nil 2) <Q: 1149> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178801)
lbl(178818)	definition(x(8) 178844 pid('CodeGenAtomNode,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 1963 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1149> 3)
		endDefinition(178818)
lbl(178844)	putRecord('#' [1 2 fast] x(12))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenAtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178887)	definition(x(7) 178921 pid('CodeGenIntNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1969 6) nil 4) <Q: 1150> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178887)
lbl(178921)	definition(x(8) 178968 pid('CodeGenIntNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1969 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1150> 9)
		endDefinition(178921)
lbl(178968)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178978)	definition(x(7) 179004 pid('CodeGenIntNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1972 6) nil 4) <Q: 1151> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178978)
lbl(179004)	definition(x(8) 179051 pid('CodeGenIntNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1972 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1151> 9)
		endDefinition(179004)
lbl(179051)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(179061)	definition(x(7) 179133 pid('CodeGenIntNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1976 6) nil 4) <Q: 1152> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179061)
lbl(179133)	definition(x(8) 179180 pid('CodeGenIntNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1976 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1152> 9)
		endDefinition(179133)
lbl(179180)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179221)	definition(x(7) 179255 pid('CodeGenFloatNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1984 6) nil 4) <Q: 1153> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179221)
lbl(179255)	definition(x(8) 179302 pid('CodeGenFloatNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1984 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1153> 9)
		endDefinition(179255)
lbl(179302)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(179312)	definition(x(7) 179338 pid('CodeGenFloatNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1987 6) nil 4) <Q: 1154> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179312)
lbl(179338)	definition(x(8) 179385 pid('CodeGenFloatNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1987 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1154> 9)
		endDefinition(179338)
lbl(179385)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(179395)	definition(x(7) 179467 pid('CodeGenFloatNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1991 6) nil 4) <Q: 1155> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179395)
lbl(179467)	definition(x(8) 179514 pid('CodeGenFloatNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1991 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1155> 9)
		endDefinition(179467)
lbl(179514)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFloatNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [reg] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(179561)	definition(x(7) 179585 pid('CodeGenVariable,setReg/fast' 1 pos('./compiler/CodeGen.oz' 2000 6) nil 3) <Q: 1156> nil)
		inlineAt(reg x(1) cache)
		move(x(0) x(2))
		getSelf(x(0))
		tailSendMsg(newVariableReg x(2) 2 cache)
		endDefinition(179561)
lbl(179585)	definition(x(8) 179611 pid('CodeGenVariable,setReg/slow' 1 pos('./compiler/CodeGen.oz' 2000 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1156> 3)
		endDefinition(179585)
lbl(179611)	putRecord('#' [1 2 fast] x(9))
		setConstant(setReg)
		setValue(x(8))
		setValue(x(7))
lbl(179621)	definition(x(7) 179654 pid('CodeGenVariable,setFreshReg/fast' 1 pos('./compiler/CodeGen.oz' 2003 6) nil 3) <Q: 1157> nil)
		allocateL1
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(0) x(1))
		sendMsg(newVariableReg x(2) 2 cache)
		move(y(0) x(0))
		inlineAssign(reg x(0) cache)
		deAllocateL1
		return
		endDefinition(179621)
lbl(179654)	definition(x(8) 179680 pid('CodeGenVariable,setFreshReg/slow' 1 pos('./compiler/CodeGen.oz' 2003 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1157> 3)
		endDefinition(179654)
lbl(179680)	putRecord('#' [1 2 fast] x(10))
		setConstant(setFreshReg)
		setValue(x(8))
		setValue(x(7))
lbl(179690)	definition(x(7) 179707 pid('CodeGenVariable,reg/fast' 1 pos('./compiler/CodeGen.oz' 2006 6) nil 2) <Q: 1158> nil)
		inlineAt(reg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179690)
lbl(179707)	definition(x(8) 179733 pid('CodeGenVariable,reg/slow' 1 pos('./compiler/CodeGen.oz' 2006 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1158> 3)
		endDefinition(179707)
lbl(179733)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179771)	definition(x(7) 179812 pid('CodeGenVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2012 6) nil 4) <Q: 1159> nil)
		inlineAt(value x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 179809)
		inlineAt(value x(1) cache)
		getSelf(x(2))
		testBI('==' [x(1) x(2)]#[x(3)] 179798)
		return
lbl(179798)	inlineAt(value x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(179809)	return
		endDefinition(179771)
lbl(179812)	definition(x(8) 179838 pid('CodeGenVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2012 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1159> 3)
		endDefinition(179812)
lbl(179838)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(179848)	definition(x(7) 179867 pid('CodeGenVariableOccurrence,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2020 6) nil 7) <Q: 1160> nil)
		inlineAt(value x(6) cache)
		tailSendMsg(codeGenApplication x(6) 6 cache)
		endDefinition(179848)
lbl(179867)	definition(x(8) 179926 pid('CodeGenVariableOccurrence,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2020 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1160> 13)
		endDefinition(179867)
lbl(179926)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
lbl(179936)	definition(x(7) 180028 pid('CodeGenVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 2023 6) nil 4) <Q: 1161> [y(5)])
		allocateL3
		inlineAt(value x(1) cache)
		move(x(0) y(0))
		testBI('IsDet' [x(1)]#[x(2)] 180011)
lbl(179955)	testBI('IsObject' [x(1)]#[x(2)] 180011)
lbl(179959)	move(g(0) x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 180011)
lbl(179966)	createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 179996)
		unify(y(0) y(2))
		deAllocateL3
		return
lbl(179996)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
lbl(180011)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179936)
lbl(180028)	definition(x(8) 180054 pid('CodeGenVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 2023 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1161> 3)
		endDefinition(180028)
lbl(180054)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(180066)	definition(x(7) 180341 pid('CodeGenVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2038 6) nil 4) <Q: 1162> [y(46)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180162)
		testBI('IsNumber' [x(0)]#[x(1)] 180129)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
		branch(180162)
lbl(180129)	testBI('IsLiteral' [x(0)]#[x(1)] 180162)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
lbl(180162)	move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180171)
		deAllocateL5
		return
lbl(180171)	createVariableMove(y(3) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180293)
		testBI('IsNumber' [x(0)]#[x(1)] 180217)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180217)	testBI('IsLiteral' [x(0)]#[x(1)] 180247)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180247)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
lbl(180293)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(180066)
lbl(180341)	definition(x(8) 180388 pid('CodeGenVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2038 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1162> 9)
		endDefinition(180341)
lbl(180388)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(180398)	definition(x(7) 180486 pid('CodeGenVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2069 6) nil 4) <Q: 1163> [y(46)])
		allocateL2
		unify(x(1) x(2))
		move(x(3) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180466)
		testBI('IsNumber' [x(0)]#[x(1)] 180436)
		getRecord(number 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180436)	testBI('IsLiteral' [x(0)]#[x(1)] 180448)
		getRecord(literal 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180448)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
lbl(180466)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(180398)
lbl(180486)	definition(x(8) 180533 pid('CodeGenVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2069 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1163> 9)
		endDefinition(180486)
lbl(180533)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(180543)	definition(x(7) 180560 pid('CodeGenVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2084 6) nil 4) <Q: 1164> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(180543)
lbl(180560)	definition(x(8) 180607 pid('CodeGenVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2084 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1164> 9)
		endDefinition(180560)
lbl(180607)	putRecord('#' [1 2 fast] x(14))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(180617)	definition(x(7) 180664 pid('CodeGenVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2088 6) nil 2) <Q: 1165> [y(46)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180657)
		testBI('IsNumber' [x(0)]#[x(1)] 180649)
		getLiteral(true y(0))
		deAllocateL2
		return
lbl(180649)	callBI('IsLiteral' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(180657)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(180617)
lbl(180664)	definition(x(8) 180690 pid('CodeGenVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2088 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1165> 3)
		endDefinition(180664)
lbl(180690)	putRecord('#' [1 2 fast] x(15))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180700)	definition(x(7) 180726 pid('CodeGenVariableOccurrence,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 2092 6) nil 5) <Q: 1166> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(180700)
lbl(180726)	definition(x(8) 180779 pid('CodeGenVariableOccurrence,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2092 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1166> 11)
		endDefinition(180726)
lbl(180779)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180789)	definition(x(7) 180875 pid('CodeGenVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2095 6) nil 7) <Q: 1167> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(180789)
lbl(180875)	definition(x(8) 180940 pid('CodeGenVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2095 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1167> 15)
		endDefinition(180875)
lbl(180940)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(180950)	definition(x(7) 180969 pid('CodeGenVariableOccurrence,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2102 6) nil 2) <Q: 1168> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(180950)
lbl(180969)	definition(x(8) 180995 pid('CodeGenVariableOccurrence,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2102 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1168> 3)
		endDefinition(180969)
lbl(180995)	putRecord('#' [1 2 fast] x(18))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(181005)	definition(x(7) 181017 pid('CodeGenVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2105 6) nil 2) <Q: 1169> nil)
		unify(x(1) x(0))
		return
		endDefinition(181005)
lbl(181017)	definition(x(8) 181052 pid('CodeGenVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2105 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1169> 5)
		endDefinition(181017)
lbl(181052)	putRecord('#' [1 2 fast] x(19))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(181062)	definition(x(7) 181071 pid('CodeGenVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2108 6) nil 1) <Q: 1170> nil)
		return
		endDefinition(181062)
lbl(181071)	definition(x(8) 181097 pid('CodeGenVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2108 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1170> 3)
		endDefinition(181071)
lbl(181097)	putRecord('#' [1 2 fast] x(20))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181156)	definition(x(7) 181168 pid('CodeGenPatternVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2114 6) nil 1) <Q: 1171> nil)
		getLiteral(false x(0))
		return
		endDefinition(181156)
lbl(181168)	definition(x(8) 181194 pid('CodeGenPatternVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2114 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1171> 3)
		endDefinition(181168)
lbl(181194)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(181206)	definition(x(7) 181255 pid('CodeGenPatternVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2117 6) nil 7) <Q: 1172> [y(1)])
		allocateL4
		getRecord(vGetVariable 3 x(2))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(3))
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		getSelf(x(2))
		sendMsg(reg x(2) 1 cache)
		unify(y(1) y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true addPatternVs true 2) 0)
		endDefinition(181206)
lbl(181255)	definition(x(8) 181320 pid('CodeGenPatternVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2117 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1172> 15)
		endDefinition(181255)
lbl(181320)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(181330)	definition(x(7) 181397 pid('CodeGenPatternVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2123 6) nil 4) <Q: 1173> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 181368 181384)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(181368)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
lbl(181384)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2124)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181330)
lbl(181397)	definition(x(8) 181432 pid('CodeGenPatternVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2123 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1173> 5)
		endDefinition(181397)
lbl(181432)	putRecord('#' [1 2 fast] x(11))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(181442)	definition(x(7) 181496 pid('CodeGenPatternVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2130 6) nil 5) <Q: 1174> nil)
		allocateL5
		inlineAt(variable x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(4) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(181442)
lbl(181496)	definition(x(8) 181543 pid('CodeGenPatternVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2130 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1174> 9)
		endDefinition(181496)
lbl(181543)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181586)	definition(x(7) 181603 pid('CodeGenToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2136 6) nil 2) <Q: 1175> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(181586)
lbl(181603)	definition(x(8) 181629 pid('CodeGenToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2136 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1175> 3)
		endDefinition(181603)
lbl(181629)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenToken' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181666)	definition(x(7) 181703 pid('CodeGenNameToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2142 6) nil 2) <Q: 1176> nil)
		inlineAt(isToplevel x(1) cache)
		testBool(x(1) 181689 181690)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
lbl(181689)	return
lbl(181690)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2143)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181666)
lbl(181703)	definition(x(8) 181729 pid('CodeGenNameToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2142 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1176> 3)
		endDefinition(181703)
lbl(181729)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181766)	definition(x(7) 181896 pid('CodeGenProcedureToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2148 6) nil 7) <Q: 1177> nil)
		allocateL5
		getSelf(x(3))
		inlineDot(x(3) predicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('IsDet' [x(3)]#[x(6)] 181802)
lbl(181798)	testLiteral(x(3) unit 181851)
lbl(181802)	getRecord(vCall 5 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(4))
		sendMsg(reg y(0) 1 cache)
lbl(181822)	definition(x(1) 181842 pid('' 2 pos('./compiler/CodeGen.oz' 2156 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181822)
lbl(181842)	moveMoveYXYX(y(2) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(181851)	getRecord(vFastCall 5 y(3))
		unifyVoid(1)
		unifyValVar(x(3) x(4))
		unifyValue(y(1))
		unifyValue(y(4))
lbl(181864)	definition(x(1) 181884 pid('' 2 pos('./compiler/CodeGen.oz' 2152 42) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181864)
lbl(181884)	move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(181766)
lbl(181896)	definition(x(8) 181955 pid('CodeGenProcedureToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2148 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1177> 13)
		endDefinition(181896)
lbl(181955)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: ClauseBodyShared>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(181998)	definition(x(7) 182079 pid('CodeGenClauseBodyToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2163 6) nil 6) <Q: 1178> nil)
		getLiteral(nil x(2))
		getSelf(x(0))
		inlineDot(x(0) <M: ClauseBodyShared> x(1) cache)
		unify(x(1) x(4))
		getLiteral(nil x(5))
		testBI('IsFree' [x(4)]#[x(0)] 182076)
		allocateL3
		getRecord(vShared 4 x(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(3) y(2))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(4))
		callBI('NewCell' [x(4)]#[x(0)])
		unify(x(0) y(0))
		getSelf(x(4))
		inlineDot(x(4) clauseBodyStatements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<Q: 1022> 9)
lbl(182076)	return
		endDefinition(181998)
lbl(182079)	definition(x(8) 182138 pid('CodeGenClauseBodyToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2163 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1178> 13)
		endDefinition(182079)
lbl(182138)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(182172)	definition(x(7) 183351 pid('CodeGenBuiltinToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2177 6) nil 8) <Q: 1179> [y(3) y(5)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) printName x(6) cache)
		inlineAt(value x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(7) x(0))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(5) ht(182704 [onScalar('New' 182219) onScalar('+' 182314) onScalar('-' 182575)]))
lbl(182219)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(7))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(8))
		unifyLiteral(nil)
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(2) 1 cache)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('New')
		unifyVariable(x(0))
		unifyValVar(y(0) y(2))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(10))
		unifyVariable(x(3))
		getList(x(3))
		unifyValue(y(9))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(10) x(0))
		sendMsg(reg y(7) 1 cache)
		getRecord(vUnify 4 y(2))
		unifyVoid(1)
		unifyValVar(y(9) x(0))
		unifyValue(y(4))
		sendMsg(reg y(8) 1 cache)
		branch(183295)
lbl(182314)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182441)
		match(y(8) ht(182441 [onScalar(1 182351) onScalar(~1 182397)]))
lbl(182351)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(182441)
lbl(182397)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
lbl(182441)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182450)
		branch(183295)
lbl(182450)	createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		move(y(8) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 183295 182564)
		match(y(8) ht(183295 [onScalar(1 182472) onScalar(~1 182518)]))
lbl(182472)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183295)
lbl(182518)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183295)
lbl(182564)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2207)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182575)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183295)
		match(y(7) ht(183295 [onScalar(1 182612) onScalar(~1 182658)]))
lbl(182612)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183295)
lbl(182658)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183295)
lbl(182704)	move(y(2) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(1) cache)
		testBool(x(1) 182719 183284)
		branch(183295)
lbl(182719)	match(y(5) ht(183295 [onScalar('.' 182722) onScalar('@' 182933) onScalar('<-' 182987) onScalar(',' 183041)]))
lbl(182722)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183295)
lbl(182756)	testBI('IsLiteral' [x(0)]#[x(1)] 182927)
lbl(182760)	createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		createVariable(y(10))
		move(y(9) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182798)
		testBI('IsRecord' [x(0)]#[x(1)] 182793)
		move(y(8) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		unify(x(2) y(10))
		branch(182801)
lbl(182793)	getLiteral(false y(10))
		branch(182801)
lbl(182798)	getLiteral(false y(10))
lbl(182801)	testBool(y(10) 182873 182916)
lbl(182805)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBI('IsObject' [x(2)]#[x(3)] 182873)
lbl(182817)	callBI('.' [x(0) x(1)]#[x(2)])
		move(g(1) x(3))
		testBI('HasFeature' [x(2) x(3)]#[x(4)] 182873)
lbl(182827)	callBI('.' [x(0) x(1)]#[x(2)])
		createVariableMove(y(11) x(0))
		sendMsg(reg x(2) 1 cache)
		move(y(11) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182873)
lbl(182846)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(y(2) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		sendMsg(makeEquation y(7) 4 cache)
		branch(183295)
lbl(182873)	getRecord(vInlineDot 7 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(8) y(2))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		move(y(2) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183295)
lbl(182916)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2244)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182927)	testBI('IsInt' [x(0)]#[x(1)] 183295)
		branch(182760)
lbl(182933)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183295)
lbl(182961)	testBI('IsLiteral' [x(0)]#[x(1)] 183295)
lbl(182965)	getRecord(vInlineAt 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183295)
lbl(182987)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183295)
lbl(183015)	testBI('IsLiteral' [x(0)]#[x(1)] 183295)
lbl(183019)	getRecord(vInlineAssign 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183295)
lbl(183041)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183295)
lbl(183069)	testBI('IsRecord' [x(0)]#[x(1)] 183295)
lbl(183073)	createVariable(y(8))
		createVariable(y(9))
		testBI('IsTuple' [x(0)]#[x(1)] 183130)
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(183087)	definition(x(3) 183111 pid('' 3 pos('./compiler/CodeGen.oz' 2281 10) nil 4) unit [y(7)])
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(183087)
lbl(183111)	moveMoveYXYX(y(8) x(0) y(9) x(5))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		branch(183162)
lbl(183130)	callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(183136)	definition(x(1) 183154 pid('' 2 pos('./compiler/CodeGen.oz' 2284 33) nil 4) unit [y(7)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(183136)
lbl(183154)	moveMoveYXYX(y(8) x(0) y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(183162)	moveMoveYXYX(y(9) x(0) y(2) x(1))
		move(y(3) x(3))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(4))
		genFastCall(<Q: 1039> 10)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(6) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(9) 183238 183273)
		getRecord(vGenCall 8 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(true)
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183295)
lbl(183238)	getRecord(vApplMeth 7 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183295)
lbl(183273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2287)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183284)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2232)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183295)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183304)
		deAllocateL
		return
lbl(183304)	definition(x(1) 183324 pid('' 2 pos('./compiler/CodeGen.oz' 2303 28) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(183304)
lbl(183324)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(4))
		deAllocateL
		return
		endDefinition(182172)
lbl(183351)	definition(x(8) 183410 pid('CodeGenBuiltinToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2177 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1179> 13)
		endDefinition(183351)
lbl(183410)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBuiltinToken' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(36))
		unifyValue(y(23))
		unifyValue(y(18))
		unifyValue(y(42))
		unifyValue(y(19))
		unifyValue(y(20))
		unifyValue(y(3))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(29))
		unifyValue(y(40))
		unifyValue(y(17))
		unifyValue(y(50))
		unifyValue(y(14))
		unifyValue(y(11))
		unifyValue(y(15))
		unifyValue(y(38))
		unifyValue(y(24))
		unifyValue(y(13))
		unifyValue(y(22))
		unifyValue(y(34))
		unifyValue(y(44))
		unifyValue(y(16))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(43))
		unifyValue(y(28))
		unifyValue(y(31))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(30))
		unifyValue(y(6))
		unifyValue(y(48))
		unifyValue(y(25))
		unifyValue(y(32))
		unifyValue(y(37))
		unifyValue(y(2))
		unifyValue(y(21))
		unifyValue(y(1))
		unifyValue(y(49))
		unifyValue(y(4))
		unifyValue(y(12))
		unifyValue(y(0))
		unifyValue(y(10))
		unifyValue(y(26))
		unifyValue(y(47))
		unifyValue(y(27))
		unifyValue(y(9))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(129187)
lbl(183555)	tailCall(x(2) 0)
		endDefinition(126931)
lbl(183560)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putList(x(7))
		setConstant(imAVariableOccurrence)
		setConstant(nil)
		putList(x(6))
		setConstant(isBuiltin)
		setValue(x(7))
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(10))
		setConstant(literals)
		setConstant(nil)
		putList(x(9))
		setConstant(procs)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putList(x(12))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(11))
		setValue(x(12))
		putRecord('import' ['Builtins' 'Core' 'Misc' 'RunTime' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(8))
		setValue(x(11))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		createVariableMove(y(95) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(183900)	definition(x(2) 216502 pid('' 2 pos('./compiler/FunCore.oz' 1 0) nil 4) <P: 1180> [y(144)])
		putList(x(2))
		setPredicateRef(<Q: 1181>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1182>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1183>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1184>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1185>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1186>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1187>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1188>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1189>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1190>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1191>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1192>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1193>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1194>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1195>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1196>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1197>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1198>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1199>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1200>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1201>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1202>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1203>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1204>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1205>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1206>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1207>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1208>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1209>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1210>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1211>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1212>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1213>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1214>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1215>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1216>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1217>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1218>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1219>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1220>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1221>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1222>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1223>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1224>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1225>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1226>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1227>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1228>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1229>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1230>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1231>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1232>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1233>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1234>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1235>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1236>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1237>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1238>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1239>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1240>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1241>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1242>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1243>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1244>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1245>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1246>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1247>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1248>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1249>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1250>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1251>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1252>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1253>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1254>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CheckUse>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1255>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1256>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1257>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1258>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1259>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1260>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1261>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1262>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1263>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1264>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1265>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1266>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1267>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1268>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1269>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1270>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1271>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1272>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1273>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1274>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1275>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1276>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1277>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1278>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1279>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1280>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1281>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1282>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1283>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1284>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1285>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1286>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1287>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1288>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1289>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1290>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1291>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1292>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1294>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputApplication>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1327>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1328>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1329>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1330>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1331>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1332>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1341>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1342>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1343>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1344>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1345>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1346>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1347>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1348>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1349>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1350>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1351>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1352>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1353>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1354>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1355>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1356>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1357>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1358>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1359>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1360>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1361>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1362>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1363>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1364>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1365>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1366>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1367>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1368>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1369>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1370>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1371>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1372>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1373>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1374>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1375>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1376>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1377>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1378>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1379>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1380>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1381>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1391>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsDenied>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1392>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1393>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1394>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1395>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputValue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1403>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1404>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1405>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1406>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1407>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1408>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1409>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1410>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1411>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1412>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1413>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1414>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1415>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1416>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1417>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1418>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1419>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1420>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1421>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1422>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1423>)
		setValue(x(2))
lbl(185418)	definitionCopy(x(3) 216497 pid('/body' 0 pos('./compiler/FunCore.oz' 1 0) [once] 23) unit [x(0) g(0) x(1)])
		allocateL(63)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'SA' x(2) cache)
		inlineDot(x(0) 'CodeGen' x(3) cache)
		inlineDot(x(0) 'Misc' x(7) cache)
		inlineDot(x(7) imAConstruction x(4) cache)
		inlineDot(x(7) imAValueNode x(5) cache)
		inlineDot(x(7) imAVariableOccurrence x(6) cache)
		inlineDot(x(7) imAToken x(7) cache)
lbl(185477)	definition(x(8) 185565 pid('VariableUnion' 3 pos('./compiler/Annotate.oz' 46 3) nil 3) <Q: 1181> nil)
		match(x(0) ht(185550 [onScalar(nil 185486) onRecord('|' 2 185490)]))
lbl(185486)	unify(x(2) x(1))
		return
lbl(185490)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 185524 185539)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185524)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185539)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(50)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(185550)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(54)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185477)
lbl(185565)	definition(x(8) 185631 pid('AnnotateGlobalVarsList' 4 pos('./compiler/Annotate.oz' 57 3) nil 5) <Q: 1182> nil)
		match(x(0) ht(185616 [onScalar(nil 185574) onRecord('|' 2 185578)]))
lbl(185574)	unify(x(2) x(3))
		return
lbl(185578)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
lbl(185616)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(63)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185565)
lbl(185631)	definition(x(8) 185688 pid('MarkFirstList' 3 pos('./compiler/Annotate.oz' 66 3) nil 4) <Q: 1183> nil)
		match(x(0) ht(185673 [onScalar(nil 185640) onRecord('|' 2 185641)]))
lbl(185640)	return
lbl(185641)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(markFirst x(3) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1183> 7)
lbl(185673)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(71)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185631)
lbl(185688)	createVariable(x(8))
lbl(185690)	definition(x(9) 185799 pid('MarkFirstClauses' 6 pos('./compiler/Annotate.oz' 74 3) nil 7) <Q: 1184> [x(8)])
		allocateL7
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYYX(x(5) y(5) y(1) x(0))
		moveMoveYXYX(y(2) x(1) y(4) x(3))
		move(y(5) x(4))
		createVariableMove(y(6) x(2))
		sendMsg(markFirstClause x(6) 5 cache)
lbl(185735)	definition(x(1) 185785 pid('' 3 pos('./compiler/Annotate.oz' 78 3) nil 6) unit [y(1) y(2) y(4) y(5) g(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(3))
		move(g(3) x(4))
		createVariableMove(y(2) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(4) false '' true 3) 0)
		endDefinition(185735)
lbl(185785)	moveMoveYXYX(y(0) x(0) y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		genFastCall(<P: 30> 9)
		endDefinition(185690)
lbl(185799)	definition(x(9) 185850 pid('SetUninitVars' 1 pos('./compiler/Annotate.oz' 85 3) nil 2) <Q: 1185> nil)
lbl(185805)	definition(x(1) 185845 pid('' 1 pos('./compiler/Annotate.oz' 87 7) nil 2) unit nil)
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getUse y(0) 1 cache)
		testLiteral(y(1) unused 185841)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setUse x(1) 1 cache)
lbl(185841)	deAllocateL2
		return
		endDefinition(185805)
lbl(185845)	genFastCall(<P: 34> 5)
		endDefinition(185799)
lbl(185850)	definition(x(9) 185887 pid('GetUses' 2 pos('./compiler/Annotate.oz' 92 3) nil 4) <Q: 1186> nil)
lbl(185856)	definition(x(3) 185876 pid('' 2 pos('./compiler/Annotate.oz' 93 14) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getUse x(2) 1 cache)
		endDefinition(185856)
lbl(185876)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(185850)
lbl(185887)	definition(x(9) 185940 pid('SetUses' 2 pos('./compiler/Annotate.oz' 96 3) nil 3) <Q: 1187> nil)
		match(x(0) ht(185925 [onScalar(nil 185896) onRecord('|' 2 185900)]))
lbl(185896)	getLiteral(nil x(1))
		return
lbl(185900)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(setUse x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
lbl(185925)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(102)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185887)
lbl(185940)	putRecord(use [linear multiple unused wildcard] x(10))
		setConstant(linear)
		setConstant(multiple)
		setConstant(linear)
		setConstant(linear)
		putRecord(use [linear multiple unused wildcard] x(11))
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		putRecord(use [linear multiple unused wildcard] x(12))
		setConstant(linear)
		setConstant(multiple)
		setConstant(unused)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(13))
		setConstant(linear)
		setConstant(multiple)
		setConstant(wildcard)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
lbl(186000)	definition(x(10) 186038 pid('UsesMax' 3 pos('./compiler/Annotate.oz' 115 6) nil 5) <Q: 1188> [g(1) x(9)])
lbl(186006)	definition(x(4) 186027 pid('' 3 pos('./compiler/Annotate.oz' 117 24) nil 5) unit [g(1)])
		move(g(0) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(4) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(186006)
lbl(186027)	move(x(2) x(3))
		move(x(4) x(2))
		genFastCall(<P: 73> 9)
		endDefinition(186000)
lbl(186038)	unify(x(10) x(8))
lbl(186041)	definition(x(8) 186078 pid('CheckUses' 3 pos('./compiler/Annotate.oz' 121 3) nil 4) <Q: 1189> nil)
lbl(186047)	definition(x(3) 186070 pid('' 1 pos('./compiler/Annotate.oz' 122 17) nil 3) unit [x(1) x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(186047)
lbl(186070)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(186041)
lbl(186078)	definition(x(8) 186090 pid('AnnotateDefaults,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 126 6) nil 3) <Q: 1190> nil)
		unify(x(1) x(2))
		return
		endDefinition(186078)
lbl(186090)	definition(x(9) 186131 pid('AnnotateDefaults,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 126 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1190> 7)
		endDefinition(186090)
lbl(186131)	putRecord('#' [1 2 fast] x(10))
		setConstant(annotateGlobalVars)
		setValue(x(9))
		setValue(x(8))
lbl(186141)	definition(x(8) 186150 pid('AnnotateDefaults,markFirst/fast' 2 pos('./compiler/Annotate.oz' 129 6) nil 2) <Q: 1191> nil)
		return
		endDefinition(186141)
lbl(186150)	definition(x(9) 186185 pid('AnnotateDefaults,markFirst/slow' 1 pos('./compiler/Annotate.oz' 129 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1191> 5)
		endDefinition(186150)
lbl(186185)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirst)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefaults' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStatement' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186269)	definition(x(7) 186288 pid('AnnotateTypeOf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 138 6) nil 4) <Q: 1192> nil)
		inlineAt(res x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186269)
lbl(186288)	definition(x(8) 186329 pid('AnnotateTypeOf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 138 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1192> 7)
		endDefinition(186288)
lbl(186329)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186339)	definition(x(7) 186358 pid('AnnotateTypeOf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 141 6) nil 3) <Q: 1193> nil)
		inlineAt(res x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186339)
lbl(186358)	definition(x(8) 186393 pid('AnnotateTypeOf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1193> 5)
		endDefinition(186358)
lbl(186393)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186432)	definition(x(7) 186460 pid('AnnotateStepPoint,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 147 6) nil 5) <Q: 1194> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(186432)
lbl(186460)	definition(x(8) 186501 pid('AnnotateStepPoint,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 147 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1194> 7)
		endDefinition(186460)
lbl(186501)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186511)	definition(x(7) 186536 pid('AnnotateStepPoint,markFirst/fast' 2 pos('./compiler/Annotate.oz' 150 6) nil 4) <Q: 1195> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(186511)
lbl(186536)	definition(x(8) 186571 pid('AnnotateStepPoint,markFirst/slow' 1 pos('./compiler/Annotate.oz' 150 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1195> 5)
		endDefinition(186536)
lbl(186571)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186610)	definition(x(7) 186663 pid('AnnotateDeclaration,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 156 6) nil 5) <Q: 1196> nil)
		allocateL4
		inlineAt(statements x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
		endDefinition(186610)
lbl(186663)	definition(x(8) 186704 pid('AnnotateDeclaration,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 156 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1196> 7)
		endDefinition(186663)
lbl(186704)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186714)	definition(x(7) 186790 pid('AnnotateDeclaration,markFirst/fast' 2 pos('./compiler/Annotate.oz' 159 6) nil 4) <Q: 1197> nil)
		allocateL2
		inlineAt(localVars x(2) cache)
lbl(186726)	definition(x(3) 186746 pid('' 1 pos('./compiler/Annotate.oz' 160 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(186726)
lbl(186746)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(1) x(2))
		putConstant('local variable' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
		endDefinition(186714)
lbl(186790)	definition(x(8) 186825 pid('AnnotateDeclaration,markFirst/slow' 1 pos('./compiler/Annotate.oz' 159 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1197> 5)
		endDefinition(186790)
lbl(186825)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDeclaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateSkipNode' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186891)	definition(x(7) 186939 pid('AnnotateEquation,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 170 6) nil 4) <Q: 1198> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186891)
lbl(186939)	definition(x(8) 186980 pid('AnnotateEquation,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 170 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1198> 7)
		endDefinition(186939)
lbl(186980)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186990)	definition(x(7) 187032 pid('AnnotateEquation,markFirst/fast' 2 pos('./compiler/Annotate.oz' 174 6) nil 3) <Q: 1199> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186990)
lbl(187032)	definition(x(8) 187067 pid('AnnotateEquation,markFirst/slow' 1 pos('./compiler/Annotate.oz' 174 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1199> 5)
		endDefinition(187032)
lbl(187067)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquation' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(187106)	definition(x(7) 187216 pid('AnnotateConstruction,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 181 6) nil 4) <Q: 1200> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(187137)	definition(x(1) 187205 pid('' 3 pos('./compiler/Annotate.oz' 184 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 187188)
lbl(187148)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(187188)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(187137)
lbl(187205)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(187106)
lbl(187216)	definition(x(8) 187257 pid('AnnotateConstruction,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 181 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1200> 7)
		endDefinition(187216)
lbl(187257)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187267)	definition(x(7) 187361 pid('AnnotateConstruction,markFirst/fast' 2 pos('./compiler/Annotate.oz' 193 6) nil 3) <Q: 1201> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(187295)	definition(x(1) 187355 pid('' 1 pos('./compiler/Annotate.oz' 196 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 187338)
lbl(187306)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(187338)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(187295)
lbl(187355)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(187267)
lbl(187361)	definition(x(8) 187396 pid('AnnotateConstruction,markFirst/slow' 1 pos('./compiler/Annotate.oz' 193 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1201> 5)
		endDefinition(187361)
lbl(187396)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateConstruction' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(187441)	definition(x(7) 187576 pid('AnnotateDefinition,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 209 6) nil 4) <Q: 1202> nil)
		allocateL5
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		inlineAt(formalArgs x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(187506)	definition(x(1) 187562 pid('' 3 pos('./compiler/Annotate.oz' 214 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 187541 187549)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(187541)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(187549)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(215)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187506)
lbl(187562)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(187441)
lbl(187576)	definition(x(8) 187617 pid('AnnotateDefinition,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1202> 7)
		endDefinition(187576)
lbl(187617)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187627)	definition(x(7) 187741 pid('AnnotateDefinition,markFirst/fast' 2 pos('./compiler/Annotate.oz' 220 6) nil 3) <Q: 1203> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
lbl(187671)	definition(x(1) 187691 pid('' 1 pos('./compiler/Annotate.oz' 223 22) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(187671)
lbl(187691)	genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 187726 187728)
		inlineAt(formalArgs x(0) cache)
		move(y(1) x(2))
		putConstant('formal parameter' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
lbl(187726)	deAllocateL2
		return
lbl(187728)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(225)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187627)
lbl(187741)	definition(x(8) 187776 pid('AnnotateDefinition,markFirst/slow' 1 pos('./compiler/Annotate.oz' 220 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1203> 5)
		endDefinition(187741)
lbl(187776)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFunctionDefinition' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClauseBody' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(187860)	definition(x(7) 187905 pid('AnnotateApplication,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 236 6) nil 4) <Q: 1204> nil)
		allocateL3
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(187860)
lbl(187905)	definition(x(8) 187946 pid('AnnotateApplication,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 236 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1204> 7)
		endDefinition(187905)
lbl(187946)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187956)	definition(x(7) 187995 pid('AnnotateApplication,markFirst/fast' 2 pos('./compiler/Annotate.oz' 240 6) nil 3) <Q: 1205> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(187956)
lbl(187995)	definition(x(8) 188030 pid('AnnotateApplication,markFirst/slow' 1 pos('./compiler/Annotate.oz' 240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1205> 5)
		endDefinition(187995)
lbl(188030)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateApplication' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188075)	definition(x(7) 188190 pid('AnnotateBoolCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 248 6) nil 4) <Q: 1206> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		inlineAt(alternative x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(2) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(188075)
lbl(188190)	definition(x(8) 188231 pid('AnnotateBoolCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 248 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1206> 7)
		endDefinition(188190)
lbl(188231)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188241)	definition(x(7) 188375 pid('AnnotateBoolCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 256 6) nil 6) <Q: 1207> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(consequent x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(3) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(alternative x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(globalVars x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(188241)
lbl(188375)	definition(x(8) 188410 pid('AnnotateBoolCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 256 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1207> 5)
		endDefinition(188375)
lbl(188410)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolCase' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188452)	definition(x(7) 188577 pid('AnnotateBoolClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 270 6) nil 5) <Q: 1208> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(188507)	definition(x(1) 188563 pid('' 3 pos('./compiler/Annotate.oz' 274 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 188542 188550)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(188542)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(188550)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(275)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(188507)
lbl(188563)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(188452)
lbl(188577)	definition(x(8) 188618 pid('AnnotateBoolClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 270 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1208> 7)
		endDefinition(188577)
lbl(188618)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188628)	definition(x(7) 188645 pid('AnnotateBoolClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 280 6) nil 2) <Q: 1209> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(188628)
lbl(188645)	definition(x(8) 188671 pid('AnnotateBoolClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1209> 3)
		endDefinition(188645)
lbl(188671)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188681)	definition(x(7) 188732 pid('AnnotateBoolClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 283 6) nil 6) <Q: 1210> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(188681)
lbl(188732)	definition(x(8) 188785 pid('AnnotateBoolClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 283 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1210> 11)
		endDefinition(188732)
lbl(188785)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188829)	definition(x(7) 188996 pid('AnnotatePatternCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 292 6) nil 4) <Q: 1211> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188860)	definition(x(1) 188883 pid('' 3 pos('./compiler/Annotate.oz' 295 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(188860)
lbl(188883)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188916)	definition(x(1) 188951 pid('' 3 pos('./compiler/Annotate.oz' 300 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(188916)
lbl(188951)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(188829)
lbl(188996)	definition(x(8) 189037 pid('AnnotatePatternCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 292 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1211> 7)
		endDefinition(188996)
lbl(189037)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189047)	definition(x(7) 189164 pid('AnnotatePatternCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 304 6) nil 6) <Q: 1212> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(189047)
lbl(189164)	definition(x(8) 189199 pid('AnnotatePatternCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1212> 5)
		endDefinition(189164)
lbl(189199)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternCase' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars patternGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(189243)	definition(x(7) 189411 pid('AnnotatePatternClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 319 6) nil 5) <Q: 1213> nil)
		allocateL6
		inlineAt(pattern x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(patternGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(5) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(189341)	definition(x(1) 189397 pid('' 3 pos('./compiler/Annotate.oz' 325 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 189376 189384)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(189376)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(189384)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(326)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(189341)
lbl(189397)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(189243)
lbl(189411)	definition(x(8) 189452 pid('AnnotatePatternClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 319 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1213> 7)
		endDefinition(189411)
lbl(189452)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189462)	definition(x(7) 189479 pid('AnnotatePatternClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 331 6) nil 2) <Q: 1214> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189462)
lbl(189479)	definition(x(8) 189505 pid('AnnotatePatternClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 331 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1214> 3)
		endDefinition(189479)
lbl(189505)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189515)	definition(x(7) 189532 pid('AnnotatePatternClause,getPatternGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 334 6) nil 2) <Q: 1215> nil)
		inlineAt(patternGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189515)
lbl(189532)	definition(x(8) 189558 pid('AnnotatePatternClause,getPatternGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 334 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1215> 3)
		endDefinition(189532)
lbl(189558)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPatternGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189568)	definition(x(7) 189684 pid('AnnotatePatternClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 337 6) nil 7) <Q: 1216> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(189580)	definition(x(6) 189600 pid('' 1 pos('./compiler/Annotate.oz' 338 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(189580)
lbl(189600)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(189568)
lbl(189684)	definition(x(8) 189737 pid('AnnotatePatternClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 337 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1216> 11)
		endDefinition(189684)
lbl(189737)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternClause' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(189777)	definition(x(7) 189887 pid('AnnotateRecordPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 348 6) nil 4) <Q: 1217> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(189808)	definition(x(1) 189876 pid('' 3 pos('./compiler/Annotate.oz' 351 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 189859)
lbl(189819)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(189859)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(189808)
lbl(189876)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(189777)
lbl(189887)	definition(x(8) 189928 pid('AnnotateRecordPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 348 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1217> 7)
		endDefinition(189887)
lbl(189928)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189938)	definition(x(7) 190032 pid('AnnotateRecordPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 360 6) nil 3) <Q: 1218> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(189966)	definition(x(1) 190026 pid('' 1 pos('./compiler/Annotate.oz' 363 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 190009)
lbl(189977)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(190009)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(189966)
lbl(190026)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(189938)
lbl(190032)	definition(x(8) 190067 pid('AnnotateRecordPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 360 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1218> 5)
		endDefinition(190032)
lbl(190067)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRecordPattern' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(190106)	definition(x(7) 190154 pid('AnnotateEquationPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 375 6) nil 4) <Q: 1219> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(190106)
lbl(190154)	definition(x(8) 190195 pid('AnnotateEquationPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 375 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1219> 7)
		endDefinition(190154)
lbl(190195)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190205)	definition(x(7) 190247 pid('AnnotateEquationPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 379 6) nil 3) <Q: 1220> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(190205)
lbl(190247)	definition(x(8) 190282 pid('AnnotateEquationPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 379 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1220> 5)
		endDefinition(190247)
lbl(190282)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquationPattern' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAbstractElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190351)	definition(x(7) 190476 pid('AnnotateElseNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 389 6) nil 5) <Q: 1221> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(190406)	definition(x(1) 190462 pid('' 3 pos('./compiler/Annotate.oz' 393 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 190441 190449)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(190441)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(190449)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(190406)
lbl(190462)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190351)
lbl(190476)	definition(x(8) 190517 pid('AnnotateElseNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 389 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1221> 7)
		endDefinition(190476)
lbl(190517)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190527)	definition(x(7) 190544 pid('AnnotateElseNode,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 399 6) nil 2) <Q: 1222> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(190527)
lbl(190544)	definition(x(8) 190570 pid('AnnotateElseNode,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 399 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1222> 3)
		endDefinition(190544)
lbl(190570)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190580)	definition(x(7) 190631 pid('AnnotateElseNode,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 402 6) nil 6) <Q: 1223> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(190580)
lbl(190631)	definition(x(8) 190684 pid('AnnotateElseNode,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 402 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1223> 11)
		endDefinition(190631)
lbl(190684)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateElseNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(190722)	definition(x(7) 190734 pid('AnnotateNoElse,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 409 6) nil 3) <Q: 1224> nil)
		unify(x(1) x(2))
		return
		endDefinition(190722)
lbl(190734)	definition(x(8) 190775 pid('AnnotateNoElse,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 409 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1224> 7)
		endDefinition(190734)
lbl(190775)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190785)	definition(x(7) 190797 pid('AnnotateNoElse,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 412 6) nil 1) <Q: 1225> nil)
		getLiteral(nil x(0))
		return
		endDefinition(190785)
lbl(190797)	definition(x(8) 190823 pid('AnnotateNoElse,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 412 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1225> 3)
		endDefinition(190797)
lbl(190823)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190833)	definition(x(7) 190862 pid('AnnotateNoElse,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 415 6) nil 5) <Q: 1226> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
		endDefinition(190833)
lbl(190862)	definition(x(8) 190915 pid('AnnotateNoElse,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 415 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1226> 11)
		endDefinition(190862)
lbl(190915)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateNoElse' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190962)	definition(x(7) 191087 pid('AnnotateThreadNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 423 6) nil 5) <Q: 1227> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(191017)	definition(x(1) 191073 pid('' 3 pos('./compiler/Annotate.oz' 427 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 191052 191060)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(191052)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(191060)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(191017)
lbl(191073)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190962)
lbl(191087)	definition(x(8) 191128 pid('AnnotateThreadNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 423 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1227> 7)
		endDefinition(191087)
lbl(191128)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191138)	definition(x(7) 191177 pid('AnnotateThreadNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 433 6) nil 3) <Q: 1228> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(191138)
lbl(191177)	definition(x(8) 191212 pid('AnnotateThreadNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 433 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1228> 5)
		endDefinition(191177)
lbl(191212)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateThreadNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(191254)	definition(x(7) 191404 pid('AnnotateTryNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 441 6) nil 5) <Q: 1229> nil)
		allocateL5
		inlineAt(tryStatements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(catchStatements x(0) cache)
		inlineAt(exception x(4) cache)
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		move(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(191334)	definition(x(1) 191390 pid('' 3 pos('./compiler/Annotate.oz' 446 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 191369 191377)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(191369)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(191377)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(191334)
lbl(191390)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(191254)
lbl(191404)	definition(x(8) 191445 pid('AnnotateTryNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 441 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1229> 7)
		endDefinition(191404)
lbl(191445)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191455)	definition(x(7) 191538 pid('AnnotateTryNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 452 6) nil 3) <Q: 1230> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(tryStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(2) cache)
		move(y(1) x(1))
		putConstant('exception variable' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(191455)
lbl(191538)	definition(x(8) 191573 pid('AnnotateTryNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1230> 5)
		endDefinition(191538)
lbl(191573)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTryNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191609)	definition(x(7) 191654 pid('AnnotateLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 462 6) nil 4) <Q: 1231> nil)
		allocateL3
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(191609)
lbl(191654)	definition(x(8) 191695 pid('AnnotateLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 462 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1231> 7)
		endDefinition(191654)
lbl(191695)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191705)	definition(x(7) 191744 pid('AnnotateLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 466 6) nil 3) <Q: 1232> nil)
		allocateL2
		inlineAt(lockVar x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(191705)
lbl(191744)	definition(x(8) 191779 pid('AnnotateLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 466 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1232> 5)
		endDefinition(191744)
lbl(191779)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateLockNode' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191818)	definition(x(7) 192121 pid('AnnotateClassNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 473 6) nil 4) <Q: 1233> nil)
		allocateL4
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(parents x(0) cache)
lbl(191849)	definition(x(1) 191872 pid('' 3 pos('./compiler/Annotate.oz' 477 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191849)
lbl(191872)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(properties x(0) cache)
lbl(191886)	definition(x(1) 191909 pid('' 3 pos('./compiler/Annotate.oz' 481 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191886)
lbl(191909)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(attributes x(0) cache)
lbl(191923)	definition(x(1) 191991 pid('' 3 pos('./compiler/Annotate.oz' 485 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191974)
lbl(191934)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191974)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191923)
lbl(191991)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(features x(0) cache)
lbl(192005)	definition(x(1) 192073 pid('' 3 pos('./compiler/Annotate.oz' 494 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 192056)
lbl(192016)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(192056)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192005)
lbl(192073)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(methods x(0) cache)
lbl(192087)	definition(x(1) 192110 pid('' 3 pos('./compiler/Annotate.oz' 503 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192087)
lbl(192110)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(191818)
lbl(192121)	definition(x(8) 192162 pid('AnnotateClassNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 473 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1233> 7)
		endDefinition(192121)
lbl(192162)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192172)	definition(x(7) 192373 pid('AnnotateClassNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 507 6) nil 3) <Q: 1234> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(parents x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(attributes x(0) cache)
lbl(192226)	definition(x(1) 192286 pid('' 1 pos('./compiler/Annotate.oz' 512 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192269)
lbl(192237)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192269)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192226)
lbl(192286)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(192294)	definition(x(1) 192354 pid('' 1 pos('./compiler/Annotate.oz' 521 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192337)
lbl(192305)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192337)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192294)
lbl(192354)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192172)
lbl(192373)	definition(x(8) 192408 pid('AnnotateClassNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 507 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1234> 5)
		endDefinition(192373)
lbl(192408)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClassNode' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(192453)	definition(x(7) 192674 pid('AnnotateMethod,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 535 6) nil 4) <Q: 1235> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192490)	definition(x(1) 192531 pid('' 3 pos('./compiler/Annotate.oz' 538 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192490)
lbl(192531)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(formalArgs x(0) cache)
lbl(192545)	definition(x(1) 192565 pid('' 2 pos('./compiler/Annotate.oz' 541 27) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(192545)
lbl(192565)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192607)	definition(x(1) 192663 pid('' 3 pos('./compiler/Annotate.oz' 546 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192642 192650)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192642)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192650)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(547)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192607)
lbl(192663)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192453)
lbl(192674)	definition(x(8) 192715 pid('AnnotateMethod,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 535 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1235> 7)
		endDefinition(192674)
lbl(192715)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192725)	definition(x(7) 192838 pid('AnnotateMethod,markFirst/fast' 2 pos('./compiler/Annotate.oz' 552 6) nil 4) <Q: 1236> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(192737)	definition(x(3) 192771 pid('' 1 pos('./compiler/Annotate.oz' 554 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(192737)
lbl(192771)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192725)
lbl(192838)	definition(x(8) 192873 pid('AnnotateMethod,markFirst/slow' 1 pos('./compiler/Annotate.oz' 552 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1236> 5)
		endDefinition(192838)
lbl(192873)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethod' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(192909)	definition(x(7) 193141 pid('AnnotateMethodWithDesignator,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 562 6) nil 4) <Q: 1237> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192946)	definition(x(1) 192987 pid('' 3 pos('./compiler/Annotate.oz' 565 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192946)
lbl(192987)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		putList(y(4))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(193015)	definition(x(1) 193035 pid('' 2 pos('./compiler/Annotate.oz' 569 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(193015)
lbl(193035)	genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(193074)	definition(x(1) 193130 pid('' 3 pos('./compiler/Annotate.oz' 574 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 193109 193117)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(193109)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(193117)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(575)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(193074)
lbl(193130)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192909)
lbl(193141)	definition(x(8) 193182 pid('AnnotateMethodWithDesignator,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 562 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1237> 7)
		endDefinition(193141)
lbl(193182)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193192)	definition(x(7) 193353 pid('AnnotateMethodWithDesignator,markFirst/fast' 2 pos('./compiler/Annotate.oz' 580 6) nil 4) <Q: 1238> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(193204)	definition(x(3) 193238 pid('' 1 pos('./compiler/Annotate.oz' 582 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(193204)
lbl(193238)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(messageDesignator x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 193338 193340)
		inlineAt(messageDesignator x(2) cache)
		move(y(1) x(1))
		putConstant('message designator' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
lbl(193338)	deAllocateL2
		return
lbl(193340)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(193192)
lbl(193353)	definition(x(8) 193388 pid('AnnotateMethodWithDesignator,markFirst/slow' 1 pos('./compiler/Annotate.oz' 580 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1238> 5)
		endDefinition(193353)
lbl(193388)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethodWithDesignator' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193427)	definition(x(7) 193446 pid('AnnotateMethFormal,markFirst/fast' 2 pos('./compiler/Annotate.oz' 595 6) nil 3) <Q: 1239> nil)
		inlineAt(feature x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193427)
lbl(193446)	definition(x(8) 193481 pid('AnnotateMethFormal,markFirst/slow' 1 pos('./compiler/Annotate.oz' 595 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1239> 5)
		endDefinition(193446)
lbl(193481)	putRecord('#' [1 2 fast] x(9))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormal' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalOptional' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalWithDefault' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193566)	definition(x(7) 193594 pid('AnnotateObjectLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 605 6) nil 5) <Q: 1240> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(193566)
lbl(193594)	definition(x(8) 193635 pid('AnnotateObjectLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 605 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1240> 7)
		endDefinition(193594)
lbl(193635)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193645)	definition(x(7) 193670 pid('AnnotateObjectLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 608 6) nil 4) <Q: 1241> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(193645)
lbl(193670)	definition(x(8) 193705 pid('AnnotateObjectLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 608 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1241> 5)
		endDefinition(193670)
lbl(193705)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateObjectLockNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193744)	definition(x(7) 193763 pid('AnnotateGetSelf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 614 6) nil 4) <Q: 1242> nil)
		inlineAt(destination x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193744)
lbl(193763)	definition(x(8) 193804 pid('AnnotateGetSelf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 614 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1242> 7)
		endDefinition(193763)
lbl(193804)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193814)	definition(x(7) 193833 pid('AnnotateGetSelf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 617 6) nil 3) <Q: 1243> nil)
		inlineAt(destination x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193814)
lbl(193833)	definition(x(8) 193868 pid('AnnotateGetSelf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 617 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1243> 5)
		endDefinition(193833)
lbl(193868)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateGetSelf' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFailNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(193940)	definition(x(7) 194099 pid('AnnotateIfNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 627 6) nil 6) <Q: 1244> nil)
		allocateL4
		inlineAt(clauses x(4) cache)
lbl(193952)	definition(x(5) 193975 pid('' 3 pos('./compiler/Annotate.oz' 629 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193952)
lbl(193975)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(194019)	definition(x(1) 194054 pid('' 3 pos('./compiler/Annotate.oz' 634 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(194019)
lbl(194054)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(193940)
lbl(194099)	definition(x(8) 194140 pid('AnnotateIfNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 627 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1244> 7)
		endDefinition(194099)
lbl(194140)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194150)	definition(x(7) 194251 pid('AnnotateIfNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 638 6) nil 6) <Q: 1245> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(194150)
lbl(194251)	definition(x(8) 194286 pid('AnnotateIfNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 638 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1245> 5)
		endDefinition(194251)
lbl(194286)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIfNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(194328)	definition(x(7) 194439 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 652 6) nil 6) <Q: 1246> nil)
		allocateL1
		inlineAt(clauses x(4) cache)
lbl(194340)	definition(x(5) 194363 pid('' 3 pos('./compiler/Annotate.oz' 654 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(194340)
lbl(194363)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 8)
		inlineAt(clauses x(0) cache)
lbl(194383)	definition(x(1) 194418 pid('' 3 pos('./compiler/Annotate.oz' 658 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(194383)
lbl(194418)	putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL1
		return
		endDefinition(194328)
lbl(194439)	definition(x(8) 194480 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 652 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1246> 7)
		endDefinition(194439)
lbl(194480)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194490)	definition(x(7) 194556 pid('AnnotateChoicesAndDisjunctions,markFirst/fast' 2 pos('./compiler/Annotate.oz' 662 6) nil 6) <Q: 1247> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(194490)
lbl(194556)	definition(x(8) 194591 pid('AnnotateChoicesAndDisjunctions,markFirst/slow' 1 pos('./compiler/Annotate.oz' 662 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1247> 5)
		endDefinition(194556)
lbl(194591)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoicesAndDisjunctions' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateOrNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDisNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoiceNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars guardGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(194707)	definition(x(7) 194878 pid('AnnotateClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 680 6) nil 6) <Q: 1248> nil)
		allocateL5
		inlineAt(guard x(4) cache)
		inlineAt(localVars x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(guardGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(guardGlobalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(194808)	definition(x(1) 194864 pid('' 3 pos('./compiler/Annotate.oz' 686 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 194843 194851)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(194843)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(194851)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(687)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(194808)
lbl(194864)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(194707)
lbl(194878)	definition(x(8) 194919 pid('AnnotateClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 680 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1248> 7)
		endDefinition(194878)
lbl(194919)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194929)	definition(x(7) 194946 pid('AnnotateClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 692 6) nil 2) <Q: 1249> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194929)
lbl(194946)	definition(x(8) 194972 pid('AnnotateClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 692 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1249> 3)
		endDefinition(194946)
lbl(194972)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194982)	definition(x(7) 194999 pid('AnnotateClause,getGuardGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 695 6) nil 2) <Q: 1250> nil)
		inlineAt(guardGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194982)
lbl(194999)	definition(x(8) 195025 pid('AnnotateClause,getGuardGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 695 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1250> 3)
		endDefinition(194999)
lbl(195025)	putRecord('#' [1 2 fast] x(11))
		setConstant(getGuardGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195035)	definition(x(7) 195148 pid('AnnotateClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 698 6) nil 7) <Q: 1251> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(195047)	definition(x(6) 195067 pid('' 1 pos('./compiler/Annotate.oz' 699 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(195047)
lbl(195067)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local clause variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(195035)
lbl(195148)	definition(x(8) 195201 pid('AnnotateClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 698 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1251> 11)
		endDefinition(195148)
lbl(195201)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClause' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateValueNode' x(5))
		createVariableMove(y(46) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAtomNode' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIntNode' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFloatNode' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [use] x(2))
		setConstant(unit)
lbl(195355)	definition(x(7) 195369 pid('AnnotateVariable,setUse/fast' 1 pos('./compiler/Annotate.oz' 722 6) nil 1) <Q: 1252> nil)
		inlineAssign(use x(0) cache)
		return
		endDefinition(195355)
lbl(195369)	definition(x(8) 195395 pid('AnnotateVariable,setUse/slow' 1 pos('./compiler/Annotate.oz' 722 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1252> 3)
		endDefinition(195369)
lbl(195395)	putRecord('#' [1 2 fast] x(9))
		setConstant(setUse)
		setValue(x(8))
		setValue(x(7))
lbl(195405)	definition(x(7) 195422 pid('AnnotateVariable,getUse/fast' 1 pos('./compiler/Annotate.oz' 725 6) nil 2) <Q: 1253> nil)
		inlineAt(use x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(195405)
lbl(195422)	definition(x(8) 195448 pid('AnnotateVariable,getUse/slow' 1 pos('./compiler/Annotate.oz' 725 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1253> 3)
		endDefinition(195422)
lbl(195448)	putRecord('#' [1 2 fast] x(10))
		setConstant(getUse)
		setValue(x(8))
		setValue(x(7))
lbl(195458)	definition(x(7) 195571 pid('AnnotateVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 728 6) nil 7) <Q: 1254> nil)
		inlineAt(origin x(2) cache)
		testLiteral(x(2) user 195568)
		inlineAt(use x(2) cache)
		match(x(2) ht(195567 [onScalar(unused 195481) onScalar(wildcard 195524)]))
lbl(195481)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195524)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195567)	return
lbl(195568)	return
		endDefinition(195458)
lbl(195571)	definition(x(8) 195606 pid('AnnotateVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1254> 5)
		endDefinition(195571)
lbl(195606)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariable' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(50))
lbl(195646)	definition(x(7) 195756 pid('AnnotateRestrictedVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 743 6) nil 7) <Q: 1255> [y(50)])
		inlineAt(use x(2) cache)
		match(x(2) ht(195746 [onScalar(unused 195660) onScalar(wildcard 195703)]))
lbl(195660)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195703)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195746)	inlineAt(features x(0) cache)
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
		endDefinition(195646)
lbl(195756)	definition(x(8) 195791 pid('AnnotateRestrictedVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 743 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1255> 5)
		endDefinition(195756)
lbl(195791)	putRecord('#' [1 2 fast] x(9))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
lbl(195801)	definition(x(7) 195913 pid('AnnotateRestrictedVariable,CheckUse/fast' 2 pos('./compiler/Annotate.oz' 754 6) nil 8) <Q: 1256> [y(50)])
		match(x(0) ht(195898 [onScalar(nil 195810) onRecord('|' 2 195811)]))
lbl(195810)	return
lbl(195811)	allocateL2
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(195876 [onRecord('#' 3 195823) onRecord('#' 4 195874)]))
lbl(195823)	getVarVar(x(4) x(0))
		getVariable(x(2))
		testBI('IsFree' [x(2)]#[x(5)] 195889)
		inlineAt(printName x(5) cache)
		putRecord(pn 1 x(6))
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(x(4))
		putRecord('#' 5 x(2))
		setConstant('feature ')
		setValue(x(6))
		setConstant('.')
		setValue(x(7))
		setConstant(' imported but never used')
		putConstant('binding analysis warning' x(1))
		sendMsg(warn y(0) [coord kind msg] cache)
		branch(195889)
lbl(195874)	branch(195889)
lbl(195876)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(763)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(195889)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
lbl(195898)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(766)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(195801)
lbl(195913)	definition(x(8) 195948 pid('AnnotateRestrictedVariable,CheckUse/slow' 1 pos('./compiler/Annotate.oz' 754 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1256> 5)
		endDefinition(195913)
lbl(195948)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: CheckUse>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		move(y(50) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(195987)	definition(x(7) 196049 pid('AnnotateVariableOccurrence,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 771 6) nil 4) <Q: 1257> nil)
		allocateL4
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 196028 196036)
		unify(y(0) y(1))
		deAllocateL4
		return
lbl(196028)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(196036)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(772)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(195987)
lbl(196049)	definition(x(8) 196090 pid('AnnotateVariableOccurrence,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 771 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1257> 7)
		endDefinition(196049)
lbl(196090)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(196100)	definition(x(7) 196171 pid('AnnotateVariableOccurrence,markFirst/fast' 2 pos('./compiler/Annotate.oz' 776 6) nil 2) <Q: 1258> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getUse x(1) 1 cache)
		match(y(0) ht(196154 [onScalar(unused 196124) onScalar(wildcard 196139)]))
lbl(196124)	inlineAt(variable x(1) cache)
		putConstant(wildcard x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(196139)	inlineAt(variable x(1) cache)
		putConstant(linear x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(196154)	inlineAt(variable x(1) cache)
		putConstant(multiple x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(196100)
lbl(196171)	definition(x(8) 196206 pid('AnnotateVariableOccurrence,markFirst/slow' 1 pos('./compiler/Annotate.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1258> 5)
		endDefinition(196171)
lbl(196206)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariableOccurrence' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternVariableOccurrence' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(format 1 y(53))
		setConstant(indent)
		putRecord(format 1 y(54))
		setConstant(exdent)
		putRecord(format 1 y(55))
		setConstant(push)
		putRecord(format 1 y(56))
		setConstant(pop)
		putList(x(1))
		setConstant(32)
		setConstant(nil)
		putRecord(glue 1 x(0))
		setValue(x(1))
		putRecord(format 1 y(57))
		setValue(x(0))
		putRecord(format 1 y(58))
		setConstant(break)
lbl(196317)	definition(x(7) 196359 pid('LI' 4 pos('./compiler/CoreLanguage.oz' 50 3) nil 4) <Q: 1259> nil)
		getRecord(list 2 x(3))
		unifyVariable(x(3))
		unifyValue(x(1))
lbl(196331)	definition(x(1) 196351 pid('' 2 pos('./compiler/CoreLanguage.oz' 51 19) nil 3) unit [x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(196331)
lbl(196351)	move(x(3) x(2))
		genFastCall(<P: 29> 7)
		endDefinition(196317)
lbl(196359)	definition(x(7) 196543 pid('LI2' 5 pos('./compiler/CoreLanguage.oz' 53 3) nil 6) <Q: 1260> nil)
		match(x(0) ht(196528 [onScalar(nil 196368) onRecord('|' 2 196375)]))
lbl(196368)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(196375)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(output2 x(5) 3 cache)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(3))
lbl(196412)	definition(x(1) 196493 pid('' 3 pos('./compiler/CoreLanguage.oz' 57 5) nil 6) unit [y(2)])
		shallowGuard(196480)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(196428)	shallowThen
		allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(196480)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196412)
lbl(196493)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(6))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(y(1))
		move(y(7) x(0))
		deAllocateL8
		genFastCall(<P: 28> 5)
lbl(196528)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(65)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196359)
lbl(196543)	definition(x(7) 196561 pid('CheckOutput' 3 pos('./compiler/CoreLanguage.oz' 68 3) nil 5) <Q: 1261> nil)
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(196543)
lbl(196561)	definition(x(7) 196643 pid('OutputAttrFeat' 4 pos('./compiler/CoreLanguage.oz' 72 3) nil 5) <Q: 1262> nil)
		testRecord(x(0) '#' 2 196626)
lbl(196572)	allocateL4
		getVarVar(x(4) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		getRecord('#' 3 x(3))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(outputEscaped2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
lbl(196626)	move(x(0) x(4))
		move(x(1) x(0))
		move(x(3) x(1))
		tailSendMsg(outputEscaped2 x(4) 3 cache)
		endDefinition(196561)
lbl(196643)	definition(x(7) 196697 pid('FilterUnitsToVS' 2 pos('./compiler/CoreLanguage.oz' 81 3) nil 3) <Q: 1263> nil)
		match(x(0) ht(196682 [onScalar(nil 196652) onRecord('|' 2 196656)]))
lbl(196652)	getLiteral(nil x(1))
		return
lbl(196656)	getVarVar(x(0) x(2))
		testLiteral(x(0) unit 196669)
lbl(196663)	move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196669)	getRecord('#' 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196682)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(87)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196643)
lbl(196697)	definition(x(7) 196783 pid('FlattenSequenceSub' 3 pos('./compiler/CoreLanguage.oz' 91 6) nil 3) <Q: 1264> nil)
		match(x(0) ht(196735 [onScalar(nil 196706) onRecord('|' 2 196710)]))
lbl(196706)	unify(x(1) x(2))
		return
lbl(196710)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1264> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1264> 7)
lbl(196735)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isRedundant y(0) 1 cache)
		testBool(y(3) 196762 196770)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(196762)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(196770)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196697)
lbl(196783)	definition(x(7) 196833 pid('GetFirst' 2 pos('./compiler/CoreLanguage.oz' 109 6) nil 2) <Q: 1265> nil)
		match(x(0) ht(196827 [onScalar(nil 196792) onRecord('|' 2 196796)]))
lbl(196792)	getLiteral(nil x(1))
		return
lbl(196796)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196822)
lbl(196813)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1265> 5)
lbl(196822)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(196827)	unify(x(1) x(0))
		return
		endDefinition(196783)
lbl(196833)	definition(x(7) 196864 pid('SetPointers' 3 pos('./compiler/CoreLanguage.oz' 120 6) nil 4) <Q: 1266> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		move(y(0) x(0))
		sendMsg(setNext x(3) 1 cache)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(196833)
lbl(196864)	definition(x(8) 196921 pid('LinkList' 1 pos('./compiler/CoreLanguage.oz' 125 6) nil 4) <Q: 1267> [x(7)])
		shallowGuard(196908)
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(196878)	shallowThen
		allocateL1
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setNext x(1) 1 cache)
lbl(196908)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196864)
lbl(196921)	createVariable(y(59))
lbl(196923)	definition(x(0) 197010 pid('FlattenSequence' 2 pos('./compiler/CoreLanguage.oz' 130 6) nil 3) <Q: 1268> [y(59)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1264> 6)
		testLiteral(y(2) nil 196998)
lbl(196948)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196990)
lbl(196961)	getList(y(1))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		putConstant(unit x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		branch(197001)
lbl(196990)	getList(y(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		branch(197001)
lbl(196998)	unify(y(1) y(2))
lbl(197001)	move(y(1) x(0))
		deAllocateL3
		genFastCall(<Q: 1267> 3)
		endDefinition(196923)
lbl(197010)	move(y(1) x(1))
		inlineDot(x(1) statement x(7) cache)
		move(y(2) x(2))
		inlineDot(x(2) statement x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(8))
		setValue(x(8))
		putRecord('attr' [coord next] x(8))
		setConstant(unit)
		setConstant(unit)
lbl(197054)	definition(x(9) 197063 pid('Statement,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 146 6) nil 1) <Q: 1269> nil)
		return
		endDefinition(197054)
lbl(197063)	definition(x(10) 197089 pid('Statement,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 146 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1269> 3)
		endDefinition(197063)
lbl(197089)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(10))
		setValue(x(9))
lbl(197099)	definition(x(9) 197111 pid('Statement,isRedundant/fast' 1 pos('./compiler/CoreLanguage.oz' 149 6) nil 1) <Q: 1270> nil)
		getLiteral(false x(0))
		return
		endDefinition(197099)
lbl(197111)	definition(x(10) 197137 pid('Statement,isRedundant/slow' 1 pos('./compiler/CoreLanguage.oz' 149 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1270> 3)
		endDefinition(197111)
lbl(197137)	putRecord('#' [1 2 fast] x(12))
		setConstant(isRedundant)
		setValue(x(10))
		setValue(x(9))
lbl(197147)	definition(x(9) 197161 pid('Statement,setNext/fast' 1 pos('./compiler/CoreLanguage.oz' 152 6) nil 1) <Q: 1271> nil)
		inlineAssign(next x(0) cache)
		return
		endDefinition(197147)
lbl(197161)	definition(x(10) 197187 pid('Statement,setNext/slow' 1 pos('./compiler/CoreLanguage.oz' 152 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1271> 3)
		endDefinition(197161)
lbl(197187)	putRecord('#' [1 2 fast] x(13))
		setConstant(setNext)
		setValue(x(10))
		setValue(x(9))
lbl(197197)	definition(x(9) 197214 pid('Statement,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 155 6) nil 2) <Q: 1272> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(197197)
lbl(197214)	definition(x(10) 197240 pid('Statement,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 155 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1272> 3)
		endDefinition(197214)
lbl(197240)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 4 x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(0) y(8))
		move(x(7) x(0))
		move(x(9) x(1))
		move(x(8) x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Statement' x(5))
		createVariableMove(y(60) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) typeOf x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) typeOf x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(9))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [arg res value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(197341)	definition(x(7) 197377 pid('TypeOf,init/fast' 2 pos('./compiler/CoreLanguage.oz' 163 6) nil 2) <Q: 1273> nil)
		inlineAssign(arg x(0) cache)
		inlineAssign(res x(1) cache)
		putList(x(1))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(0))
		setValue(x(1))
		inlineAssign(value x(0) cache)
		return
		endDefinition(197341)
lbl(197377)	definition(x(9) 197412 pid('TypeOf,init/slow' 1 pos('./compiler/CoreLanguage.oz' 163 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1273> 5)
		endDefinition(197377)
lbl(197412)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197422)	definition(x(7) 197507 pid('TypeOf,output/fast' 2 pos('./compiler/CoreLanguage.oz' 168 6) nil 6) <Q: 1274> [y(0)])
		allocateL3
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyLiteral('   % typeof ')
		unifyVariable(y(1))
		unifyVariable(x(2))
		inlineAt(res x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		call(x(4) 4)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(197422)
lbl(197507)	definition(x(9) 197542 pid('TypeOf,output/slow' 1 pos('./compiler/CoreLanguage.oz' 168 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1274> 5)
		endDefinition(197507)
lbl(197542)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('TypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) stepPoint x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) stepPoint x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(10))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [kind statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197637)	definition(x(7) 197683 pid('StepPoint,init/fast' 3 pos('./compiler/CoreLanguage.oz' 179 6) nil 3) <Q: 1275> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL3
		return
		endDefinition(197637)
lbl(197683)	definition(x(9) 197724 pid('StepPoint,init/slow' 1 pos('./compiler/CoreLanguage.oz' 179 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1275> 7)
		endDefinition(197683)
lbl(197724)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197734)	definition(x(7) 197762 pid('StepPoint,output/fast' 2 pos('./compiler/CoreLanguage.oz' 184 6) nil 5) <Q: 1276> [y(58)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(197734)
lbl(197762)	definition(x(9) 197797 pid('StepPoint,output/slow' 1 pos('./compiler/CoreLanguage.oz' 184 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1276> 5)
		endDefinition(197762)
lbl(197797)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('StepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) declaration x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) declaration x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(11))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197889)	definition(x(7) 197933 pid('Declaration,init/fast' 3 pos('./compiler/CoreLanguage.oz' 193 6) nil 3) <Q: 1277> nil)
		allocateL2
		inlineAssign(localVars x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(197889)
lbl(197933)	definition(x(9) 197974 pid('Declaration,init/slow' 1 pos('./compiler/CoreLanguage.oz' 193 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1277> 7)
		endDefinition(197933)
lbl(197974)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197984)	definition(x(7) 198058 pid('Declaration,output/fast' 2 pos('./compiler/CoreLanguage.oz' 198 6) nil 5) <Q: 1278> [y(57) y(53) y(54) y(58)])
		allocateL2
		getRecord('#' 13 x(1))
		unifyLiteral('local')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(0))
		unifyLiteral('in')
		unifyValue(g(1))
		unifyValVar(g(3) y(0))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(localVars x(4) cache)
		move(x(0) y(1))
		move(x(4) x(0))
		move(g(0) x(1))
		putConstant(true x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(197984)
lbl(198058)	definition(x(9) 198093 pid('Declaration,output/slow' 1 pos('./compiler/CoreLanguage.oz' 198 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1278> 5)
		endDefinition(198058)
lbl(198093)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Declaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) skipNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(12))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(198162)	definition(x(7) 198176 pid('SkipNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 207 6) nil 1) <Q: 1279> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(198162)
lbl(198176)	definition(x(9) 198202 pid('SkipNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 207 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1279> 3)
		endDefinition(198176)
lbl(198202)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198212)	definition(x(7) 198224 pid('SkipNode,isRedundant/fast' 1 pos('./compiler/CoreLanguage.oz' 210 6) nil 1) <Q: 1280> nil)
		getLiteral(true x(0))
		return
		endDefinition(198212)
lbl(198224)	definition(x(9) 198250 pid('SkipNode,isRedundant/slow' 1 pos('./compiler/CoreLanguage.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1280> 3)
		endDefinition(198224)
lbl(198250)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRedundant)
		setValue(x(9))
		setValue(x(7))
lbl(198260)	definition(x(7) 198272 pid('SkipNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 213 6) nil 2) <Q: 1281> nil)
		getLiteral('skip skip' x(1))
		return
		endDefinition(198260)
lbl(198272)	definition(x(9) 198307 pid('SkipNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 213 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1281> 5)
		endDefinition(198272)
lbl(198307)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(y(59) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('SkipNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equation x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equation x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(13))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [left right] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(198401)	definition(x(7) 198425 pid('Equation,init/fast' 3 pos('./compiler/CoreLanguage.oz' 222 6) nil 3) <Q: 1282> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(198401)
lbl(198425)	definition(x(9) 198466 pid('Equation,init/slow' 1 pos('./compiler/CoreLanguage.oz' 222 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1282> 7)
		endDefinition(198425)
lbl(198466)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198476)	definition(x(7) 198533 pid('Equation,output/fast' 2 pos('./compiler/CoreLanguage.oz' 227 6) nil 4) <Q: 1283> nil)
		allocateL3
		getRecord('#' 5 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(198476)
lbl(198533)	definition(x(9) 198568 pid('Equation,output/slow' 1 pos('./compiler/CoreLanguage.oz' 227 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1283> 5)
		endDefinition(198533)
lbl(198568)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Equation' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) construction x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) construction x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(14))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(3))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(198676)	definition(x(8) 198711 pid('Construction,init/fast' 3 pos('./compiler/CoreLanguage.oz' 237 6) nil 3) <Q: 1284> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) construction x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(198676)
lbl(198711)	definition(x(10) 198752 pid('Construction,init/slow' 1 pos('./compiler/CoreLanguage.oz' 237 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1284> 7)
		endDefinition(198711)
lbl(198752)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(198762)	definition(x(8) 198781 pid('Construction,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 243 6) nil 2) <Q: 1285> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(198762)
lbl(198781)	definition(x(10) 198807 pid('Construction,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 243 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1285> 3)
		endDefinition(198781)
lbl(198807)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(198817)	definition(x(8) 198829 pid('Construction,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 246 6) nil 1) <Q: 1286> nil)
		getLiteral(false x(0))
		return
		endDefinition(198817)
lbl(198829)	definition(x(10) 198855 pid('Construction,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1286> 3)
		endDefinition(198829)
lbl(198855)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(198865)	definition(x(8) 198877 pid('Construction,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 249 6) nil 1) <Q: 1287> nil)
		getLiteral(true x(0))
		return
		endDefinition(198865)
lbl(198877)	definition(x(10) 198903 pid('Construction,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 249 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1287> 3)
		endDefinition(198877)
lbl(198903)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(198913)	definition(x(8) 199330 pid('Construction,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 252 6) nil 4) <Q: 1288> [y(55) y(56) y(57)])
		allocateL(11)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 7 x(1))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(1))
		unifyVariable(y(2))
		unifyLiteral(')')
		unifyValue(g(1))
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(args x(0) cache)
		testList(x(0) 199273)
lbl(198968)	getVarVar(x(0) y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 199045)
lbl(198978)	getVarVar(x(3) y(6))
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 y(6) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(7))
		unifyLiteral(': ')
		unifyValue(y(9))
		getRecord('#' 2 x(1))
		unifyValue(y(8))
		unifyValue(y(10))
		branch(199077)
lbl(199045)	move(x(0) x(3))
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyValue(y(6))
		unifyLiteral(nil)
lbl(199077)	putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(0))
lbl(199085)	definition(x(1) 199249 pid('' 3 pos('./compiler/CoreLanguage.oz' 265 9) nil 6) unit [y(3)])
		shallowGuard(199236)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(199101)	shallowThen
		testRecord(x(1) '#' 2 199185)
lbl(199107)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(199185)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(199236)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(265)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(199085)
lbl(199249)	moveMoveYXYX(y(4) x(0) y(5) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(1))
		unifyVariable(x(1))
		unifyValue(g(2))
		move(y(6) x(0))
		genFastCall(<P: 28> 4)
		branch(199279)
lbl(199273)	getLiteral(nil y(0))
		getLiteral(nil y(1))
lbl(199279)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 199312 199317)
		inlineAt(args x(0) cache)
		testLiteral(x(0) nil 199302)
lbl(199297)	getLiteral('...' y(2))
		deAllocateL
		return
lbl(199302)	getRecord('#' 2 y(2))
		unifyValue(g(2))
		unifyLiteral('...')
		deAllocateL
		return
lbl(199312)	getLiteral(nil y(2))
		deAllocateL
		return
lbl(199317)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(280)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(198913)
lbl(199330)	definition(x(10) 199371 pid('Construction,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 252 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1288> 7)
		endDefinition(199330)
lbl(199371)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('Construction' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'definition' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'definition' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(15))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [allVariables designator formalArgs isStateUsing predicateRef printName procFlags statements toCopy] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(199477)	definition(x(7) 199547 pid('Definition,init/fast' 6 pos('./compiler/CoreLanguage.oz' 293 6) nil 6) <Q: 1289> nil)
		allocateL4
		inlineAssign(designator x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(isStateUsing x(0) cache)
		move(y(1) x(0))
		inlineAssign(procFlags x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(199477)
lbl(199547)	definition(x(9) 199606 pid('Definition,init/slow' 1 pos('./compiler/CoreLanguage.oz' 293 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1289> 13)
		endDefinition(199547)
lbl(199606)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(199616)	definition(x(7) 199630 pid('Definition,setAllVariables/fast' 1 pos('./compiler/CoreLanguage.oz' 302 6) nil 1) <Q: 1290> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(199616)
lbl(199630)	definition(x(9) 199656 pid('Definition,setAllVariables/slow' 1 pos('./compiler/CoreLanguage.oz' 302 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1290> 3)
		endDefinition(199630)
lbl(199656)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(7))
lbl(199666)	definition(x(7) 199680 pid('Definition,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 305 6) nil 1) <Q: 1291> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(199666)
lbl(199680)	definition(x(9) 199706 pid('Definition,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 305 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1291> 3)
		endDefinition(199680)
lbl(199706)	putRecord('#' [1 2 fast] x(12))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(199716)	definition(x(7) 199932 pid('Definition,output/fast' 2 pos('./compiler/CoreLanguage.oz' 308 6) nil 5) <Q: 1292> [y(55) y(56) y(53) y(58) y(54) y(0) y(57)])
		allocateL6
		getRecord('#' 15 x(1))
		unifyVariable(x(3))
		unifyLiteral('{')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral('}')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(procFlags x(4) cache)
lbl(199759)	definition(x(1) 199797 pid('' 3 pos('./compiler/CoreLanguage.oz' 310 3) nil 5) unit [g(5)])
		getRecord('#' 3 x(2))
		unifyValVar(x(0) x(3))
		unifyLiteral(' ')
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(199759)
lbl(199797)	move(x(0) y(5))
		move(x(4) x(0))
		putConstant('proc ' x(2))
		genFastCall(<P: 30> 8)
		inlineAt(designator x(3) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(3) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		match(x(0) ht(199864 [onScalar(nil 199836) onRecord('|' 2 199841)]))
lbl(199836)	getLiteral(nil y(1))
		branch(199877)
lbl(199841)	getRecord('#' 2 y(1))
		unifyValVar(g(6) x(3))
		inlineAt(formalArgs x(0) cache)
		move(g(6) x(1))
		move(y(5) x(2))
		genFastCall(<Q: 1259> 8)
		branch(199877)
lbl(199864)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(315)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(199877)	getSelf(x(2))
		createVariableMove(y(0) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		testBool(y(0) 199897 199902)
		getLiteral('   % clause body' y(2))
		branch(199913)
lbl(199897)	getLiteral(nil y(2))
		branch(199913)
lbl(199902)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(316)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(199913)	inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(199716)
lbl(199932)	definition(x(9) 199967 pid('Definition,output/slow' 1 pos('./compiler/CoreLanguage.oz' 308 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1292> 5)
		endDefinition(199932)
lbl(199967)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(199977)	definition(x(7) 199989 pid('Definition,isClauseBody/fast' 1 pos('./compiler/CoreLanguage.oz' 320 6) nil 1) <Q: 1293> nil)
		getLiteral(false x(0))
		return
		endDefinition(199977)
lbl(199989)	definition(x(9) 200015 pid('Definition,isClauseBody/slow' 1 pos('./compiler/CoreLanguage.oz' 320 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1293> 3)
		endDefinition(199989)
lbl(200015)	putRecord('#' [1 2 fast] x(14))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Definition' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) functionDefinition x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(16))
		setValue(x(8))
		putList(x(8))
		setValue(y(14))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FunctionDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBody x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(17))
		setValue(x(8))
		putList(x(8))
		setValue(y(14))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(200147)	definition(x(7) 200159 pid('ClauseBody,isClauseBody/fast' 1 pos('./compiler/CoreLanguage.oz' 331 6) nil 1) <Q: 1294> nil)
		getLiteral(true x(0))
		return
		endDefinition(200147)
lbl(200159)	definition(x(9) 200185 pid('ClauseBody,isClauseBody/slow' 1 pos('./compiler/CoreLanguage.oz' 331 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1294> 3)
		endDefinition(200159)
lbl(200185)	putRecord('#' [1 2 fast] x(10))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ClauseBody' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) application x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) application x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(18))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [actualArgs designator] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [codeGenMakeEquateLiteral] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(200281)	definition(x(7) 200305 pid('Application,init/fast' 3 pos('./compiler/CoreLanguage.oz' 341 6) nil 3) <Q: 1295> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(actualArgs x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(200281)
lbl(200305)	definition(x(9) 200346 pid('Application,init/slow' 1 pos('./compiler/CoreLanguage.oz' 341 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1295> 7)
		endDefinition(200305)
lbl(200346)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		createVariable(y(17))
lbl(200358)	definition(x(7) 200827 pid('Application,output/fast' 2 pos('./compiler/CoreLanguage.oz' 346 6) nil 5) <Q: 1296> [y(17)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 200392 200814)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200392)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		match(y(3) ht(200805 [onScalar('`ooExch`' 200418) onScalar('`@`' 200505) onScalar('`~`' 200517) onScalar('`<-`' 200529) onScalar('`,`' 200541) onScalar('`==`' 200553) onScalar('`<`' 200565) onScalar('`>`' 200577) onScalar('`=<`' 200589) onScalar('`>=`' 200601) onScalar('`\\=`' 200613) onScalar('`div`' 200625) onScalar('`mod`' 200637) onScalar('`+`' 200649) onScalar('`-`' 200661) onScalar('`*`' 200673) onScalar('`/`' 200685) onScalar('`.`' 200697) onScalar('`^`' 200709) onScalar('`::`' 200721) onScalar('`:::`' 200733) onScalar('`::R`' 200745) onScalar('`:::R`' 200757) onScalar('`Raise`' 200769)]))
lbl(200418)	putList(x(1))
		setVariable(x(4))
		setConstant(nil)
		putList(x(0))
		setVariable(y(3))
		setValue(x(1))
		putList(x(3))
		setVariable(y(2))
		setValue(x(0))
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 8 y(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(1))
		unifyLiteral(' <- ')
		unifyVariable(y(4))
		unifyVariable(x(2))
		unifyVariable(y(5))
		unifyVariable(y(6))
		move(y(0) x(0))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(5) x(2))
		sendMsg(output2 y(2) 3 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
lbl(200505)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('@' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200517)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('~' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200529)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' <- ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200541)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(', ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200553)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' == ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200565)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' < ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200577)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' > ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200589)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' =< ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200601)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' >= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200613)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' \\= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200625)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' div ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200637)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' mod ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200649)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' + ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200661)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' - ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200673)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' * ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200685)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' / ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200697)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('.' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200709)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('^' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200721)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200733)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200745)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200757)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200769)	putList(x(3))
		setVariable(x(4))
		setConstant(nil)
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 4 y(1))
		unifyLiteral('raise ')
		unifyVariable(x(1))
		unifyLiteral(' end')
		unifyVariable(x(2))
		move(y(0) x(0))
		deAllocateL7
		tailSendMsg(output2 x(4) 3 cache)
lbl(200805)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200814)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(347)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(200358)
lbl(200827)	definition(x(9) 200862 pid('Application,output/slow' 1 pos('./compiler/CoreLanguage.oz' 346 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1296> 5)
		endDefinition(200827)
lbl(200862)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(200872)	definition(x(7) 200966 pid('Application,OutputApplication/fast' 2 pos('./compiler/CoreLanguage.oz' 385 6) nil 5) <Q: 1297> [y(55) y(56) y(57)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('{')
		unifyValVar(g(0) x(1))
		unifyVariable(y(0))
		unifyLiteral('}')
		unifyValVar(g(1) x(2))
		unifyVariable(y(1))
		inlineAt(designator x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		match(x(0) ht(200951 [onScalar(nil 200919) onRecord('|' 2 200927)]))
lbl(200919)	getLiteral(nil y(1))
		getLiteral(nil y(0))
		deAllocateL3
		return
lbl(200927)	getRecord('#' 2 y(0))
		unifyValVar(g(2) x(4))
		inlineAt(actualArgs x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1260> 11)
lbl(200951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(389)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(200872)
lbl(200966)	definition(x(9) 201001 pid('Application,OutputApplication/slow' 1 pos('./compiler/CoreLanguage.oz' 385 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1297> 5)
		endDefinition(200966)
lbl(201001)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: OutputApplication>)
		setValue(x(9))
		setValue(x(7))
lbl(201011)	definition(x(7) 201087 pid('Application,OutputPrefixExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 391 6) nil 6) <Q: 1298> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 6 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201011)
lbl(201087)	definition(x(9) 201128 pid('Application,OutputPrefixExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 391 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1298> 7)
		endDefinition(201087)
lbl(201128)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201138)	definition(x(7) 201212 pid('Application,OutputInfixStatement/fast' 3 pos('./compiler/CoreLanguage.oz' 395 6) nil 6) <Q: 1299> nil)
		allocateL4
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		putList(x(3))
		setVariable(x(4))
		setValue(x(5))
		inlineAt(actualArgs x(5) cache)
		unify(x(5) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201138)
lbl(201212)	definition(x(9) 201253 pid('Application,OutputInfixStatement/slow' 1 pos('./compiler/CoreLanguage.oz' 395 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1299> 7)
		endDefinition(201212)
lbl(201253)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201263)	definition(x(7) 201363 pid('Application,OutputInfixExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 399 6) nil 7) <Q: 1300> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(0) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(1) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201263)
lbl(201363)	definition(x(9) 201404 pid('Application,OutputInfixExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 399 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1300> 7)
		endDefinition(201363)
lbl(201404)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201414)	definition(x(7) 201488 pid('Application,OutputFdInStatement/fast' 3 pos('./compiler/CoreLanguage.oz' 404 6) nil 6) <Q: 1301> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201414)
lbl(201488)	definition(x(9) 201529 pid('Application,OutputFdInStatement/slow' 1 pos('./compiler/CoreLanguage.oz' 404 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1301> 7)
		endDefinition(201488)
lbl(201529)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201539)	definition(x(7) 201639 pid('Application,OutputFdInExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 408 6) nil 7) <Q: 1302> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(1) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201539)
lbl(201639)	definition(x(9) 201680 pid('Application,OutputFdInExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 408 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1302> 7)
		endDefinition(201639)
lbl(201680)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 8 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(x(8) x(0))
		move(x(7) x(1))
		move(y(17) x(6))
		putConstant('Application' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(19))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter consequent] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [noBoolShared] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(201789)	definition(x(7) 201818 pid('BoolCase,init/fast' 4 pos('./compiler/CoreLanguage.oz' 420 6) nil 4) <Q: 1303> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(consequent x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(201789)
lbl(201818)	definition(x(9) 201865 pid('BoolCase,init/slow' 1 pos('./compiler/CoreLanguage.oz' 420 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1303> 9)
		endDefinition(201818)
lbl(201865)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(201875)	definition(x(7) 201955 pid('BoolCase,output/fast' 2 pos('./compiler/CoreLanguage.oz' 426 6) nil 4) <Q: 1304> [y(53) y(58) y(54)])
		allocateL3
		getRecord('#' 11 x(1))
		unifyLiteral('if ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValVar(g(1) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(consequent x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(201875)
lbl(201955)	definition(x(9) 201990 pid('BoolCase,output/slow' 1 pos('./compiler/CoreLanguage.oz' 426 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1304> 5)
		endDefinition(201955)
lbl(201990)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('BoolCase' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(20))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(202071)	definition(x(8) 202096 pid('BoolClause,init/fast' 1 pos('./compiler/CoreLanguage.oz' 436 6) nil 2) <Q: 1305> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(202071)
lbl(202096)	definition(x(9) 202122 pid('BoolClause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 436 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1305> 3)
		endDefinition(202096)
lbl(202122)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202132)	definition(x(8) 202160 pid('BoolClause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 439 6) nil 5) <Q: 1306> [y(58)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(202132)
lbl(202160)	definition(x(9) 202195 pid('BoolClause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 439 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1306> 5)
		endDefinition(202160)
lbl(202195)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('BoolClause' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(21))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter clauses] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202289)	definition(x(7) 202318 pid('PatternCase,init/fast' 4 pos('./compiler/CoreLanguage.oz' 448 6) nil 4) <Q: 1307> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(clauses x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(202289)
lbl(202318)	definition(x(9) 202365 pid('PatternCase,init/slow' 1 pos('./compiler/CoreLanguage.oz' 448 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1307> 9)
		endDefinition(202318)
lbl(202365)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202375)	definition(x(7) 202455 pid('PatternCase,output/fast' 2 pos('./compiler/CoreLanguage.oz' 454 6) nil 4) <Q: 1308> [y(58)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('case ')
		unifyVariable(x(1))
		unifyLiteral(' of ')
		unifyVariable(y(0))
		unifyValVar(g(0) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(clauses x(0) cache)
		putRecord('#' 2 x(1))
		setValue(g(0))
		setConstant('[] ')
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(202375)
lbl(202455)	definition(x(9) 202490 pid('PatternCase,output/slow' 1 pos('./compiler/CoreLanguage.oz' 454 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1308> 5)
		endDefinition(202455)
lbl(202490)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('PatternCase' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(22))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars pattern statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202578)	definition(x(8) 202616 pid('PatternClause,init/fast' 3 pos('./compiler/CoreLanguage.oz' 465 6) nil 3) <Q: 1309> nil)
		allocateL1
		inlineAssign(localVars x(0) cache)
		inlineAssign(pattern x(1) cache)
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(202578)
lbl(202616)	definition(x(9) 202657 pid('PatternClause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 465 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1309> 7)
		endDefinition(202616)
lbl(202657)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202667)	definition(x(8) 202733 pid('PatternClause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 470 6) nil 5) <Q: 1310> [y(55) y(56) y(57) y(53) y(58) y(54)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyValVar(g(0) x(2))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('then')
		unifyValVar(g(3) x(3))
		unifyValVar(g(4) y(0))
		unifyValue(g(5))
		inlineAt(pattern x(4) cache)
		inlineAt(localVars x(1) cache)
		move(x(0) y(1))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(statements x(0) cache)
		move(g(4) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(202667)
lbl(202733)	definition(x(9) 202768 pid('PatternClause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 470 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1310> 5)
		endDefinition(202733)
lbl(202768)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('PatternClause' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) recordPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) recordPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(23))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(3))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(202876)	definition(x(8) 202911 pid('RecordPattern,init/fast' 3 pos('./compiler/CoreLanguage.oz' 481 6) nil 3) <Q: 1311> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) recordPattern x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(202876)
lbl(202911)	definition(x(10) 202952 pid('RecordPattern,init/slow' 1 pos('./compiler/CoreLanguage.oz' 481 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1311> 7)
		endDefinition(202911)
lbl(202952)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(202962)	definition(x(8) 202981 pid('RecordPattern,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 487 6) nil 2) <Q: 1312> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(202962)
lbl(202981)	definition(x(10) 203007 pid('RecordPattern,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 487 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1312> 3)
		endDefinition(202981)
lbl(203007)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(203017)	definition(x(8) 203029 pid('RecordPattern,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 490 6) nil 1) <Q: 1313> nil)
		getLiteral(false x(0))
		return
		endDefinition(203017)
lbl(203029)	definition(x(10) 203055 pid('RecordPattern,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 490 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1313> 3)
		endDefinition(203029)
lbl(203055)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(203065)	definition(x(8) 203077 pid('RecordPattern,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 493 6) nil 1) <Q: 1314> nil)
		getLiteral(true x(0))
		return
		endDefinition(203065)
lbl(203077)	definition(x(10) 203103 pid('RecordPattern,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 493 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1314> 3)
		endDefinition(203077)
lbl(203103)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(203113)	definition(x(8) 203528 pid('RecordPattern,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 496 6) nil 4) <Q: 1315> [y(57) y(55) y(56)])
		allocateL(12)
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(2) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariable(y(4))
		testList(x(2) 203443)
lbl(203144)	getVarVar(x(2) y(5))
		createVariable(y(6))
		testRecord(x(2) '#' 2 203218)
lbl(203154)	getVarVar(x(3) y(7))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(2) x(0))
		createVariableMove(y(10) x(1))
		createVariableMove(y(11) x(2))
		sendMsg(output2 y(7) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(8))
		unifyLiteral(': ')
		unifyValue(y(10))
		getRecord('#' 2 x(1))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(203247)
lbl(203218)	move(x(2) x(3))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyValue(y(7))
		unifyLiteral(nil)
lbl(203247)	putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(1))
lbl(203255)	definition(x(1) 203419 pid('' 3 pos('./compiler/CoreLanguage.oz' 508 9) nil 6) unit [y(2)])
		shallowGuard(203406)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203271)	shallowThen
		testRecord(x(1) '#' 2 203355)
lbl(203277)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203355)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203406)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(508)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203255)
lbl(203419)	moveMoveYXYX(y(5) x(0) y(6) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		branch(203449)
lbl(203443)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203449)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203510 203515)
		testLiteral(y(4) nil 203500)
lbl(203495)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203500)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203510)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203515)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(524)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203113)
lbl(203528)	definition(x(10) 203569 pid('RecordPattern,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 496 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1315> 7)
		endDefinition(203528)
lbl(203569)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(203579)	definition(x(8) 204005 pid('RecordPattern,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 529 6) nil 5) <Q: 1316> [y(57) y(55) y(56)])
		allocateL(13)
		getRecord('#' 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(3) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariable(y(4))
		testList(x(3) 203920)
lbl(203610)	getVarVar(x(3) y(5))
		move(x(1) y(6))
		createVariable(y(7))
		testRecord(x(3) '#' 2 203689)
lbl(203623)	getVarVar(x(3) y(8))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 x(3) 3 cache)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		createVariableMove(y(11) x(2))
		createVariableMove(y(12) x(3))
		sendMsg(outputPattern2 y(8) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(9))
		unifyLiteral(': ')
		unifyValue(y(11))
		getRecord('#' 2 x(1))
		unifyValue(y(10))
		unifyValue(y(12))
		branch(203718)
lbl(203689)	move(x(3) x(4))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(9))
		getList(x(0))
		unifyValue(y(8))
		unifyLiteral(nil)
lbl(203718)	putRecord('#' 2 x(3))
		setVariable(y(8))
		setValue(y(1))
lbl(203726)	definition(x(1) 203896 pid('' 3 pos('./compiler/CoreLanguage.oz' 541 9) nil 6) unit [y(2) y(6)])
		shallowGuard(203883)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203742)	shallowThen
		testRecord(x(1) '#' 2 203829)
lbl(203748)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(outputPattern2 y(0) 4 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203829)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(outputPattern2 x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203883)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(541)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203726)
lbl(203896)	moveMoveYXYX(y(5) x(0) y(7) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(8) x(0))
		genFastCall(<P: 28> 4)
		branch(203926)
lbl(203920)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203926)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203987 203992)
		testLiteral(y(4) nil 203977)
lbl(203972)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203977)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203987)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203992)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(557)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203579)
lbl(204005)	definition(x(10) 204052 pid('RecordPattern,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 529 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1316> 9)
		endDefinition(204005)
lbl(204052)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('RecordPattern' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equationPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equationPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(24))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord left right] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(204148)	definition(x(8) 204172 pid('EquationPattern,init/fast' 3 pos('./compiler/CoreLanguage.oz' 569 6) nil 3) <Q: 1317> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(204148)
lbl(204172)	definition(x(9) 204213 pid('EquationPattern,init/slow' 1 pos('./compiler/CoreLanguage.oz' 569 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1317> 7)
		endDefinition(204172)
lbl(204213)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(204223)	definition(x(8) 204240 pid('EquationPattern,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 574 6) nil 2) <Q: 1318> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(204223)
lbl(204240)	definition(x(9) 204266 pid('EquationPattern,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 574 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1318> 3)
		endDefinition(204240)
lbl(204266)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(204276)	definition(x(8) 204295 pid('EquationPattern,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 577 6) nil 2) <Q: 1319> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isConstruction x(1) 1 cache)
		endDefinition(204276)
lbl(204295)	definition(x(9) 204321 pid('EquationPattern,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 577 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1319> 3)
		endDefinition(204295)
lbl(204321)	putRecord('#' [1 2 fast] x(12))
		setConstant(isConstruction)
		setValue(x(9))
		setValue(x(8))
lbl(204331)	definition(x(8) 204350 pid('EquationPattern,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 580 6) nil 2) <Q: 1320> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isVariableOccurrence x(1) 1 cache)
		endDefinition(204331)
lbl(204350)	definition(x(9) 204376 pid('EquationPattern,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 580 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1320> 3)
		endDefinition(204350)
lbl(204376)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(9))
		setValue(x(8))
lbl(204386)	definition(x(8) 204447 pid('EquationPattern,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 583 6) nil 4) <Q: 1321> nil)
		allocateL3
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(204386)
lbl(204447)	definition(x(9) 204488 pid('EquationPattern,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 583 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1321> 7)
		endDefinition(204447)
lbl(204488)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
lbl(204498)	definition(x(8) 204563 pid('EquationPattern,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 587 6) nil 5) <Q: 1322> nil)
		allocateL4
		getRecord('#' 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(4) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL4
		tailSendMsg(outputPattern2 x(4) 4 cache)
		endDefinition(204498)
lbl(204563)	definition(x(9) 204610 pid('EquationPattern,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 587 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1322> 9)
		endDefinition(204563)
lbl(204610)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('EquationPattern' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) abstractElse x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(25))
		setValue(x(8))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AbstractElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) elseNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) elseNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(26))
		setValue(x(8))
		putList(x(8))
		setValue(y(23))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(204753)	definition(x(7) 204778 pid('ElseNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 601 6) nil 2) <Q: 1323> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(204753)
lbl(204778)	definition(x(9) 204804 pid('ElseNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 601 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1323> 3)
		endDefinition(204778)
lbl(204804)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204814)	definition(x(7) 204854 pid('ElseNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 604 6) nil 5) <Q: 1324> [y(53) y(58) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('else')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(204814)
lbl(204854)	definition(x(9) 204889 pid('ElseNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 604 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1324> 5)
		endDefinition(204854)
lbl(204889)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ElseNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) noElse x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) noElse x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(27))
		setValue(x(8))
		putList(x(8))
		setValue(y(23))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord] x(2))
		setConstant(unit)
lbl(204979)	definition(x(7) 204993 pid('NoElse,init/fast' 1 pos('./compiler/CoreLanguage.oz' 613 6) nil 1) <Q: 1325> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(204979)
lbl(204993)	definition(x(9) 205019 pid('NoElse,init/slow' 1 pos('./compiler/CoreLanguage.oz' 613 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1325> 3)
		endDefinition(204993)
lbl(205019)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205029)	definition(x(7) 205046 pid('NoElse,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 616 6) nil 2) <Q: 1326> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(205029)
lbl(205046)	definition(x(9) 205072 pid('NoElse,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 616 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1326> 3)
		endDefinition(205046)
lbl(205072)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(7))
lbl(205082)	definition(x(7) 205094 pid('NoElse,output/fast' 2 pos('./compiler/CoreLanguage.oz' 619 6) nil 2) <Q: 1327> nil)
		getLiteral(nil x(1))
		return
		endDefinition(205082)
lbl(205094)	definition(x(9) 205129 pid('NoElse,output/slow' 1 pos('./compiler/CoreLanguage.oz' 619 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1327> 5)
		endDefinition(205094)
lbl(205129)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('NoElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) threadNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) threadNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(28))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(205221)	definition(x(7) 205257 pid('ThreadNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 628 6) nil 2) <Q: 1328> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205221)
lbl(205257)	definition(x(9) 205292 pid('ThreadNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 628 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1328> 5)
		endDefinition(205257)
lbl(205292)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205302)	definition(x(7) 205344 pid('ThreadNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 632 6) nil 5) <Q: 1329> [y(53) y(58) y(54)])
		getRecord('#' 7 x(1))
		unifyLiteral('thread')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(205302)
lbl(205344)	definition(x(9) 205379 pid('ThreadNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 632 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1329> 5)
		endDefinition(205344)
lbl(205379)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ThreadNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) tryNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) tryNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(29))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [catchStatements exception tryStatements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(205473)	definition(x(7) 205539 pid('TryNode,init/fast' 4 pos('./compiler/CoreLanguage.oz' 642 6) nil 4) <Q: 1330> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(tryStatements x(0) cache)
		move(y(0) x(0))
		inlineAssign(exception x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(catchStatements x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(205473)
lbl(205539)	definition(x(9) 205586 pid('TryNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 642 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1330> 9)
		endDefinition(205539)
lbl(205586)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205596)	definition(x(7) 205690 pid('TryNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 648 6) nil 5) <Q: 1331> [y(53) y(58) y(54)])
		allocateL3
		getRecord('#' 15 x(1))
		unifyLiteral('try')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('catch ')
		unifyVariable(y(0))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(1))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(tryStatements x(4) cache)
		move(x(0) y(2))
		move(x(4) x(0))
		move(g(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(exception x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(catchStatements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(205596)
lbl(205690)	definition(x(9) 205725 pid('TryNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 648 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1331> 5)
		endDefinition(205690)
lbl(205725)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('TryNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) lockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) lockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(30))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [lockVar statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(205817)	definition(x(7) 205861 pid('LockNode,init/fast' 3 pos('./compiler/CoreLanguage.oz' 660 6) nil 3) <Q: 1332> nil)
		allocateL2
		inlineAssign(lockVar x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205817)
lbl(205861)	definition(x(9) 205902 pid('LockNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 660 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1332> 7)
		endDefinition(205861)
lbl(205902)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205912)	definition(x(7) 205975 pid('LockNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 665 6) nil 4) <Q: 1333> [y(53) y(58) y(54)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyLiteral('lock ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(lockVar x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(205912)
lbl(205975)	definition(x(9) 206010 pid('LockNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 665 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1333> 5)
		endDefinition(205975)
lbl(206010)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('LockNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) classNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(31))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attributes designator features isToplevel methods parents printName properties] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
lbl(206114)	definition(x(7) 206158 pid('ClassNode,init/fast' 7 pos('./compiler/CoreLanguage.oz' 678 6) nil 7) <Q: 1334> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(parents x(1) cache)
		inlineAssign(properties x(2) cache)
		inlineAssign(attributes x(3) cache)
		inlineAssign(features x(4) cache)
		inlineAssign(methods x(5) cache)
		inlineAssign(coord x(6) cache)
		return
		endDefinition(206114)
lbl(206158)	definition(x(9) 206223 pid('ClassNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 678 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1334> 15)
		endDefinition(206158)
lbl(206223)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(206233)	definition(x(7) 206247 pid('ClassNode,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 687 6) nil 1) <Q: 1335> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(206233)
lbl(206247)	definition(x(9) 206273 pid('ClassNode,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 687 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1335> 3)
		endDefinition(206247)
lbl(206273)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(206283)	definition(x(7) 206917 pid('ClassNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 690 6) nil 5) <Q: 1336> [y(53) y(54) y(58) y(55) y(57) y(56)])
		allocateL9
		getRecord('#' 13 x(1))
		unifyLiteral('class ')
		unifyVariable(x(1))
		unifyValVar(g(0) x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(designator x(3) cache)
		move(x(0) y(6))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(parents x(0) cache)
		testLiteral(x(0) nil 206383)
lbl(206342)	inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206383)
lbl(206351)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206383)
lbl(206360)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206383)
lbl(206369)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206383)
lbl(206378)	getLiteral(nil y(0))
		branch(206386)
lbl(206383)	unify(y(0) g(2))
lbl(206386)	inlineAt(parents x(0) cache)
		testList(x(0) 206470)
lbl(206394)	getRecord('#' 7 y(1))
		unifyValue(g(3))
		unifyLiteral('from')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(parents x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206465)
lbl(206433)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206465)
lbl(206442)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206465)
lbl(206451)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206465)
lbl(206460)	getLiteral(nil y(0))
		branch(206473)
lbl(206465)	unify(y(0) g(2))
		branch(206473)
lbl(206470)	getLiteral(nil y(1))
lbl(206473)	inlineAt(properties x(0) cache)
		testList(x(0) 206548)
lbl(206481)	getRecord('#' 7 y(2))
		unifyValue(g(3))
		unifyLiteral('prop')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(properties x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206543)
lbl(206520)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206543)
lbl(206529)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206543)
lbl(206538)	getLiteral(nil y(0))
		branch(206551)
lbl(206543)	unify(y(0) g(2))
		branch(206551)
lbl(206548)	getLiteral(nil y(2))
lbl(206551)	inlineAt(attributes x(0) cache)
		testList(x(0) 206726)
lbl(206559)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setVariable(y(8))
lbl(206582)	definition(x(1) 206648 pid('' 3 pos('./compiler/CoreLanguage.oz' 724 9) nil 7) unit [y(6)])
		shallowGuard(206635)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206598)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206635)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(724)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206582)
lbl(206648)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(3))
		unifyValue(g(3))
		unifyLiteral('attr')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(8) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206721)
lbl(206707)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206721)
lbl(206716)	getLiteral(nil y(0))
		branch(206729)
lbl(206721)	unify(y(0) g(2))
		branch(206729)
lbl(206726)	getLiteral(nil y(3))
lbl(206729)	inlineAt(features x(0) cache)
		testList(x(0) 206895)
lbl(206737)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(3))
		setVariable(y(7))
lbl(206760)	definition(x(1) 206826 pid('' 3 pos('./compiler/CoreLanguage.oz' 734 9) nil 7) unit [y(6)])
		shallowGuard(206813)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206776)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206813)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(734)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206760)
lbl(206826)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(4))
		unifyValue(g(3))
		unifyLiteral('feat')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(7) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(3) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206890)
lbl(206885)	getLiteral(nil y(0))
		branch(206898)
lbl(206890)	unify(y(0) g(2))
		branch(206898)
lbl(206895)	getLiteral(nil y(4))
lbl(206898)	inlineAt(methods x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(6) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1259> 9)
		endDefinition(206283)
lbl(206917)	definition(x(9) 206952 pid('ClassNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 690 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1336> 5)
		endDefinition(206917)
lbl(206952)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ClassNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) method x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) method x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(32))
		setValue(x(8))
		putRecord('attr' [allVariables coord formalArgs label predicateRef statements] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(207042)	definition(x(8) 207091 pid('Method,init/fast' 4 pos('./compiler/CoreLanguage.oz' 749 6) nil 4) <Q: 1337> nil)
		allocateL2
		inlineAssign(label x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		move(x(3) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(207042)
lbl(207091)	definition(x(9) 207138 pid('Method,init/slow' 1 pos('./compiler/CoreLanguage.oz' 749 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1337> 9)
		endDefinition(207091)
lbl(207138)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207148)	definition(x(8) 207162 pid('Method,setAllVariables/fast' 1 pos('./compiler/CoreLanguage.oz' 755 6) nil 1) <Q: 1338> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(207148)
lbl(207162)	definition(x(9) 207188 pid('Method,setAllVariables/slow' 1 pos('./compiler/CoreLanguage.oz' 755 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1338> 3)
		endDefinition(207162)
lbl(207188)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(8))
lbl(207198)	definition(x(8) 207215 pid('Method,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 758 6) nil 2) <Q: 1339> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207198)
lbl(207215)	definition(x(9) 207241 pid('Method,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 758 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1339> 3)
		endDefinition(207215)
lbl(207241)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(207251)	definition(x(8) 207341 pid('Method,output/fast' 2 pos('./compiler/CoreLanguage.oz' 761 6) nil 5) <Q: 1340> [y(55) y(56) y(53) y(58) y(54) y(57)])
		allocateL4
		getRecord('#' 15 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyLiteral(')')
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(1))
		unifyValVar(g(3) y(2))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1259> 9)
		endDefinition(207251)
lbl(207341)	definition(x(9) 207376 pid('Method,output/slow' 1 pos('./compiler/CoreLanguage.oz' 761 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1340> 5)
		endDefinition(207341)
lbl(207376)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 4 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Method' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methodWithDesignator x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methodWithDesignator x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(33))
		setValue(x(8))
		putList(x(8))
		setValue(y(30))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isOpen messageDesignator] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207475)	definition(x(7) 207516 pid('MethodWithDesignator,init/fast' 6 pos('./compiler/CoreLanguage.oz' 772 6) nil 6) <Q: 1341> [y(30)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true init false 4) 0)
		move(y(0) x(0))
		inlineAssign(isOpen x(0) cache)
		move(y(1) x(0))
		inlineAssign(messageDesignator x(0) cache)
		deAllocateL2
		return
		endDefinition(207475)
lbl(207516)	definition(x(9) 207575 pid('MethodWithDesignator,init/slow' 1 pos('./compiler/CoreLanguage.oz' 772 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1341> 13)
		endDefinition(207516)
lbl(207575)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(207585)	definition(x(7) 207744 pid('MethodWithDesignator,output/fast' 2 pos('./compiler/CoreLanguage.oz' 777 6) nil 5) <Q: 1342> [y(55) y(56) y(53) y(58) y(54) y(57)])
		allocateL6
		getRecord('#' 17 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral(') = ')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(5))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 207693 207698)
		inlineAt(formalArgs x(0) cache)
		testLiteral(x(0) nil 207683)
lbl(207678)	getLiteral('...' y(1))
		branch(207709)
lbl(207683)	getRecord('#' 2 y(1))
		unifyValue(g(5))
		unifyLiteral('...')
		branch(207709)
lbl(207693)	getLiteral(nil y(1))
		branch(207709)
lbl(207698)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(780)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(207709)	inlineAt(messageDesignator x(2) cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(207585)
lbl(207744)	definition(x(9) 207779 pid('MethodWithDesignator,output/slow' 1 pos('./compiler/CoreLanguage.oz' 777 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1342> 5)
		endDefinition(207744)
lbl(207779)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethodWithDesignator' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormal x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormal x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(34))
		setValue(x(8))
		putRecord('attr' [arg feature] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207859)	definition(x(8) 207878 pid('MethFormal,init/fast' 2 pos('./compiler/CoreLanguage.oz' 791 6) nil 2) <Q: 1343> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		return
		endDefinition(207859)
lbl(207878)	definition(x(9) 207913 pid('MethFormal,init/slow' 1 pos('./compiler/CoreLanguage.oz' 791 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1343> 5)
		endDefinition(207878)
lbl(207913)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207923)	definition(x(8) 207940 pid('MethFormal,getFeature/fast' 1 pos('./compiler/CoreLanguage.oz' 795 6) nil 2) <Q: 1344> nil)
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207923)
lbl(207940)	definition(x(9) 207966 pid('MethFormal,getFeature/slow' 1 pos('./compiler/CoreLanguage.oz' 795 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1344> 3)
		endDefinition(207940)
lbl(207966)	putRecord('#' [1 2 fast] x(11))
		setConstant(getFeature)
		setValue(x(9))
		setValue(x(8))
lbl(207976)	definition(x(8) 207993 pid('MethFormal,getVariable/fast' 1 pos('./compiler/CoreLanguage.oz' 798 6) nil 2) <Q: 1345> nil)
		inlineAt(arg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207976)
lbl(207993)	definition(x(9) 208019 pid('MethFormal,getVariable/slow' 1 pos('./compiler/CoreLanguage.oz' 798 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1345> 3)
		endDefinition(207993)
lbl(208019)	putRecord('#' [1 2 fast] x(12))
		setConstant('getVariable')
		setValue(x(9))
		setValue(x(8))
lbl(208029)	definition(x(8) 208041 pid('MethFormal,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 801 6) nil 1) <Q: 1346> nil)
		getLiteral(false x(0))
		return
		endDefinition(208029)
lbl(208041)	definition(x(9) 208067 pid('MethFormal,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 801 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1346> 3)
		endDefinition(208041)
lbl(208067)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(8))
lbl(208077)	definition(x(8) 208127 pid('MethFormal,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 804 6) nil 4) <Q: 1347> nil)
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(': ')
		unifyVariable(y(0))
		inlineAt(feature x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(208077)
lbl(208127)	definition(x(9) 208168 pid('MethFormal,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 804 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1347> 7)
		endDefinition(208127)
lbl(208168)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MethFormal' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalOptional x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalOptional x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(35))
		setValue(x(8))
		putList(x(8))
		setValue(y(32))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isInitialized] x(2))
		setConstant(unit)
lbl(208267)	definition(x(7) 208291 pid('MethFormalOptional,init/fast' 3 pos('./compiler/CoreLanguage.oz' 813 6) nil 3) <Q: 1348> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		inlineAssign(isInitialized x(2) cache)
		return
		endDefinition(208267)
lbl(208291)	definition(x(9) 208332 pid('MethFormalOptional,init/slow' 1 pos('./compiler/CoreLanguage.oz' 813 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1348> 7)
		endDefinition(208291)
lbl(208332)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208342)	definition(x(7) 208354 pid('MethFormalOptional,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 818 6) nil 1) <Q: 1349> nil)
		getLiteral(true x(0))
		return
		endDefinition(208342)
lbl(208354)	definition(x(9) 208380 pid('MethFormalOptional,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 818 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1349> 3)
		endDefinition(208354)
lbl(208380)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208390)	definition(x(7) 208409 pid('MethFormalOptional,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 821 6) nil 3) <Q: 1350> [y(32)])
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= _')
		genCall(gci(g(0) true output2 true 3) 0)
		endDefinition(208390)
lbl(208409)	definition(x(9) 208450 pid('MethFormalOptional,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 821 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1350> 7)
		endDefinition(208409)
lbl(208450)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalOptional' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalWithDefault x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(36))
		setValue(x(8))
		putList(x(8))
		setValue(y(32))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [default] x(2))
		setConstant(unit)
lbl(208542)	definition(x(7) 208567 pid('MethFormalWithDefault,init/fast' 3 pos('./compiler/CoreLanguage.oz' 830 6) nil 3) <Q: 1351> [y(32)])
		allocateL1
		move(x(2) y(0))
		genCall(gci(g(0) true init false 2) 0)
		move(y(0) x(0))
		inlineAssign(default x(0) cache)
		deAllocateL1
		return
		endDefinition(208542)
lbl(208567)	definition(x(9) 208608 pid('MethFormalWithDefault,init/slow' 1 pos('./compiler/CoreLanguage.oz' 830 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1351> 7)
		endDefinition(208567)
lbl(208608)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208618)	definition(x(7) 208630 pid('MethFormalWithDefault,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 834 6) nil 1) <Q: 1352> nil)
		getLiteral(true x(0))
		return
		endDefinition(208618)
lbl(208630)	definition(x(9) 208656 pid('MethFormalWithDefault,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 834 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1352> 3)
		endDefinition(208630)
lbl(208656)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208666)	definition(x(7) 208718 pid('MethFormalWithDefault,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 837 6) nil 6) <Q: 1353> [y(32) y(0)])
		allocateL1
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= ')
		unifyVariable(y(0))
		genCall(gci(g(0) true output2 false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(default x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		deAllocateL1
		tailCall(x(4) 4)
		endDefinition(208666)
lbl(208718)	definition(x(9) 208759 pid('MethFormalWithDefault,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 837 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1353> 7)
		endDefinition(208718)
lbl(208759)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalWithDefault' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) objectLockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) objectLockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(37))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(208851)	definition(x(7) 208887 pid('ObjectLockNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 848 6) nil 2) <Q: 1354> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(208851)
lbl(208887)	definition(x(9) 208922 pid('ObjectLockNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 848 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1354> 5)
		endDefinition(208887)
lbl(208922)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208932)	definition(x(7) 208974 pid('ObjectLockNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 852 6) nil 5) <Q: 1355> [y(53) y(58) y(54)])
		getRecord('#' 7 x(1))
		unifyLiteral('lock')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(208932)
lbl(208974)	definition(x(9) 209009 pid('ObjectLockNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 852 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1355> 5)
		endDefinition(208974)
lbl(209009)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ObjectLockNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'getSelf' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'getSelf' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(38))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [destination] x(2))
		setConstant(unit)
lbl(209099)	definition(x(7) 209118 pid('GetSelf,init/fast' 2 pos('./compiler/CoreLanguage.oz' 861 6) nil 2) <Q: 1356> nil)
		inlineAssign(destination x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(209099)
lbl(209118)	definition(x(9) 209153 pid('GetSelf,init/slow' 1 pos('./compiler/CoreLanguage.oz' 861 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1356> 5)
		endDefinition(209118)
lbl(209153)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209163)	definition(x(7) 209192 pid('GetSelf,output/fast' 2 pos('./compiler/CoreLanguage.oz' 865 6) nil 4) <Q: 1357> nil)
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = self')
		unifyVariable(x(2))
		inlineAt(destination x(3) cache)
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(209163)
lbl(209192)	definition(x(9) 209227 pid('GetSelf,output/slow' 1 pos('./compiler/CoreLanguage.oz' 865 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1357> 5)
		endDefinition(209192)
lbl(209227)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('GetSelf' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) failNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(39))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209296)	definition(x(7) 209310 pid('FailNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 873 6) nil 1) <Q: 1358> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(209296)
lbl(209310)	definition(x(9) 209336 pid('FailNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 873 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1358> 3)
		endDefinition(209310)
lbl(209336)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209346)	definition(x(7) 209358 pid('FailNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 876 6) nil 2) <Q: 1359> nil)
		getLiteral('fail' x(1))
		return
		endDefinition(209346)
lbl(209358)	definition(x(9) 209393 pid('FailNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 876 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1359> 5)
		endDefinition(209358)
lbl(209393)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FailNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) ifNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) ifNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(40))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative clauses] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(209485)	definition(x(7) 209509 pid('IfNode,init/fast' 3 pos('./compiler/CoreLanguage.oz' 885 6) nil 3) <Q: 1360> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(alternative x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(209485)
lbl(209509)	definition(x(9) 209550 pid('IfNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 885 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1360> 7)
		endDefinition(209509)
lbl(209550)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209560)	definition(x(7) 209631 pid('IfNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 890 6) nil 5) <Q: 1361> [y(53) y(54) y(58)])
		allocateL2
		getRecord('#' 7 x(1))
		unifyLiteral('cond ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValVar(g(2) y(0))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(209560)
lbl(209631)	definition(x(9) 209666 pid('IfNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 890 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1361> 5)
		endDefinition(209631)
lbl(209666)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('IfNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) choicesAndDisjunctions x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) choicesAndDisjunctions x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(41))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [clauses] x(2))
		setConstant(unit)
lbl(209750)	definition(x(7) 209769 pid('ChoicesAndDisjunctions,init/fast' 2 pos('./compiler/CoreLanguage.oz' 900 6) nil 2) <Q: 1362> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(209750)
lbl(209769)	definition(x(9) 209804 pid('ChoicesAndDisjunctions,init/slow' 1 pos('./compiler/CoreLanguage.oz' 900 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1362> 5)
		endDefinition(209769)
lbl(209804)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('ChoicesAndDisjunctions' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) orNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(42))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209874)	definition(x(7) 209923 pid('OrNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 908 6) nil 5) <Q: 1363> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('or ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(209874)
lbl(209923)	definition(x(9) 209958 pid('OrNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 908 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1363> 5)
		endDefinition(209923)
lbl(209958)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('OrNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) disNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(43))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(210025)	definition(x(7) 210074 pid('DisNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 915 6) nil 5) <Q: 1364> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('dis ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(210025)
lbl(210074)	definition(x(9) 210109 pid('DisNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 915 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1364> 5)
		endDefinition(210074)
lbl(210109)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('DisNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) choiceNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(44))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(210176)	definition(x(7) 210225 pid('ChoiceNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 922 6) nil 5) <Q: 1365> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('choice ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(210176)
lbl(210225)	definition(x(9) 210260 pid('ChoiceNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 922 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1365> 5)
		endDefinition(210225)
lbl(210260)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ChoiceNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'clause' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'clause' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(45))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [guard kind localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(210348)	definition(x(8) 210411 pid('Clause,init/fast' 4 pos('./compiler/CoreLanguage.oz' 931 6) nil 4) <Q: 1366> nil)
		allocateL3
		inlineAssign(localVars x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(guard x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL3
		return
		endDefinition(210348)
lbl(210411)	definition(x(9) 210458 pid('Clause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 931 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1366> 9)
		endDefinition(210411)
lbl(210458)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(210468)	definition(x(8) 210615 pid('Clause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 937 6) nil 6) <Q: 1367> [y(54) y(58) y(53) y(57)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(g(0))
		unifyValue(g(1))
		unifyLiteral('then')
		unifyValue(g(2))
		unifyValVar(g(1) x(3))
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		match(x(4) ht(210553 [onScalar(nil 210510) onRecord('|' 2 210515)]))
lbl(210510)	getLiteral(nil x(1))
		branch(210566)
lbl(210515)	getRecord('#' 6 x(1))
		unifyVariable(x(4))
		unifyValue(g(0))
		unifyValue(g(3))
		unifyLiteral('in')
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(localVars x(5) cache)
		move(x(5) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1259> 8)
		branch(210566)
lbl(210553)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(941)
		setValue(x(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(210566)	inlineAt(guard x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(kind x(0) cache)
		testLiteral(x(0) 'waitTop' 210596)
lbl(210591)	getLiteral('skip   % top commit' y(2))
		deAllocateL3
		return
lbl(210596)	inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(210468)
lbl(210615)	definition(x(9) 210650 pid('Clause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 937 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1367> 5)
		endDefinition(210615)
lbl(210650)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('Clause' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) valueNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) valueNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(46))
		setValue(x(8))
		putRecord('attr' [coord value] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(4))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(210750)	definition(x(8) 210780 pid('ValueNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 952 6) nil 2) <Q: 1368> [y(1)])
		inlineAssign(value x(0) cache)
		inlineAssign(coord x(1) cache)
		move(g(0) x(0))
		inlineDot(x(0) valueNode x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(210750)
lbl(210780)	definition(x(10) 210815 pid('ValueNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 952 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1368> 5)
		endDefinition(210780)
lbl(210815)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(210825)	definition(x(8) 210837 pid('ValueNode,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 957 6) nil 1) <Q: 1369> nil)
		getLiteral(false x(0))
		return
		endDefinition(210825)
lbl(210837)	definition(x(10) 210863 pid('ValueNode,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 957 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1369> 3)
		endDefinition(210837)
lbl(210863)	putRecord('#' [1 2 fast] x(12))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(210873)	definition(x(8) 210885 pid('ValueNode,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 960 6) nil 1) <Q: 1370> nil)
		getLiteral(false x(0))
		return
		endDefinition(210873)
lbl(210885)	definition(x(10) 210911 pid('ValueNode,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 960 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1370> 3)
		endDefinition(210885)
lbl(210911)	putRecord('#' [1 2 fast] x(13))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(210921)	definition(x(8) 210938 pid('ValueNode,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 963 6) nil 2) <Q: 1371> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210921)
lbl(210938)	definition(x(10) 210964 pid('ValueNode,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 963 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1371> 3)
		endDefinition(210938)
lbl(210964)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(210974)	definition(x(8) 210991 pid('ValueNode,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 966 6) nil 2) <Q: 1372> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210974)
lbl(210991)	definition(x(10) 211017 pid('ValueNode,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 966 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1372> 3)
		endDefinition(210991)
lbl(211017)	putRecord('#' [1 2 fast] x(15))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(211027)	definition(x(8) 211043 pid('ValueNode,outputEscaped2/fast' 3 pos('./compiler/CoreLanguage.oz' 969 6) nil 5) <Q: 1373> nil)
		getSelf(x(4))
		tailSendMsg(output2 x(4) 3 cache)
		endDefinition(211027)
lbl(211043)	definition(x(10) 211084 pid('ValueNode,outputEscaped2/slow' 1 pos('./compiler/CoreLanguage.oz' 969 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1373> 7)
		endDefinition(211043)
lbl(211084)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('ValueNode' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) atomNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(47))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211164)	definition(x(7) 211204 pid('AtomNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 977 6) nil 6) <Q: 1374> [y(0)])
		getLiteral(nil x(2))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211164)
lbl(211204)	definition(x(9) 211245 pid('AtomNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 977 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1374> 7)
		endDefinition(211204)
lbl(211245)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211255)	definition(x(7) 211295 pid('AtomNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 981 6) nil 6) <Q: 1375> [y(0)])
		getLiteral(nil x(3))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211255)
lbl(211295)	definition(x(9) 211342 pid('AtomNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 981 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1375> 9)
		endDefinition(211295)
lbl(211342)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('AtomNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) intNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(48))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211411)	definition(x(7) 211464 pid('IntNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 990 6) nil 4) <Q: 1376> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 211453)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211453)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211411)
lbl(211464)	definition(x(9) 211505 pid('IntNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 990 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1376> 7)
		endDefinition(211464)
lbl(211505)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211515)	definition(x(7) 211568 pid('IntNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 994 6) nil 4) <Q: 1377> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0 x(1))
		testLT(x(0) x(1) x(3) 211557)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211557)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211515)
lbl(211568)	definition(x(9) 211615 pid('IntNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 994 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1377> 9)
		endDefinition(211568)
lbl(211615)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('IntNode' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) floatNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211684)	definition(x(7) 211737 pid('FloatNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1003 6) nil 4) <Q: 1378> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(2))
		testLT(x(0) x(2) x(3) 211726)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211726)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211684)
lbl(211737)	definition(x(9) 211778 pid('FloatNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1003 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1378> 7)
		endDefinition(211737)
lbl(211778)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211788)	definition(x(7) 211841 pid('FloatNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 1007 6) nil 4) <Q: 1379> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(1))
		testLT(x(0) x(1) x(3) 211830)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211830)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211788)
lbl(211841)	definition(x(9) 211888 pid('FloatNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 1007 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1379> 9)
		endDefinition(211841)
lbl(211888)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FloatNode' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variable x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variable x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(49))
		setValue(x(8))
		putRecord('attr' [coord isToplevel origin printName] x(2))
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
lbl(211972)	definition(x(8) 212007 pid('Variable,init/fast' 3 pos('./compiler/CoreLanguage.oz' 1016 6) nil 3) <Q: 1380> [y(1)])
		inlineAssign(printName x(0) cache)
		inlineAssign(origin x(1) cache)
		inlineAssign(coord x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) variable x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(211972)
lbl(212007)	definition(x(9) 212048 pid('Variable,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1016 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1380> 7)
		endDefinition(212007)
lbl(212048)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(212058)	definition(x(8) 212070 pid('Variable,isRestricted/fast' 1 pos('./compiler/CoreLanguage.oz' 1022 6) nil 1) <Q: 1381> nil)
		getLiteral(false x(0))
		return
		endDefinition(212058)
lbl(212070)	definition(x(9) 212096 pid('Variable,isRestricted/slow' 1 pos('./compiler/CoreLanguage.oz' 1022 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1381> 3)
		endDefinition(212070)
lbl(212096)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRestricted)
		setValue(x(9))
		setValue(x(8))
lbl(212106)	definition(x(8) 212121 pid('Variable,isDenied/fast' 3 pos('./compiler/CoreLanguage.oz' 1025 6) nil 3) <Q: 1382> nil)
		getLiteral(unit x(1))
		getLiteral(false x(2))
		return
		endDefinition(212106)
lbl(212121)	definition(x(9) 212162 pid('Variable,isDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1025 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1382> 7)
		endDefinition(212121)
lbl(212162)	putRecord('#' [1 2 fast] x(12))
		setConstant(isDenied)
		setValue(x(9))
		setValue(x(8))
lbl(212172)	definition(x(8) 212189 pid('Variable,getPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 1029 6) nil 2) <Q: 1383> nil)
		inlineAt(printName x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212172)
lbl(212189)	definition(x(9) 212215 pid('Variable,getPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 1029 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1383> 3)
		endDefinition(212189)
lbl(212215)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPrintName)
		setValue(x(9))
		setValue(x(8))
lbl(212225)	definition(x(8) 212242 pid('Variable,getOrigin/fast' 1 pos('./compiler/CoreLanguage.oz' 1032 6) nil 2) <Q: 1384> nil)
		inlineAt(origin x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212225)
lbl(212242)	definition(x(9) 212268 pid('Variable,getOrigin/slow' 1 pos('./compiler/CoreLanguage.oz' 1032 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1384> 3)
		endDefinition(212242)
lbl(212268)	putRecord('#' [1 2 fast] x(14))
		setConstant(getOrigin)
		setValue(x(9))
		setValue(x(8))
lbl(212278)	definition(x(8) 212295 pid('Variable,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 1035 6) nil 2) <Q: 1385> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212278)
lbl(212295)	definition(x(9) 212321 pid('Variable,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 1035 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1385> 3)
		endDefinition(212295)
lbl(212321)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(212331)	definition(x(8) 212345 pid('Variable,setToplevel/fast' 1 pos('./compiler/CoreLanguage.oz' 1038 6) nil 1) <Q: 1386> nil)
		inlineAssign(isToplevel x(0) cache)
		return
		endDefinition(212331)
lbl(212345)	definition(x(9) 212371 pid('Variable,setToplevel/slow' 1 pos('./compiler/CoreLanguage.oz' 1038 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1386> 3)
		endDefinition(212345)
lbl(212371)	putRecord('#' [1 2 fast] x(16))
		setConstant(setToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(212381)	definition(x(8) 212398 pid('Variable,isToplevel/fast' 1 pos('./compiler/CoreLanguage.oz' 1041 6) nil 2) <Q: 1387> nil)
		inlineAt(isToplevel x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212381)
lbl(212398)	definition(x(9) 212424 pid('Variable,isToplevel/slow' 1 pos('./compiler/CoreLanguage.oz' 1041 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1387> 3)
		endDefinition(212398)
lbl(212424)	putRecord('#' [1 2 fast] x(17))
		setConstant(isToplevel)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(46))
lbl(212436)	definition(x(8) 212472 pid('Variable,occ/fast' 2 pos('./compiler/CoreLanguage.oz' 1044 6) nil 4) <Q: 1388> [y(46)])
		allocateL2
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(212436)
lbl(212472)	definition(x(9) 212507 pid('Variable,occ/slow' 1 pos('./compiler/CoreLanguage.oz' 1044 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1388> 5)
		endDefinition(212472)
lbl(212507)	putRecord('#' [1 2 fast] x(18))
		setConstant(occ)
		setValue(x(9))
		setValue(x(8))
lbl(212517)	definition(x(8) 212594 pid('Variable,output/fast' 2 pos('./compiler/CoreLanguage.oz' 1047 6) nil 3) <Q: 1389> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212555 212581)
		getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212555)	match(y(1) ht(212573 [onScalar('`unit`' 212558) onScalar('`true`' 212563) onScalar('`false`' 212568)]))
lbl(212558)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212563)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212568)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212573)	getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212581)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1048)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212517)
lbl(212594)	definition(x(9) 212629 pid('Variable,output/slow' 1 pos('./compiler/CoreLanguage.oz' 1047 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1389> 5)
		endDefinition(212594)
lbl(212629)	putRecord('#' [1 2 fast] x(19))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
lbl(212639)	definition(x(8) 212732 pid('Variable,outputEscaped/fast' 2 pos('./compiler/CoreLanguage.oz' 1057 6) nil 3) <Q: 1390> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212685 212719)
		getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212685)	match(y(1) ht(212703 [onScalar('`unit`' 212688) onScalar('`true`' 212693) onScalar('`false`' 212698)]))
lbl(212688)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212693)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212698)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212703)	getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212719)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1058)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212639)
lbl(212732)	definition(x(9) 212767 pid('Variable,outputEscaped/slow' 1 pos('./compiler/CoreLanguage.oz' 1057 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1390> 5)
		endDefinition(212732)
lbl(212767)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(47))
lbl(212779)	definition(x(8) 212881 pid('Variable,outputPattern/fast' 3 pos('./compiler/CoreLanguage.oz' 1067 6) nil 5) <Q: 1391> [y(47)])
		allocateL3
		inlineAt(printName x(3) cache)
lbl(212791)	definition(x(4) 212829 pid('' 2 pos('./compiler/CoreLanguage.oz' 1068 14) nil 3) unit [x(3)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(2) 1 cache)
		move(y(1) x(0))
		move(g(0) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(212791)
lbl(212829)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(2) 212859 212868)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true output true 2) 0)
lbl(212859)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true outputEscaped true 2) 0)
lbl(212868)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1068)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212779)
lbl(212881)	definition(x(9) 212922 pid('Variable,outputPattern/slow' 1 pos('./compiler/CoreLanguage.oz' 1067 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1391> 7)
		endDefinition(212881)
lbl(212922)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(x(7) x(0))
		move(x(8) x(1))
		move(y(47) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Variable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(7))
		setValue(y(50))
		setConstant(nil)
		putList(x(0))
		setValue(y(47))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [features] x(2))
		setConstant(unit)
lbl(213005)	definition(x(7) 213033 pid('RestrictedVariable,init/fast' 3 pos('./compiler/CoreLanguage.oz' 1080 6) nil 3) <Q: 1392> [y(47)])
		allocateL1
		move(x(1) y(0))
		putConstant(user x(1))
		genCall(gci(g(0) true init false 3) 0)
		move(y(0) x(0))
		inlineAssign(features x(0) cache)
		deAllocateL1
		return
		endDefinition(213005)
lbl(213033)	definition(x(8) 213074 pid('RestrictedVariable,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1080 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1392> 7)
		endDefinition(213033)
lbl(213074)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(213084)	definition(x(7) 213107 pid('RestrictedVariable,isRestricted/fast' 1 pos('./compiler/CoreLanguage.oz' 1084 6) nil 4) <Q: 1393> nil)
		inlineAt(features x(1) cache)
		putConstant(nil x(2))
		callBI('\\=' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(213084)
lbl(213107)	definition(x(8) 213133 pid('RestrictedVariable,isRestricted/slow' 1 pos('./compiler/CoreLanguage.oz' 1084 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1393> 3)
		endDefinition(213107)
lbl(213133)	putRecord('#' [1 2 fast] x(10))
		setConstant(isRestricted)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(48))
lbl(213145)	definition(x(7) 213187 pid('RestrictedVariable,isDenied/fast' 3 pos('./compiler/CoreLanguage.oz' 1087 6) nil 4) <Q: 1394> [y(48)])
		inlineAt(features x(3) cache)
		testLiteral(x(3) nil 213167)
lbl(213160)	getLiteral(unit x(1))
		getLiteral(false x(2))
		return
lbl(213167)	move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
		endDefinition(213145)
lbl(213187)	definition(x(8) 213228 pid('RestrictedVariable,isDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1087 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1394> 7)
		endDefinition(213187)
lbl(213228)	putRecord('#' [1 2 fast] x(11))
		setConstant(isDenied)
		setValue(x(8))
		setValue(x(7))
lbl(213238)	definition(x(7) 213326 pid('RestrictedVariable,IsDenied/fast' 4 pos('./compiler/CoreLanguage.oz' 1095 6) nil 7) <Q: 1395> [y(48)])
		match(x(0) ht(213311 [onScalar(nil 213247) onRecord('|' 2 213254)]))
lbl(213247)	getLiteral(unit x(2))
		getLiteral(true x(3))
		return
lbl(213254)	getVarVar(x(0) x(4))
		inlineDot(x(0) 1 x(5) cache)
		testBI('==' [x(1) x(5)]#[x(6)] 213305)
		allocateL1
		putConstant(true x(1))
		inlineDot(x(0) 3 x(4) cache)
		unify(x(4) x(1))
		move(x(3) y(0))
		testRecord(x(0) '#' 4 213297)
lbl(213288)	getVoid(3)
		getVariable(x(0))
		unify(x(2) x(0))
		branch(213300)
lbl(213297)	getLiteral(unit x(2))
lbl(213300)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(213305)	move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
lbl(213311)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1109)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(213238)
lbl(213326)	definition(x(8) 213373 pid('RestrictedVariable,IsDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1095 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1395> 9)
		endDefinition(213326)
lbl(213373)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: IsDenied>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(48) x(6))
		putConstant('feat' x(3))
		putConstant('RestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variableOccurrence x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variableOccurrence x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(51))
		setValue(x(8))
		putRecord('attr' [coord value variable] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(5))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(213473)	definition(x(8) 213499 pid('VariableOccurrence,init/fast' 2 pos('./compiler/CoreLanguage.oz' 1118 6) nil 2) <Q: 1396> nil)
		inlineAssign(variable x(0) cache)
		inlineAssign(coord x(1) cache)
		getSelf(x(0))
		inlineAssign(value x(0) cache)
		return
		endDefinition(213473)
lbl(213499)	definition(x(10) 213534 pid('VariableOccurrence,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1118 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1396> 5)
		endDefinition(213499)
lbl(213534)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(213544)	definition(x(8) 213561 pid('VariableOccurrence,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 1123 6) nil 2) <Q: 1397> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213544)
lbl(213561)	definition(x(10) 213587 pid('VariableOccurrence,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 1123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1397> 3)
		endDefinition(213561)
lbl(213587)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(213597)	definition(x(8) 213614 pid('VariableOccurrence,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1126 6) nil 2) <Q: 1398> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213597)
lbl(213614)	definition(x(10) 213640 pid('VariableOccurrence,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1126 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1398> 3)
		endDefinition(213614)
lbl(213640)	putRecord('#' [1 2 fast] x(13))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(213650)	definition(x(8) 213664 pid('VariableOccurrence,setValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1129 6) nil 1) <Q: 1399> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(213650)
lbl(213664)	definition(x(10) 213690 pid('VariableOccurrence,setValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1399> 3)
		endDefinition(213664)
lbl(213690)	putRecord('#' [1 2 fast] x(14))
		setConstant('setValue')
		setValue(x(10))
		setValue(x(8))
lbl(213700)	definition(x(8) 213712 pid('VariableOccurrence,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1132 6) nil 1) <Q: 1400> nil)
		getLiteral(true x(0))
		return
		endDefinition(213700)
lbl(213712)	definition(x(10) 213738 pid('VariableOccurrence,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1400> 3)
		endDefinition(213712)
lbl(213738)	putRecord('#' [1 2 fast] x(15))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213748)	definition(x(8) 213760 pid('VariableOccurrence,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 1135 6) nil 1) <Q: 1401> nil)
		getLiteral(false x(0))
		return
		endDefinition(213748)
lbl(213760)	definition(x(10) 213786 pid('VariableOccurrence,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 1135 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1401> 3)
		endDefinition(213760)
lbl(213786)	putRecord('#' [1 2 fast] x(16))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(5))
lbl(213798)	definition(x(8) 213842 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1138 6) nil 5) <Q: 1402> [y(5)])
		allocateL2
		inlineAt(variable x(2) cache)
		inlineAt(coord x(1) cache)
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(213798)
lbl(213842)	definition(x(10) 213868 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1138 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1402> 3)
		endDefinition(213842)
lbl(213868)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeIntoPatternVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213878)	definition(x(8) 213895 pid('VariableOccurrence,getVariable/fast' 1 pos('./compiler/CoreLanguage.oz' 1141 6) nil 2) <Q: 1403> nil)
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213878)
lbl(213895)	definition(x(10) 213921 pid('VariableOccurrence,getVariable/slow' 1 pos('./compiler/CoreLanguage.oz' 1141 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1403> 3)
		endDefinition(213895)
lbl(213921)	putRecord('#' [1 2 fast] x(18))
		setConstant('getVariable')
		setValue(x(10))
		setValue(x(8))
lbl(213931)	definition(x(8) 213968 pid('VariableOccurrence,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1144 6) nil 3) <Q: 1404> [y(46)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(213931)
lbl(213968)	definition(x(10) 214009 pid('VariableOccurrence,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1144 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1404> 7)
		endDefinition(213968)
lbl(214009)	putRecord('#' [1 2 fast] x(19))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(214019)	definition(x(8) 214056 pid('VariableOccurrence,outputEscaped2/fast' 3 pos('./compiler/CoreLanguage.oz' 1148 6) nil 3) <Q: 1405> [y(46)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(outputEscaped x(2) 2 cache)
		endDefinition(214019)
lbl(214056)	definition(x(10) 214097 pid('VariableOccurrence,outputEscaped2/slow' 1 pos('./compiler/CoreLanguage.oz' 1148 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1405> 7)
		endDefinition(214056)
lbl(214097)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
lbl(214107)	definition(x(8) 214150 pid('VariableOccurrence,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 1152 6) nil 4) <Q: 1406> [y(46)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(outputPattern x(3) 3 cache)
		endDefinition(214107)
lbl(214150)	definition(x(10) 214197 pid('VariableOccurrence,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 1152 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1406> 9)
		endDefinition(214150)
lbl(214197)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
lbl(214207)	definition(x(8) 214635 pid('VariableOccurrence,OutputValue/fast' 2 pos('./compiler/CoreLanguage.oz' 1156 6) nil 6) <Q: 1407> [y(58) y(1) y(0)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(debugValue x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(3))
		testBool(y(2) 214258 214263)
		getRecord('#' 3 y(3))
		unifyValue(g(0))
		unifyLiteral('%    value: ')
		unifyVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) variableOccurrence x(2) cache)
		applMeth(ami(outputDebugValue 1) x(2))
		branch(214274)
lbl(214258)	getLiteral(unit y(3))
		branch(214274)
lbl(214263)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1159)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214274)	move(y(0) x(0))
		putConstant(debugType x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(0))
		testBool(y(2) 214564 214569)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(g(0))
		unifyLiteral('%    type: ')
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(y(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(4))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(5))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(6))
		unifyLiteral(nil)
		inlineAt(variable x(1) cache)
		move(x(2) x(0))
		sendMsg(outputDebugType x(1) 1 cache)
		inlineAt(variable x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(outputDebugProps x(1) 1 cache)
		testLiteral(y(7) unit 214369)
lbl(214364)	getLiteral(unit y(2))
		branch(214400)
lbl(214369)	getRecord('#' 3 y(2))
		unifyValue(g(0))
		unifyLiteral('%    prop: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(7) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214400)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugAttrs x(1) 1 cache)
		testLiteral(y(2) unit 214423)
lbl(214418)	getLiteral(unit y(4))
		branch(214454)
lbl(214423)	getRecord('#' 3 y(4))
		unifyValue(g(0))
		unifyLiteral('%    attr: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214454)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugFeats x(1) 1 cache)
		testLiteral(y(2) unit 214477)
lbl(214472)	getLiteral(unit y(5))
		branch(214508)
lbl(214477)	getRecord('#' 3 y(5))
		unifyValue(g(0))
		unifyLiteral('%    feat: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214508)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugMeths x(1) 1 cache)
		testLiteral(y(2) unit 214531)
lbl(214526)	getLiteral(unit y(6))
		branch(214580)
lbl(214531)	getRecord('#' 3 y(6))
		unifyValue(g(0))
		unifyLiteral('%    meth: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
		branch(214580)
lbl(214564)	getLiteral(nil y(0))
		branch(214580)
lbl(214569)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1163)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214580)	putList(x(0))
		setValue(y(3))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1263> 4)
		testLiteral(y(0) nil 214601)
lbl(214596)	getLiteral(nil y(1))
		deAllocateL8
		return
lbl(214601)	getRecord('#' 5 y(1))
		unifyValue(g(0))
		unifyLiteral('% ')
		unifyVariable(x(1))
		unifyLiteral(':')
		unifyValue(y(0))
		inlineAt(variable x(2) cache)
		putRecord(debug [realcore] x(0))
		setConstant(true)
		deAllocateL8
		tailSendMsg(output x(2) 2 cache)
		endDefinition(214207)
lbl(214635)	definition(x(10) 214670 pid('VariableOccurrence,OutputValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1156 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1407> 5)
		endDefinition(214635)
lbl(214670)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: OutputValue>)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		move(y(46) x(6))
		putConstant(nil x(4))
		putConstant('VariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) patternVariableOccurrence x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(52))
		setValue(x(8))
		putList(x(8))
		setValue(y(46))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		move(y(5) x(6))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('PatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) token x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) token x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putRecord('attr' [value] x(2))
		setConstant(unit)
		putRecord('#' 2 x(7))
		setValue(y(6))
		setConstant(unit)
		putList(x(3))
		setValue(x(7))
		setConstant(nil)
		putConstant('feat' x(7))
		callBI(record [x(7) x(3)]#[x(9)])
lbl(214839)	definition(x(7) 214864 pid('Token,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1201 6) nil 2) <Q: 1408> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(214839)
lbl(214864)	definition(x(10) 214890 pid('Token,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1201 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1408> 3)
		endDefinition(214864)
lbl(214890)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(7))
lbl(214900)	definition(x(7) 214917 pid('Token,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1205 6) nil 2) <Q: 1409> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(214900)
lbl(214917)	definition(x(10) 214943 pid('Token,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1409> 3)
		endDefinition(214917)
lbl(214943)	putRecord('#' [1 2 fast] x(12))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(7))
lbl(214953)	definition(x(7) 214965 pid('Token,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1208 6) nil 1) <Q: 1410> nil)
		getLiteral(false x(0))
		return
		endDefinition(214953)
lbl(214965)	definition(x(10) 214991 pid('Token,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1410> 3)
		endDefinition(214965)
lbl(214991)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(7))
lbl(215001)	definition(x(7) 215013 pid('Token,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 1211 6) nil 1) <Q: 1411> nil)
		getLiteral(false x(0))
		return
		endDefinition(215001)
lbl(215013)	definition(x(10) 215039 pid('Token,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 1211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1411> 3)
		endDefinition(215013)
lbl(215039)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(7))
lbl(215049)	definition(x(7) 215061 pid('Token,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1214 6) nil 1) <Q: 1412> nil)
		getLiteral(false x(0))
		return
		endDefinition(215049)
lbl(215061)	definition(x(10) 215087 pid('Token,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1214 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1412> 3)
		endDefinition(215061)
lbl(215087)	putRecord('#' [1 2 fast] x(15))
		setConstant(isChunk)
		setValue(x(10))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(8) x(0))
		move(x(7) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('Token' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) nameToken x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) nameToken x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isToplevel] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(name)
lbl(215186)	definition(x(8) 215202 pid('NameToken,init/fast' 2 pos('./compiler/CoreLanguage.oz' 1223 6) nil 2) <Q: 1413> [y(0)])
		inlineAssign(isToplevel x(1) cache)
		genCall(gci(g(0) true init true 1) 0)
		endDefinition(215186)
lbl(215202)	definition(x(9) 215237 pid('NameToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1223 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1413> 5)
		endDefinition(215202)
lbl(215237)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 1 x(8))
		setValue(x(10))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('NameToken' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) procedureToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind predicateRef] x(3))
		setConstant(procedure)
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [clauseBodyStatements] x(3))
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) builtinToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(builtin)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BuiltinToken' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(cell)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('CellToken' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(chunk)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('ChunkToken' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(array)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ArrayToken' x(5))
		createVariableMove(y(53) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(dictionary)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('DictionaryToken' x(5))
		createVariableMove(y(54) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(bitArray)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BitArrayToken' x(5))
		createVariableMove(y(55) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attrs feats meths props] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant('class')
lbl(215612)	definition(x(7) 215626 pid('ClassToken,setProperties/fast' 1 pos('./compiler/CoreLanguage.oz' 1272 6) nil 1) <Q: 1414> nil)
		inlineAssign(props x(0) cache)
		return
		endDefinition(215612)
lbl(215626)	definition(x(8) 215652 pid('ClassToken,setProperties/slow' 1 pos('./compiler/CoreLanguage.oz' 1272 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1414> 3)
		endDefinition(215626)
lbl(215652)	putRecord('#' [1 2 fast] x(9))
		setConstant(setProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215662)	definition(x(7) 215679 pid('ClassToken,getProperties/fast' 1 pos('./compiler/CoreLanguage.oz' 1275 6) nil 2) <Q: 1415> nil)
		inlineAt(props x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215662)
lbl(215679)	definition(x(8) 215705 pid('ClassToken,getProperties/slow' 1 pos('./compiler/CoreLanguage.oz' 1275 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1415> 3)
		endDefinition(215679)
lbl(215705)	putRecord('#' [1 2 fast] x(10))
		setConstant(getProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215715)	definition(x(7) 215729 pid('ClassToken,setAttributes/fast' 1 pos('./compiler/CoreLanguage.oz' 1278 6) nil 1) <Q: 1416> nil)
		inlineAssign(attrs x(0) cache)
		return
		endDefinition(215715)
lbl(215729)	definition(x(8) 215755 pid('ClassToken,setAttributes/slow' 1 pos('./compiler/CoreLanguage.oz' 1278 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1416> 3)
		endDefinition(215729)
lbl(215755)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215765)	definition(x(7) 215782 pid('ClassToken,getAttributes/fast' 1 pos('./compiler/CoreLanguage.oz' 1281 6) nil 2) <Q: 1417> nil)
		inlineAt(attrs x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215765)
lbl(215782)	definition(x(8) 215808 pid('ClassToken,getAttributes/slow' 1 pos('./compiler/CoreLanguage.oz' 1281 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1417> 3)
		endDefinition(215782)
lbl(215808)	putRecord('#' [1 2 fast] x(12))
		setConstant(getAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215818)	definition(x(7) 215832 pid('ClassToken,setFeatures/fast' 1 pos('./compiler/CoreLanguage.oz' 1284 6) nil 1) <Q: 1418> nil)
		inlineAssign(feats x(0) cache)
		return
		endDefinition(215818)
lbl(215832)	definition(x(8) 215858 pid('ClassToken,setFeatures/slow' 1 pos('./compiler/CoreLanguage.oz' 1284 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1418> 3)
		endDefinition(215832)
lbl(215858)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215868)	definition(x(7) 215885 pid('ClassToken,getFeatures/fast' 1 pos('./compiler/CoreLanguage.oz' 1287 6) nil 2) <Q: 1419> nil)
		inlineAt(feats x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215868)
lbl(215885)	definition(x(8) 215911 pid('ClassToken,getFeatures/slow' 1 pos('./compiler/CoreLanguage.oz' 1287 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1419> 3)
		endDefinition(215885)
lbl(215911)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215921)	definition(x(7) 215935 pid('ClassToken,setMethods/fast' 1 pos('./compiler/CoreLanguage.oz' 1290 6) nil 1) <Q: 1420> nil)
		inlineAssign(meths x(0) cache)
		return
		endDefinition(215921)
lbl(215935)	definition(x(8) 215961 pid('ClassToken,setMethods/slow' 1 pos('./compiler/CoreLanguage.oz' 1290 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1420> 3)
		endDefinition(215935)
lbl(215961)	putRecord('#' [1 2 fast] x(15))
		setConstant(setMethods)
		setValue(x(8))
		setValue(x(7))
lbl(215971)	definition(x(7) 215988 pid('ClassToken,getMethods/fast' 1 pos('./compiler/CoreLanguage.oz' 1293 6) nil 2) <Q: 1421> nil)
		inlineAt(meths x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215971)
lbl(215988)	definition(x(8) 216014 pid('ClassToken,getMethods/slow' 1 pos('./compiler/CoreLanguage.oz' 1293 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1421> 3)
		endDefinition(215988)
lbl(216014)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMethods)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		putConstant('ClassToken' x(5))
		createVariableMove(y(56) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [classNode] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(object)
lbl(216077)	definition(x(7) 216116 pid('ObjectToken,init/fast' 2 pos('./compiler/CoreLanguage.oz' 1302 6) nil 3) <Q: 1422> [y(1)])
		allocateL1
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(2) cache)
		move(x(1) y(0))
		applMeth(ami(init 0) x(2))
		move(y(0) x(0))
		inlineAssign(classNode x(0) cache)
		deAllocateL1
		return
		endDefinition(216077)
lbl(216116)	definition(x(8) 216151 pid('ObjectToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1302 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1422> 5)
		endDefinition(216116)
lbl(216151)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(216161)	definition(x(7) 216178 pid('ObjectToken,getClassNode/fast' 1 pos('./compiler/CoreLanguage.oz' 1307 6) nil 2) <Q: 1423> nil)
		inlineAt(classNode x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(216161)
lbl(216178)	definition(x(8) 216204 pid('ObjectToken,getClassNode/slow' 1 pos('./compiler/CoreLanguage.oz' 1307 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1423> 3)
		endDefinition(216178)
lbl(216204)	putRecord('#' [1 2 fast] x(10))
		setConstant(getClassNode)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('ObjectToken' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('lock')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('LockToken' x(5))
		createVariableMove(y(57) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(port)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('PortToken' x(5))
		createVariableMove(y(58) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('thread')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ThreadToken' x(5))
		createVariableMove(y(61) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(space)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('SpaceToken' x(5))
		createVariableMove(y(62) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] g(2))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(53))
		unifyValue(y(44))
		unifyValue(y(55))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(2))
		unifyValue(y(51))
		unifyValue(y(42))
		unifyValue(y(39))
		unifyValue(y(52))
		unifyValue(y(29))
		unifyValue(y(56))
		unifyValue(y(43))
		unifyValue(y(16))
		unifyValue(y(50))
		unifyValue(y(13))
		unifyValue(y(11))
		unifyValue(y(14))
		unifyValue(y(54))
		unifyValue(y(41))
		unifyValue(y(24))
		unifyValue(y(12))
		unifyValue(y(22))
		unifyValue(y(37))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(15))
		unifyValue(y(36))
		unifyValue(y(38))
		unifyValue(y(45))
		unifyValue(y(28))
		unifyValue(y(57))
		unifyValue(y(32))
		unifyValue(y(33))
		unifyValue(y(34))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyValue(y(6))
		unifyValue(y(25))
		unifyValue(y(35))
		unifyValue(y(1))
		unifyValue(y(40))
		unifyValue(y(20))
		unifyValue(y(21))
		unifyValue(y(5))
		unifyValue(y(58))
		unifyValue(y(49))
		unifyValue(y(3))
		unifyValue(y(48))
		unifyValue(y(59))
		unifyValue(y(62))
		unifyValue(y(60))
		unifyValue(y(10))
		unifyValue(y(26))
		unifyValue(y(61))
		unifyValue(y(0))
		unifyValue(y(27))
		unifyValue(y(9))
		unifyValue(y(4))
		unifyValue(y(47))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(185418)
lbl(216497)	tailCall(x(3) 0)
		endDefinition(183900)
lbl(216502)	putRecord(info [type] x(1))
		setConstant(nil)
		putList(x(7))
		setConstant(imAToken)
		setConstant(nil)
		putList(x(6))
		setConstant(imAVariableOccurrence)
		setValue(x(7))
		putList(x(5))
		setConstant(imAValueNode)
		setValue(x(6))
		putList(x(4))
		setConstant(imAConstruction)
		setValue(x(5))
		putRecord(info [type] x(3))
		setValue(x(4))
		putRecord(info [type] x(8))
		setConstant(nil)
		putList(x(10))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['CodeGen' 'Misc' 'SA' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(8))
		setValue(x(9))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('procedure/2' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putConstant('class' x(54))
		putConstant('class' x(55))
		putConstant('class' x(56))
		putConstant('class' x(57))
		putConstant('class' x(58))
		putConstant('class' x(59))
		putConstant('class' x(60))
		putConstant('class' x(61))
		putConstant('class' x(62))
		putConstant('class' x(63))
		putConstant('class' x(64))
		putConstant('class' x(65))
		putConstant('class' x(66))
		putRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		createVariableMove(y(96) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant('NewUniqueName' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(false)
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setConstant(true)
		setConstant(unit)
		getLiteral(<U: ooDefaultVar> x(5))
		getLiteral(<U: ooFreeFlag> x(6))
		getLiteral(<U: ooRequiredArg> x(7))
		putRecord(env ['false' 'true'] x(5))
		setConstant(false)
		setConstant(true)
lbl(216935)	definition(x(2) 217241 pid('' 2 pos('./compiler/FunRunTime.oz' 4 3) nil 4) <P: 1424> [x(4) y(164) x(5) y(169)])
		putList(x(2))
		setPredicateRef(<Q: 1425>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1427>)
		setValue(x(3))
lbl(216959)	definitionCopy(x(2) 217236 pid('/body' 0 pos('./compiler/FunRunTime.oz' 4 3) [once] 5) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL4
		move(g(0) x(0))
		inlineDot(x(0) 'Core' x(1) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(2) cache)
		inlineDot(x(0) 'Module' x(3) cache)
lbl(216987)	definition(x(4) 217042 pid('ApplyFunctor' 3 pos('./compiler/FunRunTime.oz' 14 6) nil 6) <Q: 1425> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) manager x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		sendMsg(init y(3) 0 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		move(y(3) x(3))
		deAllocateL4
		tailSendMsg(apply x(3) [1 2 url] cache)
		endDefinition(216987)
lbl(217042)	definition(x(3) 217085 pid('' 3 pos('./compiler/FunRunTime.oz' 22 2) nil 5) <Q: 1426> [x(1)])
		allocateL2
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(217042)
lbl(217085)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		putConstant('ApplyFunctor' x(3))
		move(y(2) x(1))
		callBI('AdjoinAt' [x(0) x(3) x(1)]#[x(4)])
lbl(217117)	definition(x(1) 217213 pid('' 3 pos('./compiler/FunRunTime.oz' 27 8) nil 4) <Q: 1427> [g(4) y(0)])
		allocateL4
		putRecord('#' 3 x(3))
		setConstant('`')
		setValue(x(0))
		setConstant('`')
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		putConstant(runTimeLibrary x(1))
		putConstant(unit x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(1))
		move(y(0) x(0))
		sendMsg(valToSubst y(1) 1 cache)
		putConstant(multiple x(0))
		sendMsg(setUse y(1) 1 cache)
		putConstant(~1 x(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(217117)
lbl(217213)	move(x(4) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		getRecord('export' [literals procs tokens] g(5))
		unifyValue(g(1))
		unifyValue(y(0))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(216959)
lbl(217236)	tailCall(x(2) 0)
		endDefinition(216935)
lbl(217241)	putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(bool)
		setConstant(name)
		setConstant(name)
		setConstant(name)
		setConstant(bool)
		setConstant('unit')
		putRecord(record 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant(variable)
		setConstant(nil)
		putList(x(3))
		setConstant(nameToken)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(manager)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord('import' ['Core' 'Module' 'RunTimeLibrary'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		putConstant(value x(4))
		putConstant(value x(6))
		putRecord('export' [literals procs tokens] x(1))
		setValue(x(5))
		setValue(x(4))
		setValue(x(6))
		createVariableMove(y(97) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(217331)	definition(x(2) 259004 pid('' 2 pos('./compiler/FunUnnest.oz' 1 0) nil 4) <P: 1428> [y(156) y(148) y(155) y(160) y(104) y(150) y(152) y(149) y(2) y(142) y(186) y(187) y(114) y(169) y(143)])
		putList(x(2))
		setPredicateRef(<Q: 1429>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1438>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MyTopLevel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MyReporter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Refer>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1439>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1440>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1441>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1442>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1443>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1444>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1445>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1446>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1447>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1448>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1449>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1450>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1451>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1452>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1453>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1454>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1455>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1456>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1457>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1458>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1459>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1460>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1461>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1462>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1463>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1464>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1465>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1466>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1467>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1468>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1469>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1470>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1471>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1472>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1473>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1474>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1475>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1476>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1477>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1478>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1479>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1480>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1481>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1482>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1483>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1484>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1485>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1486>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1487>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1488>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1489>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1490>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1491>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1492>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1493>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1494>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1495>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1496>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1497>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: BA>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stateful>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StateUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ArgCounter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestToTerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestToVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GenerateNewVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestStatement>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestConstraint>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProc>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseImports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseExports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFromProp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMeth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethHead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeClauseBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestCase>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TranslatePattern>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestTry>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestFDList>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1498>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1499>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1500>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1501>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1502>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1503>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1504>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1505>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1506>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1507>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1508>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1509>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1510>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1511>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1512>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1513>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1514>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1515>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1516>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1517>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1518>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1519>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1520>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1521>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1522>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1523>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1524>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1525>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1526>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1527>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1528>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1529>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1530>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1531>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1532>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1533>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1534>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1535>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1536>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1537>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1538>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1539>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1540>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1541>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1542>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1543>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1544>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1545>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1546>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1547>)
		setValue(x(3))
lbl(218303)	definitionCopy(x(2) 258999 pid('/body' 0 pos('./compiler/FunUnnest.oz' 1 0) [once] 46) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) x(1)])
		allocateL7
		move(g(0) x(0))
		inlineDot(x(0) 'FD' x(1) cache)
		inlineDot(x(0) 'Misc' x(2) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'CompilerSupport' x(7) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(218343)	definition(x(8) 218504 pid('CoordinatesOf' 2 pos('./compiler/TupleSyntax.oz' 27 0) nil 4) <Q: 1429> nil)
		match(x(0) ht(218492 [onRecord(fAnd 2 218352) onRecord(fEq 3 218357) onRecord(fAssign 3 218362) onRecord(fOrElse 3 218367) onRecord(fAndThen 3 218372) onRecord(fOpApplyStatement 3 218377) onRecord(fOpApply 3 218418) onRecord(fUnoptimizedDot 2 218459) onRecord(fFdCompare 4 218463) onRecord(fFdIn 4 218470) onRecord(fObjApply 3 218477) onRecord(fRecord 2 218482) onRecord(fOpenRecord 2 218487)]))
lbl(218352)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218357)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218362)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218367)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218372)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218377)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218402)
lbl(218389)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218402)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218402)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218418)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218443)
lbl(218430)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218443)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218443)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218459)	getLiteral(unit x(1))
		return
lbl(218463)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218470)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218477)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218482)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218487)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218492)	callBI('Width' [x(0)]#[x(2)])
		callBI('.' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(218343)
lbl(218504)	definition(x(8) 218642 pid('VarListSub' 4 pos('./compiler/TupleSyntax.oz' 54 0) nil 5) <Q: 1430> nil)
		match(x(1) ht(218627 [onScalar(nil 218513) onRecord('|' 2 218517)]))
lbl(218513)	unify(x(2) x(3))
		return
lbl(218517)	allocateL7
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(4))
		unifyVoid(1)
lbl(218529)	definition(x(1) 218569 pid('' 2 pos('./compiler/TupleSyntax.oz' 58 19) nil 4) unit [x(4)])
		shallowGuard(218556)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(218545)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(218556)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218529)
lbl(218569)	moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(6))
		testBool(y(5) 218594 218602)
		unify(y(3) y(6))
		branch(218613)
lbl(218594)	getList(y(3))
		unifyValue(y(0))
		unifyValue(y(6))
		branch(218613)
lbl(218602)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(218613)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 1430> 9)
lbl(218627)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218504)
lbl(218642)	definition(x(8) 218847 pid('GetPatternVariablesStatement' 3 pos('./compiler/TupleSyntax.oz' 80 0) nil 5) <Q: 1431> nil)
		match(x(0) ht(218841 [onRecord(fVar 2 218651) onRecord(fEq 3 218658) onRecord(fProc 5 218663) onRecord(fFun 5 218668) onRecord(fFunctor 3 218673) onRecord(fClass 4 218678) onRecord(fScanner 6 218683) onRecord(fParser 7 218688) onRecord(fLocal 3 218693) onRecord(fAnd 2 218737) onRecord(fRecord 2 218762) onRecord(fOpenRecord 2 218798) onRecord(fColon 2 218834)]))
lbl(218651)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		return
lbl(218658)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218663)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218668)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218673)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218678)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218683)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218688)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218693)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1430> 9)
lbl(218737)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1431> 7)
lbl(218762)	getVoid(1)
		getVariable(x(0))
lbl(218766)	definition(x(4) 218786 pid('' 3 pos('./compiler/TupleSyntax.oz' 107 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218766)
lbl(218786)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218798)	getVoid(1)
		getVariable(x(0))
lbl(218802)	definition(x(4) 218822 pid('' 3 pos('./compiler/TupleSyntax.oz' 111 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218802)
lbl(218822)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218834)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218841)	unify(x(1) x(2))
		return
		endDefinition(218642)
lbl(218847)	definition(x(8) 218894 pid('GetPatternVariablesExpression' 3 pos('./compiler/TupleSyntax.oz' 121 0) nil 3) <Q: 1432> nil)
		match(x(0) ht(218889 [onRecord(fEq 3 218856) onRecord(fLocal 3 218881) onRecord(fAnd 2 218885)]))
lbl(218856)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1432> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1432> 7)
lbl(218881)	unify(x(1) x(2))
		return
lbl(218885)	unify(x(1) x(2))
		return
lbl(218889)	genFastCall(<Q: 1431> 7)
		endDefinition(218847)
lbl(218894)	definition(x(8) 218932 pid('Contains' 3 pos('./compiler/TupleSyntax.oz' 135 3) nil 5) <Q: 1433> nil)
		testList(x(0) 218926)
lbl(218903)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('==' [x(1) x(0)]#[x(4)] 218920)
		getLiteral(true x(2))
		return
lbl(218920)	move(x(3) x(0))
		genFastCall(<Q: 1433> 7)
lbl(218926)	getLiteral(false x(2))
		return
		endDefinition(218894)
lbl(218932)	definition(x(8) 219022 pid('UniqueVariables' 2 pos('./compiler/TupleSyntax.oz' 142 3) nil 4) <Q: 1434> nil)
		match(x(0) ht(219007 [onScalar(nil 218941) onRecord('|' 2 218945)]))
lbl(218941)	getLiteral(nil x(1))
		return
lbl(218945)	allocateL4
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(3))
		unifyVoid(1)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1433> 6)
		testBool(y(3) 218984 218996)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218984)	getList(y(2))
		unifyValVar(y(0) x(1))
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218996)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(144)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(219007)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(148)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(218932)
lbl(219022)	definition(x(5) 219071 pid('PrivateAttrFeat' 3 pos('./compiler/TupleSyntax.oz' 152 0) nil 3) <Q: 1435> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(0) '#' 2 219048)
lbl(219041)	getVariable(x(0))
		unify(y(2) x(0))
		branch(219051)
lbl(219048)	unify(y(2) x(0))
lbl(219051)	testRecord(y(2) fVar 2 219064)
lbl(219056)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219064)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(219022)
lbl(219071)	definition(x(6) 219182 pid('PrivateMeth' 3 pos('./compiler/TupleSyntax.oz' 161 0) nil 6) <Q: 1436> nil)
		shallowGuard(219169)
		getRecord(fMeth 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(219089)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(3) fEq 3 219110)
lbl(219103)	getVariable(x(0))
		unify(y(2) x(0))
		branch(219113)
lbl(219110)	unify(y(2) x(3))
lbl(219113)	match(y(2) ht(219164 [onRecord(fVar 2 219116) onRecord(fRecord 2 219124) onRecord(fOpenRecord 2 219144)]))
lbl(219116)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219124)	getVariable(x(0))
		testRecord(x(0) fVar 2 219139)
lbl(219131)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219139)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219144)	getVariable(x(0))
		testRecord(x(0) fVar 2 219159)
lbl(219151)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219159)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219164)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219169)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(161)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219071)
lbl(219182)	definition(x(8) 219233 pid('IsDeclared' 3 pos('./compiler/BindingAnalysis.oz' 25 3) nil 5) <Q: 1437> [g(1)])
		match(x(0) ht(219218 [onScalar(nil 219191) onRecord('|' 2 219195)]))
lbl(219191)	getLiteral(false x(2))
		return
lbl(219195)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(4)] 219212)
		getLiteral(true x(2))
		return
lbl(219212)	move(x(3) x(0))
		genFastCall(<Q: 1437> 7)
lbl(219218)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(29)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(219182)
lbl(219233)	inlineDot(x(7) concatenateAtomAndInt x(7) cache)
lbl(219239)	definition(x(8) 219366 pid('Generate' 5 pos('./compiler/BindingAnalysis.oz' 34 3) nil 5) <Q: 1438> [x(7) g(2)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1437> 6)
		testBool(y(6) 219305 219353)
lbl(219285)	move(y(3) x(0))
		inlinePlus1(x(0) x(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1438> 11)
lbl(219305)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(lookupVariableInEnv y(1) 2 cache)
		testLiteral(y(6) undeclared 219285)
lbl(219321)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(y(3) x(1))
		inlinePlus1(x(1) x(2))
		move(y(2) x(1))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(5) y(4))
		deAllocateL7
		return
lbl(219353)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(36)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219239)
lbl(219366)	putList(x(7))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [env freeVariablesOfQuery] x(8))
		setConstant(nil)
		setConstant(unit)
		putRecord('feat' [<M: MyReporter> <M: MyTopLevel>] x(9))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(219388)	definition(x(10) 219435 pid('BindingAnalysis,init/fast' 2 pos('./compiler/BindingAnalysis.oz' 50 6) nil 4) <Q: 1439> nil)
		putConstant(nil x(2))
		inlineAssign(env x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(freeVariablesOfQuery x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: MyReporter> x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(219388)
lbl(219435)	definition(x(11) 219470 pid('BindingAnalysis,init/slow' 1 pos('./compiler/BindingAnalysis.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1439> 5)
		endDefinition(219435)
lbl(219470)	putRecord('#' [1 2 fast] x(12))
		setConstant(init)
		setValue(x(11))
		setValue(x(10))
lbl(219480)	definition(x(10) 219568 pid('BindingAnalysis,openScope/fast' 0 pos('./compiler/BindingAnalysis.oz' 56 6) nil 6) <Q: 1440> [g(3)])
		inlineAt(env x(0) cache)
		testList(x(0) 219534)
lbl(219494)	getVariable(x(1))
		callBI('NewDictionary' nil#[x(2)])
		inlineDot(x(1) 2 x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(3)])
		createVariable(x(1))
		putRecord('#' 4 x(5))
		setValue(x(2))
		setValue(x(3))
		setValue(x(1))
		setValue(x(1))
		putList(x(4))
		setValue(x(5))
		setValue(x(0))
		inlineAssign(env x(4) cache)
		return
lbl(219534)	callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		createVariable(x(2))
		putRecord('#' 4 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		setValue(x(2))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		inlineAssign(env x(3) cache)
		return
		endDefinition(219480)
lbl(219568)	definition(x(11) 219582 pid('BindingAnalysis,openScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 56 6) nil 1) unit nil)
		getLiteral(openScope x(0))
		genFastCall(<Q: 1440> 1)
		endDefinition(219568)
lbl(219582)	putRecord('#' [1 2 fast] x(13))
		setConstant(openScope)
		setValue(x(11))
		setValue(x(10))
lbl(219592)	definition(x(10) 219622 pid('BindingAnalysis,getVars/fast' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 2) <Q: 1441> nil)
		inlineAt(env x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		return
		endDefinition(219592)
lbl(219622)	definition(x(11) 219648 pid('BindingAnalysis,getVars/slow' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1441> 3)
		endDefinition(219622)
lbl(219648)	putRecord('#' [1 2 fast] x(14))
		setConstant(getVars)
		setValue(x(11))
		setValue(x(10))
lbl(219658)	definition(x(10) 219779 pid('BindingAnalysis,getAllVariables/fast' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 5) <Q: 1442> [g(4) g(5)])
		allocateL2
		inlineAt(env x(4) cache)
lbl(219670)	definition(x(1) 219735 pid('' 3 pos('./compiler/BindingAnalysis.oz' 69 4) nil 7) unit [g(1)])
		shallowGuard(219722)
		getRecord('#' 4 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(219690)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		putConstant(x x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(219722)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(69)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219670)
lbl(219735)	move(x(0) y(0))
		move(x(4) x(0))
		putConstant(x x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
lbl(219750)	definition(x(1) 219765 pid('' 3 pos('./compiler/BindingAnalysis.oz' 72 3) nil 3) unit nil)
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(219750)
lbl(219765)	moveMoveYXYX(y(1) x(0) y(0) x(3))
		putConstant(nil x(2))
		deAllocateL2
		genFastCall(<P: 163> 9)
		endDefinition(219658)
lbl(219779)	definition(x(11) 219805 pid('BindingAnalysis,getAllVariables/slow' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1442> 3)
		endDefinition(219779)
lbl(219805)	putRecord('#' [1 2 fast] x(15))
		setConstant(getAllVariables)
		setValue(x(11))
		setValue(x(10))
lbl(219815)	definition(x(10) 219850 pid('BindingAnalysis,closeScope/fast' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) <Q: 1443> nil)
		inlineAt(env x(1) cache)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		inlineAssign(env x(2) cache)
		return
		endDefinition(219815)
lbl(219850)	definition(x(11) 219876 pid('BindingAnalysis,closeScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1443> 3)
		endDefinition(219850)
lbl(219876)	putRecord('#' [1 2 fast] x(16))
		setConstant(closeScope)
		setValue(x(11))
		setValue(x(10))
lbl(219886)	definition(x(10) 220011 pid('BindingAnalysis,bind/fast' 3 pos('./compiler/BindingAnalysis.oz' 80 6) nil 7) <Q: 1444> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 220004)
lbl(219926)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220004)	unify(x(2) x(5))
		deAllocateL8
		return
		endDefinition(219886)
lbl(220011)	definition(x(11) 220052 pid('BindingAnalysis,bind/slow' 1 pos('./compiler/BindingAnalysis.oz' 80 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1444> 7)
		endDefinition(220011)
lbl(220052)	putRecord('#' [1 2 fast] x(17))
		setConstant(bind)
		setValue(x(11))
		setValue(x(10))
lbl(220062)	definition(x(10) 220231 pid('BindingAnalysis,bindImport/fast' 4 pos('./compiler/BindingAnalysis.oz' 91 6) nil 8) <Q: 1445> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(4) cache)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		getRecord('#' 4 x(4))
		unifyVariable(x(5))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(4))
		callBI('Dictionary.condGet' [x(5) x(0) x(4)]#[x(6)])
		testLiteral(x(6) undeclared 220183)
lbl(220102)	move(g(1) x(4))
		inlineDot(x(4) restrictedVariable x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(0) y(4) x(3) y(5))
		moveMoveXYXY(x(5) y(6) x(7) y(7))
		move(x(2) x(8))
		move(x(1) x(2))
		move(x(8) x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220183)	getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(5))
		setConstant(' imported more than once')
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		move(x(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(4) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(220062)
lbl(220231)	definition(x(11) 220278 pid('BindingAnalysis,bindImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 91 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1445> 9)
		endDefinition(220231)
lbl(220278)	putRecord('#' [1 2 fast] x(18))
		setConstant(bindImport)
		setValue(x(11))
		setValue(x(10))
lbl(220288)	definition(x(10) 220457 pid('BindingAnalysis,bindExport/fast' 3 pos('./compiler/BindingAnalysis.oz' 107 6) nil 7) <Q: 1446> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 220406)
lbl(220328)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220406)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(6))
		setValue(x(0))
		putRecord('#' 3 x(4))
		setConstant('variable ')
		setValue(x(6))
		setConstant(' declared more than once')
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(0))
		move(x(4) x(2))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(220288)
lbl(220457)	definition(x(11) 220498 pid('BindingAnalysis,bindExport/slow' 1 pos('./compiler/BindingAnalysis.oz' 107 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1446> 7)
		endDefinition(220457)
lbl(220498)	putRecord('#' [1 2 fast] x(19))
		setConstant(bindExport)
		setValue(x(11))
		setValue(x(10))
		createVariable(y(0))
lbl(220510)	definition(x(10) 220682 pid('BindingAnalysis,refer/fast' 3 pos('./compiler/BindingAnalysis.oz' 123 6) nil 5) <Q: 1447> [y(0)])
		allocateL5
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(3) undeclared 220605)
lbl(220543)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
lbl(220605)	createVariableMove(y(4) x(0))
		sendMsg(isRestricted y(3) 1 cache)
		testBool(y(4) 220665 220654)
		getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 2 x(2))
		setConstant('illegal use of imported variable ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(220665)
lbl(220654)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220665)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220510)
lbl(220682)	definition(x(11) 220723 pid('BindingAnalysis,refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 123 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1447> 7)
		endDefinition(220682)
lbl(220723)	putRecord('#' [1 2 fast] x(20))
		setConstant(refer)
		setValue(x(11))
		setValue(x(10))
lbl(220733)	definition(x(10) 220967 pid('BindingAnalysis,referImport/fast' 5 pos('./compiler/BindingAnalysis.oz' 139 6) nil 8) <Q: 1448> [y(0)])
		allocateL7
		inlineAt(env x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(5) undeclared 220836)
lbl(220771)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		getLiteral(false y(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(2) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220836)	move(y(3) x(0))
		sendMsg(isRestricted y(5) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(isDenied y(5) 3 cache)
		testBool(y(6) 220931 220920)
		getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(y(0))
		putRecord('#' 2 x(3))
		setConstant('illegal use of imported variable ')
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(y(2))
		putRecord(hint [l m] x(6))
		setConstant('Unknown feature')
		setValue(x(7))
		putList(x(1))
		setValue(x(6))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('binding analysis error' x(2))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(220931)
lbl(220920)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(149)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220931)	testLiteral(y(3) unit 220950)
lbl(220935)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220950)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220733)
lbl(220967)	definition(x(11) 221020 pid('BindingAnalysis,referImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 139 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1448> 11)
		endDefinition(220967)
lbl(221020)	putRecord('#' [1 2 fast] x(21))
		setConstant(referImport)
		setValue(x(11))
		setValue(x(10))
lbl(221030)	definition(x(10) 221073 pid('BindingAnalysis,referUnchecked/fast' 3 pos('./compiler/BindingAnalysis.oz' 162 6) nil 5) <Q: 1449> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(221030)
lbl(221073)	definition(x(11) 221114 pid('BindingAnalysis,referUnchecked/slow' 1 pos('./compiler/BindingAnalysis.oz' 162 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1449> 7)
		endDefinition(221073)
lbl(221114)	putRecord('#' [1 2 fast] x(22))
		setConstant(referUnchecked)
		setValue(x(11))
		setValue(x(10))
lbl(221124)	definition(x(10) 221176 pid('BindingAnalysis,referExpansionOcc/fast' 3 pos('./compiler/BindingAnalysis.oz' 166 6) nil 5) <Q: 1450> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(2) undeclared 221159)
lbl(221154)	getLiteral(undeclared y(1))
		deAllocateL3
		return
lbl(221159)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(221124)
lbl(221176)	definition(x(11) 221217 pid('BindingAnalysis,referExpansionOcc/slow' 1 pos('./compiler/BindingAnalysis.oz' 166 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1450> 7)
		endDefinition(221176)
lbl(221217)	putRecord('#' [1 2 fast] x(23))
		setConstant(referExpansionOcc)
		setValue(x(11))
		setValue(x(10))
lbl(221227)	definition(x(10) 221326 pid('BindingAnalysis,Refer/fast' 4 pos('./compiler/BindingAnalysis.oz' 174 6) nil 7) <Q: 1451> [g(2) g(6) y(0)])
		match(x(2) ht(221311 [onScalar(nil 221236) onRecord('|' 2 221280)]))
lbl(221236)	allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(y(1) x(1))
		sendMsg(lookupVariableInEnv x(2) 2 cache)
		testLiteral(y(1) undeclared 221265)
lbl(221263)	deAllocateL2
		return
lbl(221265)	inlineAt(freeVariablesOfQuery x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(221280)	getVarVar(x(2) x(4))
		getRecord('#' 4 x(2))
		unifyVariable(x(2))
		unifyVoid(3)
		putConstant(undeclared x(5))
		callBI('Dictionary.condGet' [x(2) x(0) x(5)]#[x(6)])
		testLiteral(x(6) undeclared 221307)
lbl(221301)	move(x(4) x(2))
		genCall(gci(g(2) true <M: Refer> true 4) 0)
lbl(221307)	unify(x(3) x(6))
		return
lbl(221311)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(187)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(221227)
lbl(221326)	definition(x(11) 221373 pid('BindingAnalysis,Refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 174 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1451> 9)
		endDefinition(221326)
lbl(221373)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: Refer>)
		setValue(x(11))
		setValue(x(10))
lbl(221383)	definition(x(10) 221525 pid('BindingAnalysis,generate/fast' 3 pos('./compiler/BindingAnalysis.oz' 189 6) nil 7) <Q: 1452> [g(6) x(3) g(2)])
		allocateL9
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(y(1))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(1 x(6))
		callBI('Dictionary.condGet' [x(4) x(0) x(6)]#[x(3)])
		getSelf(x(6))
		inlineDot(x(6) <M: MyTopLevel> x(6) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(x(4) y(6))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		move(y(4) x(2))
		putConstant(generated x(1))
		sendMsg(init y(8) 3 cache)
		unify(y(8) y(5))
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(1))
		setValue(y(6))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL9
		return
		endDefinition(221383)
lbl(221525)	definition(x(11) 221566 pid('BindingAnalysis,generate/slow' 1 pos('./compiler/BindingAnalysis.oz' 189 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1452> 7)
		endDefinition(221525)
lbl(221566)	putRecord('#' [1 2 fast] x(25))
		setConstant(generate)
		setValue(x(11))
		setValue(x(10))
lbl(221576)	definition(x(10) 221730 pid('BindingAnalysis,generateForOuterScope/fast' 3 pos('./compiler/BindingAnalysis.oz' 198 6) nil 8) <Q: 1453> [g(6) x(3) g(2)])
		allocateL10
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(y(0))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 4 x(4))
		unifyVariable(y(2))
		unifyVariable(x(6))
		unifyVariable(y(3))
		unifyVariable(y(4))
		putConstant(1 x(7))
		callBI('Dictionary.condGet' [x(6) x(0) x(7)]#[x(3)])
		getSelf(x(7))
		inlineDot(x(7) <M: MyTopLevel> x(7) cache)
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(x(6) y(7))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(7) x(1))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(2))
		putConstant(generated x(1))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(4))
		unifyValVar(y(6) x(1))
		putRecord('#' 4 x(4))
		setValue(y(2))
		setValue(y(7))
		setValue(y(3))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(y(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(3))
		inlineAssign(env x(2) cache)
		deAllocateL10
		return
		endDefinition(221576)
lbl(221730)	definition(x(11) 221771 pid('BindingAnalysis,generateForOuterScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 198 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1453> 7)
		endDefinition(221730)
lbl(221771)	putRecord('#' [1 2 fast] x(26))
		setConstant(generateForOuterScope)
		setValue(x(11))
		setValue(x(10))
lbl(221781)	definition(x(10) 221809 pid('BindingAnalysis,getFreeVariablesOfQuery/fast' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) <Q: 1454> [g(7)])
		inlineAt(freeVariablesOfQuery x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(freeVariablesOfQuery x(0) cache)
		return
		endDefinition(221781)
lbl(221809)	definition(x(11) 221835 pid('BindingAnalysis,getFreeVariablesOfQuery/slow' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1454> 3)
		endDefinition(221809)
lbl(221835)	putRecord('#' [1 2 fast] x(27))
		setConstant(getFreeVariablesOfQuery)
		setValue(x(11))
		setValue(x(10))
		putRecord('#' 16 x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(10) x(1))
		move(x(8) x(2))
		move(x(9) x(3))
		move(x(7) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('BindingAnalysis' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(221920)	definition(x(7) 222073 pid('NormalizeFdCompare' 6 pos('./compiler/UnnestFD.oz' 33 3) nil 9) <Q: 1455> nil)
		putList(x(8))
		setValue(x(2))
		setConstant(nil)
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		putRecord(fOpApply 3 x(6))
		setConstant('-')
		setValue(x(7))
		setValue(x(3))
		match(x(0) ht(222058 [onScalar('=:' 221951) onScalar('<:' 221958) onScalar('>:' 221990) onScalar('=<:' 222024) onScalar('>=:' 222031) onScalar('\\=:' 222051)]))
lbl(221951)	getLiteral('=:' x(4))
		unify(x(5) x(6))
		return
lbl(221958)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(3))
		getListValVar(x(0) x(6) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(3))
		return
lbl(221990)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('-')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(1)
		unifyValue(x(3))
		getList(x(2))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(222024)	getLiteral('=<:' x(4))
		unify(x(5) x(6))
		return
lbl(222031)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(222051)	getLiteral('\\=:' x(4))
		unify(x(5) x(6))
		return
lbl(222058)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(55)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(221920)
lbl(222073)	definition(x(7) 222208 pid('AreLinearConstraints' 2 pos('./compiler/UnnestFD.oz' 58 3) nil 5) <Q: 1456> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 222152)
lbl(222090)	getVarVar(x(2) x(3))
		shallowGuard(222152)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(222110)	shallowThen
		move(x(4) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(2) 222136 222141)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1456> 5)
lbl(222136)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222141)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(62)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222152)	testRecord(y(0) fOpApply 3 222193)
lbl(222157)	getVarVar(x(0) x(1))
		shallowGuard(222193)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(222177)	shallowThen
		testRecord(x(1) fVar 2 222188)
lbl(222183)	getLiteral(true y(1))
		deAllocateL3
		return
lbl(222188)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222193)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(69)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222073)
lbl(222208)	definition(x(7) 222341 pid('MakeTuples' 5 pos('./compiler/UnnestFD.oz' 72 3) nil 8) <Q: 1457> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222286)
lbl(222233)	getVarVar(x(5) x(6))
		shallowGuard(222286)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222253)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1457> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1457> 11)
lbl(222286)	testRecord(y(0) fOpApply 3 222326)
lbl(222291)	getVarVar(x(0) x(1))
		shallowGuard(222326)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222311)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyValue(x(2))
		unifyValue(y(4))
		deAllocateL7
		return
lbl(222326)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222208)
lbl(222341)	definition(x(7) 222409 pid('ProductToVariableList' 2 pos('./compiler/UnnestFD.oz' 89 6) nil 5) <Q: 1458> nil)
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(222386 [onRecord(fOpApply 3 222354) onRecord(fVar 2 222399)]))
lbl(222354)	getVarVar(x(2) x(3))
		shallowGuard(222386)
		getLiteral('*' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(222374)	shallowThen
		getListValVar(x(1) x(2) x(1))
		move(x(4) x(0))
		deAllocateL1
		genFastCall(<Q: 1458> 5)
lbl(222386)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(98)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222399)	getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL1
		return
		endDefinition(222341)
lbl(222409)	definition(x(7) 222575 pid('MakeTupleTuples' 5 pos('./compiler/UnnestFD.oz' 101 6) nil 8) <Q: 1459> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222487)
lbl(222434)	getVarVar(x(5) x(6))
		shallowGuard(222487)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222454)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1459> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1459> 11)
lbl(222487)	testRecord(y(0) fOpApply 3 222560)
lbl(222492)	getVarVar(x(0) x(1))
		shallowGuard(222560)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222512)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyVariable(x(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(5))
		move(x(2) x(0))
		move(x(4) x(1))
		deAllocateL7
		genFastCall(<Q: 1458> 5)
lbl(222560)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(113)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222409)
lbl(222575)	definition(x(7) 222785 pid('NegDNF' 3 pos('./compiler/UnnestFD.oz' 121 6) nil 7) <Q: 1460> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 222661)
lbl(222595)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(222661)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(222617)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1460> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222661)	match(y(0) ht(222719 [onRecord(fOpApply 3 222664) onRecord(fInt 2 222732) onRecord(fVar 2 222751)]))
lbl(222664)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222719)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222686)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyValue(x(3))
		unifyLiteral(nil)
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222719)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(135)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222732)	getVarVar(x(0) x(1))
		getRecord(fInt 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL3
		return
lbl(222751)	getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(~1)
		unifyValue(y(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL3
		return
		endDefinition(222575)
lbl(222785)	definition(x(7) 222980 pid('MulDNF' 4 pos('./compiler/UnnestFD.oz' 138 6) nil 8) <Q: 1461> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 222875)
lbl(222807)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(222875)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222829)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(6))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(7) y(3))
		move(x(4) x(0))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222875)	testRecord(y(1) fOpApply 3 222956)
lbl(222880)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222956)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222902)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(1))
		unifyLiteral(nil)
		move(x(3) y(3))
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222956)	getRecord(fOpApply 3 y(3))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
		endDefinition(222785)
lbl(222980)	definition(x(7) 223272 pid('MakeDNF' 2 pos('./compiler/UnnestFD.oz' 153 6) nil 6) <Q: 1462> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 223060)
lbl(222997)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(223060)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(223019)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(5) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(223060)	testRecord(y(0) fOpApply 3 223144)
lbl(223065)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223144)
		getLiteral('-' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223087)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYXY(x(3) y(1) x(2) y(2))
		move(x(4) x(1))
		genFastCall(<Q: 1462> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApply 3 x(0))
		setConstant('~')
		setValue(x(1))
		setValue(y(2))
		move(y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(223144)	testRecord(y(0) fOpApply 3 223187)
lbl(223149)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223187)
		getLiteral('~' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyLiteral(nil)
lbl(223165)	shallowThen
		move(x(2) y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1460> 7)
lbl(223187)	match(y(0) ht(223247 [onRecord(fOpApply 3 223190) onRecord(fInt 2 223260) onRecord(fVar 2 223265)]))
lbl(223190)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223247)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223212)	shallowThen
		moveMoveXYXY(x(3) y(0) x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL5
		genFastCall(<Q: 1461> 9)
lbl(223247)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(169)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223260)	unify(y(1) y(0))
		deAllocateL5
		return
lbl(223265)	unify(y(1) y(0))
		deAllocateL5
		return
		endDefinition(222980)
lbl(223272)	definition(x(7) 223506 pid('NormalizeProduct' 3 pos('./compiler/UnnestFD.oz' 174 6) nil 13) <Q: 1463> nil)
		allocateL4
		move(x(0) y(0))
		match(y(0) ht(223473 [onRecord(fOpApply 3 223285) onRecord(fInt 2 223486) onRecord(fVar 2 223496)]))
lbl(223285)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223473)
		getLiteral('*' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223307)	shallowThen
		move(x(3) y(0))
		match(y(0) ht(223388 [onRecord(fOpApply 3 223314) onRecord(fInt 2 223401) onRecord(fVar 2 223428)]))
lbl(223314)	getVarVar(x(0) x(4))
		getVariable(x(7))
		shallowGuard(223388)
		getLiteral('*' x(0))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(223336)	shallowThen
		putList(x(12))
		setValue(x(6))
		setConstant(nil)
		putList(x(11))
		setValue(x(8))
		setValue(x(12))
		putRecord(fOpApply 3 x(10))
		setConstant('*')
		setValue(x(11))
		setValue(x(5))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(4))
		setValue(x(0))
		setValue(x(9))
		putRecord(fOpApply 3 x(3))
		setConstant('*')
		setValue(x(4))
		setValue(x(7))
		move(x(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1463> 7)
lbl(223388)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(197)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223401)	getVariable(y(0))
		move(x(1) y(1))
		move(x(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1463> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('*' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
lbl(223428)	moveMoveXYXY(x(2) y(1) x(5) y(2))
		move(x(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(3) fOne 223451)
lbl(223446)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(223451)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(3))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(223473)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(204)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223486)	getVariable(x(0))
		unify(x(1) x(0))
		getLiteral(fOne x(2))
		deAllocateL4
		return
lbl(223496)	getNumber(1 x(1))
		unify(x(2) y(0))
		deAllocateL4
		return
		endDefinition(223272)
lbl(223506)	definition(x(7) 223840 pid('Normalize' 3 pos('./compiler/UnnestFD.oz' 207 6) nil 8) <Q: 1464> nil)
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 223695)
lbl(223526)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223695)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223548)	shallowThen
		moveMoveXYXY(x(6) y(0) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1464> 6)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(1))
		testRecord(y(7) fZero 1 223600)
lbl(223595)	unify(y(2) y(5))
		deAllocateL8
		return
lbl(223600)	match(y(5) ht(223673 [onRecord(fZero 1 223603) onRecord(fOpApply 3 223608)]))
lbl(223603)	unify(y(2) y(7))
		deAllocateL8
		return
lbl(223608)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223673)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223630)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(y(3))
		getListValVar(x(1) x(0) x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(6))
		unifyValue(x(2))
		getListValVar(x(6) x(3) x(7))
		getList(x(7))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223673)	getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223695)	match(y(0) ht(223772 [onRecord(fOpApply 3 223698) onRecord(fInt 2 223785) onRecord(fVar 2 223799)]))
lbl(223698)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) '*' 223772)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(5) fOne 223737)
lbl(223726)	unify(y(1) y(4))
		getRecord(fZero 1 y(2))
		unifyValue(y(3))
		deAllocateL8
		return
lbl(223737)	getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223772)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(245)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223785)	getVarVar(x(0) x(1))
		unify(y(1) x(0))
		getRecord(fZero 1 y(2))
		unifyValue(x(1))
		deAllocateL8
		return
lbl(223799)	getVoid(1)
		getVariable(x(0))
		getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(0))
		getList(x(3))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(223506)
lbl(223840)	definition(x(7) 224069 pid('SimplifyRest' 4 pos('./compiler/UnnestFD.oz' 250 6) nil 9) <Q: 1465> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 224005)
lbl(223862)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(224005)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(223884)	shallowThen
		moveMoveXYXY(x(4) y(0) x(7) y(4))
		move(x(6) y(5))
		testRecord(y(0) fOpApply 3 223959)
lbl(223898)	getVarVar(x(0) x(5))
		shallowGuard(223959)
		getLiteral('*' x(0))
		getList(x(5))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fVar 2 x(5))
		unifyValVar(y(1) x(8))
lbl(223933)	shallowThen
		moveMoveXYYX(x(0) y(0) y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1465> 8)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL7
		return
lbl(223959)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(6) fZero 1 223983)
lbl(223978)	unify(y(3) y(0))
		deAllocateL7
		return
lbl(223983)	getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(5))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyLiteral(nil)
		deAllocateL7
		return
lbl(224005)	testRecord(y(0) fOpApply 3 224059)
lbl(224010)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(224059)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fVar 2 x(1))
		unifyValVar(y(1) x(3))
lbl(224047)	shallowThen
		unify(y(2) x(0))
		getRecord(fZero 1 y(3))
		unifyValue(x(2))
		deAllocateL7
		return
lbl(224059)	getNumber(0 y(2))
		unify(y(3) y(0))
		deAllocateL7
		return
		endDefinition(223840)
lbl(224069)	definition(x(7) 224364 pid('Simplify' 2 pos('./compiler/UnnestFD.oz' 274 6) nil 10) <Q: 1466> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 224357)
lbl(224086)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(224357)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(224108)	shallowThen
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		move(x(4) y(3))
		testRecord(y(0) fOpApply 3 224327)
lbl(224122)	getVarVar(x(0) x(3))
		getVariable(x(6))
		shallowGuard(224327)
		getLiteral('*' x(0))
		getList(x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(7))
		getList(x(3))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fVar 2 x(3))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(224160)	shallowThen
		moveMoveXYXY(x(0) y(0) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYYX(x(6) y(7) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(9) fZero 1 224245)
lbl(224193)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(fVar 2 x(4))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(3))
		deAllocateL10
		return
lbl(224245)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('*')
		unifyVariable(x(3))
		unifyValue(y(7))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fVar 2 x(7))
		unifyValue(y(5))
		unifyValue(y(6))
		getList(x(2))
		unifyVariable(x(8))
		unifyLiteral(nil)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(6))
		move(y(9) x(0))
		move(x(8) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224327)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		move(y(2) x(0))
		move(x(2) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224357)	unify(y(1) y(0))
		deAllocateL10
		return
		endDefinition(224069)
lbl(224364)	definition(x(7) 225371 pid('MakeFdCompareStatement' 5 pos('./compiler/UnnestFD.oz' 301 3) nil 13) <Q: 1467> [y(1)])
		allocateL(11)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(4) fZero 1 224599)
lbl(224421)	getVariable(x(0))
		match(y(2) ht(224586 [onScalar('=:' 224426) onScalar('=<:' 224454) onScalar('\\=:' 224520)]))
lbl(224426)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fInt 2 x(1))
		unifyValue(y(3))
		unifyValue(x(0))
		getRecord(fInt 2 x(2))
		unifyNumber(0)
		unifyValue(y(0))
		deAllocateL
		return
lbl(224454)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`true`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224520)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`false`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224586)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(319)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224599)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(5) 225066 225358)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 224911 225055)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setValue(y(6))
		putRecord(fAtom 2 y(6))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 y(2))
		setVariable(x(0))
		setValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(224699)	definition(x(1) 224739 pid('' 2 pos('./compiler/UnnestFD.oz' 327 19) nil 4) unit nil)
		shallowGuard(224726)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(224715)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(224726)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224699)
lbl(224739)	move(y(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 224816 224900)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(4) x(6))
		getListValVar(x(6) y(6) x(7))
		getList(x(7))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224816)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(5))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fVar 2 x(4))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(6))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(7))
		getListValVar(x(7) y(4) x(8))
		getListValVar(x(8) y(6) x(9))
		getList(x(9))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224900)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224911)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(3))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(5))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(6))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(10))
		getListValVar(x(10) x(1) x(11))
		getListValVar(x(11) x(2) x(12))
		getList(x(12))
		unifyValue(x(3))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225055)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225066)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		testBool(y(4) 225179 225279)
		getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(225290)
lbl(225179)	getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(5))
		getRecord(fInt 2 x(2))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyNumber(0)
		unifyValue(y(0))
		branch(225290)
lbl(225279)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(345)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225290)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(7) x(6))
		getListValVar(x(6) y(8) x(7))
		getListValVar(x(7) y(9) x(8))
		getList(x(8))
		unifyValue(y(10))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225358)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224364)
lbl(225371)	definition(x(7) 226485 pid('MakeFdCompareExpression' 6 pos('./compiler/UnnestFD.oz' 362 3) nil 18) <Q: 1468> [y(1)])
		allocateL(12)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariableMove(y(3) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(5) fZero 1 225577)
lbl(225431)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(x(0))
		putRecord(fInt 2 x(4))
		setValue(y(4))
		setValue(x(0))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fOpApply 3 x(6))
		unifyLiteral('.')
		unifyVariable(x(8))
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(fVar 2 x(9))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(4) x(1) x(13))
		getListValVar(x(13) x(2) x(14))
		getListValVar(x(14) x(3) x(15))
		getList(x(15))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225577)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 226146 226472)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 225957 226135)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 y(3))
		setVariable(x(0))
		setValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(225677)	definition(x(1) 225717 pid('' 2 pos('./compiler/UnnestFD.oz' 385 19) nil 4) unit nil)
		shallowGuard(225704)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(225693)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(225704)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225677)
lbl(225717)	move(y(6) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(4) 225828 225946)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(3) x(12))
		getList(x(12))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225828)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(3) x(14))
		getList(x(14))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225946)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225957)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(4))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(0))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226135)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226146)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 226259 226359)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(226370)
lbl(226259)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyValue(y(4))
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(0))
		branch(226370)
lbl(226359)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226370)	getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225371)
lbl(226485)	definition(x(7) 226630 pid('GetVarsFromFdCompare' 3 pos('./compiler/UnnestFD.oz' 433 2) nil 6) <Q: 1469> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 226550)
lbl(226505)	getVarVar(x(3) x(4))
		shallowGuard(226550)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(226525)	shallowThen
		move(x(5) y(0))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226550)	match(y(0) ht(226597 [onRecord(fOpApply 3 226553) onRecord(fInt 2 226610) onRecord(fVar 2 226615) onRecord(fZero 1 226623)]))
lbl(226553)	getVarVar(x(0) x(1))
		shallowGuard(226597)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(226573)	shallowThen
		moveMoveXYYX(x(2) y(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226597)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(446)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226610)	unify(y(1) y(2))
		deAllocateL4
		return
lbl(226615)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(226623)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(226485)
lbl(226630)	definition(x(7) 226694 pid('GetVarsFromFdIn' 4 pos('./compiler/UnnestFD.oz' 449 2) nil 6) <Q: 1470> nil)
		testRecord(x(0) fRecord 2 226685)
lbl(226641)	allocateL2
		getVoid(1)
		getVariable(x(4))
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getListValVar(x(1) x(4) x(1))
		move(x(3) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1470> 8)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(226685)	unify(x(1) x(2))
		getNumber(0 x(3))
		return
		endDefinition(226630)
lbl(226694)	definition(x(7) 226876 pid('NormalizeCondisExpression' 5 pos('./compiler/UnnestFD.oz' 460 2) nil 8) <Q: 1471> nil)
		match(x(0) ht(226861 [onRecord(fFdCompare 4 226703) onRecord(fFdIn 4 226812)]))
lbl(226703)	allocateL9
		getVarVar(x(0) x(6))
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1466> 4)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1469> 6)
		getNumber(1 y(3))
		getRecord(fFdCompare 4 y(4))
		unifyValue(y(5))
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getRecord(fInt 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(y(6) x(0))
		callBI('~' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL9
		return
lbl(226812)	allocateL2
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		match(x(5) ht(226843 [onScalar('::' 226824) onScalar(':::' 226835)]))
lbl(226824)	getList(x(1))
		unifyValue(x(6))
		unifyValue(x(2))
		getNumber(1 x(3))
		branch(226856)
lbl(226835)	move(x(6) x(0))
		genFastCall(<Q: 1470> 8)
		branch(226856)
lbl(226843)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(473)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(226856)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(226861)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226694)
lbl(226876)	definition(x(7) 226971 pid('NormalizeCondisClause' 5 pos('./compiler/UnnestFD.oz' 478 2) nil 5) <Q: 1472> nil)
		match(x(0) ht(226956 [onScalar(nil 226885) onRecord('|' 2 226895)]))
lbl(226885)	unify(x(1) x(2))
		getNumber(0 x(3))
		getLiteral(nil x(4))
		return
lbl(226895)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1471> 10)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1472> 10)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		getList(y(3))
		unifyValue(y(6))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(226956)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226876)
lbl(226971)	definition(x(7) 227175 pid('RenameFdCompare' 3 pos('./compiler/UnnestFD.oz' 498 2) nil 7) <Q: 1473> [g(8)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 227057)
lbl(226991)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(227057)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(227013)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(227057)	match(y(0) ht(227128 [onRecord(fOpApply 3 227060) onRecord(fInt 2 227141) onRecord(fVar 2 227146) onRecord(fZero 1 227168)]))
lbl(227060)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(227128)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(227082)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYYX(x(3) y(2) y(1) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(227128)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(514)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227141)	unify(y(2) y(0))
		deAllocateL3
		return
lbl(227146)	getVarVar(x(0) x(1))
		getRecord(fVar 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		move(y(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL3
		return
lbl(227168)	unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(226971)
lbl(227175)	definition(x(7) 227257 pid('RenameFdIn' 3 pos('./compiler/UnnestFD.oz' 517 2) nil 10) <Q: 1474> [g(8)])
		testRecord(x(0) fRecord 2 227251)
lbl(227186)	getVarVar(x(3) x(4))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord(fVar 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(0))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord(fVar 2 x(2))
		unifyVariable(x(8))
		unifyValue(x(6))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		callBI('Dictionary.get' [x(1) x(5)]#[x(0)])
		unify(x(0) x(8))
		move(x(7) x(0))
		move(x(9) x(2))
		genFastCall(<Q: 1474> 7)
lbl(227251)	unify(x(2) x(0))
		return
		endDefinition(227175)
lbl(227257)	definition(x(7) 228662 pid('GenerateCondisExpression' 4 pos('./compiler/UnnestFD.oz' 528 2) nil 18) <Q: 1475> [y(1) g(8)])
		allocateL(12)
		move(x(0) y(0))
		match(y(0) ht(228398 [onRecord(fFdCompare 4 227271) onRecord(fFdIn 4 228411)]))
lbl(227271)	getVarVar(x(4) x(5))
		getVarVar(x(6) x(7))
		shallowGuard(228398)
		getRecord(fInt 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(227287)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(8) y(3))
		move(x(7) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1473> 6)
		testRecord(y(5) fZero 1 227504)
lbl(227315)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setVariable(x(5))
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		move(y(3) x(2))
		callBI('~' [x(2)]#[x(3)])
		unify(x(3) x(5))
		putRecord(fAtom 2 x(3))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(5))
		setConstant(1)
		setValue(y(4))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fAtom 2 x(3))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(1) x(14))
		getListValVar(x(14) x(2) x(15))
		getListValVar(x(15) x(3) x(16))
		getListValVar(x(16) x(4) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227504)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 228067 228387)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 227869 228056)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 y(2))
		setValue(y(3))
		setValue(y(4))
lbl(227589)	definition(x(1) 227629 pid('' 2 pos('./compiler/UnnestFD.oz' 550 14) nil 4) unit nil)
		shallowGuard(227616)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(227605)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(227616)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(227589)
lbl(227629)	move(y(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 227740 227858)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(4))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(2) x(12))
		getList(x(12))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227740)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(2) x(14))
		getList(x(14))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227869)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setVariable(x(4))
		setValue(y(4))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(4))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(4))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228056)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228067)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 228165 228274)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyValue(y(3))
		unifyValue(y(4))
		branch(228285)
lbl(228165)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyVariable(x(3))
		unifyValue(y(4))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(3))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(4))
		branch(228285)
lbl(228274)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(574)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228285)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(4))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228387)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228398)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(606)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228411)	getVarVar(x(0) x(4))
		getVarVar(x(5) y(0))
		match(x(0) ht(228647 [onScalar('::' 228420) onScalar(':::' 228536)]))
lbl(228420)	getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		putRecord(fVar 2 x(6))
		setVariable(x(7))
		setValue(x(4))
		callBI('Dictionary.get' [x(1) x(0)]#[x(8)])
		unify(x(8) x(7))
		getRecord(fApply 3 x(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(x(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(x(4))
		getList(x(3))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(x(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(x(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(x(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(int)
		unifyValue(x(4))
		getListValVar(x(1) x(5) x(14))
		getListValVar(x(14) x(6) x(15))
		getList(x(15))
		unifyValue(x(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228536)	moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1474> 6)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(dom)
		unifyValue(y(0))
		getListValVar(x(1) y(3) x(10))
		getListValVar(x(10) y(4) x(11))
		getList(x(11))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228647)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(605)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(227257)
lbl(228662)	definition(x(7) 228720 pid('OccursVar' 3 pos('./compiler/UnnestFD.oz' 609 2) nil 5) <Q: 1476> nil)
		match(x(0) ht(228705 [onScalar(nil 228671) onRecord('|' 2 228675)]))
lbl(228671)	getLiteral(false x(2))
		return
lbl(228675)	getVarVar(x(0) x(3))
		testRecord(x(0) fVar 2 228699)
lbl(228683)	getVariable(x(0))
		testBI('==' [x(0) x(1)]#[x(4)] 228693)
		getLiteral(true x(2))
		return
lbl(228693)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228699)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228705)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(617)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228662)
lbl(228720)	definition(x(7) 228885 pid('GenerateCondisClause' 7 pos('./compiler/UnnestFD.oz' 620 2) nil 9) <Q: 1477> [g(2)])
		allocateL4
		callBI('NewDictionary' nil#[x(7)])
lbl(228730)	definition(x(8) 228832 pid('' 2 pos('./compiler/UnnestFD.oz' 632 3) nil 4) unit [x(3) x(1) g(0) x(7)])
		allocateL5
		getRecord(fVar 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1476> 6)
		testBool(y(3) 228809 228819)
		move(y(1) x(1))
		putConstant('CDVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(1) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(fVar 2 y(2))
		unifyValue(y(4))
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228809)	getRecord(fAtom 2 y(2))
		unifyLiteral(void)
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(633)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228730)
lbl(228832)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(2) x(0))
		move(x(8) x(1))
		move(x(5) x(2))
		genFastCall(<P: 29> 6)
lbl(228854)	definition(x(1) 228874 pid('' 2 pos('./compiler/UnnestFD.oz' 642 21) nil 4) unit [y(3) y(1)])
		move(x(1) x(3))
		move(g(0) x(1))
		move(g(1) x(2))
		genFastCall(<Q: 1475> 9)
		endDefinition(228854)
lbl(228874)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
		endDefinition(228720)
lbl(228885)	definition(x(7) 228923 pid('OccursIn' 3 pos('./compiler/UnnestFD.oz' 647 2) nil 5) <Q: 1478> nil)
		testList(x(1) 228917)
lbl(228894)	getVarVar(x(1) x(3))
		inlineDot(x(1) 1 x(1) cache)
		testBI('==' [x(0) x(1)]#[x(4)] 228911)
		getLiteral(true x(2))
		return
lbl(228911)	move(x(3) x(1))
		genFastCall(<Q: 1478> 7)
lbl(228917)	getLiteral(false x(2))
		return
		endDefinition(228885)
lbl(228923)	definition(x(7) 229016 pid('VariableUnion' 3 pos('./compiler/UnnestFD.oz' 654 2) nil 3) <Q: 1479> nil)
		match(x(0) ht(229001 [onScalar(nil 228932) onRecord('|' 2 228936)]))
lbl(228932)	unify(x(2) x(1))
		return
lbl(228936)	allocateL5
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVoid(1)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1478> 6)
		testBool(y(4) 228975 228990)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228975)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228990)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(229001)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(663)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228923)
lbl(229016)	definition(x(7) 229746 pid('MakeCondis' 4 pos('./compiler/UnnestFD.oz' 667 6) nil 28) <Q: 1480> nil)
		allocateL8
lbl(229023)	definition(x(4) 229062 pid('' 2 pos('./compiler/UnnestFD.oz' 684 9) nil 5) unit nil)
		allocateL4
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 1472> 10)
		getRecord('#' 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(229023)
lbl(229062)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(229079)	definition(x(1) 229120 pid('' 3 pos('./compiler/UnnestFD.oz' 689 6) nil 6) unit nil)
		shallowGuard(229107)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(229097)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1479> 7)
lbl(229107)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229079)
lbl(229120)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 28> 4)
lbl(229141)	definition(x(1) 229246 pid('' 2 pos('./compiler/UnnestFD.oz' 691 2) nil 7) unit [y(0) y(1) y(5)])
		shallowGuard(229233)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229159)	shallowThen
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(1) x(1))
		putConstant('CDControlVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(0) 3 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(g(1))
		sendMsg(getPrintName y(3) 1 cache)
		move(y(2) x(0))
		move(g(0) x(1))
		move(g(2) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		createVariableMove(y(3) x(5))
		createVariableMove(y(5) x(6))
		genFastCall(<Q: 1477> 14)
		getRecord('#' 3 y(0))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		deAllocateL6
		return
lbl(229233)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229141)
lbl(229246)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setVariable(x(2))
lbl(229271)	definition(x(1) 229312 pid('' 2 pos('./compiler/UnnestFD.oz' 698 19) nil 5) unit [y(1)])
		shallowGuard(229299)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229289)	shallowThen
		getRecord(fInt 2 x(1))
		unifyValue(x(3))
		unifyValue(g(0))
		return
lbl(229299)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(698)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229271)
lbl(229312)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(3))
		setValue(x(0))
		setVariable(x(2))
lbl(229334)	definition(x(1) 229370 pid('' 2 pos('./compiler/UnnestFD.oz' 699 39) nil 5) unit nil)
		shallowGuard(229357)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229352)	shallowThen
		unify(x(1) x(2))
		return
lbl(229357)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229334)
lbl(229370)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(6))
		setValue(x(0))
		setValue(y(5))
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setVariable(x(2))
lbl(229408)	definition(x(1) 229457 pid('' 2 pos('./compiler/UnnestFD.oz' 703 5) nil 5) unit [y(1)])
		shallowGuard(229444)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229426)	shallowThen
		getRecord(fRecord 2 x(1))
		unifyVariable(x(0))
		unifyValue(x(3))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(g(0))
		return
lbl(229444)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(703)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229408)
lbl(229457)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
lbl(229463)	definition(x(1) 229524 pid('' 3 pos('./compiler/UnnestFD.oz' 705 8) nil 6) unit nil)
		shallowGuard(229511)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(229481)	shallowThen
lbl(229482)	definition(x(1) 229499 pid('' 3 pos('./compiler/UnnestFD.oz' 706 14) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(229482)
lbl(229499)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(5) x(0))
		genFastCall(<P: 30> 9)
lbl(229511)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(705)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229463)
lbl(229524)	putRecord(fSkip 1 x(2))
		setValue(y(1))
		move(y(0) x(0))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fApply 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(2))
		unifyLiteral('.')
		unifyVariable(x(4))
		unifyValue(y(1))
		getList(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('.')
		unifyVariable(x(7))
		unifyValue(y(1))
		getList(x(7))
		unifyVariable(x(8))
		unifyVariable(x(9))
		getRecord(fVar 2 x(8))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(9))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(6))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(header)
		unifyValue(y(1))
		getListValVar(x(3) y(4) x(12))
		getListValVar(x(12) y(3) x(13))
		getListValVar(x(13) y(6) x(14))
		getList(x(14))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(fAnd 2 x(1))
		unifyValVar(y(7) x(15))
		getRecord(fApply 3 x(15))
		unifyVariable(x(16))
		unifyVariable(x(17))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(16))
		unifyLiteral('.')
		unifyVariable(x(18))
		unifyValue(y(1))
		getList(x(18))
		unifyVariable(x(19))
		unifyVariable(x(20))
		getRecord(fOpApply 3 x(19))
		unifyLiteral('.')
		unifyVariable(x(21))
		unifyValue(y(1))
		getList(x(21))
		unifyVariable(x(22))
		unifyVariable(x(23))
		getRecord(fVar 2 x(22))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(23))
		unifyVariable(x(24))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(24))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(20))
		unifyVariable(x(25))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(25))
		unifyLiteral('body')
		unifyValue(y(1))
		getListValVar(x(17) y(3) x(26))
		getListValVar(x(26) y(6) x(27))
		getList(x(27))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(229016)
lbl(229746)	definition(x(7) 229772 pid('IsStep' 2 pos('./compiler/Unnester.oz' 52 3) nil 3) <Q: 1481> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(229766 [onScalar('pos' 229758) onScalar(unit 229762)]))
lbl(229758)	getLiteral(false x(1))
		return
lbl(229762)	getLiteral(false x(1))
		return
lbl(229766)	getLiteral(true x(1))
		return
		endDefinition(229746)
lbl(229772)	definition(x(7) 229801 pid('CoordNoDebug' 2 pos('./compiler/Unnester.oz' 59 3) nil 4) <Q: 1482> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 229789)
lbl(229785)	unify(x(1) x(0))
		return
lbl(229789)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(229772)
lbl(229801)	definition(x(7) 229898 pid('LastCoordinatesOf' 2 pos('./compiler/Unnester.oz' 65 3) nil 2) <Q: 1483> nil)
		match(x(0) ht(229892 [onRecord(fAnd 2 229810) onRecord(fAtom 2 229817) onRecord(fVar 2 229825) onRecord(fWildcard 1 229833) onRecord(fEscape 2 229839) onRecord(fSelf 1 229847) onRecord(fDollar 1 229853) onRecord(fInt 2 229859) onRecord(fFloat 2 229867) onRecord(fRecord 2 229875) onRecord(fOpenRecord 2 229880) onRecord(fLocal 3 229885)]))
lbl(229810)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229817)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229825)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229833)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229839)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229847)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229853)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229859)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229867)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229875)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229880)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229885)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229892)	getLiteral(unit x(1))
		return
		endDefinition(229801)
lbl(229898)	definition(x(7) 229948 pid('GetLast' 2 pos('./compiler/Unnester.oz' 82 3) nil 2) <Q: 1484> nil)
		match(x(0) ht(229942 [onScalar(nil 229907) onRecord('|' 2 229911)]))
lbl(229907)	getLiteral(nil x(1))
		return
lbl(229911)	allocateL3
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		testLiteral(y(2) nil 229937)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1484> 5)
lbl(229937)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(229942)	unify(x(1) x(0))
		return
		endDefinition(229898)
lbl(229948)	definition(x(7) 230053 pid('DollarsInScope' 3 pos('./compiler/Unnester.oz' 112 3) nil 3) <Q: 1485> nil)
		match(x(0) ht(230047 [onRecord(fEq 3 229957) onRecord(fDollar 1 229982) onRecord(fRecord 2 229989) onRecord(fOpenRecord 2 229996) onRecord(fColon 2 230003) onRecord(fMethArg 2 230010) onRecord(fMethColonArg 3 230015) onRecord('|' 2 230022)]))
lbl(229957)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(229982)	inlinePlus1(x(1) x(0))
		unify(x(0) x(2))
		return
lbl(229989)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229996)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(230003)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(230010)	getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(230015)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(230022)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(230047)	unify(x(2) x(1))
		return
		endDefinition(229948)
lbl(230053)	definition(x(7) 230243 pid('DollarCoord' 2 pos('./compiler/Unnester.oz' 135 3) nil 5) <Q: 1486> nil)
		match(x(0) ht(230237 [onRecord(fEq 3 230062) onRecord(fDollar 1 230093) onRecord(fRecord 2 230099) onRecord(fOpenRecord 2 230140) onRecord(fColon 2 230181) onRecord(fMethArg 2 230188) onRecord(fMethColonArg 3 230193) onRecord('|' 2 230200)]))
lbl(230062)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1486> 4)
		testLiteral(y(2) unit 230088)
lbl(230079)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1486> 5)
lbl(230088)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(230093)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(230099)	getVoid(1)
		getVariable(x(0))
lbl(230103)	definition(x(4) 230128 pid('' 3 pos('./compiler/Unnester.oz' 146 12) nil 3) unit nil)
		testLiteral(x(0) unit 230122)
lbl(230113)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230122)	unify(x(2) x(0))
		return
		endDefinition(230103)
lbl(230128)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230140)	getVoid(1)
		getVariable(x(0))
lbl(230144)	definition(x(4) 230169 pid('' 3 pos('./compiler/Unnester.oz' 152 12) nil 3) unit nil)
		testLiteral(x(0) unit 230163)
lbl(230154)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230163)	unify(x(2) x(0))
		return
		endDefinition(230144)
lbl(230169)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230181)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230188)	getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230193)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230200)	definition(x(4) 230225 pid('' 3 pos('./compiler/Unnester.oz' 164 12) nil 3) unit nil)
		testLiteral(x(0) unit 230219)
lbl(230210)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230219)	unify(x(2) x(0))
		return
		endDefinition(230200)
lbl(230225)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230237)	getLiteral(unit x(1))
		return
		endDefinition(230053)
lbl(230243)	definition(x(7) 230429 pid('ReplaceDollar' 3 pos('./compiler/Unnester.oz' 173 3) nil 5) <Q: 1487> nil)
		match(x(0) ht(230423 [onRecord(fEq 3 230252) onRecord(fDollar 1 230286) onRecord(fRecord 2 230290) onRecord(fOpenRecord 2 230323) onRecord(fColon 2 230356) onRecord(fMethArg 2 230369) onRecord(fMethColonArg 3 230383) onRecord('|' 2 230400)]))
lbl(230252)	allocateL3
		getVarVar(x(0) y(0))
		getVariable(x(3))
		getRecord(fEq 3 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		unifyValue(x(3))
		move(x(1) y(2))
		genFastCall(<Q: 1487> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1487> 7)
lbl(230286)	unify(x(2) x(1))
		return
lbl(230290)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230300)	definition(x(3) 230317 pid('' 2 pos('./compiler/Unnester.oz' 182 20) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230300)
lbl(230317)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230323)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230333)	definition(x(3) 230350 pid('' 2 pos('./compiler/Unnester.oz' 184 24) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230333)
lbl(230350)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230356)	getVarVar(x(3) x(0))
		getRecord(fColon 2 x(2))
		unifyValVar(x(3) x(2))
		genFastCall(<Q: 1487> 7)
lbl(230369)	getVarVar(x(0) x(3))
		getRecord(fMethArg 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(3))
		genFastCall(<Q: 1487> 7)
lbl(230383)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fMethColonArg 3 x(2))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		genFastCall(<Q: 1487> 7)
lbl(230400)	definition(x(3) 230417 pid('' 2 pos('./compiler/Unnester.oz' 192 10) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230400)
lbl(230417)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230423)	unify(x(2) x(0))
		return
		endDefinition(230243)
lbl(230429)	definition(x(7) 230522 pid('MakeTrivialLocalPrefix' 4 pos('./compiler/Unnester.oz' 198 3) nil 4) <Q: 1488> nil)
		match(x(0) ht(230506 [onRecord(fAnd 2 230438) onRecord(fVar 2 230473) onRecord(fWildcard 1 230486) onRecord(fDoImport 3 230496)]))
lbl(230438)	allocateL4
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1488> 9)
lbl(230473)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230486)	unify(x(1) x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230496)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unify(x(0) x(3))
		return
lbl(230506)	allocateL2
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<Q: 1431> 6)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(230429)
lbl(230522)	definition(x(7) 230566 pid('MakeDeclaration' 4 pos('./compiler/Unnester.oz' 221 3) nil 7) <Q: 1489> [y(3)])
		testList(x(0) 230560)
lbl(230531)	allocateL2
		move(g(0) x(4))
		inlineDot(x(4) declaration x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(230560)	unify(x(3) x(1))
		return
		endDefinition(230522)
lbl(230566)	definition(x(7) 230720 pid('MakeBoolCase' 7 pos('./compiler/Unnester.oz' 229 3) nil 9) <Q: 1490> [y(3)])
		allocateL8
		move(g(0) x(5))
		inlineDot(x(5) boolClause x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		sendMsg(init y(5) 1 cache)
		createVariable(y(6))
		testRecord(y(1) noElse 1 230644)
lbl(230616)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(6))
		branch(230670)
lbl(230644)	move(g(0) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(1) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
lbl(230670)	move(g(0) x(0))
		inlineDot(x(0) boolCase x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(4))
		move(y(4) x(0))
		inlineDot(x(0) noBoolShared x(1) cache)
		unify(x(1) y(3))
		deAllocateL8
		return
		endDefinition(230566)
lbl(230720)	definition(x(7) 230809 pid('SortNoColonsToFront' 5 pos('./compiler/Unnester.oz' 241 3) nil 6) <Q: 1491> nil)
		match(x(0) ht(230794 [onScalar(nil 230729) onRecord('|' 2 230736)]))
lbl(230729)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(230736)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariable(y(3))
		createVariable(y(4))
		testRecord(x(0) '#' 2 230768)
lbl(230757)	unify(x(1) y(3))
		getList(x(3))
		unifyValue(x(0))
		unifyValue(y(4))
		branch(230777)
lbl(230768)	getList(x(1))
		unifyValue(x(0))
		unifyValue(y(3))
		unify(x(3) y(4))
lbl(230777)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<Q: 1491> 11)
lbl(230794)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(254)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230720)
lbl(230809)	createVariable(x(7))
lbl(230811)	definition(x(0) 230884 pid('IsGround' 2 pos('./compiler/Unnester.oz' 257 3) nil 4) <Q: 1492> [x(7)])
		match(x(0) ht(230878 [onRecord(fAtom 2 230820) onRecord(fInt 2 230824) onRecord(fFloat 2 230828) onRecord(fRecord 2 230832) onRecord(fColon 2 230856)]))
lbl(230820)	getLiteral(true x(1))
		return
lbl(230824)	getLiteral(true x(1))
		return
lbl(230828)	getLiteral(true x(1))
		return
lbl(230832)	getVarVar(x(0) x(3))
		testRecord(x(0) fAtom 2 230852)
lbl(230840)	move(x(3) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(230852)	getLiteral(false x(1))
		return
lbl(230856)	getVarVar(x(0) x(2))
		match(x(0) ht(230874 [onRecord(fAtom 2 230862) onRecord(fInt 2 230868)]))
lbl(230862)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230868)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230874)	getLiteral(false x(1))
		return
lbl(230878)	getLiteral(false x(1))
		return
		endDefinition(230811)
lbl(230884)	unify(x(0) x(7))
lbl(230887)	definition(x(7) 231120 pid('GroundToOzValue' 3 pos('./compiler/Unnester.oz' 275 3) nil 5) <Q: 1493> [g(9)])
		match(x(0) ht(231105 [onRecord(fAtom 2 230896) onRecord(fInt 2 230902) onRecord(fFloat 2 230908) onRecord(fRecord 2 230914)]))
lbl(230896)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230902)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230908)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230914)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		exHandler(230986)
		move(x(0) y(3))
		createCond(230980)
lbl(230933)	lastClause
		clause
		thread(230951)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(3) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(230951)	ask
lbl(230952)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(3))
		setConstant('expansion error')
		setConstant('duplicate feature in record')
		moveMoveYXYX(y(1) x(2) y(2) x(1))
		deAllocateL6
		tailCall(x(2) 2)
lbl(230980)	move(y(3) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(230986)	putConstant(1 x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(231001)	definition(x(3) 231077 pid('' 2 pos('./compiler/Unnester.oz' 284 7) nil 6) unit [y(1) x(4)])
		testRecord(x(0) fColon 2 231043)
lbl(231012)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<Q: 1493> 6)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1493> 7)
lbl(231043)	move(g(1) x(2))
		createVariable(x(3))
		createVariable(x(4))
		callBI('Exchange' [x(2) x(3) x(4)]#nil)
		inlinePlus1(x(3) x(5))
		unify(x(5) x(4))
		getRecord('#' 2 x(1))
		unifyValVar(x(3) x(4))
		move(g(0) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1493> 7)
		endDefinition(231001)
lbl(231077)	moveMoveXYYX(x(1) y(4) y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(y(2) x(2))
		popEx
		deAllocateL6
		return
lbl(231105)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(297)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230887)
lbl(231120)	createVariable(x(7))
lbl(231122)	definition(x(0) 231225 pid('IsPattern' 2 pos('./compiler/Unnester.oz' 300 3) nil 3) <Q: 1494> [x(7)])
		match(x(0) ht(231219 [onRecord(fEq 3 231131) onRecord(fAtom 2 231162) onRecord(fVar 2 231166) onRecord(fWildcard 1 231170) onRecord(fEscape 2 231174) onRecord(fInt 2 231178) onRecord(fFloat 2 231182) onRecord(fRecord 2 231186) onRecord(fOpenRecord 2 231199) onRecord(fColon 2 231212)]))
lbl(231131)	getVarVar(x(0) x(2))
		match(x(0) ht(231149 [onRecord(fVar 2 231137) onRecord(fWildcard 1 231143)]))
lbl(231137)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231143)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231149)	match(x(2) ht(231158 [onRecord(fVar 2 231152) onRecord(fWildcard 1 231155)]))
lbl(231152)	genFastCall(<Q: 1494> 5)
lbl(231155)	genFastCall(<Q: 1494> 5)
lbl(231158)	getLiteral(false x(1))
		return
lbl(231162)	getLiteral(true x(1))
		return
lbl(231166)	getLiteral(true x(1))
		return
lbl(231170)	getLiteral(true x(1))
		return
lbl(231174)	getLiteral(true x(1))
		return
lbl(231178)	getLiteral(true x(1))
		return
lbl(231182)	getLiteral(true x(1))
		return
lbl(231186)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231199)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231212)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1494> 5)
lbl(231219)	getLiteral(false x(1))
		return
		endDefinition(231122)
lbl(231225)	unify(x(0) x(7))
lbl(231228)	definition(x(7) 231279 pid('IsConstraint' 2 pos('./compiler/Unnester.oz' 327 3) nil 2) <Q: 1495> nil)
		match(x(0) ht(231273 [onRecord(fEq 3 231237) onRecord(fAtom 2 231241) onRecord(fVar 2 231245) onRecord(fWildcard 1 231249) onRecord(fEscape 2 231253) onRecord(fInt 2 231257) onRecord(fFloat 2 231261) onRecord(fRecord 2 231265) onRecord(fOpenRecord 2 231269)]))
lbl(231237)	getLiteral(true x(1))
		return
lbl(231241)	getLiteral(true x(1))
		return
lbl(231245)	getLiteral(true x(1))
		return
lbl(231249)	getLiteral(true x(1))
		return
lbl(231253)	getLiteral(true x(1))
		return
lbl(231257)	getLiteral(true x(1))
		return
lbl(231261)	getLiteral(true x(1))
		return
lbl(231265)	getLiteral(true x(1))
		return
lbl(231269)	getLiteral(true x(1))
		return
lbl(231273)	getLiteral(false x(1))
		return
		endDefinition(231228)
lbl(231279)	definition(x(7) 231763 pid('SortFunctorDescriptors' 9 pos('./compiler/Unnester.oz' 341 3) nil 13) <Q: 1496> nil)
		match(x(0) ht(231748 [onScalar(nil 231288) onRecord('|' 2 231450)]))
lbl(231288)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		testBI('IsFree' [x(2)]#[x(0)] 231311)
		getLiteral(unit x(2))
lbl(231311)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231337 231326)
		getLiteral(unit y(0))
		branch(231337)
lbl(231326)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231337)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231363 231352)
		getLiteral(nil y(1))
		branch(231363)
lbl(231352)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231363)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231389 231378)
		getLiteral(nil y(2))
		branch(231389)
lbl(231378)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(393)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231389)	move(y(3) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231415 231404)
		getLiteral(nil y(3))
		branch(231415)
lbl(231404)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231415)	move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231437 231439)
		getRecord(fSkip 1 y(4))
		unifyLiteral(unit)
		getRecord(fSkip 1 y(5))
		unifyLiteral(unit)
lbl(231437)	deAllocateL6
		return
lbl(231439)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(395)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231450)	allocateL9
		getVarVar(x(0) x(9))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(9) y(8))
		match(x(0) ht(231708 [onRecord(fRequire 2 231480) onRecord(fPrepare 3 231517) onRecord(fImport 2 231555) onRecord(fExport 2 231592) onRecord(fProp 2 231629) onRecord(fDefine 3 231666)]))
lbl(231480)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(2)]#[x(11)] 231492)
		unify(y(1) x(0))
		branch(231721)
lbl(231492)	putRecord('#' 2 x(11))
		setConstant('more than one `require\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231517)	getVoid(2)
		getVariable(x(10))
		testBI('IsFree' [x(3)]#[x(11)] 231530)
		unify(y(2) x(0))
		branch(231721)
lbl(231530)	putRecord('#' 2 x(11))
		setConstant('more than one `prepare\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231555)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(4)]#[x(11)] 231567)
		unify(y(3) x(0))
		branch(231721)
lbl(231567)	putRecord('#' 2 x(11))
		setConstant('more than one `import\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231592)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(5)]#[x(11)] 231604)
		unify(y(4) x(0))
		branch(231721)
lbl(231604)	putRecord('#' 2 x(11))
		setConstant('more than one `export\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231629)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(6)]#[x(11)] 231641)
		unify(y(5) x(0))
		branch(231721)
lbl(231641)	putRecord('#' 2 x(11))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231666)	getVarVar(x(0) x(10))
		getVariable(x(11))
		testBI('IsFree' [x(7)]#[x(12)] 231683)
		unify(y(6) x(0))
		unify(y(7) x(10))
		branch(231721)
lbl(231683)	putRecord('#' 2 x(10))
		setConstant('more than one `define\' descriptor ')
		setConstant('in functor definition')
		move(x(11) x(0))
		move(x(10) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231721)
lbl(231708)	putRecord(kernel 3 x(10))
		setConstant(noElse)
		setConstant(386)
		setValue(x(0))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(231721)	moveMoveYXYX(y(8) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		move(y(7) x(8))
		deAllocateL9
		genFastCall(<Q: 1496> 19)
lbl(231748)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(399)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231279)
lbl(231763)	definition(x(7) 232083 pid('SortClassDescriptors' 6 pos('./compiler/Unnester.oz' 402 3) nil 9) <Q: 1497> nil)
		match(x(0) ht(232068 [onScalar(nil 231772) onRecord('|' 2 231866)]))
lbl(231772)	allocateL3
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		testBI('IsFree' [x(2)]#[x(0)] 231788)
		getLiteral(nil x(2))
lbl(231788)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231814 231803)
		getLiteral(nil y(0))
		branch(231814)
lbl(231803)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(436)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231814)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231840 231829)
		getLiteral(nil y(1))
		branch(231840)
lbl(231829)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(437)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231840)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231853 231855)
		getLiteral(nil y(2))
lbl(231853)	deAllocateL3
		return
lbl(231855)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(438)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231866)	allocateL6
		getVarVar(x(0) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		match(x(0) ht(232036 [onRecord(fFrom 2 231888) onRecord(fProp 2 231925) onRecord(fAttr 2 231962) onRecord(fFeat 2 231999)]))
lbl(231888)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(2)]#[x(8)] 231900)
		unify(y(1) x(0))
		branch(232049)
lbl(231900)	putRecord('#' 2 x(8))
		setConstant('more than one `from\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(232049)
lbl(231925)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(3)]#[x(8)] 231937)
		unify(y(2) x(0))
		branch(232049)
lbl(231937)	putRecord('#' 2 x(8))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(232049)
lbl(231962)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(4)]#[x(8)] 231974)
		unify(y(3) x(0))
		branch(232049)
lbl(231974)	putRecord('#' 2 x(8))
		setConstant('more than one `attr\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(232049)
lbl(231999)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(5)]#[x(8)] 232011)
		unify(y(4) x(0))
		branch(232049)
lbl(232011)	putRecord('#' 2 x(8))
		setConstant('more than one `feat\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(232049)
lbl(232036)	putRecord(kernel 3 x(7))
		setConstant(noElse)
		setConstant(432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(7)]#nil)
lbl(232049)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 1497> 13)
lbl(232068)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231763)
lbl(232083)	putRecord('attr' [<M: ArgCounter> <M: BA> <M: StateUsed> <M: Stateful> reporter switches] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(232099)	definition(x(7) 232154 pid('Unnester,init/fast' 3 pos('./compiler/Unnester.oz' 451 6) nil 5) <Q: 1498> [y(0)])
		allocateL3
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		sendMsg(init y(2) 2 cache)
		move(y(2) x(0))
		inlineAssign(<M: BA> x(0) cache)
		move(y(0) x(0))
		inlineAssign(reporter x(0) cache)
		move(y(1) x(0))
		inlineAssign(switches x(0) cache)
		deAllocateL3
		return
		endDefinition(232099)
lbl(232154)	definition(x(8) 232195 pid('Unnester,init/slow' 1 pos('./compiler/Unnester.oz' 451 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1498> 7)
		endDefinition(232154)
lbl(232195)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(232207)	definition(x(7) 232561 pid('Unnester,unnestQuery/fast' 4 pos('./compiler/Unnester.oz' 457 6) nil 5) <Q: 1499> [y(0) y(3)])
		allocateL8
		putConstant(false x(4))
		inlineAssign(<M: Stateful> x(4) cache)
		move(x(3) y(0))
		testRecord(x(0) fDeclare 3 232459)
lbl(232230)	getVarVar(x(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1488> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		getSelf(x(2))
lbl(232265)	definition(x(1) 232319 pid('' 1 pos('./compiler/Unnester.oz' 463 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(232306)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(232286)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(232306)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(463)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(232265)
lbl(232319)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		putList(y(5))
		setVariable(x(1))
		setVariable(y(7))
		move(y(6) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		moveMoveXYYX(x(1) y(6) y(1) x(0))
		moveMoveYXYX(y(5) x(1) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		call(y(6) 2)
		inlineAt(<M: BA> x(1) cache)
		move(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
lbl(232417)	definition(x(1) 232451 pid('' 1 pos('./compiler/Unnester.oz' 471 6) nil 2) unit nil)
		allocateL1
		move(x(0) y(0))
		putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(232417)
lbl(232451)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(232544)
lbl(232459)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(2))
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(1))
		createVariableMove(y(5) x(0))
		sendMsg(closeScope x(2) 1 cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		call(y(1) 2)
lbl(232544)	inlineAt(<M: BA> x(1) cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(getFreeVariablesOfQuery x(1) 1 cache)
		endDefinition(232207)
lbl(232561)	definition(x(8) 232608 pid('Unnester,unnestQuery/slow' 1 pos('./compiler/Unnester.oz' 457 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1499> 9)
		endDefinition(232561)
lbl(232608)	putRecord('#' [1 2 fast] x(10))
		setConstant(unnestQuery)
		setValue(x(8))
		setValue(x(7))
lbl(232618)	definition(x(7) 232737 pid('Unnester,UnnestToTerm/fast' 4 pos('./compiler/Unnester.oz' 485 6) nil 6) <Q: 1500> [y(3) y(0)])
		match(x(0) ht(232732 [onRecord(fAtom 2 232627) onRecord(fInt 2 232662) onRecord(fFloat 2 232697)]))
lbl(232627)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232662)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232697)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232732)	genCall(gci(g(1) true <M: UnnestToVar> true 4) 0)
		endDefinition(232618)
lbl(232737)	definition(x(8) 232784 pid('Unnester,UnnestToTerm/slow' 1 pos('./compiler/Unnester.oz' 485 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1500> 9)
		endDefinition(232737)
lbl(232784)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: UnnestToTerm>)
		setValue(x(8))
		setValue(x(7))
lbl(232794)	definition(x(7) 233058 pid('Unnester,UnnestToVar/fast' 4 pos('./compiler/Unnester.oz' 499 6) nil 5) <Q: 1501> [y(0)])
		match(x(0) ht(232937 [onRecord(fVar 2 232803) onRecord(fWildcard 1 232823) onRecord(fEscape 2 232866) onRecord(fGetBinder 2 232893)]))
lbl(232803)	getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232823)	allocateL3
		getVariable(y(0))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
lbl(232866)	getVariable(x(4))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232893)	allocateL2
		getVarVar(x(4) y(0))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(1) x(2))
		sendMsg(refer x(4) 3 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg('getVariable' x(1) 1 cache)
lbl(232937)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		createVariable(y(5))
		match(y(0) ht(232994 [onRecord(fSelf 1 232959) onRecord(fProc 5 232964) onRecord(fFun 5 232969) onRecord(fFunctor 3 232974) onRecord(fClass 4 232979) onRecord(fScanner 6 232984) onRecord(fParser 7 232989)]))
lbl(232959)	getLiteral('Self' y(5))
		branch(232997)
lbl(232964)	getLiteral('Proc' y(5))
		branch(232997)
lbl(232969)	getLiteral('Fun' y(5))
		branch(232997)
lbl(232974)	getLiteral('Functor' y(5))
		branch(232997)
lbl(232979)	getLiteral('Class' y(5))
		branch(232997)
lbl(232984)	getLiteral('Scanner' y(5))
		branch(232997)
lbl(232989)	getLiteral('Parser' y(5))
		branch(232997)
lbl(232994)	unify(y(5) y(1))
lbl(232997)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(232794)
lbl(233058)	definition(x(8) 233105 pid('Unnester,UnnestToVar/slow' 1 pos('./compiler/Unnester.oz' 499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1501> 9)
		endDefinition(233058)
lbl(233105)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: UnnestToVar>)
		setValue(x(8))
		setValue(x(7))
lbl(233115)	definition(x(7) 233234 pid('Unnester,MakeLabelOrFeature/fast' 2 pos('./compiler/Unnester.oz' 530 6) nil 6) <Q: 1502> [y(3) y(0)])
		match(x(0) ht(233219 [onRecord(fAtom 2 233124) onRecord(fVar 2 233159) onRecord(fInt 2 233179) onRecord(fEscape 2 233214)]))
lbl(233124)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233159)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(1) x(2))
		move(x(3) x(1))
		tailSendMsg(refer x(4) 3 cache)
lbl(233179)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233214)	getVariable(x(0))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> true 2) 0)
lbl(233219)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(539)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(233115)
lbl(233234)	definition(x(8) 233269 pid('Unnester,MakeLabelOrFeature/slow' 1 pos('./compiler/Unnester.oz' 530 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1502> 5)
		endDefinition(233234)
lbl(233269)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(233279)	definition(x(7) 233404 pid('Unnester,GenerateNewVar/fast' 4 pos('./compiler/Unnester.oz' 541 6) nil 5) <Q: 1503> nil)
		allocateL4
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		sendMsg(openScope x(4) 0 cache)
		getSelf(x(2))
lbl(233309)	definition(x(1) 233363 pid('' 1 pos('./compiler/Unnester.oz' 543 14) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(233350)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(233330)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(233350)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(233309)
lbl(233363)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		deAllocateL4
		tailSendMsg(closeScope x(1) 1 cache)
		endDefinition(233279)
lbl(233404)	definition(x(8) 233451 pid('Unnester,GenerateNewVar/slow' 1 pos('./compiler/Unnester.oz' 541 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1503> 9)
		endDefinition(233404)
lbl(233451)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: GenerateNewVar>)
		setValue(x(8))
		setValue(x(7))
lbl(233461)	definition(x(7) 238940 pid('Unnester,UnnestStatement/fast' 2 pos('./compiler/Unnester.oz' 548 6) nil 20) <Q: 1504> [y(0) y(3) y(4) g(10) y(6) y(5)])
		match(x(0) ht(238860 [onRecord(fStepPoint 3 233470) onRecord(fAnd 2 233568) onRecord(fEq 3 233590) onRecord(fAssign 3 233965) onRecord(fOpApplyStatement 3 234060) onRecord(fFdCompare 4 234148) onRecord(fFdIn 4 234211) onRecord(fObjApply 3 234332) onRecord(fDollar 1 234473) onRecord(fApply 3 234526) onRecord(fProc 5 234607) onRecord(fFun 5 235007) onRecord(fFunctor 3 235382) onRecord(fDoImport 3 236174) onRecord(fClass 4 236334) onRecord(fScanner 6 236774) onRecord(fParser 7 236834) onRecord(fLocal 3 236894) onRecord(fBoolCase 4 237133) onRecord(fCase 4 237654) onRecord(fLockThen 3 237707) onRecord(fLock 2 237775) onRecord(fThread 2 237876) onRecord(fTry 4 237962) onRecord(fRaise 2 237965) onRecord(fRaiseWith 3 237987) onRecord(fSkip 1 238118) onRecord(fFail 1 238149) onRecord(fNot 2 238180) onRecord(fCond 3 238238) onRecord(fOr 3 238359) onRecord(fCondis 2 238485)]))
lbl(233470)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(4) 233552 233557)
lbl(233506)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(4) 233552 233557)
lbl(233519)	move(g(1) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(2))
		deAllocateL5
		return
lbl(233552)	unify(y(2) y(3))
		deAllocateL5
		return
lbl(233557)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(551)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233568)	allocateL2
		getVarVar(x(0) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(233590)	allocateL9
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(5) 233785 233954)
lbl(233614)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233785 233954)
lbl(233627)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233785 233954)
lbl(233640)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('=')
		setValue(x(1))
		setValue(y(2))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(4))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(0) x(1))
		getListValVar(x(1) y(1) x(2))
		getList(x(2))
		unifyValue(y(7))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(233785)	createVariable(y(5))
		createVariable(y(6))
		testRecord(y(1) fVar 2 233809)
lbl(233794)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233946)
lbl(233809)	testRecord(y(1) fEscape 2 233843)
lbl(233814)	getVariable(x(0))
		shallowGuard(233843)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233826)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233946)
lbl(233843)	testRecord(y(0) fVar 2 233863)
lbl(233848)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233946)
lbl(233863)	testRecord(y(0) fEscape 2 233899)
lbl(233868)	getVariable(x(0))
		createVariable(y(0))
		shallowGuard(233899)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233882)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233946)
lbl(233899)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
lbl(233946)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(6))
		deAllocateL9
		return
lbl(233954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233965)	allocateL4
		getVarVar(x(0) x(2))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(3) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(x(2) y(3))
		testBool(x(3) 233998 234020)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(234031)
lbl(233998)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute assignment used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(234031)
lbl(234020)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(234031)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(2))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('<-')
		setValue(x(1))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234060)	allocateL7
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(2) x(2))
		inlineDot(x(2) procs x(3) cache)
		callBI('.' [x(3) x(0)]#[x(4)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(4) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(6) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		deAllocateL7
		return
lbl(234148)	allocateL8
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 1467> 10)
		getList(y(3))
		unifyValVar(y(4) x(0))
		getListValVar(x(0) y(6) x(1))
		move(y(1) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234211)	allocateL6
		getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		match(x(0) ht(234243 [onScalar('::' 234233) onScalar(':::' 234238)]))
lbl(234233)	getLiteral(int y(4))
		branch(234256)
lbl(234238)	getLiteral(dom y(4))
		branch(234256)
lbl(234243)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(613)
		setValue(x(0))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(234256)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(3))
		setConstant('FD')
		setValue(y(3))
		putRecord(fAtom 2 x(5))
		setValue(y(4))
		setValue(y(3))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(5))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(y(2))
		setValue(x(7))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234332)	allocateL4
		getVarVar(y(0) x(4))
		getVariable(y(1))
		inlineAt(<M: Stateful> x(0) cache)
		moveMoveXYXY(x(1) y(2) x(4) y(3))
		testBool(x(0) 234411 234433)
		putConstant(true x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		testRecord(y(0) fSelf 1 234444)
lbl(234365)	getVariable(x(0))
		inlineAt(reporter x(5) cache)
		putRecord('#' 2 x(8))
		setConstant('use a class in front of "," ')
		setConstant('or use "{self message}"')
		putRecord(hint [l m] x(7))
		setConstant('Hint')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(5) [coord items kind msg] cache)
		branch(234444)
lbl(234411)	inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(234444)
lbl(234433)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(619)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234444)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(1))
		move(y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234473)	allocateL3
		getVariable(y(0))
		inlineAt(reporter x(3) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(234526)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('UnnestApply' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyValue(y(0))
		deAllocateL8
		return
lbl(234607)	allocateL(12)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYYX(x(1) y(5) y(0) x(0))
		putConstant('Proc' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(234643)	definition(x(1) 234677 pid('' 2 pos('./compiler/Unnester.oz' 651 36) nil 4) unit nil)
		shallowGuard(234664)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234659)	shallowThen
		unify(x(1) x(2))
		return
lbl(234664)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(651)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234643)
lbl(234677)	moveMoveXYYX(x(0) y(8) y(3) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(234688)	definition(x(1) 234706 pid('' 2 pos('./compiler/Unnester.oz' 652 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(234688)
lbl(234706)	move(y(9) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		putConstant(0 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(9) 1 234789)
lbl(234745)	move(y(9) x(0))
		putConstant(1 x(5))
		testLT(x(5) x(0) x(1) 234826)
lbl(234756)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(0) y(1) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(9) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in procedure head allowed' x(2))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(234826)
lbl(234789)	testLiteral(y(3) nil 234795)
lbl(234793)	branch(234745)
lbl(234795)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(9) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('exactly one $ in head of lazy procedure required' x(2))
		sendMsg(error y(9) [coord kind msg] cache)
lbl(234826)	move(y(3) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(3))
		testBool(y(2) 234882 234887)
		getLiteral(true y(3))
		branch(234898)
lbl(234882)	unify(y(3) y(8))
		branch(234898)
lbl(234887)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(669)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(234898)	move(y(3) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) 'definition' x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(10) x(4))
		move(y(4) x(5))
		sendMsg(init y(3) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 234999 234988)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(3) 1 cache)
		branch(234999)
lbl(234988)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(672)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234999)	getList(y(5))
		unifyValue(y(6))
		unifyValue(y(3))
		deAllocateL
		return
lbl(235007)	allocateL(12)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		move(x(1) y(4))
		putConstant('Fun' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(235041)	definition(x(1) 235075 pid('' 2 pos('./compiler/Unnester.oz' 682 36) nil 4) unit nil)
		shallowGuard(235062)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(235057)	shallowThen
		unify(x(1) x(2))
		return
lbl(235062)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(682)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(235041)
lbl(235075)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
lbl(235086)	definition(x(1) 235104 pid('' 2 pos('./compiler/Unnester.oz' 683 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(235086)
lbl(235104)	move(y(8) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1485> 6)
		createVariable(y(10))
		testNumber(y(8) 0 235167)
		putRecord(fDollar 1 x(0))
		setValue(y(3))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(10) x(2))
		genFastCall(<P: 21> 6)
		branch(235201)
lbl(235167)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(8) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('no $ in function head allowed' x(2))
		sendMsg(error y(8) [coord kind msg] cache)
		unify(y(10) y(0))
lbl(235201)	move(y(2) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(10) x(0) y(1) x(1))
		move(y(3) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(8))
		testBool(y(2) 235257 235262)
		getLiteral(true y(8))
		branch(235273)
lbl(235257)	unify(y(8) y(7))
		branch(235273)
lbl(235262)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(696)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(235273)	move(y(8) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) functionDefinition x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(9) x(4))
		move(y(3) x(5))
		sendMsg(init y(7) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 235374 235363)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(7) 1 cache)
		branch(235374)
lbl(235363)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235374)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL
		return
lbl(235382)	allocateL(14)
		getVarVar(y(0) x(0))
		getVariable(y(1))
		inlineAt(reporter x(9) cache)
		move(x(1) y(2))
		move(x(9) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		createVariableMove(y(7) x(6))
		createVariableMove(y(8) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<Q: 1496> 18)
		testLiteral(y(3) unit 235783)
lbl(235428)	testLiteral(y(4) unit 235783)
lbl(235432)	move(y(0) x(0))
		putConstant('Functor' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(10))
		setVariable(y(11))
		setVariable(y(12))
		createVariableMove(y(13) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(11) x(0))
		sendMsg(getPrintName y(13) 1 cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(5) x(0))
		createVariableMove(y(0) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImports> false 4) 0)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(12) x(2))
		genCall(gci(g(0) true <M: AnalyseExports> false 3) 0)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('IMPORT' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(1))
		sendMsg(getPrintName y(6) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(11))
		setValue(y(8))
		putRecord(fAtom 2 x(3))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(y(12))
		putRecord(fAnd 2 x(1))
		setValue(y(9))
		setValue(x(2))
		putRecord(fLocal 3 y(13))
		setValue(x(0))
		setValue(x(1))
		setValue(y(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Body' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(8) 1 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(fAtom 2 x(3))
		setConstant(instantiate)
		setValue(y(1))
		putList(x(1))
		setValue(x(3))
		setValue(y(7))
		putRecord(fFun 5 x(2))
		setValue(y(9))
		setValue(x(0))
		setValue(y(13))
		setValue(x(1))
		setValue(y(6))
		putRecord(fAtom 2 x(0))
		setConstant('import')
		setValue(y(6))
		putRecord(fRecord 2 x(3))
		setValue(x(0))
		setValue(y(4))
		putRecord(fAtom 2 x(0))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(4))
		setValue(x(0))
		setValue(y(5))
		putList(x(7))
		setValue(y(10))
		setConstant(nil)
		putList(x(6))
		setValue(y(9))
		setValue(x(7))
		putList(x(1))
		setValue(x(4))
		setValue(x(6))
		putList(x(0))
		setValue(x(3))
		setValue(x(1))
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('NewFunctor')
		setValue(x(0))
		setValue(y(6))
		putRecord(fAnd 2 x(1))
		setValue(x(2))
		setValue(x(5))
		putRecord(fStepPoint 3 x(0))
		setValue(x(1))
		setConstant('definition')
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL
		return
lbl(235783)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('OuterFunctor' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('InnerFunctor' x(0))
		createVariableMove(y(10) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		putRecord(fVar 2 y(11))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(10) 1 cache)
		putRecord(fImport 2 x(1))
		setValue(y(3))
		setConstant(unit)
		putRecord(fAtom 2 x(7))
		setConstant(inner)
		setConstant(unit)
		putRecord(fColon 2 x(6))
		setValue(x(7))
		setValue(y(7))
		putRecord(fExportItem 1 x(5))
		setValue(x(6))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fExport 2 x(3))
		setValue(x(4))
		setConstant(unit)
		putRecord(fImport 2 x(14))
		setValue(y(5))
		setConstant(unit)
		putRecord(fExport 2 x(16))
		setValue(y(6))
		setConstant(unit)
		putRecord(fDefine 3 x(18))
		setValue(y(8))
		setValue(y(9))
		setConstant(unit)
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putRecord(fFunctor 3 x(12))
		setValue(y(7))
		setValue(x(13))
		setValue(y(1))
		putRecord(fAnd 2 x(10))
		setVariable(x(11))
		setValue(x(12))
		putRecord(fDefine 3 x(9))
		setValue(x(10))
		setVariable(x(19))
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fFunctor 3 y(10))
		setValue(y(11))
		setValue(x(0))
		setValue(y(1))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		move(y(4) x(1))
		putConstant(1 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(11))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		putConstant(2 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(19))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAtom 2 x(5))
		setVariable(x(6))
		setConstant(unit)
		putList(x(7))
		setValue(y(11))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putRecord(fOpApply 3 x(3))
		setConstant('ApplyFunctor')
		setValue(x(4))
		setValue(y(3))
		putRecord(fAtom 2 x(9))
		setConstant(inner)
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(0))
		setConstant('.')
		setValue(x(1))
		setValue(y(3))
		putRecord(fEq 3 x(2))
		setValue(y(0))
		setValue(x(0))
		setValue(y(3))
		move(y(1) x(0))
		putConstant(1 x(3))
		putConstant('' x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(6))
		putRecord(fAnd 2 x(1))
		setValue(y(10))
		setValue(x(2))
		putRecord(fLocal 3 x(3))
		setValue(y(11))
		setValue(x(1))
		setValue(y(1))
		move(x(3) x(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(236174)	allocateL8
		getVoid(1)
		getVarVar(y(0) x(2))
		getRecord(fVar 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		putRecord(fAtom 2 x(0))
		setValue(y(1))
		setValue(y(2))
		putConstant('Feature' x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(0) 2 cache)
		getList(y(3))
		unifyValVar(y(1) y(0))
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putList(x(5))
		setValue(y(6))
		setValue(x(6))
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(4) x(1))
		move(y(2) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL8
		return
lbl(236334)	allocateL(17)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Class' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1497> 12)
		move(y(1) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(9) x(0))
		move(g(5) x(1))
		move(y(0) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 32> 8)
		move(y(8) x(0))
		move(g(5) x(1))
		move(y(10) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1434> 4)
		getSelf(x(3))
lbl(236447)	definition(x(1) 236516 pid('' 2 pos('./compiler/Unnester.oz' 796 6) nil 5) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooPrivate)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(236447)
lbl(236516)	move(y(10) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		putConstant('Parent' x(1))
		createVariableMove(y(10) x(2))
		putConstant(nil x(3))
		createVariableMove(y(11) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(7) x(0))
		putConstant('Property' x(1))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		createVariableMove(y(12) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(8) x(0))
		putConstant('Attribute' x(1))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		createVariableMove(y(13) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		move(y(9) x(0))
		putConstant('Feature' x(1))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		createVariableMove(y(14) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		putConstant(<M: Stateful> x(3))
		putConstant(true x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(1)])
		getSelf(x(3))
lbl(236629)	definition(x(4) 236645 pid('' 2 pos('./compiler/Unnester.oz' 810 8) nil 3) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: UnnestMeth> true 2) 0)
		endDefinition(236629)
lbl(236645)	moveMoveXYXY(x(0) y(9) x(1) y(15))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		move(y(9) x(0))
		inlineAssign(<M: Stateful> x(0) cache)
		move(y(15) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		callBI(newObject [x(7)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		moveMoveYXYX(y(11) x(1) y(12) x(2))
		moveMoveYXYX(y(13) x(3) y(14) x(4))
		moveMoveYXYX(y(16) x(5) y(2) x(6))
		sendMsg(init y(9) 7 cache)
		getList(y(3))
		unifyValVar(y(4) x(3))
		putList(x(5))
		setValue(y(8))
		setValue(y(9))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(2))
		setValue(y(6))
		setValue(x(4))
		putList(x(0))
		setValue(y(10))
		setValue(x(2))
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(236774)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236834)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236894)	allocateL6
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(236931)	definition(x(1) 237079 pid('' 1 pos('./compiler/Unnester.oz' 869 6) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		testRecord(x(0) fVar 2 236966)
lbl(236947)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(236966)	testRecord(x(0) fDoImport 3 237022)
lbl(236971)	allocateL2
		getVarVar(x(4) x(3))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: UnnestImportFeatures> true 2) 0)
lbl(237022)	allocateL1
		move(x(0) y(0))
		testRecord(y(0) fExportItem 1 237064)
lbl(237031)	getVariable(x(2))
		shallowGuard(237064)
		getRecord(fVar 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(237043)	shallowThen
		inlineAt(<M: BA> x(5) cache)
		move(x(3) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bindExport x(5) 3 cache)
lbl(237064)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(879)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236931)
lbl(237079)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putList(y(0))
		setVariable(x(1))
		setVariable(y(4))
		move(y(5) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genFastCall(<Q: 1489> 9)
lbl(237133)	allocateL(11)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		callBI('Label' [x(0)]#[x(2)])
		inlineAt(switches x(3) cache)
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(x(2) y(5))
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(3) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237464)
lbl(237176)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237464)
lbl(237200)	inlineAt(switches x(2) cache)
		putConstant(staticanalysis x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(6) 237617 237643)
lbl(237221)	testLiteral(y(5) fOrElse 237458)
lbl(237225)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(0) x(3))
		createVariableMove(y(6) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		createVariable(y(5))
		createVariable(y(7))
		testRecord(y(1) fNoElse 1 237356)
lbl(237308)	getVariable(y(1))
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(5))
lbl(237336)	definition(x(0) 237351 pid('ApplyFalseProc' 1 pos('./compiler/Unnester.oz' 906 4) nil 1) unit [y(1)])
		getRecord(noElse 1 x(0))
		unifyValue(g(0))
		return
		endDefinition(237336)
lbl(237351)	unify(x(0) y(7))
		branch(237429)
lbl(237356)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(2) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(10) x(1) y(2) x(2))
		moveMoveYXYX(y(5) x(3) y(7) x(4))
		putConstant('FalseCase' x(0))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
lbl(237429)	getList(y(3))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariable(x(3))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(237458)	testLiteral(y(5) fAndThen 237464)
		branch(237225)
lbl(237464)	move(y(4) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		createVariable(y(0))
		testRecord(y(1) fNoElse 1 237544)
lbl(237534)	getVariable(x(0))
		getRecord(noElse 1 y(0))
		unifyValue(x(0))
		branch(237591)
lbl(237544)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1489> 8)
lbl(237591)	getList(y(3))
		unifyValVar(y(5) x(6))
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		createVariable(x(4))
		deAllocateL
		genFastCall(<Q: 1490> 15)
lbl(237617)	inlineAt(switches x(2) cache)
		putConstant(codegen x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237464)
		branch(237221)
lbl(237643)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(885)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(237654)	allocateL7
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Arbiter' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(3))
		unifyValVar(y(4) y(6))
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		genCall(gci(g(0) true <M: UnnestCase> true 5) 0)
lbl(237707)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Lock' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValVar(y(3) y(0))
		move(g(1) x(0))
		inlineDot(x(0) lockNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(4) x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL6
		return
lbl(237775)	allocateL4
		getVarVar(x(0) y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		testBool(x(2) 237803 237825)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(237836)
lbl(237803)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(237836)
lbl(237825)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(940)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(237836)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) objectLockNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		move(y(0) x(1))
		sendMsg(init y(2) 2 cache)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(237876)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) threadNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(237962)	genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(237965)	getVarVar(x(2) x(3))
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('Raise')
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(237987)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Exception' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(5))
		setVariable(y(6))
		setValue(y(1))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(6) x(0))
		sendMsg(getPrintName y(7) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		putList(x(2))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApply 3 x(1))
		setConstant('RaiseDebugCheck')
		setValue(x(2))
		setValue(y(4))
		putList(x(5))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		putRecord(fOpApplyStatement 3 x(3))
		setConstant('RaiseDebugExtend')
		setValue(x(4))
		setValue(y(1))
		putList(x(7))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(6))
		setConstant('Raise')
		setValue(x(7))
		setValue(y(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(6))
		setValue(y(4))
		getList(y(2))
		unifyValVar(y(3) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(238118)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) skipNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238149)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) failNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238180)	getVarVar(x(2) x(3))
		putRecord(fSkip 1 x(7))
		setValue(x(3))
		putRecord(fFail 1 x(8))
		setValue(x(3))
		putRecord(fClause 3 x(6))
		setValue(x(7))
		setValue(x(2))
		setValue(x(8))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putRecord(fSkip 1 x(9))
		setValue(x(3))
		putRecord(fCond 3 x(4))
		setValue(x(5))
		setValue(x(9))
		setValue(x(3))
		putRecord(fThread 2 x(0))
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(238238)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant(fif x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		createVariable(y(4))
		testRecord(y(0) fNoElse 1 238291)
lbl(238263)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
		branch(238326)
lbl(238291)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(5) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
lbl(238326)	move(g(1) x(0))
		inlineDot(x(0) ifNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL6
		return
lbl(238359)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		match(y(0) ht(238472 [onScalar(for 238379) onScalar(fdis 238410) onScalar(fchoice 238441)]))
lbl(238379)	move(g(1) x(0))
		inlineDot(x(0) orNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238410)	move(g(1) x(0))
		inlineDot(x(0) disNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238441)	move(g(1) x(0))
		inlineDot(x(0) choiceNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238472)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(990)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238485)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		getSelf(x(3))
lbl(238511)	definition(x(1) 238786 pid('' 2 pos('./compiler/Unnester.oz' 995 6) nil 5) unit [x(3) g(0) x(0)])
		move(g(0) x(2))
		setSelf(x(2))
		getSelf(x(3))
lbl(238524)	definition(x(4) 238775 pid('' 2 pos('./compiler/Unnester.oz' 997 3) nil 4) unit [x(3) g(1) g(2)])
		allocateL(11)
		move(g(0) x(2))
		setSelf(x(2))
		move(x(1) y(0))
		createVariable(y(1))
		createVariable(y(2))
		match(x(0) ht(238743 [onRecord(fFdCompare 4 238547) onRecord(fFdIn 4 238594)]))
lbl(238547)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdCompare 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238756)
lbl(238594)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariable(y(6))
		createVariable(y(7))
		match(y(3) ht(238663 [onScalar('::' 238607) onScalar(':::' 238653)]))
lbl(238607)	move(y(6) x(2))
		putConstant('UnnestFDIn' x(1))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		getRecord(fVar 2 y(7))
		unifyVariable(x(0))
		unifyVariable(y(8))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(8) x(0))
		sendMsg(getCoord y(9) 1 cache)
		branch(238676)
lbl(238653)	moveMoveYXYX(y(6) x(1) y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDList> false 3) 0)
		branch(238676)
lbl(238663)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1013)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238676)	move(y(4) x(0))
		putConstant('UnnestDomain' x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(9) 1 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(4) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(4) 1 cache)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdIn 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238756)
lbl(238743)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(1019)
		setValue(x(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(238756)	putList(x(0))
		setVariable(x(1))
		setValue(y(1))
		move(g(2) x(2))
		callBI('Exchange' [x(2) x(1) x(0)]#nil)
		unify(y(2) y(0))
		deAllocateL
		return
		endDefinition(238524)
lbl(238775)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(238511)
lbl(238786)	moveMoveXYYX(x(0) y(3) y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: BA> x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<Q: 1480> 8)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(3) x(0))
		callBI('Access' [x(0)]#[x(4)])
		putList(x(1))
		setValue(x(4))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1489> 9)
lbl(238860)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		putConstant('expression at statement position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Error' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fVar 2 x(1))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(233461)
lbl(238940)	definition(x(8) 238975 pid('Unnester,UnnestStatement/slow' 1 pos('./compiler/Unnester.oz' 548 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1504> 5)
		endDefinition(238940)
lbl(238975)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: UnnestStatement>)
		setValue(x(8))
		setValue(x(7))
lbl(238985)	definition(x(7) 244124 pid('Unnester,UnnestExpression/fast' 3 pos('./compiler/Unnester.oz' 1034 6) nil 13) <Q: 1505> [y(3) y(0) y(4) g(11) g(12)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		match(y(0) ht(244093 [onRecord(fTypeOf 1 239010) onRecord(fStepPoint 3 239065) onRecord(fAnd 2 239162) onRecord(fEq 3 239186) onRecord(fAssign 3 239208) onRecord(fOrElse 3 239305) onRecord(fAndThen 3 239357) onRecord(fOpApply 3 239409) onRecord(fUnoptimizedDot 2 239721) onRecord(fFdCompare 4 239850) onRecord(fFdIn 4 239912) onRecord(fObjApply 3 240066) onRecord(fAt 2 240252) onRecord(fAtom 2 240339) onRecord(fVar 2 240425) onRecord(fWildcard 1 240502) onRecord(fEscape 2 240530) onRecord(fSelf 1 240541) onRecord(fDollar 1 240664) onRecord(fInt 2 240714) onRecord(fFloat 2 240800) onRecord(fRecord 2 240886) onRecord(fOpenRecord 2 241007) onRecord(fApply 3 241128) onRecord(fProc 5 241336) onRecord(fFun 5 241413) onRecord(fFunctor 3 241490) onRecord(fClass 4 241557) onRecord(fScanner 6 241625) onRecord(fParser 7 241695) onRecord(fLocal 3 241769) onRecord(fBoolCase 4 242271) onRecord(fCase 4 242342) onRecord(fLockThen 3 242832) onRecord(fLock 2 242864) onRecord(fThread 2 242947) onRecord(fTry 4 242984) onRecord(fRaise 2 243383) onRecord(fRaiseWith 3 243416) onRecord(fNot 2 243449) onRecord(fCond 3 243477) onRecord(fOr 3 243764)]))
lbl(239010)	getVariable(y(0))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(1) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) typeOf x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		move(y(1) x(1))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(239065)	getVarVar(x(0) y(0))
		getVariable(y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 239146 239151)
lbl(239100)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(1) 239146 239151)
lbl(239113)	move(g(0) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(3) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL
		return
lbl(239146)	unify(y(2) y(4))
		deAllocateL
		return
lbl(239151)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1040)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(239162)	getVarVar(x(0) y(0))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(239186)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(4))
		deAllocateL
		return
lbl(239208)	getVarVar(x(0) x(1))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		testBool(x(2) 239237 239259)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(239270)
lbl(239237)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute exchange used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(239270)
lbl(239259)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1051)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(239270)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(y(4))
		setValue(x(3))
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooExch)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239305)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fVar 2 x(5))
		setConstant('`true`')
		setValue(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(5))
		setValue(x(4))
		putRecord(fEq 3 x(6))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(6))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239357)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fVar 2 x(6))
		setConstant('`false`')
		setValue(x(4))
		putRecord(fEq 3 x(5))
		setValue(y(1))
		setValue(x(6))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(5))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239409)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 239432)
		branch(239489)
lbl(239432)	createVariable(y(6))
		testList(y(4) 239450)
lbl(239437)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 239450)
		getLiteral(prefix y(6))
		branch(239453)
lbl(239450)	getLiteral(infix y(6))
lbl(239453)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(7) y(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setValue(y(6))
		setConstant(' operator cannot take $ as argument')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
lbl(239489)	testRecord(y(0) fOpApply 3 239555)
lbl(239494)	getVarVar(x(0) x(1))
		shallowGuard(239555)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239530)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239555)	testRecord(y(0) fOpApply 3 239623)
lbl(239560)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(239623)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239598)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239623)	move(g(2) x(0))
		inlineDot(x(0) procs x(1) cache)
		move(y(3) x(2))
		callBI('.' [x(1) x(2)]#[x(3)])
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(3) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 21> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(3) x(0))
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		sendMsg(init y(1) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(6))
		unifyValue(y(1))
		deAllocateL
		return
lbl(239721)	getVarVar(x(3) y(3))
		getRecord(fVar 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(4))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(referUnchecked x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(3))
		setValue(x(1))
		createVariableMove(y(3) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValVar(y(7) y(9))
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(8))
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		move(x(4) x(1))
		move(y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(9))
		deAllocateL
		return
lbl(239850)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(9) x(2) y(5) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1468> 12)
		getList(y(2))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239912)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		match(x(0) ht(239941 [onScalar('::' 239931) onScalar(':::' 239936)]))
lbl(239931)	getLiteral(int y(6))
		branch(239954)
lbl(239936)	getLiteral(dom y(6))
		branch(239954)
lbl(239941)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(239954)	move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(5))
		setConstant('FD')
		setValue(y(5))
		putRecord(fAtom 2 x(7))
		setConstant(reified)
		setValue(y(5))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putRecord(fOpApply 3 x(3))
		setConstant('.')
		setValue(x(4))
		setValue(y(5))
		putRecord(fAtom 2 x(9))
		setValue(y(6))
		setValue(y(5))
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(7))
		putList(x(12))
		setValue(y(1))
		setConstant(nil)
		putList(x(11))
		setValue(y(3))
		setValue(x(12))
		putList(x(10))
		setValue(y(4))
		setValue(x(11))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(10))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240066)	getVarVar(y(3) y(4))
		getVariable(y(5))
		inlineAt(<M: Stateful> x(0) cache)
		testBool(x(0) 240179 240201)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 1 240152)
		testRecord(y(3) fSelf 1 240212)
lbl(240109)	getVariable(x(0))
		inlineAt(reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('use a class in front of "," ')
		setConstant('or use {self message}')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(240212)
lbl(240152)	inlineAt(reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('message of nested object application ')
		setConstant('must contain exactly one nesting marker')
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240212)
lbl(240179)	inlineAt(reporter x(3) cache)
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240212)
lbl(240201)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1112)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(240212)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240252)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 240277 240299)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(240310)
lbl(240277)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute access used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240310)
lbl(240299)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1138)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(240310)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(4))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('@')
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240339)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240425)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(6) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240502)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240530)	getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(240541)	getVariable(y(3))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(4) x(1) y(5))
		testBool(x(2) 240575 240597)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(240608)
lbl(240575)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('self used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240608)
lbl(240597)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1158)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(240608)	move(g(0) x(0))
		inlineDot(x(0) 'getSelf' x(1) cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240664)	getVariable(y(3))
		inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(0) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240714)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240800)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240886)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 240945)
lbl(240940)	getLiteral('' y(8))
		branch(240948)
lbl(240945)	unify(y(8) y(5))
lbl(240948)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(3) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(241007)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 241066)
lbl(241061)	getLiteral('' y(8))
		branch(241069)
lbl(241066)	unify(y(8) y(5))
lbl(241069)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(241128)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(3) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 241197)
lbl(241161)	testNumber(y(7) 0 241197)
lbl(241165)	putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241197)	testNumber(y(6) 0 241233)
lbl(241201)	testNumber(y(7) 1 241233)
lbl(241205)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241233)	testNumber(y(6) 1 241284)
lbl(241237)	testNumber(y(7) 0 241284)
lbl(241241)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(6))
		setValue(y(3))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241284)	inlineAt(reporter x(0) cache)
		putList(x(2))
		setValue(y(3))
		setValue(y(4))
		move(x(0) y(3))
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setConstant('at most one nesting marker allowed ')
		setConstant('in nested application')
		move(y(4) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241336)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241370)
lbl(241349)	putRecord(fProc 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241370)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested procedure')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241413)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241447)
lbl(241426)	putRecord(fFun 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241447)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested function')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241490)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testRecord(x(0) fDollar 1 241517)
lbl(241500)	putRecord(fFunctor 3 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241517)	inlineAt(reporter x(1) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(5) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested functor' x(2))
		sendMsg(error y(4) [coord kind msg] cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241557)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		testRecord(x(0) fDollar 1 241587)
lbl(241568)	putRecord(fClass 4 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241587)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested class' x(2))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241625)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		testRecord(x(0) fDollar 1 241662)
lbl(241639)	putRecord(fScanner 6 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241662)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested scanner class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241695)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		testRecord(x(0) fDollar 1 241736)
lbl(241711)	putRecord(fParser 7 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241736)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested parser class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241769)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(0))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(4))
lbl(241827)	definition(x(1) 242054 pid('' 3 pos('./compiler/Unnester.oz' 1276 19) nil 7) unit [x(4) y(6) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		testRecord(x(1) fVar 2 241888)
lbl(241843)	allocateL3
		getVarVar(y(0) x(1))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(y(0) x(0))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		move(y(0) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL3
		return
lbl(241888)	testRecord(x(1) fDoImport 3 241971)
lbl(241893)	allocateL5
		getVarVar(x(4) x(5))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(1))
		unifyVariable(y(1))
		unifyVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		move(x(5) x(3))
		createVariableMove(y(4) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: UnnestImportFeatures> false 2) 0)
		move(y(1) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(2) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(3))
		deAllocateL5
		return
lbl(241971)	allocateL3
		move(x(1) y(0))
		testRecord(y(0) fExportItem 1 242039)
lbl(241980)	getVariable(x(4))
		shallowGuard(242039)
		getRecord(fVar 2 x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(241992)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYYX(x(5) y(2) y(2) x(0))
		move(x(6) x(1))
		createVariable(x(2))
		sendMsg(bindExport x(4) 3 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
		deAllocateL3
		return
lbl(242039)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1289)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(241827)
lbl(242054)	move(y(8) x(0))
		putConstant(false x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 242209 242260)
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('AntiNameClash' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putList(y(8))
		setVariable(x(1))
		setVariable(y(10))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(10) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		getList(y(2))
		unifyVariable(y(4))
		unifyVariable(y(6))
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		createVariableMove(y(10) x(1))
		sendMsg(occ y(3) 2 cache)
		move(y(9) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(10) x(1) y(5) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(4))
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242209)	putList(y(3))
		setVariable(x(1))
		setVariable(y(6))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242260)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(242271)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testRecord(y(5) fNoElse 1 242298)
lbl(242293)	unify(y(8) y(5))
		branch(242313)
lbl(242298)	getRecord(fEq 3 y(8))
		unifyValue(y(1))
		unifyValVar(y(5) x(1))
		move(y(5) x(0))
		genFastCall(<Q: 1483> 4)
lbl(242313)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(y(3))
		setValue(x(1))
		setValue(y(8))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242342)	getVarVar(x(0) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(1))
		inlineDot(x(1) 1 x(2) cache)
		move(x(2) y(6))
		putConstant('Arbiter' x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(9) 1 cache)
		getSelf(x(0))
lbl(242406)	definition(x(1) 242773 pid('' 3 pos('./compiler/Unnester.oz' 1315 4) nil 5) unit [x(0) y(6) y(5) g(1) y(1) y(8)])
		allocateL5
		move(g(0) x(3))
		setSelf(x(3))
lbl(242418)	definition(x(4) 242457 pid('' 3 pos('./compiler/Unnester.oz' 1317 8) nil 5) unit nil)
		shallowGuard(242444)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(242434)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(242444)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1317)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242418)
lbl(242457)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
lbl(242477)	definition(x(1) 242517 pid('' 2 pos('./compiler/Unnester.oz' 1320 20) nil 4) unit [g(1)])
		shallowGuard(242504)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242493)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(242504)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1320)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242477)
lbl(242517)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(4) 242670 242760)
		move(g(1) x(0))
		move(y(3) x(1))
		move(g(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setValue(g(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(3))
		unifyValue(g(4))
		unifyValue(g(2))
		getRecord(fCase 4 x(1))
		unifyValVar(g(5) x(2))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(242594)	definition(x(1) 242660 pid('' 2 pos('./compiler/Unnester.oz' 1327 6) nil 4) unit [y(3)])
		shallowGuard(242647)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242610)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242647)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242594)
lbl(242660)	move(y(0) x(0))
		move(x(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242670)	getRecord(fCase 4 y(2))
		unifyValVar(g(5) x(0))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(242687)	definition(x(1) 242753 pid('' 2 pos('./compiler/Unnester.oz' 1333 8) nil 4) unit [g(4)])
		shallowGuard(242740)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242703)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242740)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1333)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242687)
lbl(242753)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242760)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1320)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242406)
lbl(242773)	move(x(1) y(5))
		createVariable(y(6))
		testRecord(y(4) fNoElse 1 242788)
lbl(242783)	unify(y(6) y(4))
		branch(242806)
lbl(242788)	getRecord(fEq 3 y(6))
		unifyValue(y(1))
		unifyValVar(y(4) x(2))
		move(y(4) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1483> 4)
lbl(242806)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 32> 8)
		getList(y(2))
		unifyValVar(y(7) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242832)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fLockThen 3 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242864)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 242889 242911)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(242922)
lbl(242889)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(242922)
lbl(242911)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1346)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(242922)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(3))
		putRecord(fLock 2 x(0))
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242947)	getVarVar(y(3) y(4))
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1483> 4)
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(3))
		setValue(y(5))
		putRecord(fThread 2 x(0))
		setValue(x(1))
		setValue(y(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242984)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('TryResult' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setValue(y(6))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fEq 3 x(0))
		setValue(y(8))
		setValue(y(3))
		setValue(y(6))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(8))
		setValue(y(6))
		putRecord(fAnd 2 x(2))
		setValue(x(0))
		setValue(x(1))
		match(y(4) ht(243370 [onScalar(fNoCatch 243055) onRecord(fCatch 2 243074)]))
lbl(243055)	putRecord(fTry 4 x(0))
		setValue(x(2))
		setConstant(fNoCatch)
		setValue(y(5))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243074)	getVarVar(y(3) y(4))
lbl(243077)	definition(x(1) 243116 pid('' 3 pos('./compiler/Unnester.oz' 1364 2) nil 5) unit nil)
		shallowGuard(243103)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(243093)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243103)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1364)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243077)
lbl(243116)	moveMoveXYYX(x(2) y(7) y(3) x(0))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(243139)	definition(x(3) 243179 pid('' 2 pos('./compiler/Unnester.oz' 1368 21) nil 4) unit [x(1)])
		shallowGuard(243166)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243155)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243166)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243139)
lbl(243179)	moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(x(3) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(11))
		createVariable(y(12))
		createVariable(y(13))
		testBool(y(10) 243270 243294)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(6) x(2))
		createVariableMove(y(10) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		getRecord(fVar 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(6))
		sendMsg(getPrintName y(10) 1 cache)
		getRecord(fAnd 2 y(12))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(1))
		unifyValue(y(11))
		unifyValue(y(6))
		getRecord(fTry 4 x(1))
		unifyValVar(y(7) x(2))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(2))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243305)
lbl(243270)	unify(y(11) y(1))
		getRecord(fTry 4 y(12))
		unifyValVar(y(7) x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(0))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243305)
lbl(243294)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243305)	definition(x(1) 243353 pid('' 2 pos('./compiler/Unnester.oz' 1379 7) nil 4) unit [y(11) y(6)])
		shallowGuard(243340)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243321)	shallowThen
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(3))
		unifyValue(g(1))
		return
lbl(243340)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243305)
lbl(243353)	moveMoveYXYX(y(3) x(0) y(13) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(12) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243370)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1383)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243383)	getVoid(1)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243416)	getVoid(2)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243449)	getVarVar(x(2) x(3))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fNot 2 x(0))
		setValue(x(1))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243477)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243490)	definition(x(1) 243531 pid('' 3 pos('./compiler/Unnester.oz' 1394 6) nil 6) unit nil)
		shallowGuard(243518)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243508)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243518)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243490)
lbl(243531)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fCond 3 y(8))
		setVariable(x(2))
		setVariable(y(9))
		setValue(y(5))
		createVariable(y(10))
lbl(243555)	definition(x(1) 243607 pid('' 2 pos('./compiler/Unnester.oz' 1398 3) nil 5) unit [y(10) y(5)])
		shallowGuard(243594)
		getRecord(fClause 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(243573)	shallowThen
		getRecord(fClause 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(4))
		unifyValue(g(1))
		return
lbl(243594)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1398)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243555)
lbl(243607)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		testRecord(y(4) fNoElse 1 243623)
lbl(243618)	unify(y(9) y(4))
		branch(243633)
lbl(243623)	getRecord(fEq 3 y(9))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(5))
lbl(243633)	definition(x(1) 243673 pid('' 2 pos('./compiler/Unnester.oz' 1404 18) nil 4) unit [y(6)])
		shallowGuard(243660)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243649)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243660)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1404)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243633)
lbl(243673)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 243741 243753)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243741)	unify(y(10) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243764)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243777)	definition(x(1) 243818 pid('' 3 pos('./compiler/Unnester.oz' 1416 6) nil 6) unit nil)
		shallowGuard(243805)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243795)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243805)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1416)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243777)
lbl(243818)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fOr 3 y(8))
		setVariable(x(2))
		setValue(y(4))
		setValue(y(5))
		getSelf(x(3))
		createVariable(y(4))
lbl(243844)	definition(x(1) 243956 pid('' 2 pos('./compiler/Unnester.oz' 1420 8) nil 8) unit [x(3) y(4) y(5)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(243943)
		getRecord(fClause 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243867)	shallowThen
		testRecord(x(5) fNoThen 1 243923)
lbl(243873)	allocateL4
		getVariable(x(0))
		inlineAt(reporter x(6) cache)
		putRecord('#' 2 x(7))
		setConstant('`then\' part in nested `or\' ')
		setConstant('not optional')
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error x(6) [coord kind msg] cache)
		getRecord(fClause 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(243923)	getRecord(fClause 3 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(1))
		unifyValue(x(5))
		unifyValue(g(2))
		return
lbl(243943)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1420)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243844)
lbl(243956)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
lbl(243962)	definition(x(1) 244002 pid('' 2 pos('./compiler/Unnester.oz' 1431 18) nil 4) unit [y(6)])
		shallowGuard(243989)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243978)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243989)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1431)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243962)
lbl(244002)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 244070 244082)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(244070)	unify(y(4) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(244082)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1431)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(244093)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('syntax error' x(1))
		putConstant('statement at expression position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(238985)
lbl(244124)	definition(x(8) 244165 pid('Unnester,UnnestExpression/slow' 1 pos('./compiler/Unnester.oz' 1034 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1505> 7)
		endDefinition(244124)
lbl(244165)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: UnnestExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(244175)	definition(x(7) 244399 pid('Unnester,UnnestApplyArgs/fast' 4 pos('./compiler/Unnester.oz' 1448 6) nil 6) <Q: 1506> [y(0) g(11) y(3)])
		match(x(0) ht(244384 [onScalar(nil 244184) onRecord('|' 2 244194)]))
lbl(244184)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244194)	allocateL10
		getVarVar(x(0) y(0))
		testRecord(x(0) fRecord 2 244346)
lbl(244203)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(3) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('UnnestApply' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(g(1) x(3))
		putConstant('' x(0))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		getList(y(3))
		unifyValVar(y(9) y(1))
		move(g(2) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(2) y(6) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(7) 2 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(3) x(0))
		moveMoveYXYX(y(8) x(1) y(6) x(2))
		sendMsg(init y(9) 3 cache)
		getList(y(4))
		unifyValVar(y(9) y(2))
		getList(y(5))
		unifyVariable(x(1))
		unifyVariable(y(3))
		move(y(6) x(0))
		sendMsg(occ y(7) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244346)	getList(x(1))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(4) x(2))
		putConstant('UnnestApply' x(1))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1474)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(244175)
lbl(244399)	definition(x(8) 244446 pid('Unnester,UnnestApplyArgs/slow' 1 pos('./compiler/Unnester.oz' 1448 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1506> 9)
		endDefinition(244399)
lbl(244446)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(244456)	definition(x(7) 244738 pid('Unnester,UnnestConstraint/fast' 4 pos('./compiler/Unnester.oz' 1476 6) nil 8) <Q: 1507> [y(0) g(11) y(3) g(12)])
		match(x(0) ht(244727 [onRecord(fEq 3 244465) onRecord(fRecord 2 244514) onRecord(fOpenRecord 2 244601) onRecord(fVar 2 244688) onRecord(fWildcard 1 244694) onRecord(fEscape 2 244701) onRecord(fAtom 2 244709) onRecord(fInt 2 244715) onRecord(fFloat 2 244721)]))
lbl(244465)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(4))
		unifyValue(y(6))
		getList(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(244514)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(1) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244601)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(3) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244688)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244694)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244701)	getVariable(x(0))
		getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244709)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244715)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244721)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244727)	getLiteral(nil x(2))
		move(x(3) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(244456)
lbl(244738)	definition(x(8) 244785 pid('Unnester,UnnestConstraint/slow' 1 pos('./compiler/Unnester.oz' 1476 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1507> 9)
		endDefinition(244738)
lbl(244785)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: UnnestConstraint>)
		setValue(x(8))
		setValue(x(7))
lbl(244795)	definition(x(7) 245346 pid('Unnester,UnnestRecord/fast' 6 pos('./compiler/Unnester.oz' 1517 6) nil 6) <Q: 1508> [y(0) g(13) g(11) g(12) g(14) y(3)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		putConstant(1 x(4))
		callBI('NewCell' [x(4)]#[x(5)])
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(4))
		getSelf(x(4))
lbl(244840)	definition(x(1) 245271 pid('' 3 pos('./compiler/Unnester.oz' 1524 3) nil 7) unit [x(4) g(0) x(5) y(0) g(2) g(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(245258)
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(244861)	shallowThen
		allocateL10
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(1) fColon 2 244949)
lbl(244881)	getVarVar(y(6) y(7))
		moveMoveXYYX(x(4) y(8) y(6) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(2) y(7))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(8))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(4))
		match(y(6) ht(244936 [onRecord(fAtom 2 244915) onRecord(fVar 2 244922) onRecord(fInt 2 244929)]))
lbl(244915)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244976)
lbl(244922)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244976)
lbl(244929)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244976)
lbl(244936)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1532)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(244949)	unify(y(2) x(1))
		getList(y(3))
		unifyValue(y(4))
		unifyValue(x(4))
		move(g(2) x(0))
		callBI('Access' [x(0)]#[x(4)])
		unify(x(4) y(5))
		callBI('Access' [x(0)]#[x(4)])
		inlinePlus1(x(4) x(6))
		callBI('Assign' [x(0) x(6)]#nil)
lbl(244976)	match(y(2) ht(245189 [onRecord(fEq 3 244979) onRecord(fRecord 2 245061) onRecord(fOpenRecord 2 245125)]))
lbl(244979)	getVoid(2)
		getVariable(y(5))
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(occ y(6) 2 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(6) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(245061)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 245080)
lbl(245075)	getLiteral('' y(7))
		branch(245090)
lbl(245080)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(245090)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(4) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245125)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 245144)
lbl(245139)	getLiteral('' y(7))
		branch(245154)
lbl(245144)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(245154)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(5) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245189)	moveMoveYXYX(y(2) x(0) y(4) x(3))
		putConstant('RecordArg' x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestToTerm> false 4) 0)
		match(g(3) ht(245206 [onScalar('' 245243)]))
lbl(245206)	move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		match(y(2) ht(245218 [onScalar(nil 245243)]))
lbl(245218)	putRecord('#' 3 x(0))
		setValue(g(3))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 195> 4)
		move(y(4) x(0))
		sendMsg(setPrintName y(2) 1 cache)
lbl(245243)	getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(245258)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1524)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(244840)
lbl(245271)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 30> 8)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		createVariable(x(2))
		move(y(0) x(0))
		move(x(2) x(3))
		createVariableMove(y(1) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(5) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
		endDefinition(244795)
lbl(245346)	definition(x(8) 245405 pid('Unnester,UnnestRecord/slow' 1 pos('./compiler/Unnester.oz' 1517 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1508> 13)
		endDefinition(245346)
lbl(245405)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: UnnestRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(245415)	definition(x(7) 245859 pid('Unnester,UnnestProc/fast' 5 pos('./compiler/Unnester.oz' 1578 6) nil 6) <Q: 1509> [y(0)])
		allocateL(11)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(nil x(1))
		createVariableMove(y(5) x(2))
		putConstant(nil x(3))
		createVariableMove(y(6) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestProcFormals> false 6) 0)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testList(y(5) 245707)
lbl(245468)	getVarVar(x(2) x(0))
lbl(245471)	definition(x(1) 245488 pid('' 3 pos('./compiler/Unnester.oz' 1586 25) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245471)
lbl(245488)	createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getVars x(1) 1 cache)
lbl(245508)	definition(x(1) 245536 pid('' 2 pos('./compiler/Unnester.oz' 1591 7) nil 3) unit nil)
		getRecord(fVar 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(unit)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(245508)
lbl(245536)	move(y(9) x(0))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 29> 6)
lbl(245545)	definition(x(1) 245565 pid('' 3 pos('./compiler/Unnester.oz' 1592 17) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(245545)
lbl(245565)	move(y(0) x(0))
		createVariableMove(y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(10) x(0) y(9) x(1))
		createVariableMove(y(0) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1430> 8)
		match(y(0) ht(245694 [onScalar(nil 245594) onRecord('|' 2 245634)]))
lbl(245594)	getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyVariable(x(3))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fSkip 1 x(3))
		unifyValue(y(3))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245710)
lbl(245634)	getVarVar(x(2) x(0))
lbl(245637)	definition(x(1) 245654 pid('' 3 pos('./compiler/Unnester.oz' 1597 29) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245637)
lbl(245654)	createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyValue(y(0))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245710)
lbl(245694)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1601)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245707)	unify(y(8) y(1))
lbl(245710)	createVariable(y(0))
		testBool(y(2) 245763 245768)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1482> 4)
		getRecord(fOpApply 3 y(0))
		unifyLiteral(byNeed)
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fFun 5 x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		unifyValue(y(8))
		unifyLiteral(nil)
		unifyValue(y(1))
		getRecord(fDollar 1 x(2))
		unifyValue(y(3))
		branch(245779)
lbl(245763)	unify(y(0) y(8))
		branch(245779)
lbl(245768)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1605)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245779)	definition(x(1) 245798 pid('' 3 pos('./compiler/Unnester.oz' 1611 29) nil 3) unit [y(7)])
		getRecord(fEq 3 x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(g(0))
		return
		endDefinition(245779)
lbl(245798)	moveMoveYXYX(y(6) x(0) y(0) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
		endDefinition(245415)
lbl(245859)	definition(x(8) 245912 pid('Unnester,UnnestProc/slow' 1 pos('./compiler/Unnester.oz' 1578 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1509> 11)
		endDefinition(245859)
lbl(245912)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: UnnestProc>)
		setValue(x(8))
		setValue(x(7))
lbl(245922)	definition(x(7) 245999 pid('Unnester,UnnestProcFormals/fast' 6 pos('./compiler/Unnester.oz' 1616 6) nil 7) <Q: 1510> [y(0)])
		match(x(0) ht(245984 [onScalar(nil 245931) onRecord('|' 2 245938)]))
lbl(245931)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(245938)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(5) y(2))
		move(x(2) x(3))
		move(x(4) x(5))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(6))
		genCall(gci(g(0) true <M: UnnestProcFormal> false 7) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(2) x(5))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestProcFormals> true 6) 0)
lbl(245984)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1623)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(245922)
lbl(245999)	definition(x(8) 246058 pid('Unnester,UnnestProcFormals/slow' 1 pos('./compiler/Unnester.oz' 1616 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1510> 13)
		endDefinition(245999)
lbl(246058)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(8))
		setValue(x(7))
lbl(246068)	definition(x(7) 246470 pid('Unnester,UnnestProcFormal/fast' 7 pos('./compiler/Unnester.oz' 1625 6) nil 9) <Q: 1511> nil)
		match(x(0) ht(246334 [onRecord(fVar 2 246077) onRecord(fWildcard 1 246215) onRecord(fDollar 1 246263)]))
lbl(246077)	allocateL10
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		moveMoveXYYX(x(6) y(8) y(0) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 246172 246204)
		unify(y(4) y(3))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(1))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		move(x(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246172)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariable(x(2))
		sendMsg(bind x(3) 3 cache)
		getList(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unify(y(5) y(6))
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246204)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1627)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246215)	allocateL6
		getVariable(x(7))
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(1))
		putConstant('Wildcard' x(0))
		createVariable(x(2))
		sendMsg(generate x(8) 3 cache)
		unify(y(1) y(0))
		unify(y(2) y(3))
		unify(y(4) y(5))
		deAllocateL6
		return
lbl(246263)	allocateL8
		getVariable(y(0))
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(y(0) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(7) 3 cache)
		unify(y(2) y(1))
		unify(y(3) y(4))
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(x(1) x(0))
		move(y(7) x(1))
		deAllocateL8
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(246334)	allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1494> 4)
		testBool(y(8) 246374 246396)
		branch(246407)
lbl(246374)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('syntax error' x(1))
		putConstant('only patterns in proc/fun head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(246407)
lbl(246396)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246407)	inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		unify(y(2) y(1))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyValue(y(7))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		move(x(2) x(0))
		sendMsg(getPrintName y(8) 1 cache)
		unify(y(5) y(6))
		deAllocateL9
		return
		endDefinition(246068)
lbl(246470)	definition(x(8) 246535 pid('Unnester,UnnestProcFormal/slow' 1 pos('./compiler/Unnester.oz' 1625 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1511> 15)
		endDefinition(246470)
lbl(246535)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(246545)	definition(x(7) 246794 pid('Unnester,AnalyseImports/fast' 4 pos('./compiler/Unnester.oz' 1662 6) nil 7) <Q: 1512> [y(0)])
		match(x(0) ht(246779 [onScalar(nil 246554) onRecord('|' 2 246564)]))
lbl(246554)	getLiteral(nil x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246564)	allocateL(12)
		getVarVar(y(0) y(1))
		getRecord(fImportItem 3 y(0))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		getRecord(fVar 2 x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		moveMoveXYXY(x(3) y(8) x(4) y(9))
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		moveMoveYXYX(y(2) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImportFeatures> false 4) 0)
		getRecord(fAnd 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAnd 2 x(0))
		unifyVariable(x(2))
		unifyValue(y(11))
		getRecord(fDoImport 3 x(2))
		unifyValue(y(0))
		unifyVoid(1)
		unifyValue(y(6))
		putRecord(fAtom 2 x(2))
		setConstant(info)
		setValue(y(5))
		putRecord(fAtom 2 x(5))
		setConstant(type)
		setValue(y(5))
		putRecord(fColon 2 x(4))
		setValue(x(5))
		setValue(y(10))
		putList(x(3))
		setValue(x(4))
		setVariable(x(6))
		putRecord(fRecord 2 x(0))
		setValue(x(2))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(0) y(2))
		match(y(3) ht(246732 [onScalar(fNoImportAt 246701) onRecord(fImportAt 1 246706)]))
lbl(246701)	getLiteral(nil x(6))
		branch(246745)
lbl(246706)	getVariable(x(2))
		getList(x(6))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fColon 2 x(3))
		unifyVariable(x(4))
		unifyValue(x(2))
		getRecord(fAtom 2 x(4))
		unifyLiteral('from')
		unifyValue(y(5))
		branch(246745)
lbl(246732)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1677)
		setValue(y(3))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(246745)	getList(y(7))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord(fAtom 2 x(1))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(0) x(3))
		deAllocateL
		genCall(gci(g(0) true <M: AnalyseImports> true 4) 0)
lbl(246779)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1683)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246545)
lbl(246794)	definition(x(8) 246841 pid('Unnester,AnalyseImports/slow' 1 pos('./compiler/Unnester.oz' 1662 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1512> 9)
		endDefinition(246794)
lbl(246841)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AnalyseImports>)
		setValue(x(8))
		setValue(x(7))
lbl(246851)	definition(x(7) 247029 pid('Unnester,AnalyseImportFeatures/fast' 4 pos('./compiler/Unnester.oz' 1685 6) nil 9) <Q: 1513> [y(0)])
		match(x(0) ht(247014 [onScalar(nil 246860) onRecord('|' 2 246875)]))
lbl(246860)	getRecord(fAtom 2 x(2))
		unifyLiteral(nil)
		unifyLiteral(unit)
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246875)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		createVariable(y(4))
		createVariable(y(5))
		move(x(3) y(6))
		testRecord(y(0) '#' 2 246967)
lbl(246899)	getVarVar(x(4) x(5))
		shallowGuard(246967)
		getRecord(fVar 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(246912)	shallowThen
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(4) y(0) x(5) y(7))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariable(x(2))
		sendMsg(bind x(8) 3 cache)
		unify(y(4) y(7))
		getRecord(fAnd 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fEq 3 x(0))
		unifyValVar(y(0) x(1))
		unifyLiteral(unit)
		getRecord(fUnoptimizedDot 2 x(1))
		unifyValue(y(1))
		unifyValue(y(7))
		branch(246973)
lbl(246967)	unify(y(4) y(0))
		unify(y(6) y(5))
lbl(246973)	getRecord(fRecord 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('|')
		unifyLiteral(unit)
		getListValVar(x(1) y(4) x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(x(4) x(2))
		move(y(5) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AnalyseImportFeatures> true 4) 0)
lbl(247014)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1700)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246851)
lbl(247029)	definition(x(8) 247076 pid('Unnester,AnalyseImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1685 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1513> 9)
		endDefinition(247029)
lbl(247076)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(247086)	definition(x(7) 247279 pid('Unnester,UnnestImportFeatures/fast' 2 pos('./compiler/Unnester.oz' 1702 6) nil 7) <Q: 1514> [y(0)])
		match(x(0) ht(247264 [onScalar(nil 247095) onRecord('|' 2 247099)]))
lbl(247095)	getLiteral(nil x(1))
		return
lbl(247099)	allocateL5
		getVarVar(y(0) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) '#' 2 247209)
lbl(247122)	getVarVar(x(3) x(4))
		shallowGuard(247209)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(247135)	shallowThen
		inlineAt(<M: BA> x(3) cache)
		move(x(4) y(0))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		match(y(0) ht(247196 [onRecord(fAtom 2 247162) onRecord(fInt 2 247179)]))
lbl(247162)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247255)
lbl(247179)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247255)
lbl(247196)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1708)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247209)	match(y(0) ht(247242 [onRecord(fAtom 2 247212) onRecord(fInt 2 247227)]))
lbl(247212)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247255)
lbl(247227)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247255)
lbl(247242)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1711)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247255)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestImportFeatures> true 2) 0)
lbl(247264)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1713)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247086)
lbl(247279)	definition(x(8) 247314 pid('Unnester,UnnestImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1514> 5)
		endDefinition(247279)
lbl(247314)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(247324)	definition(x(7) 247567 pid('Unnester,OptimizeImportFeature/fast' 7 pos('./compiler/Unnester.oz' 1715 6) nil 8) <Q: 1515> [y(4) y(0) y(3)])
		allocateL7
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(referImport x(7) 5 cache)
		move(y(4) x(0))
		testBI('Not' [x(0)]#[x(1)] 247475)
lbl(247374)	move(g(0) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putList(x(0))
		setValue(y(2))
		setValue(x(1))
		createVariableMove(y(0) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(3))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValVar(y(2) y(3))
		move(g(2) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(6))
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(x(4) x(1))
		move(y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
lbl(247475)	createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(isRestricted y(4) 1 cache)
		testBool(y(6) 247499 247554)
		branch(247374)
lbl(247499)	getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(0) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL7
		return
lbl(247554)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1717)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(247324)
lbl(247567)	definition(x(8) 247632 pid('Unnester,OptimizeImportFeature/slow' 1 pos('./compiler/Unnester.oz' 1715 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1515> 15)
		endDefinition(247567)
lbl(247632)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(247642)	definition(x(7) 247800 pid('Unnester,AnalyseExports/fast' 3 pos('./compiler/Unnester.oz' 1729 6) nil 7) <Q: 1516> [y(2) y(0)])
		match(x(0) ht(247785 [onScalar(nil 247651) onRecord('|' 2 247658)]))
lbl(247651)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(247658)	allocateL6
		getVarVar(x(0) x(3))
		getRecord(fExportItem 1 x(0))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(247725 [onRecord(fColon 2 247683) onRecord(fVar 2 247694)]))
lbl(247683)	getVarVar(x(0) x(4))
		unify(y(4) x(0))
		unify(y(5) x(4))
		branch(247738)
lbl(247694)	getVarVar(x(0) x(4))
		getRecord(fAtom 2 y(4))
		unifyVariable(x(5))
		unifyValue(x(4))
		move(g(0) x(4))
		inlineDot(x(4) downcasePrintName x(6) cache)
		move(x(5) x(1))
		call(x(6) 2)
		unify(y(5) y(0))
		branch(247738)
lbl(247725)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1739)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247738)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(2))
		getRecord(fTypeOf 1 x(2))
		unifyVariable(x(3))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(4))
		getRecord(fGetBinder 2 x(4))
		unifyValue(y(5))
		unifyValue(x(3))
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: AnalyseExports> true 3) 0)
lbl(247785)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1746)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247642)
lbl(247800)	definition(x(8) 247841 pid('Unnester,AnalyseExports/slow' 1 pos('./compiler/Unnester.oz' 1729 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1516> 7)
		endDefinition(247800)
lbl(247841)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: AnalyseExports>)
		setValue(x(8))
		setValue(x(7))
lbl(247851)	definition(x(7) 247932 pid('Unnester,UnnestFromProp/fast' 6 pos('./compiler/Unnester.oz' 1749 6) nil 6) <Q: 1517> [y(0)])
		match(x(0) ht(247917 [onScalar(nil 247860) onRecord('|' 2 247867)]))
lbl(247860)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(247867)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(5) y(5))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(2))
		unifyValVar(y(6) x(2))
		getList(y(4))
		unifyValVar(y(7) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestFromProp> true 6) 0)
lbl(247917)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1758)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247851)
lbl(247932)	definition(x(8) 247991 pid('Unnester,UnnestFromProp/slow' 1 pos('./compiler/Unnester.oz' 1749 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1517> 13)
		endDefinition(247932)
lbl(247991)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: UnnestFromProp>)
		setValue(x(8))
		setValue(x(7))
lbl(248001)	definition(x(7) 248143 pid('Unnester,UnnestAttrFeat/fast' 6 pos('./compiler/Unnester.oz' 1760 6) nil 6) <Q: 1518> [y(0)])
		match(x(0) ht(248128 [onScalar(nil 248010) onRecord('|' 2 248017)]))
lbl(248010)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(248017)	allocateL(12)
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(5) y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 248089)
lbl(248039)	getVarVar(x(0) y(6))
		moveMoveXYXY(x(2) y(7) x(4) y(8))
		createVariableMove(y(9) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(7))
		unifyValue(y(10))
		unifyValue(y(4))
		getList(y(8))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(248109)
lbl(248089)	moveMoveXYXY(x(2) y(6) x(4) y(7))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(6) y(4))
		getList(y(7))
		unifyValue(y(8))
		unifyValue(y(5))
lbl(248109)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestAttrFeat> true 6) 0)
lbl(248128)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(248001)
lbl(248143)	definition(x(8) 248202 pid('Unnester,UnnestAttrFeat/slow' 1 pos('./compiler/Unnester.oz' 1760 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1518> 13)
		endDefinition(248143)
lbl(248202)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(248212)	definition(x(7) 248811 pid('Unnester,UnnestMeth/fast' 2 pos('./compiler/Unnester.oz' 1779 6) nil 7) <Q: 1519> [y(0) y(3)])
		allocateL(11)
		getRecord(fMeth 3 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		createVariable(y(4))
		createVariable(y(5))
		testRecord(y(0) fEq 3 248292)
lbl(248253)	getVarVar(x(0) x(1))
		shallowGuard(248292)
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(248266)	shallowThen
		unify(y(4) x(0))
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		move(y(5) x(2))
		sendMsg(bind x(4) 3 cache)
		branch(248295)
lbl(248292)	unify(y(4) y(0))
lbl(248295)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genCall(gci(g(0) true <M: UnnestMethHead> false 5) 0)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: UnnestMethFormals1> false 2) 0)
		move(y(6) x(0))
		putConstant(0 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1485> 6)
		putConstant(1 x(0))
		inlineAssign(<M: ArgCounter> x(0) cache)
		createVariable(y(8))
		createVariable(y(9))
		testNumber(y(4) 0 248425)
		move(y(6) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		moveMoveYXYX(y(6) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
		branch(248587)
lbl(248425)	move(y(6) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(4) x(0))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(1) 248465)
		inlineAt(reporter x(3) cache)
		move(y(10) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in method head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(248465)	inlineAt(<M: BA> x(3) cache)
		move(y(10) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(10))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(6) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1487> 6)
		move(y(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(4) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
lbl(248587)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 248653 248642)
lbl(248608)	move(y(5) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		move(x(1) y(1))
		testBool(y(1) 248653 248642)
lbl(248621)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(2) x(1) y(5) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(248653)
lbl(248642)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(248653)	inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(5) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 248709)
		move(g(1) x(0))
		inlineDot(x(0) method x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(9) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(3))
		branch(248748)
lbl(248709)	move(g(1) x(1))
		inlineDot(x(1) methodWithDesignator x(6) cache)
		callBI(newObject [x(6)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(7) x(2))
		moveMoveYXYX(y(5) x(3) y(9) x(4))
		move(y(2) x(5))
		sendMsg(init y(1) 6 cache)
		unify(y(1) y(3))
lbl(248748)	inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 248796 248798)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(setAllVariables x(1) 1 cache)
lbl(248796)	deAllocateL
		return
lbl(248798)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1826)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(248212)
lbl(248811)	definition(x(8) 248846 pid('Unnester,UnnestMeth/slow' 1 pos('./compiler/Unnester.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1519> 5)
		endDefinition(248811)
lbl(248846)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: UnnestMeth>)
		setValue(x(8))
		setValue(x(7))
lbl(248856)	definition(x(7) 249082 pid('Unnester,UnnestMethHead/fast' 5 pos('./compiler/Unnester.oz' 1830 6) nil 8) <Q: 1520> [y(3) y(0)])
		match(x(0) ht(249067 [onRecord(fAtom 2 248865) onRecord(fVar 2 248908) onRecord(fEscape 2 248936) onRecord(fRecord 2 248971) onRecord(fOpenRecord 2 248995)]))
lbl(248865)	allocateL4
		getVarVar(x(0) x(1))
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(7) y(3))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(0))
		getLiteral(nil y(1))
		getLiteral(false y(2))
		deAllocateL4
		return
lbl(248908)	allocateL2
		getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248936)	allocateL2
		getVariable(x(5))
		getRecord(fVar 2 x(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248971)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(4) y(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(1) y(0))
		getLiteral(false y(2))
		deAllocateL3
		return
lbl(248995)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 249044)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(6) x(1) y(2) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
lbl(249044)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(4) y(1))
		getLiteral(true y(5))
		deAllocateL7
		return
lbl(249067)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1855)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(248856)
lbl(249082)	definition(x(8) 249135 pid('Unnester,UnnestMethHead/slow' 1 pos('./compiler/Unnester.oz' 1830 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1520> 11)
		endDefinition(249082)
lbl(249135)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: UnnestMethHead>)
		setValue(x(8))
		setValue(x(7))
lbl(249145)	definition(x(7) 249309 pid('Unnester,UnnestMethFormals1/fast' 2 pos('./compiler/Unnester.oz' 1857 6) nil 4) <Q: 1521> nil)
		getSelf(x(2))
lbl(249153)	definition(x(3) 249301 pid('' 1 pos('./compiler/Unnester.oz' 1861 3) nil 6) unit [x(2) x(1)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(249286 [onRecord(fMethArg 2 249167) onRecord(fMethColonArg 3 249206)]))
lbl(249167)	getVariable(x(0))
		match(x(0) ht(249193 [onRecord(fVar 2 249172) onRecord(fWildcard 1 249191) onRecord(fDollar 1 249192)]))
lbl(249172)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(249191)	return
lbl(249192)	return
lbl(249193)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1867)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(249206)	allocateL1
		getVarVar(x(0) x(3))
		move(x(3) y(0))
		testRecord(x(0) fVar 2 249249)
lbl(249218)	getVoid(1)
		getVariable(x(4))
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(2)] 249249)
		inlineAt(<M: BA> x(5) cache)
		move(x(4) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(5) 3 cache)
lbl(249249)	match(y(0) ht(249273 [onRecord(fVar 2 249252) onRecord(fWildcard 1 249269) onRecord(fDollar 1 249271)]))
lbl(249252)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bind x(3) 3 cache)
lbl(249269)	deAllocateL1
		return
lbl(249271)	deAllocateL1
		return
lbl(249273)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1879)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249286)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1880)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(249153)
lbl(249301)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(249145)
lbl(249309)	definition(x(8) 249344 pid('Unnester,UnnestMethFormals1/slow' 1 pos('./compiler/Unnester.oz' 1857 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1521> 5)
		endDefinition(249309)
lbl(249344)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(8))
		setValue(x(7))
lbl(249354)	definition(x(7) 249412 pid('Unnester,UnnestMethFormals2/fast' 3 pos('./compiler/Unnester.oz' 1883 6) nil 4) <Q: 1522> [y(0)])
		match(x(0) ht(249397 [onScalar(nil 249363) onRecord('|' 2 249367)]))
lbl(249363)	getLiteral(nil x(2))
		return
lbl(249367)	allocateL4
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: UnnestMethFormal> false 4) 0)
		getList(y(1))
		unifyValVar(y(2) x(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestMethFormals2> true 3) 0)
lbl(249397)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1890)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(249354)
lbl(249412)	definition(x(8) 249453 pid('Unnester,UnnestMethFormals2/slow' 1 pos('./compiler/Unnester.oz' 1883 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1522> 7)
		endDefinition(249412)
lbl(249453)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(8))
		setValue(x(7))
lbl(249463)	definition(x(7) 250003 pid('Unnester,UnnestMethFormal/fast' 4 pos('./compiler/Unnester.oz' 1892 6) nil 8) <Q: 1523> [y(0) y(3)])
		allocateL9
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(x(0) ht(249666 [onRecord(fMethArg 2 249487) onRecord(fMethColonArg 3 249585)]))
lbl(249487)	getVarVar(y(6) y(7))
		inlineAt(<M: ArgCounter> x(0) cache)
		getRecord(fInt 2 y(3))
		unifyValVar(x(0) x(4))
		moveMoveXYYX(x(0) y(8) y(6) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(8) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ArgCounter> x(1) cache)
		match(y(6) ht(249567 [onRecord(fVar 2 249527) onRecord(fWildcard 1 249546)]))
lbl(249527)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		branch(249580)
lbl(249546)	getVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(249580)
lbl(249567)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1901)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249580)	unify(y(5) y(7))
		branch(249679)
lbl(249585)	getVarVar(x(0) x(4))
		getVariable(x(5))
		unify(y(3) x(0))
		move(x(5) y(6))
		match(x(4) ht(249648 [onRecord(fVar 2 249599) onRecord(fWildcard 1 249624)]))
lbl(249599)	getVarVar(x(4) x(6))
		inlineAt(<M: BA> x(7) cache)
		move(x(4) x(0))
		move(x(6) x(1))
		move(y(4) x(2))
		sendMsg(bind x(7) 3 cache)
		branch(249661)
lbl(249624)	getVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(1))
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(6) 3 cache)
		branch(249661)
lbl(249648)	putRecord(kernel 3 x(6))
		setConstant(noElse)
		setConstant(1909)
		setValue(x(4))
		callBI('Exception.raiseError' [x(6)]#nil)
lbl(249661)	unify(y(5) y(6))
		branch(249679)
lbl(249666)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1911)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(249679)	move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		createVariableMove(y(7) x(0))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(8) 249754 249762)
		inlineAt(reporter x(0) cache)
		move(x(0) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getCoord y(4) 1 cache)
		putRecord('#' 2 x(2))
		setConstant('argument variables in method head ')
		setConstant('must be distinct')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
		unify(y(2) y(0))
		branch(249773)
lbl(249754)	getList(y(2))
		unifyValue(y(7))
		unifyValue(y(0))
		branch(249773)
lbl(249762)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1914)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249773)	match(y(5) ht(249988 [onScalar(fNoDefault 249776) onRecord(fDefault 2 249807)]))
lbl(249776)	move(g(1) x(0))
		inlineDot(x(0) methFormal x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249807)	getVarVar(x(0) x(1))
		testRecord(x(0) fWildcard 1 249849)
lbl(249815)	move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249849)	moveMoveXYXY(x(0) y(0) x(1) y(2))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1492> 4)
		testBool(y(5) 249908 249977)
		move(y(0) x(0))
		getSelf(x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1493> 6)
		move(g(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249908)	putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord('#' 4 y(1))
		unifyVariable(y(1))
		unifyValue(y(3))
		unifyValVar(y(5) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		unifyValue(y(2))
		move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(true x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249977)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1928)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249988)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1937)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249463)
lbl(250003)	definition(x(8) 250050 pid('Unnester,UnnestMethFormal/slow' 1 pos('./compiler/Unnester.oz' 1892 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1523> 9)
		endDefinition(250003)
lbl(250050)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(250060)	definition(x(7) 250352 pid('Unnester,UnnestMethBody/fast' 5 pos('./compiler/Unnester.oz' 1939 6) nil 6) <Q: 1524> [y(0)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariable(y(5))
		testBI('IsDet' [x(0)]#[x(5)] 250112)
		getRecord(fVar 2 y(5))
		unifyVariable(x(5))
		unifyVariable(y(6))
		move(x(5) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(6) x(0))
		sendMsg(getCoord y(0) 1 cache)
lbl(250112)	putRecord('#' 2 x(3))
		setValue(y(3))
		setValue(y(4))
		getSelf(x(4))
lbl(250122)	definition(x(1) 250335 pid('' 3 pos('./compiler/Unnester.oz' 1945 3) nil 8) unit [x(4) y(0) y(5) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(250322)
		getRecord('#' 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250143)	shallowThen
		testRecord(x(0) '#' 4 250307)
lbl(250149)	allocateL8
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(2) y(4) x(4) y(5))
		moveMoveXYYX(x(5) y(6) y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 250213)
		inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generateForOuterScope x(3) 3 cache)
		getRecord(fVar 2 g(2))
		unifyVariable(x(0))
		unifyValue(y(7))
		sendMsg(getPrintName g(1) 1 cache)
lbl(250213)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(g(2))
		setValue(x(3))
		putRecord(fOpApply 3 x(1))
		setConstant(hasFeature)
		setValue(x(2))
		setValue(y(7))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(g(2))
		setValue(x(7))
		putRecord(fOpApply 3 x(5))
		setConstant('.')
		setValue(x(6))
		setValue(y(7))
		putRecord(fEq 3 x(4))
		setValue(y(2))
		setValue(x(5))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(y(3))
		setValue(y(7))
		createVariableMove(y(1) x(1))
		genCall(gci(g(3) true <M: UnnestStatement> false 2) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(0))
		unifyValue(y(5))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(250307)	getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(5))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(250322)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1945)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250122)
lbl(250335)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 32> 9)
		endDefinition(250060)
lbl(250352)	definition(x(8) 250405 pid('Unnester,UnnestMethBody/slow' 1 pos('./compiler/Unnester.oz' 1939 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1524> 11)
		endDefinition(250352)
lbl(250405)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: UnnestMethBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250415)	definition(x(7) 250685 pid('Unnester,UnnestBoolGuard/fast' 6 pos('./compiler/Unnester.oz' 1962 6) nil 7) <Q: 1525> [y(0)])
		match(x(0) ht(250560 [onRecord(fOrElse 3 250424) onRecord(fAndThen 3 250492)]))
lbl(250424)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('FalseCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(9) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250492)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250560)	allocateL9
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		sendMsg(openScope x(6) 0 cache)
		move(y(0) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(4))
		putList(y(0))
		setValue(y(6))
		setVariable(y(4))
		createVariableMove(y(6) x(0))
		call(y(1) 1)
		createVariableMove(y(1) x(0))
		call(y(2) 1)
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(7) x(0) y(6) x(1))
		moveMoveYXYX(y(1) x(2) y(8) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(6))
		genFastCall(<Q: 1490> 14)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1489> 9)
		endDefinition(250415)
lbl(250685)	definition(x(8) 250744 pid('Unnester,UnnestBoolGuard/slow' 1 pos('./compiler/Unnester.oz' 1962 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1525> 13)
		endDefinition(250685)
lbl(250744)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(8))
		setValue(x(7))
lbl(250754)	definition(x(7) 250915 pid('Unnester,MakeClauseBody/fast' 5 pos('./compiler/Unnester.oz' 1996 6) nil 7) <Q: 1526> [y(3)])
		allocateL8
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(5) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) clauseBody x(1) cache)
		moveMoveXYYX(x(1) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ y(4) 2 cache)
		move(y(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(5))
		putConstant(nil x(1))
		putConstant(unit x(3))
		putConstant(nil x(4))
		sendMsg(init y(7) 6 cache)
		unify(y(7) y(2))
lbl(250845)	definition(x(0) 250908 pid('ApplyProc' 1 pos('./compiler/Unnester.oz' 1999 2) nil 4) unit [g(0) y(4) y(1)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) application x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(g(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(occ g(1) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		move(g(2) x(2))
		putConstant(nil x(1))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(250845)
lbl(250908)	unify(x(0) y(3))
		deAllocateL8
		return
		endDefinition(250754)
lbl(250915)	definition(x(8) 250968 pid('Unnester,MakeClauseBody/slow' 1 pos('./compiler/Unnester.oz' 1996 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1526> 11)
		endDefinition(250915)
lbl(250968)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: MakeClauseBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250978)	definition(x(7) 251413 pid('Unnester,UnnestCase/fast' 5 pos('./compiler/Unnester.oz' 2004 6) nil 9) <Q: 1527> [y(0) y(3)])
		allocateL10
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(1))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(1) y(5))
		testList(y(0) 251164)
lbl(251007)	getVarVar(x(5) x(6))
		shallowGuard(251164)
		getRecord(fCaseClause 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord(fVar 2 x(5))
		unifyVoid(1)
		unifyVariable(x(8))
		getLiteral(nil x(6))
lbl(251031)	shallowThen
		moveMoveXYXY(x(5) y(6) x(8) y(7))
		move(x(7) y(8))
		testLiteral(y(5) nil 251075)
lbl(251044)	callBI('Label' [x(2)]#[x(1)])
		testLiteral(x(1) fNoElse 251053)
		branch(251095)
lbl(251053)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring else clause following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(251095)
lbl(251075)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring clauses following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
lbl(251095)	putRecord(fVar 2 y(0))
		setVariable(x(0))
		setVariable(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(getCoord y(1) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(6))
		setValue(y(0))
		setVariable(x(2))
		putRecord(fAnd 2 x(0))
		setValue(x(1))
		setValue(y(8))
		putRecord(fLocal 3 y(1))
		setValue(y(6))
		setValue(x(0))
		setValue(y(7))
		move(y(7) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(251164)	move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestCaseClauses> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) patternCase x(1) cache)
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(1) 2 cache)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		moveMoveYXYX(y(6) x(1) y(3) x(3))
		createVariableMove(y(9) x(2))
		sendMsg(init y(8) 4 cache)
		unify(y(8) y(4))
		match(y(5) ht(251398 [onScalar(nil 251227) onRecord('|' 2 251345)]))
lbl(251227)	testRecord(y(2) fNoElse 1 251260)
lbl(251232)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251260)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(2) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251345)	move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestCase> false 5) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(3) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251398)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2038)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250978)
lbl(251413)	definition(x(8) 251466 pid('Unnester,UnnestCase/slow' 1 pos('./compiler/Unnester.oz' 2004 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1527> 11)
		endDefinition(251413)
lbl(251466)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: UnnestCase>)
		setValue(x(8))
		setValue(x(7))
lbl(251476)	definition(x(7) 251836 pid('Unnester,UnnestCaseClauses/fast' 2 pos('./compiler/Unnester.oz' 2041 6) nil 7) <Q: 1528> [y(0) y(3)])
		match(x(0) ht(251821 [onScalar(nil 251485) onRecord('|' 2 251489)]))
lbl(251485)	getLiteral(nil x(1))
		return
lbl(251489)	allocateL8
		getVarVar(x(2) y(0))
		getRecord(fCaseClause 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1494> 4)
		createVariable(y(5))
		testBool(y(4) 251738 251801)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1432> 6)
		getSelf(x(3))
lbl(251543)	definition(x(1) 251608 pid('' 2 pos('./compiler/Unnester.oz' 2046 8) nil 6) unit [x(3)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(251595)
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(251564)	shallowThen
		allocateL2
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(251595)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2046)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(251543)
lbl(251608)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		getList(y(3))
		unifyVariable(y(3))
		unifyValue(y(5))
		move(g(1) x(0))
		inlineDot(x(0) patternClause x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(6) 3 cache)
		unify(y(6) y(3))
		branch(251812)
lbl(251738)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(3))
		setConstant('only simple patterns in `case\' conditional ')
		setConstant(allowed)
		putRecord('#' 2 x(6))
		setConstant('to create a deep guard, use the ')
		setConstant('`cond\' conditional)')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('syntax error' x(2))
		sendMsg(error y(2) [coord items kind msg] cache)
		unify(y(3) y(5))
		branch(251812)
lbl(251801)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2043)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251812)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestCaseClauses> true 2) 0)
lbl(251821)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2070)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251476)
lbl(251836)	definition(x(8) 251871 pid('Unnester,UnnestCaseClauses/slow' 1 pos('./compiler/Unnester.oz' 2041 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1528> 5)
		endDefinition(251836)
lbl(251871)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(251881)	definition(x(7) 252454 pid('Unnester,TranslatePattern/fast' 3 pos('./compiler/Unnester.oz' 2072 6) nil 6) <Q: 1529> [y(0) y(3) g(11) g(12)])
		match(x(0) ht(252439 [onRecord(fEq 3 251890) onRecord(fAtom 2 252086) onRecord(fVar 2 252118) onRecord(fWildcard 1 252200) onRecord(fEscape 2 252250) onRecord(fInt 2 252339) onRecord(fFloat 2 252371) onRecord(fRecord 2 252403) onRecord(fOpenRecord 2 252421)]))
lbl(251890)	allocateL6
		getVarVar(x(0) y(0))
		match(x(0) ht(251982 [onRecord(fVar 2 251897) onRecord(fWildcard 1 251975)]))
lbl(251897)	getVarVar(x(0) y(1))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL6
		return
lbl(251975)	move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(251982)	match(y(0) ht(252073 [onRecord(fVar 2 251985) onRecord(fWildcard 1 252069)]))
lbl(251985)	getVarVar(x(3) y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(4) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL6
		return
lbl(252069)	deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(252073)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2089)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252086)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252118)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252169 252189)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252169)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252189)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2093)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252200)	allocateL4
		getVariable(y(0))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(2) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(3) 3 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(2) 2 cache)
		move(y(1) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252250)	allocateL4
		getVariable(x(3))
		getRecord(fVar 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252308 252328)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252308)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2103)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252339)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252371)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252403)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(2) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252421)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(3) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252439)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2117)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251881)
lbl(252454)	definition(x(8) 252495 pid('Unnester,TranslatePattern/slow' 1 pos('./compiler/Unnester.oz' 2072 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1529> 7)
		endDefinition(252454)
lbl(252495)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: TranslatePattern>)
		setValue(x(8))
		setValue(x(7))
lbl(252505)	definition(x(7) 252655 pid('Unnester,TranslateRecord/fast' 5 pos('./compiler/Unnester.oz' 2119 6) nil 5) <Q: 1530> [y(0) y(3)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		getSelf(x(3))
lbl(252533)	definition(x(1) 252594 pid('' 2 pos('./compiler/Unnester.oz' 2124 4) nil 4) unit [x(3) y(2) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		testRecord(x(0) fColon 2 252583)
lbl(252549)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(g(1) x(1))
		move(x(3) x(2))
		genCall(gci(g(2) true <M: TranslatePattern> false 3) 0)
		move(y(0) x(0))
		move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
lbl(252583)	move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
		endDefinition(252533)
lbl(252594)	move(y(0) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		createVariable(x(2))
		move(y(2) x(0))
		move(x(2) x(3))
		createVariableMove(y(0) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(1) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL5
		return
		endDefinition(252505)
lbl(252655)	definition(x(8) 252708 pid('Unnester,TranslateRecord/slow' 1 pos('./compiler/Unnester.oz' 2119 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1530> 11)
		endDefinition(252655)
lbl(252708)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: TranslateRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(252718)	definition(x(7) 253462 pid('Unnester,UnnestTry/fast' 2 pos('./compiler/Unnester.oz' 2136 6) nil 9) <Q: 1531> [y(0) y(3)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fTry 4 252803)
lbl(252735)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		shallowGuard(252803)
		getLiteral(fNoCatch x(3))
		getLiteral(fNoFinally x(4))
lbl(252749)	shallowThen
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL10
		genFastCall(<Q: 1489> 9)
lbl(252803)	testRecord(y(0) fTry 4 253080)
lbl(252808)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(1) fNoCatch 253080)
		moveMoveXYXY(x(0) y(0) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('ReRaise' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		putRecord(fAtom 2 x(0))
		setConstant(ex)
		setValue(y(3))
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(0))
		setValue(x(1))
		putRecord(fVar 2 x(4))
		setConstant('`unit`')
		setValue(y(3))
		putRecord(fEq 3 x(3))
		setValue(y(6))
		setValue(x(4))
		setValue(y(4))
		putRecord(fAnd 2 x(1))
		setValue(y(0))
		setValue(x(3))
		putRecord(fEq 3 x(8))
		setValue(y(6))
		setValue(x(2))
		setValue(y(4))
		putRecord(fCaseClause 2 x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putRecord(fCatch 2 x(5))
		setValue(x(6))
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setValue(x(5))
		setConstant(fNoFinally)
		setValue(y(3))
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('Raise')
		setValue(x(6))
		setValue(y(4))
		putRecord(fCaseClause 2 x(4))
		setValue(x(2))
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setConstant(nil)
		putRecord(fSkip 1 x(7))
		setValue(y(4))
		putRecord(fCase 4 y(0))
		setValue(y(6))
		setValue(x(1))
		setValue(x(7))
		setValue(y(4))
		getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(1))
		unifyVariable(y(3))
		genCall(gci(g(0) true <M: UnnestTry> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(253080)	testRecord(y(0) fTry 4 253396)
lbl(253085)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(253396)
		getRecord(fCatch 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getLiteral(fNoFinally x(2))
lbl(253104)	shallowThen
		inlineAt(<M: BA> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		moveMoveXYXY(x(4) y(3) x(3) y(4))
		sendMsg(openScope x(2) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		createVariable(y(7))
		testList(y(2) 253241)
lbl(253213)	getVarVar(x(0) x(1))
		shallowGuard(253241)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVoid(2)
		getLiteral(nil x(1))
lbl(253235)	shallowThen
		getLiteral(fNoElse y(7))
		branch(253257)
lbl(253241)	getRecord(fOpApplyStatement 3 y(7))
		unifyLiteral('Raise')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyValue(y(5))
		unifyLiteral(nil)
lbl(253257)	putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(3))
		createVariable(y(8))
		testRecord(x(0) '#' 2 253320)
lbl(253272)	getVarVar(x(0) x(1))
		createVariable(y(9))
		shallowGuard(253320)
		getRecord('pos' 6 x(0))
		unifyVoid(3)
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(253301)	shallowThen
		getRecord('pos' 6 y(8))
		unifyValue(x(4))
		unifyValue(x(5))
		unifyValue(x(6))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		branch(253323)
lbl(253320)	unify(y(8) y(3))
lbl(253323)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putRecord(fCase 4 x(0))
		setValue(y(5))
		setValue(x(1))
		setValue(y(7))
		setValue(y(8))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) tryNode x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(4) x(3))
		sendMsg(init y(3) 4 cache)
		unify(y(3) y(1))
		deAllocateL10
		return
lbl(253396)	testRecord(y(0) fTry 4 253447)
lbl(253401)	getVarVar(y(0) y(2))
		getVarVar(y(3) y(4))
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fTry 4 x(1))
		setValue(y(0))
		setValue(y(2))
		setConstant(fNoFinally)
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setConstant(fNoCatch)
		setValue(y(3))
		setValue(y(5))
		move(y(1) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(253447)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2187)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(252718)
lbl(253462)	definition(x(8) 253497 pid('Unnester,UnnestTry/slow' 1 pos('./compiler/Unnester.oz' 2136 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1531> 5)
		endDefinition(253462)
lbl(253497)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: UnnestTry>)
		setValue(x(8))
		setValue(x(7))
lbl(253507)	definition(x(7) 253909 pid('Unnester,UnnestClauses/fast' 3 pos('./compiler/Unnester.oz' 2190 6) nil 5) <Q: 1532> [y(0) y(3)])
		match(x(0) ht(253894 [onScalar(nil 253516) onRecord('|' 2 253520)]))
lbl(253516)	getLiteral(nil x(2))
		return
lbl(253520)	allocateL10
		getVarVar(x(0) y(0))
		getRecord(fClause 3 x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(253567)	definition(x(1) 253621 pid('' 1 pos('./compiler/Unnester.oz' 2197 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(253608)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(253588)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(253608)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2197)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(253567)
lbl(253621)	move(y(6) x(0))
		genFastCall(<P: 34> 4)
		putList(y(1))
		setVariable(x(1))
		setVariable(y(6))
		move(y(7) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		createVariable(y(2))
		createVariable(y(6))
		match(y(3) ht(253754 [onRecord(fSkip 1 253654) onRecord(fNoThen 1 253723)]))
lbl(253654)	getVariable(x(0))
		move(x(0) y(3))
		match(y(4) ht(253682 [onScalar(fif 253662) onScalar(for 253667) onScalar(fdis 253672) onScalar(fchoice 253677)]))
lbl(253662)	getLiteral('ask' y(2))
		branch(253695)
lbl(253667)	getLiteral('waitTop' y(2))
		branch(253695)
lbl(253672)	getLiteral('waitTop' y(2))
		branch(253695)
lbl(253677)	getLiteral('wait' y(2))
		branch(253695)
lbl(253682)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2205)
		setValue(y(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(253695)	move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(3) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
		branch(253822)
lbl(253723)	getVariable(x(0))
		getLiteral('waitTop' y(2))
		move(g(1) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(6))
		branch(253822)
lbl(253754)	move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		testLiteral(y(4) fif 253772)
lbl(253767)	getLiteral('ask' y(2))
		branch(253775)
lbl(253772)	getLiteral('wait' y(2))
lbl(253775)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<Q: 1489> 8)
lbl(253822)	getList(y(5))
		unifyVariable(y(3))
		unifyVariable(y(5))
		move(g(1) x(0))
		inlineDot(x(0) 'clause' x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(closeScope x(2) 1 cache)
		move(y(7) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(6) x(3))
		sendMsg(init y(9) 4 cache)
		unify(y(9) y(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestClauses> true 3) 0)
lbl(253894)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2221)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(253507)
lbl(253909)	definition(x(8) 253950 pid('Unnester,UnnestClauses/slow' 1 pos('./compiler/Unnester.oz' 2190 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1532> 7)
		endDefinition(253909)
lbl(253950)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: UnnestClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(253960)	definition(x(7) 254223 pid('Unnester,UnnestFDExpression/fast' 3 pos('./compiler/Unnester.oz' 2224 6) nil 6) <Q: 1533> [y(0)])
		match(x(0) ht(254160 [onRecord(fOpApply 3 253969) onRecord(fVar 2 254146) onRecord(fInt 2 254153)]))
lbl(253969)	allocateL9
		getVarVar(x(3) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(y(2) '+' 254052)
lbl(253992)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(3))
		unifyLiteral(nil)
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getList(y(0))
		unifyValue(y(5))
		unifyValue(y(7))
		getRecord(fOpApply 3 y(1))
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(8))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(254052)	testLiteral(y(2) '-' 254058)
		branch(253992)
lbl(254058)	testLiteral(y(2) '*' 254064)
		branch(253992)
lbl(254064)	testLiteral(y(2) '~' 254098)
		getList(y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getRecord(fOpApply 3 y(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(254098)	inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(0) y(2) y(4) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(4))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL9
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(254146)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254153)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254160)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(253960)
lbl(254223)	definition(x(8) 254264 pid('Unnester,UnnestFDExpression/slow' 1 pos('./compiler/Unnester.oz' 2224 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1533> 7)
		endDefinition(254223)
lbl(254264)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(254274)	definition(x(7) 254463 pid('Unnester,UnnestFDList/fast' 3 pos('./compiler/Unnester.oz' 2255 6) nil 7) <Q: 1534> [y(0)])
		allocateL8
		move(x(0) y(0))
		match(y(0) ht(254407 [onRecord(fRecord 2 254287) onRecord(fAtom 2 254447)]))
lbl(254287)	getVarVar(x(3) x(4))
		shallowGuard(254407)
		getRecord(fAtom 2 x(3))
		unifyLiteral('|')
		unifyVoid(1)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(254312)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		move(x(4) x(0))
		putConstant('UnnestFDList' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDList> false 3) 0)
		getList(y(0))
		unifyValue(y(4))
		unifyValue(y(6))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setVariable(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(getCoord y(0) 1 cache)
		getRecord(fRecord 2 y(1))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(254407)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('explicitly given list of variables expected')
		setConstant('as first argument to `:::\' in a condis clause')
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		move(y(1) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(254447)	getVariable(x(3))
		testLiteral(x(3) nil 254407)
		getLiteral(nil x(1))
		unify(x(2) y(0))
		deAllocateL8
		return
		endDefinition(254274)
lbl(254463)	definition(x(8) 254504 pid('Unnester,UnnestFDList/slow' 1 pos('./compiler/Unnester.oz' 2255 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1534> 7)
		endDefinition(254463)
lbl(254504)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: UnnestFDList>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 37 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Unnester' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(254610)	definition(x(0) 254641 pid('IsDirective' 2 pos('./compiler/Unnester.oz' 2277 3) nil 2) <Q: 1535> nil)
		match(x(0) ht(254635 [onScalar(dirLocalSwitches 254619) onScalar(dirPushSwitches 254623) onScalar(dirPopSwitches 254627) onRecord(dirSwitch 1 254631)]))
lbl(254619)	getLiteral(true x(1))
		return
lbl(254623)	getLiteral(true x(1))
		return
lbl(254627)	getLiteral(true x(1))
		return
lbl(254631)	getLiteral(true x(1))
		return
lbl(254635)	getLiteral(false x(1))
		return
		endDefinition(254610)
lbl(254641)	definition(x(1) 254704 pid('VariableMember' 3 pos('./compiler/Unnester.oz' 2287 6) nil 7) <Q: 1536> nil)
		allocateL1
		move(x(1) y(0))
		match(y(0) ht(254689 [onScalar(nil 254654) onRecord('|' 2 254659)]))
lbl(254654)	getLiteral(false x(2))
		deAllocateL1
		return
lbl(254659)	getVarVar(x(3) x(4))
		shallowGuard(254689)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254672)	shallowThen
		testBI('==' [x(0) x(5)]#[x(1)] 254682)
		getLiteral(true x(2))
		deAllocateL1
		return
lbl(254682)	move(x(4) x(1))
		deAllocateL1
		genFastCall(<Q: 1536> 7)
lbl(254689)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2291)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254641)
lbl(254704)	definition(x(1) 254803 pid('AreDisjointVariableLists' 3 pos('./compiler/Unnester.oz' 2294 6) nil 7) <Q: 1537> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testList(y(0) 254779)
lbl(254719)	getVarVar(x(3) x(4))
		shallowGuard(254779)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254732)	shallowThen
		moveMoveXYXY(x(1) y(0) x(4) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1536> 6)
		testBool(y(3) 254756 254768)
		getLiteral(false y(1))
		deAllocateL4
		return
lbl(254756)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 1537> 7)
lbl(254768)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254779)	testLiteral(y(0) nil 254788)
lbl(254783)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(254788)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2300)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254704)
lbl(254803)	definition(x(1) 255102 pid('JoinQueriesSub' 2 pos('./compiler/Unnester.oz' 2303 6) nil 6) <Q: 1538> nil)
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 255095)
lbl(254819)	getVarVar(x(2) x(3))
		shallowGuard(255095)
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(254830)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(2))
		moveMoveXYXY(x(4) y(3) x(5) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 254866 255084)
		getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254866)	testRecord(y(0) fDeclare 3 255072)
lbl(254871)	getVarVar(x(0) y(5))
		getVariable(y(6))
		testRecord(y(3) fDeclare 3 255038)
lbl(254881)	getVarVar(y(3) y(7))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		move(y(3) x(0))
		createVariableMove(y(10) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1537> 6)
		testBool(y(3) 255015 255027)
		putRecord(fAnd 2 x(2))
		setValue(y(11))
		setValue(y(7))
		putRecord(fAnd 2 x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fAnd 2 x(0))
		setValue(y(9))
		setValue(x(1))
		putRecord(fDeclare 3 y(0))
		setVariable(y(2))
		setValue(x(0))
		setValue(y(6))
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(254971)	definition(x(1) 254988 pid('' 3 pos('./compiler/Unnester.oz' 2314 6) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(254971)
lbl(254988)	putRecord(fSkip 1 x(2))
		setValue(y(6))
		moveMoveYXYX(y(3) x(0) y(2) x(3))
		genFastCall(<P: 32> 8)
		putList(x(0))
		setValue(y(0))
		setValue(y(4))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(255015)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(255027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2312)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255038)	putRecord(fAnd 2 x(3))
		setValue(y(5))
		setValue(y(3))
		putRecord(fDeclare 3 x(1))
		setValue(x(0))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(1))
		setValue(y(4))
		move(x(2) x(0))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(255072)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(255084)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255095)	unify(y(1) y(0))
		deAllocateL
		return
		endDefinition(254803)
lbl(255102)	definition(x(1) 255234 pid('JoinQueries' 3 pos('./compiler/Unnester.oz' 2334 6) nil 5) <Q: 1539> [g(15) x(0)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1538> 4)
		testList(y(4) 255182)
lbl(255138)	getVarVar(x(0) x(1))
		shallowGuard(255182)
		getRecord(fDeclare 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(255156)	shallowThen
		putRecord(fLocal 3 x(4))
		setValue(x(0))
		setValue(x(2))
		setValue(x(3))
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255182)	match(y(4) ht(255210 [onScalar(nil 255185) onRecord('|' 2 255190)]))
lbl(255185)	unify(y(1) y(2))
		deAllocateL5
		return
lbl(255190)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 255210)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255210)	putRecord('#' 2 x(1))
		setConstant('Ozma only supports at most one query ')
		setConstant('per input')
		putConstant('expansion error' x(0))
		sendMsg(error y(0) [kind msg] cache)
		unify(y(2) y(1))
		deAllocateL5
		return
		endDefinition(255102)
lbl(255234)	definition(x(0) 255423 pid('MakeExpressionQuerySub' 3 pos('./compiler/Unnester.oz' 2353 6) nil 6) <Q: 1540> nil)
		match(x(0) ht(255408 [onScalar(nil 255243) onRecord('|' 2 255250)]))
lbl(255243)	getLiteral(nil x(1))
		getLiteral(false x(2))
		return
lbl(255250)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYYX(x(2) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1540> 6)
		testBool(y(6) 255288 255397)
		getList(y(3))
		unifyValue(y(0))
		unifyValue(y(5))
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255288)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 255309 255386)
		unify(y(3) y(2))
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(255309)	testRecord(y(0) fDeclare 3 255357)
lbl(255314)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getList(y(3))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fDeclare 3 x(3))
		unifyValVar(x(0) x(4))
		unifyValue(x(2))
		getRecord(fEq 3 x(4))
		unifyVariable(x(5))
		unifyValue(x(1))
		unifyLiteral(unit)
		getRecord(fVar 2 x(5))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255357)	getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(1))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyLiteral(unit)
		getRecord(fVar 2 x(1))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255386)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255397)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255408)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255234)
lbl(255423)	definition(x(0) 255436 pid('MakeExpressionQuery' 2 pos('./compiler/Unnester.oz' 2379 6) nil 3) <Q: 1541> nil)
		createVariable(x(2))
		genFastCall(<Q: 1540> 7)
		endDefinition(255423)
lbl(255436)	definition(x(2) 255491 pid('VsToFAnd' 2 pos('./compiler/Unnester.oz' 2385 6) nil 3) <Q: 1542> nil)
		match(x(0) ht(255476 [onScalar(nil 255445) onRecord('|' 2 255452)]))
lbl(255445)	getRecord(fSkip 1 x(1))
		unifyLiteral(unit)
		return
lbl(255452)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 255463)
lbl(255459)	unify(x(1) x(0))
		return
lbl(255463)	getRecord(fAnd 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1542> 5)
lbl(255476)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2391)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255436)
lbl(255491)	definition(x(2) 255517 pid('FS' 2 pos('./compiler/Unnester.oz' 2394 6) nil 4) <Q: 1543> nil)
		testLiteral(x(0) unit 255505)
lbl(255501)	getLiteral(unit x(1))
		return
lbl(255505)	putConstant(fineStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255491)
lbl(255517)	definition(x(2) 255543 pid('CS' 2 pos('./compiler/Unnester.oz' 2398 6) nil 4) <Q: 1544> nil)
		testLiteral(x(0) unit 255531)
lbl(255527)	getLiteral(unit x(1))
		return
lbl(255531)	putConstant(coarseStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255517)
lbl(255543)	createVariable(x(2))
		createVariable(x(3))
lbl(255547)	definition(x(4) 257109 pid('NP' 2 pos('./compiler/Unnester.oz' 2402 6) nil 4) <Q: 1545> [x(2) x(3)])
		match(x(0) ht(257094 [onScalar(fNoCatch 255556) onRecord(fDeclare 3 255560) onRecord(fAnd 2 255588) onRecord(fEq 3 255612) onRecord(fAssign 3 255640) onRecord(fOrElse 3 255676) onRecord(fAndThen 3 255704) onRecord(fOpApply 3 255732) onRecord(fOpApplyStatement 3 255762) onRecord(fFdCompare 4 255792) onRecord(fFdIn 4 255830) onRecord(fObjApply 3 255868) onRecord(fAt 2 255904) onRecord(fAtom 2 255928) onRecord(fVar 2 255932) onRecord(fEscape 2 255936) onRecord(fWildcard 1 255940) onRecord(fSelf 1 255944) onRecord(fDollar 1 255948) onRecord(fInt 2 255952) onRecord(fFloat 2 255956) onRecord(fRecord 2 255960) onRecord(fOpenRecord 2 255976) onRecord(fColon 2 255992) onRecord(fApply 3 256005) onRecord(fProc 5 256045) onRecord(fFun 5 256086) onRecord(fFunctor 3 256127) onRecord(fRequire 2 256167) onRecord(fPrepare 3 256171) onRecord(fImport 2 256199) onRecord(fExport 2 256203) onRecord(fBody 3 256207) onRecord(fClass 4 256235) onRecord(fFrom 2 256290) onRecord(fProp 2 256307) onRecord(fAttr 2 256324) onRecord(fFeat 2 256341) onRecord('#' 2 256358) onRecord(fLocal 3 256382) onRecord(fBoolCase 4 256410) onRecord(fNoElse 1 256457) onRecord(fCase 4 256468) onRecord(fCaseClause 2 256532) onRecord(fLockThen 3 256545) onRecord(fLock 2 256581) onRecord(fThread 2 256605) onRecord(fTry 4 256629) onRecord(fCatch 2 256676) onRecord(fRaise 2 256703) onRecord(fRaiseWith 3 256727) onRecord(fSkip 1 256763) onRecord(fFail 1 256767) onRecord(fNot 2 256771) onRecord(fCond 3 256795) onRecord(fClause 3 256834) onRecord(fNoThen 1 256870) onRecord(fOr 3 256874) onRecord(fCondis 2 256904) onRecord(fScanner 6 256945) onRecord(fParser 7 257018)]))
lbl(255556)	getLiteral(fNoCatch x(1))
		return
lbl(255560)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDeclare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255588)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255612)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255640)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255676)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255704)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255732)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255762)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255792)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255830)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255868)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255904)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255928)	unify(x(1) x(0))
		return
lbl(255932)	unify(x(1) x(0))
		return
lbl(255936)	unify(x(1) x(0))
		return
lbl(255940)	unify(x(1) x(0))
		return
lbl(255944)	unify(x(1) x(0))
		return
lbl(255948)	unify(x(1) x(0))
		return
lbl(255952)	unify(x(1) x(0))
		return
lbl(255956)	unify(x(1) x(0))
		return
lbl(255960)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255976)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255992)	getVarVar(x(2) x(0))
		getRecord(fColon 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(256005)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256045)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256086)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256127)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256167)	unify(x(1) x(0))
		return
lbl(256171)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fPrepare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256199)	unify(x(1) x(0))
		return
lbl(256203)	unify(x(1) x(0))
		return
lbl(256207)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fBody 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256235)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256290)	getVarVar(x(0) x(3))
		getRecord(fFrom 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256307)	getVarVar(x(0) x(3))
		getRecord(fProp 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256324)	getVarVar(x(0) x(3))
		getRecord(fAttr 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256341)	getVarVar(x(0) x(3))
		getRecord(fFeat 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256358)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256382)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fLocal 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256410)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256457)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1543> 5)
lbl(256468)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(256490)	definition(x(1) 256507 pid('' 2 pos('./compiler/Unnester.oz' 2449 28) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256490)
lbl(256507)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256532)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(256545)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256581)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256605)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256629)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256676)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256703)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256727)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256763)	unify(x(1) x(0))
		return
lbl(256767)	unify(x(1) x(0))
		return
lbl(256771)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256795)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256834)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fClause 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1545> 5)
lbl(256870)	unify(x(1) x(0))
		return
lbl(256874)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256904)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(256916)	definition(x(1) 256933 pid('' 2 pos('./compiler/Unnester.oz' 2467 22) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256916)
lbl(256933)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256945)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(257018)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(257094)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255547)
lbl(257109)	unify(x(4) x(2))
lbl(257112)	definition(x(4) 258882 pid('SP' 2 pos('./compiler/Unnester.oz' 2475 6) nil 6) <Q: 1546> [x(2) x(3)])
		match(x(0) ht(258867 [onScalar(fNoCatch 257121) onScalar(fNoFinally 257125) onRecord(fDeclare 3 257129) onRecord(fAnd 2 257181) onRecord(fEq 3 257205) onRecord(fAssign 3 257241) onRecord(fOrElse 3 257277) onRecord(fAndThen 3 257305) onRecord(fOpApply 3 257333) onRecord(fOpApplyStatement 3 257363) onRecord(fFdCompare 4 257393) onRecord(fFdIn 4 257431) onRecord(fObjApply 3 257469) onRecord(fAt 2 257505) onRecord(fAtom 2 257529) onRecord(fVar 2 257542) onRecord(fEscape 2 257555) onRecord(fWildcard 1 257568) onRecord(fSelf 1 257579) onRecord(fDollar 1 257590) onRecord(fInt 2 257601) onRecord(fFloat 2 257614) onRecord(fRecord 2 257627) onRecord(fOpenRecord 2 257655) onRecord(fApply 3 257683) onRecord(fProc 5 257723) onRecord(fFun 5 257764) onRecord(fFunctor 3 257805) onRecord(fClass 4 257845) onRecord(fMeth 3 257900) onRecord(fLocal 3 257917) onRecord(fBoolCase 4 257969) onRecord(fNoElse 1 258016) onRecord(fCase 4 258027) onRecord(fCaseClause 2 258091) onRecord(fLockThen 3 258104) onRecord(fLock 2 258140) onRecord(fThread 2 258164) onRecord(fTry 4 258188) onRecord(fCatch 2 258235) onRecord(fRaise 2 258262) onRecord(fRaiseWith 3 258286) onRecord(fSkip 1 258322) onRecord(fFail 1 258333) onRecord(fNot 2 258344) onRecord(fCond 3 258368) onRecord(fClause 3 258407) onRecord(fNoThen 1 258467) onRecord(fOr 3 258478) onRecord(fCondis 2 258508) onRecord(fScanner 6 258549) onRecord(fMode 2 258622) onRecord(fInheritedModes 1 258638) onRecord(fLexicalAbbreviation 2 258642) onRecord(fLexicalRule 2 258646) onRecord(fParser 7 258659) onRecord(fProductionTemplate 5 258735) onRecord(fSyntaxRule 3 258772) onRecord(fSynApplication 2 258789) onRecord(fSynAction 1 258793) onRecord(fSynSequence 2 258804) onRecord(fSynAlternative 1 258820) onRecord(fSynAssignment 2 258834) onRecord(fSynTemplateInstantiation 3 258847)]))
lbl(257121)	getLiteral(fNoCatch x(1))
		return
lbl(257125)	getLiteral(fNoFinally x(1))
		return
lbl(257129)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fDeclare 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257181)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(257205)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257241)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257277)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257305)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257333)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257363)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257393)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257431)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257469)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257505)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257529)	getVarVar(x(2) x(0))
		getRecord(fAtom 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257542)	getVarVar(x(2) x(0))
		getRecord(fVar 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257555)	getVarVar(x(2) x(0))
		getRecord(fEscape 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257568)	getVariable(x(0))
		getRecord(fWildcard 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257579)	getVariable(x(0))
		getRecord(fSelf 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257590)	getVariable(x(0))
		getRecord(fDollar 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257601)	getVarVar(x(2) x(0))
		getRecord(fInt 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257614)	getVarVar(x(2) x(0))
		getRecord(fFloat 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257627)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257655)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fOpenRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257683)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257723)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257764)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257805)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257845)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257900)	getVarVar(x(2) x(0))
		getVariable(x(3))
		getRecord(fMeth 3 x(1))
		unifyValVar(x(2) x(1))
		unifyValue(x(3))
		genFastCall(<Q: 1546> 5)
lbl(257917)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fLocal 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257969)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(258016)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258027)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(258049)	definition(x(1) 258066 pid('' 2 pos('./compiler/Unnester.oz' 2516 28) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(258049)
lbl(258066)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(258091)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258104)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258140)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258164)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258188)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(258235)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258262)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258286)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258322)	getVariable(x(0))
		getRecord(fSkip 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258333)	getVariable(x(0))
		getRecord(fFail 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258344)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258368)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258407)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fClause 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(5))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1546> 5)
lbl(258467)	getVariable(x(0))
		getRecord(fNoThen 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258478)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258508)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(258520)	definition(x(1) 258537 pid('' 2 pos('./compiler/Unnester.oz' 2537 22) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(258520)
lbl(258537)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258549)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258622)	getVarVar(x(3) x(0))
		getRecord(fMode 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258638)	unify(x(1) x(0))
		return
lbl(258642)	unify(x(1) x(0))
		return
lbl(258646)	getVarVar(x(2) x(0))
		getRecord(fLexicalRule 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258659)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258735)	allocateL2
		getVarVar(x(3) x(4))
		getVarVar(x(0) y(0))
		getVariable(x(5))
		getRecord(fProductionTemplate 5 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(2))
		unifyVariable(y(1))
		unifyValue(x(5))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(258772)	getVarVar(x(2) x(3))
		getVariable(x(0))
		getRecord(fSyntaxRule 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258789)	unify(x(1) x(0))
		return
lbl(258793)	getVariable(x(0))
		getRecord(fSynAction 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1546> 5)
lbl(258804)	getVarVar(x(3) x(0))
		getRecord(fSynSequence 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258820)	getVariable(x(0))
		getRecord(fSynAlternative 1 x(1))
		unifyVariable(x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258834)	getVarVar(x(2) x(0))
		getRecord(fSynAssignment 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258847)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fSynTemplateInstantiation 3 x(1))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258867)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2556)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(257112)
lbl(258882)	unify(x(4) x(3))
lbl(258885)	definition(x(2) 258985 pid('UnnestQuery' 7 pos('./compiler/Unnester.oz' 2559 6) nil 9) <Q: 1547> [y(0)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		sendMsg(init y(5) 3 cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch y(0) 2 cache)
		createVariable(y(0))
		testBool(y(6) 258947 258952)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1546> 4)
		branch(258963)
lbl(258947)	unify(y(0) y(1))
		branch(258963)
lbl(258952)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2561)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(258963)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL7
		tailSendMsg(unnestQuery x(4) 4 cache)
		endDefinition(258885)
lbl(258985)	getRecord('export' [joinQueries makeExpressionQuery unnestQuery] g(16))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		deAllocateL7
		return
		endDefinition(218303)
lbl(258999)	tailCall(x(2) 0)
		endDefinition(217331)
lbl(259004)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(5))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(4))
		setValue(x(5))
		putList(x(7))
		setConstant(downcasePrintName)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putList(x(9))
		setConstant(procs)
		setConstant(nil)
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord('import' ['CompilerSupport' 'Core' 'FD' 'Misc' 'RunTime'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(6))
		setValue(x(8))
		putConstant('procedure/3' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/>6' x(6))
		putRecord('export' [joinQueries makeExpressionQuery unnestQuery] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(259091)	definition(x(2) 275860 pid('' 2 pos('./compiler/FunAssembler.oz' 1 0) nil 4) <P: 1548> [y(149) y(203) y(217) y(150) y(148) y(156) y(147) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 1549>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1550>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1551>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1552>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1553>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1554>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1555>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1556>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1557>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1558>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1559>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1560>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1561>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1562>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1563>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1564>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1565>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InstrsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InstrsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LabelDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Size>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Profile>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MarkEnd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1566>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1567>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1568>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1569>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1570>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1571>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1572>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1573>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1574>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1575>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1576>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1577>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1578>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1579>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1580>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1581>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1582>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1583>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1584>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1585>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1586>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1587>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1588>)
		setValue(x(2))
lbl(259385)	definitionCopy(x(3) 275855 pid('/body' 0 pos('./compiler/FunAssembler.oz' 1 0) [once] 45) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(228)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'CompilerSupport' x(2) cache)
		inlineDot(x(0) 'Builtins' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(4) cache)
		inlineDot(x(2) getInstructionSize x(5) cache)
		inlineDot(x(2) getOpcode x(6) cache)
		inlineDot(x(2) newCodeBlock x(7) cache)
		inlineDot(x(2) makeProc x(8) cache)
		inlineDot(x(2) addDebugInfo x(9) cache)
		inlineDot(x(2) storeOpcode x(10) cache)
		inlineDot(x(2) storeNumber x(11) cache)
		inlineDot(x(2) storeLiteral x(12) cache)
		inlineDot(x(2) storeFeature x(13) cache)
		inlineDot(x(2) storeConstant x(14) cache)
		inlineDot(x(2) storeInt x(15) cache)
		inlineDot(x(2) storeRegisterIndex x(16) cache)
		inlineDot(x(2) storePredicateRef x(17) cache)
		inlineDot(x(2) storeRecordArity x(18) cache)
		inlineDot(x(2) storeGRegRef x(19) cache)
		inlineDot(x(2) storeLocation x(20) cache)
		inlineDot(x(2) storeCache x(21) cache)
		inlineDot(x(2) storeBuiltinname x(22) cache)
lbl(259528)	definition(x(23) 259548 pid('StoreBuiltinname' 2 pos('./compiler/Assembler.oz' 62 2) nil 4) <Q: 1549> [x(22)])
		putConstant(~1 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259528)
lbl(259548)	definition(x(22) 259565 pid('StoreRegister' 2 pos('./compiler/Assembler.oz' 67 6) nil 2) <Q: 1550> [x(16)])
		inlineDot(x(1) 1 x(1) cache)
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259548)
lbl(259565)	definition(x(22) 259599 pid('StoreXRegisterIndex' 2 pos('./compiler/Assembler.oz' 71 6) nil 3) <Q: 1551> [x(16)])
		shallowGuard(259586)
		getRecord(x 1 x(1))
		unifyVariable(x(2))
lbl(259579)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259586)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259565)
lbl(259599)	definition(x(22) 259633 pid('StoreYRegisterIndex' 2 pos('./compiler/Assembler.oz' 75 6) nil 3) <Q: 1552> [x(16)])
		shallowGuard(259620)
		getRecord(y 1 x(1))
		unifyVariable(x(2))
lbl(259613)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259620)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(75)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259599)
lbl(259633)	inlineDot(x(2) storeLabel x(16) cache)
lbl(259639)	definition(x(22) 259656 pid('StoreLabel' 3 pos('./compiler/Assembler.oz' 82 2) nil 4) <Q: 1553> [g(1) x(16)])
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(259639)
lbl(259656)	inlineDot(x(2) storePredId x(16) cache)
lbl(259662)	definition(x(22) 259716 pid('StorePredId' 2 pos('./compiler/Assembler.oz' 90 2) nil 7) <Q: 1554> [x(16)])
		shallowGuard(259703)
		getRecord('pid' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(259684)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259703)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(90)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259662)
lbl(259716)	inlineDot(x(2) newHashTable x(16) cache)
		inlineDot(x(2) storeHTScalar x(22) cache)
		inlineDot(x(2) storeHTRecord x(23) cache)
lbl(259734)	definition(x(24) 259870 pid('StoreHashTableRef' 3 pos('./compiler/Assembler.oz' 100 2) nil 5) <Q: 1555> [g(1) x(16) x(22) x(23)])
		shallowGuard(259857)
		getRecord('ht' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(259750)	shallowThen
		allocateL6
		callBI('Dictionary.get' [x(2) x(3)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(1) false '' false 4) 0)
lbl(259788)	definition(x(1) 259850 pid('' 1 pos('./compiler/Assembler.oz' 105 6) nil 5) unit [g(0) y(1) g(2) y(0) y(5) g(3)])
		match(x(0) ht(259835 [onRecord('onScalar' 2 259797) onRecord('onRecord' 3 259815)]))
lbl(259797)	getVarVar(x(2) x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) false '' true 4) 0)
lbl(259815)	getVarVar(x(2) x(3))
		getVariable(x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(4)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(5) false '' true 5) 0)
lbl(259835)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(112)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(259788)
lbl(259850)	move(y(2) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(259857)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(100)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259734)
lbl(259870)	inlineDot(x(2) storeGenCallInfo x(16) cache)
lbl(259876)	definition(x(22) 259936 pid('StoreGenCallInfo' 2 pos('./compiler/Assembler.oz' 120 2) nil 8) <Q: 1556> [x(16)])
		shallowGuard(259923)
		getRecord('gci' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(g 1 x(2))
		unifyVariable(x(7))
lbl(259904)	shallowThen
		move(x(7) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259923)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(120)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259876)
lbl(259936)	inlineDot(x(2) storeApplMethInfo x(16) cache)
lbl(259942)	definition(x(22) 259981 pid('StoreApplMethInfo' 2 pos('./compiler/Assembler.oz' 130 2) nil 4) <Q: 1557> [x(16)])
		shallowGuard(259968)
		getRecord('ami' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(259958)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) false '' true 3) 0)
lbl(259968)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259942)
lbl(259981)	putRecord(instructionSizes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(x(16))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		setVariable(y(59))
		setVariable(y(60))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		setVariable(y(79))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(94))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		moveMoveXYXY(x(1) y(116) x(2) y(117))
		moveMoveXYXY(x(3) y(118) x(4) y(119))
		moveMoveXYXY(x(5) y(120) x(6) y(121))
		moveMoveXYXY(x(7) y(122) x(8) y(123))
		moveMoveXYXY(x(9) y(124) x(10) y(125))
		moveMoveXYXY(x(11) y(126) x(12) y(127))
		moveMoveXYXY(x(13) y(128) x(14) y(129))
		moveMoveXYXY(x(15) y(130) x(17) y(131))
		moveMoveXYXY(x(18) y(132) x(19) y(133))
		moveMoveXYXY(x(20) y(134) x(21) y(135))
		move(x(16) x(1))
		putConstant('endOfFile' x(0))
		call(y(120) 2)
		move(y(94) x(1))
		putConstant('skip' x(0))
		call(y(120) 2)
		move(y(43) x(1))
		putConstant('failure' x(0))
		call(y(120) 2)
		move(y(38) x(1))
		putConstant('definition' x(0))
		call(y(120) 2)
		move(y(39) x(1))
		putConstant('definitionCopy' x(0))
		call(y(120) 2)
		move(y(41) x(1))
		putConstant('endDefinition' x(0))
		call(y(120) 2)
		move(y(73) x(1))
		putConstant(moveXX x(0))
		call(y(120) 2)
		move(y(74) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(120) 2)
		move(y(77) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(120) 2)
		move(y(75) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(120) 2)
		move(y(76) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(120) 2)
		move(y(23) x(1))
		putConstant(createVariableX x(0))
		call(y(120) 2)
		move(y(24) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(120) 2)
		move(y(107) x(1))
		putConstant(unifyXX x(0))
		call(y(120) 2)
		move(y(83) x(1))
		putConstant(putRecordX x(0))
		call(y(120) 2)
		move(y(82) x(1))
		putConstant(putListX x(0))
		call(y(120) 2)
		move(y(81) x(1))
		putConstant(putConstantX x(0))
		call(y(120) 2)
		move(y(90) x(1))
		putConstant(setVariableX x(0))
		call(y(120) 2)
		move(y(89) x(1))
		putConstant(setValueX x(0))
		call(y(120) 2)
		move(y(86) x(1))
		putConstant('setConstant' x(0))
		call(y(120) 2)
		move(y(87) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(120) 2)
		move(y(91) x(1))
		putConstant('setVoid' x(0))
		call(y(120) 2)
		move(y(53) x(1))
		putConstant(getRecordX x(0))
		call(y(120) 2)
		move(y(49) x(1))
		putConstant(getListX x(0))
		call(y(120) 2)
		move(y(50) x(1))
		putConstant(getListValVarX x(0))
		call(y(120) 2)
		move(y(112) x(1))
		putConstant(unifyVariableX x(0))
		call(y(120) 2)
		move(y(111) x(1))
		putConstant(unifyValueX x(0))
		call(y(120) 2)
		move(y(110) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(120) 2)
		move(y(109) x(1))
		putConstant('unifyNumber' x(0))
		call(y(120) 2)
		move(y(108) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(120) 2)
		move(y(113) x(1))
		putConstant('unifyVoid' x(0))
		call(y(120) 2)
		move(y(51) x(1))
		putConstant(getLiteralX x(0))
		call(y(120) 2)
		move(y(52) x(1))
		putConstant(getNumberX x(0))
		call(y(120) 2)
		move(y(1) x(1))
		putConstant('allocateL' x(0))
		call(y(120) 2)
		move(y(2) x(1))
		putConstant('allocateL1' x(0))
		call(y(120) 2)
		move(y(4) x(1))
		putConstant('allocateL2' x(0))
		call(y(120) 2)
		move(y(5) x(1))
		putConstant('allocateL3' x(0))
		call(y(120) 2)
		move(y(6) x(1))
		putConstant('allocateL4' x(0))
		call(y(120) 2)
		move(y(7) x(1))
		putConstant('allocateL5' x(0))
		call(y(120) 2)
		move(y(8) x(1))
		putConstant('allocateL6' x(0))
		call(y(120) 2)
		move(y(9) x(1))
		putConstant('allocateL7' x(0))
		call(y(120) 2)
		move(y(10) x(1))
		putConstant('allocateL8' x(0))
		call(y(120) 2)
		move(y(11) x(1))
		putConstant('allocateL9' x(0))
		call(y(120) 2)
		move(y(3) x(1))
		putConstant('allocateL10' x(0))
		call(y(120) 2)
		move(y(25) x(1))
		putConstant('deAllocateL' x(0))
		call(y(120) 2)
		move(y(26) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(120) 2)
		move(y(28) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(120) 2)
		move(y(29) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(120) 2)
		move(y(30) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(120) 2)
		move(y(31) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(120) 2)
		move(y(32) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(120) 2)
		move(y(33) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(120) 2)
		move(y(34) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(120) 2)
		move(y(35) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(120) 2)
		move(y(27) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(120) 2)
		move(y(47) x(1))
		putConstant('genCall' x(0))
		call(y(120) 2)
		move(y(15) x(1))
		putConstant(callX x(0))
		call(y(120) 2)
		move(y(96) x(1))
		putConstant(tailCallX x(0))
		call(y(120) 2)
		move(y(71) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(120) 2)
		move(y(48) x(1))
		putConstant('genFastCall' x(0))
		call(y(120) 2)
		move(y(44) x(1))
		putConstant('fastCall' x(0))
		call(y(120) 2)
		move(y(45) x(1))
		putConstant('fastTailCall' x(0))
		call(y(120) 2)
		move(y(85) x(1))
		putConstant(sendMsgX x(0))
		call(y(120) 2)
		move(y(97) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(120) 2)
		move(y(12) x(1))
		putConstant(applMethX x(0))
		call(y(120) 2)
		move(y(95) x(1))
		putConstant(tailApplMethX x(0))
		call(y(120) 2)
		move(y(55) x(1))
		putConstant('getSelf' x(0))
		call(y(120) 2)
		move(y(88) x(1))
		putConstant('setSelf' x(0))
		call(y(120) 2)
		move(y(70) x(1))
		putConstant('lockThread' x(0))
		call(y(120) 2)
		move(y(61) x(1))
		putConstant('inlineAt' x(0))
		call(y(120) 2)
		move(y(60) x(1))
		putConstant('inlineAssign' x(0))
		call(y(120) 2)
		move(y(14) x(1))
		putConstant('branch' x(0))
		call(y(120) 2)
		move(y(114) x(1))
		putConstant('wait' x(0))
		call(y(120) 2)
		move(y(115) x(1))
		putConstant('waitTop' x(0))
		call(y(120) 2)
		move(y(13) x(1))
		putConstant('ask' x(0))
		call(y(120) 2)
		move(y(20) x(1))
		putConstant('createCond' x(0))
		call(y(120) 2)
		move(y(22) x(1))
		putConstant('createOr' x(0))
		call(y(120) 2)
		move(y(21) x(1))
		putConstant('createEnumOr' x(0))
		call(y(120) 2)
		move(y(19) x(1))
		putConstant('createChoice' x(0))
		call(y(120) 2)
		move(y(17) x(1))
		putConstant('clause' x(0))
		call(y(120) 2)
		move(y(40) x(1))
		putConstant('emptyClause' x(0))
		call(y(120) 2)
		move(y(106) x(1))
		putConstant('thread' x(0))
		call(y(120) 2)
		move(y(42) x(1))
		putConstant('exHandler' x(0))
		call(y(120) 2)
		move(y(79) x(1))
		putConstant('popEx' x(0))
		call(y(120) 2)
		move(y(84) x(1))
		putConstant('return' x(0))
		call(y(120) 2)
		move(y(54) x(1))
		putConstant(getReturnX x(0))
		call(y(120) 2)
		move(y(46) x(1))
		putConstant(funReturnX x(0))
		call(y(120) 2)
		move(y(78) x(1))
		putConstant('nextClause' x(0))
		call(y(120) 2)
		move(y(68) x(1))
		putConstant('lastClause' x(0))
		call(y(120) 2)
		move(y(92) x(1))
		putConstant('shallowGuard' x(0))
		call(y(120) 2)
		move(y(93) x(1))
		putConstant('shallowThen' x(0))
		call(y(120) 2)
		move(y(103) x(1))
		putConstant(testLiteralX x(0))
		call(y(120) 2)
		move(y(104) x(1))
		putConstant(testNumberX x(0))
		call(y(120) 2)
		move(y(105) x(1))
		putConstant(testRecordX x(0))
		call(y(120) 2)
		move(y(102) x(1))
		putConstant(testListX x(0))
		call(y(120) 2)
		move(y(99) x(1))
		putConstant(testBoolX x(0))
		call(y(120) 2)
		move(y(72) x(1))
		putConstant(matchX x(0))
		call(y(120) 2)
		move(y(57) x(1))
		putConstant(getVariableX x(0))
		call(y(120) 2)
		move(y(56) x(1))
		putConstant(getVarVarXX x(0))
		call(y(120) 2)
		move(y(58) x(1))
		putConstant('getVoid' x(0))
		call(y(120) 2)
		move(y(36) x(1))
		putConstant('debugEntry' x(0))
		call(y(120) 2)
		move(y(37) x(1))
		putConstant('debugExit' x(0))
		call(y(120) 2)
		move(y(59) x(1))
		putConstant('globalVarname' x(0))
		call(y(120) 2)
		move(y(69) x(1))
		putConstant('localVarname' x(0))
		call(y(120) 2)
		move(y(18) x(1))
		putConstant('clearY' x(0))
		call(y(120) 2)
		move(y(80) x(1))
		putConstant('profileProc' x(0))
		call(y(120) 2)
		move(y(16) x(1))
		putConstant('callBI' x(0))
		call(y(120) 2)
		move(y(66) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(120) 2)
		move(y(64) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(120) 2)
		move(y(65) x(1))
		putConstant('inlinePlus' x(0))
		call(y(120) 2)
		move(y(63) x(1))
		putConstant('inlineMinus' x(0))
		call(y(120) 2)
		move(y(62) x(1))
		putConstant('inlineDot' x(0))
		call(y(120) 2)
		move(y(67) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(120) 2)
		move(y(98) x(1))
		putConstant('testBI' x(0))
		call(y(120) 2)
		move(y(101) x(1))
		putConstant('testLT' x(0))
		call(y(120) 2)
		move(y(100) x(1))
		putConstant('testLE' x(0))
		call(y(120) 2)
		putRecord(f [g x y] x(0))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		putRecord(f [g x y] x(1))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		putRecord(f [g x y] x(2))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		putRecord(f [g x y] x(3))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		putRecord(f [g x y] x(4))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		putRecord(f [g x y] x(5))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		putRecord(f [g x y] x(6))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		putRecord(f [g x y] x(7))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		putRecord(f [g x y] x(8))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		putRecord(f [g x y] x(9))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		putRecord(f [g x y] x(10))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		putRecord(f [g x y] x(12))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		putRecord(f [g x y] x(13))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		putRecord(f [g x y] x(14))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		putRecord(f [g x y] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putRecord(f [g x y] x(15))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		putRecord(f [g x y] x(16))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		putRecord(f [g x y] x(18))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		putRecord(f [g x y] x(19))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		putRecord(f [g x y] x(20))
		setVariable(y(120))
		setVariable(y(136))
		setVariable(y(137))
		putRecord(f [g x y] x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord(f [g x y] x(21))
		setVariable(y(145))
		setVariable(y(146))
		setVariable(y(147))
		putRecord(f [g x y] x(22))
		setVariable(y(148))
		setVariable(y(149))
		setVariable(y(150))
		putRecord(f [g x y] x(23))
		setVariable(y(151))
		setVariable(y(152))
		setVariable(y(153))
		putRecord(f [g x y] x(24))
		setVariable(y(155))
		setVariable(y(156))
		setVariable(y(157))
		putRecord(f [g x y] x(25))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(y(163))
		putRecord(f [g x y] x(26))
		setVariable(y(164))
		setVariable(y(165))
		setVariable(y(166))
		putRecord(f [g x y] x(27))
		setVariable(y(171))
		setVariable(y(172))
		setVariable(y(173))
		putRecord(f [g x y] x(28))
		setVariable(y(174))
		setVariable(y(175))
		setVariable(y(176))
		putRecord(f [g x y] x(29))
		setVariable(y(177))
		setVariable(y(178))
		setVariable(y(179))
		putRecord(f [g x y] x(30))
		setVariable(y(181))
		setVariable(y(182))
		setVariable(y(183))
		putRecord(f [g x y] x(31))
		setVariable(y(186))
		setVariable(y(187))
		setVariable(y(188))
		putRecord(f [g x y] x(32))
		setVariable(y(189))
		setVariable(y(190))
		setVariable(y(191))
		putRecord(f [g x y] x(33))
		setVariable(y(192))
		setVariable(y(193))
		setVariable(y(194))
		putRecord(f [g x y] x(34))
		setVariable(y(195))
		setVariable(y(196))
		setVariable(y(197))
		putRecord(f [g x y] x(36))
		setVariable(y(199))
		setVariable(y(200))
		setVariable(y(201))
		putRecord(f [g x y] x(37))
		setVariable(y(202))
		setVariable(y(203))
		setVariable(y(204))
		putRecord(f [g x y] x(38))
		setVariable(y(205))
		setVariable(y(206))
		setVariable(y(207))
		putRecord(f [g x y] x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		putRecord(f [g x y] x(40))
		setVariable(y(210))
		setVariable(y(211))
		setVariable(y(212))
		putRecord(f [g x y] x(41))
		setVariable(y(213))
		setVariable(y(214))
		setVariable(y(215))
		putRecord(f [g x y] x(42))
		setVariable(y(216))
		setVariable(y(217))
		setVariable(y(218))
		putRecord(f [g x y] x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		putRecord(f [g x y] x(43))
		setVariable(y(219))
		setVariable(y(220))
		setVariable(y(221))
		putRecord(f [g x y] x(44))
		setVariable(y(222))
		setVariable(y(223))
		setVariable(y(224))
		putRecord(opcodes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setValue(x(0))
		setVariable(y(16))
		setVariable(y(17))
		setValue(x(1))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setValue(x(2))
		setValue(x(3))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setValue(x(4))
		setVariable(y(59))
		setVariable(y(60))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setVariable(y(79))
		setValue(x(11))
		setValue(x(15))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setValue(x(16))
		setValue(x(17))
		setVariable(y(138))
		setVariable(y(139))
		setVariable(y(140))
		setVariable(y(141))
		setVariable(y(142))
		setVariable(y(143))
		setVariable(y(144))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setVariable(y(154))
		setValue(x(24))
		setVariable(y(158))
		setVariable(y(159))
		setVariable(y(160))
		setValue(x(25))
		setValue(x(26))
		setVariable(y(167))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setVariable(y(180))
		setValue(x(30))
		setVariable(y(184))
		setVariable(y(185))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setVariable(y(198))
		setValue(x(35))
		setVariable(y(208))
		setVariable(y(209))
		setValue(x(39))
		setValue(x(43))
		setValue(x(44))
		setVariable(y(225))
		setVariable(y(226))
		setVariable(y(227))
		move(y(51) x(1))
		putConstant('endOfFile' x(0))
		call(y(121) 2)
		move(y(170) x(1))
		putConstant('skip' x(0))
		call(y(121) 2)
		move(y(53) x(1))
		putConstant('failure' x(0))
		call(y(121) 2)
		move(y(47) x(1))
		putConstant('definition' x(0))
		call(y(121) 2)
		move(y(48) x(1))
		putConstant('definitionCopy' x(0))
		call(y(121) 2)
		move(y(50) x(1))
		putConstant('endDefinition' x(0))
		call(y(121) 2)
		move(y(114) x(1))
		putConstant(moveXX x(0))
		call(y(121) 2)
		move(y(115) x(1))
		putConstant(moveXY x(0))
		call(y(121) 2)
		move(y(113) x(1))
		putConstant(moveXG x(0))
		call(y(121) 2)
		move(y(136) x(1))
		putConstant(moveYX x(0))
		call(y(121) 2)
		move(y(137) x(1))
		putConstant(moveYY x(0))
		call(y(121) 2)
		move(y(120) x(1))
		putConstant(moveYG x(0))
		call(y(121) 2)
		move(y(111) x(1))
		putConstant(moveGX x(0))
		call(y(121) 2)
		move(y(112) x(1))
		putConstant(moveGY x(0))
		call(y(121) 2)
		move(y(110) x(1))
		putConstant(moveGG x(0))
		call(y(121) 2)
		move(y(138) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(121) 2)
		move(y(141) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(121) 2)
		move(y(139) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(121) 2)
		move(y(140) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(121) 2)
		move(y(29) x(1))
		putConstant(createVariableX x(0))
		call(y(121) 2)
		move(y(30) x(1))
		putConstant(createVariableY x(0))
		call(y(121) 2)
		move(y(28) x(1))
		putConstant(createVariableG x(0))
		call(y(121) 2)
		move(y(32) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(121) 2)
		move(y(33) x(1))
		putConstant(createVariableMoveY x(0))
		call(y(121) 2)
		move(y(31) x(1))
		putConstant(createVariableMoveG x(0))
		call(y(121) 2)
		move(y(203) x(1))
		putConstant(unifyXX x(0))
		call(y(121) 2)
		move(y(204) x(1))
		putConstant(unifyXY x(0))
		call(y(121) 2)
		move(y(202) x(1))
		putConstant(unifyXG x(0))
		call(y(121) 2)
		move(y(206) x(1))
		putConstant(unifyYX x(0))
		call(y(121) 2)
		move(y(207) x(1))
		putConstant(unifyYY x(0))
		call(y(121) 2)
		move(y(205) x(1))
		putConstant(unifyYG x(0))
		call(y(121) 2)
		move(y(200) x(1))
		putConstant(unifyGX x(0))
		call(y(121) 2)
		move(y(201) x(1))
		putConstant(unifyGY x(0))
		call(y(121) 2)
		move(y(199) x(1))
		putConstant(unifyGG x(0))
		call(y(121) 2)
		move(y(152) x(1))
		putConstant(putRecordX x(0))
		call(y(121) 2)
		move(y(153) x(1))
		putConstant(putRecordY x(0))
		call(y(121) 2)
		move(y(151) x(1))
		putConstant(putRecordG x(0))
		call(y(121) 2)
		move(y(149) x(1))
		putConstant(putListX x(0))
		call(y(121) 2)
		move(y(150) x(1))
		putConstant(putListY x(0))
		call(y(121) 2)
		move(y(148) x(1))
		putConstant(putListG x(0))
		call(y(121) 2)
		move(y(146) x(1))
		putConstant(putConstantX x(0))
		call(y(121) 2)
		move(y(147) x(1))
		putConstant(putConstantY x(0))
		call(y(121) 2)
		move(y(145) x(1))
		putConstant(putConstantG x(0))
		call(y(121) 2)
		move(y(165) x(1))
		putConstant(setVariableX x(0))
		call(y(121) 2)
		move(y(166) x(1))
		putConstant(setVariableY x(0))
		call(y(121) 2)
		move(y(164) x(1))
		putConstant(setVariableG x(0))
		call(y(121) 2)
		move(y(162) x(1))
		putConstant(setValueX x(0))
		call(y(121) 2)
		move(y(163) x(1))
		putConstant(setValueY x(0))
		call(y(121) 2)
		move(y(161) x(1))
		putConstant(setValueG x(0))
		call(y(121) 2)
		move(y(158) x(1))
		putConstant('setConstant' x(0))
		call(y(121) 2)
		move(y(159) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(121) 2)
		move(y(167) x(1))
		putConstant('setVoid' x(0))
		call(y(121) 2)
		move(y(74) x(1))
		putConstant(getRecordX x(0))
		call(y(121) 2)
		move(y(75) x(1))
		putConstant(getRecordY x(0))
		call(y(121) 2)
		move(y(73) x(1))
		putConstant(getRecordG x(0))
		call(y(121) 2)
		move(y(62) x(1))
		putConstant(getListX x(0))
		call(y(121) 2)
		move(y(63) x(1))
		putConstant(getListY x(0))
		call(y(121) 2)
		move(y(61) x(1))
		putConstant(getListG x(0))
		call(y(121) 2)
		move(y(65) x(1))
		putConstant(getListValVarX x(0))
		call(y(121) 2)
		move(y(66) x(1))
		putConstant(getListValVarY x(0))
		call(y(121) 2)
		move(y(64) x(1))
		putConstant(getListValVarG x(0))
		call(y(121) 2)
		move(y(223) x(1))
		putConstant(unifyVariableX x(0))
		call(y(121) 2)
		move(y(224) x(1))
		putConstant(unifyVariableY x(0))
		call(y(121) 2)
		move(y(222) x(1))
		putConstant(unifyVariableG x(0))
		call(y(121) 2)
		move(y(220) x(1))
		putConstant(unifyValueX x(0))
		call(y(121) 2)
		move(y(221) x(1))
		putConstant(unifyValueY x(0))
		call(y(121) 2)
		move(y(219) x(1))
		putConstant(unifyValueG x(0))
		call(y(121) 2)
		move(y(214) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(121) 2)
		move(y(215) x(1))
		putConstant(unifyValVarXY x(0))
		call(y(121) 2)
		move(y(213) x(1))
		putConstant(unifyValVarXG x(0))
		call(y(121) 2)
		move(y(217) x(1))
		putConstant(unifyValVarYX x(0))
		call(y(121) 2)
		move(y(218) x(1))
		putConstant(unifyValVarYY x(0))
		call(y(121) 2)
		move(y(216) x(1))
		putConstant(unifyValVarYG x(0))
		call(y(121) 2)
		move(y(211) x(1))
		putConstant(unifyValVarGX x(0))
		call(y(121) 2)
		move(y(212) x(1))
		putConstant(unifyValVarGY x(0))
		call(y(121) 2)
		move(y(210) x(1))
		putConstant(unifyValVarGG x(0))
		call(y(121) 2)
		move(y(209) x(1))
		putConstant('unifyNumber' x(0))
		call(y(121) 2)
		move(y(208) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(121) 2)
		move(y(225) x(1))
		putConstant('unifyVoid' x(0))
		call(y(121) 2)
		move(y(68) x(1))
		putConstant(getLiteralX x(0))
		call(y(121) 2)
		move(y(69) x(1))
		putConstant(getLiteralY x(0))
		call(y(121) 2)
		move(y(67) x(1))
		putConstant(getLiteralG x(0))
		call(y(121) 2)
		move(y(71) x(1))
		putConstant(getNumberX x(0))
		call(y(121) 2)
		move(y(72) x(1))
		putConstant(getNumberY x(0))
		call(y(121) 2)
		move(y(70) x(1))
		putConstant(getNumberG x(0))
		call(y(121) 2)
		move(y(2) x(1))
		putConstant('allocateL' x(0))
		call(y(121) 2)
		move(y(3) x(1))
		putConstant('allocateL1' x(0))
		call(y(121) 2)
		move(y(5) x(1))
		putConstant('allocateL2' x(0))
		call(y(121) 2)
		move(y(6) x(1))
		putConstant('allocateL3' x(0))
		call(y(121) 2)
		move(y(7) x(1))
		putConstant('allocateL4' x(0))
		call(y(121) 2)
		move(y(8) x(1))
		putConstant('allocateL5' x(0))
		call(y(121) 2)
		move(y(9) x(1))
		putConstant('allocateL6' x(0))
		call(y(121) 2)
		move(y(10) x(1))
		putConstant('allocateL7' x(0))
		call(y(121) 2)
		move(y(11) x(1))
		putConstant('allocateL8' x(0))
		call(y(121) 2)
		move(y(12) x(1))
		putConstant('allocateL9' x(0))
		call(y(121) 2)
		move(y(4) x(1))
		putConstant('allocateL10' x(0))
		call(y(121) 2)
		move(y(34) x(1))
		putConstant('deAllocateL' x(0))
		call(y(121) 2)
		move(y(35) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(121) 2)
		move(y(37) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(121) 2)
		move(y(38) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(121) 2)
		move(y(39) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(121) 2)
		move(y(40) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(121) 2)
		move(y(41) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(121) 2)
		move(y(42) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(121) 2)
		move(y(43) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(121) 2)
		move(y(44) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(121) 2)
		move(y(36) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(121) 2)
		move(y(59) x(1))
		putConstant('genCall' x(0))
		call(y(121) 2)
		move(y(19) x(1))
		putConstant(callX x(0))
		call(y(121) 2)
		move(y(20) x(1))
		putConstant(callY x(0))
		call(y(121) 2)
		move(y(18) x(1))
		putConstant(callG x(0))
		call(y(121) 2)
		move(y(175) x(1))
		putConstant(tailCallX x(0))
		call(y(121) 2)
		move(y(176) x(1))
		putConstant(tailCallY x(0))
		call(y(121) 2)
		move(y(174) x(1))
		putConstant(tailCallG x(0))
		call(y(121) 2)
		move(y(106) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(121) 2)
		move(y(60) x(1))
		putConstant('genFastCall' x(0))
		call(y(121) 2)
		move(y(54) x(1))
		putConstant('fastCall' x(0))
		call(y(121) 2)
		move(y(55) x(1))
		putConstant('fastTailCall' x(0))
		call(y(121) 2)
		move(y(156) x(1))
		putConstant(sendMsgX x(0))
		call(y(121) 2)
		move(y(157) x(1))
		putConstant(sendMsgY x(0))
		call(y(121) 2)
		move(y(155) x(1))
		putConstant(sendMsgG x(0))
		call(y(121) 2)
		move(y(178) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(121) 2)
		move(y(179) x(1))
		putConstant(tailSendMsgY x(0))
		call(y(121) 2)
		move(y(177) x(1))
		putConstant(tailSendMsgG x(0))
		call(y(121) 2)
		move(y(14) x(1))
		putConstant(applMethX x(0))
		call(y(121) 2)
		move(y(15) x(1))
		putConstant(applMethY x(0))
		call(y(121) 2)
		move(y(13) x(1))
		putConstant(applMethG x(0))
		call(y(121) 2)
		move(y(172) x(1))
		putConstant(tailApplMethX x(0))
		call(y(121) 2)
		move(y(173) x(1))
		putConstant(tailApplMethY x(0))
		call(y(121) 2)
		move(y(171) x(1))
		putConstant(tailApplMethG x(0))
		call(y(121) 2)
		move(y(79) x(1))
		putConstant('getSelf' x(0))
		call(y(121) 2)
		move(y(160) x(1))
		putConstant('setSelf' x(0))
		call(y(121) 2)
		move(y(105) x(1))
		putConstant('lockThread' x(0))
		call(y(121) 2)
		move(y(96) x(1))
		putConstant('inlineAt' x(0))
		call(y(121) 2)
		move(y(95) x(1))
		putConstant('inlineAssign' x(0))
		call(y(121) 2)
		move(y(17) x(1))
		putConstant('branch' x(0))
		call(y(121) 2)
		move(y(226) x(1))
		putConstant('wait' x(0))
		call(y(121) 2)
		move(y(227) x(1))
		putConstant('waitTop' x(0))
		call(y(121) 2)
		move(y(16) x(1))
		putConstant('ask' x(0))
		call(y(121) 2)
		move(y(25) x(1))
		putConstant('createCond' x(0))
		call(y(121) 2)
		move(y(27) x(1))
		putConstant('createOr' x(0))
		call(y(121) 2)
		move(y(26) x(1))
		putConstant('createEnumOr' x(0))
		call(y(121) 2)
		move(y(24) x(1))
		putConstant('createChoice' x(0))
		call(y(121) 2)
		move(y(22) x(1))
		putConstant('clause' x(0))
		call(y(121) 2)
		move(y(49) x(1))
		putConstant('emptyClause' x(0))
		call(y(121) 2)
		move(y(198) x(1))
		putConstant('thread' x(0))
		call(y(121) 2)
		move(y(52) x(1))
		putConstant('exHandler' x(0))
		call(y(121) 2)
		move(y(143) x(1))
		putConstant('popEx' x(0))
		call(y(121) 2)
		move(y(154) x(1))
		putConstant('return' x(0))
		call(y(121) 2)
		move(y(77) x(1))
		putConstant(getReturnX x(0))
		call(y(121) 2)
		move(y(78) x(1))
		putConstant(getReturnY x(0))
		call(y(121) 2)
		move(y(76) x(1))
		putConstant(getReturnG x(0))
		call(y(121) 2)
		move(y(57) x(1))
		putConstant(funReturnX x(0))
		call(y(121) 2)
		move(y(58) x(1))
		putConstant(funReturnY x(0))
		call(y(121) 2)
		move(y(56) x(1))
		putConstant(funReturnG x(0))
		call(y(121) 2)
		move(y(142) x(1))
		putConstant('nextClause' x(0))
		call(y(121) 2)
		move(y(103) x(1))
		putConstant('lastClause' x(0))
		call(y(121) 2)
		move(y(168) x(1))
		putConstant('shallowGuard' x(0))
		call(y(121) 2)
		move(y(169) x(1))
		putConstant('shallowThen' x(0))
		call(y(121) 2)
		move(y(190) x(1))
		putConstant(testLiteralX x(0))
		call(y(121) 2)
		move(y(191) x(1))
		putConstant(testLiteralY x(0))
		call(y(121) 2)
		move(y(189) x(1))
		putConstant(testLiteralG x(0))
		call(y(121) 2)
		move(y(193) x(1))
		putConstant(testNumberX x(0))
		call(y(121) 2)
		move(y(194) x(1))
		putConstant(testNumberY x(0))
		call(y(121) 2)
		move(y(192) x(1))
		putConstant(testNumberG x(0))
		call(y(121) 2)
		move(y(196) x(1))
		putConstant(testRecordX x(0))
		call(y(121) 2)
		move(y(197) x(1))
		putConstant(testRecordY x(0))
		call(y(121) 2)
		move(y(195) x(1))
		putConstant(testRecordG x(0))
		call(y(121) 2)
		move(y(187) x(1))
		putConstant(testListX x(0))
		call(y(121) 2)
		move(y(188) x(1))
		putConstant(testListY x(0))
		call(y(121) 2)
		move(y(186) x(1))
		putConstant(testListG x(0))
		call(y(121) 2)
		move(y(182) x(1))
		putConstant(testBoolX x(0))
		call(y(121) 2)
		move(y(183) x(1))
		putConstant(testBoolY x(0))
		call(y(121) 2)
		move(y(181) x(1))
		putConstant(testBoolG x(0))
		call(y(121) 2)
		move(y(108) x(1))
		putConstant(matchX x(0))
		call(y(121) 2)
		move(y(109) x(1))
		putConstant(matchY x(0))
		call(y(121) 2)
		move(y(107) x(1))
		putConstant(matchG x(0))
		call(y(121) 2)
		move(y(90) x(1))
		putConstant(getVariableX x(0))
		call(y(121) 2)
		move(y(91) x(1))
		putConstant(getVariableY x(0))
		call(y(121) 2)
		move(y(89) x(1))
		putConstant(getVariableG x(0))
		call(y(121) 2)
		move(y(84) x(1))
		putConstant(getVarVarXX x(0))
		call(y(121) 2)
		move(y(85) x(1))
		putConstant(getVarVarXY x(0))
		call(y(121) 2)
		move(y(83) x(1))
		putConstant(getVarVarXG x(0))
		call(y(121) 2)
		move(y(87) x(1))
		putConstant(getVarVarYX x(0))
		call(y(121) 2)
		move(y(88) x(1))
		putConstant(getVarVarYY x(0))
		call(y(121) 2)
		move(y(86) x(1))
		putConstant(getVarVarYG x(0))
		call(y(121) 2)
		move(y(81) x(1))
		putConstant(getVarVarGX x(0))
		call(y(121) 2)
		move(y(82) x(1))
		putConstant(getVarVarGY x(0))
		call(y(121) 2)
		move(y(80) x(1))
		putConstant(getVarVarGG x(0))
		call(y(121) 2)
		move(y(92) x(1))
		putConstant('getVoid' x(0))
		call(y(121) 2)
		move(y(45) x(1))
		putConstant('debugEntry' x(0))
		call(y(121) 2)
		move(y(46) x(1))
		putConstant('debugExit' x(0))
		call(y(121) 2)
		move(y(93) x(1))
		putConstant('globalVarname' x(0))
		call(y(121) 2)
		move(y(104) x(1))
		putConstant('localVarname' x(0))
		call(y(121) 2)
		move(y(23) x(1))
		putConstant('clearY' x(0))
		call(y(121) 2)
		move(y(144) x(1))
		putConstant('profileProc' x(0))
		call(y(121) 2)
		move(y(21) x(1))
		putConstant('callBI' x(0))
		call(y(121) 2)
		move(y(101) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(121) 2)
		move(y(99) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(121) 2)
		move(y(100) x(1))
		putConstant('inlinePlus' x(0))
		call(y(121) 2)
		move(y(98) x(1))
		putConstant('inlineMinus' x(0))
		call(y(121) 2)
		move(y(97) x(1))
		putConstant('inlineDot' x(0))
		call(y(121) 2)
		move(y(102) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(121) 2)
		move(y(180) x(1))
		putConstant('testBI' x(0))
		call(y(121) 2)
		move(y(185) x(1))
		putConstant('testLT' x(0))
		call(y(121) 2)
		move(y(184) x(1))
		putConstant('testLE' x(0))
		call(y(121) 2)
lbl(263851)	definition(x(7) 267620 pid('StoreInstr' 3 pos('./compiler-Opcodes.oz' 537 0) nil 7) <Q: 1558> [y(51) y(125) y(170) y(53) y(3) y(5) y(6) y(7) y(8) y(9) y(10) y(11) y(12) y(4) y(34) y(35) y(37) y(38) y(39) y(40) y(41) y(42) y(43) y(44) y(36) y(226) y(227) y(16) y(27) y(26) y(24) y(22) y(49) y(143) y(154) y(103) y(169) y(144) y(124) y(45) y(127) y(126) y(47) y(131) y(133) y(48) y(50) y(1) y(138) y(141) y(139) y(140) y(132) y(129) y(158) y(159) y(167) y(130) y(209) y(208) y(225) y(2) y(59) y(106) y(60) y(54) y(55) y(135) y(79) y(160) y(105) y(96) y(128) y(95) y(17) y(25) y(198) y(52) y(142) y(168) y(92) y(46) y(93) y(104) y(23) y(21) y(134) y(101) y(99) y(100) y(98) y(97) y(102) y(180) y(185) y(184)])
		match(x(0) ht(267605 [onScalar('endOfFile' 263860) onScalar('skip' 263869) onScalar('failure' 263878) onScalar('allocateL1' 263887) onScalar('allocateL2' 263896) onScalar('allocateL3' 263905) onScalar('allocateL4' 263914) onScalar('allocateL5' 263923) onScalar('allocateL6' 263932) onScalar('allocateL7' 263941) onScalar('allocateL8' 263950) onScalar('allocateL9' 263959) onScalar('allocateL10' 263968) onScalar('deAllocateL' 263977) onScalar('deAllocateL1' 263986) onScalar('deAllocateL2' 263995) onScalar('deAllocateL3' 264004) onScalar('deAllocateL4' 264013) onScalar('deAllocateL5' 264022) onScalar('deAllocateL6' 264031) onScalar('deAllocateL7' 264040) onScalar('deAllocateL8' 264049) onScalar('deAllocateL9' 264058) onScalar('deAllocateL10' 264067) onScalar('wait' 264076) onScalar('waitTop' 264085) onScalar('ask' 264094) onScalar('createOr' 264103) onScalar('createEnumOr' 264112) onScalar('createChoice' 264121) onScalar('clause' 264130) onScalar('emptyClause' 264139) onScalar('popEx' 264148) onScalar('return' 264157) onScalar('lastClause' 264166) onScalar('shallowThen' 264175) onScalar('profileProc' 264184) onRecord('debugEntry' 4 264193) onRecord('definition' 5 264255) onRecord('definitionCopy' 5 264322) onRecord('endDefinition' 1 264389) onRecord('move' 2 264418) onRecord('moveMoveXYXY' 4 264476) onRecord('moveMoveYXYX' 4 264527) onRecord('moveMoveXYYX' 4 264578) onRecord('moveMoveYXXY' 4 264629) onRecord('createVariable' 1 264680) onRecord('createVariableMove' 2 264721) onRecord('unify' 2 264771) onRecord('putRecord' 3 264829) onRecord('putList' 1 264889) onRecord('putConstant' 2 264930) onRecord('setVariable' 1 264980) onRecord('setValue' 1 265021) onRecord('setConstant' 1 265062) onRecord('setPredicateRef' 1 265085) onRecord('setVoid' 1 265108) onRecord('getRecord' 3 265131) onRecord('getList' 1 265191) onRecord('getListValVar' 3 265232) onRecord('unifyVariable' 1 265292) onRecord('unifyValue' 1 265333) onRecord('unifyValVar' 2 265374) onRecord('unifyNumber' 1 265432) onRecord('unifyLiteral' 1 265455) onRecord('unifyVoid' 1 265478) onRecord('getLiteral' 2 265501) onRecord('getNumber' 2 265551) onRecord('allocateL' 1 265601) onRecord('genCall' 2 265624) onRecord('call' 2 265656) onRecord('tailCall' 2 265706) onRecord('marshalledFastCall' 2 265756) onRecord('genFastCall' 2 265788) onRecord('fastCall' 2 265820) onRecord('fastTailCall' 2 265852) onRecord('sendMsg' 4 265884) onRecord('tailSendMsg' 4 265953) onRecord('applMeth' 2 266022) onRecord('tailApplMeth' 2 266072) onRecord('getSelf' 1 266122) onRecord('setSelf' 1 266145) onRecord('lockThread' 2 266168) onRecord('inlineAt' 3 266206) onRecord('inlineAssign' 3 266248) onRecord('branch' 1 266290) onRecord('createCond' 1 266319) onRecord('thread' 1 266348) onRecord('exHandler' 1 266377) onRecord('getReturn' 1 266406) onRecord('funReturn' 1 266447) onRecord('nextClause' 1 266488) onRecord('shallowGuard' 1 266517) onRecord('testLiteral' 3 266546) onRecord('testNumber' 3 266611) onRecord('testRecord' 4 266676) onRecord('testList' 2 266750) onRecord('testBool' 3 266805) onRecord('match' 2 266873) onRecord('getVariable' 1 266928) onRecord('getVarVar' 2 266969) onRecord('getVoid' 1 267027) onRecord('debugExit' 4 267050) onRecord('globalVarname' 1 267101) onRecord('localVarname' 1 267124) onRecord('clearY' 1 267147) onRecord('callBI' 2 267170) onRecord('inlinePlus1' 2 267202) onRecord('inlineMinus1' 2 267234) onRecord('inlinePlus' 3 267266) onRecord('inlineMinus' 3 267308) onRecord('inlineDot' 4 267350) onRecord('inlineUparrow' 3 267401) onRecord('testBI' 3 267443) onRecord('testLT' 4 267491) onRecord('testLE' 4 267548)]))
lbl(263860)	move(x(1) x(0))
		move(g(0) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263869)	move(x(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263878)	move(x(1) x(0))
		move(g(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263887)	move(x(1) x(0))
		move(g(4) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263896)	move(x(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263905)	move(x(1) x(0))
		move(g(6) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263914)	move(x(1) x(0))
		move(g(7) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263923)	move(x(1) x(0))
		move(g(8) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263932)	move(x(1) x(0))
		move(g(9) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263941)	move(x(1) x(0))
		move(g(10) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263950)	move(x(1) x(0))
		move(g(11) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263959)	move(x(1) x(0))
		move(g(12) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263968)	move(x(1) x(0))
		move(g(13) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263977)	move(x(1) x(0))
		move(g(14) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263986)	move(x(1) x(0))
		move(g(15) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263995)	move(x(1) x(0))
		move(g(16) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264004)	move(x(1) x(0))
		move(g(17) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264013)	move(x(1) x(0))
		move(g(18) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264022)	move(x(1) x(0))
		move(g(19) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264031)	move(x(1) x(0))
		move(g(20) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264040)	move(x(1) x(0))
		move(g(21) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264049)	move(x(1) x(0))
		move(g(22) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264058)	move(x(1) x(0))
		move(g(23) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264067)	move(x(1) x(0))
		move(g(24) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264076)	move(x(1) x(0))
		move(g(25) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264085)	move(x(1) x(0))
		move(g(26) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264094)	move(x(1) x(0))
		move(g(27) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264103)	move(x(1) x(0))
		move(g(28) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264112)	move(x(1) x(0))
		move(g(29) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264121)	move(x(1) x(0))
		move(g(30) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264130)	move(x(1) x(0))
		move(g(31) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264139)	move(x(1) x(0))
		move(g(32) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264148)	move(x(1) x(0))
		move(g(33) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264157)	move(x(1) x(0))
		move(g(34) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264166)	move(x(1) x(0))
		move(g(35) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264175)	move(x(1) x(0))
		move(g(36) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264184)	move(x(1) x(0))
		move(g(37) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264193)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genCall(gci(g(38) false '' false 3) 0)
		move(y(4) x(0))
		move(g(39) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(264255)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(42) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264322)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(45) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264389)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(46) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(264418)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'move' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264476)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(48) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264527)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(49) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264578)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(50) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264629)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(51) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264680)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264721)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariableMove' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(264771)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unify' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264829)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(264889)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264930)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putConstant' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264980)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265021)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265062)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(54) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(265085)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(55) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(43) false '' true 2) 0)
lbl(265108)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(56) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265131)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(265191)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265232)	allocateL4
		getVarVar(y(0) x(0))
		getVariable(y(1))
		move(g(47) x(2))
		inlineDot(x(2) 'getListValVar' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(265292)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265333)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265374)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unifyValVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265432)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(58) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(41) false '' true 2) 0)
lbl(265455)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(59) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(40) false '' true 2) 0)
lbl(265478)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(60) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265501)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getLiteral' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265551)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getNumber' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265601)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(61) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265624)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(62) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1556> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265656)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'call' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265706)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailCall' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265756)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(63) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265788)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(64) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265820)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(65) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265852)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(66) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265884)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'sendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(265953)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'tailSendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(266022)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'applMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266072)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailApplMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266122)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(68) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266145)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(69) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266168)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(g(70) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(266206)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(71) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266248)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(73) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266290)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(74) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266319)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(75) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266348)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(76) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266377)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(77) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266406)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266447)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'funReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266488)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(78) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266517)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(79) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266546)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testLiteral' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266611)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testNumber' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266676)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(47) x(3))
		inlineDot(x(3) 'testRecord' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(0) y(5) y(3) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(266750)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'testList' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1553> 7)
lbl(266805)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testBool' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266873)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'match' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1555> 7)
lbl(266928)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266969)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'getVarVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(267027)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(80) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(267050)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(81) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(267101)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(82) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267124)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(83) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267147)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(84) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1552> 5)
lbl(267170)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(85) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(86) false '' true 2) 0)
lbl(267202)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(87) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267234)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(88) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267266)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(89) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267308)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(90) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267350)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(91) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(267401)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(92) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267443)	allocateL5
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(3) x(0))
		move(g(93) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(86) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(267491)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(94) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267548)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(95) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267605)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1180)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(263851)
lbl(267620)	move(y(117) x(0))
		inlineDot(x(0) isUniqueName x(7) cache)
		inlineDot(x(0) isCopyableName x(8) cache)
		inlineDot(x(0) isCopyablePredicateRef x(9) cache)
lbl(267641)	definition(x(10) 267736 pid('FindProcSub' 3 pos('./compiler/Assembler.oz' 144 5) nil 7) <Q: 1559> [y(116) y(119)])
		match(x(0) ht(267721 [onScalar(nil 267650) onRecord('|' 2 267674)]))
lbl(267650)	move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(267674)	getVarVar(x(0) x(3))
		move(g(1) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		testBI('==' [x(5) x(1)]#[x(6)] 267715)
		getRecord('#' 3 x(2))
		unifyLiteral('<R: ')
		unifyVariable(x(3))
		unifyLiteral('>')
		move(g(0) x(1))
		inlineDot(x(1) valueToVirtualString x(5) cache)
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(5) 4)
lbl(267715)	move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
lbl(267721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(153)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267641)
lbl(267736)	definition(x(10) 267762 pid('FindProc' 2 pos('./compiler/Assembler.oz' 156 5) nil 4) <Q: 1560> [y(119)])
		move(g(0) x(2))
		callBI('Arity' [x(2)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
		endDefinition(267736)
lbl(267762)	definition(x(10) 267832 pid('ListToVirtualString' 4 pos('./compiler/Assembler.oz' 161 2) nil 4) <Q: 1561> nil)
		match(x(0) ht(267817 [onScalar(nil 267771) onRecord('|' 2 267775)]))
lbl(267771)	unify(x(3) x(1))
		return
lbl(267775)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' ')
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<Q: 1561> 9)
lbl(267817)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267762)
lbl(267832)	definition(x(10) 267910 pid('TupleSub' 6 pos('./compiler/Assembler.oz' 169 2) nil 8) <Q: 1562> nil)
		testLE(x(0) x(1) x(6) 267904)
		allocateL7
		inlinePlus1(x(0) x(6))
		callBI('.' [x(3) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(0))
		move(y(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(1))
		setConstant(' ')
		setValue(y(6))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		move(y(4) x(5))
		deAllocateL7
		genFastCall(<Q: 1562> 13)
lbl(267904)	unify(x(5) x(2))
		return
		endDefinition(267832)
lbl(267910)	definition(x(10) 267985 pid('TupleToVirtualString' 3 pos('./compiler/Assembler.oz' 178 2) nil 6) <Q: 1563> nil)
		allocateL6
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyLiteral(')')
		callBI('Width' [x(0)]#[x(2)])
		callBI('Label' [x(0)]#[x(3)])
		inlineDot(x(0) 1 x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(4))
		setConstant('(')
		setValue(y(5))
		moveMoveYXYX(y(3) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(0) x(5))
		putConstant(2 x(0))
		deAllocateL6
		genFastCall(<Q: 1562> 13)
		endDefinition(267910)
lbl(267985)	definition(x(10) 268436 pid('MyValueToVirtualString' 3 pos('./compiler/Assembler.oz' 184 2) nil 5) <Q: 1564> [x(7) y(116) x(8) y(0) g(2) g(3) x(9) g(4) g(1) g(5)])
		testBI('IsName' [x(0)]#[x(3)] 268139)
		match(x(0) ht(268010 [onScalar(true 267998) onScalar(false 268002) onScalar(unit 268006)]))
lbl(267998)	getLiteral('true' x(2))
		return
lbl(268002)	getLiteral('false' x(2))
		return
lbl(268006)	getLiteral('unit' x(2))
		return
lbl(268010)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(2) 268052 268128)
		getRecord('#' 3 y(1))
		unifyLiteral('<U: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(268052)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		testBool(y(2) 268091 268117)
		getRecord('#' 3 y(1))
		unifyLiteral('<M: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(268091)	getRecord('#' 3 y(1))
		unifyLiteral('<N: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(268117)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268128)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268139)	testBI('IsAtom' [x(0)]#[x(3)] 268217)
		move(g(3) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(3)] 268161)
		getRecord('#' 3 x(2))
		unifyLiteral('\'')
		unifyValue(x(0))
		unifyLiteral('\'')
		return
lbl(268161)	match(x(0) ht(268196 [onScalar('lbl' 268164) onScalar('pid' 268168) onScalar('ht' 268172) onScalar('onScalar' 268176) onScalar('onRecord' 268180) onScalar('gci' 268184) onScalar('ami' 268188) onScalar('pos' 268192)]))
lbl(268164)	getLiteral('\'lbl\'' x(2))
		return
lbl(268168)	getLiteral('\'pid\'' x(2))
		return
lbl(268172)	getLiteral('\'ht\'' x(2))
		return
lbl(268176)	getLiteral('\'onScalar\'' x(2))
		return
lbl(268180)	getLiteral('\'onRecord\'' x(2))
		return
lbl(268184)	getLiteral('\'gci\'' x(2))
		return
lbl(268188)	getLiteral('\'ami\'' x(2))
		return
lbl(268192)	getLiteral('\'pos\'' x(2))
		return
lbl(268196)	move(g(1) x(3))
		inlineDot(x(3) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(268217)	testBI('IsProcedure' [x(0)]#[x(3)] 268227)
		move(x(2) x(1))
		genFastCall(<Q: 1560> 5)
lbl(268227)	testBI('IsForeignPointer' [x(0)]#[x(3)] 268324)
		allocateL5
		callBI('ForeignPointer.toInt' [x(0)]#[x(3)])
		getRecord('#' 3 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('>')
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(6) false '' false 2) 0)
		testBool(y(4) 268265 268270)
		getLiteral('<Q: ' y(0))
		branch(268281)
lbl(268265)	getLiteral('<P: ' y(0))
		branch(268281)
lbl(268270)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(222)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268281)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		putConstant(unit x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 268319)
lbl(268296)	putConstant(0 x(2))
		callBI('Dictionary.get' [x(0) x(2)]#[x(3)])
		inlinePlus1(x(3) x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(x(2) y(1))
		deAllocateL5
		return
lbl(268319)	unify(y(1) x(3))
		deAllocateL5
		return
lbl(268324)	match(x(0) ht(268406 [onRecord('|' 2 268327) onRecord('#' 2 268368)]))
lbl(268327)	allocateL4
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(y(1))
		unifyLiteral(']')
		move(x(1) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 2 x(1))
		setConstant('[')
		setValue(y(3))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1561> 9)
lbl(268368)	allocateL3
		getVarVar(x(0) y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getList(x(3))
		unifyNumber(35)
		unifyLiteral(nil)
		move(x(1) y(2))
		genFastCall(<Q: 1564> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1564> 7)
lbl(268406)	testBI('IsTuple' [x(0)]#[x(3)] 268413)
		genFastCall(<Q: 1563> 7)
lbl(268413)	move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(1000 x(1))
		putConstant(1000 x(2))
		tailCall(x(4) 4)
		endDefinition(267985)
lbl(268436)	definition(x(7) 268455 pid('InstrToVirtualString' 3 pos('./compiler/Assembler.oz' 250 2) nil 4) <Q: 1565> nil)
		testBI('IsAtom' [x(0)]#[x(3)] 268450)
		unify(x(2) x(0))
		return
lbl(268450)	genFastCall(<Q: 1563> 7)
		endDefinition(268436)
lbl(268455)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: InstrsHd> <M: InstrsTl> <M: LabelDict> <M: Size>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Profile> debugInfoControl] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(268481)	definition(x(7) 268544 pid('AssemblerClass,init/fast' 2 pos('./compiler/Assembler.oz' 263 2) nil 5) <Q: 1566> [y(94)])
		inlineAt(<M: InstrsTl> x(2) cache)
		putList(x(3))
		setConstant('skip')
		setValue(x(2))
		inlineAssign(<M: InstrsHd> x(3) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: LabelDict> x(2) cache)
		move(g(0) x(2))
		inlineAssign(<M: Size> x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: Profile> x(4) cache)
		unify(x(4) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoControl x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(268481)
lbl(268544)	definition(x(8) 268579 pid('AssemblerClass,init/slow' 1 pos('./compiler/Assembler.oz' 263 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1566> 5)
		endDefinition(268544)
lbl(268579)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(268589)	definition(x(7) 268614 pid('AssemblerClass,newLabel/fast' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) <Q: 1567> [g(5)])
		callBI('NewName' nil#[x(1)])
		unify(x(1) x(0))
		inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268589)
lbl(268614)	definition(x(8) 268640 pid('AssemblerClass,newLabel/slow' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1567> 3)
		endDefinition(268614)
lbl(268640)	putRecord('#' [1 2 fast] x(10))
		setConstant(newLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268650)	definition(x(7) 268679 pid('AssemblerClass,declareLabel/fast' 1 pos('./compiler/Assembler.oz' 276 2) nil 3) <Q: 1568> [g(6) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268666)
		return
lbl(268666)	inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268650)
lbl(268679)	definition(x(8) 268705 pid('AssemblerClass,declareLabel/slow' 1 pos('./compiler/Assembler.oz' 276 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1568> 3)
		endDefinition(268679)
lbl(268705)	putRecord('#' [1 2 fast] x(11))
		setConstant(declareLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268715)	definition(x(7) 268735 pid('AssemblerClass,isLabelUsed/fast' 2 pos('./compiler/Assembler.oz' 281 2) nil 4) <Q: 1569> [g(6)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(268715)
lbl(268735)	definition(x(8) 268770 pid('AssemblerClass,isLabelUsed/slow' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1569> 5)
		endDefinition(268735)
lbl(268770)	putRecord('#' [1 2 fast] x(12))
		setConstant(isLabelUsed)
		setValue(x(8))
		setValue(x(7))
lbl(268780)	definition(x(7) 268828 pid('AssemblerClass,setLabel/fast' 1 pos('./compiler/Assembler.oz' 284 2) nil 3) <Q: 1570> [g(6) g(1) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268812)
		inlineAt(<M: LabelDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(2))
		return
lbl(268812)	inlineAt(<M: LabelDict> x(1) cache)
		inlineAt(<M: Size> x(2) cache)
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268780)
lbl(268828)	definition(x(8) 268854 pid('AssemblerClass,setLabel/slow' 1 pos('./compiler/Assembler.oz' 284 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1570> 3)
		endDefinition(268828)
lbl(268854)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268864)	definition(x(7) 268934 pid('AssemblerClass,checkLabels/fast' 0 pos('./compiler/Assembler.oz' 291 2) nil 3) <Q: 1571> [g(7) g(8)])
		inlineAt(<M: LabelDict> x(0) cache)
		callBI('Dictionary.entries' [x(0)]#[x(2)])
lbl(268878)	definition(x(1) 268926 pid('' 1 pos('./compiler/Assembler.oz' 293 6) nil 3) unit [g(1)])
		shallowGuard(268913)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(268894)	shallowThen
		testBI('IsFree' [x(2)]#[x(0)] 268912)
		putRecord(compiler 3 x(0))
		setConstant(assembler)
		setConstant(undeclaredLabel)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268912)	return
lbl(268913)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(293)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(268878)
lbl(268926)	move(x(2) x(0))
		genFastCall(<P: 34> 5)
		endDefinition(268864)
lbl(268934)	definition(x(8) 268948 pid('AssemblerClass,checkLabels/slow' 1 pos('./compiler/Assembler.oz' 291 2) nil 1) unit nil)
		getLiteral(checkLabels x(0))
		genFastCall(<Q: 1571> 1)
		endDefinition(268934)
lbl(268948)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkLabels)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(268960)	definition(x(7) 269365 pid('AssemblerClass,append/fast' 1 pos('./compiler/Assembler.oz' 299 2) nil 5) <Q: 1572> [y(1) y(0)])
		allocateL2
		move(x(0) y(0))
		match(y(0) ht(269249 [onRecord('definition' 5 268973) onRecord('definitionCopy' 5 268985) onRecord('endDefinition' 1 268997) onRecord('branch' 1 269007) onRecord('thread' 1 269017) onRecord('exHandler' 1 269027) onRecord('createCond' 1 269037) onRecord('nextClause' 1 269047) onRecord('shallowGuard' 1 269057) onRecord('testBI' 3 269067) onRecord('testLT' 4 269079) onRecord('testLE' 4 269091) onRecord('testLiteral' 3 269103) onRecord('testNumber' 3 269115) onRecord('testBool' 3 269127) onRecord('testRecord' 4 269146) onRecord('testList' 2 269158) onRecord('match' 2 269170) onRecord('lockThread' 2 269241)]))
lbl(268973)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(268985)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(268997)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269007)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269017)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269027)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269037)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269047)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269057)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269067)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269079)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269091)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269103)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269115)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269127)	getVoid(1)
		getVarVar(x(1) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269146)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269158)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269249)
lbl(269170)	getVoid(1)
		getVariable(x(1))
		getRecord('ht' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		getSelf(x(2))
lbl(269190)	definition(x(1) 269233 pid('' 1 pos('./compiler/Assembler.oz' 329 2) nil 3) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(269218 [onRecord('onScalar' 2 269204) onRecord('onRecord' 3 269211)]))
lbl(269204)	getVoid(1)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269211)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269218)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(269190)
lbl(269233)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(269249)
lbl(269241)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
lbl(269249)	putList(x(0))
		setValue(y(0))
		setVariable(x(1))
		inlineAt(<M: InstrsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: InstrsTl> x(1) cache)
		inlineAt(<M: Size> x(0) cache)
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		inlinePlus(x(0) x(4) x(2))
		inlineAssign(<M: Size> x(2) cache)
		match(y(0) ht(269361 [onRecord('definition' 5 269297) onRecord('definitionCopy' 5 269329)]))
lbl(269297)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269316 269318)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269316)	deAllocateL2
		return
lbl(269318)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269329)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269348 269350)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269348)	deAllocateL2
		return
lbl(269350)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(346)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269361)	deAllocateL2
		return
		endDefinition(268960)
lbl(269365)	definition(x(8) 269391 pid('AssemblerClass,append/slow' 1 pos('./compiler/Assembler.oz' 299 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1572> 3)
		endDefinition(269365)
lbl(269391)	putRecord('#' [1 2 fast] x(15))
		setConstant(append)
		setValue(x(8))
		setValue(x(7))
lbl(269401)	definition(x(7) 269531 pid('AssemblerClass,output/fast' 1 pos('./compiler/Assembler.oz' 352 2) nil 6) <Q: 1573> [y(1) g(5) g(7)])
		allocateL3
		move(x(0) y(0))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		putConstant(0 x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(1) x(2) x(3)]#nil)
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.entries' [x(2)]#[x(3)])
lbl(269437)	definition(x(2) 269478 pid('' 1 pos('./compiler/Assembler.oz' 358 6) nil 3) unit [g(1) x(0)])
		shallowGuard(269465)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(269453)	shallowThen
		testBI('IsDet' [x(2)]#[x(0)] 269464)
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
lbl(269464)	return
lbl(269465)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(269437)
lbl(269478)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
		getRecord('#' 4 y(0))
		unifyLiteral('%% Code Size:\n')
		unifyVariable(x(5))
		unifyLiteral(' % words\n')
		unifyVariable(x(4))
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: InstrsHd> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		putConstant(0 x(3))
		deAllocateL3
		genCall(gci(g(0) true <M: OutputSub> true 5) 0)
		endDefinition(269401)
lbl(269531)	definition(x(8) 269557 pid('AssemblerClass,output/slow' 1 pos('./compiler/Assembler.oz' 352 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1573> 3)
		endDefinition(269531)
lbl(269557)	putRecord('#' [1 2 fast] x(16))
		setConstant(output)
		setValue(x(8))
		setValue(x(7))
lbl(269567)	definition(x(7) 269714 pid('AssemblerClass,OutputSub/fast' 5 pos('./compiler/Assembler.oz' 366 2) nil 9) <Q: 1574> [g(6) y(1) y(0)])
		match(x(0) ht(269699 [onScalar(nil 269576) onRecord('|' 2 269580)]))
lbl(269576)	getLiteral(nil x(4))
		return
lbl(269580)	allocateL8
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(0) y(4) x(5) y(5))
		createVariable(y(6))
		testBI('Dictionary.member' [x(1) x(3)]#[x(6)] 269635)
		getRecord('#' 4 y(6))
		unifyLiteral('lbl(')
		unifyValue(y(2))
		unifyLiteral(')')
		unifyVariable(x(6))
		putConstant(100 x(7))
		testLT(x(3) x(7) x(8) 269630)
		getLiteral('\t\t' x(6))
		branch(269638)
lbl(269630)	getLiteral('\t' x(6))
		branch(269638)
lbl(269635)	getLiteral('\t\t' y(6))
lbl(269638)	move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(1) true <M: TranslateInstrLabels> false 2) 0)
		getRecord('#' 4 y(3))
		unifyValVar(y(6) x(2))
		unifyLiteral('\n')
		unifyVariable(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		genFastCall(<Q: 1565> 6)
		move(y(4) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(2) x(0))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(1))
		inlinePlus(x(1) x(2) x(3))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL8
		genCall(gci(g(1) true <M: OutputSub> true 5) 0)
lbl(269699)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(269567)
lbl(269714)	definition(x(8) 269767 pid('AssemblerClass,OutputSub/slow' 1 pos('./compiler/Assembler.oz' 366 2) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1574> 11)
		endDefinition(269714)
lbl(269767)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputSub>)
		setValue(x(8))
		setValue(x(7))
lbl(269777)	definition(x(7) 269851 pid('AssemblerClass,load/fast' 2 pos('./compiler/Assembler.oz' 384 2) nil 3) <Q: 1575> [y(1) y(122) y(123)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		inlineAt(<M: Size> x(0) cache)
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		inlineAt(<M: InstrsHd> x(0) cache)
		getSelf(x(2))
lbl(269810)	definition(x(1) 269834 pid('' 1 pos('./compiler/Assembler.oz' 388 6) nil 3) unit [x(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: LabelDict> x(2) cache)
		move(g(1) x(1))
		genFastCall(<Q: 1558> 7)
		endDefinition(269810)
lbl(269834)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(2) false '' true 3) 0)
		endDefinition(269777)
lbl(269851)	definition(x(8) 269886 pid('AssemblerClass,load/slow' 1 pos('./compiler/Assembler.oz' 384 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1575> 5)
		endDefinition(269851)
lbl(269886)	putRecord('#' [1 2 fast] x(18))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(269896)	definition(x(7) 269916 pid('AssemblerClass,MarkEnd/fast' 0 pos('./compiler/Assembler.oz' 392 2) nil 2) <Q: 1576> nil)
		putConstant(nil x(0))
		inlineAt(<M: InstrsTl> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(269896)
lbl(269916)	definition(x(8) 269930 pid('AssemblerClass,MarkEnd/slow' 1 pos('./compiler/Assembler.oz' 392 2) nil 1) unit nil)
		getLiteral(<M: MarkEnd> x(0))
		genFastCall(<Q: 1576> 1)
		endDefinition(269916)
lbl(269930)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: MarkEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(269940)	definition(x(7) 270490 pid('AssemblerClass,TranslateInstrLabels/fast' 2 pos('./compiler/Assembler.oz' 396 2) nil 8) <Q: 1577> [g(1)])
		match(x(0) ht(270484 [onRecord('definition' 5 269949) onRecord('definitionCopy' 5 269980) onRecord('endDefinition' 1 270011) onRecord('branch' 1 270028) onRecord('thread' 1 270045) onRecord('exHandler' 1 270062) onRecord('createCond' 1 270079) onRecord('nextClause' 1 270096) onRecord('shallowGuard' 1 270113) onRecord('testBI' 3 270130) onRecord('testLT' 4 270154) onRecord('testLE' 4 270181) onRecord('testLiteral' 3 270208) onRecord('testNumber' 3 270232) onRecord('testRecord' 4 270256) onRecord('testList' 2 270283) onRecord('testBool' 3 270303) onRecord('match' 2 270335) onRecord('lockThread' 2 270464)]))
lbl(269949)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definition' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(269980)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definitionCopy' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(270011)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('endDefinition' 1 x(1))
		unifyValue(x(3))
		return
lbl(270028)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('branch' 1 x(1))
		unifyValue(x(3))
		return
lbl(270045)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('thread' 1 x(1))
		unifyValue(x(3))
		return
lbl(270062)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('exHandler' 1 x(1))
		unifyValue(x(3))
		return
lbl(270079)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('createCond' 1 x(1))
		unifyValue(x(3))
		return
lbl(270096)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('nextClause' 1 x(1))
		unifyValue(x(3))
		return
lbl(270113)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('shallowGuard' 1 x(1))
		unifyValue(x(3))
		return
lbl(270130)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testBI' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270154)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLT' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270181)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLE' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270208)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testLiteral' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270232)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testNumber' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270256)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testRecord' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270283)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(2)]#[x(4)])
		getRecord('testList' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(270303)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(3)]#[x(4)])
		getRecord('testBool' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		unifyValue(x(4))
		return
lbl(270335)	allocateL4
		getVarVar(y(0) x(3))
		getRecord('ht' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(4)])
		getSelf(x(5))
lbl(270357)	definition(x(6) 270430 pid('' 2 pos('./compiler/Assembler.oz' 452 6) nil 7) unit [x(5) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		match(x(0) ht(270415 [onRecord('onScalar' 2 270371) onRecord('onRecord' 3 270391)]))
lbl(270371)	getVarVar(x(0) x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(270391)	getVarVar(x(0) x(3))
		getVariable(x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270415)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(459)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270357)
lbl(270430)	moveMoveXYXY(x(1) y(1) x(4) y(2))
		move(x(3) x(0))
		move(x(6) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		getRecord('match' 2 y(1))
		unifyValVar(y(0) x(0))
		getRecord('ht' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(270464)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getRecord('lockThread' 2 x(1))
		unifyValue(x(4))
		unifyValue(x(2))
		return
lbl(270484)	unify(x(1) x(0))
		return
		endDefinition(269940)
lbl(270490)	definition(x(8) 270525 pid('AssemblerClass,TranslateInstrLabels/slow' 1 pos('./compiler/Assembler.oz' 396 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1577> 5)
		endDefinition(270490)
lbl(270525)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('AssemblerClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(270575)	definition(x(0) 270594 pid('RecordArityWidth' 2 pos('./compiler/Assembler.oz' 472 3) nil 3) <Q: 1578> nil)
		testBI('IsInt' [x(0)]#[x(2)] 270589)
		unify(x(1) x(0))
		return
lbl(270589)	genFastCall(<P: 24> 5)
		endDefinition(270575)
lbl(270594)	definition(x(0) 270650 pid('GetClears' 3 pos('./compiler/Assembler.oz' 478 3) nil 5) <Q: 1579> nil)
		match(x(0) ht(270635 [onScalar(nil 270603) onRecord('|' 2 270610)]))
lbl(270603)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(270610)	getVarVar(x(3) x(4))
		testRecord(x(3) clear 1 270628)
lbl(270618)	getListValVar(x(1) x(3) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1579> 7)
lbl(270628)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(270635)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(490)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270594)
lbl(270650)	definition(x(0) 270711 pid('SetVoids' 4 pos('./compiler/Assembler.oz' 493 3) nil 6) <Q: 1580> nil)
		match(x(0) ht(270696 [onScalar(nil 270659) onRecord('|' 2 270666)]))
lbl(270659)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270666)	getVarVar(x(4) x(5))
		testRecord(x(4) 'setVoid' 1 270689)
lbl(270674)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1580> 9)
lbl(270689)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270696)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(504)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270650)
lbl(270711)	definition(x(0) 270772 pid('UnifyVoids' 4 pos('./compiler/Assembler.oz' 507 3) nil 6) <Q: 1581> nil)
		match(x(0) ht(270757 [onScalar(nil 270720) onRecord('|' 2 270727)]))
lbl(270720)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270727)	getVarVar(x(4) x(5))
		testRecord(x(4) 'unifyVoid' 1 270750)
lbl(270735)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1581> 9)
lbl(270750)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270757)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270711)
lbl(270772)	definition(x(0) 270833 pid('GetVoids' 4 pos('./compiler/Assembler.oz' 521 3) nil 6) <Q: 1582> nil)
		match(x(0) ht(270818 [onScalar(nil 270781) onRecord('|' 2 270788)]))
lbl(270781)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270788)	getVarVar(x(4) x(5))
		testRecord(x(4) 'getVoid' 1 270811)
lbl(270796)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1582> 9)
lbl(270811)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270818)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(532)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270772)
lbl(270833)	definition(x(0) 270944 pid('MakeDeAllocate' 2 pos('./compiler/Assembler.oz' 535 3) nil 2) <Q: 1583> nil)
		match(x(0) ht(270933 [onScalar(0 270842) onScalar(1 270843) onScalar(2 270852) onScalar(3 270861) onScalar(4 270870) onScalar(5 270879) onScalar(6 270888) onScalar(7 270897) onScalar(8 270906) onScalar(9 270915) onScalar(10 270924)]))
lbl(270842)	return
lbl(270843)	putConstant('deAllocateL1' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270852)	putConstant('deAllocateL2' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270861)	putConstant('deAllocateL3' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270870)	putConstant('deAllocateL4' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270879)	putConstant('deAllocateL5' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270888)	putConstant('deAllocateL6' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270897)	putConstant('deAllocateL7' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270906)	putConstant('deAllocateL8' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270915)	putConstant('deAllocateL9' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270924)	putConstant('deAllocateL10' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270933)	putConstant('deAllocateL' x(0))
		tailSendMsg(append x(1) 1 cache)
		endDefinition(270833)
lbl(270944)	definition(x(0) 271104 pid('SkipDeadCode' 3 pos('./compiler/Assembler.oz' 551 3) nil 4) <Q: 1584> nil)
		match(x(0) ht(271089 [onScalar(nil 270953) onRecord('|' 2 270957)]))
lbl(270953)	getLiteral(nil x(2))
		return
lbl(270957)	allocateL5
		getVarVar(x(3) y(0))
		match(x(3) ht(271082 [onRecord('lbl' 1 270964) onRecord('endDefinition' 1 271018) onRecord('globalVarname' 1 271072) onRecord('localVarname' 1 271077)]))
lbl(270964)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 270995 271007)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(270995)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(271007)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(554)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(271018)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 271049 271061)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(271049)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(271061)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(558)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(271072)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(271077)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(271082)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(271089)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(566)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270944)
lbl(271104)	definition(x(0) 271131 pid('EliminateDeadCode' 2 pos('./compiler/Assembler.oz' 569 3) nil 3) <Q: 1585> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1584> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
		endDefinition(271104)
lbl(271131)	definition(x(0) 275639 pid('Peephole' 2 pos('./compiler/Assembler.oz' 573 3) nil 10) <Q: 1586> [y(118)])
		match(x(0) ht(275624 [onScalar(nil 271140) onRecord('|' 2 271141)]))
lbl(271140)	return
lbl(271141)	getVarVar(x(2) x(3))
		match(x(2) ht(275600 [onScalar('skip' 271147) onScalar('failure' 271153) onScalar('return' 271219) onScalar('clause' 271243) onRecord('lbl' 1 271298) onRecord('definition' 6 271321) onRecord('definitionCopy' 6 271373) onRecord(clear 1 271425) onRecord('move' 2 271509) onRecord('createVariable' 1 271961) onRecord('putRecord' 3 272102) onRecord('setVoid' 1 272156) onRecord('getRecord' 3 272198) onRecord('unifyValue' 1 272352) onRecord('unifyVoid' 1 272425) onRecord('allocateL' 1 272467) onRecord('deAllocateL' 1 272612) onRecord('branch' 1 272689) onRecord('funReturn' 1 272754) onRecord('callBI' 2 272778) onRecord('genCall' 2 273345) onRecord('call' 2 273516) onRecord('genFastCall' 2 273738) onRecord('marshalledFastCall' 2 273931) onRecord('sendMsg' 4 274126) onRecord('applMeth' 2 274367) onRecord('shallowGuard' 1 274617) onRecord('testBI' 3 274821) onRecord('testRecord' 4 275143) onRecord('match' 2 275203) onRecord('getVariable' 1 275467) onRecord('getVoid' 1 275540)]))
lbl(271147)	move(x(3) x(0))
		genFastCall(<Q: 1586> 5)
lbl(271153)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271201)
lbl(271162)	getVarVar(x(0) x(2))
		shallowGuard(271201)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(4))
lbl(271173)	shallowThen
		move(x(2) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271201)	putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271219)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		putConstant('return' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271243)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271280)
lbl(271252)	getVarVar(x(0) x(2))
		testLiteral(x(0) 'wait' 271280)
		move(x(2) y(1))
		putConstant('emptyClause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271280)	putConstant('clause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271298)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		sendMsg(setLabel y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271321)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definition' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271373)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definitionCopy' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271425)	allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1579> 6)
		testList(y(2) 271454)
lbl(271441)	getVariable(x(0))
		shallowGuard(271454)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(271451)	shallowThen
		branch(271500)
lbl(271454)	definition(x(1) 271494 pid('' 1 pos('./compiler/Assembler.oz' 595 2) nil 2) unit [y(0)])
		shallowGuard(271481)
		getRecord(clear 1 x(0))
		unifyVariable(x(1))
lbl(271468)	shallowThen
		putRecord('clearY' 1 x(0))
		setValue(x(1))
		tailSendMsg(append g(0) 1 cache)
lbl(271481)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(595)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(271454)
lbl(271494)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(271500)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271509)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 271605)
lbl(271523)	getVarVar(x(4) x(5))
		shallowGuard(271605)
		getRecord('move' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		getRecord(x 1 x(4))
		unifyVoid(1)
		getRecord(y 1 x(6))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord('move' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(8))
		getRecord(x 1 x(5))
		unifyVoid(1)
		getRecord(y 1 x(8))
		unifyVariable(x(9))
lbl(271574)	shallowThen
		putRecord('moveMoveXYXY' 4 x(0))
		setValue(x(4))
		setValue(x(6))
		setValue(x(5))
		setValue(x(8))
		move(x(7) y(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271605)	testList(y(0) 271693)
lbl(271608)	getVarVar(x(0) x(1))
		shallowGuard(271693)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271659)	shallowThen
		putRecord('moveMoveYXYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271693)	testList(y(0) 271781)
lbl(271696)	getVarVar(x(0) x(1))
		shallowGuard(271781)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getRecord(y 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271747)	shallowThen
		putRecord('moveMoveXYYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271781)	testList(y(0) 271869)
lbl(271784)	getVarVar(x(0) x(1))
		shallowGuard(271869)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(x 1 x(1))
		unifyVoid(1)
		getRecord(y 1 x(4))
		unifyVariable(x(5))
lbl(271835)	shallowThen
		putRecord('moveMoveYXXY' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271869)	testList(y(0) 271943)
lbl(271872)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(271943)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('callBI' 2 x(1))
		unifyLiteral('funReturn')
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getList(x(1))
		unifyValue(x(2))
		unifyLiteral(nil)
lbl(271915)	shallowThen
		putRecord('funReturn' 1 x(2))
		setValue(x(0))
		move(x(3) y(2))
		move(x(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(271943)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271961)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 272024)
lbl(271975)	getVarVar(x(4) x(5))
		shallowGuard(272024)
		getRecord('createVariable' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord('move' 2 x(5))
		unifyValVar(x(4) x(5))
		getRecord(x 1 x(5))
		unifyVariable(x(7))
lbl(272005)	shallowThen
		putRecord('createVariableMove' 2 x(2))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(6))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272024)	testList(y(0) 272084)
lbl(272027)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(272084)
		getRecord('createVariable' 1 x(0))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('move' 2 x(1))
		unifyValVar(x(0) x(3))
lbl(272059)	shallowThen
		putRecord('createVariableMove' 2 x(1))
		setValue(x(3))
		setValue(x(0))
		putList(x(4))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272084)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272102)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testLiteral(x(0) '|' 272138)
lbl(272120)	testNumber(x(4) 2 272138)
lbl(272124)	putRecord('putList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(272147)
lbl(272138)	move(y(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272147)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272156)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1580> 8)
		putRecord('setVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272198)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) '|' 272334)
lbl(272216)	testNumber(x(4) 2 272334)
lbl(272220)	testRecord(x(5) x 1 272313)
lbl(272225)	move(x(5) y(1))
		testList(y(2) 272292)
lbl(272231)	getVarVar(x(0) x(2))
		shallowGuard(272292)
		getRecord('unifyValue' 1 x(0))
		unifyVariable(x(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('unifyVariable' 1 x(2))
		unifyVariable(x(2))
		getRecord(x 1 x(2))
		unifyVariable(x(6))
lbl(272260)	shallowThen
		putRecord('getListValVar' 3 x(3))
		setValue(y(1))
		setValue(x(0))
		setValue(x(2))
		move(x(4) y(2))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272292)	putRecord('getList' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272313)	putRecord('getList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272334)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272352)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 272407)
lbl(272366)	getVarVar(x(4) x(5))
		shallowGuard(272407)
		getRecord('unifyVariable' 1 x(4))
		unifyVariable(x(6))
lbl(272377)	shallowThen
		putRecord('unifyValVar' 2 x(2))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272407)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272425)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1581> 8)
		putRecord('unifyVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272467)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(272588 [onScalar(0 272603) onScalar(1 272478) onScalar(2 272489) onScalar(3 272500) onScalar(4 272511) onScalar(5 272522) onScalar(6 272533) onScalar(7 272544) onScalar(8 272555) onScalar(9 272566) onScalar(10 272577)]))
lbl(272478)	putConstant('allocateL1' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272489)	putConstant('allocateL2' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272500)	putConstant('allocateL3' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272511)	putConstant('allocateL4' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272522)	putConstant('allocateL5' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272533)	putConstant('allocateL6' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272544)	putConstant('allocateL7' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272555)	putConstant('allocateL8' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272566)	putConstant('allocateL9' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272577)	putConstant('allocateL10' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272603)
lbl(272588)	putRecord('allocateL' 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272603)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272612)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) y(2))
		testList(y(1) 272672)
lbl(272626)	getVarVar(x(2) x(4))
		shallowGuard(272672)
		getLiteral('return' x(2))
		getList(x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('lbl' 1 x(2))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('deAllocateL' 1 x(2))
		unifyValue(y(2))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(272664)	shallowThen
		move(x(4) x(0))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272672)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272689)	allocateL4
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(0) x(0))
		sendMsg(declareLabel y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1584> 6)
		testList(y(3) 272733)
lbl(272720)	getVariable(x(0))
		shallowGuard(272733)
		getRecord('lbl' 1 x(0))
		unifyValue(y(0))
lbl(272730)	shallowThen
		branch(272745)
lbl(272733)	putRecord('branch' 1 x(0))
		setValue(y(0))
		sendMsg(append y(1) 1 cache)
lbl(272745)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272754)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(272778)	getVarVar(x(0) x(4))
		inlineDot(x(1) debugInfoControl x(5) cache)
		testBool(x(5) 272815 273334)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272815)	testLiteral(x(0) 'funReturn' 272904)
lbl(272819)	allocateL3
		getRecord('#' 2 x(4))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testList(y(1) 272885)
lbl(272845)	getVarVar(x(0) x(4))
		shallowGuard(272885)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(5))
lbl(272856)	shallowThen
		putRecord('deAllocateL' 1 x(3))
		setValue(x(5))
		putRecord('funReturn' 1 x(7))
		setValue(y(2))
		putList(x(6))
		setValue(x(7))
		setValue(x(4))
		putList(x(0))
		setValue(x(3))
		setValue(x(6))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272885)	putRecord('funReturn' 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272904)	allocateL6
		move(g(0) x(5))
		inlineDot(x(5) getInfo x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(3) ht(273280 [onScalar('+1' 272936) onScalar('-1' 272972) onScalar('+' 273008) onScalar('-' 273052) onScalar('>' 273096) onScalar('>=' 273152) onScalar('^' 273208) onScalar('getReturn' 273252)]))
lbl(272936)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlinePlus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(272972)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlineMinus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273008)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlinePlus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273052)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineMinus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273096)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273152)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('=<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273208)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineUparrow' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273252)	getRecord('#' 2 y(4))
		unifyLiteral(nil)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		putRecord('getReturn' 1 x(0))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		branch(273289)
lbl(273280)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(273289)	move(y(5) x(0))
		putConstant(doesNotReturn x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		testBool(x(3) 273314 273323)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273314)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273323)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(750)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273334)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(719)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273345)	allocateL4
		getVarVar(x(0) x(4))
		getNumber(0 x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 273427)
lbl(273365)	getVarVar(x(4) x(5))
		shallowGuard(273427)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273382)	shallowThen
		move(x(6) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(273427)	testList(y(2) 273498)
lbl(273430)	getVarVar(x(0) x(1))
		shallowGuard(273498)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273453)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273498)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273516)	allocateL6
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		testList(y(1) 273622)
lbl(273533)	getVarVar(x(4) x(5))
		shallowGuard(273622)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273550)	shallowThen
		moveMoveXYXY(x(4) y(1) x(6) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273588)
lbl(273563)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(3))
		setValue(y(2))
		setValue(y(5))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		branch(273591)
lbl(273588)	unify(y(5) y(2))
lbl(273591)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273622)	testList(y(1) 273715)
lbl(273625)	getVarVar(x(0) x(1))
		shallowGuard(273715)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273648)	shallowThen
		move(x(1) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273681)
lbl(273659)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(273684)
lbl(273681)	unify(y(5) y(2))
lbl(273684)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273715)	putRecord('call' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273738)	getVarVar(x(0) x(4))
		putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 1 273775)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(273775)	allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 273848)
lbl(273792)	getVarVar(x(5) x(6))
		shallowGuard(273848)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273809)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(273848)	testList(y(2) 273913)
lbl(273851)	getVarVar(x(0) x(1))
		shallowGuard(273913)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273874)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273913)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273931)	allocateL5
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(0)]#[x(5)] 274108)
lbl(273947)	testBI('IsProcedure' [x(0)]#[x(5)] 274108)
lbl(273951)	putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 0 274108)
lbl(273961)	moveMoveXYXY(x(0) y(3) x(4) y(4))
		testList(y(2) 274025)
lbl(273969)	getVarVar(x(5) x(6))
		shallowGuard(274025)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273986)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(274025)	testList(y(2) 274090)
lbl(274028)	getVarVar(x(0) x(1))
		shallowGuard(274090)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274051)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274090)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274108)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274126)	allocateL9
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1578> 4)
		testList(y(5) 274243)
lbl(274150)	getVarVar(x(0) x(1))
		shallowGuard(274243)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(0))
		getList(x(1))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(274167)	shallowThen
		moveMoveXYXY(x(0) y(5) x(2) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274205)
lbl(274180)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(3))
		setValue(y(1))
		setValue(y(8))
		move(x(3) x(0))
		sendMsg(append y(4) 1 cache)
		branch(274208)
lbl(274205)	unify(y(8) y(1))
lbl(274208)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1585> 5)
lbl(274243)	testList(y(5) 274340)
lbl(274246)	getVarVar(x(0) x(1))
		shallowGuard(274340)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274269)	shallowThen
		move(x(1) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274302)
lbl(274280)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(8))
		sendMsg(append y(4) 1 cache)
		branch(274305)
lbl(274302)	unify(y(8) y(1))
lbl(274305)	moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274340)	putRecord('sendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274367)	allocateL6
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 274488)
lbl(274387)	getVarVar(x(5) x(6))
		shallowGuard(274488)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(274404)	shallowThen
		moveMoveXYXY(x(5) y(1) x(7) y(2))
		createVariable(y(5))
		testRecord(y(4) y 1 274454)
lbl(274417)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274457)
lbl(274454)	unify(y(5) y(4))
lbl(274457)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(274488)	testList(y(2) 274599)
lbl(274491)	getVarVar(x(0) x(1))
		shallowGuard(274599)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274514)	shallowThen
		move(x(1) y(1))
		createVariable(y(5))
		testRecord(y(4) y 1 274565)
lbl(274525)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274568)
lbl(274565)	unify(y(5) y(4))
lbl(274568)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274599)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274617)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 274647)
lbl(274633)	getVarVar(x(4) x(5))
		testLiteral(x(4) 'shallowThen' 274647)
		move(x(5) x(0))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274647)	testList(y(2) 274725)
lbl(274650)	getVarVar(x(0) x(1))
		shallowGuard(274725)
		getRecord('getNumber' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274693)	shallowThen
		putRecord('testNumber' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274725)	testList(y(2) 274803)
lbl(274728)	getVarVar(x(0) x(1))
		shallowGuard(274803)
		getRecord('getLiteral' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274771)	shallowThen
		putRecord('testLiteral' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274803)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274821)	allocateL10
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		testList(y(5) 274924)
lbl(274840)	getVarVar(x(0) x(4))
		shallowGuard(274924)
		getRecord('branch' 1 x(0))
		unifyVariable(x(5))
lbl(274851)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) getInfo x(6) cache)
		moveMoveXYXY(x(5) y(7) x(4) y(8))
		move(y(0) x(0))
		createVariableMove(y(9) x(1))
		call(x(6) 2)
		move(y(9) x(0))
		putConstant(negated x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		match(x(3) ht(274890 [onScalar(unit 274924)]))
lbl(274890)	getList(y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('testBI' 3 x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		unifyValue(y(7))
		getList(x(1))
		unifyLiteral('skip')
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyValue(y(8))
		getRecord('branch' 1 x(4))
		unifyValue(y(2))
lbl(274924)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 274938)
		move(y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(274938)	match(y(0) ht(275125 [onScalar('<' 274941) onScalar('=<' 274987) onScalar('>=' 275033) onScalar('>' 275079)]))
lbl(274941)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275134)
lbl(274987)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275134)
lbl(275033)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275134)
lbl(275079)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275134)
lbl(275125)	move(y(4) x(0))
		sendMsg(append y(3) 1 cache)
lbl(275134)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(275143)	allocateL3
		getVarVar(x(0) x(4))
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(4) '|' 275185)
lbl(275162)	testNumber(x(5) 2 275185)
lbl(275166)	putRecord('testList' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		branch(275194)
lbl(275185)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(275194)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(275203)	allocateL8
		getVarVar(x(0) x(4))
		getRecord('ht' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		move(x(4) y(5))
		testList(y(0) 275337)
lbl(275231)	getVarVar(x(5) x(6))
		shallowGuard(275337)
		getRecord('onScalar' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getLiteral(nil x(6))
lbl(275247)	shallowThen
		testList(y(3) 275319)
lbl(275251)	getVariable(x(6))
		shallowGuard(275319)
		getRecord('lbl' 1 x(6))
		unifyValue(x(7))
lbl(275261)	shallowThen
		testBI('IsNumber' [x(5)]#[x(6)] 275287)
		putRecord('testNumber' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
		branch(275310)
lbl(275287)	testBI('IsLiteral' [x(5)]#[x(6)] 275310)
		putRecord('testLiteral' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
lbl(275310)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275319)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275337)	testList(y(0) 275449)
lbl(275340)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(275449)
		getRecord('onRecord' 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(275360)	shallowThen
		testList(y(3) 275431)
lbl(275364)	getVariable(x(1))
		shallowGuard(275431)
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
lbl(275374)	shallowThen
		moveMoveXYXY(x(0) y(6) x(2) y(7))
		testLiteral(y(6) '|' 275404)
lbl(275384)	testNumber(y(7) 2 275404)
lbl(275388)	putRecord('testList' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
		branch(275422)
lbl(275404)	putRecord('testRecord' 4 x(0))
		setValue(y(4))
		setValue(y(6))
		setValue(y(7))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
lbl(275422)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275431)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275449)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275467)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 275522)
lbl(275481)	getVarVar(x(4) x(5))
		shallowGuard(275522)
		getRecord('getVariable' 1 x(4))
		unifyVariable(x(6))
lbl(275492)	shallowThen
		putRecord('getVarVar' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(3))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275522)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275540)	allocateL5
		getVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1582> 8)
		testList(y(4) 275591)
lbl(275568)	getVariable(x(0))
		shallowGuard(275591)
		getRecord('getVariable' 1 x(0))
		unifyVariable(x(1))
lbl(275578)	shallowThen
		putRecord('getVoid' 1 x(0))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
lbl(275591)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(275600)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(275624)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(990)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(271131)
lbl(275639)	definition(x(0) 275805 pid('InternalAssemble' 3 pos('./compiler/Assembler.oz' 993 3) nil 9) <Q: 1587> [y(1)])
		allocateL5
		putConstant(profile x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(5)])
		putConstant(debuginfocontrol x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(6)])
		putConstant(verify x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(7)])
		putConstant(peephole x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(8)])
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(3) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(1))
		testBool(y(3) 275730 275765)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		branch(275776)
lbl(275730)	definition(x(1) 275757 pid('' 1 pos('./compiler/Assembler.oz' 1005 3) nil 2) unit [y(1)])
		testRecord(x(0) 'lbl' 1 275749)
lbl(275741)	getVariable(x(0))
		tailSendMsg(setLabel g(0) 1 cache)
lbl(275749)	tailSendMsg(append g(0) 1 cache)
		endDefinition(275730)
lbl(275757)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		branch(275776)
lbl(275765)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1001)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275776)	testBool(y(2) 275790 275792)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(checkLabels x(0) 0 cache)
lbl(275790)	deAllocateL5
		return
lbl(275792)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1013)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(275639)
lbl(275805)	definition(x(1) 275843 pid('Assemble' 4 pos('./compiler/Assembler.oz' 1018 3) nil 4) <Q: 1588> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1587> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(load x(2) 2 cache)
		endDefinition(275805)
lbl(275843)	getRecord('export' [assemble internalAssemble] g(9))
		unifyValue(x(1))
		unifyValue(x(0))
		deAllocateL
		return
		endDefinition(259385)
lbl(275855)	tailCall(x(3) 0)
		endDefinition(259091)
lbl(275860)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putList(x(8))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(7))
		setConstant(printName)
		setValue(x(8))
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord('import' ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		putConstant('procedure/4' x(4))
		putConstant('procedure/3' x(5))
		putRecord('export' [assemble internalAssemble] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(98) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(env ['Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'All' 'AllTail' 'And' 'Append' 'Arity' 'Array' 'Asin' 'Assign' 'Atan' 'Atan2' 'Atom' 'AtomToString' 'BaseObject' 'BitArray' 'Bool' 'ByNeed' 'Ceil' 'Cell' 'Char' 'Chunk' 'Class' 'CondSelect' 'Cos' 'Delay' 'Dictionary' 'Exception' 'Exchange' 'Exp' 'Filter' 'Flatten' 'Float' 'FloatToInt' 'FloatToString' 'Floor' 'FoldL' 'FoldLTail' 'FoldR' 'FoldRTail' 'For' 'ForAll' 'ForAllTail' 'ForThread' 'ForeignPointer' 'Functor' 'Get' 'HasFeature' 'Int' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBitArray' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsClass' 'IsDet' 'IsDictionary' 'IsEven' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNat' 'IsNumber' 'IsObject' 'IsOdd' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsThread' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Length' 'List' 'Literal' 'Lock' 'Log' 'Loop' 'MakeList' 'MakeRecord' 'MakeTuple' 'Map' 'Max' 'Member' 'Merge' 'Min' 'Name' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'Not' 'Nth' 'Number' 'Object' 'Or' 'Port' 'Pow' 'Procedure' 'ProcedureArity' 'Put' 'Raise' 'Record' 'Reverse' 'Round' 'Send' 'Sin' 'Some' 'Sort' 'Space' 'Sqrt' 'String' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread' 'Time' 'Tuple' 'Unit' 'Value' 'VirtualString' 'Wait' 'WaitOr' 'Width' 'WidthC' '`false`' '`true`' '`unit`'] x(4))
		setValue(y(88))
		setValue(y(34))
		setValue(y(75))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setValue(y(226))
		setValue(y(119))
		setValue(y(121))
		setValue(y(43))
		setValue(y(108))
		setValue(y(135))
		setValue(y(84))
		setValue(y(74))
		setValue(y(33))
		setValue(y(76))
		setValue(y(77))
		setValue(y(19))
		setValue(y(39))
		setValue(y(194))
		setValue(y(182))
		setValue(y(21))
		setValue(y(12))
		setValue(y(68))
		setValue(y(17))
		setValue(y(25))
		setValue(y(167))
		setValue(y(197))
		setValue(y(10))
		setValue(y(72))
		setValue(y(227))
		setValue(y(103))
		setValue(y(105))
		setValue(y(32))
		setValue(y(65))
		setValue(y(123))
		setValue(y(126))
		setValue(y(63))
		setValue(y(78))
		setValue(y(79))
		setValue(y(69))
		setValue(y(114))
		setValue(y(116))
		setValue(y(115))
		setValue(y(117))
		setValue(y(129))
		setValue(y(118))
		setValue(y(120))
		setValue(y(130))
		setValue(y(195))
		setValue(y(231))
		setValue(y(178))
		setValue(y(11))
		setValue(y(56))
		setValue(y(61))
		setValue(y(62))
		setValue(y(176))
		setValue(y(38))
		setValue(y(202))
		setValue(y(42))
		setValue(y(30))
		setValue(y(50))
		setValue(y(173))
		setValue(y(201))
		setValue(y(7))
		setValue(y(131))
		setValue(y(60))
		setValue(y(64))
		setValue(y(203))
		setValue(y(5))
		setValue(y(57))
		setValue(y(6))
		setValue(y(107))
		setValue(y(26))
		setValue(y(28))
		setValue(y(40))
		setValue(y(58))
		setValue(y(86))
		setValue(y(180))
		setValue(y(59))
		setValue(y(35))
		setValue(y(127))
		setValue(y(133))
		setValue(y(138))
		setValue(y(179))
		setValue(y(46))
		setValue(y(204))
		setValue(y(90))
		setValue(y(27))
		setValue(y(174))
		setValue(y(83))
		setValue(y(110))
		setValue(y(93))
		setValue(y(14))
		setValue(y(16))
		setValue(y(66))
		setValue(y(102))
		setValue(y(106))
		setValue(y(134))
		setValue(y(89))
		setValue(y(113))
		setValue(y(9))
		setValue(y(109))
		setValue(y(125))
		setValue(y(8))
		setValue(y(20))
		setValue(y(181))
		setValue(y(175))
		setValue(y(31))
		setValue(y(172))
		setValue(y(132))
		setValue(y(29))
		setValue(y(41))
		setValue(y(36))
		setValue(y(45))
		setValue(y(111))
		setValue(y(80))
		setValue(y(199))
		setValue(y(44))
		setValue(y(18))
		setValue(y(87))
		setValue(y(101))
		setValue(y(128))
		setValue(y(177))
		setValue(y(200))
		setValue(y(141))
		setValue(y(112))
		setValue(y(70))
		setValue(y(37))
		setValue(y(71))
		setValue(y(122))
		setValue(y(124))
		setValue(y(171))
		setValue(y(67))
		setValue(y(22))
		setValue(y(47))
		setValue(y(49))
		setValue(y(48))
		setValue(y(73))
		setValue(y(140))
		setValue(y(196))
		setValue(y(229))
		setValue(y(85))
		setValue(y(15))
		setValue(y(13))
		setValue(y(51))
		setValue(y(3))
		setValue(y(4))
		setValue(y(81))
		setValue(y(139))
		setConstant(false)
		setConstant(true)
		setConstant(unit)
lbl(276244)	definition(x(2) 298924 pid('' 2 pos('./compiler/FunCompiler.oz' 4 3) nil 4) <P: 1589> [y(39) y(168) y(187) y(186) y(143) y(47) y(170) y(104) y(148) y(154) y(162) y(149) y(150) y(156) y(153) y(152) x(4) y(223) y(225) y(94) y(1) y(128) y(174) y(38) y(42) y(57) y(133) y(198)])
		putList(x(2))
		setPredicateRef(<Q: 1590>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1591>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1592>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1593>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MaxWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TabSize>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Stack>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Line>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Len>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: VS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Col>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GlueItem>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GlueIndent>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrintDepth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PrintWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: StackOpsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StackOpsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AppendTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AppendSeparated>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FormatLine>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecStackOps>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1594>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1595>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1596>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1597>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1598>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1599>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1600>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1601>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1602>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ErrorCount>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HeapUsed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TimeUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ThisPhaseLevel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Raised>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Wrapper>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ToTop>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ProfileStart>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ProfileEnd>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1603>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1604>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1605>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1606>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1607>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1608>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1609>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1610>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1611>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1612>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1613>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1614>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1615>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1616>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1617>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1618>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1619>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1620>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MergeEnv>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1621>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1622>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1623>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1624>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1625>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1626>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1627>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1628>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1629>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1630>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1631>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1632>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1633>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1634>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1635>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1636>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1637>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1638>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1639>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1640>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1641>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1642>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1643>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptException>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ParseFile>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ParseVirtualString>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecutingThread>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CatchResult>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Feed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FeedSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CompileQuery>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ExecProtected>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1644>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1645>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1646>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1647>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1648>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1649>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1650>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1651>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1652>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1653>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1654>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1655>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1656>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1657>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1658>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1659>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1660>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Registered>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentQuery>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueriesHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: QueriesTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextId>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegistrationLock>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueueLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Compiler>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NotifyQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enqueue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ClearQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dequeue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RunQueue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1661>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1662>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1663>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1664>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1665>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1666>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1667>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1668>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1669>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1670>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1671>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1672>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1673>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1674>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1675>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1676>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1677>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1678>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1679>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Port>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ServerThread>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1687>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Verbose>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: History>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InsertedFiles>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SourceVS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HasErrors>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HasBeenTopped>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Serve>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1688>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1689>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1690>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1691>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1692>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1693>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1694>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1695>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1696>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1697>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1698>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1699>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1700>)
		setValue(x(2))
lbl(277294)	definitionCopy(x(3) 298919 pid('/body' 0 pos('./compiler/FunCompiler.oz' 4 3) [once] 642) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) x(1)])
		allocateL(15)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'Error' x(3) cache)
		inlineDot(x(0) 'ErrorRegistry' x(4) cache)
		inlineDot(x(0) 'Debug' x(5) cache)
		inlineDot(x(0) 'Parser' x(6) cache)
		inlineDot(x(0) 'Misc' x(7) cache)
		inlineDot(x(0) 'Core' x(8) cache)
		inlineDot(x(0) 'Unnest' x(9) cache)
		inlineDot(x(0) 'Assembler' x(10) cache)
		inlineDot(x(10) assemble x(11) cache)
lbl(277371)	definition(x(12) 277648 pid('EscapeVariableChar' 3 pos('./compiler/FormatStrings.oz' 30 6) nil 6) <Q: 1590> nil)
		shallowGuard(277635)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(277385)	shallowThen
		testLiteral(x(4) nil 277397)
		getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(277397)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 277424)
lbl(277410)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277424)	testNumber(y(2) 92 277430)
		branch(277410)
lbl(277430)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 277474)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(277474)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 277525)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277525)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 277576)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277576)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 277627)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277627)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277635)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(30)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(277371)
lbl(277648)	definition(x(13) 277701 pid('PrintNameToVirtualString' 2 pos('./compiler/FormatStrings.oz' 41 6) nil 4) <Q: 1591> [g(1) x(12)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 277694)
lbl(277666)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 277694)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(277694)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(277648)
lbl(277701)	definition(x(12) 277773 pid('IndentSub' 3 pos('./compiler/FormatStrings.oz' 50 6) nil 5) <Q: 1592> nil)
		putConstant(8 x(3))
		testLE(x(3) x(0) x(4) 277739)
		putConstant(8 x(3))
		inlineMinus(x(0) x(3) x(4))
		putRecord('#' 2 x(3))
		setValue(x(1))
		setConstant('\t')
		move(x(4) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277739)	putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 277767)
		inlineMinus1(x(0) x(3))
		putRecord('#' 2 x(4))
		setValue(x(1))
		setConstant(' ')
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277767)	unify(x(2) x(1))
		return
		endDefinition(277701)
lbl(277773)	definition(x(12) 277790 pid('Indent' 2 pos('./compiler/FormatStrings.oz' 57 6) nil 3) <Q: 1593> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1592> 7)
		endDefinition(277773)
lbl(277790)	putList(x(12))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: Col> <M: GlueIndent> <M: GlueItem> <M: Len> <M: Line> <M: MaxWidth> <M: PrintDepth> <M: PrintWidth> <M: Stack> <M: StackOpsHd> <M: StackOpsTl> <M: TabSize> <M: VS>] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord(messagePattern [indent printDepth printWidth tabsize width] x(14))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(277840)	definition(x(15) 278181 pid('Formatter,init' 1 pos('./compiler/FormatStrings.oz' 82 6) nil 3) unit [x(14) x(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(width x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 277879)
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(1))
		branch(277882)
lbl(277879)	getNumber(80 y(1))
lbl(277882)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(tabsize x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 277905)
		inlineDot(x(0) tabsize x(1) cache)
		unify(x(1) y(2))
		branch(277908)
lbl(277905)	getNumber(3 y(2))
lbl(277908)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(indent x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 277931)
		inlineDot(x(0) indent x(1) cache)
		unify(x(1) y(3))
		branch(277934)
lbl(277931)	getNumber(0 y(3))
lbl(277934)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(printDepth x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 277957)
		inlineDot(x(0) printDepth x(1) cache)
		unify(x(1) y(4))
		branch(277960)
lbl(277957)	getLiteral(unit y(4))
lbl(277960)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(printWidth x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 277983)
		inlineDot(x(0) printWidth x(1) cache)
		unify(x(1) y(5))
		branch(277986)
lbl(277983)	getLiteral(unit y(5))
lbl(277986)	move(y(1) x(0))
		inlineAssign(<M: MaxWidth> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: TabSize> x(0) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		inlineAssign(<M: Stack> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Line> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: Len> x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1593> 4)
		move(y(0) x(0))
		inlineAssign(<M: VS> x(0) cache)
		move(y(3) x(0))
		inlineAssign(<M: Col> x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		createVariable(y(0))
		testLiteral(y(4) unit 278105)
lbl(278073)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) depth x(1) cache)
		unify(x(1) y(0))
		branch(278108)
lbl(278105)	unify(y(0) y(4))
lbl(278108)	move(y(0) x(0))
		inlineAssign(<M: PrintDepth> x(0) cache)
		createVariable(y(0))
		testLiteral(y(5) unit 278154)
lbl(278122)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(0))
		branch(278157)
lbl(278154)	unify(y(0) y(5))
lbl(278157)	move(y(0) x(0))
		inlineAssign(<M: PrintWidth> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		deAllocateL6
		return
		endDefinition(277840)
lbl(278181)	putList(x(14))
		setConstant(init)
		setValue(x(15))
		createVariable(y(0))
lbl(278189)	definition(x(15) 278599 pid('Formatter,append/fast' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 6) <Q: 1594> [g(2) y(0) x(2)])
		match(x(0) ht(278251 [onScalar('#' 278198) onScalar(nil 278199) onRecord('|' 2 278200)]))
lbl(278198)	return
lbl(278199)	return
lbl(278200)	allocateL3
		inlineAt(<M: Len> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278251)	allocateL3
		move(x(0) y(0))
		testBI('IsAtom' [x(0)]#[x(1)] 278309)
lbl(278259)	inlineAt(<M: Len> x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278309)	testBI('IsNumber' [x(0)]#[x(1)] 278315)
		branch(278259)
lbl(278315)	testBI('IsTuple' [x(0)]#[x(1)] 278336)
lbl(278319)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 278336)
lbl(278326)	callBI('Width' [x(0)]#[x(2)])
		putConstant(1 x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendTuple> true 3) 0)
lbl(278336)	match(y(0) ht(278584 [onRecord(pn 1 278339) onRecord(oz 1 278354) onRecord(list 2 278391) onRecord(format 1 278398)]))
lbl(278339)	getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1591> 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278354)	getVariable(x(0))
		move(g(2) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		inlineAt(<M: PrintDepth> x(5) cache)
		inlineAt(<M: PrintWidth> x(2) cache)
		move(x(5) x(1))
		createVariableMove(y(0) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278391)	getVarVar(x(0) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendSeparated> true 2) 0)
lbl(278398)	getVariable(x(0))
		match(x(0) ht(278571 [onScalar(break 278403) onScalar(indent 278458) onScalar(exdent 278479) onScalar(push 278500) onScalar(pop 278535) onRecord(glue 1 278556)]))
lbl(278403)	genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		inlineAt(<M: Stack> x(2) cache)
		inlineDot(x(2) 1 x(0) cache)
		inlineAt(<M: VS> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1593> 4)
		putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('\n')
		setValue(y(2))
		inlineAssign(<M: VS> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: Col> x(0) cache)
		deAllocateL3
		return
lbl(278458)	putList(x(0))
		setConstant(indent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278479)	putList(x(0))
		setConstant(exdent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278500)	putRecord(push 1 x(1))
		setVariable(x(2))
		putList(x(0))
		setValue(x(1))
		setVariable(x(3))
		inlineAt(<M: StackOpsTl> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<M: Len> x(0) cache)
		unify(x(0) x(2))
		inlineAssign(<M: StackOpsTl> x(3) cache)
		deAllocateL3
		return
lbl(278535)	putList(x(0))
		setConstant(pop)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278556)	getVariable(y(0))
		genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL3
		return
lbl(278571)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(145)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(278584)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(146)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(278189)
lbl(278599)	definition(x(16) 278625 pid('Formatter,append/slow' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1594> 3)
		endDefinition(278599)
lbl(278625)	putRecord('#' [1 2 fast] x(17))
		setConstant(append)
		setValue(x(16))
		setValue(x(15))
lbl(278635)	definition(x(15) 278664 pid('Formatter,get/fast' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) <Q: 1595> [y(0)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FormatLine> false 0) 0)
		putConstant(<M: VS> x(0))
		putConstant(nil x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL1
		return
		endDefinition(278635)
lbl(278664)	definition(x(16) 278690 pid('Formatter,get/slow' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1595> 3)
		endDefinition(278664)
lbl(278690)	putRecord('#' [1 2 fast] x(18))
		setConstant(get)
		setValue(x(16))
		setValue(x(15))
lbl(278700)	definition(x(15) 278747 pid('Formatter,AppendTuple/fast' 3 pos('./compiler/FormatStrings.oz' 155 6) nil 4) <Q: 1596> [y(0)])
		testLE(x(1) x(2) x(3) 278744)
		allocateL3
		callBI('.' [x(0) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true append false 1) 0)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: AppendTuple> true 3) 0)
lbl(278744)	return
		endDefinition(278700)
lbl(278747)	definition(x(16) 278788 pid('Formatter,AppendTuple/slow' 1 pos('./compiler/FormatStrings.oz' 155 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1596> 7)
		endDefinition(278747)
lbl(278788)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: AppendTuple>)
		setValue(x(16))
		setValue(x(15))
lbl(278798)	definition(x(15) 278866 pid('Formatter,AppendSeparated/fast' 2 pos('./compiler/FormatStrings.oz' 161 6) nil 2) <Q: 1597> [y(0)])
		match(x(0) ht(278851 [onScalar(nil 278807) onRecord('|' 2 278808)]))
lbl(278807)	return
lbl(278808)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) true append false 1) 0)
		match(y(0) ht(278838 [onScalar(nil 278821) onRecord('|' 2 278823)]))
lbl(278821)	deAllocateL2
		return
lbl(278823)	move(y(1) x(0))
		genCall(gci(g(0) true append false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AppendSeparated> true 2) 0)
lbl(278838)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(168)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(278851)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(278798)
lbl(278866)	definition(x(16) 278901 pid('Formatter,AppendSeparated/slow' 1 pos('./compiler/FormatStrings.oz' 161 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1597> 5)
		endDefinition(278866)
lbl(278901)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: AppendSeparated>)
		setValue(x(16))
		setValue(x(15))
lbl(278911)	definition(x(15) 279188 pid('Formatter,FormatLine/fast' 0 pos('./compiler/FormatStrings.oz' 172 6) nil 4) <Q: 1598> [y(0)])
		allocateL2
		inlineAt(<M: GlueItem> x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAt(<M: Len> x(0) cache)
		inlinePlus(x(2) x(0) x(3))
		inlineAt(<M: MaxWidth> x(0) cache)
		testLE(x(3) x(0) x(2) 279009)
lbl(278960)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueItem> x(1) cache)
		inlineAt(<M: Line> x(2) cache)
		putRecord('#' 3 x(3))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		inlineAssign(<M: VS> x(3) cache)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		branch(279078)
lbl(279009)	inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		testLT(x(2) x(0) x(3) 278960)
lbl(279024)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1593> 4)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('\n')
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: VS> x(1) cache)
		inlineAt(<M: GlueIndent> x(0) cache)
		inlineAssign(<M: Col> x(0) cache)
lbl(279078)	putConstant(nil x(3))
		inlineAt(<M: StackOpsTl> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: StackOpsHd> x(0) cache)
		inlineAt(<M: Stack> x(1) cache)
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: ExecStackOps> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: Stack> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: Len> x(1) cache)
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		putConstant(nil x(0))
		inlineAssign(<M: Line> x(0) cache)
		putConstant(0 x(0))
		inlineAssign(<M: Len> x(0) cache)
		inlineAt(<M: Stack> x(0) cache)
		inlineDot(x(0) 1 x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL2
		return
		endDefinition(278911)
lbl(279188)	definition(x(16) 279202 pid('Formatter,FormatLine/slow' 1 pos('./compiler/FormatStrings.oz' 172 6) nil 1) unit nil)
		getLiteral(<M: FormatLine> x(0))
		genFastCall(<Q: 1598> 1)
		endDefinition(279188)
lbl(279202)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: FormatLine>)
		setValue(x(16))
		setValue(x(15))
lbl(279212)	definition(x(15) 279382 pid('Formatter,ExecStackOps/fast' 3 pos('./compiler/FormatStrings.oz' 191 6) nil 8) <Q: 1599> [y(0)])
		match(x(0) ht(279367 [onScalar(nil 279221) onRecord('|' 2 279225)]))
lbl(279221)	unify(x(2) x(1))
		return
lbl(279225)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(279342 [onScalar(pop 279239) onScalar(indent 279250) onScalar(exdent 279285) onRecord(push 1 279320)]))
lbl(279239)	inlineDot(x(1) 2 x(0) cache)
		unify(x(0) y(2))
		branch(279355)
lbl(279250)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlinePlus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279355)
lbl(279285)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlineMinus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279355)
lbl(279320)	getVariable(x(0))
		getList(y(2))
		unifyVariable(x(4))
		unifyValue(x(1))
		inlineAt(<M: Col> x(1) cache)
		inlinePlus(x(1) x(0) x(5))
		unify(x(5) x(4))
		branch(279355)
lbl(279342)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(201)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(279355)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: ExecStackOps> true 3) 0)
lbl(279367)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(204)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279212)
lbl(279382)	definition(x(16) 279423 pid('Formatter,ExecStackOps/slow' 1 pos('./compiler/FormatStrings.oz' 191 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1599> 7)
		endDefinition(279382)
lbl(279423)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ExecStackOps>)
		setValue(x(16))
		setValue(x(15))
		putRecord('#' 7 x(15))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		moveMoveXYXY(x(7) y(7) x(8) y(8))
		moveMoveXYXY(x(9) y(9) x(10) y(10))
		move(x(11) y(11))
		move(x(15) x(1))
		move(x(13) x(2))
		move(x(12) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('Formatter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(279503)	definition(x(7) 279557 pid('FormatStringToVirtualString' 2 pos('./compiler/FormatStrings.oz' 208 3) nil 4) <Q: 1600> [y(0)])
		allocateL3
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		putConstant(79 x(0))
		sendMsg(init y(2) [width] cache)
		move(y(0) x(0))
		sendMsg(append y(2) 1 cache)
		move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(get x(1) 1 cache)
		endDefinition(279503)
lbl(279557)	definition(x(7) 279583 pid('GetUsedHeap' 1 pos('./compiler/Reporter.oz' 31 3) nil 3) <Q: 1601> [y(1)])
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) x(1))
		putConstant('heap.used' x(0))
		tailCall(x(2) 2)
		endDefinition(279557)
lbl(279583)	definition(x(7) 279695 pid('NormalizeCoord' 2 pos('./compiler/Reporter.oz' 35 3) nil 4) <Q: 1602> nil)
		match(x(0) ht(279680 [onScalar(unit 279592) onRecord('pos' 3 279596) onRecord('pos' 6 279600) onRecord(fineStep 3 279616) onRecord(fineStep 6 279632) onRecord(coarseStep 3 279648) onRecord(coarseStep 6 279664)]))
lbl(279592)	getLiteral(unit x(1))
		return
lbl(279596)	unify(x(1) x(0))
		return
lbl(279600)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279616)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279632)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279648)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279664)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279680)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(43)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279583)
lbl(279695)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ErrorCount> <M: HeapUsed> <M: Raised> <M: ThisPhaseLevel> <M: TimeUsed>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Compiler> <M: Wrapper>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(0))
lbl(279725)	definition(x(7) 279767 pid('Reporter,init/fast' 2 pos('./compiler/Reporter.oz' 50 6) nil 4) <Q: 1603> [y(0)])
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(2) cache)
		unify(x(2) x(1))
		genCall(gci(g(0) true clearErrors false 0) 0)
		putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		return
		endDefinition(279725)
lbl(279767)	definition(x(8) 279802 pid('Reporter,init/slow' 1 pos('./compiler/Reporter.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1603> 5)
		endDefinition(279767)
lbl(279802)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(279812)	definition(x(7) 279837 pid('Reporter,clearErrors/fast' 0 pos('./compiler/Reporter.oz' 56 6) nil 1) <Q: 1604> nil)
		putConstant(0 x(0))
		inlineAssign(<M: ErrorCount> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
		endDefinition(279812)
lbl(279837)	definition(x(8) 279851 pid('Reporter,clearErrors/slow' 1 pos('./compiler/Reporter.oz' 56 6) nil 1) unit nil)
		getLiteral(clearErrors x(0))
		genFastCall(<Q: 1604> 1)
		endDefinition(279837)
lbl(279851)	putRecord('#' [1 2 fast] x(10))
		setConstant(clearErrors)
		setValue(x(8))
		setValue(x(7))
lbl(279861)	definition(x(7) 279950 pid('Reporter,ToTop/fast' 1 pos('./compiler/Reporter.oz' 60 6) nil 2) <Q: 1605> nil)
		inlineAt(<M: Raised> x(1) cache)
		testBool(x(1) 279877 279937)
		return
lbl(279877)	testBool(x(0) 279911 279900)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		sendMsg(notify x(1) 1 cache)
		branch(279911)
lbl(279900)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(63)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(279911)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(toTop x(0))
		sendMsg(notify x(1) 1 cache)
		putConstant(true x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
lbl(279937)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(61)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(279861)
lbl(279950)	definition(x(8) 279976 pid('Reporter,ToTop/slow' 1 pos('./compiler/Reporter.oz' 60 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1605> 3)
		endDefinition(279950)
lbl(279976)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: ToTop>)
		setValue(x(8))
		setValue(x(7))
lbl(279986)	definition(x(7) 280146 pid('Reporter,ProfileStart/fast' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) <Q: 1606> [y(1) y(2)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280073 280062)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAssign(<M: TimeUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		branch(280073)
lbl(280062)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280073)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280131 280133)
		move(g(1) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(y(1) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
lbl(280131)	deAllocateL2
		return
lbl(280133)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(279986)
lbl(280146)	definition(x(8) 280172 pid('Reporter,ProfileStart/slow' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1606> 3)
		endDefinition(280146)
lbl(280172)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: ProfileStart>)
		setValue(x(8))
		setValue(x(7))
lbl(280182)	definition(x(7) 280495 pid('Reporter,ProfileEnd/fast' 0 pos('./compiler/Reporter.oz' 80 6) nil 3) <Q: 1607> [y(1) y(0) y(2)])
		allocateL3
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280480 280482)
lbl(280213)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		testLiteral(x(0) none 280224)
lbl(280222)	deAllocateL3
		return
lbl(280224)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		createVariable(y(0))
		match(x(0) ht(280244 [onScalar(phase 280234) onScalar(subphase 280239)]))
lbl(280234)	getLiteral('%%%         ' y(0))
		branch(280257)
lbl(280239)	getLiteral('%%%             ' y(0))
		branch(280257)
lbl(280244)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(280257)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280359 280348)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAt(<M: TimeUsed> x(1) cache)
		inlineMinus(x(0) x(1) x(2))
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('time: ')
		setValue(x(2))
		setConstant(' msec\n')
		move(x(0) y(1))
		move(x(1) x(0))
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: TimeUsed> x(0) cache)
		branch(280359)
lbl(280348)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280359)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280470 280459)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(g(2) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(2) x(0))
		genFastCall(<Q: 1601> 2)
		inlineAt(<M: HeapUsed> x(0) cache)
		move(y(1) x(1))
		inlineMinus(x(1) x(0) x(2))
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('heap allocation: ')
		setValue(x(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('active size: ')
		setValue(y(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(2) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		branch(280470)
lbl(280459)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(93)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280470)	putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		deAllocateL3
		return
lbl(280480)	deAllocateL3
		return
lbl(280482)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(81)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280182)
lbl(280495)	definition(x(8) 280509 pid('Reporter,ProfileEnd/slow' 1 pos('./compiler/Reporter.oz' 80 6) nil 1) unit nil)
		getLiteral(<M: ProfileEnd> x(0))
		genFastCall(<Q: 1607> 1)
		endDefinition(280495)
lbl(280509)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: ProfileEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(280519)	definition(x(7) 280629 pid('Reporter,logDeclare/fast' 1 pos('./compiler/Reporter.oz' 106 6) nil 6) <Q: 1608> [y(3) y(0)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280614 280616)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1602> 4)
		testRecord(y(1) 'pos' 3 280607)
lbl(280567)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) formatPos x(5) cache)
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		call(x(5) 5)
		putRecord('#' 3 x(0))
		setConstant('%%% processing query in ')
		setValue(y(0))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 2) 0)
lbl(280607)	putConstant('%%% processing query' x(0))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280614)	deAllocateL2
		return
lbl(280616)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(107)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280519)
lbl(280629)	definition(x(8) 280655 pid('Reporter,logDeclare/slow' 1 pos('./compiler/Reporter.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1608> 3)
		endDefinition(280629)
lbl(280655)	putRecord('#' [1 2 fast] x(14))
		setConstant(logDeclare)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
lbl(280673)	definition(x(8) 280799 pid('Reporter,logInsert' 1 pos('./compiler/Reporter.oz' 117 6) nil 4) unit [x(7) y(0)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 280721)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(280724)
lbl(280721)	getLiteral(unit y(2))
lbl(280724)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(insert 2 x(0))
		setValue(y(1))
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showinsert x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280784 280786)
		putRecord('#' 3 x(0))
		setConstant('%%%         inserted file "')
		setValue(y(1))
		setConstant('"\n')
		deAllocateL3
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280784)	deAllocateL3
		return
lbl(280786)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280673)
lbl(280799)	putList(x(7))
		setConstant(logInsert)
		setValue(x(8))
lbl(280805)	definition(x(8) 280877 pid('Reporter,logPhase/fast' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) <Q: 1609> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(phase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280862 280864)
		putRecord('#' 3 x(0))
		setConstant('%%%     ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(280862)	deAllocateL2
		return
lbl(280864)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(126)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280805)
lbl(280877)	definition(x(15) 280903 pid('Reporter,logPhase/slow' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1609> 3)
		endDefinition(280877)
lbl(280903)	putRecord('#' [1 2 fast] x(16))
		setConstant(logPhase)
		setValue(x(15))
		setValue(x(8))
lbl(280913)	definition(x(8) 280985 pid('Reporter,logSubPhase/fast' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) <Q: 1610> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(subphase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280970 280972)
		putRecord('#' 3 x(0))
		setConstant('%%%         ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(280970)	deAllocateL2
		return
lbl(280972)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(133)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280913)
lbl(280985)	definition(x(15) 281011 pid('Reporter,logSubPhase/slow' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1610> 3)
		endDefinition(280985)
lbl(281011)	putRecord('#' [1 2 fast] x(17))
		setConstant(logSubPhase)
		setValue(x(15))
		setValue(x(8))
lbl(281021)	definition(x(8) 281038 pid('Reporter,logAccept/fast' 0 pos('./compiler/Reporter.oz' 137 6) nil 1) <Q: 1611> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- accepted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281021)
lbl(281038)	definition(x(15) 281052 pid('Reporter,logAccept/slow' 1 pos('./compiler/Reporter.oz' 137 6) nil 1) unit nil)
		getLiteral(logAccept x(0))
		genFastCall(<Q: 1611> 1)
		endDefinition(281038)
lbl(281052)	putRecord('#' [1 2 fast] x(18))
		setConstant(logAccept)
		setValue(x(15))
		setValue(x(8))
lbl(281062)	definition(x(8) 281147 pid('Reporter,logReject/fast' 0 pos('./compiler/Reporter.oz' 141 6) nil 3) <Q: 1612> [y(0)])
		allocateL1
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		createVariable(y(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 281128)
		getRecord('#' 5 y(0))
		unifyLiteral(' (')
		unifyVariable(x(0))
		unifyLiteral(' error')
		unifyVariable(x(1))
		unifyLiteral(')')
		inlineAt(<M: ErrorCount> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<M: ErrorCount> x(0) cache)
		testNumber(x(0) 1 281123)
		getLiteral(nil x(1))
		branch(281131)
lbl(281123)	getLiteral(s x(1))
		branch(281131)
lbl(281128)	getLiteral(nil y(0))
lbl(281131)	putRecord('#' 3 x(0))
		setConstant('%** ------------------ rejected')
		setValue(y(0))
		setConstant('\n')
		deAllocateL1
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281062)
lbl(281147)	definition(x(15) 281161 pid('Reporter,logReject/slow' 1 pos('./compiler/Reporter.oz' 141 6) nil 1) unit nil)
		getLiteral(logReject x(0))
		genFastCall(<Q: 1612> 1)
		endDefinition(281147)
lbl(281161)	putRecord('#' [1 2 fast] x(19))
		setConstant(logReject)
		setValue(x(15))
		setValue(x(8))
lbl(281171)	definition(x(8) 281205 pid('Reporter,logAbort/fast' 0 pos('./compiler/Reporter.oz' 150 6) nil 2) <Q: 1613> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ aborted\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281171)
lbl(281205)	definition(x(15) 281219 pid('Reporter,logAbort/slow' 1 pos('./compiler/Reporter.oz' 150 6) nil 1) unit nil)
		getLiteral(logAbort x(0))
		genFastCall(<Q: 1613> 1)
		endDefinition(281205)
lbl(281219)	putRecord('#' [1 2 fast] x(20))
		setConstant(logAbort)
		setValue(x(15))
		setValue(x(8))
lbl(281229)	definition(x(8) 281252 pid('Reporter,logCrash/fast' 0 pos('./compiler/Reporter.oz' 155 6) nil 1) <Q: 1614> [y(0) g(3)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ compiler crashed\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> true 1) 0)
		endDefinition(281229)
lbl(281252)	definition(x(15) 281266 pid('Reporter,logCrash/slow' 1 pos('./compiler/Reporter.oz' 155 6) nil 1) unit nil)
		getLiteral(logCrash x(0))
		genFastCall(<Q: 1614> 1)
		endDefinition(281252)
lbl(281266)	putRecord('#' [1 2 fast] x(21))
		setConstant(logCrash)
		setValue(x(15))
		setValue(x(8))
lbl(281276)	definition(x(8) 281293 pid('Reporter,logHalt/fast' 0 pos('./compiler/Reporter.oz' 160 6) nil 1) <Q: 1615> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- halting\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281276)
lbl(281293)	definition(x(15) 281307 pid('Reporter,logHalt/slow' 1 pos('./compiler/Reporter.oz' 160 6) nil 1) unit nil)
		getLiteral(logHalt x(0))
		genFastCall(<Q: 1615> 1)
		endDefinition(281293)
lbl(281307)	putRecord('#' [1 2 fast] x(22))
		setConstant(logHalt)
		setValue(x(15))
		setValue(x(8))
lbl(281317)	definition(x(8) 281334 pid('Reporter,logInterrupt/fast' 0 pos('./compiler/Reporter.oz' 164 6) nil 1) <Q: 1616> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- interrupted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281317)
lbl(281334)	definition(x(15) 281348 pid('Reporter,logInterrupt/slow' 1 pos('./compiler/Reporter.oz' 164 6) nil 1) unit nil)
		getLiteral(logInterrupt x(0))
		genFastCall(<Q: 1616> 1)
		endDefinition(281334)
lbl(281348)	putRecord('#' [1 2 fast] x(23))
		setConstant(logInterrupt)
		setValue(x(15))
		setValue(x(8))
lbl(281358)	definition(x(8) 281393 pid('Reporter,displaySource/fast' 3 pos('./compiler/Reporter.oz' 168 6) nil 5) <Q: 1617> nil)
		getSelf(x(3))
		inlineDot(x(3) <M: Wrapper> x(3) cache)
		putRecord(displaySource 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		tailSendMsg(notify x(3) 1 cache)
		endDefinition(281358)
lbl(281393)	definition(x(15) 281434 pid('Reporter,displaySource/slow' 1 pos('./compiler/Reporter.oz' 168 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1617> 7)
		endDefinition(281393)
lbl(281434)	putRecord('#' [1 2 fast] x(24))
		setConstant(displaySource)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(281452)	definition(x(15) 281553 pid('Reporter,userInfo' 1 pos('./compiler/Reporter.oz' 171 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 281500)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(281503)
lbl(281500)	getLiteral(unit y(2))
lbl(281503)	testLiteral(y(2) unit 281528)
lbl(281507)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 1 x(0))
		setValue(y(1))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
lbl(281528)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281452)
lbl(281553)	putList(x(8))
		setConstant(userInfo)
		setValue(x(15))
		putRecord(messagePattern [abort coord items kind msg] x(15))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(281573)	definition(x(25) 281874 pid('Reporter,error' 1 pos('./compiler/Reporter.oz' 179 6) nil 3) unit [x(15) y(0) g(3)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281612)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(281615)
lbl(281612)	getLiteral(nil y(1))
lbl(281615)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281638)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(281641)
lbl(281638)	getLiteral(unit y(2))
lbl(281641)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281664)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(281667)
lbl(281664)	getLiteral(unit y(3))
lbl(281667)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281690)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(281693)
lbl(281690)	getLiteral(unit y(4))
lbl(281693)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(abort x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 281716)
		inlineDot(x(0) abort x(1) cache)
		unify(x(1) y(5))
		branch(281719)
lbl(281716)	getLiteral(true y(5))
lbl(281719)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(6))
		testLiteral(y(0) unit 281756)
lbl(281751)	unify(y(6) y(1))
		branch(281770)
lbl(281756)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(281770)	putRecord(error [items kind msg] x(2))
		setValue(y(6))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		sendMsg(notify y(2) 1 cache)
		inlineAt(<M: ErrorCount> x(0) cache)
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ErrorCount> x(1) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getMaxNumberOfErrors x(1) 1 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		testLE(x(1) x(0) x(2) 281870)
lbl(281835)	inlineAt(<M: ErrorCount> x(1) cache)
		testLT(x(0) x(1) x(2) 281868)
lbl(281845)	testBool(y(5) 281855 281857)
lbl(281849)	putConstant(tooManyErrors x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(281855)	deAllocateL7
		return
lbl(281857)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(281868)	deAllocateL7
		return
lbl(281870)	deAllocateL7
		return
		endDefinition(281573)
lbl(281874)	putList(x(15))
		setConstant(error)
		setValue(x(25))
		putRecord(messagePattern [coord items kind msg] x(25))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(281892)	definition(x(26) 282093 pid('Reporter,warn' 1 pos('./compiler/Reporter.oz' 199 6) nil 3) unit [x(25) y(0) g(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281931)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(281934)
lbl(281931)	getLiteral(nil y(1))
lbl(281934)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281957)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(281960)
lbl(281957)	getLiteral(unit y(2))
lbl(281960)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281983)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(281986)
lbl(281983)	getLiteral(unit y(3))
lbl(281986)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 282009)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(282012)
lbl(282009)	getLiteral(unit y(4))
lbl(282012)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(5))
		testLiteral(y(0) unit 282049)
lbl(282044)	unify(y(5) y(1))
		branch(282063)
lbl(282049)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		genFastCall(<P: 21> 6)
lbl(282063)	putRecord(warn [items kind msg] x(2))
		setValue(y(5))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL6
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281892)
lbl(282093)	putList(x(25))
		setConstant(warn)
		setValue(x(26))
lbl(282099)	definition(x(26) 282136 pid('Reporter,addErrors/fast' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) <Q: 1618> [y(0) g(3)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> false 1) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: ErrorCount> x(2) cache)
		deAllocateL1
		return
		endDefinition(282099)
lbl(282136)	definition(x(27) 282162 pid('Reporter,addErrors/slow' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1618> 3)
		endDefinition(282136)
lbl(282162)	putRecord('#' [1 2 fast] x(28))
		setConstant(addErrors)
		setValue(x(27))
		setValue(x(26))
lbl(282172)	definition(x(26) 282195 pid('Reporter,hasSeenError/fast' 1 pos('./compiler/Reporter.oz' 215 6) nil 4) <Q: 1619> nil)
		inlineAt(<M: ErrorCount> x(1) cache)
		putConstant(0 x(2))
		callBI('<' [x(2) x(1)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(282172)
lbl(282195)	definition(x(27) 282221 pid('Reporter,hasSeenError/slow' 1 pos('./compiler/Reporter.oz' 215 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1619> 3)
		endDefinition(282195)
lbl(282221)	putRecord('#' [1 2 fast] x(29))
		setConstant(hasSeenError)
		setValue(x(27))
		setValue(x(26))
		putRecord('#' 21 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(8))
		setValue(x(15))
		setValue(x(25))
		setValue(x(28))
		setValue(x(29))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('Reporter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(282289)	definition(x(7) 282416 pid('EnumerateVersionNumbers' 3 pos('./compiler/CompilerClass.oz' 27 3) nil 5) <Q: 1620> [g(5) g(6)])
		allocateL5
lbl(282296)	definition(x(4) 282314 pid('' 2 pos('./compiler/CompilerClass.oz' 28 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(282296)
lbl(282314)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(4) x(2))
		callBI('StringToAtom' [x(2)]#[x(3)])
		unify(x(3) x(0))
		match(y(3) ht(282401 [onScalar(nil 282360) onRecord('|' 2 282365)]))
lbl(282360)	getLiteral(nil x(1))
		deAllocateL5
		return
lbl(282365)	getVoid(1)
		getVariable(y(0))
		putList(x(3))
		setConstant(95)
		setConstant(nil)
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1620> 7)
lbl(282401)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(33)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(282289)
lbl(282416)	putRecord(switches [allowdeprecated codegen compilerpasses core debuginfocontrol debuginfonamevars debuginfovarnames debugtype debugvalue echoqueries expression feedtoemulator gump gumpparseroutputsimplified gumpparserverbose gumpscannerbackup gumpscannerbestfit gumpscannercaseless gumpscannernowarn gumpscannerperfreport gumpscannerstatistics outputcode ozma profile realcore runwithdebugger showcompilememory showcompiletime showdeclares showinsert staticanalysis threadedqueries unnest warnforward warnopt warnredecl warnunused warnunusedformals watchdog] x(7))
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord('attr' [defines localSwitches maxNumberOfErrors productionTemplates savedSwitches switches] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(17)
		setConstant(unit)
		setConstant(nil)
		setValue(x(7))
		putRecord('feat' [values variables] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(12))
lbl(282524)	definition(x(7) 282659 pid('CompilerStateClass,init/fast' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 4) <Q: 1621> [g(1) y(1) y(12)])
		allocateL3
		move(g(1) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		callBI('AtomToString' [x(0)]#[x(3)])
lbl(282558)	definition(x(1) 282578 pid('' 2 pos('./compiler/CompilerClass.oz' 113 8) nil 2) unit nil)
		testNumber(x(0) 46 282572)
lbl(282568)	getNumber(95 x(1))
		return
lbl(282572)	unify(x(1) x(0))
		return
		endDefinition(282558)
lbl(282578)	move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(2))
		setConstant(95)
		setConstant(nil)
		putList(x(0))
		setConstant(122)
		setValue(x(2))
		putList(x(1))
		setConstant(79)
		setValue(x(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1620> 6)
		move(y(2) x(0))
		inlineAssign(defines x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) variables x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(2) true putEnv true 1) 0)
		endDefinition(282524)
lbl(282659)	definition(x(8) 282685 pid('CompilerStateClass,init/slow' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1621> 3)
		endDefinition(282659)
lbl(282685)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(282695)	definition(x(7) 282770 pid('CompilerStateClass,macroDefine/fast' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 4) <Q: 1622> [g(6) g(7)])
		allocateL2
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		inlineAt(defines x(3) cache)
		moveMoveXYYX(x(1) y(0) y(0) x(0))
		move(x(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 282739 282757)
		deAllocateL2
		return
lbl(282739)	inlineAt(defines x(0) cache)
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(defines x(1) cache)
		deAllocateL2
		return
lbl(282757)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(123)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(282695)
lbl(282770)	definition(x(8) 282796 pid('CompilerStateClass,macroDefine/slow' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1622> 3)
		endDefinition(282770)
lbl(282796)	putRecord('#' [1 2 fast] x(10))
		setConstant(macroDefine)
		setValue(x(8))
		setValue(x(7))
lbl(282806)	definition(x(7) 282866 pid('CompilerStateClass,macroUndef/fast' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 4) <Q: 1623> [g(6) g(7)])
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(3)])
		inlineAt(defines x(0) cache)
lbl(282830)	definition(x(1) 282848 pid('' 2 pos('./compiler/CompilerClass.oz' 129 30) nil 4) unit [x(3)])
		move(g(0) x(2))
		callBI('\\=' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(282830)
lbl(282848)	createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(defines x(0) cache)
		deAllocateL1
		return
		endDefinition(282806)
lbl(282866)	definition(x(8) 282892 pid('CompilerStateClass,macroUndef/slow' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1623> 3)
		endDefinition(282866)
lbl(282892)	putRecord('#' [1 2 fast] x(11))
		setConstant(macroUndef)
		setValue(x(8))
		setValue(x(7))
lbl(282902)	definition(x(7) 282919 pid('CompilerStateClass,getDefines/fast' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 2) <Q: 1624> nil)
		inlineAt(defines x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(282902)
lbl(282919)	definition(x(8) 282945 pid('CompilerStateClass,getDefines/slow' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1624> 3)
		endDefinition(282919)
lbl(282945)	putRecord('#' [1 2 fast] x(12))
		setConstant(getDefines)
		setValue(x(8))
		setValue(x(7))
lbl(282955)	definition(x(7) 282972 pid('CompilerStateClass,on/fast' 2 pos('./compiler/CompilerClass.oz' 135 6) nil 3) <Q: 1625> [y(12) g(3)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(282955)
lbl(282972)	definition(x(8) 283007 pid('CompilerStateClass,on/slow' 1 pos('./compiler/CompilerClass.oz' 135 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1625> 5)
		endDefinition(282972)
lbl(283007)	putRecord('#' [1 2 fast] x(13))
		setConstant(on)
		setValue(x(8))
		setValue(x(7))
lbl(283017)	definition(x(7) 283034 pid('CompilerStateClass,off/fast' 2 pos('./compiler/CompilerClass.oz' 138 6) nil 3) <Q: 1626> [y(12) g(4)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(283017)
lbl(283034)	definition(x(8) 283069 pid('CompilerStateClass,off/slow' 1 pos('./compiler/CompilerClass.oz' 138 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1626> 5)
		endDefinition(283034)
lbl(283069)	putRecord('#' [1 2 fast] x(14))
		setConstant(off)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 3 x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(283089)	definition(x(8) 283447 pid('CompilerStateClass,setSwitch' 1 pos('./compiler/CompilerClass.oz' 141 6) nil 9) unit [x(7)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariable(y(3))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 283145)
		inlineDot(x(0) 3 x(3) cache)
		unify(x(3) y(3))
		branch(283148)
lbl(283145)	getLiteral(unit y(3))
lbl(283148)	match(y(1) ht(283292 [onScalar(verbose 283151) onScalar(debuginfo 283211)]))
lbl(283151)	inlineAt(switches x(0) cache)
		putRecord(switches [compilerpasses showinsert] x(1))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(compilerpasses)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(showinsert)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(283211)	inlineAt(switches x(0) cache)
		putRecord(switches [debuginfocontrol debuginfovarnames runwithdebugger] x(1))
		setValue(y(2))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(runwithdebugger)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(283292)	inlineAt(switches x(0) cache)
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 283340)
		inlineAt(switches x(0) cache)
		move(y(2) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		inlineAssign(switches x(3) cache)
		inlineAt(wrapper x(3) cache)
		putRecord(switch 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(3) 1 cache)
lbl(283340)	testLiteral(y(3) unit 283414)
		inlineAt(reporter x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		putRecord(setSwitch 2 x(8))
		setValue(y(1))
		setValue(y(2))
		putRecord(oz 1 x(7))
		setValue(x(8))
		putRecord(hint [l m] x(6))
		setConstant('Query')
		setValue(x(7))
		putList(x(2))
		setValue(x(6))
		setConstant(nil)
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(3))
		sendMsg(error x(5) [abort coord items kind msg] cache)
		inlineAt(reporter x(0) cache)
		deAllocateL4
		tailSendMsg(logReject x(0) 0 cache)
lbl(283414)	inlineAt(reporter x(4) cache)
		putRecord('#' 3 x(3))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler directive error' x(2))
		deAllocateL4
		tailSendMsg(error x(4) [abort coord kind msg] cache)
		endDefinition(283089)
lbl(283447)	putList(x(7))
		setConstant(setSwitch)
		setValue(x(8))
lbl(283453)	definition(x(8) 283473 pid('CompilerStateClass,getSwitch/fast' 2 pos('./compiler/CompilerClass.oz' 172 6) nil 4) <Q: 1627> nil)
		inlineAt(switches x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(283453)
lbl(283473)	definition(x(15) 283508 pid('CompilerStateClass,getSwitch/slow' 1 pos('./compiler/CompilerClass.oz' 172 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1627> 5)
		endDefinition(283473)
lbl(283508)	putRecord('#' [1 2 fast] x(16))
		setConstant(getSwitch)
		setValue(x(15))
		setValue(x(8))
lbl(283518)	definition(x(8) 283557 pid('CompilerStateClass,localSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 175 6) nil 3) <Q: 1628> nil)
		inlineAt(localSwitches x(0) cache)
		testLiteral(x(0) unit 283554)
lbl(283533)	inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(localSwitches x(2) cache)
lbl(283554)	return
		endDefinition(283518)
lbl(283557)	definition(x(15) 283571 pid('CompilerStateClass,localSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 175 6) nil 1) unit nil)
		getLiteral(localSwitches x(0))
		genFastCall(<Q: 1628> 1)
		endDefinition(283557)
lbl(283571)	putRecord('#' [1 2 fast] x(17))
		setConstant(localSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(283581)	definition(x(8) 283633 pid('CompilerStateClass,unlocalSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 181 6) nil 2) <Q: 1629> nil)
		inlineAt(localSwitches x(0) cache)
		match(x(0) ht(283618 [onScalar(unit 283595) onRecord('|' 2 283596)]))
lbl(283595)	return
lbl(283596)	getVarVar(x(0) x(1))
		inlineAssign(switches x(0) cache)
		inlineAssign(savedSwitches x(1) cache)
		putConstant(unit x(0))
		inlineAssign(localSwitches x(0) cache)
		return
lbl(283618)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(187)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283581)
lbl(283633)	definition(x(15) 283647 pid('CompilerStateClass,unlocalSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 181 6) nil 1) unit nil)
		getLiteral(unlocalSwitches x(0))
		genFastCall(<Q: 1629> 1)
		endDefinition(283633)
lbl(283647)	putRecord('#' [1 2 fast] x(18))
		setConstant(unlocalSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(283657)	definition(x(8) 283687 pid('CompilerStateClass,pushSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 189 6) nil 3) <Q: 1630> nil)
		inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedSwitches x(2) cache)
		return
		endDefinition(283657)
lbl(283687)	definition(x(15) 283701 pid('CompilerStateClass,pushSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 189 6) nil 1) unit nil)
		getLiteral(pushSwitches x(0))
		genFastCall(<Q: 1630> 1)
		endDefinition(283687)
lbl(283701)	putRecord('#' [1 2 fast] x(19))
		setConstant(pushSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(283711)	definition(x(8) 283782 pid('CompilerStateClass,popSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 192 6) nil 3) <Q: 1631> nil)
		inlineAt(savedSwitches x(0) cache)
		match(x(0) ht(283767 [onScalar(nil 283725) onRecord('|' 2 283726)]))
lbl(283725)	return
lbl(283726)	allocateL1
		getVarVar(x(1) y(0))
		inlineAssign(switches x(1) cache)
		inlineAt(wrapper x(1) cache)
		inlineAt(switches x(2) cache)
		putRecord(switches 1 x(0))
		setValue(x(2))
		sendMsg(notify x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(savedSwitches x(0) cache)
		deAllocateL1
		return
lbl(283767)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(198)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283711)
lbl(283782)	definition(x(15) 283796 pid('CompilerStateClass,popSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 192 6) nil 1) unit nil)
		getLiteral(popSwitches x(0))
		genFastCall(<Q: 1631> 1)
		endDefinition(283782)
lbl(283796)	putRecord('#' [1 2 fast] x(20))
		setConstant(popSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(283806)	definition(x(8) 283839 pid('CompilerStateClass,setMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) <Q: 1632> nil)
		inlineAssign(maxNumberOfErrors x(0) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(maxNumberOfErrors 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(283806)
lbl(283839)	definition(x(15) 283865 pid('CompilerStateClass,setMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1632> 3)
		endDefinition(283839)
lbl(283865)	putRecord('#' [1 2 fast] x(21))
		setConstant(setMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
lbl(283875)	definition(x(8) 283892 pid('CompilerStateClass,getMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 2) <Q: 1633> nil)
		inlineAt(maxNumberOfErrors x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(283875)
lbl(283892)	definition(x(15) 283918 pid('CompilerStateClass,getMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1633> 3)
		endDefinition(283892)
lbl(283918)	putRecord('#' [1 2 fast] x(22))
		setConstant(getMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 3 x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(283938)	definition(x(15) 284064 pid('CompilerStateClass,enter' 1 pos('./compiler/CompilerClass.oz' 209 6) nil 4) unit [x(8) y(12) g(8)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 283984)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(283984)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 284007)
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(3))
		branch(284010)
lbl(284007)	getLiteral(true y(3))
lbl(284010)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		genCall(gci(g(1) true <M: Enter> false 3) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(283938)
lbl(284064)	putList(x(8))
		setConstant(enter)
		setValue(x(15))
lbl(284070)	definition(x(15) 284146 pid('CompilerStateClass,enterMultiple/fast' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 4) <Q: 1634> [y(12) g(3) g(8)])
		allocateL2
		getSelf(x(2))
lbl(284079)	definition(x(1) 284100 pid('' 1 pos('./compiler/CompilerClass.oz' 214 13) nil 3) unit [x(2) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(2) x(2))
		createVariable(x(1))
		genCall(gci(g(1) true <M: Enter> true 3) 0)
		endDefinition(284079)
lbl(284100)	genFastCall(<P: 34> 4)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(284070)
lbl(284146)	definition(x(23) 284172 pid('CompilerStateClass,enterMultiple/slow' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1634> 3)
		endDefinition(284146)
lbl(284172)	putRecord('#' [1 2 fast] x(24))
		setConstant(enterMultiple)
		setValue(x(23))
		setValue(x(15))
lbl(284182)	definition(x(15) 284299 pid('CompilerStateClass,Enter/fast' 3 pos('./compiler/CompilerClass.oz' 217 6) nil 5) <Q: 1635> [g(9) y(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) variables x(0) cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		move(y(1) x(3))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		callBI('IsDet' [x(3)]#[x(0)])
		testBI('Not' [x(0)]#[x(4)] 284275)
lbl(284243)	testBool(y(2) 284275 284264)
lbl(284247)	move(g(1) x(0))
		inlineDot(x(0) nameVariable x(4) cache)
		move(y(1) x(0))
		call(x(4) 2)
		branch(284275)
lbl(284264)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(221)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(284275)	putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(284182)
lbl(284299)	definition(x(23) 284340 pid('CompilerStateClass,Enter/slow' 1 pos('./compiler/CompilerClass.oz' 217 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1635> 7)
		endDefinition(284299)
lbl(284340)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: Enter>)
		setValue(x(23))
		setValue(x(15))
lbl(284350)	definition(x(15) 284425 pid('CompilerStateClass,putEnv/fast' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 4) <Q: 1636> [g(10) y(12) g(8)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		getSelf(x(1))
		inlineDot(x(1) values x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		genCall(gci(g(1) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(284350)
lbl(284425)	definition(x(23) 284451 pid('CompilerStateClass,putEnv/slow' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1636> 3)
		endDefinition(284425)
lbl(284451)	putRecord('#' [1 2 fast] x(26))
		setConstant(putEnv)
		setValue(x(23))
		setValue(x(15))
lbl(284461)	definition(x(15) 284514 pid('CompilerStateClass,mergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 4) <Q: 1637> [y(12) g(8)])
		allocateL2
		genCall(gci(g(0) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(284461)
lbl(284514)	definition(x(23) 284540 pid('CompilerStateClass,mergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1637> 3)
		endDefinition(284514)
lbl(284540)	putRecord('#' [1 2 fast] x(27))
		setConstant(mergeEnv)
		setValue(x(23))
		setValue(x(15))
lbl(284550)	definition(x(15) 284618 pid('CompilerStateClass,MergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) <Q: 1638> [g(11) y(8) y(12) g(3)])
		getSelf(x(2))
lbl(284558)	definition(x(1) 284613 pid('' 2 pos('./compiler/CompilerClass.oz' 239 3) nil 6) unit [x(2) g(1) g(2) g(3)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		move(g(1) x(3))
		inlineDot(x(3) variable x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(1) 3 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(g(3) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: Enter> true 3) 0)
		endDefinition(284558)
lbl(284613)	genFastCall(<P: 175> 5)
		endDefinition(284550)
lbl(284618)	definition(x(23) 284644 pid('CompilerStateClass,MergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1638> 3)
		endDefinition(284618)
lbl(284644)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: MergeEnv>)
		setValue(x(23))
		setValue(x(15))
lbl(284654)	definition(x(15) 284720 pid('CompilerStateClass,annotateEnv/fast' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) <Q: 1639> [g(12)])
		getSelf(x(2))
lbl(284662)	definition(x(1) 284715 pid('' 1 pos('./compiler/CompilerClass.oz' 246 3) nil 3) unit [x(2) g(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(valToSubst x(1) 1 cache)
		endDefinition(284662)
lbl(284715)	genFastCall(<P: 34> 5)
		endDefinition(284654)
lbl(284720)	definition(x(23) 284746 pid('CompilerStateClass,annotateEnv/slow' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1639> 3)
		endDefinition(284720)
lbl(284746)	putRecord('#' [1 2 fast] x(29))
		setConstant(annotateEnv)
		setValue(x(23))
		setValue(x(15))
lbl(284756)	definition(x(15) 284781 pid('CompilerStateClass,getEnv/fast' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 4) <Q: 1640> [g(8)])
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) x(2))
		putConstant(env x(0))
		genFastCall(<P: 108> 7)
		endDefinition(284756)
lbl(284781)	definition(x(23) 284807 pid('CompilerStateClass,getEnv/slow' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1640> 3)
		endDefinition(284781)
lbl(284807)	putRecord('#' [1 2 fast] x(30))
		setConstant(getEnv)
		setValue(x(23))
		setValue(x(15))
lbl(284817)	definition(x(15) 284843 pid('CompilerStateClass,lookupVariableInEnv/fast' 2 pos('./compiler/CompilerClass.oz' 255 6) nil 5) <Q: 1641> [g(13)])
		getSelf(x(2))
		inlineDot(x(2) variables x(2) cache)
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(284817)
lbl(284843)	definition(x(23) 284878 pid('CompilerStateClass,lookupVariableInEnv/slow' 1 pos('./compiler/CompilerClass.oz' 255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1641> 5)
		endDefinition(284843)
lbl(284878)	putRecord('#' [1 2 fast] x(31))
		setConstant(lookupVariableInEnv)
		setValue(x(23))
		setValue(x(15))
lbl(284888)	definition(x(15) 284998 pid('CompilerStateClass,lookupInEnv' 1 pos('./compiler/CompilerClass.oz' 258 6) nil 9) unit [g(14) g(12)])
		putConstant(2 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		testBI('Dictionary.member' [x(3) x(1)]#[x(4)] 284942)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(284942)	inlineAt(reporter x(4) cache)
		putRecord(oz 1 x(5))
		setValue(x(1))
		putRecord('#' 2 x(3))
		setConstant('undeclared variable ')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(0))
		putRecord(hint [l m] x(7))
		setConstant('Query')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		tailSendMsg(error x(4) [abort items kind msg] cache)
		endDefinition(284888)
lbl(284998)	putList(x(23))
		setConstant(lookupInEnv)
		setValue(x(15))
lbl(285004)	definition(x(15) 285076 pid('CompilerStateClass,removeFromEnv/fast' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 4) <Q: 1642> [g(15) g(8)])
		allocateL2
		getSelf(x(3))
		inlineDot(x(3) variables x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(285004)
lbl(285076)	definition(x(32) 285102 pid('CompilerStateClass,removeFromEnv/slow' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1642> 3)
		endDefinition(285076)
lbl(285102)	putRecord('#' [1 2 fast] x(33))
		setConstant(removeFromEnv)
		setValue(x(32))
		setValue(x(15))
lbl(285112)	definition(x(15) 285135 pid('CompilerStateClass,getVars/fast' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) <Q: 1643> [g(16)])
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(285112)
lbl(285135)	definition(x(32) 285161 pid('CompilerStateClass,getVars/slow' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1643> 3)
		endDefinition(285135)
lbl(285161)	putRecord('#' [1 2 fast] x(34))
		setConstant(getVars)
		setValue(x(32))
		setValue(x(15))
		putRecord('#' 26 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(8))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(23))
		setValue(x(33))
		setValue(x(34))
		move(y(12) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('CompilerStateClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(12))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ExecutingThread> <M: InterruptLock> <M: ParseFile> <M: ParseVirtualString> reporter wrapper] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(13))
		createVariable(y(14))
lbl(285274)	definition(x(7) 285381 pid('CompilerInternal,init/fast' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 4) <Q: 1644> [g(17) y(12) y(0) y(13) y(14)])
		allocateL2
		inlineAssign(wrapper x(0) cache)
		putConstant(builtin x(1))
		putConstant(3 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		putRecord(env ['`Builtin`' '`Compiler`'] x(1))
		setValue(x(3))
		setValue(x(0))
		move(g(0) x(2))
		callBI('Adjoin' [x(2) x(1)]#[x(3)])
		move(x(0) y(0))
		move(x(3) x(0))
		genCall(gci(g(1) true init false 1) 0)
		move(g(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		inlineAssign(reporter x(0) cache)
		move(g(3) x(0))
		inlineAssign(<M: ParseFile> x(0) cache)
		move(g(4) x(1))
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		putConstant(unit x(2))
		inlineAssign(<M: ExecutingThread> x(2) cache)
		callBI('NewLock' nil#[x(2)])
		inlineAssign(<M: InterruptLock> x(2) cache)
		deAllocateL2
		return
		endDefinition(285274)
lbl(285381)	definition(x(8) 285407 pid('CompilerInternal,init/slow' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1644> 3)
		endDefinition(285381)
lbl(285407)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(285417)	definition(x(7) 285434 pid('CompilerInternal,getReporter/fast' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 2) <Q: 1645> nil)
		inlineAt(reporter x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(285417)
lbl(285434)	definition(x(8) 285460 pid('CompilerInternal,getReporter/slow' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1645> 3)
		endDefinition(285434)
lbl(285460)	putRecord('#' [1 2 fast] x(10))
		setConstant(getReporter)
		setValue(x(8))
		setValue(x(7))
lbl(285470)	definition(x(7) 285584 pid('CompilerInternal,notifyOne/fast' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 4) <Q: 1646> [y(1) g(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putRecord('#' 3 x(1))
		setConstant('Mozart Compiler ')
		setValue(y(1))
		setConstant(' playing Oz 3\n\n')
		putRecord(info 1 x(0))
		setValue(x(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(switches x(3) cache)
		putRecord(switches 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(maxNumberOfErrors x(3) cache)
		putRecord(maxNumberOfErrors 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		move(x(3) x(1))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(285470)
lbl(285584)	definition(x(8) 285610 pid('CompilerInternal,notifyOne/slow' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1646> 3)
		endDefinition(285584)
lbl(285610)	putRecord('#' [1 2 fast] x(11))
		setConstant(notifyOne)
		setValue(x(8))
		setValue(x(7))
lbl(285620)	definition(x(7) 285651 pid('CompilerInternal,ping/fast' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 2) <Q: 1647> nil)
		allocateL1
		inlineAt(wrapper x(1) cache)
		move(x(0) y(0))
		putConstant(pong x(0))
		sendMsg(notify x(1) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(285620)
lbl(285651)	definition(x(8) 285677 pid('CompilerInternal,ping/slow' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1647> 3)
		endDefinition(285651)
lbl(285677)	putRecord('#' [1 2 fast] x(12))
		setConstant(ping)
		setValue(x(8))
		setValue(x(7))
lbl(285687)	definition(x(7) 285706 pid('CompilerInternal,setFrontEnd/fast' 2 pos('./compiler/CompilerClass.oz' 345 6) nil 2) <Q: 1648> nil)
		inlineAssign(<M: ParseFile> x(0) cache)
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		return
		endDefinition(285687)
lbl(285706)	definition(x(8) 285741 pid('CompilerInternal,setFrontEnd/slow' 1 pos('./compiler/CompilerClass.oz' 345 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1648> 5)
		endDefinition(285706)
lbl(285741)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFrontEnd)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(285753)	definition(x(7) 285820 pid('CompilerInternal,feedFile/fast' 2 pos('./compiler/CompilerClass.oz' 349 6) nil 4) <Q: 1649> [y(0)])
		getSelf(x(2))
lbl(285761)	definition(x(3) 285812 pid('' 0 pos('./compiler/CompilerClass.oz' 351 14) nil 3) unit [x(2) x(0) x(1) g(0)])
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		putRecord('#' 3 x(2))
		setConstant('%%% feeding file ')
		setValue(g(1))
		setConstant('\n')
		move(x(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		inlineAt(<M: ParseFile> x(0) cache)
		move(g(1) x(1))
		move(g(2) x(2))
		genCall(gci(g(3) true <M: Feed> true 3) 0)
		endDefinition(285761)
lbl(285812)	move(x(3) x(0))
		genCall(gci(g(0) true <M: CatchResult> true 1) 0)
		endDefinition(285753)
lbl(285820)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(285828)	definition(x(14) 285890 pid('CompilerInternal,feedFile/slow' 1 pos('./compiler/CompilerClass.oz' 349 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 285876)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(285879)
lbl(285876)	getLiteral('return' y(2))
lbl(285879)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1649> 5)
		endDefinition(285828)
lbl(285890)	putRecord(feedFile 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(15))
		setConstant(feedFile)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(285910)	definition(x(7) 286011 pid('CompilerInternal,feedVirtualString/fast' 2 pos('./compiler/CompilerClass.oz' 356 6) nil 4) <Q: 1650> [y(12) y(0)])
		getSelf(x(2))
lbl(285918)	definition(x(3) 286003 pid('' 0 pos('./compiler/CompilerClass.oz' 358 14) nil 3) unit [x(2) g(0) x(0) x(1) g(1)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		putConstant(echoqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 285959 285975)
		inlineAt(reporter x(1) cache)
		move(g(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(285986)
lbl(285959)	inlineAt(reporter x(1) cache)
		putConstant('%%% feeding virtual string\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(285986)
lbl(285975)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(285986)	inlineAt(<M: ParseVirtualString> x(0) cache)
		move(g(2) x(1))
		move(g(3) x(2))
		deAllocateL1
		genCall(gci(g(4) true <M: Feed> true 3) 0)
		endDefinition(285918)
lbl(286003)	move(x(3) x(0))
		genCall(gci(g(1) true <M: CatchResult> true 1) 0)
		endDefinition(285910)
lbl(286011)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(286019)	definition(x(14) 286081 pid('CompilerInternal,feedVirtualString/slow' 1 pos('./compiler/CompilerClass.oz' 356 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 286067)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(286070)
lbl(286067)	getLiteral('return' y(2))
lbl(286070)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1650> 5)
		endDefinition(286019)
lbl(286081)	putRecord(feedVirtualString 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(16))
		setConstant(feedVirtualString)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(286101)	definition(x(7) 286201 pid('CompilerInternal,CatchResult/fast' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 2) <Q: 1651> nil)
		allocateL1
		move(x(0) y(0))
		exHandler(286182)
		match(x(0) ht(286179 [onScalar(tooManyErrors 286116) onScalar(rejected 286131) onScalar(aborted 286143) onScalar(crashed 286155) onScalar(<M: InterruptException> 286167)]))
lbl(286116)	inlineAt(reporter x(1) cache)
		putConstant('%** Too many errors, aborting compilation\n' x(0))
		deAllocateL1
		tailSendMsg(userInfo x(1) 1 cache)
lbl(286131)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logReject x(0) 0 cache)
lbl(286143)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logAbort x(0) 0 cache)
lbl(286155)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logCrash x(0) 0 cache)
lbl(286167)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logInterrupt x(0) 0 cache)
lbl(286179)	callBI('Exception.raise' [x(0)]#nil)
lbl(286182)	call(y(0) 0)
		inlineAt(reporter x(0) cache)
		sendMsg(logAccept x(0) 0 cache)
		popEx
		deAllocateL1
		return
		endDefinition(286101)
lbl(286201)	definition(x(8) 286227 pid('CompilerInternal,CatchResult/slow' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1651> 3)
		endDefinition(286201)
lbl(286227)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CatchResult>)
		setValue(x(8))
		setValue(x(7))
lbl(286237)	definition(x(7) 286700 pid('CompilerInternal,Feed/fast' 3 pos('./compiler/CompilerClass.oz' 383 6) nil 6) <Q: 1652> [g(18) y(12) y(13) y(14) y(0) g(4) y(8) y(9)])
		allocateL5
		callBI('Thread.this' nil#[x(3)])
		inlineAssign(<M: ExecutingThread> x(3) cache)
		inlineAt(reporter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		sendMsg(clearErrors x(3) 0 cache)
		createVariable(y(3))
		exHandler(286283)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(286678)
lbl(286283)	inlineAt(reporter x(1) cache)
		putConstant('parsing ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		getSelf(x(0))
		createVariable(x(1))
lbl(286301)	definition(x(2) 286367 pid('DoParse' 0 pos('./compiler/CompilerClass.oz' 388 5) nil 5) unit [x(0) g(1) y(0) y(1) x(1)])
		allocateL3
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		getSelf(x(2))
lbl(286320)	definition(x(3) 286336 pid('' 2 pos('./compiler/CompilerClass.oz' 390 6) nil 3) unit [x(2) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true getSwitch true 2) 0)
		endDefinition(286320)
lbl(286336)	moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(1) true getDefines false 1) 0)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		move(g(4) x(4))
		deAllocateL3
		tailCall(g(2) 5)
		endDefinition(286301)
lbl(286367)	moveMoveXYXY(x(1) y(1) x(2) y(4))
		move(y(0) x(0))
		move(g(2) x(3))
		testBI('==' [x(0) x(3)]#[x(4)] 286387)
lbl(286382)	call(y(4) 0)
		branch(286403)
lbl(286387)	move(g(3) x(4))
		testBI('\\=' [x(0) x(4)]#[x(5)] 286382)
lbl(286394)	move(y(4) x(0))
		move(g(5) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
lbl(286403)	inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 286438 286427)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(286427)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(401)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286438)	putConstant(unnest x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(4) true getSwitch false 2) 0)
		testBool(y(0) 286674 286663)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		createVariable(y(4))
		testBool(y(0) 286532 286642)
		move(g(6) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`runTimeDict`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		callBI('NewDictionary' nil#[x(1)])
		move(y(0) x(0))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(7) x(0))
		inlineDot(x(0) joinQueries x(3) cache)
		inlineAt(reporter x(1) cache)
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		call(x(3) 3)
		branch(286653)
lbl(286532)	putConstant(expression x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 286626 286631)
		testLiteral(y(1) nil 286554)
lbl(286549)	getLiteral(nil y(4))
		branch(286653)
lbl(286554)	move(g(6) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`result`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		move(y(2) x(0))
		putConstant(result x(3))
		createVariable(x(1))
		callBI('CondSelect' [x(0) x(3) x(1)]#[x(4)])
		move(y(0) x(0))
		move(x(4) x(1))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(7) x(0))
		inlineDot(x(0) makeExpressionQuery x(2) cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		call(x(2) 2)
		branch(286653)
lbl(286626)	unify(y(4) y(1))
		branch(286653)
lbl(286631)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(410)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286642)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(405)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286653)	moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(4) true <M: FeedSub> false 2) 0)
		branch(286674)
lbl(286663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286674)	getLiteral(unit y(3))
		popEx
lbl(286678)	putConstant(unit x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testRecord(y(3) ex 1 286696)
lbl(286691)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(286696)	deAllocateL5
		return
		endDefinition(286237)
lbl(286700)	definition(x(8) 286741 pid('CompilerInternal,Feed/slow' 1 pos('./compiler/CompilerClass.oz' 383 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1652> 7)
		endDefinition(286700)
lbl(286741)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: Feed>)
		setValue(x(8))
		setValue(x(7))
lbl(286751)	definition(x(7) 286933 pid('CompilerInternal,FeedSub/fast' 2 pos('./compiler/CompilerClass.oz' 429 6) nil 5) <Q: 1653> [g(18) g(19) y(0) y(12) g(3)])
		allocateL1
		callBI('Thread.this' nil#[x(2)])
		getSelf(x(3))
lbl(286763)	definition(x(4) 286885 pid('' 0 pos('./compiler/CompilerClass.oz' 433 16) nil 3) unit [x(3) g(1) x(2) g(2) x(0) g(3)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		createVariable(y(0))
		exHandler(286787)
		getRecord(ex 1 y(0))
		unifyValue(x(0))
		branch(286868)
lbl(286787)	exHandler(286839)
		match(x(0) ht(286836 [onScalar(tooManyErrors 286792) onScalar(rejected 286803) onScalar(aborted 286814) onScalar(crashed 286825)]))
lbl(286792)	move(g(2) x(0))
		putConstant(tooManyErrors x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(286864)
lbl(286803)	move(g(2) x(0))
		putConstant(rejected x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(286864)
lbl(286814)	move(g(2) x(0))
		putConstant(aborted x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(286864)
lbl(286825)	move(g(2) x(0))
		putConstant(crashed x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(286864)
lbl(286836)	callBI('Exception.raise' [x(0)]#nil)
lbl(286839)	getSelf(x(2))
lbl(286841)	definition(x(1) 286857 pid('' 1 pos('./compiler/CompilerClass.oz' 436 9) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: CompileQuery> true 1) 0)
		endDefinition(286841)
lbl(286857)	move(g(4) x(0))
		genFastCall(<P: 34> 4)
		popEx
lbl(286864)	getLiteral(unit y(0))
		popEx
lbl(286868)	genCall(gci(g(5) true unlocalSwitches false 0) 0)
		testRecord(y(0) ex 1 286881)
lbl(286876)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(286881)	deAllocateL1
		return
		endDefinition(286763)
lbl(286885)	move(x(4) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 286918 286920)
		putConstant(rejected x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(286918)	deAllocateL1
		return
lbl(286920)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(451)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286751)
lbl(286933)	definition(x(8) 286968 pid('CompilerInternal,FeedSub/slow' 1 pos('./compiler/CompilerClass.oz' 429 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1653> 5)
		endDefinition(286933)
lbl(286968)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: FeedSub>)
		setValue(x(8))
		setValue(x(7))
lbl(286978)	definition(x(7) 288939 pid('CompilerInternal,CompileQuery/fast' 1 pos('./compiler/CompilerClass.oz' 455 6) nil 11) <Q: 1654> [y(12) y(9) y(10) g(20) y(0) y(5) y(1) g(18) g(4)])
		match(x(0) ht(287023 [onScalar(dirLocalSwitches 286987) onScalar(dirPushSwitches 286990) onScalar(dirPopSwitches 286993) onRecord(dirSwitch 1 286996) onRecord(fSynTopLevelProductionTemplates 1 287006)]))
lbl(286987)	genCall(gci(g(0) true localSwitches true 0) 0)
lbl(286990)	genCall(gci(g(0) true pushSwitches true 0) 0)
lbl(286993)	genCall(gci(g(0) true popSwitches true 0) 0)
lbl(286996)	getVariable(x(2))
		move(x(2) x(0))
		getSelf(x(1))
		genFastCall(<P: 34> 5)
lbl(287006)	inlineAt(reporter x(2) cache)
		putConstant('bootstrap compiler restriction' x(0))
		putConstant('Gump definitions not supported' x(1))
		tailSendMsg(error x(2) [kind msg] cache)
lbl(287023)	allocateL8
		move(x(0) y(0))
		testRecord(y(0) fDeclare 3 287050)
lbl(287032)	getVoid(2)
		getVariable(x(1))
		inlineAt(reporter x(2) cache)
		move(x(1) x(0))
		sendMsg(logDeclare x(2) 1 cache)
lbl(287050)	inlineAt(reporter x(1) cache)
		putConstant('transforming into graph representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) unnestQuery x(7) cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(3))
		getSelf(x(0))
		getSelf(x(2))
		createVariableMove(y(1) x(4))
		createVariableMove(y(2) x(5))
		createVariableMove(y(3) x(6))
		call(x(7) 7)
		getSelf(x(2))
		createVariable(x(3))
lbl(287101)	definition(x(0) 287169 pid('AnnotateGlobalVars' 0 pos('./compiler/CompilerClass.oz' 480 8) nil 3) unit [x(2) x(3) y(2)])
		move(g(0) x(0))
		setSelf(x(0))
		move(g(1) x(1))
		testBI('IsFree' [x(1)]#[x(2)] 287166)
		inlineAt(reporter x(2) cache)
		putConstant('determining nonlocal variables ...' x(0))
		sendMsg(logSubPhase x(2) 1 cache)
lbl(287133)	definition(x(1) 287157 pid('' 1 pos('./compiler/CompilerClass.oz' 485 8) nil 4) unit nil)
		move(x(0) x(3))
		putConstant(nil x(0))
		createVariable(x(1))
		createVariable(x(2))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(287133)
lbl(287157)	move(g(2) x(0))
		genFastCall(<P: 34> 4)
		getLiteral(unit g(1))
lbl(287166)	return
		endDefinition(287101)
lbl(287169)	move(x(0) y(0))
		putConstant(warnredecl x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 287365 287354)
		getSelf(x(2))
lbl(287187)	definition(x(1) 287346 pid('' 1 pos('./compiler/CompilerClass.oz' 492 2) nil 6) unit [x(2) g(0)])
		allocateL5
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true lookupVariableInEnv false 2) 0)
		testLiteral(y(2) undeclared 287226)
lbl(287224)	deAllocateL5
		return
lbl(287226)	createVariableMove(y(3) x(0))
		sendMsg(getCoord y(2) 1 cache)
		inlineAt(reporter x(1) cache)
		move(x(1) y(2))
		createVariable(y(4))
		testLiteral(y(3) unit 287278)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(line 1 x(0))
		unifyLiteral('previously declared via putEnv')
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
		move(x(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		branch(287314)
lbl(287278)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(2))
		unifyLiteral(unit)
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(line 1 x(4))
		unifyLiteral('previous declaration was')
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
		sendMsg(getCoord y(0) 1 cache)
lbl(287314)	putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('redeclaring top-level variable ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant(warning x(1))
		move(y(2) x(3))
		deAllocateL5
		tailSendMsg(warn x(3) [items kind msg] cache)
		endDefinition(287187)
lbl(287346)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(287365)
lbl(287354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287365)	inlineAt(reporter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(4) 287400 287389)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(287389)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(511)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287400)	putConstant(staticanalysis x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 287495 287484)
		inlineAt(reporter x(1) cache)
		putConstant('static analysis ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(y(3) x(0))
		genCall(gci(g(0) true annotateEnv false 1) 0)
		call(y(0) 0)
		inlineAt(reporter x(1) cache)
		putConstant('value propagation ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		testList(y(2) 287471)
lbl(287453)	getVarVar(x(3) x(2))
		inlineAt(reporter x(0) cache)
		getSelf(x(1))
		sendMsg(staticAnalysis x(3) 3 cache)
		branch(287495)
lbl(287471)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(521)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287484)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(514)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287495)	inlineAt(reporter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(3) 287530 287519)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(287519)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(523)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287530)	putConstant(warnunused x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 287623 287612)
		inlineAt(reporter x(1) cache)
		putConstant('classifying variable occurrences ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		putConstant(warnunusedformals x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		getSelf(x(2))
lbl(287571)	definition(x(1) 287604 pid('' 1 pos('./compiler/CompilerClass.oz' 530 19) nil 4) unit [x(2) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(markFirst x(3) 2 cache)
		endDefinition(287571)
lbl(287604)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		branch(287623)
lbl(287612)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287623)	putConstant(showdeclares x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 287810 287799)
lbl(287636)	move(y(1) x(0))
		putConstant(nil x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(3))
		testBool(y(3) 287810 287799)
lbl(287652)	inlineAt(reporter x(1) cache)
		putConstant('Declared variables:\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
lbl(287666)	definition(x(1) 287714 pid('' 3 pos('./compiler/CompilerClass.oz' 537 3) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(287666)
lbl(287714)	move(y(1) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 44> 6)
		getSelf(x(2))
lbl(287725)	definition(x(1) 287791 pid('' 1 pos('./compiler/CompilerClass.oz' 540 2) nil 3) unit [x(2)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(outputDebugType y(0) 1 cache)
		putRecord('#' 5 x(0))
		setConstant('  ')
		setValue(y(2))
		setConstant(': ')
		setValue(y(3))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(userInfo x(1) 1 cache)
		endDefinition(287725)
lbl(287791)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(287810)
lbl(287799)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(532)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287810)	putConstant(core x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 288113 288102)
		inlineAt(reporter x(1) cache)
		putConstant('writing core representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		putRecord(debug [debugType debugValue realcore] y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(x(1))
		putConstant(realcore x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(5) x(1))
		putConstant(debugvalue x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(4) x(1))
		putConstant(debugtype x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(3) x(0))
		putConstant(realcore x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(format 1 x(6))
		setConstant(break)
		putRecord(list 2 x(4))
		setVariable(x(5))
		setValue(x(6))
		putRecord('#' 2 x(1))
		setVariable(x(2))
		setValue(x(4))
		moveMoveXYXY(x(1) y(4) x(5) y(5))
		testLiteral(y(1) nil 287919)
lbl(287914)	getLiteral(nil x(2))
		branch(288036)
lbl(287919)	definition(x(4) 287939 pid('' 2 pos('./compiler/CompilerClass.oz' 557 9) nil 3) unit [x(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(287919)
lbl(287939)	moveMoveXYYX(x(2) y(6) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 6 y(6))
		unifyLiteral('declare')
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyLiteral('in')
		unifyVariable(x(3))
		getRecord(format 1 x(0))
		unifyVariable(x(4))
		getRecord(glue 1 x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(list 2 x(1))
		unifyValVar(y(7) x(6))
		getRecord(format 1 x(6))
		unifyVariable(x(7))
		getRecord(glue 1 x(7))
		unifyVariable(x(8))
		getList(x(8))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(2))
		unifyVariable(x(9))
		getRecord(glue 1 x(9))
		unifyVariable(x(10))
		getList(x(10))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(3))
		unifyLiteral(break)
lbl(288036)	definition(x(1) 288056 pid('' 2 pos('./compiler/CompilerClass.oz' 562 19) nil 3) unit [y(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(288036)
lbl(288056)	moveMoveYXYX(y(2) x(0) y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(3) y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1600> 4)
		putRecord('#' 2 x(2))
		setValue(y(5))
		setConstant('\n')
		putConstant('Oz Compiler: Core Output' x(0))
		putConstant('.ozi' x(1))
		sendMsg(displaySource y(3) 3 cache)
		branch(288113)
lbl(288102)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288113)	putConstant(codegen x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 288924 288926)
		inlineAt(reporter x(1) cache)
		putConstant('generating code ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true getVars false 1) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(1) x(4))
		getSelf(x(1))
		createVariableMove(y(5) x(5))
		createVariableMove(y(6) x(6))
		sendMsg(startCodeGen y(0) 7 cache)
		inlineAt(reporter x(1) cache)
		putConstant('assembling ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) internalAssemble x(1) cache)
		move(x(1) y(0))
		putConstant(profile x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putRecord(switches [debuginfocontrol peephole profile verify] x(1))
		setValue(y(3))
		setConstant(true)
		setValue(y(2))
		setConstant(false)
		move(y(6) x(0))
		createVariableMove(y(2) x(2))
		call(y(0) 3)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 288420 288913)
		testLiteral(y(5) nil 288318)
lbl(288274)	inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		deAllocateL8
		tailSendMsg(displaySource x(3) 3 cache)
lbl(288318)	putList(x(0))
		setConstant('`runTimeDict`')
		setConstant(nil)
		move(y(5) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 288274)
lbl(288331)	getList(y(5))
		unifyVariable(x(4))
		unifyVariable(x(0))
		inlineAt(reporter x(1) cache)
lbl(288342)	definition(x(5) 288367 pid('' 3 pos('./compiler/CompilerClass.oz' 597 13) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral(' ')
		unifyValue(x(1))
		getRecord(pn 1 x(2))
		unifyValue(x(0))
		return
		endDefinition(288342)
lbl(288367)	putRecord(pn 1 x(2))
		setValue(x(4))
		move(x(1) y(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
		putRecord('#' 2 x(2))
		setConstant('No free variables allowed ')
		setConstant('when compiling for Ozma')
		putRecord(hint [l m] x(4))
		setConstant('Found')
		setValue(y(1))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('Ozma error' x(1))
		move(y(0) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [items kind msg] cache)
lbl(288420)	putConstant(outputcode x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 288568 288557)
		inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		putRecord('#' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(2) y(3))
		testLiteral(y(5) nil 288469)
lbl(288464)	getLiteral('%% No Global Registers\n' x(1))
		branch(288526)
lbl(288469)	definition(x(4) 288511 pid('' 4 pos('./compiler/CompilerClass.oz' 607 9) nil 5) unit nil)
		getRecord('#' 6 x(3))
		unifyValue(x(1))
		unifyLiteral('%%    g(')
		unifyVariable(x(3))
		unifyLiteral(') = ')
		unifyVariable(x(4))
		unifyLiteral('\n')
		inlineMinus1(x(0) x(1))
		unify(x(1) x(3))
		putRecord(pn 1 x(0))
		setValue(x(2))
		move(x(4) x(1))
		genFastCall(<Q: 1600> 5)
		endDefinition(288469)
lbl(288511)	move(y(5) x(0))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant('%% Assignment of Global Registers:\n' x(2))
		genFastCall(<P: 82> 8)
lbl(288526)	move(y(3) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		sendMsg(displaySource x(3) 3 cache)
		branch(288568)
lbl(288557)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(602)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288568)	putConstant(feedtoemulator x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 288900 288902)
		inlineAt(reporter x(1) cache)
		putConstant('loading ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		getSelf(x(1))
		createVariable(x(2))
		createVariable(y(0))
lbl(288601)	definition(x(0) 288662 pid('Proc' 0 pos('./compiler/CompilerClass.oz' 621 7) nil 4) unit [x(1) y(1) g(0) y(5) x(2) y(2) y(0)])
		move(g(0) x(0))
		setSelf(x(0))
		match(g(1) ht(288615 [onScalar(nil 288621)]))
lbl(288615)	move(g(1) x(0))
		genCall(gci(g(2) true enterMultiple false 1) 0)
lbl(288621)	getSelf(x(3))
lbl(288623)	definition(x(1) 288639 pid('' 2 pos('./compiler/CompilerClass.oz' 627 7) nil 3) unit [x(3) g(2)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true lookupInEnv true 2) 0)
		endDefinition(288623)
lbl(288639)	move(g(3) x(0))
		move(g(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(4) x(0))
		move(g(6) x(1))
		tailSendMsg(load g(5) 2 cache)
		endDefinition(288601)
lbl(288662)	genCall(gci(g(4) true <M: ExecuteUninterruptible> false 1) 0)
		putConstant(runwithdebugger x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		createVariable(y(2))
		testBool(y(1) 288708 288713)
lbl(288680)	definition(x(0) 288703 pid('P' 0 pos('./compiler/CompilerClass.oz' 635 3) nil 2) unit [g(5) y(0)])
		move(g(0) x(0))
		inlineDot(x(0) breakpoint x(1) cache)
		call(x(1) 0)
		tailCall(g(1) 0)
		endDefinition(288680)
lbl(288703)	unify(x(0) y(2))
		branch(288724)
lbl(288708)	unify(y(2) y(0))
		branch(288724)
lbl(288713)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(634)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288724)	putConstant(threadedqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 288860 288889)
		move(g(6) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		inlineAt(reporter x(1) cache)
		putConstant('executing in an independent thread ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(0) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		testBool(y(1) 288849 288838)
lbl(288788)	createVariableMove(y(1) x(0))
		sendMsg(getCompiler y(0) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(1) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(0))
		testBool(y(0) 288849 288838)
lbl(288815)	move(g(5) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(288849)
lbl(288838)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(644)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288849)	thread(288858)
		move(y(2) x(0))
		deAllocateL8
		tailCall(x(0) 0)
lbl(288858)	deAllocateL8
		return
lbl(288860)	inlineAt(reporter x(1) cache)
		putRecord('#' 2 x(0))
		setConstant('executing and waiting for ')
		setConstant('completion ...')
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(2) x(0))
		move(g(8) x(1))
		deAllocateL8
		genCall(gci(g(4) true <M: ExecProtected> true 2) 0)
lbl(288889)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(639)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288900)	deAllocateL8
		return
lbl(288902)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(616)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288913)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288924)	deAllocateL8
		return
lbl(288926)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(567)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286978)
lbl(288939)	definition(x(8) 288965 pid('CompilerInternal,CompileQuery/slow' 1 pos('./compiler/CompilerClass.oz' 455 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1654> 3)
		endDefinition(288939)
lbl(288965)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: CompileQuery>)
		setValue(x(8))
		setValue(x(7))
lbl(288975)	definition(x(7) 289009 pid('CompilerInternal,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 669 6) nil 2) <Q: 1655> [g(19)])
		inlineAt(<M: ExecutingThread> x(0) cache)
		testLiteral(x(0) unit 288991)
lbl(288990)	return
lbl(288991)	inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(289006 x(1))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		return
lbl(289006)	return
		endDefinition(288975)
lbl(289009)	definition(x(8) 289023 pid('CompilerInternal,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 669 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1655> 1)
		endDefinition(289009)
lbl(289023)	putRecord('#' [1 2 fast] x(20))
		setConstant(interrupt)
		setValue(x(8))
		setValue(x(7))
lbl(289033)	definition(x(7) 289054 pid('CompilerInternal,ExecuteUninterruptible/fast' 1 pos('./compiler/CompilerClass.oz' 677 6) nil 2) <Q: 1656> nil)
		inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(289051 x(1))
		call(x(0) 0)
		return
lbl(289051)	return
		endDefinition(289033)
lbl(289054)	definition(x(8) 289080 pid('CompilerInternal,ExecuteUninterruptible/slow' 1 pos('./compiler/CompilerClass.oz' 677 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1656> 3)
		endDefinition(289054)
lbl(289080)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(8))
		setValue(x(7))
lbl(289090)	definition(x(7) 289466 pid('CompilerInternal,ExecProtected/fast' 2 pos('./compiler/CompilerClass.oz' 680 6) nil 5) <Q: 1657> [g(18) y(12) y(2) y(3) y(5) y(1) g(19)])
		allocateL7
		callBI('Thread.this' nil#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		createVariable(y(4))
		thread(289349)
		callBI('Thread.this' nil#[x(0)])
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testBool(y(1) 289185 289174)
lbl(289126)	putConstant(watchdog x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(5) 289185 289174)
lbl(289139)	move(g(2) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(3) x(1))
		callBI('Wait' [x(1)]#nil)
		move(g(4) x(2))
		inlineDot(x(2) setRaiseOnBlock x(3) cache)
		callBI('Thread.this' nil#[x(4)])
		move(x(4) x(0))
		putConstant(true x(1))
		call(x(3) 2)
		branch(289185)
lbl(289174)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(289185)	move(g(5) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(5) x(2))
		call(x(3) 3)
		move(y(5) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBool(y(6) 289283 289272)
lbl(289222)	createVariableMove(y(6) x(0))
		sendMsg(getCompiler y(5) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(6) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(5))
		testBool(y(5) 289283 289272)
lbl(289249)	move(g(4) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(289283)
lbl(289272)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(701)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(289283)	createVariable(y(5))
		exHandler(289295)
		getRecord(ex 1 y(5))
		unifyValue(x(0))
		branch(289326)
lbl(289295)	exHandler(289315)
		testLiteral(x(0) <M: InterruptException> 289312)
lbl(289301)	move(y(2) x(0))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(289322)
lbl(289312)	callBI('Exception.raise' [x(0)]#nil)
lbl(289315)	call(y(0) 0)
		getLiteral(true y(4))
		popEx
lbl(289322)	getLiteral(unit y(5))
		popEx
lbl(289326)	move(y(2) x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		getLiteral(true y(3))
		testRecord(y(5) ex 1 289347)
lbl(289342)	getVariable(x(1))
		callBI('Exception.raise' [x(1)]#nil)
lbl(289347)	deAllocateL7
		return
lbl(289349)	move(g(4) x(0))
		inlineDot(x(0) getRaiseOnBlock x(3) cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		call(x(3) 2)
		move(g(4) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		move(y(2) x(0))
		putConstant(false x(1))
		call(x(2) 2)
		move(y(3) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(4) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 289451 289453)
		createVariable(y(0))
		testBool(y(1) 289429 289434)
		getLiteral(crashed y(0))
		branch(289445)
lbl(289429)	getLiteral(aborted y(0))
		branch(289445)
lbl(289434)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(720)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(289445)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(289451)	deAllocateL7
		return
lbl(289453)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(719)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(289090)
lbl(289466)	definition(x(8) 289501 pid('CompilerInternal,ExecProtected/slow' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1657> 5)
		endDefinition(289466)
lbl(289501)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ExecProtected>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 14 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('CompilerInternal' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(289555)	definition(x(7) 289619 pid('TypeCheck' 4 pos('./compiler/CompilerClass.oz' 725 3) nil 6) <Q: 1658> [g(21)])
		allocateL4
		callBI('.' [x(1) x(2)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(5))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		testBool(y(3) 289591 289606)
		deAllocateL4
		return
lbl(289591)	putRecord(compiler 4 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(289606)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(726)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(289555)
lbl(289619)	definition(x(7) 289659 pid('IsEnv' 2 pos('./compiler/CompilerClass.oz' 731 3) nil 5) <Q: 1659> [y(7)])
		testBI('IsRecord' [x(0)]#[x(2)] 289653)
		callBI('Arity' [x(0)]#[x(3)])
		move(g(0) x(0))
		inlineDot(x(0) isPrintName x(4) cache)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 35> 7)
lbl(289653)	getLiteral(false x(1))
		return
		endDefinition(289619)
lbl(289659)	definition(x(8) 289688 pid('IsProcedure5' 2 pos('./compiler/CompilerClass.oz' 735 3) nil 4) <Q: 1660> [g(22)])
		testBI('IsProcedure' [x(0)]#[x(2)] 289682)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(289682)	getLiteral(false x(1))
		return
		endDefinition(289659)
lbl(289688)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: CurrentQuery> <M: NextId> <M: QueriesHd> <M: QueriesTl> <M: Registered>] x(2))
		setConstant(unit)
		setConstant(1)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		putRecord('feat' [<M: Compiler> <M: QueueLock> <M: RegistrationLock>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(1))
lbl(289720)	definition(x(9) 289807 pid('CompilerEngine,init/fast' 0 pos('./compiler/CompilerClass.oz' 743 6) nil 3) <Q: 1661> [y(0) y(1)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		inlineAssign(<M: QueriesTl> x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		thread(289803)
		deAllocateL2
		genCall(gci(g(1) true <M: RunQueue> true 0) 0)
lbl(289803)	deAllocateL2
		return
		endDefinition(289720)
lbl(289807)	definition(x(10) 289821 pid('CompilerEngine,init/slow' 1 pos('./compiler/CompilerClass.oz' 743 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 1661> 1)
		endDefinition(289807)
lbl(289821)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
lbl(289831)	definition(x(9) 289993 pid('CompilerEngine,register/fast' 1 pos('./compiler/CompilerClass.oz' 758 6) nil 4) <Q: 1662> [g(21) y(1)])
		allocateL1
		move(x(0) y(0))
		testBI('IsPort' [x(0)]#[x(1)] 289847)
		branch(289858)
lbl(289847)	putRecord(compiler 2 x(1))
		setConstant(register)
		setValue(y(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(289858)	getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		lockThread(289989 x(0))
		inlineAt(<M: Registered> x(1) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(1))
		inlineAssign(<M: Registered> x(2) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(0) x(0))
		sendMsg(notifyOne x(1) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(289988 x(0))
		inlineAt(<M: CurrentQuery> x(0) cache)
		testLiteral(x(0) unit 289933)
lbl(289922)	move(y(0) x(0))
		putConstant(idle x(2))
		callBI('Send' [x(0) x(2)]#nil)
		branch(289976)
lbl(289933)	testRecord(x(0) '#' 2 289963)
lbl(289938)	getVarVar(x(0) x(1))
		move(y(0) x(2))
		putConstant(busy x(3))
		callBI('Send' [x(2) x(3)]#nil)
		putRecord(runQuery 2 x(3))
		setValue(x(0))
		setValue(x(1))
		callBI('Send' [x(2) x(3)]#nil)
		branch(289976)
lbl(289963)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(771)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(289976)	inlineAt(<M: QueriesHd> x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(1) true <M: NotifyQueue> false 2) 0)
		return
lbl(289988)	return
lbl(289989)	deAllocateL1
		return
		endDefinition(289831)
lbl(289993)	definition(x(10) 290019 pid('CompilerEngine,register/slow' 1 pos('./compiler/CompilerClass.oz' 758 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1662> 3)
		endDefinition(289993)
lbl(290019)	putRecord('#' [1 2 fast] x(12))
		setConstant(register)
		setValue(x(10))
		setValue(x(9))
lbl(290029)	definition(x(9) 290073 pid('CompilerEngine,NotifyQueue/fast' 2 pos('./compiler/CompilerClass.oz' 776 6) nil 5) <Q: 1663> [y(1)])
		testBI('IsDet' [x(0)]#[x(2)] 290070)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		putRecord(newQuery 2 x(0))
		setValue(x(3))
		setValue(x(4))
		callBI('Send' [x(1) x(0)]#nil)
		move(x(2) x(0))
		genCall(gci(g(0) true <M: NotifyQueue> true 2) 0)
lbl(290070)	return
		endDefinition(290029)
lbl(290073)	definition(x(10) 290108 pid('CompilerEngine,NotifyQueue/slow' 1 pos('./compiler/CompilerClass.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1663> 5)
		endDefinition(290073)
lbl(290108)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: NotifyQueue>)
		setValue(x(10))
		setValue(x(9))
lbl(290118)	definition(x(9) 290181 pid('CompilerEngine,unregister/fast' 1 pos('./compiler/CompilerClass.oz' 782 6) nil 4) <Q: 1664> nil)
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: RegistrationLock> x(1) cache)
		lockThread(290177 x(1))
		inlineAt(<M: Registered> x(3) cache)
lbl(290141)	definition(x(1) 290159 pid('' 2 pos('./compiler/CompilerClass.oz' 784 39) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(290141)
lbl(290159)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(<M: Registered> x(0) cache)
		return
lbl(290177)	deAllocateL1
		return
		endDefinition(290118)
lbl(290181)	definition(x(10) 290207 pid('CompilerEngine,unregister/slow' 1 pos('./compiler/CompilerClass.oz' 782 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1664> 3)
		endDefinition(290181)
lbl(290207)	putRecord('#' [1 2 fast] x(14))
		setConstant(unregister)
		setValue(x(10))
		setValue(x(9))
lbl(290217)	definition(x(9) 290264 pid('CompilerEngine,notify/fast' 1 pos('./compiler/CompilerClass.oz' 787 6) nil 3) <Q: 1665> nil)
		getSelf(x(2))
		inlineDot(x(2) <M: RegistrationLock> x(1) cache)
		lockThread(290261 x(1))
		inlineAt(<M: Registered> x(2) cache)
lbl(290239)	definition(x(1) 290254 pid('' 1 pos('./compiler/CompilerClass.oz' 789 25) nil 2) unit [x(0)])
		move(g(0) x(1))
		callBI('Send' [x(0) x(1)]#nil)
		return
		endDefinition(290239)
lbl(290254)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		return
lbl(290261)	return
		endDefinition(290217)
lbl(290264)	definition(x(10) 290290 pid('CompilerEngine,notify/slow' 1 pos('./compiler/CompilerClass.oz' 787 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1665> 3)
		endDefinition(290264)
lbl(290290)	putRecord('#' [1 2 fast] x(15))
		setConstant(notify)
		setValue(x(10))
		setValue(x(9))
lbl(290300)	definition(x(9) 290405 pid('CompilerEngine,enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 797 6) nil 4) <Q: 1666> [g(21) y(1)])
		match(x(0) ht(290400 [onScalar(nil 290309) onRecord('|' 2 290313)]))
lbl(290309)	getLiteral(nil x(1))
		return
lbl(290313)	allocateL3
		getVoid(1)
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 290338 290349)
		branch(290360)
lbl(290338)	putRecord(compiler 2 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290349)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(799)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290360)	getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(0) cache)
		lockThread(290398 x(0))
		getSelf(x(3))
lbl(290373)	definition(x(1) 290389 pid('' 2 pos('./compiler/CompilerClass.oz' 803 22) nil 3) unit [x(3) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(290373)
lbl(290389)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		genFastCall(<P: 29> 6)
		return
lbl(290398)	deAllocateL3
		return
lbl(290400)	genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(290300)
lbl(290405)	putRecord(messagePattern 2 x(10))
		setConstant(unit)
		setConstant(unit)
lbl(290413)	definition(x(16) 290470 pid('CompilerEngine,enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 797 6) nil 4) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 290459)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(290459)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1666> 5)
		endDefinition(290413)
lbl(290470)	putRecord(enqueue 2 x(10))
		setConstant(<U: ooRequiredArg>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(17))
		setConstant(enqueue)
		setValue(x(16))
		setValue(x(10))
		setValue(x(9))
lbl(290490)	definition(x(9) 290942 pid('CompilerEngine,Enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 811 6) nil 5) <Q: 1667> [g(23) g(24) g(25) g(26) y(7) x(7) x(8) g(27) g(21) y(1)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: QueueLock> x(2) cache)
		lockThread(290938 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(290866 [onScalar(pushSwitches 290877) onScalar(popSwitches 290877) onRecord(macroDefine 1 290516) onRecord(macroUndef 1 290533) onRecord(getDefines 1 290550) onRecord(getSwitch 2 290552) onRecord(setSwitch 2 290569) onRecord(getMaxNumberOfErrors 1 290601) onRecord(setMaxNumberOfErrors 1 290603) onRecord(addToEnv 2 290620) onRecord(lookupInEnv 2 290646) onRecord(removeFromEnv 1 290672) onRecord(putEnv 1 290698) onRecord(mergeEnv 1 290715) onRecord(getEnv 1 290732) onRecord(setFrontEnd 2 290734) onRecord(feedVirtualString 1 290766) onRecord(feedVirtualString 2 290783) onRecord(feedFile 1 290815) onRecord(feedFile 2 290832) onRecord(ping 1 290864)]))
lbl(290516)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290533)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290550)	branch(290877)
lbl(290552)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290569)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1658> 8)
		move(g(2) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(bool x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290601)	branch(290877)
lbl(290603)	move(g(3) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(int x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290620)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290646)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290672)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290698)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290715)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290732)	branch(290877)
lbl(290734)	move(g(6) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1658> 8)
		move(g(6) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290766)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290783)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290815)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290832)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1658> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1658> 8)
		branch(290877)
lbl(290864)	branch(290877)
lbl(290866)	putRecord(compiler 2 x(2))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(290877)	inlineAt(<M: NextId> x(0) cache)
		unify(x(0) y(1))
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextId> x(1) cache)
		putRecord('#' 2 x(2))
		setValue(y(1))
		setValue(y(0))
		putList(x(1))
		setValue(x(2))
		setVariable(x(3))
		inlineAt(<M: QueriesTl> x(2) cache)
		unify(x(2) x(1))
		inlineAssign(<M: QueriesTl> x(3) cache)
		putRecord(newQuery 2 x(1))
		setValue(y(1))
		setValue(y(0))
		move(x(1) x(0))
		genCall(gci(g(9) true notify false 1) 0)
		return
lbl(290938)	deAllocateL2
		return
		endDefinition(290490)
lbl(290942)	definition(x(7) 290977 pid('CompilerEngine,Enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 811 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1667> 5)
		endDefinition(290942)
lbl(290977)	putRecord('#' [1 2 fast] x(8))
		setConstant(<M: Enqueue>)
		setValue(x(7))
		setValue(x(9))
lbl(290987)	definition(x(7) 291009 pid('CompilerEngine,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 863 6) nil 1) <Q: 1668> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Compiler> x(0) cache)
		tailSendMsg(interrupt x(0) 0 cache)
		endDefinition(290987)
lbl(291009)	definition(x(9) 291023 pid('CompilerEngine,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 863 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1668> 1)
		endDefinition(291009)
lbl(291023)	putRecord('#' [1 2 fast] x(10))
		setConstant(interrupt)
		setValue(x(9))
		setValue(x(7))
lbl(291033)	definition(x(7) 291081 pid('CompilerEngine,dequeue/fast' 1 pos('./compiler/CompilerClass.oz' 866 6) nil 4) <Q: 1669> [y(1)])
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(1) cache)
		lockThread(291077 x(1))
		inlineAt(<M: QueriesHd> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: Dequeue> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		return
lbl(291077)	deAllocateL1
		return
		endDefinition(291033)
lbl(291081)	definition(x(9) 291107 pid('CompilerEngine,dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 866 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1669> 3)
		endDefinition(291081)
lbl(291107)	putRecord('#' [1 2 fast] x(16))
		setConstant(dequeue)
		setValue(x(9))
		setValue(x(7))
lbl(291117)	definition(x(7) 291146 pid('CompilerEngine,clearQueue/fast' 0 pos('./compiler/CompilerClass.oz' 871 6) nil 2) <Q: 1670> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(291143 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		genCall(gci(g(0) true <M: ClearQueue> false 1) 0)
		return
lbl(291143)	return
		endDefinition(291117)
lbl(291146)	definition(x(9) 291160 pid('CompilerEngine,clearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 871 6) nil 1) unit nil)
		getLiteral(clearQueue x(0))
		genFastCall(<Q: 1670> 1)
		endDefinition(291146)
lbl(291160)	putRecord('#' [1 2 fast] x(18))
		setConstant(clearQueue)
		setValue(x(9))
		setValue(x(7))
lbl(291170)	definition(x(7) 291219 pid('CompilerEngine,ClearQueue/fast' 1 pos('./compiler/CompilerClass.oz' 876 6) nil 2) <Q: 1671> [y(1)])
		testBI('IsDet' [x(0)]#[x(1)] 291211)
		allocateL1
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(y(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVoid(1)
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: ClearQueue> true 1) 0)
lbl(291211)	inlineAssign(<M: QueriesHd> x(0) cache)
		return
		endDefinition(291170)
lbl(291219)	definition(x(9) 291245 pid('CompilerEngine,ClearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 876 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1671> 3)
		endDefinition(291219)
lbl(291245)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ClearQueue>)
		setValue(x(9))
		setValue(x(7))
lbl(291255)	definition(x(7) 291311 pid('CompilerEngine,Dequeue/fast' 3 pos('./compiler/CompilerClass.oz' 884 6) nil 6) <Q: 1672> [y(1)])
		testBI('IsDet' [x(0)]#[x(3)] 291305)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		testBI('==' [x(1) x(4)]#[x(5)] 291295)
		unify(x(2) x(3))
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify true 1) 0)
lbl(291295)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Dequeue> true 3) 0)
lbl(291305)	unify(x(2) x(0))
		return
		endDefinition(291255)
lbl(291311)	definition(x(9) 291352 pid('CompilerEngine,Dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 884 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1672> 7)
		endDefinition(291311)
lbl(291352)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: Dequeue>)
		setValue(x(9))
		setValue(x(7))
lbl(291362)	definition(x(7) 291674 pid('CompilerEngine,RunQueue/fast' 0 pos('./compiler/CompilerClass.oz' 900 6) nil 7) <Q: 1673> [y(1) y(3)])
		allocateL4
		inlineAt(<M: QueriesHd> x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 291398)
		putConstant(idle x(0))
		genCall(gci(g(0) true notify false 1) 0)
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('Wait' [x(0)]#nil)
		putConstant(busy x(0))
		genCall(gci(g(0) true notify false 1) 0)
lbl(291398)	exHandler(291602)
		testRecord(x(0) query 2 291599)
lbl(291405)	getVarVar(y(0) y(1))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(291444 x(0))
		putRecord(runQuery 2 x(0))
		setValue(y(0))
		setValue(y(1))
		genCall(gci(g(0) true notify false 1) 0)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(<M: CurrentQuery> x(0) cache)
		return
lbl(291444)	exHandler(291555)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getReporter x(1) 1 cache)
		putRecord('#' 2 x(3))
		setConstant('execution of query raised an exception ')
		setConstant('-- description follows')
		putRecord(oz 1 x(6))
		setValue(y(1))
		putRecord(hint [l m] x(5))
		setConstant('Query')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		sendMsg(error y(3) [abort items kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) formatExc x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		putConstant(footer x(1))
		putConstant(false x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(message 2 x(0))
		setValue(x(3))
		setConstant(unit)
		genCall(gci(g(0) true notify false 1) 0)
		sendMsg(logReject y(3) 0 cache)
		branch(291570)
lbl(291555)	getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		popEx
lbl(291570)	getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(291668 x(0))
		putConstant(unit x(1))
		inlineAssign(<M: CurrentQuery> x(1) cache)
		putRecord(removeQuery 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true notify false 1) 0)
		return
lbl(291599)	callBI('Exception.raise' [x(0)]#nil)
lbl(291602)	getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(291667 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 291666 291655)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineAssign(<M: QueriesHd> x(1) cache)
		putRecord(query 2 x(0))
		setValue(x(2))
		setValue(x(3))
		callBI('Exception.raise' [x(0)]#nil)
lbl(291655)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(909)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291666)	return
lbl(291667)	popEx
lbl(291668)	deAllocateL4
		genCall(gci(g(0) true <M: RunQueue> true 0) 0)
		endDefinition(291362)
lbl(291674)	definition(x(9) 291688 pid('CompilerEngine,RunQueue/slow' 1 pos('./compiler/CompilerClass.oz' 900 6) nil 1) unit nil)
		getLiteral(<M: RunQueue> x(0))
		genFastCall(<Q: 1673> 1)
		endDefinition(291674)
lbl(291688)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RunQueue>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(17))
		setValue(x(8))
		setValue(x(10))
		setValue(x(16))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('CompilerEngine' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(6) x(0))
		inlineDot(x(0) file x(7) cache)
		inlineDot(x(0) virtualString x(8) cache)
		putList(x(15))
		setConstant(39)
		setConstant(nil)
		putList(x(14))
		setConstant(69)
		setValue(x(15))
		putList(x(13))
		setConstant(77)
		setValue(x(14))
		putList(x(12))
		setConstant(65)
		setValue(x(13))
		putList(x(11))
		setConstant(78)
		setValue(x(12))
		putList(x(10))
		setConstant(72)
		setValue(x(11))
		putList(x(6))
		setConstant(67)
		setValue(x(10))
		putList(x(5))
		setConstant(84)
		setValue(x(6))
		putList(x(4))
		setConstant(73)
		setValue(x(5))
		putList(x(3))
		setConstant(87)
		setValue(x(4))
		putList(x(2))
		setConstant(83)
		setValue(x(3))
		putList(x(1))
		setConstant(96)
		setValue(x(2))
		putList(x(26))
		setConstant(101)
		setConstant(nil)
		putList(x(25))
		setConstant(109)
		setValue(x(26))
		putList(x(24))
		setConstant(97)
		setValue(x(25))
		putList(x(23))
		setConstant(110)
		setValue(x(24))
		putList(x(22))
		setConstant(32)
		setValue(x(23))
		putList(x(21))
		setConstant(104)
		setValue(x(22))
		putList(x(20))
		setConstant(99)
		setValue(x(21))
		putList(x(19))
		setConstant(116)
		setValue(x(20))
		putList(x(18))
		setConstant(105)
		setValue(x(19))
		putList(x(17))
		setConstant(119)
		setValue(x(18))
		putList(x(16))
		setConstant(115)
		setValue(x(17))
		putRecord('#' 2 x(0))
		setValue(x(1))
		setValue(x(16))
		putList(x(36))
		setConstant(39)
		setConstant(nil)
		putList(x(35))
		setConstant(77)
		setValue(x(36))
		putList(x(34))
		setConstant(79)
		setValue(x(35))
		putList(x(33))
		setConstant(84)
		setValue(x(34))
		putList(x(32))
		setConstant(65)
		setValue(x(33))
		putList(x(31))
		setConstant(90)
		setValue(x(32))
		putList(x(30))
		setConstant(79)
		setValue(x(31))
		putList(x(29))
		setConstant(96)
		setValue(x(30))
		putList(x(40))
		setConstant(109)
		setConstant(nil)
		putList(x(39))
		setConstant(111)
		setValue(x(40))
		putList(x(38))
		setConstant(116)
		setValue(x(39))
		putList(x(37))
		setConstant(97)
		setValue(x(38))
		putRecord('#' 2 x(28))
		setValue(x(29))
		setValue(x(37))
		putList(x(54))
		setConstant(39)
		setConstant(nil)
		putList(x(53))
		setConstant(76)
		setValue(x(54))
		putList(x(52))
		setConstant(69)
		setValue(x(53))
		putList(x(51))
		setConstant(66)
		setValue(x(52))
		putList(x(50))
		setConstant(65)
		setValue(x(51))
		putList(x(49))
		setConstant(76)
		setValue(x(50))
		putList(x(48))
		setConstant(95)
		setValue(x(49))
		putList(x(47))
		setConstant(77)
		setValue(x(48))
		putList(x(46))
		setConstant(79)
		setValue(x(47))
		putList(x(45))
		setConstant(84)
		setValue(x(46))
		putList(x(44))
		setConstant(65)
		setValue(x(45))
		putList(x(43))
		setConstant(96)
		setValue(x(44))
		putList(x(64))
		setConstant(108)
		setConstant(nil)
		putList(x(63))
		setConstant(101)
		setValue(x(64))
		putList(x(62))
		setConstant(98)
		setValue(x(63))
		putList(x(61))
		setConstant(97)
		setValue(x(62))
		putList(x(60))
		setConstant(108)
		setValue(x(61))
		putList(x(59))
		setConstant(32)
		setValue(x(60))
		putList(x(58))
		setConstant(109)
		setValue(x(59))
		putList(x(57))
		setConstant(111)
		setValue(x(58))
		putList(x(56))
		setConstant(116)
		setValue(x(57))
		putList(x(55))
		setConstant(97)
		setValue(x(56))
		putRecord('#' 2 x(42))
		setValue(x(43))
		setValue(x(55))
		putList(x(75))
		setConstant(39)
		setConstant(nil)
		putList(x(74))
		setConstant(84)
		setValue(x(75))
		putList(x(73))
		setConstant(65)
		setValue(x(74))
		putList(x(72))
		setConstant(79)
		setValue(x(73))
		putList(x(71))
		setConstant(76)
		setValue(x(72))
		putList(x(70))
		setConstant(70)
		setValue(x(71))
		putList(x(69))
		setConstant(90)
		setValue(x(70))
		putList(x(68))
		setConstant(79)
		setValue(x(69))
		putList(x(67))
		setConstant(96)
		setValue(x(68))
		putList(x(80))
		setConstant(116)
		setConstant(nil)
		putList(x(79))
		setConstant(97)
		setValue(x(80))
		putList(x(78))
		setConstant(111)
		setValue(x(79))
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(102)
		setValue(x(77))
		putRecord('#' 2 x(66))
		setValue(x(67))
		setValue(x(76))
		putList(x(89))
		setConstant(39)
		setConstant(nil)
		putList(x(88))
		setConstant(84)
		setValue(x(89))
		putList(x(87))
		setConstant(78)
		setValue(x(88))
		putList(x(86))
		setConstant(73)
		setValue(x(87))
		putList(x(85))
		setConstant(90)
		setValue(x(86))
		putList(x(84))
		setConstant(79)
		setValue(x(85))
		putList(x(83))
		setConstant(96)
		setValue(x(84))
		putList(x(96))
		setConstant(114)
		setConstant(nil)
		putList(x(95))
		setConstant(101)
		setValue(x(96))
		putList(x(94))
		setConstant(103)
		setValue(x(95))
		putList(x(93))
		setConstant(101)
		setValue(x(94))
		putList(x(92))
		setConstant(116)
		setValue(x(93))
		putList(x(91))
		setConstant(110)
		setValue(x(92))
		putList(x(90))
		setConstant(105)
		setValue(x(91))
		putRecord('#' 2 x(82))
		setValue(x(83))
		setValue(x(90))
		putList(x(106))
		setConstant(39)
		setConstant(nil)
		putList(x(105))
		setConstant(71)
		setValue(x(106))
		putList(x(104))
		setConstant(78)
		setValue(x(105))
		putList(x(103))
		setConstant(73)
		setValue(x(104))
		putList(x(102))
		setConstant(82)
		setValue(x(103))
		putList(x(101))
		setConstant(84)
		setValue(x(102))
		putList(x(100))
		setConstant(83)
		setValue(x(101))
		putList(x(99))
		setConstant(96)
		setValue(x(100))
		putList(x(112))
		setConstant(103)
		setConstant(nil)
		putList(x(111))
		setConstant(110)
		setValue(x(112))
		putList(x(110))
		setConstant(105)
		setValue(x(111))
		putList(x(109))
		setConstant(114)
		setValue(x(110))
		putList(x(108))
		setConstant(116)
		setValue(x(109))
		putList(x(107))
		setConstant(115)
		setValue(x(108))
		putRecord('#' 2 x(98))
		setValue(x(99))
		setValue(x(107))
		putList(x(121))
		setConstant(39)
		setConstant(nil)
		putList(x(120))
		setConstant(82)
		setValue(x(121))
		putList(x(119))
		setConstant(69)
		setValue(x(120))
		putList(x(118))
		setConstant(80)
		setValue(x(119))
		putList(x(117))
		setConstant(77)
		setValue(x(118))
		putList(x(116))
		setConstant(65)
		setValue(x(117))
		putList(x(115))
		setConstant(96)
		setValue(x(116))
		putList(x(124))
		setConstant(39)
		setConstant(nil)
		putList(x(123))
		setConstant(38)
		setValue(x(124))
		putList(x(122))
		setConstant(96)
		setValue(x(123))
		putRecord('#' 2 x(114))
		setValue(x(115))
		setValue(x(122))
		putList(x(136))
		setConstant(39)
		setConstant(nil)
		putList(x(135))
		setConstant(69)
		setValue(x(136))
		putList(x(134))
		setConstant(76)
		setValue(x(135))
		putList(x(133))
		setConstant(66)
		setValue(x(134))
		putList(x(132))
		setConstant(65)
		setValue(x(133))
		putList(x(131))
		setConstant(73)
		setValue(x(132))
		putList(x(130))
		setConstant(82)
		setValue(x(131))
		putList(x(129))
		setConstant(65)
		setValue(x(130))
		putList(x(128))
		setConstant(86)
		setValue(x(129))
		putList(x(127))
		setConstant(96)
		setValue(x(128))
		putList(x(144))
		setConstant(101)
		setConstant(nil)
		putList(x(143))
		setConstant(108)
		setValue(x(144))
		putList(x(142))
		setConstant(98)
		setValue(x(143))
		putList(x(141))
		setConstant(97)
		setValue(x(142))
		putList(x(140))
		setConstant(105)
		setValue(x(141))
		putList(x(139))
		setConstant(114)
		setValue(x(140))
		putList(x(138))
		setConstant(97)
		setValue(x(139))
		putList(x(137))
		setConstant(118)
		setValue(x(138))
		putRecord('#' 2 x(126))
		setValue(x(127))
		setValue(x(137))
		putList(x(162))
		setConstant(39)
		setConstant(nil)
		putList(x(161))
		setConstant(76)
		setValue(x(162))
		putList(x(160))
		setConstant(69)
		setValue(x(161))
		putList(x(159))
		setConstant(66)
		setValue(x(160))
		putList(x(158))
		setConstant(65)
		setValue(x(159))
		putList(x(157))
		setConstant(76)
		setValue(x(158))
		putList(x(156))
		setConstant(95)
		setValue(x(157))
		putList(x(155))
		setConstant(69)
		setValue(x(156))
		putList(x(154))
		setConstant(76)
		setValue(x(155))
		putList(x(153))
		setConstant(66)
		setValue(x(154))
		putList(x(152))
		setConstant(65)
		setValue(x(153))
		putList(x(151))
		setConstant(73)
		setValue(x(152))
		putList(x(150))
		setConstant(82)
		setValue(x(151))
		putList(x(149))
		setConstant(65)
		setValue(x(150))
		putList(x(148))
		setConstant(86)
		setValue(x(149))
		putList(x(147))
		setConstant(96)
		setValue(x(148))
		putList(x(176))
		setConstant(108)
		setConstant(nil)
		putList(x(175))
		setConstant(101)
		setValue(x(176))
		putList(x(174))
		setConstant(98)
		setValue(x(175))
		putList(x(173))
		setConstant(97)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(32)
		setValue(x(172))
		putList(x(170))
		setConstant(101)
		setValue(x(171))
		putList(x(169))
		setConstant(108)
		setValue(x(170))
		putList(x(168))
		setConstant(98)
		setValue(x(169))
		putList(x(167))
		setConstant(97)
		setValue(x(168))
		putList(x(166))
		setConstant(105)
		setValue(x(167))
		putList(x(165))
		setConstant(114)
		setValue(x(166))
		putList(x(164))
		setConstant(97)
		setValue(x(165))
		putList(x(163))
		setConstant(118)
		setValue(x(164))
		putRecord('#' 2 x(146))
		setValue(x(147))
		setValue(x(163))
		putList(x(187))
		setConstant(39)
		setConstant(nil)
		putList(x(186))
		setConstant(84)
		setValue(x(187))
		putList(x(185))
		setConstant(76)
		setValue(x(186))
		putList(x(184))
		setConstant(85)
		setValue(x(185))
		putList(x(183))
		setConstant(65)
		setValue(x(184))
		putList(x(182))
		setConstant(70)
		setValue(x(183))
		putList(x(181))
		setConstant(69)
		setValue(x(182))
		putList(x(180))
		setConstant(68)
		setValue(x(181))
		putList(x(179))
		setConstant(96)
		setValue(x(180))
		putList(x(191))
		setConstant(39)
		setConstant(nil)
		putList(x(190))
		setConstant(61)
		setValue(x(191))
		putList(x(189))
		setConstant(60)
		setValue(x(190))
		putList(x(188))
		setConstant(96)
		setValue(x(189))
		putRecord('#' 2 x(178))
		setValue(x(179))
		setValue(x(188))
		putList(x(201))
		setConstant(39)
		setConstant(nil)
		putList(x(200))
		setConstant(69)
		setValue(x(201))
		putList(x(199))
		setConstant(67)
		setValue(x(200))
		putList(x(198))
		setConstant(73)
		setValue(x(199))
		putList(x(197))
		setConstant(79)
		setValue(x(198))
		putList(x(196))
		setConstant(72)
		setValue(x(197))
		putList(x(195))
		setConstant(67)
		setValue(x(196))
		putList(x(194))
		setConstant(96)
		setValue(x(195))
		putList(x(205))
		setConstant(39)
		setConstant(nil)
		putList(x(204))
		setConstant(93)
		setValue(x(205))
		putList(x(203))
		setConstant(91)
		setValue(x(204))
		putList(x(202))
		setConstant(96)
		setValue(x(203))
		putRecord('#' 2 x(193))
		setValue(x(194))
		setValue(x(202))
		putList(x(214))
		setConstant(39)
		setConstant(nil)
		putList(x(213))
		setConstant(83)
		setValue(x(214))
		putList(x(212))
		setConstant(84)
		setValue(x(213))
		putList(x(211))
		setConstant(79)
		setValue(x(212))
		putList(x(210))
		setConstant(68)
		setValue(x(211))
		putList(x(209))
		setConstant(76)
		setValue(x(210))
		putList(x(208))
		setConstant(96)
		setValue(x(209))
		putList(x(219))
		setConstant(39)
		setConstant(nil)
		putList(x(218))
		setConstant(46)
		setValue(x(219))
		putList(x(217))
		setConstant(46)
		setValue(x(218))
		putList(x(216))
		setConstant(46)
		setValue(x(217))
		putList(x(215))
		setConstant(96)
		setValue(x(216))
		putRecord('#' 2 x(207))
		setValue(x(208))
		setValue(x(215))
		putList(x(231))
		setConstant(39)
		setConstant(nil)
		putList(x(230))
		setConstant(78)
		setValue(x(231))
		putList(x(229))
		setConstant(71)
		setValue(x(230))
		putList(x(228))
		setConstant(73)
		setValue(x(229))
		putList(x(227))
		setConstant(83)
		setValue(x(228))
		putList(x(226))
		setConstant(83)
		setValue(x(227))
		putList(x(225))
		setConstant(65)
		setValue(x(226))
		putList(x(224))
		setConstant(79)
		setValue(x(225))
		putList(x(223))
		setConstant(79)
		setValue(x(224))
		putList(x(222))
		setConstant(96)
		setValue(x(223))
		putList(x(235))
		setConstant(39)
		setConstant(nil)
		putList(x(234))
		setConstant(45)
		setValue(x(235))
		putList(x(233))
		setConstant(60)
		setValue(x(234))
		putList(x(232))
		setConstant(96)
		setValue(x(233))
		putRecord('#' 2 x(221))
		setValue(x(222))
		setValue(x(232))
		putList(x(245))
		setConstant(39)
		setConstant(nil)
		putList(x(244))
		setConstant(78)
		setValue(x(245))
		putList(x(243))
		setConstant(71)
		setValue(x(244))
		putList(x(242))
		setConstant(73)
		setValue(x(243))
		putList(x(241))
		setConstant(83)
		setValue(x(242))
		putList(x(240))
		setConstant(83)
		setValue(x(241))
		putList(x(239))
		setConstant(65)
		setValue(x(240))
		putList(x(238))
		setConstant(96)
		setValue(x(239))
		putList(x(249))
		setConstant(39)
		setConstant(nil)
		putList(x(248))
		setConstant(61)
		setValue(x(249))
		putList(x(247))
		setConstant(58)
		setValue(x(248))
		putList(x(246))
		setConstant(96)
		setValue(x(247))
		putRecord('#' 2 x(237))
		setValue(x(238))
		setValue(x(246))
		putList(x(260))
		setConstant(39)
		setConstant(nil)
		putList(x(259))
		setConstant(69)
		setValue(x(260))
		putList(x(258))
		setConstant(82)
		setValue(x(259))
		putList(x(257))
		setConstant(65)
		setValue(x(258))
		putList(x(256))
		setConstant(80)
		setValue(x(257))
		putList(x(255))
		setConstant(77)
		setValue(x(256))
		putList(x(254))
		setConstant(79)
		setValue(x(255))
		putList(x(253))
		setConstant(67)
		setValue(x(254))
		putList(x(252))
		setConstant(96)
		setValue(x(253))
		putList(x(279))
		setConstant(114)
		setConstant(nil)
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(116)
		setValue(x(278))
		putList(x(276))
		setConstant(97)
		setValue(x(277))
		putList(x(275))
		setConstant(114)
		setValue(x(276))
		putList(x(274))
		setConstant(101)
		setValue(x(275))
		putList(x(273))
		setConstant(112)
		setValue(x(274))
		putList(x(272))
		setConstant(111)
		setValue(x(273))
		putList(x(271))
		setConstant(32)
		setValue(x(272))
		putList(x(270))
		setConstant(110)
		setValue(x(271))
		putList(x(269))
		setConstant(111)
		setValue(x(270))
		putList(x(268))
		setConstant(115)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(114)
		setValue(x(267))
		putList(x(265))
		setConstant(97)
		setValue(x(266))
		putList(x(264))
		setConstant(112)
		setValue(x(265))
		putList(x(263))
		setConstant(109)
		setValue(x(264))
		putList(x(262))
		setConstant(111)
		setValue(x(263))
		putList(x(261))
		setConstant(99)
		setValue(x(262))
		putRecord('#' 2 x(251))
		setValue(x(252))
		setValue(x(261))
		putList(x(292))
		setConstant(39)
		setConstant(nil)
		putList(x(291))
		setConstant(69)
		setValue(x(292))
		putList(x(290))
		setConstant(82)
		setValue(x(291))
		putList(x(289))
		setConstant(65)
		setValue(x(290))
		putList(x(288))
		setConstant(80)
		setValue(x(289))
		putList(x(287))
		setConstant(77)
		setValue(x(288))
		putList(x(286))
		setConstant(79)
		setValue(x(287))
		putList(x(285))
		setConstant(67)
		setValue(x(286))
		putList(x(284))
		setConstant(68)
		setValue(x(285))
		putList(x(283))
		setConstant(70)
		setValue(x(284))
		putList(x(282))
		setConstant(96)
		setValue(x(283))
		putList(x(325))
		setConstant(114)
		setConstant(nil)
		putList(x(324))
		setConstant(111)
		setValue(x(325))
		putList(x(323))
		setConstant(116)
		setValue(x(324))
		putList(x(322))
		setConstant(97)
		setValue(x(323))
		putList(x(321))
		setConstant(114)
		setValue(x(322))
		putList(x(320))
		setConstant(101)
		setValue(x(321))
		putList(x(319))
		setConstant(112)
		setValue(x(320))
		putList(x(318))
		setConstant(111)
		setValue(x(319))
		putList(x(317))
		setConstant(32)
		setValue(x(318))
		putList(x(316))
		setConstant(110)
		setValue(x(317))
		putList(x(315))
		setConstant(111)
		setValue(x(316))
		putList(x(314))
		setConstant(115)
		setValue(x(315))
		putList(x(313))
		setConstant(105)
		setValue(x(314))
		putList(x(312))
		setConstant(114)
		setValue(x(313))
		putList(x(311))
		setConstant(97)
		setValue(x(312))
		putList(x(310))
		setConstant(112)
		setValue(x(311))
		putList(x(309))
		setConstant(109)
		setValue(x(310))
		putList(x(308))
		setConstant(111)
		setValue(x(309))
		putList(x(307))
		setConstant(99)
		setValue(x(308))
		putList(x(306))
		setConstant(32)
		setValue(x(307))
		putList(x(305))
		setConstant(110)
		setValue(x(306))
		putList(x(304))
		setConstant(105)
		setValue(x(305))
		putList(x(303))
		setConstant(97)
		setValue(x(304))
		putList(x(302))
		setConstant(109)
		setValue(x(303))
		putList(x(301))
		setConstant(111)
		setValue(x(302))
		putList(x(300))
		setConstant(100)
		setValue(x(301))
		putList(x(299))
		setConstant(32)
		setValue(x(300))
		putList(x(298))
		setConstant(101)
		setValue(x(299))
		putList(x(297))
		setConstant(116)
		setValue(x(298))
		putList(x(296))
		setConstant(105)
		setValue(x(297))
		putList(x(295))
		setConstant(110)
		setValue(x(296))
		putList(x(294))
		setConstant(105)
		setValue(x(295))
		putList(x(293))
		setConstant(102)
		setValue(x(294))
		putRecord('#' 2 x(281))
		setValue(x(282))
		setValue(x(293))
		putList(x(333))
		setConstant(39)
		setConstant(nil)
		putList(x(332))
		setConstant(78)
		setValue(x(333))
		putList(x(331))
		setConstant(73)
		setValue(x(332))
		putList(x(330))
		setConstant(68)
		setValue(x(331))
		putList(x(329))
		setConstant(70)
		setValue(x(330))
		putList(x(328))
		setConstant(96)
		setValue(x(329))
		putList(x(365))
		setConstant(114)
		setConstant(nil)
		putList(x(364))
		setConstant(111)
		setValue(x(365))
		putList(x(363))
		setConstant(116)
		setValue(x(364))
		putList(x(362))
		setConstant(97)
		setValue(x(363))
		putList(x(361))
		setConstant(114)
		setValue(x(362))
		putList(x(360))
		setConstant(101)
		setValue(x(361))
		putList(x(359))
		setConstant(112)
		setValue(x(360))
		putList(x(358))
		setConstant(111)
		setValue(x(359))
		putList(x(357))
		setConstant(32)
		setValue(x(358))
		putList(x(356))
		setConstant(110)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(105)
		setValue(x(355))
		putList(x(353))
		setConstant(115)
		setValue(x(354))
		putList(x(352))
		setConstant(117)
		setValue(x(353))
		putList(x(351))
		setConstant(108)
		setValue(x(352))
		putList(x(350))
		setConstant(99)
		setValue(x(351))
		putList(x(349))
		setConstant(110)
		setValue(x(350))
		putList(x(348))
		setConstant(105)
		setValue(x(349))
		putList(x(347))
		setConstant(32)
		setValue(x(348))
		putList(x(346))
		setConstant(110)
		setValue(x(347))
		putList(x(345))
		setConstant(105)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(111)
		setValue(x(343))
		putList(x(341))
		setConstant(100)
		setValue(x(342))
		putList(x(340))
		setConstant(32)
		setValue(x(341))
		putList(x(339))
		setConstant(101)
		setValue(x(340))
		putList(x(338))
		setConstant(116)
		setValue(x(339))
		putList(x(337))
		setConstant(105)
		setValue(x(338))
		putList(x(336))
		setConstant(110)
		setValue(x(337))
		putList(x(335))
		setConstant(105)
		setValue(x(336))
		putList(x(334))
		setConstant(102)
		setValue(x(335))
		putRecord('#' 2 x(327))
		setValue(x(328))
		setValue(x(334))
		putList(x(372))
		setConstant(39)
		setConstant(nil)
		putList(x(371))
		setConstant(68)
		setValue(x(372))
		putList(x(370))
		setConstant(68)
		setValue(x(371))
		putList(x(369))
		setConstant(65)
		setValue(x(370))
		putList(x(368))
		setConstant(96)
		setValue(x(369))
		putList(x(382))
		setConstant(39)
		setConstant(nil)
		putList(x(381))
		setConstant(45)
		setValue(x(382))
		putList(x(380))
		setConstant(96)
		setValue(x(381))
		putList(x(379))
		setConstant(32)
		setValue(x(380))
		putList(x(378))
		setConstant(114)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(32)
		setValue(x(377))
		putList(x(375))
		setConstant(39)
		setValue(x(376))
		putList(x(374))
		setConstant(43)
		setValue(x(375))
		putList(x(373))
		setConstant(96)
		setValue(x(374))
		putRecord('#' 2 x(367))
		setValue(x(368))
		setValue(x(373))
		putList(x(391))
		setConstant(39)
		setConstant(nil)
		putList(x(390))
		setConstant(76)
		setValue(x(391))
		putList(x(389))
		setConstant(85)
		setValue(x(390))
		putList(x(388))
		setConstant(77)
		setValue(x(389))
		putList(x(387))
		setConstant(68)
		setValue(x(388))
		putList(x(386))
		setConstant(70)
		setValue(x(387))
		putList(x(385))
		setConstant(96)
		setValue(x(386))
		putList(x(401))
		setConstant(39)
		setConstant(nil)
		putList(x(400))
		setConstant(47)
		setValue(x(401))
		putList(x(399))
		setConstant(96)
		setValue(x(400))
		putList(x(398))
		setConstant(32)
		setValue(x(399))
		putList(x(397))
		setConstant(114)
		setValue(x(398))
		putList(x(396))
		setConstant(111)
		setValue(x(397))
		putList(x(395))
		setConstant(32)
		setValue(x(396))
		putList(x(394))
		setConstant(39)
		setValue(x(395))
		putList(x(393))
		setConstant(42)
		setValue(x(394))
		putList(x(392))
		setConstant(96)
		setValue(x(393))
		putRecord('#' 2 x(384))
		setValue(x(385))
		setValue(x(392))
		putList(x(413))
		setConstant(39)
		setConstant(nil)
		putList(x(412))
		setConstant(76)
		setValue(x(413))
		putList(x(411))
		setConstant(85)
		setValue(x(412))
		putList(x(410))
		setConstant(77)
		setValue(x(411))
		putList(x(409))
		setConstant(82)
		setValue(x(410))
		putList(x(408))
		setConstant(69)
		setValue(x(409))
		putList(x(407))
		setConstant(72)
		setValue(x(408))
		putList(x(406))
		setConstant(84)
		setValue(x(407))
		putList(x(405))
		setConstant(79)
		setValue(x(406))
		putList(x(404))
		setConstant(96)
		setValue(x(405))
		putList(x(427))
		setConstant(39)
		setConstant(nil)
		putList(x(426))
		setConstant(100)
		setValue(x(427))
		putList(x(425))
		setConstant(111)
		setValue(x(426))
		putList(x(424))
		setConstant(109)
		setValue(x(425))
		putList(x(423))
		setConstant(96)
		setValue(x(424))
		putList(x(422))
		setConstant(32)
		setValue(x(423))
		putList(x(421))
		setConstant(114)
		setValue(x(422))
		putList(x(420))
		setConstant(111)
		setValue(x(421))
		putList(x(419))
		setConstant(32)
		setValue(x(420))
		putList(x(418))
		setConstant(39)
		setValue(x(419))
		putList(x(417))
		setConstant(118)
		setValue(x(418))
		putList(x(416))
		setConstant(105)
		setValue(x(417))
		putList(x(415))
		setConstant(100)
		setValue(x(416))
		putList(x(414))
		setConstant(96)
		setValue(x(415))
		putRecord('#' 2 x(403))
		setValue(x(404))
		setValue(x(414))
		putList(x(442))
		setConstant(39)
		setConstant(nil)
		putList(x(441))
		setConstant(76)
		setValue(x(442))
		putList(x(440))
		setConstant(69)
		setValue(x(441))
		putList(x(439))
		setConstant(66)
		setValue(x(440))
		putList(x(438))
		setConstant(65)
		setValue(x(439))
		putList(x(437))
		setConstant(76)
		setValue(x(438))
		putList(x(436))
		setConstant(95)
		setValue(x(437))
		putList(x(435))
		setConstant(69)
		setValue(x(436))
		putList(x(434))
		setConstant(83)
		setValue(x(435))
		putList(x(433))
		setConstant(76)
		setValue(x(434))
		putList(x(432))
		setConstant(65)
		setValue(x(433))
		putList(x(431))
		setConstant(70)
		setValue(x(432))
		putList(x(430))
		setConstant(96)
		setValue(x(431))
		putList(x(458))
		setConstant(108)
		setConstant(nil)
		putList(x(457))
		setConstant(101)
		setValue(x(458))
		putList(x(456))
		setConstant(98)
		setValue(x(457))
		putList(x(455))
		setConstant(97)
		setValue(x(456))
		putList(x(454))
		setConstant(108)
		setValue(x(455))
		putList(x(453))
		setConstant(32)
		setValue(x(454))
		putList(x(452))
		setConstant(115)
		setValue(x(453))
		putList(x(451))
		setConstant(97)
		setValue(x(452))
		putList(x(450))
		setConstant(32)
		setValue(x(451))
		putList(x(449))
		setConstant(39)
		setValue(x(450))
		putList(x(448))
		setConstant(101)
		setValue(x(449))
		putList(x(447))
		setConstant(115)
		setValue(x(448))
		putList(x(446))
		setConstant(108)
		setValue(x(447))
		putList(x(445))
		setConstant(97)
		setValue(x(446))
		putList(x(444))
		setConstant(102)
		setValue(x(445))
		putList(x(443))
		setConstant(96)
		setValue(x(444))
		putRecord('#' 2 x(429))
		setValue(x(430))
		setValue(x(443))
		putList(x(472))
		setConstant(39)
		setConstant(nil)
		putList(x(471))
		setConstant(76)
		setValue(x(472))
		putList(x(470))
		setConstant(69)
		setValue(x(471))
		putList(x(469))
		setConstant(66)
		setValue(x(470))
		putList(x(468))
		setConstant(65)
		setValue(x(469))
		putList(x(467))
		setConstant(76)
		setValue(x(468))
		putList(x(466))
		setConstant(95)
		setValue(x(467))
		putList(x(465))
		setConstant(69)
		setValue(x(466))
		putList(x(464))
		setConstant(85)
		setValue(x(465))
		putList(x(463))
		setConstant(82)
		setValue(x(464))
		putList(x(462))
		setConstant(84)
		setValue(x(463))
		putList(x(461))
		setConstant(96)
		setValue(x(462))
		putList(x(487))
		setConstant(108)
		setConstant(nil)
		putList(x(486))
		setConstant(101)
		setValue(x(487))
		putList(x(485))
		setConstant(98)
		setValue(x(486))
		putList(x(484))
		setConstant(97)
		setValue(x(485))
		putList(x(483))
		setConstant(108)
		setValue(x(484))
		putList(x(482))
		setConstant(32)
		setValue(x(483))
		putList(x(481))
		setConstant(115)
		setValue(x(482))
		putList(x(480))
		setConstant(97)
		setValue(x(481))
		putList(x(479))
		setConstant(32)
		setValue(x(480))
		putList(x(478))
		setConstant(39)
		setValue(x(479))
		putList(x(477))
		setConstant(101)
		setValue(x(478))
		putList(x(476))
		setConstant(117)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(96)
		setValue(x(474))
		putRecord('#' 2 x(460))
		setValue(x(461))
		setValue(x(473))
		putList(x(501))
		setConstant(39)
		setConstant(nil)
		putList(x(500))
		setConstant(76)
		setValue(x(501))
		putList(x(499))
		setConstant(69)
		setValue(x(500))
		putList(x(498))
		setConstant(66)
		setValue(x(499))
		putList(x(497))
		setConstant(65)
		setValue(x(498))
		putList(x(496))
		setConstant(76)
		setValue(x(497))
		putList(x(495))
		setConstant(95)
		setValue(x(496))
		putList(x(494))
		setConstant(84)
		setValue(x(495))
		putList(x(493))
		setConstant(73)
		setValue(x(494))
		putList(x(492))
		setConstant(78)
		setValue(x(493))
		putList(x(491))
		setConstant(85)
		setValue(x(492))
		putList(x(490))
		setConstant(96)
		setValue(x(491))
		putList(x(516))
		setConstant(108)
		setConstant(nil)
		putList(x(515))
		setConstant(101)
		setValue(x(516))
		putList(x(514))
		setConstant(98)
		setValue(x(515))
		putList(x(513))
		setConstant(97)
		setValue(x(514))
		putList(x(512))
		setConstant(108)
		setValue(x(513))
		putList(x(511))
		setConstant(32)
		setValue(x(512))
		putList(x(510))
		setConstant(115)
		setValue(x(511))
		putList(x(509))
		setConstant(97)
		setValue(x(510))
		putList(x(508))
		setConstant(32)
		setValue(x(509))
		putList(x(507))
		setConstant(39)
		setValue(x(508))
		putList(x(506))
		setConstant(116)
		setValue(x(507))
		putList(x(505))
		setConstant(105)
		setValue(x(506))
		putList(x(504))
		setConstant(110)
		setValue(x(505))
		putList(x(503))
		setConstant(117)
		setValue(x(504))
		putList(x(502))
		setConstant(96)
		setValue(x(503))
		putRecord('#' 2 x(489))
		setValue(x(490))
		setValue(x(502))
		putList(x(526))
		setConstant(39)
		setConstant(nil)
		putList(x(525))
		setConstant(84)
		setValue(x(526))
		putList(x(524))
		setConstant(78)
		setValue(x(525))
		putList(x(523))
		setConstant(73)
		setValue(x(524))
		putList(x(522))
		setConstant(84)
		setValue(x(523))
		putList(x(521))
		setConstant(79)
		setValue(x(522))
		putList(x(520))
		setConstant(68)
		setValue(x(521))
		putList(x(519))
		setConstant(96)
		setValue(x(520))
		putList(x(552))
		setConstant(114)
		setConstant(nil)
		putList(x(551))
		setConstant(101)
		setValue(x(552))
		putList(x(550))
		setConstant(103)
		setValue(x(551))
		putList(x(549))
		setConstant(101)
		setValue(x(550))
		putList(x(548))
		setConstant(116)
		setValue(x(549))
		putList(x(547))
		setConstant(110)
		setValue(x(548))
		putList(x(546))
		setConstant(105)
		setValue(x(547))
		putList(x(545))
		setConstant(32)
		setValue(x(546))
		putList(x(544))
		setConstant(110)
		setValue(x(545))
		putList(x(543))
		setConstant(97)
		setValue(x(544))
		putList(x(542))
		setConstant(32)
		setValue(x(543))
		putList(x(541))
		setConstant(121)
		setValue(x(542))
		putList(x(540))
		setConstant(98)
		setValue(x(541))
		putList(x(539))
		setConstant(32)
		setValue(x(540))
		putList(x(538))
		setConstant(100)
		setValue(x(539))
		putList(x(537))
		setConstant(101)
		setValue(x(538))
		putList(x(536))
		setConstant(119)
		setValue(x(537))
		putList(x(535))
		setConstant(111)
		setValue(x(536))
		putList(x(534))
		setConstant(108)
		setValue(x(535))
		putList(x(533))
		setConstant(108)
		setValue(x(534))
		putList(x(532))
		setConstant(111)
		setValue(x(533))
		putList(x(531))
		setConstant(102)
		setValue(x(532))
		putList(x(530))
		setConstant(32)
		setValue(x(531))
		putList(x(529))
		setConstant(39)
		setValue(x(530))
		putList(x(528))
		setConstant(46)
		setValue(x(529))
		putList(x(527))
		setConstant(96)
		setValue(x(528))
		putRecord('#' 2 x(518))
		setValue(x(519))
		setValue(x(527))
		putList(x(561))
		setConstant(39)
		setConstant(nil)
		putList(x(560))
		setConstant(70)
		setValue(x(561))
		putList(x(559))
		setConstant(69)
		setValue(x(560))
		putList(x(558))
		setConstant(82)
		setValue(x(559))
		putList(x(557))
		setConstant(69)
		setValue(x(558))
		putList(x(556))
		setConstant(68)
		setValue(x(557))
		putList(x(555))
		setConstant(96)
		setValue(x(556))
		putList(x(565))
		setConstant(39)
		setConstant(nil)
		putList(x(564))
		setConstant(33)
		setValue(x(565))
		putList(x(563))
		setConstant(33)
		setValue(x(564))
		putList(x(562))
		setConstant(96)
		setValue(x(563))
		putRecord('#' 2 x(554))
		setValue(x(555))
		setValue(x(562))
		putList(x(578))
		setConstant(39)
		setConstant(nil)
		putList(x(577))
		setConstant(69)
		setValue(x(578))
		putList(x(576))
		setConstant(76)
		setValue(x(577))
		putList(x(575))
		setConstant(73)
		setValue(x(576))
		putList(x(574))
		setConstant(70)
		setValue(x(575))
		putList(x(573))
		setConstant(70)
		setValue(x(574))
		putList(x(572))
		setConstant(79)
		setValue(x(573))
		putList(x(571))
		setConstant(68)
		setValue(x(572))
		putList(x(570))
		setConstant(78)
		setValue(x(571))
		putList(x(569))
		setConstant(69)
		setValue(x(570))
		putList(x(568))
		setConstant(96)
		setValue(x(569))
		putList(x(589))
		setConstant(101)
		setConstant(nil)
		putList(x(588))
		setConstant(108)
		setValue(x(589))
		putList(x(587))
		setConstant(105)
		setValue(x(588))
		putList(x(586))
		setConstant(102)
		setValue(x(587))
		putList(x(585))
		setConstant(45)
		setValue(x(586))
		putList(x(584))
		setConstant(102)
		setValue(x(585))
		putList(x(583))
		setConstant(111)
		setValue(x(584))
		putList(x(582))
		setConstant(45)
		setValue(x(583))
		putList(x(581))
		setConstant(100)
		setValue(x(582))
		putList(x(580))
		setConstant(110)
		setValue(x(581))
		putList(x(579))
		setConstant(101)
		setValue(x(580))
		putRecord('#' 2 x(567))
		setValue(x(568))
		setValue(x(579))
		putList(x(598))
		setConstant(39)
		setConstant(nil)
		putList(x(597))
		setConstant(88)
		setValue(x(598))
		putList(x(596))
		setConstant(69)
		setValue(x(597))
		putList(x(595))
		setConstant(71)
		setValue(x(596))
		putList(x(594))
		setConstant(69)
		setValue(x(595))
		putList(x(593))
		setConstant(82)
		setValue(x(594))
		putList(x(592))
		setConstant(96)
		setValue(x(593))
		putList(x(616))
		setConstant(110)
		setConstant(nil)
		putList(x(615))
		setConstant(111)
		setValue(x(616))
		putList(x(614))
		setConstant(105)
		setValue(x(615))
		putList(x(613))
		setConstant(115)
		setValue(x(614))
		putList(x(612))
		setConstant(115)
		setValue(x(613))
		putList(x(611))
		setConstant(101)
		setValue(x(612))
		putList(x(610))
		setConstant(114)
		setValue(x(611))
		putList(x(609))
		setConstant(112)
		setValue(x(610))
		putList(x(608))
		setConstant(120)
		setValue(x(609))
		putList(x(607))
		setConstant(101)
		setValue(x(608))
		putList(x(606))
		setConstant(32)
		setValue(x(607))
		putList(x(605))
		setConstant(114)
		setValue(x(606))
		putList(x(604))
		setConstant(97)
		setValue(x(605))
		putList(x(603))
		setConstant(108)
		setValue(x(604))
		putList(x(602))
		setConstant(117)
		setValue(x(603))
		putList(x(601))
		setConstant(103)
		setValue(x(602))
		putList(x(600))
		setConstant(101)
		setValue(x(601))
		putList(x(599))
		setConstant(114)
		setValue(x(600))
		putRecord('#' 2 x(591))
		setValue(x(592))
		setValue(x(599))
		putList(x(626))
		setConstant(39)
		setConstant(nil)
		putList(x(625))
		setConstant(69)
		setValue(x(626))
		putList(x(624))
		setConstant(67)
		setValue(x(625))
		putList(x(623))
		setConstant(85)
		setValue(x(624))
		putList(x(622))
		setConstant(68)
		setValue(x(623))
		putList(x(621))
		setConstant(69)
		setValue(x(622))
		putList(x(620))
		setConstant(82)
		setValue(x(621))
		putList(x(619))
		setConstant(96)
		setValue(x(620))
		putList(x(630))
		setConstant(39)
		setConstant(nil)
		putList(x(629))
		setConstant(62)
		setValue(x(630))
		putList(x(628))
		setConstant(61)
		setValue(x(629))
		putList(x(627))
		setConstant(96)
		setValue(x(628))
		putRecord('#' 2 x(618))
		setValue(x(619))
		setValue(x(627))
		putList(x(637))
		setConstant(39)
		setConstant(nil)
		putList(x(636))
		setConstant(80)
		setValue(x(637))
		putList(x(635))
		setConstant(69)
		setValue(x(636))
		putList(x(634))
		setConstant(83)
		setValue(x(635))
		putList(x(633))
		setConstant(96)
		setValue(x(634))
		putList(x(641))
		setConstant(39)
		setConstant(nil)
		putList(x(640))
		setConstant(47)
		setValue(x(641))
		putList(x(639))
		setConstant(47)
		setValue(x(640))
		putList(x(638))
		setConstant(96)
		setValue(x(639))
		putRecord('#' 2 x(632))
		setValue(x(633))
		setValue(x(638))
		putList(x(631))
		setValue(x(632))
		setConstant(nil)
		putList(x(617))
		setValue(x(618))
		setValue(x(631))
		putList(x(590))
		setValue(x(591))
		setValue(x(617))
		putList(x(566))
		setValue(x(567))
		setValue(x(590))
		putList(x(553))
		setValue(x(554))
		setValue(x(566))
		putList(x(517))
		setValue(x(518))
		setValue(x(553))
		putList(x(488))
		setValue(x(489))
		setValue(x(517))
		putList(x(459))
		setValue(x(460))
		setValue(x(488))
		putList(x(428))
		setValue(x(429))
		setValue(x(459))
		putList(x(402))
		setValue(x(403))
		setValue(x(428))
		putList(x(383))
		setValue(x(384))
		setValue(x(402))
		putList(x(366))
		setValue(x(367))
		setValue(x(383))
		putList(x(326))
		setValue(x(327))
		setValue(x(366))
		putList(x(280))
		setValue(x(281))
		setValue(x(326))
		putList(x(250))
		setValue(x(251))
		setValue(x(280))
		putList(x(236))
		setValue(x(237))
		setValue(x(250))
		putList(x(220))
		setValue(x(221))
		setValue(x(236))
		putList(x(206))
		setValue(x(207))
		setValue(x(220))
		putList(x(192))
		setValue(x(193))
		setValue(x(206))
		putList(x(177))
		setValue(x(178))
		setValue(x(192))
		putList(x(145))
		setValue(x(146))
		setValue(x(177))
		putList(x(125))
		setValue(x(126))
		setValue(x(145))
		putList(x(113))
		setValue(x(114))
		setValue(x(125))
		putList(x(97))
		setValue(x(98))
		setValue(x(113))
		putList(x(81))
		setValue(x(82))
		setValue(x(97))
		putList(x(65))
		setValue(x(66))
		setValue(x(81))
		putList(x(41))
		setValue(x(42))
		setValue(x(65))
		putList(x(27))
		setValue(x(28))
		setValue(x(41))
		putList(x(9))
		setValue(x(0))
		setValue(x(27))
lbl(295653)	definition(x(10) 295717 pid('DetachPrefix' 3 pos('./compiler/ParseOz.oz' 57 6) nil 5) <Q: 1674> nil)
		match(x(0) ht(295702 [onScalar(nil 295662) onRecord('|' 2 295666)]))
lbl(295662)	unify(x(2) x(1))
		return
lbl(295666)	allocateL2
		getVarVar(x(0) x(3))
		move(x(2) y(0))
		testList(x(1) 295697)
lbl(295676)	getVarVar(x(1) x(4))
		createVariable(y(1))
		shallowGuard(295697)
		unify(x(0) x(1))
lbl(295686)	shallowThen
		move(x(3) x(0))
		move(x(4) x(1))
		deAllocateL2
		genFastCall(<Q: 1674> 7)
lbl(295697)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(295702)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(295653)
lbl(295717)	definition(x(10) 295805 pid('BeautifyPrefix' 3 pos('./compiler/ParseOz.oz' 67 6) nil 4) <Q: 1675> nil)
		match(x(0) ht(295790 [onScalar(nil 295726) onRecord('|' 2 295730)]))
lbl(295726)	unify(x(2) x(1))
		return
lbl(295730)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1674> 6)
		testLiteral(y(4) false 295769)
lbl(295757)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1675> 7)
lbl(295769)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1676> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(295790)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(73)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(295717)
lbl(295805)	definition(x(10) 296075 pid('Beautify' 2 pos('./compiler/ParseOz.oz' 76 6) nil 5) <Q: 1676> [g(5) x(9)])
		match(x(0) ht(296060 [onScalar(nil 295814) onRecord('|' 2 295818)]))
lbl(295814)	getLiteral(nil x(1))
		return
lbl(295818)	allocateL4
		getVarVar(x(2) y(0))
		testNumber(x(2) 96 296049)
lbl(295826)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		testList(y(0) 295934)
lbl(295834)	getVarVar(x(2) x(3))
		testNumber(x(2) 95 295934)
lbl(295841)	definition(x(4) 295859 pid('' 2 pos('./compiler/ParseOz.oz' 81 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(295841)
lbl(295859)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 295921)
lbl(295877)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(295921)
		getNumber(95 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(295893)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1676> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(295921)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1676> 5)
lbl(295934)	testList(y(0) 296037)
lbl(295937)	getVarVar(x(0) x(1))
		testNumber(x(0) 39 296037)
lbl(295944)	definition(x(4) 295962 pid('' 2 pos('./compiler/ParseOz.oz' 88 28) nil 4) unit nil)
		putConstant(39 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(295944)
lbl(295962)	move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 296024)
lbl(295980)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(296024)
		getNumber(39 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(295996)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1676> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(296024)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1676> 5)
lbl(296037)	move(g(1) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1675> 7)
lbl(296049)	getListValVar(x(1) x(2) x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1676> 5)
lbl(296060)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(295805)
lbl(296075)	definition(x(9) 296193 pid('Output' 2 pos('./compiler/ParseOz.oz' 101 6) nil 2) <Q: 1677> [g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
lbl(296091)	definition(x(1) 296184 pid('' 1 pos('./compiler/ParseOz.oz' 103 3) nil 4) unit [g(0) y(0)])
		allocateL2
		move(x(0) y(0))
		createCond(296175)
lbl(296103)	lastClause
		clause
		thread(296134)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		putConstant('parse error' x(1))
		inlineUparrow(x(2) x(0) x(3))
		unify(x(3) x(1))
		deAllocateL2
		return
lbl(296134)	ask
lbl(296135)	move(y(0) x(0))
		inlineDot(x(0) msg x(1) cache)
		callBI('AtomToString' [x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1676> 4)
		move(y(0) x(0))
		putConstant(msg x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		move(x(3) x(0))
		deAllocateL2
		tailCall(g(1) 1)
lbl(296175)	move(y(0) x(0))
		deAllocateL2
		tailCall(g(1) 1)
		endDefinition(296091)
lbl(296184)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(296075)
lbl(296193)	definition(x(0) 296295 pid('ParseOzFile' 5 pos('./compiler/ParseOz.oz' 113 3) nil 5) <Q: 1678> [x(7)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1677> 4)
		testLiteral(y(1) fileNotFound 296288)
lbl(296269)	putRecord('#' 3 x(1))
		setConstant('could not open file "')
		setValue(y(3))
		setConstant('" for reading')
		putConstant('compiler directive error' x(0))
		sendMsg(error y(4) [kind msg] cache)
lbl(296288)	unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(296193)
lbl(296295)	unify(x(0) y(13))
lbl(296298)	definition(x(0) 296377 pid('ParseOzVirtualString' 5 pos('./compiler/ParseOz.oz' 129 3) nil 5) <Q: 1679> [x(8)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1677> 4)
		unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(296298)
lbl(296377)	unify(x(0) y(14))
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<M: Compiler> <M: Port> <M: ServerThread>] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(296398)	definition(x(7) 296498 pid('GenericInterface,init/fast' 2 pos('./compiler/GenericInterface.oz' 25 3) nil 5) <Q: 1680> [y(0) g(18)])
		allocateL3
		createVariable(x(2))
		callBI(ooGetLock [x(2)]#nil)
		lockThread(296494 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true exit false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		createVariable(x(1))
		callBI('NewPort' [x(1)]#[x(2)])
		inlineAssign(<M: Port> x(2) cache)
		inlineAt(<M: Port> x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		sendMsg(register y(0) 1 cache)
		thread(296493)
		callBI('Thread.this' nil#[x(4)])
		inlineAssign(<M: ServerThread> x(4) cache)
		putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(1) x(0))
		putConstant(1 x(2))
		createVariableMove(y(0) x(3))
		marshalledFastCall(<R: tuple> 8)
		getSelf(x(1))
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(1) 1)
lbl(296493)	return
lbl(296494)	deAllocateL3
		return
		endDefinition(296398)
lbl(296498)	definition(x(8) 296533 pid('GenericInterface,init/slow' 1 pos('./compiler/GenericInterface.oz' 25 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1680> 5)
		endDefinition(296498)
lbl(296533)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(296543)	definition(x(7) 296625 pid('GenericInterface,exit/fast' 0 pos('./compiler/GenericInterface.oz' 37 3) nil 2) <Q: 1681> [g(28)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(296622 x(0))
		inlineAt(<M: Compiler> x(0) cache)
		match(x(0) ht(296565 [onScalar(unit 296613)]))
lbl(296565)	inlineAt(<M: ServerThread> x(0) cache)
		genFastCall(<P: 263> 2)
		inlineAt(<M: Compiler> x(1) cache)
		inlineAt(<M: Port> x(0) cache)
		sendMsg(unregister x(1) 1 cache)
		putConstant(unit x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: Port> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: ServerThread> x(0) cache)
lbl(296613)	getSelf(x(1))
		sendMsg(reset x(1) 0 cache)
		return
lbl(296622)	return
		endDefinition(296543)
lbl(296625)	definition(x(8) 296639 pid('GenericInterface,exit/slow' 1 pos('./compiler/GenericInterface.oz' 37 3) nil 1) unit nil)
		getLiteral(exit x(0))
		genFastCall(<Q: 1681> 1)
		endDefinition(296625)
lbl(296639)	putRecord('#' [1 2 fast] x(10))
		setConstant(exit)
		setValue(x(8))
		setValue(x(7))
lbl(296649)	definition(x(7) 296658 pid('GenericInterface,reset/fast' 0 pos('./compiler/GenericInterface.oz' 50 3) nil 0) <Q: 1682> nil)
		return
		endDefinition(296649)
lbl(296658)	definition(x(8) 296672 pid('GenericInterface,reset/slow' 1 pos('./compiler/GenericInterface.oz' 50 3) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1682> 1)
		endDefinition(296658)
lbl(296672)	putRecord('#' [1 2 fast] x(11))
		setConstant(reset)
		setValue(x(8))
		setValue(x(7))
lbl(296682)	definition(x(7) 296699 pid('GenericInterface,getCompiler/fast' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 2) <Q: 1683> nil)
		inlineAt(<M: Compiler> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(296682)
lbl(296699)	definition(x(8) 296725 pid('GenericInterface,getCompiler/slow' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1683> 3)
		endDefinition(296699)
lbl(296725)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCompiler)
		setValue(x(8))
		setValue(x(7))
lbl(296735)	definition(x(7) 296752 pid('GenericInterface,getPort/fast' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 2) <Q: 1684> nil)
		inlineAt(<M: Port> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(296735)
lbl(296752)	definition(x(8) 296778 pid('GenericInterface,getPort/slow' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1684> 3)
		endDefinition(296752)
lbl(296778)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPort)
		setValue(x(8))
		setValue(x(7))
lbl(296788)	definition(x(7) 296807 pid('GenericInterface,enqueue/fast' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 2) <Q: 1685> nil)
		inlineAt(<M: Compiler> x(1) cache)
		tailSendMsg(enqueue x(1) 1 cache)
		endDefinition(296788)
lbl(296807)	definition(x(8) 296833 pid('GenericInterface,enqueue/slow' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1685> 3)
		endDefinition(296807)
lbl(296833)	putRecord('#' [1 2 fast] x(14))
		setConstant(enqueue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('GenericInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(296874)	definition(x(7) 297002 pid('MessageToVS' 2 pos('./compiler/QuietInterface.oz' 23 3) nil 6) <Q: 1686> [y(3)])
		match(x(0) ht(296987 [onRecord(info 1 296883) onRecord(info 2 296889) onRecord(message 2 296895)]))
lbl(296883)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(296889)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(296895)	allocateL2
		getVariable(x(2))
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		move(g(0) x(3))
		inlineDot(x(3) msg x(4) cache)
lbl(296913)	definition(x(5) 296962 pid('' 1 pos('./compiler/QuietInterface.oz' 29 3) nil 5) unit [x(0) g(0)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(296913)
lbl(296962)	moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(5) x(0))
		move(x(2) x(1))
		call(x(4) 2)
		move(y(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(296987)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(34)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(296874)
lbl(297002)	definition(x(7) 297047 pid('HistoryToVS' 2 pos('./compiler/QuietInterface.oz' 37 3) nil 5) <Q: 1687> nil)
lbl(297008)	definition(x(4) 297033 pid('' 3 pos('./compiler/QuietInterface.oz' 39 7) nil 3) unit nil)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1686> 5)
		endDefinition(297008)
lbl(297033)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(297002)
lbl(297047)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: HasBeenTopped> <M: HasErrors> <M: History> <M: InsertedFiles> <M: SourceVS> <M: Verbose>] x(2))
		setConstant(false)
		setConstant(false)
		setConstant(nil)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
		putConstant(<M: Serve> x(8))
lbl(297086)	definition(x(9) 297157 pid('QuietInterface,init' 1 pos('./compiler/QuietInterface.oz' 49 6) nil 4) unit [x(7) y(0) x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 297134)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(297137)
lbl(297134)	getLiteral(false y(2))
lbl(297137)	move(y(2) x(0))
		inlineAssign(<M: Verbose> x(0) cache)
		move(y(1) x(0))
		move(g(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true init true 2) 0)
		endDefinition(297086)
lbl(297157)	putList(x(7))
		setConstant(init)
		setValue(x(9))
lbl(297163)	definition(x(8) 297221 pid('QuietInterface,reset/fast' 0 pos('./compiler/QuietInterface.oz' 53 6) nil 1) <Q: 1688> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(297218 x(0))
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: InsertedFiles> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: SourceVS> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		return
lbl(297218)	return
		endDefinition(297163)
lbl(297221)	definition(x(9) 297235 pid('QuietInterface,reset/slow' 1 pos('./compiler/QuietInterface.oz' 53 6) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1688> 1)
		endDefinition(297221)
lbl(297235)	putRecord('#' [1 2 fast] x(10))
		setConstant(reset)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(5))
lbl(297247)	definition(x(8) 297538 pid('QuietInterface,Serve/fast' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 4) <Q: 1689> [y(2) y(5)])
		testList(x(0) 297523)
lbl(297256)	allocateL4
		getVarVar(x(0) x(1))
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(297372 [onScalar(errorFound 297268) onScalar(toTop 297281) onRecord(info 1 297294) onRecord(info 2 297299) onRecord(message 2 297304) onRecord(insert 2 297309) onRecord(displaySource 3 297332)]))
lbl(297268)	putConstant(true x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		getLiteral(unit y(1))
		branch(297375)
lbl(297281)	putConstant(true x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		getLiteral(unit y(1))
		branch(297375)
lbl(297294)	unify(y(1) x(0))
		branch(297375)
lbl(297299)	unify(y(1) x(0))
		branch(297375)
lbl(297304)	unify(y(1) x(0))
		branch(297375)
lbl(297309)	getVariable(x(0))
		inlineAt(<M: InsertedFiles> x(2) cache)
		putList(x(3))
		setValue(x(0))
		setValue(x(2))
		inlineAssign(<M: InsertedFiles> x(3) cache)
		getLiteral(unit y(1))
		branch(297375)
lbl(297332)	getVoid(2)
		getVariable(x(0))
		inlineAt(<M: SourceVS> x(2) cache)
		testLiteral(x(2) nil 297352)
lbl(297345)	inlineAssign(<M: SourceVS> x(0) cache)
		branch(297367)
lbl(297352)	putRecord('#' 3 x(3))
		setValue(x(2))
		setConstant('\n\n')
		setValue(x(0))
		inlineAssign(<M: SourceVS> x(3) cache)
lbl(297367)	getLiteral(unit y(1))
		branch(297375)
lbl(297372)	getLiteral(unit y(1))
lbl(297375)	match(y(1) ht(297378 [onScalar(unit 297516)]))
lbl(297378)	inlineAt(<M: Verbose> x(0) cache)
		match(x(0) ht(297500 [onScalar(true 297386) onScalar(auto 297414)]))
lbl(297386)	move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1686> 4)
		move(y(3) x(0))
		call(y(2) 1)
		branch(297516)
lbl(297414)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
		inlineAt(<M: HasBeenTopped> x(0) cache)
		testBool(x(0) 297516 297489)
		move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		inlineAt(<M: History> x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1687> 4)
		move(y(2) x(0))
		call(y(1) 1)
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: Verbose> x(1) cache)
		branch(297516)
lbl(297489)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(297500)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
lbl(297516)	move(y(0) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: Serve> true 1) 0)
lbl(297523)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(103)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(297247)
lbl(297538)	definition(x(9) 297564 pid('QuietInterface,Serve/slow' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1689> 3)
		endDefinition(297538)
lbl(297564)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: Serve>)
		setValue(x(9))
		setValue(x(8))
lbl(297574)	definition(x(8) 297588 pid('QuietInterface,setVerbosity/fast' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 1) <Q: 1690> nil)
		inlineAssign(<M: Verbose> x(0) cache)
		return
		endDefinition(297574)
lbl(297588)	definition(x(9) 297614 pid('QuietInterface,setVerbosity/slow' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1690> 3)
		endDefinition(297588)
lbl(297614)	putRecord('#' [1 2 fast] x(12))
		setConstant(setVerbosity)
		setValue(x(9))
		setValue(x(8))
lbl(297624)	definition(x(8) 297641 pid('QuietInterface,hasErrors/fast' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 2) <Q: 1691> nil)
		inlineAt(<M: HasErrors> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(297624)
lbl(297641)	definition(x(9) 297667 pid('QuietInterface,hasErrors/slow' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1691> 3)
		endDefinition(297641)
lbl(297667)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasErrors)
		setValue(x(9))
		setValue(x(8))
lbl(297677)	definition(x(8) 297694 pid('QuietInterface,hasBeenTopped/fast' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 2) <Q: 1692> nil)
		inlineAt(<M: HasBeenTopped> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(297677)
lbl(297694)	definition(x(9) 297720 pid('QuietInterface,hasBeenTopped/slow' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1692> 3)
		endDefinition(297694)
lbl(297720)	putRecord('#' [1 2 fast] x(14))
		setConstant(hasBeenTopped)
		setValue(x(9))
		setValue(x(8))
lbl(297730)	definition(x(8) 297752 pid('QuietInterface,getVS/fast' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) <Q: 1693> nil)
		inlineAt(<M: History> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1687> 5)
		endDefinition(297730)
lbl(297752)	definition(x(9) 297778 pid('QuietInterface,getVS/slow' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1693> 3)
		endDefinition(297752)
lbl(297778)	putRecord('#' [1 2 fast] x(15))
		setConstant(getVS)
		setValue(x(9))
		setValue(x(8))
lbl(297788)	definition(x(8) 297839 pid('QuietInterface,getMessages/fast' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 5) <Q: 1694> nil)
		inlineAt(<M: History> x(4) cache)
lbl(297799)	definition(x(1) 297825 pid('' 3 pos('./compiler/QuietInterface.oz' 120 3) nil 3) unit nil)
		testRecord(x(1) message 2 297819)
lbl(297810)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(297819)	unify(x(2) x(0))
		return
		endDefinition(297799)
lbl(297825)	move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(297788)
lbl(297839)	definition(x(9) 297865 pid('QuietInterface,getMessages/slow' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1694> 3)
		endDefinition(297839)
lbl(297865)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMessages)
		setValue(x(9))
		setValue(x(8))
lbl(297875)	definition(x(8) 297902 pid('QuietInterface,formatMessages/fast' 2 pos('./compiler/QuietInterface.oz' 126 6) nil 2) <Q: 1695> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1687> 5)
		endDefinition(297875)
lbl(297902)	definition(x(9) 297937 pid('QuietInterface,formatMessages/slow' 1 pos('./compiler/QuietInterface.oz' 126 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1695> 5)
		endDefinition(297902)
lbl(297937)	putRecord('#' [1 2 fast] x(17))
		setConstant(formatMessages)
		setValue(x(9))
		setValue(x(8))
lbl(297947)	definition(x(8) 297969 pid('QuietInterface,getInsertedFiles/fast' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) <Q: 1696> nil)
		inlineAt(<M: InsertedFiles> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 28> 5)
		endDefinition(297947)
lbl(297969)	definition(x(9) 297995 pid('QuietInterface,getInsertedFiles/slow' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1696> 3)
		endDefinition(297969)
lbl(297995)	putRecord('#' [1 2 fast] x(18))
		setConstant(getInsertedFiles)
		setValue(x(9))
		setValue(x(8))
lbl(298005)	definition(x(8) 298022 pid('QuietInterface,getSource/fast' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 2) <Q: 1697> nil)
		inlineAt(<M: SourceVS> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(298005)
lbl(298022)	definition(x(9) 298048 pid('QuietInterface,getSource/slow' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1697> 3)
		endDefinition(298022)
lbl(298048)	putRecord('#' [1 2 fast] x(19))
		setConstant(getSource)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		move(y(5) x(6))
		putConstant('feat' x(3))
		putConstant('QuietInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(298096)	definition(x(0) 298324 pid('EvalExpression' 4 pos('./compiler/Abstractions.oz' 1 0) nil 6) <Q: 1698> [y(1) y(5) g(18) g(28) g(21)])
		allocateL6
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(expression)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord('return' [result] x(2))
		setValue(y(3))
		putRecord(feedVirtualString 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue y(4) 1 cache)
		createVariable(y(1))
		thread(298314)
		callBI('Thread.this' nil#[x(1)])
lbl(298212)	definition(x(0) 298242 pid('Kill' 0 pos('./compiler/Abstractions.oz' 10 6) nil 1) unit [y(4) g(3) x(1) y(1)])
		sendMsg(clearQueue g(0) 0 cache)
		sendMsg(interrupt g(0) 0 cache)
		move(g(2) x(0))
		genFastCall(<P: 263> 2)
		getLiteral(unit g(3))
		return
		endDefinition(298212)
lbl(298242)	unify(x(0) y(2))
		putRecord(ping 1 x(0))
		setVariable(y(2))
		sendMsg(enqueue y(4) 1 cache)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(2) x(0))
		sendMsg(hasErrors y(5) 1 cache)
		testBool(y(2) 298309 298298)
		createVariableMove(y(2) x(0))
		sendMsg(getMessages y(5) 1 cache)
		putRecord(compiler 3 x(0))
		setConstant(evalExpression)
		setValue(y(0))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(298298)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(17)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(298309)	getLiteral(unit y(1))
		deAllocateL6
		return
lbl(298314)	move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
		deAllocateL6
		return
		endDefinition(298096)
lbl(298324)	definition(x(1) 298343 pid('VirtualStringToValue' 2 pos('./compiler/Abstractions.oz' 26 0) nil 4) <Q: 1699> nil)
		move(x(1) x(3))
		putConstant(env x(1))
		createVariable(x(2))
		genFastCall(<Q: 1698> 9)
		endDefinition(298324)
lbl(298343)	move(y(4) x(2))
		inlineDot(x(2) put x(2) cache)
lbl(298352)	definition(x(3) 298881 pid('' 2 pos('./compiler/Errors.oz' 26 1) nil 12) <Q: 1700> [y(3)])
		allocateL6
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('compiler engine error' y(3))
		testRecord(y(2) compiler 2 298450)
lbl(298387)	getVarVar(x(0) x(1))
		testLiteral(x(0) internal 298450)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Additional information')
		setValue(x(4))
		putRecord(line 1 x(7))
		setConstant('please send a bug report to oz-bugs@ps.uni-sb.de')
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(6))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal compiler error' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(298450)	testRecord(y(2) compiler 2 298506)
lbl(298455)	getVarVar(x(0) x(1))
		testLiteral(x(0) invalidQuery 298506)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Query')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Invalid query' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(298506)	testRecord(y(2) compiler 4 298596)
lbl(298511)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) invalidQuery 298596)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(7))
		setValue(x(1))
		putRecord(hint [l m] x(4))
		setConstant('Query')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('At argument')
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Expected type')
		setValue(x(3))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(4))
		setValue(x(8))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ill-typed query argument' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(298596)	testRecord(y(2) compiler 2 298652)
lbl(298601)	getVarVar(x(0) x(1))
		testLiteral(x(0) register 298652)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Argument')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Trying to register a non-port' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(298652)	testRecord(y(2) compiler 3 298858)
lbl(298657)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		createVariable(y(2))
		testLiteral(x(0) evalExpression 298858)
		move(g(0) x(0))
		inlineDot(x(0) format x(2) cache)
lbl(298678)	definition(x(3) 298823 pid('' 2 pos('./compiler/Errors.oz' 57 2) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createCond(298753)
lbl(298692)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(298734)
		putConstant(error x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(298734)	ask
lbl(298735)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(298753)	createCond(298816)
lbl(298755)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(298797)
		putConstant(warn x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(298797)	ask
lbl(298798)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(298816)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(298678)
lbl(298823)	move(x(2) y(4))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant('Compiler.evalExpression applied to an erroneous query' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(298858)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailCall(x(3) 3)
		endDefinition(298352)
lbl(298881)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(3) x(1))
		putConstant(compiler x(0))
		call(x(2) 2)
		getRecord('export' [assemble compilerEngine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(29))
		unifyValue(y(11))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(13))
		unifyValue(y(14))
		unifyValue(y(5))
		unifyValue(y(3))
		deAllocateL
		return
		endDefinition(277294)
lbl(298919)	tailCall(x(3) 0)
		endDefinition(276244)
lbl(298924)	putList(x(4))
		setConstant(assemble)
		setConstant(nil)
		putList(x(3))
		setConstant(internalAssemble)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord(info [type] x(6))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putList(x(9))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(8))
		setValue(x(9))
		putList(x(12))
		setConstant(isPrintName)
		setConstant(nil)
		putList(x(11))
		setConstant(nameVariable)
		setValue(x(12))
		putRecord(info [type] x(10))
		setValue(x(11))
		putRecord(info [type] x(13))
		setConstant(nil)
		putList(x(16))
		setConstant(condGet)
		setConstant(nil)
		putList(x(15))
		setConstant(get)
		setValue(x(16))
		putRecord(info [type] x(14))
		setValue(x(15))
		putRecord(info [type] x(17))
		setConstant(nil)
		putList(x(21))
		setConstant(unnestQuery)
		setConstant(nil)
		putList(x(20))
		setConstant(makeExpressionQuery)
		setValue(x(21))
		putList(x(19))
		setConstant(joinQueries)
		setValue(x(20))
		putRecord(info [type] x(18))
		setValue(x(19))
		putRecord('import' ['Assembler' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Misc' 'Parser' 'Property' 'System' 'Unnest'] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(10))
		setValue(x(13))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		putConstant(value x(4))
		putConstant('class' x(5))
		putConstant('procedure/4' x(6))
		putConstant('class' x(7))
		putConstant('procedure/5' x(8))
		putConstant('procedure/5' x(9))
		putConstant('class' x(10))
		putConstant('procedure/2' x(11))
		putRecord('export' [assemble compilerEngine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(299118)	definition(x(2) 299600 pid('' 2 pos('./compiler/FunMain.oz' 1 0) nil 3) <P: 1701> [y(54) y(185) y(100) y(95) y(96) y(97) y(2) y(98) y(1)])
		putConstant(nil x(2))
lbl(299127)	definitionCopy(x(2) 299595 pid('/body' 0 pos('./compiler/FunMain.oz' 1 0) [once] 16) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(16)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'FS' x(8) cache)
		inlineDot(x(0) 'FD' x(9) cache)
		inlineDot(x(0) 'Module' x(10) cache)
		inlineDot(x(0) 'Type' x(11) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(12) cache)
		move(g(1) x(13))
		inlineDot(x(13) apply x(14) cache)
		putRecord(c ['CompilerSupport'] x(15))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		moveMoveXYXY(x(11) y(10) x(12) y(11))
		move(x(15) x(0))
		createVariableMove(y(12) x(1))
		call(x(14) 2)
		move(g(2) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant(c x(0))
		createVariableMove(y(13) x(1))
		call(x(2) 2)
		move(g(3) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'Misc' 'RunTime' 'System' 'Type'] x(3))
		setValue(y(13))
		setValue(y(2))
		setVariable(y(14))
		setValue(y(8))
		setValue(y(7))
		setValue(y(12))
		setVariable(y(15))
		setValue(y(4))
		setValue(y(10))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(4) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'Core' 'Misc' 'RunTime' 'System'] x(3))
		setValue(y(13))
		setValue(y(14))
		setValue(y(12))
		setValue(y(15))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(10) x(1))
		call(x(2) 2)
		move(g(5) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CodeGen' 'Misc' 'SA' 'System'] x(3))
		setValue(y(10))
		setValue(y(12))
		setValue(y(7))
		setValue(y(4))
		move(x(3) x(0))
		move(y(14) x(1))
		call(x(2) 2)
		move(g(6) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Core' 'Module' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(14))
		setValue(y(9))
		setValue(y(11))
		setValue(y(4))
		move(x(3) x(0))
		move(y(15) x(1))
		call(x(2) 2)
		move(g(7) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CompilerSupport' 'Core' 'Debug' 'FD' 'Misc' 'RunTime'] x(3))
		setValue(y(2))
		setValue(y(14))
		setValue(y(0))
		setValue(y(8))
		setValue(y(12))
		setValue(y(15))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(13))
		setValue(y(2))
		setValue(y(11))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(g(9) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Assembler' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Misc' 'Parser' 'Property' 'System' 'Unnest'] x(3))
		setValue(y(2))
		setValue(y(14))
		setValue(y(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(12))
		setValue(y(1))
		setValue(y(3))
		setValue(y(4))
		setValue(y(7))
		move(x(3) x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(y(0) x(0))
		inlineDot(x(0) compilerEngine x(1) cache)
		inlineDot(x(0) parseOzFile x(2) cache)
		inlineDot(x(0) parseOzVirtualString x(3) cache)
		inlineDot(x(0) genericInterface x(4) cache)
		inlineDot(x(0) quietInterface x(5) cache)
		inlineDot(x(0) evalExpression x(6) cache)
		inlineDot(x(0) virtualStringToValue x(7) cache)
		inlineDot(x(0) assemble x(0) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(10))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(6))
		unifyValue(x(4))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(5))
		unifyValue(x(7))
		deAllocateL
		return
		endDefinition(299127)
lbl(299595)	tailCall(x(2) 0)
		endDefinition(299118)
lbl(299600)	putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info ['from' type] x(3))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord(info [type] x(6))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord(info ['from' type] x(9))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putRecord(info [type] x(10))
		setConstant(nil)
		putRecord(info [type] x(11))
		setConstant(nil)
		putRecord(info [type] x(12))
		setConstant(nil)
		putRecord(info [type] x(13))
		setConstant(nil)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FS' 'Module' 'Parser' 'Property' 'RunTimeLibrary' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(value x(4))
		putConstant(value x(5))
		putConstant(value x(6))
		putConstant(value x(7))
		putConstant(value x(8))
		putConstant(value x(9))
		putConstant(value x(10))
		putConstant(value x(11))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(url ['functor' home pickle] y(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
		putConstant('BootManager' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putConstant('Pickle' x(4))
		callBI('BootManager' [x(4)]#[x(5)])
		inlineDot(x(5) save x(0) cache)
lbl(299787)	definition(x(2) 308295 pid('' 2 pos('./MakeAssembly.oz' 92 1) nil 3) <P: 1702> [y(230) y(191) y(224) y(91) y(92) y(159) y(184) y(1) y(146) y(47) y(24) y(48) y(23) y(49) y(53) y(39) y(52) y(55) y(158) y(0)])
		putList(x(0))
		setPredicateRef(<Q: 1703>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 1704>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1705>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1706>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1707>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1708>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1709>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1710>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1711>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1712>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1713>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1714>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1716>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1718>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1720>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1722>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1723>)
		setValue(x(2))
lbl(299919)	definitionCopy(x(0) 308290 pid('/body' 0 pos('./MakeAssembly.oz' 92 1) [once] 511) unit [g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) x(1)])
		allocateL(20)
		putRecord('export' [open] x(0))
		setConstant(unit)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FDB' 'FDP' 'FS' 'FSB' 'FSP' 'Module' 'OS' 'Open' 'Parser' 'Pickle' 'Property' 'Resolve' 'RunTimeLibrary' 'System' 'Type'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setValue(x(0))
		setValue(g(0))
		setVariable(y(17))
		setVariable(y(18))
		putConstant('BootManager' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
lbl(299986)	definition(x(1) 300023 pid('' 1 pos('./MakeAssembly.oz' 139 5) nil 3) <Q: 1703> nil)
		shallowGuard(300010)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(300002)	shallowThen
		callBI('BootManager' [x(1)]#[x(0)])
		unify(x(0) x(2))
		return
lbl(300010)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(299986)
lbl(300023)	putRecord('#' 2 x(3))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(5))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(7))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(9))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(11))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(13))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(15))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(17))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(19))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(21))
		setConstant('CompilerSupport')
		setValue(y(1))
		putRecord('#' 2 x(23))
		setConstant('Property')
		setValue(y(16))
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		move(x(0) y(19))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
lbl(300186)	definition(x(1) 300245 pid('' 1 pos('./MakeAssembly.oz' 152 5) nil 3) <Q: 1704> [y(0)])
		shallowGuard(300232)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(300202)	shallowThen
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		thread(300230)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(2) 2)
lbl(300230)	deAllocateL2
		return
lbl(300232)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(152)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(300186)
lbl(300245)	putRecord('#' 2 x(2))
		setValue(y(4))
		setValue(g(1))
		putRecord('#' 2 x(4))
		setValue(y(3))
		setValue(g(2))
		putRecord('#' 2 x(6))
		setValue(y(5))
		setValue(g(3))
		putRecord('#' 2 x(8))
		setValue(y(8))
		setValue(g(4))
		putRecord('#' 2 x(10))
		setValue(y(13))
		setValue(g(5))
		putRecord('#' 2 x(12))
		setValue(y(18))
		setValue(g(6))
		putRecord('#' 2 x(14))
		setVariable(y(0))
		setValue(g(7))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(b [manager] x(1))
		setValue(y(19))
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(3))
		setValue(x(1))
		setValue(y(12))
		setValue(y(15))
		setValue(y(17))
		move(x(3) x(0))
		move(y(11) x(1))
		call(x(2) 2)
lbl(300382)	definition(x(1) 300441 pid('' 1 pos('./MakeAssembly.oz' 168 5) nil 5) <Q: 1705> [y(11)])
		shallowGuard(300428)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(300398)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		putRecord('#' 2 x(4))
		setConstant('x-oz://boot/')
		setValue(x(1))
		move(x(2) x(0))
		move(x(4) x(1))
		tailSendMsg(enter x(3) [1 url] cache)
lbl(300428)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(168)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(300382)
lbl(300441)	putRecord('#' 2 x(2))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(4))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(6))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(8))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(10))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(12))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(14))
		setConstant('CompilerSupport')
		setValue(y(1))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(300542)	definition(x(1) 300590 pid('' 1 pos('./MakeAssembly.oz' 183 5) nil 4) <Q: 1706> [y(11)])
		shallowGuard(300577)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(300558)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		move(x(2) x(0))
		tailSendMsg(enter x(3) [1 name] cache)
lbl(300577)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(183)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(300542)
lbl(300590)	putRecord('#' 2 x(2))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(4))
		setConstant('Property')
		setValue(y(16))
		putRecord('#' 2 x(6))
		setConstant('ErrorRegistry')
		setValue(y(4))
		putRecord('#' 2 x(8))
		setConstant('Error')
		setValue(y(3))
		putRecord('#' 2 x(10))
		setConstant('FD')
		setValue(y(5))
		putRecord('#' 2 x(12))
		setConstant('FS')
		setValue(y(8))
		putRecord('#' 2 x(14))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(16))
		setConstant('Open')
		setValue(y(13))
		putRecord('#' 2 x(18))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(20))
		setConstant('Compiler')
		setValue(y(0))
		putRecord('#' 2 x(22))
		setConstant('Module')
		setValue(y(11))
		putList(x(21))
		setValue(x(22))
		setConstant(nil)
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(300747)	definition(x(2) 300887 pid('ConvertBooleanOpts' 2 pos('./BatchCompile.oz' 29 6) nil 12) <Q: 1707> nil)
		match(x(0) ht(300872 [onScalar(nil 300756) onRecord('|' 2 300760)]))
lbl(300756)	getLiteral(nil x(1))
		return
lbl(300760)	getVarVar(x(0) x(2))
		getRecord('#' 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		putConstant(type x(6))
		putConstant(unit x(7))
		callBI('CondSelect' [x(5) x(6) x(7)]#[x(8)])
		testLiteral(x(8) bool 300862)
lbl(300786)	getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(x(3))
		unifyValVar(x(4) x(6))
		getList(x(1))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord('#' 3 x(7))
		unifyLiteral(unit)
		unifyVariable(x(9))
		unifyVariable(x(10))
		getList(x(9))
		unifyNumber(110)
		unifyVariable(x(11))
		getList(x(11))
		unifyNumber(111)
		unifyValue(x(4))
		putConstant(value x(3))
		putConstant(true x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(6))
		putConstant(value x(3))
		putConstant(false x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(10))
		move(x(2) x(0))
		move(x(8) x(1))
		genFastCall(<Q: 1707> 5)
lbl(300862)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1707> 5)
lbl(300872)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(40)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(300747)
lbl(300887)	putList(x(5))
		setConstant(101)
		setConstant(nil)
		putList(x(4))
		setConstant(114)
		setValue(x(5))
		putList(x(3))
		setConstant(111)
		setValue(x(4))
		putList(x(2))
		setConstant(99)
		setValue(x(3))
		putRecord(mode [value] x(6))
		setConstant(core)
		putRecord('#' 3 x(1))
		setConstant(69)
		setValue(x(2))
		setValue(x(6))
		putList(x(18))
		setConstant(101)
		setConstant(nil)
		putList(x(17))
		setConstant(100)
		setValue(x(18))
		putList(x(16))
		setConstant(111)
		setValue(x(17))
		putList(x(15))
		setConstant(99)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(117)
		setValue(x(14))
		putList(x(12))
		setConstant(112)
		setValue(x(13))
		putList(x(11))
		setConstant(116)
		setValue(x(12))
		putList(x(10))
		setConstant(117)
		setValue(x(11))
		putList(x(9))
		setConstant(111)
		setValue(x(10))
		putRecord(mode [value] x(19))
		setConstant(outputcode)
		putRecord('#' 3 x(8))
		setConstant(83)
		setValue(x(9))
		setValue(x(19))
		putList(x(25))
		setConstant(97)
		setConstant(nil)
		putList(x(24))
		setConstant(109)
		setValue(x(25))
		putList(x(23))
		setConstant(122)
		setValue(x(24))
		putList(x(22))
		setConstant(111)
		setValue(x(23))
		putRecord(mode [value] x(26))
		setConstant(ozma)
		putRecord('#' 3 x(21))
		setConstant(115)
		setValue(x(22))
		setValue(x(26))
		putList(x(42))
		setConstant(114)
		setConstant(nil)
		putList(x(41))
		setConstant(111)
		setValue(x(42))
		putList(x(40))
		setConstant(116)
		setValue(x(41))
		putList(x(39))
		setConstant(97)
		setValue(x(40))
		putList(x(38))
		setConstant(108)
		setValue(x(39))
		putList(x(37))
		setConstant(117)
		setValue(x(38))
		putList(x(36))
		setConstant(109)
		setValue(x(37))
		putList(x(35))
		setConstant(101)
		setValue(x(36))
		putList(x(34))
		setConstant(111)
		setValue(x(35))
		putList(x(33))
		setConstant(116)
		setValue(x(34))
		putList(x(32))
		setConstant(100)
		setValue(x(33))
		putList(x(31))
		setConstant(101)
		setValue(x(32))
		putList(x(30))
		setConstant(101)
		setValue(x(31))
		putList(x(29))
		setConstant(102)
		setValue(x(30))
		putRecord(mode [value] x(43))
		setConstant(feedtoemulator)
		putRecord('#' 3 x(28))
		setConstant(101)
		setValue(x(29))
		setValue(x(43))
		putList(x(49))
		setConstant(112)
		setConstant(nil)
		putList(x(48))
		setConstant(109)
		setValue(x(49))
		putList(x(47))
		setConstant(117)
		setValue(x(48))
		putList(x(46))
		setConstant(100)
		setValue(x(47))
		putRecord(mode [value] x(50))
		setConstant(dump)
		putRecord('#' 3 x(45))
		setConstant(99)
		setValue(x(46))
		setValue(x(50))
		putList(x(58))
		setConstant(116)
		setConstant(nil)
		putList(x(57))
		setConstant(101)
		setValue(x(58))
		putList(x(56))
		setConstant(108)
		setValue(x(57))
		putList(x(55))
		setConstant(115)
		setValue(x(56))
		putList(x(54))
		setConstant(121)
		setValue(x(55))
		putList(x(53))
		setConstant(115)
		setValue(x(54))
		putRecord(mode [value] x(59))
		setConstant(syslet)
		putRecord('#' 3 x(52))
		setConstant(120)
		setValue(x(53))
		setValue(x(59))
		putList(x(71))
		setConstant(100)
		setConstant(nil)
		putList(x(70))
		setConstant(110)
		setValue(x(71))
		putList(x(69))
		setConstant(101)
		setValue(x(70))
		putList(x(68))
		setConstant(112)
		setValue(x(69))
		putList(x(67))
		setConstant(101)
		setValue(x(68))
		putList(x(66))
		setConstant(100)
		setValue(x(67))
		putList(x(65))
		setConstant(101)
		setValue(x(66))
		putList(x(64))
		setConstant(107)
		setValue(x(65))
		putList(x(63))
		setConstant(97)
		setValue(x(64))
		putList(x(62))
		setConstant(109)
		setValue(x(63))
		putRecord(makedepend [type] x(72))
		setConstant(bool)
		putRecord('#' 3 x(61))
		setConstant(77)
		setValue(x(62))
		setValue(x(72))
		putList(x(78))
		setConstant(112)
		setConstant(nil)
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(101)
		setValue(x(77))
		putList(x(75))
		setConstant(104)
		setValue(x(76))
		putRecord(help [value] x(79))
		setConstant(unit)
		putRecord('#' 3 x(74))
		setConstant(104)
		setValue(x(75))
		setValue(x(79))
		putRecord(help [value] x(82))
		setConstant(unit)
		putRecord('#' 3 x(81))
		setConstant(63)
		setConstant(unit)
		setValue(x(82))
		putList(x(90))
		setConstant(101)
		setConstant(nil)
		putList(x(89))
		setConstant(110)
		setValue(x(90))
		putList(x(88))
		setConstant(105)
		setValue(x(89))
		putList(x(87))
		setConstant(102)
		setValue(x(88))
		putList(x(86))
		setConstant(101)
		setValue(x(87))
		putList(x(85))
		setConstant(100)
		setValue(x(86))
		putRecord('define' [type] x(91))
		setConstant(atom)
		putRecord('#' 3 x(84))
		setConstant(68)
		setValue(x(85))
		setValue(x(91))
		putList(x(101))
		setConstant(101)
		setConstant(nil)
		putList(x(100))
		setConstant(110)
		setValue(x(101))
		putList(x(99))
		setConstant(105)
		setValue(x(100))
		putList(x(98))
		setConstant(102)
		setValue(x(99))
		putList(x(97))
		setConstant(101)
		setValue(x(98))
		putList(x(96))
		setConstant(100)
		setValue(x(97))
		putList(x(95))
		setConstant(110)
		setValue(x(96))
		putList(x(94))
		setConstant(117)
		setValue(x(95))
		putRecord(undef [type] x(102))
		setConstant(atom)
		putRecord('#' 3 x(93))
		setConstant(85)
		setValue(x(94))
		setValue(x(102))
		putList(x(111))
		setConstant(101)
		setConstant(nil)
		putList(x(110))
		setConstant(115)
		setValue(x(111))
		putList(x(109))
		setConstant(111)
		setValue(x(110))
		putList(x(108))
		setConstant(98)
		setValue(x(109))
		putList(x(107))
		setConstant(114)
		setValue(x(108))
		putList(x(106))
		setConstant(101)
		setValue(x(107))
		putList(x(105))
		setConstant(118)
		setValue(x(106))
		putRecord(verbose [value] x(112))
		setConstant(true)
		putRecord('#' 3 x(104))
		setConstant(118)
		setValue(x(105))
		setValue(x(112))
		putList(x(119))
		setConstant(116)
		setConstant(nil)
		putList(x(118))
		setConstant(101)
		setValue(x(119))
		putList(x(117))
		setConstant(105)
		setValue(x(118))
		putList(x(116))
		setConstant(117)
		setValue(x(117))
		putList(x(115))
		setConstant(113)
		setValue(x(116))
		putRecord(verbose [value] x(120))
		setConstant(false)
		putRecord('#' 3 x(114))
		setConstant(113)
		setValue(x(115))
		setValue(x(120))
		putList(x(132))
		setConstant(101)
		setConstant(nil)
		putList(x(131))
		setConstant(108)
		setValue(x(132))
		putList(x(130))
		setConstant(105)
		setValue(x(131))
		putList(x(129))
		setConstant(102)
		setValue(x(130))
		putList(x(128))
		setConstant(116)
		setValue(x(129))
		putList(x(127))
		setConstant(117)
		setValue(x(128))
		putList(x(126))
		setConstant(112)
		setValue(x(127))
		putList(x(125))
		setConstant(116)
		setValue(x(126))
		putList(x(124))
		setConstant(117)
		setValue(x(125))
		putList(x(123))
		setConstant(111)
		setValue(x(124))
		putRecord(outputfile [type] x(133))
		setConstant(string)
		putRecord('#' 3 x(122))
		setConstant(111)
		setValue(x(123))
		setValue(x(133))
		putList(x(146))
		setConstant(116)
		setConstant(nil)
		putList(x(145))
		setConstant(110)
		setValue(x(146))
		putList(x(144))
		setConstant(101)
		setValue(x(145))
		putList(x(143))
		setConstant(109)
		setValue(x(144))
		putList(x(142))
		setConstant(110)
		setValue(x(143))
		putList(x(141))
		setConstant(111)
		setValue(x(142))
		putList(x(140))
		setConstant(114)
		setValue(x(141))
		putList(x(139))
		setConstant(105)
		setValue(x(140))
		putList(x(138))
		setConstant(118)
		setValue(x(139))
		putList(x(137))
		setConstant(110)
		setValue(x(138))
		putList(x(136))
		setConstant(101)
		setValue(x(137))
		putRecord(environment [type] x(147))
		setConstant(string)
		putRecord('#' 3 x(135))
		setConstant(108)
		setValue(x(136))
		setValue(x(147))
		putList(x(155))
		setConstant(114)
		setConstant(nil)
		putList(x(154))
		setConstant(105)
		setValue(x(155))
		putList(x(153))
		setConstant(100)
		setValue(x(154))
		putList(x(152))
		setConstant(99)
		setValue(x(153))
		putList(x(151))
		setConstant(110)
		setValue(x(152))
		putList(x(150))
		setConstant(105)
		setValue(x(151))
		putRecord(incdir [type] x(156))
		setConstant(string)
		putRecord('#' 3 x(149))
		setConstant(73)
		setValue(x(150))
		setValue(x(156))
		putList(x(165))
		setConstant(101)
		setConstant(nil)
		putList(x(164))
		setConstant(100)
		setValue(x(165))
		putList(x(163))
		setConstant(117)
		setValue(x(164))
		putList(x(162))
		setConstant(108)
		setValue(x(163))
		putList(x(161))
		setConstant(99)
		setValue(x(162))
		putList(x(160))
		setConstant(110)
		setValue(x(161))
		putList(x(159))
		setConstant(105)
		setValue(x(160))
		putRecord(include [type] x(166))
		setConstant(string)
		putRecord('#' 3 x(158))
		setConstant(unit)
		setValue(x(159))
		setValue(x(166))
		putList(x(180))
		setConstant(120)
		setConstant(nil)
		putList(x(179))
		setConstant(105)
		setValue(x(180))
		putList(x(178))
		setConstant(102)
		setValue(x(179))
		putList(x(177))
		setConstant(101)
		setValue(x(178))
		putList(x(176))
		setConstant(114)
		setValue(x(177))
		putList(x(175))
		setConstant(112)
		setValue(x(176))
		putList(x(174))
		setConstant(116)
		setValue(x(175))
		putList(x(173))
		setConstant(101)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(115)
		setValue(x(172))
		putList(x(170))
		setConstant(121)
		setValue(x(171))
		putList(x(169))
		setConstant(115)
		setValue(x(170))
		putRecord(sysletprefix [type] x(181))
		setConstant(string)
		putRecord('#' 3 x(168))
		setConstant(unit)
		setValue(x(169))
		setValue(x(181))
		putList(x(192))
		setConstant(115)
		setConstant(nil)
		putList(x(191))
		setConstant(114)
		setValue(x(192))
		putList(x(190))
		setConstant(111)
		setValue(x(191))
		putList(x(189))
		setConstant(114)
		setValue(x(190))
		putList(x(188))
		setConstant(114)
		setValue(x(189))
		putList(x(187))
		setConstant(101)
		setValue(x(188))
		putList(x(186))
		setConstant(120)
		setValue(x(187))
		putList(x(185))
		setConstant(97)
		setValue(x(186))
		putList(x(184))
		setConstant(109)
		setValue(x(185))
		putRecord(maxerrors [type] x(193))
		setConstant(int)
		putRecord('#' 3 x(183))
		setConstant(unit)
		setValue(x(184))
		setValue(x(193))
		putList(x(209))
		setConstant(115)
		setConstant(nil)
		putList(x(208))
		setConstant(101)
		setValue(x(209))
		putList(x(207))
		setConstant(115)
		setValue(x(208))
		putList(x(206))
		setConstant(115)
		setValue(x(207))
		putList(x(205))
		setConstant(97)
		setValue(x(206))
		putList(x(204))
		setConstant(112)
		setValue(x(205))
		putList(x(203))
		setConstant(114)
		setValue(x(204))
		putList(x(202))
		setConstant(101)
		setValue(x(203))
		putList(x(201))
		setConstant(108)
		setValue(x(202))
		putList(x(200))
		setConstant(105)
		setValue(x(201))
		putList(x(199))
		setConstant(112)
		setValue(x(200))
		putList(x(198))
		setConstant(109)
		setValue(x(199))
		putList(x(197))
		setConstant(111)
		setValue(x(198))
		putList(x(196))
		setConstant(99)
		setValue(x(197))
		putRecord(compilerpasses [type] x(210))
		setConstant(bool)
		putRecord('#' 3 x(195))
		setConstant(unit)
		setValue(x(196))
		setValue(x(210))
		putList(x(222))
		setConstant(116)
		setConstant(nil)
		putList(x(221))
		setConstant(114)
		setValue(x(222))
		putList(x(220))
		setConstant(101)
		setValue(x(221))
		putList(x(219))
		setConstant(115)
		setValue(x(220))
		putList(x(218))
		setConstant(110)
		setValue(x(219))
		putList(x(217))
		setConstant(105)
		setValue(x(218))
		putList(x(216))
		setConstant(119)
		setValue(x(217))
		putList(x(215))
		setConstant(111)
		setValue(x(216))
		putList(x(214))
		setConstant(104)
		setValue(x(215))
		putList(x(213))
		setConstant(115)
		setValue(x(214))
		putRecord(showinsert [type] x(223))
		setConstant(bool)
		putRecord('#' 3 x(212))
		setConstant(unit)
		setValue(x(213))
		setValue(x(223))
		putList(x(236))
		setConstant(115)
		setConstant(nil)
		putList(x(235))
		setConstant(101)
		setValue(x(236))
		putList(x(234))
		setConstant(105)
		setValue(x(235))
		putList(x(233))
		setConstant(114)
		setValue(x(234))
		putList(x(232))
		setConstant(101)
		setValue(x(233))
		putList(x(231))
		setConstant(117)
		setValue(x(232))
		putList(x(230))
		setConstant(113)
		setValue(x(231))
		putList(x(229))
		setConstant(111)
		setValue(x(230))
		putList(x(228))
		setConstant(104)
		setValue(x(229))
		putList(x(227))
		setConstant(99)
		setValue(x(228))
		putList(x(226))
		setConstant(101)
		setValue(x(227))
		putRecord(echoqueries [type] x(237))
		setConstant(bool)
		putRecord('#' 3 x(225))
		setConstant(unit)
		setValue(x(226))
		setValue(x(237))
		putList(x(251))
		setConstant(115)
		setConstant(nil)
		putList(x(250))
		setConstant(101)
		setValue(x(251))
		putList(x(249))
		setConstant(114)
		setValue(x(250))
		putList(x(248))
		setConstant(97)
		setValue(x(249))
		putList(x(247))
		setConstant(108)
		setValue(x(248))
		putList(x(246))
		setConstant(99)
		setValue(x(247))
		putList(x(245))
		setConstant(101)
		setValue(x(246))
		putList(x(244))
		setConstant(100)
		setValue(x(245))
		putList(x(243))
		setConstant(119)
		setValue(x(244))
		putList(x(242))
		setConstant(111)
		setValue(x(243))
		putList(x(241))
		setConstant(104)
		setValue(x(242))
		putList(x(240))
		setConstant(115)
		setValue(x(241))
		putRecord(showdeclares [type] x(252))
		setConstant(bool)
		putRecord('#' 3 x(239))
		setConstant(unit)
		setValue(x(240))
		setValue(x(252))
		putList(x(269))
		setConstant(101)
		setConstant(nil)
		putList(x(268))
		setConstant(109)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(116)
		setValue(x(267))
		putList(x(265))
		setConstant(101)
		setValue(x(266))
		putList(x(264))
		setConstant(108)
		setValue(x(265))
		putList(x(263))
		setConstant(105)
		setValue(x(264))
		putList(x(262))
		setConstant(112)
		setValue(x(263))
		putList(x(261))
		setConstant(109)
		setValue(x(262))
		putList(x(260))
		setConstant(111)
		setValue(x(261))
		putList(x(259))
		setConstant(99)
		setValue(x(260))
		putList(x(258))
		setConstant(119)
		setValue(x(259))
		putList(x(257))
		setConstant(111)
		setValue(x(258))
		putList(x(256))
		setConstant(104)
		setValue(x(257))
		putList(x(255))
		setConstant(115)
		setValue(x(256))
		putRecord(showcompiletime [type] x(270))
		setConstant(bool)
		putRecord('#' 3 x(254))
		setConstant(unit)
		setValue(x(255))
		setValue(x(270))
		putList(x(289))
		setConstant(121)
		setConstant(nil)
		putList(x(288))
		setConstant(114)
		setValue(x(289))
		putList(x(287))
		setConstant(111)
		setValue(x(288))
		putList(x(286))
		setConstant(109)
		setValue(x(287))
		putList(x(285))
		setConstant(101)
		setValue(x(286))
		putList(x(284))
		setConstant(109)
		setValue(x(285))
		putList(x(283))
		setConstant(101)
		setValue(x(284))
		putList(x(282))
		setConstant(108)
		setValue(x(283))
		putList(x(281))
		setConstant(105)
		setValue(x(282))
		putList(x(280))
		setConstant(112)
		setValue(x(281))
		putList(x(279))
		setConstant(109)
		setValue(x(280))
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(99)
		setValue(x(278))
		putList(x(276))
		setConstant(119)
		setValue(x(277))
		putList(x(275))
		setConstant(111)
		setValue(x(276))
		putList(x(274))
		setConstant(104)
		setValue(x(275))
		putList(x(273))
		setConstant(115)
		setValue(x(274))
		putRecord(showcompilememory [type] x(290))
		setConstant(bool)
		putRecord('#' 3 x(272))
		setConstant(unit)
		setValue(x(273))
		setValue(x(290))
		putList(x(300))
		setConstant(103)
		setConstant(nil)
		putList(x(299))
		setConstant(111)
		setValue(x(300))
		putList(x(298))
		setConstant(100)
		setValue(x(299))
		putList(x(297))
		setConstant(104)
		setValue(x(298))
		putList(x(296))
		setConstant(99)
		setValue(x(297))
		putList(x(295))
		setConstant(116)
		setValue(x(296))
		putList(x(294))
		setConstant(97)
		setValue(x(295))
		putList(x(293))
		setConstant(119)
		setValue(x(294))
		putRecord(watchdog [type] x(301))
		setConstant(bool)
		putRecord('#' 3 x(292))
		setConstant(unit)
		setValue(x(293))
		setValue(x(301))
		putList(x(313))
		setConstant(108)
		setConstant(nil)
		putList(x(312))
		setConstant(99)
		setValue(x(313))
		putList(x(311))
		setConstant(101)
		setValue(x(312))
		putList(x(310))
		setConstant(100)
		setValue(x(311))
		putList(x(309))
		setConstant(101)
		setValue(x(310))
		putList(x(308))
		setConstant(114)
		setValue(x(309))
		putList(x(307))
		setConstant(110)
		setValue(x(308))
		putList(x(306))
		setConstant(114)
		setValue(x(307))
		putList(x(305))
		setConstant(97)
		setValue(x(306))
		putList(x(304))
		setConstant(119)
		setValue(x(305))
		putRecord(warnredecl [type] x(314))
		setConstant(bool)
		putRecord('#' 3 x(303))
		setConstant(unit)
		setValue(x(304))
		setValue(x(314))
		putList(x(326))
		setConstant(100)
		setConstant(nil)
		putList(x(325))
		setConstant(101)
		setValue(x(326))
		putList(x(324))
		setConstant(115)
		setValue(x(325))
		putList(x(323))
		setConstant(117)
		setValue(x(324))
		putList(x(322))
		setConstant(110)
		setValue(x(323))
		putList(x(321))
		setConstant(117)
		setValue(x(322))
		putList(x(320))
		setConstant(110)
		setValue(x(321))
		putList(x(319))
		setConstant(114)
		setValue(x(320))
		putList(x(318))
		setConstant(97)
		setValue(x(319))
		putList(x(317))
		setConstant(119)
		setValue(x(318))
		putRecord(warnunused [type] x(327))
		setConstant(bool)
		putRecord('#' 3 x(316))
		setConstant(unit)
		setValue(x(317))
		setValue(x(327))
		putList(x(346))
		setConstant(115)
		setConstant(nil)
		putList(x(345))
		setConstant(108)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(114)
		setValue(x(343))
		putList(x(341))
		setConstant(111)
		setValue(x(342))
		putList(x(340))
		setConstant(102)
		setValue(x(341))
		putList(x(339))
		setConstant(100)
		setValue(x(340))
		putList(x(338))
		setConstant(101)
		setValue(x(339))
		putList(x(337))
		setConstant(115)
		setValue(x(338))
		putList(x(336))
		setConstant(117)
		setValue(x(337))
		putList(x(335))
		setConstant(110)
		setValue(x(336))
		putList(x(334))
		setConstant(117)
		setValue(x(335))
		putList(x(333))
		setConstant(110)
		setValue(x(334))
		putList(x(332))
		setConstant(114)
		setValue(x(333))
		putList(x(331))
		setConstant(97)
		setValue(x(332))
		putList(x(330))
		setConstant(119)
		setValue(x(331))
		putRecord(warnunused [type] x(347))
		setConstant(bool)
		putRecord('#' 3 x(329))
		setConstant(unit)
		setValue(x(330))
		setValue(x(347))
		putList(x(360))
		setConstant(100)
		setConstant(nil)
		putList(x(359))
		setConstant(114)
		setValue(x(360))
		putList(x(358))
		setConstant(97)
		setValue(x(359))
		putList(x(357))
		setConstant(119)
		setValue(x(358))
		putList(x(356))
		setConstant(114)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(102)
		setValue(x(355))
		putList(x(353))
		setConstant(110)
		setValue(x(354))
		putList(x(352))
		setConstant(114)
		setValue(x(353))
		putList(x(351))
		setConstant(97)
		setValue(x(352))
		putList(x(350))
		setConstant(119)
		setValue(x(351))
		putRecord(warnforward [type] x(361))
		setConstant(bool)
		putRecord('#' 3 x(349))
		setConstant(unit)
		setValue(x(350))
		setValue(x(361))
		putList(x(370))
		setConstant(116)
		setConstant(nil)
		putList(x(369))
		setConstant(112)
		setValue(x(370))
		putList(x(368))
		setConstant(111)
		setValue(x(369))
		putList(x(367))
		setConstant(110)
		setValue(x(368))
		putList(x(366))
		setConstant(114)
		setValue(x(367))
		putList(x(365))
		setConstant(97)
		setValue(x(366))
		putList(x(364))
		setConstant(119)
		setValue(x(365))
		putRecord(warnopt [type] x(371))
		setConstant(bool)
		putRecord('#' 3 x(363))
		setConstant(unit)
		setValue(x(364))
		setValue(x(371))
		putList(x(388))
		setConstant(100)
		setConstant(nil)
		putList(x(387))
		setConstant(101)
		setValue(x(388))
		putList(x(386))
		setConstant(116)
		setValue(x(387))
		putList(x(385))
		setConstant(97)
		setValue(x(386))
		putList(x(384))
		setConstant(99)
		setValue(x(385))
		putList(x(383))
		setConstant(101)
		setValue(x(384))
		putList(x(382))
		setConstant(114)
		setValue(x(383))
		putList(x(381))
		setConstant(112)
		setValue(x(382))
		putList(x(380))
		setConstant(101)
		setValue(x(381))
		putList(x(379))
		setConstant(100)
		setValue(x(380))
		putList(x(378))
		setConstant(119)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(108)
		setValue(x(377))
		putList(x(375))
		setConstant(108)
		setValue(x(376))
		putList(x(374))
		setConstant(97)
		setValue(x(375))
		putRecord(allowdeprecated [type] x(389))
		setConstant(bool)
		putRecord('#' 3 x(373))
		setConstant(unit)
		setValue(x(374))
		setValue(x(389))
		putList(x(395))
		setConstant(112)
		setConstant(nil)
		putList(x(394))
		setConstant(109)
		setValue(x(395))
		putList(x(393))
		setConstant(117)
		setValue(x(394))
		putList(x(392))
		setConstant(103)
		setValue(x(393))
		putRecord(gump [type] x(396))
		setConstant(bool)
		putRecord('#' 3 x(391))
		setConstant(unit)
		setValue(x(392))
		setValue(x(396))
		putList(x(412))
		setConstant(115)
		setConstant(nil)
		putList(x(411))
		setConstant(105)
		setValue(x(412))
		putList(x(410))
		setConstant(115)
		setValue(x(411))
		putList(x(409))
		setConstant(121)
		setValue(x(410))
		putList(x(408))
		setConstant(108)
		setValue(x(409))
		putList(x(407))
		setConstant(97)
		setValue(x(408))
		putList(x(406))
		setConstant(110)
		setValue(x(407))
		putList(x(405))
		setConstant(97)
		setValue(x(406))
		putList(x(404))
		setConstant(99)
		setValue(x(405))
		putList(x(403))
		setConstant(105)
		setValue(x(404))
		putList(x(402))
		setConstant(116)
		setValue(x(403))
		putList(x(401))
		setConstant(97)
		setValue(x(402))
		putList(x(400))
		setConstant(116)
		setValue(x(401))
		putList(x(399))
		setConstant(115)
		setValue(x(400))
		putRecord(staticanalysis [type] x(413))
		setConstant(bool)
		putRecord('#' 3 x(398))
		setConstant(unit)
		setValue(x(399))
		setValue(x(413))
		putList(x(423))
		setConstant(101)
		setConstant(nil)
		putList(x(422))
		setConstant(114)
		setValue(x(423))
		putList(x(421))
		setConstant(111)
		setValue(x(422))
		putList(x(420))
		setConstant(99)
		setValue(x(421))
		putList(x(419))
		setConstant(108)
		setValue(x(420))
		putList(x(418))
		setConstant(97)
		setValue(x(419))
		putList(x(417))
		setConstant(101)
		setValue(x(418))
		putList(x(416))
		setConstant(114)
		setValue(x(417))
		putRecord(realcore [type] x(424))
		setConstant(bool)
		putRecord('#' 3 x(415))
		setConstant(unit)
		setValue(x(416))
		setValue(x(424))
		putList(x(436))
		setConstant(101)
		setConstant(nil)
		putList(x(435))
		setConstant(117)
		setValue(x(436))
		putList(x(434))
		setConstant(108)
		setValue(x(435))
		putList(x(433))
		setConstant(97)
		setValue(x(434))
		putList(x(432))
		setConstant(118)
		setValue(x(433))
		putList(x(431))
		setConstant(103)
		setValue(x(432))
		putList(x(430))
		setConstant(117)
		setValue(x(431))
		putList(x(429))
		setConstant(98)
		setValue(x(430))
		putList(x(428))
		setConstant(101)
		setValue(x(429))
		putList(x(427))
		setConstant(100)
		setValue(x(428))
		putRecord(debugvalue [type] x(437))
		setConstant(bool)
		putRecord('#' 3 x(426))
		setConstant(unit)
		setValue(x(427))
		setValue(x(437))
		putList(x(448))
		setConstant(101)
		setConstant(nil)
		putList(x(447))
		setConstant(112)
		setValue(x(448))
		putList(x(446))
		setConstant(121)
		setValue(x(447))
		putList(x(445))
		setConstant(116)
		setValue(x(446))
		putList(x(444))
		setConstant(103)
		setValue(x(445))
		putList(x(443))
		setConstant(117)
		setValue(x(444))
		putList(x(442))
		setConstant(98)
		setValue(x(443))
		putList(x(441))
		setConstant(101)
		setValue(x(442))
		putList(x(440))
		setConstant(100)
		setValue(x(441))
		putRecord(debugtype [type] x(449))
		setConstant(bool)
		putRecord('#' 3 x(439))
		setConstant(unit)
		setValue(x(440))
		setValue(x(449))
		putList(x(458))
		setConstant(101)
		setConstant(nil)
		putList(x(457))
		setConstant(108)
		setValue(x(458))
		putList(x(456))
		setConstant(105)
		setValue(x(457))
		putList(x(455))
		setConstant(102)
		setValue(x(456))
		putList(x(454))
		setConstant(111)
		setValue(x(455))
		putList(x(453))
		setConstant(114)
		setValue(x(454))
		putList(x(452))
		setConstant(112)
		setValue(x(453))
		putRecord(profile [type] x(459))
		setConstant(bool)
		putRecord('#' 3 x(451))
		setConstant(112)
		setValue(x(452))
		setValue(x(459))
		putList(x(477))
		setConstant(108)
		setConstant(nil)
		putList(x(476))
		setConstant(111)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(110)
		setValue(x(474))
		putList(x(472))
		setConstant(111)
		setValue(x(473))
		putList(x(471))
		setConstant(99)
		setValue(x(472))
		putList(x(470))
		setConstant(111)
		setValue(x(471))
		putList(x(469))
		setConstant(102)
		setValue(x(470))
		putList(x(468))
		setConstant(110)
		setValue(x(469))
		putList(x(467))
		setConstant(105)
		setValue(x(468))
		putList(x(466))
		setConstant(103)
		setValue(x(467))
		putList(x(465))
		setConstant(117)
		setValue(x(466))
		putList(x(464))
		setConstant(98)
		setValue(x(465))
		putList(x(463))
		setConstant(101)
		setValue(x(464))
		putList(x(462))
		setConstant(100)
		setValue(x(463))
		putRecord(debuginfocontrol [type] x(478))
		setConstant(bool)
		putRecord('#' 3 x(461))
		setConstant(unit)
		setValue(x(462))
		setValue(x(478))
		putList(x(497))
		setConstant(115)
		setConstant(nil)
		putList(x(496))
		setConstant(101)
		setValue(x(497))
		putList(x(495))
		setConstant(109)
		setValue(x(496))
		putList(x(494))
		setConstant(97)
		setValue(x(495))
		putList(x(493))
		setConstant(110)
		setValue(x(494))
		putList(x(492))
		setConstant(114)
		setValue(x(493))
		putList(x(491))
		setConstant(97)
		setValue(x(492))
		putList(x(490))
		setConstant(118)
		setValue(x(491))
		putList(x(489))
		setConstant(111)
		setValue(x(490))
		putList(x(488))
		setConstant(102)
		setValue(x(489))
		putList(x(487))
		setConstant(110)
		setValue(x(488))
		putList(x(486))
		setConstant(105)
		setValue(x(487))
		putList(x(485))
		setConstant(103)
		setValue(x(486))
		putList(x(484))
		setConstant(117)
		setValue(x(485))
		putList(x(483))
		setConstant(98)
		setValue(x(484))
		putList(x(482))
		setConstant(101)
		setValue(x(483))
		putList(x(481))
		setConstant(100)
		setValue(x(482))
		putRecord(debuginfovarnames [type] x(498))
		setConstant(bool)
		putRecord('#' 3 x(480))
		setConstant(unit)
		setValue(x(481))
		setValue(x(498))
		putList(x(509))
		setConstant(111)
		setConstant(nil)
		putList(x(508))
		setConstant(102)
		setValue(x(509))
		putList(x(507))
		setConstant(110)
		setValue(x(508))
		putList(x(506))
		setConstant(105)
		setValue(x(507))
		putList(x(505))
		setConstant(103)
		setValue(x(506))
		putList(x(504))
		setConstant(117)
		setValue(x(505))
		putList(x(503))
		setConstant(98)
		setValue(x(504))
		putList(x(502))
		setConstant(101)
		setValue(x(503))
		putList(x(501))
		setConstant(100)
		setValue(x(502))
		putRecord(debuginfo [type] x(510))
		setConstant(bool)
		putRecord('#' 3 x(500))
		setConstant(103)
		setValue(x(501))
		setValue(x(510))
		putList(x(499))
		setValue(x(500))
		setConstant(nil)
		putList(x(479))
		setValue(x(480))
		setValue(x(499))
		putList(x(460))
		setValue(x(461))
		setValue(x(479))
		putList(x(450))
		setValue(x(451))
		setValue(x(460))
		putList(x(438))
		setValue(x(439))
		setValue(x(450))
		putList(x(425))
		setValue(x(426))
		setValue(x(438))
		putList(x(414))
		setValue(x(415))
		setValue(x(425))
		putList(x(397))
		setValue(x(398))
		setValue(x(414))
		putList(x(390))
		setValue(x(391))
		setValue(x(397))
		putList(x(372))
		setValue(x(373))
		setValue(x(390))
		putList(x(362))
		setValue(x(363))
		setValue(x(372))
		putList(x(348))
		setValue(x(349))
		setValue(x(362))
		putList(x(328))
		setValue(x(329))
		setValue(x(348))
		putList(x(315))
		setValue(x(316))
		setValue(x(328))
		putList(x(302))
		setValue(x(303))
		setValue(x(315))
		putList(x(291))
		setValue(x(292))
		setValue(x(302))
		putList(x(271))
		setValue(x(272))
		setValue(x(291))
		putList(x(253))
		setValue(x(254))
		setValue(x(271))
		putList(x(238))
		setValue(x(239))
		setValue(x(253))
		putList(x(224))
		setValue(x(225))
		setValue(x(238))
		putList(x(211))
		setValue(x(212))
		setValue(x(224))
		putList(x(194))
		setValue(x(195))
		setValue(x(211))
		putList(x(182))
		setValue(x(183))
		setValue(x(194))
		putList(x(167))
		setValue(x(168))
		setValue(x(182))
		putList(x(157))
		setValue(x(158))
		setValue(x(167))
		putList(x(148))
		setValue(x(149))
		setValue(x(157))
		putList(x(134))
		setValue(x(135))
		setValue(x(148))
		putList(x(121))
		setValue(x(122))
		setValue(x(134))
		putList(x(113))
		setValue(x(114))
		setValue(x(121))
		putList(x(103))
		setValue(x(104))
		setValue(x(113))
		putList(x(92))
		setValue(x(93))
		setValue(x(103))
		putList(x(83))
		setValue(x(84))
		setValue(x(92))
		putList(x(80))
		setValue(x(81))
		setValue(x(83))
		putList(x(73))
		setValue(x(74))
		setValue(x(80))
		putList(x(60))
		setValue(x(61))
		setValue(x(73))
		putList(x(51))
		setValue(x(52))
		setValue(x(60))
		putList(x(44))
		setValue(x(45))
		setValue(x(51))
		putList(x(27))
		setValue(x(28))
		setValue(x(44))
		putList(x(20))
		setValue(x(21))
		setValue(x(27))
		putList(x(7))
		setValue(x(8))
		setValue(x(20))
		putList(x(0))
		setValue(x(1))
		setValue(x(7))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1707> 4)
		putRecord('#' 53 y(2))
		setConstant('You have to choose one of the following modes of operation:\n')
		setConstant('-h, -?, --help                Output usage information and exit.\n')
		setConstant('-E, --core                    Transform a statement into core language\n')
		setConstant('                              (file extension: .ozi).\n')
		setConstant('-S, --outputcode              Compile a statement to assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-s, --ozma                    Compile a statement to Ozma assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-e, --feedtoemulator          Compile and execute a statement.\n')
		setConstant('                              This is the default mode.\n')
		setConstant('-c, --dump                    Compile and evaluate an expression,\n')
		setConstant('                              pickling the result\n')
		setConstant('                              (file extension: .ozf).\n')
		setConstant('-x, --syslet                  Compile and evaluate an expression,\n')
		setConstant('                              making a syslet of the result\n')
		setConstant('                              (file extension: none).\n')
		setConstant('\n')
		setConstant('Additionally, you may specify the following options:\n')
		setConstant('-M, --makedepend              Instead of executing, write a list\n')
		setConstant('                              of dependencies to stdout.\n')
		setConstant('-D NAME, --define=NAME        Define macro name NAME.\n')
		setConstant('-U NAME, --undefine=NAME      Undefine macro name NAME.\n')
		setConstant('-v, --verbose                 Display all compiler messages.\n')
		setConstant('-q, --quiet                   Inhibit compiler messages\n')
		setConstant('                              unless an error is encountered.\n')
		setConstant('-o FILE, --outputfile=FILE    Write output to FILE (`-\' for stdout).\n')
		setConstant('-l FNCS, --environment=FNCS   Make functors FNCS (a comma-separated\n')
		setConstant('                              pair list VAR=URL) available in the\n')
		setConstant('                              environment.\n')
		setConstant('-I DIR, --incdir=DIR          Add DIR to the head of OZPATH.\n')
		setConstant('--include=FILE                Compile and execute the statement in FILE\n')
		setConstant('                              before processing the remaining options.\n')
		setConstant('--sysletprefix=STRING         Use STRING as prefix to syslets (default:\n')
		setConstant('                              "#!/bin/sh\\nexec ozengine $0 "$@"\\n").')
		setConstant('\n')
		setConstant('The following compiler switches have the described effects when set:\n')
		setConstant('--maxerrors=N                 Limit the number of errors reported to N.\n')
		setConstant('--(no)compilerpasses          Show compiler passes.\n')
		setConstant('--(no)warnredecl              Warn about top-level redeclarations.\n')
		setConstant('--(no)warnunused              Warn about unused variables.\n')
		setConstant('--(no)warnunusedformals       Warn about unused variables and formals.\n')
		setConstant('--(no)warnforward             Warn about oo forward declarations.\n')
		setConstant('--(no)warnopt                 Warn about missed optimizations.\n')
		setConstant('--(no)allowdeprecated         Allow use of deprecated syntax.\n')
		setConstant('--(no)gump                    Allow Gump definitions.\n')
		setConstant('--(no)staticanalysis          Run static analysis.\n')
		setConstant('--(no)realcore                Output the real non-fancy core syntax.\n')
		setConstant('--(no)debugvalue              Annotate variable values in core output.\n')
		setConstant('--(no)debugtype               Annotate variable types in core output.\n')
		setConstant('-p, --(no)profile             Include profiling information.\n')
		setConstant('--(no)debuginfocontrol        Include control flow information.\n')
		setConstant('--(no)debuginfovarnames       Include variable information.\n')
		setConstant('-g, --(no)debuginfo           Both of the above.\n')
lbl(304233)	definition(x(0) 304270 pid('SignConvert' 2 pos('./BatchCompile.oz' 143 6) nil 4) <Q: 1708> nil)
lbl(304239)	definition(x(3) 304259 pid('' 2 pos('./BatchCompile.oz' 144 9) nil 2) unit nil)
		testNumber(x(0) 45 304253)
		getNumber(126 x(1))
		return
lbl(304253)	unify(x(1) x(0))
		return
		endDefinition(304239)
lbl(304259)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(304233)
lbl(304270)	definition(x(0) 304505 pid('ParseOptArg' 4 pos('./BatchCompile.oz' 147 6) nil 6) <Q: 1709> [g(9) g(10) g(11) g(12) g(13)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(5)] 304305)
		inlineDot(x(0) value x(4) cache)
		unify(x(4) y(2))
		unify(x(3) x(1))
		branch(304484)
lbl(304305)	match(x(1) ht(304471 [onScalar(nil 304308) onRecord('|' 2 304317)]))
lbl(304308)	putRecord(usage 1 x(1))
		setConstant('missing argument')
		callBI('Exception.raise' [x(1)]#nil)
lbl(304317)	getVarVar(x(1) x(4))
		inlineDot(x(0) type x(5) cache)
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		match(x(5) ht(304453 [onScalar(string 304334) onScalar(atom 304339) onScalar(int 304347) onScalar(float 304400)]))
lbl(304334)	unify(y(2) x(1))
		branch(304466)
lbl(304339)	callBI('StringToAtom' [x(1)]#[x(5)])
		unify(x(5) y(2))
		branch(304466)
lbl(304347)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1708> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 5> 4)
		testBool(y(6) 304380 304389)
		move(y(5) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(304466)
lbl(304380)	putRecord(usage 1 x(0))
		setConstant('integer argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(304389)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(158)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304400)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1708> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 6> 4)
		testBool(y(6) 304433 304442)
		move(y(5) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(304466)
lbl(304433)	putRecord(usage 1 x(0))
		setConstant('float argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(304442)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(164)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304453)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(304466)	unify(y(3) y(4))
		branch(304484)
lbl(304471)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(173)
		setValue(x(1))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(304484)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL7
		return
		endDefinition(304270)
lbl(304505)	definition(x(0) 304560 pid('GetOptSpec' 3 pos('./BatchCompile.oz' 178 6) nil 6) <Q: 1710> nil)
		match(x(0) ht(304545 [onScalar(nil 304514) onRecord('|' 2 304518)]))
lbl(304514)	getLiteral(unit x(2))
		return
lbl(304518)	getVarVar(x(0) x(3))
		getRecord('#' 3 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 304539)
		unify(x(2) x(4))
		return
lbl(304539)	move(x(3) x(0))
		genFastCall(<Q: 1710> 7)
lbl(304545)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(184)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(304505)
lbl(304560)	definition(x(0) 304703 pid('ParseOpt' 5 pos('./BatchCompile.oz' 187 6) nil 5) <Q: 1711> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1710> 6)
		testLiteral(y(5) unit 304621)
lbl(304596)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord('#' 3 x(1))
		setConstant('unknown option `-')
		setValue(x(2))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(304621)	testLiteral(y(1) nil 304639)
lbl(304625)	moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1709> 9)
lbl(304639)	move(y(5) x(0))
		putConstant(value x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 304686)
		getRecord('#' 2 y(3))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(2))
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyNumber(45)
		unifyValue(y(1))
		deAllocateL6
		return
lbl(304686)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1709> 9)
		endDefinition(304560)
lbl(304703)	definition(x(0) 304806 pid('IsPrefix' 5 pos('./BatchCompile.oz' 204 6) nil 8) <Q: 1712> nil)
		match(x(0) ht(304791 [onScalar(nil 304712) onRecord('|' 2 304728)]))
lbl(304712)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		getLiteral(unit x(3))
		getLiteral(true x(4))
		return
lbl(304728)	getVarVar(x(0) x(5))
		testNumber(x(0) 61 304751)
lbl(304735)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(6)])
		unify(x(6) x(2))
		unify(x(3) x(5))
		getLiteral(true x(4))
		return
lbl(304751)	match(x(1) ht(304778 [onScalar(nil 304754) onRecord('|' 2 304758)]))
lbl(304754)	getLiteral(false x(4))
		return
lbl(304758)	getVarVar(x(1) x(6))
		testBI('==' [x(0) x(1)]#[x(7)] 304774)
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 1712> 11)
lbl(304774)	getLiteral(false x(4))
		return
lbl(304778)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304791)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(218)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(304703)
lbl(304806)	definition(x(0) 305021 pid('GetLongOptSpec' 5 pos('./BatchCompile.oz' 221 6) nil 7) <Q: 1713> nil)
		match(x(0) ht(305006 [onScalar(nil 304815) onRecord('|' 2 304819)]))
lbl(304815)	getLiteral(unit x(4))
		return
lbl(304819)	allocateL10
		getVarVar(x(0) x(5))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(x(0) unit 304867)
lbl(304850)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL10
		genFastCall(<Q: 1713> 11)
lbl(304867)	move(x(6) y(5))
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1712> 10)
		testBool(y(8) 304850 304995)
lbl(304892)	testBool(y(6) 304907 304984)
		getLiteral(true y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(304907)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genFastCall(<Q: 1713> 10)
		testLiteral(y(9) unit 304939)
		getLiteral(false y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(304939)	testBool(y(6) 304954 304973)
		getLiteral(true y(1))
		unify(y(2) y(8))
		unify(y(9) y(3))
		deAllocateL10
		return
lbl(304954)	putRecord('#' 3 x(1))
		setConstant('ambiguous option prefix `')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(304973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304984)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304995)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(226)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305006)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(304806)
lbl(305021)	definition(x(0) 305169 pid('ParseLongOpt' 4 pos('./BatchCompile.oz' 255 6) nil 5) <Q: 1714> [y(1)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1713> 10)
		testLiteral(y(5) unit 305078)
lbl(305059)	putRecord('#' 3 x(1))
		setConstant('unknown option `--')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(305078)	createVariable(y(6))
		testLiteral(y(4) unit 305118)
lbl(305084)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 305099)
		unify(y(6) y(1))
		branch(305153)
lbl(305099)	putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' expects an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(305118)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 305147)
		putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' does not expect an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(305147)	getList(y(6))
		unifyValue(y(4))
		unifyValue(y(1))
lbl(305153)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<Q: 1709> 9)
		endDefinition(305021)
lbl(305169)	definition(x(0) 305324 pid('ParseArgs' 3 pos('./BatchCompile.oz' 281 6) nil 6) <Q: 1715> nil)
		match(x(0) ht(305309 [onScalar(nil 305178) onRecord('|' 2 305185)]))
lbl(305178)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(305185)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testList(y(0) 305295)
lbl(305200)	getVarVar(x(3) x(4))
		testNumber(x(3) 45 305295)
		createVariable(y(0))
		createVariable(y(4))
		move(x(4) y(5))
		testList(y(5) 305240)
lbl(305217)	getVarVar(x(3) x(5))
		testNumber(x(3) 45 305240)
		move(x(5) x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		move(y(4) x(3))
		genFastCall(<Q: 1714> 8)
		branch(305281)
lbl(305240)	match(y(5) ht(305268 [onScalar(nil 305243) onRecord('|' 2 305252)]))
lbl(305243)	putRecord(usage 1 x(0))
		setConstant('bad option syntax `-\'')
		callBI('Exception.raise' [x(0)]#nil)
lbl(305252)	getVarVar(x(0) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(4) x(4))
		genFastCall(<Q: 1711> 10)
		branch(305281)
lbl(305268)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(290)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305281)	getList(y(1))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1715> 7)
lbl(305295)	getList(y(2))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genFastCall(<Q: 1715> 7)
lbl(305309)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(305169)
lbl(305324)	definition(x(0) 305413 pid('GetVerbose' 2 pos('./BatchCompile.oz' 304 3) nil 5) <Q: 1716> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 305379)
lbl(305339)	getVarVar(x(2) x(3))
		shallowGuard(305379)
		getRecord('#' 2 x(2))
		unifyLiteral(verbose)
		unifyVariable(x(4))
lbl(305352)	shallowThen
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1716> 4)
		testLiteral(y(2) auto 305374)
lbl(305369)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(305374)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(305379)	match(y(0) ht(305398 [onScalar(nil 305382) onRecord('|' 2 305387)]))
lbl(305382)	getLiteral(auto y(1))
		deAllocateL3
		return
lbl(305387)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1716> 5)
lbl(305398)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(313)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(305324)
lbl(305413)	definition(x(0) 305439 pid('IsIDChar' 2 pos('./BatchCompile.oz' 317 6) nil 4) <Q: 1717> [g(14)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 305427)
		getLiteral(true x(1))
		return
lbl(305427)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(305413)
lbl(305439)	definition(x(1) 305510 pid('IsQuotedVariable' 2 pos('./BatchCompile.oz' 321 6) nil 3) <Q: 1718> nil)
		match(x(0) ht(305495 [onScalar(nil 305448) onRecord('|' 2 305452)]))
lbl(305448)	getLiteral(false x(1))
		return
lbl(305452)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 305477)
lbl(305468)	testLiteral(y(2) nil 305477)
lbl(305472)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(305477)	testNumber(y(1) 0 305486)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(305486)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1718> 5)
lbl(305495)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(305439)
lbl(305510)	definition(x(1) 305582 pid('IsPrintName' 2 pos('./BatchCompile.oz' 331 6) nil 4) <Q: 1719> [g(15) g(16) x(0)])
		testBI('IsAtom' [x(0)]#[x(2)] 305576)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(305563 [onScalar(nil 305526) onRecord('|' 2 305530)]))
lbl(305526)	getLiteral(false x(1))
		return
lbl(305530)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 305543)
lbl(305537)	move(x(2) x(0))
		genFastCall(<Q: 1718> 5)
lbl(305543)	testBI('Char.isUpper' [x(0)]#[x(3)] 305559)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(305559)	getLiteral(false x(1))
		return
lbl(305563)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(343)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305576)	getLiteral(false x(1))
		return
		endDefinition(305510)
lbl(305582)	move(y(11) x(0))
		inlineDot(x(0) manager x(0) cache)
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		createVariable(x(2))
lbl(305605)	definition(x(3) 305851 pid('IncludeFunctors' 2 pos('./BatchCompile.oz' 350 6) nil 6) <Q: 1720> [g(17) g(9) y(1) x(2) g(18)])
		match(x(0) ht(305836 [onScalar(nil 305614) onRecord('|' 2 305615)]))
lbl(305614)	return
lbl(305615)	allocateL6
		move(x(1) y(0))
		putConstant(44 x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 2> 8)
		move(y(1) x(0))
		putConstant(61 x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 2> 8)
		move(y(3) x(0))
		callBI('StringToAtom' [x(0)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(5))
		testLiteral(y(4) nil 305674)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		sendMsg(link g(2) [1 name] cache)
		branch(305685)
lbl(305674)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(link g(2) [1 url] cache)
lbl(305685)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1719> 4)
		testBool(y(4) 305738 305781)
		putRecord(mergeEnv 1 x(1))
		setVariable(x(2))
		putRecord(enqueue 1 x(0))
		setValue(x(1))
		putRecord('#' 2 x(1))
		setValue(y(1))
		setValue(y(5))
		putList(x(3))
		setValue(x(1))
		setConstant(nil)
		putConstant(env x(1))
		callBI(record [x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		call(y(0) 1)
		branch(305792)
lbl(305738)	putRecord('#' 3 x(2))
		setConstant('illegal variable identifier `')
		setValue(y(3))
		setConstant('\' specified')
		putRecord('#' 2 x(5))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(4))
		setConstant('Hint')
		setValue(x(5))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('command line option error' x(1))
		sendMsg(error g(3) [items kind msg] cache)
		branch(305792)
lbl(305781)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305792)	definition(x(1) 305806 pid('' 3 pos('./BatchCompile.oz' 369 5) nil 3) unit nil)
		move(x(2) x(1))
		genFastCall(<Q: 1719> 5)
		endDefinition(305792)
lbl(305806)	move(y(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 178> 6)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1720> 5)
lbl(305836)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(305605)
lbl(305851)	definition(x(3) 305933 pid('ChangeExtension' 3 pos('./BatchCompile.oz' 376 3) nil 5) <Q: 1721> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 305895)
lbl(305869)	getVarVar(x(3) x(4))
		shallowGuard(305895)
		getNumber(46 x(3))
		getList(x(4))
		unifyNumber(111)
		unifyVariable(x(3))
		getList(x(3))
		unifyNumber(122)
		unifyLiteral(nil)
lbl(305889)	shallowThen
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(305895)	match(y(0) ht(305918 [onScalar(nil 305898) onRecord('|' 2 305903)]))
lbl(305898)	unify(y(2) y(1))
		deAllocateL3
		return
lbl(305903)	getVarVar(x(3) x(0))
		getList(y(2))
		unifyValVar(x(3) x(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1721> 7)
lbl(305918)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(381)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(305851)
lbl(305933)	definition(x(0) 306010 pid('Report' 1 pos('./BatchCompile.oz' 384 3) nil 4) <Q: 1722> [y(3) y(17)])
		move(g(0) x(1))
		inlineDot(x(1) msg x(2) cache)
lbl(305948)	definition(x(3) 305993 pid('' 1 pos('./BatchCompile.oz' 386 7) nil 5) unit [g(1) g(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) printError x(2) cache)
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(305948)
lbl(305993)	move(x(0) x(1))
		move(x(3) x(0))
		call(x(2) 2)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(305933)
lbl(306010)	unify(x(0) x(2))
lbl(306013)	definition(x(2) 308226 pid('BatchCompile' 2 pos('./BatchCompile.oz' 392 3) nil 7) <Q: 1723> [y(0) y(16) y(17) y(2) y(12) y(13) y(3) y(15) g(19)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(306044)
		match(x(0) ht(306041 [onScalar(error 306031) onScalar(success 306036)]))
lbl(306031)	getNumber(1 y(1))
		deAllocateL
		return
lbl(306036)	getNumber(0 y(1))
		deAllocateL
		return
lbl(306041)	callBI('Exception.raise' [x(0)]#nil)
lbl(306044)	createVariable(y(2))
		createVariable(y(3))
		exHandler(306097)
		testRecord(x(0) usage 1 306094)
lbl(306055)	getVariable(x(1))
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(2))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1722> 2)
		branch(306109)
lbl(306094)	callBI('Exception.raise' [x(0)]#nil)
lbl(306097)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1715> 6)
		popEx
lbl(306109)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1716> 4)
		move(g(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(0) x(0))
		inlineDot(x(0) quietInterface x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		move(y(0) x(1))
		sendMsg(init y(5) 2 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(showdeclares)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(warnunused)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putConstant(feedtoemulator x(2))
		callBI('NewCell' [x(2)]#[x(0)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(1)])
		putConstant(false x(2))
		callBI('NewCell' [x(2)]#[x(3)])
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(4)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(5)])
		createVariable(x(2))
lbl(306239)	definition(x(6) 306707 pid('' 1 pos('./BatchCompile.oz' 418 3) nil 5) unit [g(1) g(2) g(3) y(4) x(4) y(5) x(5) x(2) x(0) x(3) x(1)])
		shallowGuard(306694)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(306255)	shallowThen
		match(x(1) ht(306680 [onScalar(help 306259) onScalar('define' 306311) onScalar(undef 306323) onScalar(maxerrors 306335) onScalar(environment 306347) onScalar(incdir 306356) onScalar(include 306372) onScalar(sysletprefix 306525) onScalar(verbose 306577) onScalar(mode 306578) onScalar(makedepend 306633) onScalar(outputfile 306640) onScalar(debuginfo 306647)]))
lbl(306259)	allocateL1
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('root.url' x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(g(1) x(0))
		inlineDot(x(0) printInfo x(4) cache)
		move(y(0) x(1))
		move(g(2) x(3))
		putConstant('Usage: ' x(0))
		putConstant(' [options] [file] ...\n' x(2))
		sendMsg('#' x(4) 4 cache)
		putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(306311)	putRecord(macroDefine 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(306323)	putRecord(macroUndef 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(306335)	putRecord(setMaxNumberOfErrors 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(306347)	move(x(2) x(0))
		move(g(3) x(1))
		genFastCall(<Q: 1720> 5)
lbl(306356)	move(g(4) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(3))
		setValue(x(2))
		setValue(x(1))
		callBI('Assign' [x(0) x(3)]#nil)
		return
lbl(306372)	allocateL2
		move(x(2) y(0))
		putConstant(pushSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(3) 1 cache)
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setConstant('return')
		sendMsg(enqueue g(3) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(3) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(5) 1 cache)
		testBool(y(0) 306493 306482)
		move(g(1) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getVS g(5) 1 cache)
		move(y(1) x(0))
		call(y(0) 1)
		branch(306493)
lbl(306482)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(439)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(306493)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(5) 1 cache)
		testBool(y(0) 306512 306514)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(306512)	deAllocateL2
		return
lbl(306514)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(442)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(306525)	move(g(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 306539)
lbl(306535)	callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(306539)	putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('syslet prefix may only be given once')
		move(x(1) x(0))
		genFastCall(<Q: 1722> 3)
lbl(306577)	return
lbl(306578)	move(g(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 306623)
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('mode specified multiply on command line')
		move(x(1) x(0))
		genFastCall(<Q: 1722> 3)
lbl(306623)	move(g(8) x(1))
		callBI('Assign' [x(1) x(2)]#nil)
		getLiteral(true g(7))
		return
lbl(306633)	move(g(9) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(306640)	move(g(10) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(306647)	allocateL1
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(x(2))
		move(x(2) y(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(0))
		deAllocateL1
		tailSendMsg(enqueue g(3) 1 cache)
lbl(306680)	putRecord(setSwitch 2 x(0))
		setValue(x(1))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(306694)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(418)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(306239)
lbl(306707)	moveMoveXYXY(x(0) y(0) x(1) y(6))
		moveMoveXYXY(x(3) y(7) x(4) y(8))
		moveMoveXYYX(x(5) y(9) y(2) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		move(g(4) x(0))
		inlineDot(x(0) putEnv x(1) cache)
		move(y(8) x(2))
		callBI('Access' [x(2)]#[x(3)])
lbl(306743)	definition(x(2) 306766 pid('' 3 pos('./BatchCompile.oz' 481 4) nil 4) unit nil)
		putList(x(3))
		setConstant(58)
		setValue(x(0))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<P: 21> 7)
		endDefinition(306743)
lbl(306766)	inlineDot(x(0) getEnv x(4) cache)
		moveMoveXYXY(x(1) y(2) x(3) y(8))
		move(x(2) y(10))
		putConstant('OZPATH' x(0))
		createVariableMove(y(11) x(1))
		call(x(4) 2)
		putConstant('OZPATH' y(12))
		createVariable(y(13))
		testLiteral(y(11) false 306806)
lbl(306798)	getList(y(13))
		unifyNumber(46)
		unifyLiteral(nil)
		branch(306809)
lbl(306806)	unify(y(13) y(11))
lbl(306809)	moveMoveYXYX(y(8) x(0) y(10) x(1))
		move(y(13) x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(12) x(0) y(11) x(1))
		call(y(2) 2)
		testLiteral(y(3) nil 306872)
		putRecord('#' 2 x(3))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(2))
		setConstant('Hint')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('command line option error')
		setConstant('no input files given')
		genFastCall(<Q: 1722> 2)
		branch(308218)
lbl(306872)	move(y(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('\\=' [x(1) x(2)]#[x(3)] 306895)
lbl(306888)	callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 308179)
lbl(306895)	definition(x(1) 308171 pid('' 1 pos('./BatchCompile.oz' 500 6) nil 8) unit [y(5) y(6) y(0) y(7) y(4) g(2) g(5) g(6) g(7) g(8) g(4) y(9)])
		allocateL6
		move(x(0) y(0))
		sendMsg(reset g(0) 0 cache)
		move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(1))
		testLiteral(x(1) unit 307160)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(307147 [onScalar(core 306932) onScalar(outputcode 306970) onScalar(ozma 307008) onScalar(feedtoemulator 307046) onScalar(dump 307096) onScalar(syslet 307134)]))
lbl(306932)	putList(x(5))
		setConstant(105)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1721> 6)
		branch(307263)
lbl(306970)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1721> 6)
		branch(307263)
lbl(307008)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1721> 6)
		branch(307263)
lbl(307046)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBool(x(3) 307091 307080)
		putRecord('#' 2 x(4))
		setConstant('--makedepend with --feedtoemulator ')
		setConstant('needs an --outputfile')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1722> 2)
		branch(307091)
lbl(307080)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(510)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(307091)	getLiteral(unit y(1))
		branch(307263)
lbl(307096)	putList(x(5))
		setConstant(102)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1721> 6)
		branch(307263)
lbl(307134)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1721> 6)
		branch(307263)
lbl(307147)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(521)
		setValue(x(2))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(307160)	callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('==' [x(1) x(2)]#[x(3)] 307210)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) dump 307196)
lbl(307183)	putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setConstant('dumping to stdout is not possible')
		genFastCall(<Q: 1722> 2)
		branch(307263)
lbl(307196)	callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) syslet 307205)
		branch(307183)
lbl(307205)	getLiteral(stdout y(1))
		branch(307263)
lbl(307210)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) feedtoemulator 307254)
lbl(307220)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBI('Not' [x(3)]#[x(4)] 307254)
lbl(307230)	putRecord('#' 2 x(4))
		setConstant('no output file name must be ')
		setConstant('specified for --feedtoemulator')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1722> 2)
		branch(307263)
lbl(307254)	move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(1))
lbl(307263)	putConstant(pushSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 307312 307301)
		putRecord(setSwitch 2 x(2))
		setConstant(unnest)
		setConstant(false)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(307312)
lbl(307301)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(541)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(307312)	move(g(2) x(0))
		callBI('Access' [x(0)]#[x(1)])
		match(x(1) ht(307425 [onScalar(core 307321) onScalar(outputcode 307354) onScalar(ozma 307387) onScalar(feedtoemulator 307406)]))
lbl(307321)	putRecord(setSwitch 2 x(2))
		setConstant(core)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(codegen)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(307456)
lbl(307354)	putRecord(setSwitch 2 x(2))
		setConstant(outputcode)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(307456)
lbl(307387)	putRecord(setSwitch 2 x(2))
		setConstant(ozma)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(307456)
lbl(307406)	putRecord(setSwitch 2 x(2))
		setConstant(feedtoemulator)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(307456)
lbl(307425)	putRecord(setSwitch 2 x(2))
		setConstant(expression)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(4) 1 cache)
lbl(307456)	putRecord('return' [result] x(2))
		setVariable(y(2))
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue g(4) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(4) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(0) 1 cache)
		testBool(y(0) 307556 307545)
		move(g(5) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(3) x(0))
		sendMsg(getVS g(0) 1 cache)
		move(y(3) x(0))
		call(y(0) 1)
		branch(307556)
lbl(307545)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(565)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(307556)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(0) 1 cache)
		testBool(y(0) 307586 307575)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(307575)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(568)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(307586)	move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 307731 308158)
		move(g(6) x(1))
		inlineDot(x(1) file x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		putList(x(4))
		setConstant(write)
		setConstant(nil)
		move(x(3) y(0))
		move(x(4) x(0))
		putConstant(stdout x(1))
		sendMsg(init y(0) [flags name] cache)
		putRecord('#' 4 y(2))
		setValue(y(1))
		setConstant(':')
		setVariable(y(3))
		setConstant('\n')
		createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
		match(y(1) ht(307699 [onScalar(nil 307653) onRecord('|' 2 307658)]))
lbl(307653)	getLiteral(nil y(3))
		branch(307712)
lbl(307658)	createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
lbl(307667)	definition(x(1) 307686 pid('' 3 pos('./BatchCompile.oz' 576 8) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' \\\n\t')
		unifyValue(x(1))
		return
		endDefinition(307667)
lbl(307686)	moveMoveYXYX(y(1) x(0) y(3) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 30> 8)
		branch(307712)
lbl(307699)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(578)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(307712)	move(y(2) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(307731)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(308085 [onScalar(dump 307740) onScalar(syslet 307780) onScalar(feedtoemulator 308083)]))
lbl(307740)	exHandler(307760)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(307760)	move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(x(2) 2)
		popEx
		deAllocateL6
		return
lbl(307780)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 279> 4)
		testBool(y(0) 307795 307830)
		branch(307841)
lbl(307795)	putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(2))
		setConstant('Value found')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('syslets can only be built from functors')
		genFastCall(<Q: 1722> 2)
		branch(307841)
lbl(307830)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(590)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(307841)	move(g(10) x(0))
		inlineDot(x(0) tmpnam x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		createVariable(y(3))
		exHandler(307868)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(308056)
lbl(307868)	exHandler(307888)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(307888)	move(g(6) x(0))
		inlineDot(x(0) file x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		putList(x(5))
		setConstant(truncate)
		setConstant(nil)
		putList(x(4))
		setConstant(create)
		setValue(x(5))
		putList(x(3))
		setConstant(write)
		setValue(x(4))
		move(x(1) y(4))
		move(x(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(4) [flags name] cache)
		move(g(11) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(5))
		testLiteral(x(1) unit 307950)
lbl(307945)	getLiteral('#!/bin/sh\nexec ozengine $0 "$@"\n' y(5))
		branch(307953)
lbl(307950)	unify(y(5) x(1))
lbl(307953)	move(y(5) x(0))
		sendMsg(write y(4) [vs] cache)
		sendMsg(close y(4) 0 cache)
		move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(g(10) x(0))
		inlineDot(x(0) system x(2) cache)
		putRecord('#' 7 x(3))
		setConstant('cat ')
		setValue(y(0))
		setConstant(' >> ')
		setValue(y(1))
		setConstant('; ')
		setConstant('chmod +x ')
		setValue(y(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		match(y(1) ht(308024 [onScalar(0 308051)]))
lbl(308024)	putRecord(hint [l m] x(2))
		setConstant('Error code')
		setValue(y(1))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('writing syslet failed')
		genFastCall(<Q: 1722> 2)
lbl(308051)	popEx
lbl(308052)	getLiteral(unit y(3))
		popEx
lbl(308056)	move(g(10) x(0))
		inlineDot(x(0) unlink x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		testRecord(y(3) ex 1 308081)
lbl(308076)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(308081)	deAllocateL6
		return
lbl(308083)	deAllocateL6
		return
lbl(308085)	move(g(6) x(2))
		inlineDot(x(2) file x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		putList(x(7))
		setConstant(truncate)
		setConstant(nil)
		putList(x(6))
		setConstant(create)
		setValue(x(7))
		putList(x(5))
		setConstant(write)
		setValue(x(6))
		move(x(4) y(0))
		move(x(5) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) [flags name] cache)
		createVariableMove(y(1) x(0))
		sendMsg(getSource g(0) 1 cache)
		move(y(1) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(308158)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(571)
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(306895)
lbl(308171)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(308218)
lbl(308179)	move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(2) x(0))
		putConstant(1 x(1))
		testLT(x(1) x(0) x(2) 306895)
lbl(308199)	putRecord('#' 2 x(1))
		setConstant('only one input file allowed when ')
		setConstant('an output file name is given')
		putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1722> 2)
lbl(308218)	putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(306013)
lbl(308226)	move(y(17) x(0))
		inlineDot(x(0) exit x(0) cache)
		move(y(16) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant(argv x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		move(g(15) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1723> 4)
		move(y(1) x(0))
		call(y(0) 1)
		getLiteral('export' g(20))
		deAllocateL
		return
		endDefinition(299919)
lbl(308290)	tailCall(x(0) 0)
		endDefinition(299787)
lbl(308295)	move(x(0) y(0))
		putConstant('import' x(0))
		putConstant('export' x(1))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord('#' 2 x(1))
		setConstant(ozc)
		setConstant('.ozp')
		move(y(1) x(0))
		call(y(0) 2)
		putConstant('System' x(1))
		callBI('BootManager' [x(1)]#[x(2)])
		inlineDot(x(2) exit x(1) cache)
		putConstant(0 x(0))
		deAllocateL
		tailCall(x(1) 1)
		endDefinition(1)
lbl(308345)	tailCall(x(0) 0)
