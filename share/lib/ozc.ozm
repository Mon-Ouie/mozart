%% Code Size:
315581 % words
		skip
lbl(1)		definition(x(0) 315578 pid('Toplevel abstraction' 0 pos('' 0 0) [native] 1474) unit [g(0)])
		allocateL(238)
		putConstant('Exception.raise' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exception.raiseError' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(record x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Dictionary.member' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(63)		definition(x(2) 89 pid('`runTimePut`' 2 pos('./standard/Forward.oz' 45 3) nil 4) <P: 1> [g(0)])
		move(g(0) x(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 83)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(83)		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
		endDefinition(63)
lbl(89)		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(4) y(2) y(0) x(1))
		putConstant('Raise' x(0))
		genFastCall(<P: 1> 4)
		move(y(1) x(1))
		putConstant('RaiseError' x(0))
		genFastCall(<P: 1> 4)
		move(y(2) x(1))
		putConstant(record x(0))
		genFastCall(<P: 1> 4)
		putConstant('Wait' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('WaitOr' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsFree' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsKinded' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('IsDet' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Max' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Min' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('CondSelect' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('HasFeature' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('ByNeed' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYXY(x(6) y(7) x(8) y(8))
		moveMoveXYXY(x(7) y(9) x(9) y(10))
		moveMoveXYXY(x(10) y(11) x(11) y(12))
		move(x(12) x(1))
		putConstant('.' x(0))
		genFastCall(<P: 1> 4)
		putConstant('==' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('==' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('\\=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>' x(0))
		genFastCall(<P: 1> 4)
		move(y(11) x(1))
		putConstant(hasFeature x(0))
		genFastCall(<P: 1> 4)
		move(y(12) x(1))
		putConstant(byNeed x(0))
		genFastCall(<P: 1> 4)
		putConstant('Future' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('!!' x(0))
		genFastCall(<P: 1> 4)
		putRecord(value ['.' '<' '=' '=<' '==' '>' '>=' '\\=' byNeed condSelect hasFeature isDet isFree isKinded max min status type 'wait' waitOr] y(13))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setValue(y(12))
		setValue(y(10))
		setValue(y(11))
		setValue(y(7))
		setValue(y(5))
		setValue(y(6))
		setValue(y(9))
		setValue(y(8))
		setVariable(x(8))
		setVariable(x(9))
		setValue(y(3))
		setValue(y(4))
		putConstant('=<' x(10))
		putConstant(3 x(11))
		callBI(builtin [x(10) x(11)]#[x(12)])
		unify(x(12) x(3))
		putConstant('<' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(11)])
		unify(x(11) x(1))
		putConstant('>=' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(1)])
		unify(x(1) x(6))
		putConstant('>' x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(1)])
		unify(x(1) x(5))
		putConstant('==' x(3))
		putConstant(3 x(5))
		callBI(builtin [x(3) x(5)]#[x(1)])
		unify(x(1) x(4))
		putConstant('=' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(7))
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('Value.status' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(8))
		putConstant('Value.type' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(9))
		putConstant('IsLiteral' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putRecord(literal [is] y(14))
		setValue(x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsUnit' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putRecord('unit' [is 'unit'] y(15))
		setValue(x(1))
		setConstant(unit)
		putConstant('IsLock' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('NewLock' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putRecord('lock' [is new] y(16))
		setValue(x(4))
		setValue(x(5))
		putConstant('IsCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('NewCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Exchange' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Assign' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Access' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putRecord(cell [access assign exchange is new] y(17))
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		putConstant('IsPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('NewPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Send' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putRecord(port [is new send] y(18))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('IsAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('AtomToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putRecord(atom [is toString] y(19))
		setValue(x(15))
		setValue(x(16))
		putConstant('IsName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putConstant('NewName' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		putRecord(name [is new] y(20))
		setValue(x(17))
		setValue(x(18))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('IsBool' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('Not' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(20)])
		putConstant('And' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		putConstant('Or' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(22)])
		putRecord(bool [and 'false' is 'not' 'or' 'true'] y(21))
		setValue(x(21))
		setConstant(false)
		setValue(x(19))
		setValue(x(20))
		setValue(x(22))
		setConstant(true)
		putConstant('IsString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(23)])
		putConstant('StringToAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(24)])
		putConstant('StringToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(25)])
		putConstant('StringToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(26)])
lbl(870)	definition(x(2) 925 pid('Token' 4 pos('./standard/String.oz' 44 3) nil 6) <P: 2> nil)
		match(x(0) ht(910 [onScalar(nil 879) onRecord('|' 2 886)]))
lbl(879)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(886)	getVarVar(x(0) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 900)
		getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(900)	getListValVar(x(2) x(0) x(2))
		move(x(4) x(0))
		genFastCall(<P: 2> 9)
lbl(910)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(50)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(870)
lbl(925)	definition(x(3) 1002 pid('Tokens' 5 pos('./standard/String.oz' 53 3) nil 7) <P: 3> nil)
		match(x(0) ht(987 [onScalar(nil 934) onRecord('|' 2 952)]))
lbl(934)	getLiteral(nil x(3))
		testLiteral(x(2) nil 945)
lbl(941)	getLiteral(nil x(4))
		return
lbl(945)	getList(x(4))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(952)	getVarVar(x(0) x(5))
		testBI('==' [x(0) x(1)]#[x(6)] 977)
		getLiteral(nil x(3))
		getListValVar(x(4) x(2) x(4))
		createVariable(x(2))
		move(x(5) x(0))
		move(x(2) x(3))
		genFastCall(<P: 3> 11)
lbl(977)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 3> 11)
lbl(987)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(62)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(925)
lbl(1002)	definition(x(3) 1047 pid('StringIsAtom' 2 pos('./standard/String.oz' 65 3) nil 3) <P: 4> nil)
		match(x(0) ht(1032 [onScalar(nil 1011) onRecord('|' 2 1015)]))
lbl(1011)	getLiteral(true x(1))
		return
lbl(1015)	getVarVar(x(0) x(2))
		testNumber(x(0) 0 1026)
lbl(1022)	getLiteral(false x(1))
		return
lbl(1026)	move(x(2) x(0))
		genFastCall(<P: 4> 5)
lbl(1032)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(68)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(1002)
lbl(1047)	putRecord(string [is isAtom isFloat isInt toAtom toFloat toInt token tokens] y(22))
		setValue(x(23))
		setValue(x(3))
		setVariable(y(23))
		setVariable(y(24))
		setValue(x(24))
		setValue(x(26))
		setValue(x(25))
		setValue(x(2))
		setVariable(x(27))
lbl(1069)	definition(x(3) 1116 pid('String.isInt' 2 pos('./standard/String.oz' 75 14) nil 2) <P: 5> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1102)
		move(x(0) y(0))
		createCond(1096)
lbl(1088)	lastClause
		clause
		ask
lbl(1091)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1096)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1102)	move(y(0) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1069)
lbl(1116)	unify(x(3) y(24))
lbl(1119)	definition(x(3) 1166 pid('String.isFloat' 2 pos('./standard/String.oz' 81 14) nil 2) <P: 6> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1152)
		move(x(0) y(0))
		createCond(1146)
lbl(1138)	lastClause
		clause
		ask
lbl(1141)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1146)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1152)	move(y(0) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1119)
lbl(1166)	unify(x(3) y(23))
lbl(1169)	definition(x(3) 1191 pid('String.tokens' 3 pos('./standard/String.oz' 88 14) nil 6) <P: 7> nil)
		createVariable(x(5))
		move(x(2) x(4))
		move(x(5) x(2))
		move(x(5) x(3))
		genFastCall(<P: 3> 11)
		endDefinition(1169)
lbl(1191)	unify(x(3) x(27))
		putConstant('IsChar' x(3))
		putConstant(2 x(27))
		callBI(builtin [x(3) x(27)]#[x(28)])
		putRecord(char [is isAlNum isAlpha isCntrl isDigit isGraph isLower isPrint isPunct isSpace isUpper isXDigit toAtom toLower toUpper type] y(25))
		setValue(x(28))
		setVariable(x(3))
		setVariable(x(27))
		setVariable(x(29))
		setVariable(x(30))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(x(33))
		setVariable(x(34))
		setVariable(x(35))
		setVariable(x(36))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setVariable(x(40))
		setVariable(x(41))
		putConstant('Char.isAlpha' x(42))
		putConstant(2 x(43))
		callBI(builtin [x(42) x(43)]#[x(44)])
		unify(x(44) x(27))
		putConstant('Char.isUpper' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(36))
		putConstant('Char.isLower' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(32))
		putConstant('Char.isDigit' x(27))
		putConstant(2 x(32))
		callBI(builtin [x(27) x(32)]#[x(42)])
		unify(x(42) x(30))
		putConstant('Char.isXDigit' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(37))
		putConstant('Char.isAlNum' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(3))
		putConstant('Char.isSpace' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(35))
		putConstant('Char.isGraph' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(31))
		putConstant('Char.isPrint' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(33))
		putConstant('Char.isPunct' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(34))
		putConstant('Char.isCntrl' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(29))
		putConstant('Char.toUpper' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(40))
		putConstant('Char.toLower' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(39))
		putConstant('Char.toAtom' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(38))
		putConstant('Char.type' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(41))
		putConstant('div' x(27))
		putConstant(3 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		moveMoveXYXY(x(0) y(26) x(1) y(27))
		moveMoveXYXY(x(4) y(28) x(5) y(29))
		moveMoveXYXY(x(6) y(30) x(7) y(31))
		moveMoveXYXY(x(8) y(32) x(10) y(33))
		moveMoveXYXY(x(11) y(34) x(12) y(35))
		moveMoveXYXY(x(13) y(36) x(14) y(37))
		moveMoveXYXY(x(15) y(38) x(16) y(39))
		moveMoveXYXY(x(17) y(40) x(18) y(41))
		moveMoveXYXY(x(19) y(42) x(21) y(43))
		moveMoveXYXY(x(22) y(44) x(20) y(45))
		moveMoveXYXY(x(23) y(46) x(24) y(47))
		moveMoveXYXY(x(25) y(48) x(26) y(49))
		moveMoveXYXY(x(28) y(50) x(9) y(51))
		moveMoveXYXY(x(36) y(52) x(3) y(53))
		moveMoveXYXY(x(39) y(54) x(2) y(55))
		move(x(30) x(1))
		putConstant('div' x(0))
		genFastCall(<P: 1> 4)
		putConstant('mod' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('mod' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('IntToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IntToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(1554)	definition(x(2) 1572 pid('IsNat' 2 pos('./standard/Int.oz' 44 0) nil 4) <P: 8> nil)
		putConstant(0 x(2))
		callBI('=<' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(1554)
lbl(1572)	definition(x(3) 1596 pid('IsOdd' 2 pos('./standard/Int.oz' 45 0) nil 4) <P: 9> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(1 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1572)
lbl(1596)	definition(x(5) 1620 pid('IsEven' 2 pos('./standard/Int.oz' 46 0) nil 4) <P: 10> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(0 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1596)
lbl(1620)	putRecord(int ['div' is isEven isNat isOdd 'mod' toFloat toString] y(56))
		setVariable(x(6))
		setValue(x(0))
		setValue(x(5))
		setValue(x(2))
		setValue(x(3))
		setVariable(x(7))
		setValue(x(1))
		setValue(x(4))
		putConstant('div' x(8))
		putConstant(3 x(9))
		callBI(builtin [x(8) x(9)]#[x(10)])
		unify(x(10) x(6))
		putConstant('mod' x(6))
		putConstant(3 x(8))
		callBI(builtin [x(6) x(8)]#[x(9)])
		unify(x(9) x(7))
		putConstant('/' x(6))
		putConstant(3 x(7))
		callBI(builtin [x(6) x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(57) x(2) y(58))
		moveMoveXYXY(x(3) y(59) x(5) y(60))
		moveMoveXYXY(x(1) y(61) x(4) y(62))
		move(x(8) x(1))
		putConstant('/' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exp' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('Log' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Sqrt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Ceil' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Floor' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Sin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Cos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('Tan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Asin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Acos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('Atan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Atan2' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putConstant('Round' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('FloatToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putConstant('FloatToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putRecord(float ['/' acos asin atan atan2 ceil cos exp floor is log round sin sqrt tan toInt toString] y(63))
		setVariable(x(2))
		setValue(x(12))
		setValue(x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(6))
		setValue(x(9))
		setValue(x(1))
		setValue(x(7))
		setValue(x(0))
		setValue(x(4))
		setValue(x(15))
		setValue(x(8))
		setValue(x(5))
		setValue(x(10))
		setValue(x(16))
		setValue(x(17))
		putConstant('/' x(3))
		putConstant(3 x(18))
		callBI(builtin [x(3) x(18)]#[x(19)])
		unify(x(19) x(2))
		putConstant('+' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		moveMoveXYXY(x(0) y(64) x(1) y(65))
		moveMoveXYXY(x(4) y(66) x(5) y(67))
		moveMoveXYXY(x(6) y(68) x(7) y(69))
		moveMoveXYXY(x(15) y(70) x(8) y(71))
		moveMoveXYXY(x(9) y(72) x(10) y(73))
		moveMoveXYXY(x(11) y(74) x(12) y(75))
		moveMoveXYXY(x(13) y(76) x(14) y(77))
		moveMoveXYXY(x(16) y(78) x(17) y(79))
		move(x(18) x(1))
		putConstant('+' x(0))
		genFastCall(<P: 1> 4)
		putConstant('-' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('-' x(0))
		genFastCall(<P: 1> 4)
		putConstant('*' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('*' x(0))
		genFastCall(<P: 1> 4)
		putConstant('~' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('~' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsNumber' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Abs' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(fPow x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(2021)	definition(x(2) 2080 pid('IntPow' 4 pos('./standard/Number.oz' 47 3) nil 7) <P: 11> nil)
		testNumber(x(1) 0 2035)
		unify(x(3) x(2))
		return
lbl(2035)	putConstant(2 x(4))
		callBI('mod' [x(1) x(4)]#[x(5)])
		testNumber(x(5) 0 2063)
		callBI('*' [x(0) x(0)]#[x(4)])
		putConstant(2 x(5))
		callBI('div' [x(1) x(5)]#[x(6)])
		move(x(4) x(0))
		move(x(6) x(1))
		genFastCall(<P: 11> 9)
lbl(2063)	inlineMinus1(x(1) x(4))
		callBI('*' [x(2) x(0)]#[x(5)])
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<P: 11> 9)
		endDefinition(2021)
lbl(2080)	definition(x(2) 2175 pid('Pow' 3 pos('./standard/Number.oz' 54 3) nil 5) <P: 12> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('IsInt' [x(0)]#[x(3)] 2129)
lbl(2099)	testBI('IsInt' [x(1)]#[x(3)] 2129)
lbl(2103)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2121)
		move(y(2) x(3))
		putConstant(1 x(2))
		deAllocateL3
		genFastCall(<P: 11> 9)
lbl(2121)	getNumber(0 y(1))
		getNumber(1 y(2))
		deAllocateL3
		return
lbl(2129)	move(y(0) x(0))
		testBI('IsFloat' [x(0)]#[x(1)] 2162)
lbl(2136)	move(y(1) x(1))
		testBI('IsFloat' [x(1)]#[x(2)] 2151)
lbl(2143)	callBI(fPow [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL3
		return
lbl(2151)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(2162)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2080)
lbl(2175)	putRecord(number ['*' '+' '-' abs is pow '~'] y(80))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setValue(x(1))
		setValue(x(0))
		setValue(x(2))
		setVariable(x(6))
		putConstant('+' x(7))
		putConstant(3 x(8))
		callBI(builtin [x(7) x(8)]#[x(9)])
		unify(x(9) x(4))
		putConstant('-' x(4))
		putConstant(3 x(7))
		callBI(builtin [x(4) x(7)]#[x(8)])
		unify(x(8) x(5))
		putConstant('*' x(4))
		putConstant(3 x(5))
		callBI(builtin [x(4) x(5)]#[x(7)])
		unify(x(7) x(3))
		putConstant('~' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		unify(x(5) x(6))
		putConstant('IsTuple' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		putConstant('MakeTuple' x(3))
		putConstant(3 x(4))
		callBI(builtin [x(3) x(4)]#[x(7)])
lbl(2259)	definition(x(3) 2294 pid('Copy' 4 pos('./standard/Tuple.oz' 42 3) nil 6) <P: 13> nil)
		testNumber(x(0) 0 2270)
		return
lbl(2270)	inlinePlus(x(0) x(1) x(4))
		callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(2) x(0)]#[x(4)])
		unify(x(4) x(5))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 13> 9)
		endDefinition(2259)
lbl(2294)	createVariable(y(81))
		createVariable(y(82))
		createVariable(y(83))
lbl(2300)	definition(x(3) 2409 pid('Append' 3 pos('./standard/Tuple.oz' 45 3) nil 5) <P: 14> [y(81) y(82) y(83)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testNumber(y(3) 0 2339)
		unify(y(2) y(1))
		deAllocateL6
		return
lbl(2339)	testNumber(y(4) 0 2355)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		genCall(gci(g(1) false '' true 3) 0)
lbl(2355)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(5) x(3))
		callBI('MakeTuple' [x(3) x(2)]#[x(4)])
		unify(x(4) y(2))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		putConstant(0 x(1))
		genFastCall(<P: 13> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 13> 9)
		endDefinition(2300)
lbl(2409)	createVariable(y(84))
lbl(2411)	definition(x(4) 2478 pid('TupleToArray' 3 pos('./standard/Tuple.oz' 55 3) nil 6) <P: 15> [y(84)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 2475)
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) put x(4) cache)
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		move(y(0) x(1))
		move(x(5) x(2))
		call(x(4) 3)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 15> 7)
lbl(2475)	return
		endDefinition(2411)
lbl(2478)	putRecord(tuple [append is make toArray] y(85))
		setValue(x(3))
		setValue(x(5))
		setValue(x(7))
		setVariable(x(4))
lbl(2490)	definition(x(8) 2550 pid('Tuple.toArray' 2 pos('./standard/Tuple.oz' 64 12) nil 5) <P: 16> [y(81) y(84)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) new x(4) cache)
		move(y(2) x(1))
		putConstant(1 x(0))
		putConstant(unit x(2))
		createVariableMove(y(3) x(3))
		call(x(4) 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 15> 6)
		unify(y(3) y(1))
		deAllocateL4
		return
		endDefinition(2490)
lbl(2550)	unify(x(8) x(4))
lbl(2553)	definition(x(4) 2599 pid('Match' 3 pos('./standard/Tuple.oz' 78 3) nil 5) <P: 17> nil)
		match(x(0) ht(2584 [onScalar(nil 2562) onRecord('|' 2 2563)]))
lbl(2562)	return
lbl(2563)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 17> 7)
lbl(2584)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(81)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2553)
lbl(2599)	definition(x(4) 2625 pid('DoTuple' 4 pos('./standard/Tuple.oz' 84 3) nil 5) <P: 18> nil)
		callBI('MakeTuple' [x(0) x(2)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 17> 7)
		endDefinition(2599)
lbl(2625)	moveMoveXYXY(x(0) y(86) x(2) y(87))
		moveMoveXYXY(x(1) y(88) x(7) y(89))
		moveMoveXYXY(x(5) y(90) x(6) y(91))
		move(x(3) y(92))
		move(x(4) x(1))
		putConstant(tuple x(0))
		genFastCall(<P: 1> 4)
lbl(2652)	definition(x(0) 2687 pid('MakeList' 2 pos('./standard/List.oz' 35 0) nil 4) <P: 19> nil)
		putConstant(0 x(2))
		testLT(x(2) x(0) x(3) 2681)
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		genFastCall(<P: 19> 5)
lbl(2681)	getLiteral(nil x(1))
		return
		endDefinition(2652)
lbl(2687)	definition(x(1) 2715 pid('IsList' 2 pos('./standard/List.oz' 39 0) nil 4) <P: 20> nil)
		testList(x(0) 2703)
lbl(2696)	getVoid(1)
		getVariable(x(0))
		genFastCall(<P: 20> 5)
lbl(2703)	putConstant(nil x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(2687)
lbl(2715)	definition(x(2) 2753 pid('Append' 3 pos('./standard/List.oz' 43 0) nil 4) <P: 21> nil)
		match(x(0) ht(2738 [onScalar(nil 2724) onRecord('|' 2 2728)]))
lbl(2724)	unify(x(2) x(1))
		return
lbl(2728)	getVarVar(x(3) x(0))
		getListValVar(x(2) x(3) x(2))
		genFastCall(<P: 21> 7)
lbl(2738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(46)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2715)
lbl(2753)	definition(x(3) 2798 pid('Member' 3 pos('./standard/List.oz' 49 0) nil 5) <P: 22> nil)
		match(x(1) ht(2783 [onScalar(nil 2762) onRecord('|' 2 2766)]))
lbl(2762)	getLiteral(false x(2))
		return
lbl(2766)	getVarVar(x(1) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 2777)
		getLiteral(true x(2))
		return
lbl(2777)	move(x(3) x(1))
		genFastCall(<P: 22> 7)
lbl(2783)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(52)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2753)
lbl(2798)	definition(x(4) 2839 pid('DoLength' 3 pos('./standard/List.oz' 56 3) nil 4) <P: 23> nil)
		match(x(0) ht(2824 [onScalar(nil 2807) onRecord('|' 2 2811)]))
lbl(2807)	unify(x(2) x(1))
		return
lbl(2811)	getVoid(1)
		getVariable(x(0))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 23> 7)
lbl(2824)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(59)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2798)
lbl(2839)	definition(x(4) 2856 pid('Length' 2 pos('./standard/List.oz' 62 3) nil 3) <P: 24> nil)
		move(x(1) x(2))
		putConstant(0 x(1))
		genFastCall(<P: 23> 7)
		endDefinition(2839)
lbl(2856)	definition(x(5) 2890 pid('DoNth' 3 pos('./standard/List.oz' 66 3) nil 5) <P: 25> nil)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testNumber(x(1) 1 2876)
lbl(2872)	unify(x(2) x(0))
		return
lbl(2876)	inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 25> 7)
		endDefinition(2856)
lbl(2890)	definition(x(5) 2920 pid('Nth' 3 pos('./standard/List.oz' 70 3) nil 5) <P: 26> nil)
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2907)
		genFastCall(<P: 25> 7)
lbl(2907)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2890)
lbl(2920)	definition(x(6) 2963 pid('DoReverse' 3 pos('./standard/List.oz' 74 3) nil 5) <P: 27> nil)
		match(x(0) ht(2948 [onScalar(nil 2929) onRecord('|' 2 2933)]))
lbl(2929)	unify(x(2) x(1))
		return
lbl(2933)	getVarVar(x(3) x(0))
		putList(x(4))
		setValue(x(3))
		setValue(x(1))
		move(x(4) x(1))
		genFastCall(<P: 27> 7)
lbl(2948)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2920)
lbl(2963)	definition(x(6) 2980 pid('Reverse' 2 pos('./standard/List.oz' 80 3) nil 3) <P: 28> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 27> 7)
		endDefinition(2963)
lbl(2980)	definition(x(7) 3039 pid('Map' 3 pos('./standard/List.oz' 83 0) nil 3) <P: 29> nil)
		match(x(0) ht(3024 [onScalar(nil 2989) onRecord('|' 2 2993)]))
lbl(2989)	getLiteral(nil x(2))
		return
lbl(2993)	allocateL3
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(x(2) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 29> 7)
lbl(3024)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2980)
lbl(3039)	definition(x(8) 3102 pid('FoldL' 4 pos('./standard/List.oz' 89 0) nil 5) <P: 30> nil)
		match(x(0) ht(3087 [onScalar(nil 3048) onRecord('|' 2 3052)]))
lbl(3048)	unify(x(3) x(2))
		return
lbl(3052)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
lbl(3087)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(92)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3039)
lbl(3102)	definition(x(9) 3166 pid('FoldLTail' 4 pos('./standard/List.oz' 95 0) nil 4) <P: 31> nil)
		match(x(0) ht(3151 [onScalar(nil 3111) onRecord('|' 2 3115)]))
lbl(3111)	unify(x(3) x(2))
		return
lbl(3115)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(0) x(1))
		move(x(2) x(0))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 31> 9)
lbl(3151)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3102)
lbl(3166)	definition(x(10) 3223 pid('FoldR' 4 pos('./standard/List.oz' 101 0) nil 4) <P: 32> nil)
		match(x(0) ht(3208 [onScalar(nil 3175) onRecord('|' 2 3179)]))
lbl(3175)	unify(x(3) x(2))
		return
lbl(3179)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3166)
lbl(3223)	definition(x(11) 3287 pid('FoldRTail' 4 pos('./standard/List.oz' 107 0) nil 5) <P: 33> nil)
		match(x(0) ht(3272 [onScalar(nil 3232) onRecord('|' 2 3236)]))
lbl(3232)	unify(x(3) x(2))
		return
lbl(3236)	allocateL4
		getVoid(1)
		getVariable(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 33> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3272)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3223)
lbl(3287)	definition(x(12) 3331 pid('ForAll' 2 pos('./standard/List.oz' 113 0) nil 2) <P: 34> nil)
		match(x(0) ht(3316 [onScalar(nil 3296) onRecord('|' 2 3297)]))
lbl(3296)	return
lbl(3297)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(3316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(116)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3287)
lbl(3331)	definition(x(13) 3406 pid('All' 3 pos('./standard/List.oz' 119 0) nil 3) <P: 35> nil)
		match(x(0) ht(3391 [onScalar(nil 3340) onRecord('|' 2 3344)]))
lbl(3340)	getLiteral(true x(2))
		return
lbl(3344)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3375 3380)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 35> 7)
lbl(3375)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3380)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3391)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(122)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3331)
lbl(3406)	definition(x(14) 3481 pid('Some' 3 pos('./standard/List.oz' 125 0) nil 3) <P: 36> nil)
		match(x(0) ht(3466 [onScalar(nil 3415) onRecord('|' 2 3419)]))
lbl(3415)	getLiteral(false x(2))
		return
lbl(3419)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3443 3455)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(3443)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 36> 7)
lbl(3455)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(127)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3466)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3406)
lbl(3481)	definition(x(15) 3526 pid('ForAllTail' 2 pos('./standard/List.oz' 131 0) nil 2) <P: 37> nil)
		match(x(0) ht(3511 [onScalar(nil 3490) onRecord('|' 2 3491)]))
lbl(3490)	return
lbl(3491)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 37> 5)
lbl(3511)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3481)
lbl(3526)	definition(x(16) 3602 pid('AllTail' 3 pos('./standard/List.oz' 137 0) nil 3) <P: 38> nil)
		match(x(0) ht(3587 [onScalar(nil 3535) onRecord('|' 2 3539)]))
lbl(3535)	getLiteral(true x(2))
		return
lbl(3539)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3571 3576)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 38> 7)
lbl(3571)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3587)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(140)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3526)
lbl(3602)	definition(x(17) 3689 pid('Filter' 3 pos('./standard/List.oz' 143 0) nil 3) <P: 39> nil)
		match(x(0) ht(3674 [onScalar(nil 3611) onRecord('|' 2 3615)]))
lbl(3611)	getLiteral(nil x(2))
		return
lbl(3615)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 3651 3663)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3651)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3602)
lbl(3689)	definition(x(18) 3786 pid('DoFlatten' 4 pos('./standard/List.oz' 150 3) nil 4) <P: 40> nil)
		match(x(0) ht(3780 [onScalar(nil 3698) onRecord('|' 2 3705)]))
lbl(3698)	unify(x(1) x(2))
		getLiteral(true x(3))
		return
lbl(3705)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(7) 3752 3769)
		unify(y(5) y(2))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3752)	getList(y(2))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(153)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3780)	getLiteral(false x(3))
		return
		endDefinition(3689)
lbl(3786)	definition(x(18) 3837 pid('Flatten' 2 pos('./standard/List.oz' 162 3) nil 4) <P: 41> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(3) 3819 3824)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(3819)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(3824)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(163)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3786)
lbl(3837)	definition(x(19) 3944 pid('DoMerge' 5 pos('./standard/List.oz' 169 3) nil 5) <P: 42> nil)
		match(x(2) ht(3929 [onScalar(nil 3846) onRecord('|' 2 3853)]))
lbl(3846)	getList(x(4))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(3853)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
		testBool(y(6) 3899 3918)
		getList(y(5))
		unifyValVar(y(2) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3899)	getList(y(5))
		unifyValVar(y(0) x(4))
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(172)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3929)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3837)
lbl(3944)	definition(x(19) 4379 pid('DoSort' 5 pos('./standard/List.oz' 177 3) nil 7) <P: 43> nil)
		match(x(0) ht(4297 [onScalar(0 3953) onScalar(1 3960) onScalar(2 3973) onScalar(3 4041)]))
lbl(3953)	getLiteral(nil x(2))
		getLiteral(nil x(4))
		return
lbl(3960)	getList(x(1))
		unifyVariable(x(0))
		unifyValue(x(2))
		getList(x(4))
		unifyValue(x(0))
		unifyLiteral(nil)
		return
lbl(3973)	allocateL4
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyValue(x(2))
		moveMoveXYYX(x(4) y(2) y(0) x(0))
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 4017 4030)
		getList(y(2))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4017)	getList(y(2))
		unifyValVar(y(1) x(0))
		getList(x(0))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4041)	allocateL6
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(2))
		unifyValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4183 4286)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4112 4172)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4112)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4144 4161)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4144)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4161)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(186)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4172)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(185)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4183)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4215 4275)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4215)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4247 4264)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4247)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4264)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4297)	allocateL8
		putConstant(2 x(5))
		callBI('div' [x(0) x(5)]#[x(6)])
		putList(x(5))
		setVariable(y(0))
		setVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYYX(x(6) y(6) y(6) x(0))
		move(x(5) x(4))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		inlineMinus(x(0) x(1) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(7) x(1) y(3) x(2))
		move(y(4) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL8
		genFastCall(<P: 42> 11)
		endDefinition(3944)
lbl(4379)	definition(x(19) 4419 pid('Sort' 3 pos('./standard/List.oz' 203 3) nil 5) <P: 44> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<P: 43> 11)
		endDefinition(4379)
lbl(4419)	definition(x(20) 4465 pid('Merge' 4 pos('./standard/List.oz' 206 3) nil 6) <P: 45> nil)
		match(x(0) ht(4450 [onScalar(nil 4428) onRecord('|' 2 4432)]))
lbl(4428)	unify(x(3) x(1))
		return
lbl(4432)	getVarVar(x(0) x(5))
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 42> 11)
lbl(4450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4419)
lbl(4465)	definition(x(21) 4515 pid('ListTail' 3 pos('./standard/List.oz' 217 3) nil 5) <P: 46> nil)
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 4494)
		getList(x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 46> 7)
lbl(4494)	testNumber(x(0) 0 4502)
		unify(x(2) x(1))
		return
lbl(4502)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(218)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4465)
lbl(4515)	definition(x(22) 4564 pid('Subtract' 3 pos('./standard/List.oz' 221 3) nil 5) <P: 47> nil)
		match(x(0) ht(4549 [onScalar(nil 4524) onRecord('|' 2 4528)]))
lbl(4524)	getLiteral(nil x(2))
		return
lbl(4528)	getVarVar(x(0) x(3))
		testBI('\\=' [x(0) x(1)]#[x(4)] 4545)
		getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 47> 7)
lbl(4545)	unify(x(2) x(3))
		return
lbl(4549)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(224)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4515)
lbl(4564)	definition(x(23) 4598 pid('Last' 3 pos('./standard/List.oz' 227 3) nil 3) <P: 48> nil)
		match(x(1) ht(4583 [onScalar(nil 4573) onRecord('|' 2 4577)]))
lbl(4573)	unify(x(2) x(0))
		return
lbl(4577)	getVarVar(x(0) x(1))
		genFastCall(<P: 48> 7)
lbl(4583)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(230)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4564)
lbl(4598)	definition(x(23) 4651 pid('Find' 4 pos('./standard/List.oz' 234 6) nil 6) <P: 49> nil)
		match(x(2) ht(4636 [onScalar(nil 4607) onRecord('|' 2 4611)]))
lbl(4607)	getLiteral(false x(3))
		return
lbl(4611)	getVarVar(x(2) x(4))
		testBI('==' [x(0) x(2)]#[x(5)] 4630)
		move(x(1) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		genFastCall(<P: 50> 7)
lbl(4630)	move(x(4) x(2))
		genFastCall(<P: 49> 9)
lbl(4636)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(238)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4598)
lbl(4651)	definition(x(23) 4694 pid('Sub' 3 pos('./standard/List.oz' 241 6) nil 5) <P: 50> nil)
		match(x(0) ht(4679 [onScalar(nil 4660) onRecord('|' 2 4664)]))
lbl(4660)	getLiteral(true x(2))
		return
lbl(4664)	getVarVar(x(0) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 49> 9)
lbl(4679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4651)
lbl(4694)	definition(x(24) 4753 pid('Take' 3 pos('./standard/List.oz' 249 3) nil 6) <P: 51> nil)
		match(x(0) ht(4738 [onScalar(nil 4703) onRecord('|' 2 4707)]))
lbl(4703)	getLiteral(nil x(2))
		return
lbl(4707)	getVarVar(x(3) x(0))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4731)
		getListValVar(x(2) x(3) x(2))
		inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 51> 7)
lbl(4731)	getNumber(0 x(1))
		getLiteral(nil x(2))
		return
lbl(4738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4694)
lbl(4753)	definition(x(25) 4812 pid('Drop' 3 pos('./standard/List.oz' 255 3) nil 6) <P: 52> nil)
		match(x(0) ht(4797 [onScalar(nil 4762) onRecord('|' 2 4766)]))
lbl(4762)	getLiteral(nil x(2))
		return
lbl(4766)	getVoid(1)
		getVariable(x(3))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4790)
		inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 52> 7)
lbl(4790)	getNumber(0 x(1))
		unify(x(0) x(2))
		return
lbl(4797)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(258)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4753)
lbl(4812)	definition(x(26) 4880 pid('TakeDrop' 4 pos('./standard/List.oz' 261 3) nil 8) <P: 53> nil)
		match(x(0) ht(4865 [onScalar(nil 4821) onRecord('|' 2 4828)]))
lbl(4821)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4828)	getVarVar(x(4) x(5))
		putConstant(0 x(6))
		testLT(x(6) x(1) x(7) 4855)
		getListValVar(x(2) x(4) x(2))
		inlineMinus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 53> 9)
lbl(4855)	getNumber(0 x(1))
		getLiteral(nil x(2))
		unify(x(3) x(0))
		return
lbl(4865)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(267)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4812)
lbl(4880)	definition(x(27) 4980 pid('Partition' 4 pos('./standard/List.oz' 273 3) nil 4) <P: 54> nil)
		match(x(0) ht(4965 [onScalar(nil 4889) onRecord('|' 2 4896)]))
lbl(4889)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4896)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		call(y(2) 2)
		testBool(y(5) 4937 4954)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4937)	getList(y(4))
		unifyValVar(y(0) x(3))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(276)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4965)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(279)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4880)
lbl(4980)	definition(x(28) 5060 pid('TakeWhile' 3 pos('./standard/List.oz' 282 3) nil 3) <P: 55> nil)
		match(x(0) ht(5045 [onScalar(nil 4989) onRecord('|' 2 4993)]))
lbl(4989)	getLiteral(nil x(2))
		return
lbl(4993)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5029 5034)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 55> 7)
lbl(5029)	getLiteral(nil y(3))
		deAllocateL5
		return
lbl(5034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5045)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(285)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4980)
lbl(5060)	definition(x(29) 5141 pid('DropWhile' 3 pos('./standard/List.oz' 288 3) nil 4) <P: 56> nil)
		match(x(0) ht(5126 [onScalar(nil 5069) onRecord('|' 2 5073)]))
lbl(5069)	getLiteral(nil x(2))
		return
lbl(5073)	allocateL5
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5110 5115)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 56> 7)
lbl(5110)	unify(y(3) y(1))
		deAllocateL5
		return
lbl(5115)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(290)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5126)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(291)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5060)
lbl(5141)	definition(x(30) 5235 pid('TakeDropWhile' 4 pos('./standard/List.oz' 294 3) nil 4) <P: 57> nil)
		match(x(0) ht(5220 [onScalar(nil 5150) onRecord('|' 2 5157)]))
lbl(5150)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(5157)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(3) 2)
		testBool(y(6) 5201 5209)
		getList(y(4))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(5) x(3))
		deAllocateL7
		genFastCall(<P: 57> 9)
lbl(5201)	getLiteral(nil y(4))
		unify(y(5) y(2))
		deAllocateL7
		return
lbl(5209)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5220)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5141)
lbl(5235)	definition(x(31) 5308 pid('MapInd' 4 pos('./standard/List.oz' 306 3) nil 5) <P: 58> nil)
		match(x(0) ht(5293 [onScalar(nil 5244) onRecord('|' 2 5248)]))
lbl(5244)	getLiteral(nil x(3))
		return
lbl(5248)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		call(y(3) 3)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<P: 58> 9)
lbl(5293)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(309)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5235)
lbl(5308)	definition(x(31) 5383 pid('FoldLInd' 5 pos('./standard/List.oz' 312 3) nil 6) <P: 59> nil)
		match(x(0) ht(5368 [onScalar(nil 5317) onRecord('|' 2 5321)]))
lbl(5317)	unify(x(4) x(3))
		return
lbl(5321)	allocateL5
		getVarVar(x(5) y(0))
		inlinePlus1(x(1) x(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(0) y(3))
		move(x(1) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 59> 11)
lbl(5368)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(315)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5308)
lbl(5383)	definition(x(31) 5452 pid('FoldRInd' 5 pos('./standard/List.oz' 318 3) nil 6) <P: 60> nil)
		match(x(0) ht(5437 [onScalar(nil 5392) onRecord('|' 2 5396)]))
lbl(5392)	unify(x(4) x(3))
		return
lbl(5396)	allocateL5
		getVarVar(y(0) x(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(5) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 60> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5383)
lbl(5452)	definition(x(31) 5528 pid('FoldLTailInd' 5 pos('./standard/List.oz' 324 3) nil 6) <P: 61> nil)
		match(x(0) ht(5513 [onScalar(nil 5461) onRecord('|' 2 5465)]))
lbl(5461)	unify(x(4) x(3))
		return
lbl(5465)	allocateL5
		getVoid(1)
		getVariable(y(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(5) y(3))
		move(x(0) x(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 61> 11)
lbl(5513)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(327)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5452)
lbl(5528)	definition(x(31) 5603 pid('FoldRTailInd' 5 pos('./standard/List.oz' 330 3) nil 7) <P: 62> nil)
		match(x(0) ht(5588 [onScalar(nil 5537) onRecord('|' 2 5541)]))
lbl(5537)	unify(x(4) x(3))
		return
lbl(5541)	allocateL5
		getVoid(1)
		getVariable(x(5))
		inlinePlus1(x(1) x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 62> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5528)
lbl(5603)	definition(x(31) 5661 pid('ForAllInd' 3 pos('./standard/List.oz' 336 3) nil 4) <P: 63> nil)
		match(x(0) ht(5646 [onScalar(nil 5612) onRecord('|' 2 5613)]))
lbl(5612)	return
lbl(5613)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(x(3) x(1))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 63> 7)
lbl(5646)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(339)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5603)
lbl(5661)	definition(x(31) 5750 pid('AllInd' 4 pos('./standard/List.oz' 342 3) nil 5) <P: 64> nil)
		match(x(0) ht(5735 [onScalar(nil 5670) onRecord('|' 2 5674)]))
lbl(5670)	getLiteral(true x(3))
		return
lbl(5674)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5719 5724)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 64> 9)
lbl(5719)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(344)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5735)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(345)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5661)
lbl(5750)	definition(x(31) 5809 pid('ForAllTailInd' 3 pos('./standard/List.oz' 348 3) nil 3) <P: 65> nil)
		match(x(0) ht(5794 [onScalar(nil 5759) onRecord('|' 2 5760)]))
lbl(5759)	return
lbl(5760)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) x(1))
		move(y(1) x(0))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 65> 7)
lbl(5794)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(351)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5750)
lbl(5809)	definition(x(31) 5900 pid('AllTailInd' 4 pos('./standard/List.oz' 354 3) nil 4) <P: 66> nil)
		match(x(0) ht(5885 [onScalar(nil 5818) onRecord('|' 2 5822)]))
lbl(5818)	getLiteral(true x(3))
		return
lbl(5822)	allocateL5
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(1))
		move(y(1) x(0))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5869 5874)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 66> 9)
lbl(5869)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5885)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5809)
lbl(5900)	definition(x(31) 5989 pid('SomeInd' 4 pos('./standard/List.oz' 360 3) nil 5) <P: 67> nil)
		match(x(0) ht(5974 [onScalar(nil 5909) onRecord('|' 2 5913)]))
lbl(5909)	getLiteral(false x(3))
		return
lbl(5913)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5945 5963)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(5945)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 67> 9)
lbl(5963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(362)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(363)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5900)
lbl(5989)	definition(x(31) 6093 pid('FilterInd' 4 pos('./standard/List.oz' 366 3) nil 4) <P: 68> nil)
		match(x(0) ht(6078 [onScalar(nil 5998) onRecord('|' 2 6002)]))
lbl(5998)	getLiteral(nil x(3))
		return
lbl(6002)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6049 6067)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6049)	move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6078)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5989)
lbl(6093)	definition(x(31) 6210 pid('PartitionInd' 5 pos('./standard/List.oz' 375 3) nil 5) <P: 69> nil)
		match(x(0) ht(6195 [onScalar(nil 6102) onRecord('|' 2 6109)]))
lbl(6102)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6109)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(3) 3)
		testBool(y(6) 6161 6184)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(5) x(4))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6161)	getList(y(5))
		unifyValVar(y(0) x(4))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6184)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6195)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6093)
lbl(6210)	definition(x(31) 6301 pid('TakeWhileInd' 4 pos('./standard/List.oz' 384 3) nil 4) <P: 70> nil)
		match(x(0) ht(6286 [onScalar(nil 6219) onRecord('|' 2 6223)]))
lbl(6219)	getLiteral(nil x(3))
		return
lbl(6223)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6270 6275)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 70> 9)
lbl(6270)	getLiteral(nil y(4))
		deAllocateL6
		return
lbl(6275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(386)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6286)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(387)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6210)
lbl(6301)	definition(x(31) 6393 pid('DropWhileInd' 4 pos('./standard/List.oz' 390 3) nil 5) <P: 71> nil)
		match(x(0) ht(6378 [onScalar(nil 6310) onRecord('|' 2 6314)]))
lbl(6310)	getLiteral(nil x(3))
		return
lbl(6314)	allocateL6
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6362 6367)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 71> 9)
lbl(6362)	unify(y(4) y(1))
		deAllocateL6
		return
lbl(6367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6378)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(393)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6301)
lbl(6393)	definition(x(31) 6498 pid('TakeDropWhileInd' 5 pos('./standard/List.oz' 396 3) nil 5) <P: 72> nil)
		match(x(0) ht(6483 [onScalar(nil 6402) onRecord('|' 2 6409)]))
lbl(6402)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6409)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYYX(x(4) y(6) y(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(7) x(2))
		call(y(4) 3)
		testBool(y(7) 6464 6472)
		getList(y(5))
		unifyValVar(y(0) x(3))
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(6) x(4))
		deAllocateL8
		genFastCall(<P: 72> 11)
lbl(6464)	getLiteral(nil y(5))
		unify(y(6) y(2))
		deAllocateL8
		return
lbl(6472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(399)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6483)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(402)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6393)
lbl(6498)	definition(x(31) 6595 pid('Zip' 4 pos('./standard/List.oz' 406 3) nil 4) <P: 73> nil)
		match(x(0) ht(6580 [onScalar(nil 6507) onRecord('|' 2 6528)]))
lbl(6507)	testLiteral(x(1) nil 6515)
lbl(6511)	getLiteral(nil x(3))
		return
lbl(6515)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(407)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6528)	allocateL4
		getVarVar(x(0) y(0))
		testList(x(1) 6567)
lbl(6535)	getVarVar(x(1) y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(3) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 73> 9)
lbl(6567)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(408)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(409)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6498)
lbl(6595)	definition(x(32) 6626 pid('NumberInc' 4 pos('./standard/List.oz' 412 3) nil 5) <P: 74> nil)
		testLT(x(1) x(0) x(4) 6610)
		getLiteral(nil x(3))
		return
lbl(6610)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 74> 9)
		endDefinition(6595)
lbl(6626)	definition(x(32) 6657 pid('NumberDec' 4 pos('./standard/List.oz' 416 3) nil 5) <P: 75> nil)
		testLT(x(0) x(1) x(4) 6641)
		getLiteral(nil x(3))
		return
lbl(6641)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 75> 9)
		endDefinition(6626)
lbl(6657)	definition(x(32) 6703 pid('EnterArgs' 3 pos('./standard/List.oz' 421 6) nil 5) <P: 76> nil)
		match(x(0) ht(6688 [onScalar(nil 6666) onRecord('|' 2 6667)]))
lbl(6666)	return
lbl(6667)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 76> 7)
lbl(6688)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(424)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6657)
lbl(6703)	definition(x(32) 6751 pid('ToTuple' 3 pos('./standard/List.oz' 427 6) nil 3) <P: 77> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		callBI('MakeTuple' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		putConstant(1 x(1))
		deAllocateL4
		genFastCall(<P: 76> 7)
		endDefinition(6703)
lbl(6751)	definition(x(33) 6822 pid('IsPrefix' 3 pos('./standard/List.oz' 433 3) nil 6) <P: 78> nil)
		match(x(0) ht(6807 [onScalar(nil 6760) onRecord('|' 2 6764)]))
lbl(6760)	getLiteral(true x(2))
		return
lbl(6764)	getVarVar(x(0) x(3))
		match(x(1) ht(6794 [onScalar(nil 6770) onRecord('|' 2 6774)]))
lbl(6770)	getLiteral(false x(2))
		return
lbl(6774)	getVarVar(x(1) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 6790)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 78> 7)
lbl(6790)	getLiteral(false x(2))
		return
lbl(6794)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(438)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6807)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6751)
lbl(6822)	putRecord(list [all allInd allTail allTailInd append drop dropWhile dropWhileInd filter filterInd flatten foldL foldLInd foldLTail foldLTailInd foldR foldRInd foldRTail foldRTailInd forAll forAllInd forAllTail forAllTailInd is isPrefix last length make map mapInd member merge nth number partition partitionInd reverse some someInd sort sub subtract take takeDrop takeDropWhile takeDropWhileInd takeWhile takeWhileInd toRecord toTuple withTail zip] y(93))
		setValue(x(13))
		setVariable(x(34))
		setValue(x(16))
		setVariable(x(35))
		setValue(x(2))
		setValue(x(25))
		setValue(x(29))
		setVariable(x(36))
		setValue(x(17))
		setVariable(x(37))
		setValue(x(18))
		setValue(x(8))
		setVariable(y(94))
		setValue(x(9))
		setVariable(x(38))
		setValue(x(10))
		setVariable(y(95))
		setValue(x(11))
		setVariable(x(39))
		setValue(x(12))
		setVariable(y(96))
		setValue(x(15))
		setVariable(y(97))
		setValue(x(1))
		setValue(x(33))
		setVariable(y(98))
		setValue(x(4))
		setValue(x(0))
		setValue(x(7))
		setVariable(y(99))
		setValue(x(3))
		setValue(x(20))
		setValue(x(5))
		setVariable(y(100))
		setValue(x(27))
		setVariable(x(40))
		setValue(x(6))
		setValue(x(14))
		setVariable(x(41))
		setValue(x(19))
		setValue(x(23))
		setValue(x(22))
		setValue(x(24))
		setValue(x(26))
		setValue(x(30))
		setVariable(x(42))
		setValue(x(28))
		setVariable(x(43))
		setValue(y(2))
		setValue(x(32))
		setValue(x(21))
		setValue(x(31))
lbl(6930)	definition(x(21) 6966 pid('List.last' 2 pos('./standard/List.oz' 452 4) nil 4) <P: 79> nil)
		testList(x(0) 6951)
lbl(6939)	getVarVar(x(0) x(3))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 48> 7)
lbl(6951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(453)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6930)
lbl(6966)	unify(x(21) y(98))
lbl(6969)	definition(x(21) 6991 pid('List.number' 4 pos('./standard/List.oz' 463 4) nil 6) <P: 80> nil)
		putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 6986)
		genFastCall(<P: 74> 9)
lbl(6986)	genFastCall(<P: 75> 9)
		endDefinition(6969)
lbl(6991)	unify(x(21) y(100))
lbl(6994)	definition(x(21) 7014 pid('List.mapInd' 3 pos('./standard/List.oz' 489 4) nil 4) <P: 81> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 58> 9)
		endDefinition(6994)
lbl(7014)	unify(x(21) y(99))
lbl(7017)	definition(x(21) 7040 pid('List.foldLInd' 4 pos('./standard/List.oz' 493 4) nil 5) <P: 82> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 59> 11)
		endDefinition(7017)
lbl(7040)	unify(x(21) y(94))
lbl(7043)	definition(x(21) 7066 pid('List.foldRInd' 4 pos('./standard/List.oz' 497 4) nil 5) <P: 83> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 60> 11)
		endDefinition(7043)
lbl(7066)	unify(x(21) y(95))
lbl(7069)	definition(x(21) 7092 pid('List.foldLTailInd' 4 pos('./standard/List.oz' 501 4) nil 5) <P: 84> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 61> 11)
		endDefinition(7069)
lbl(7092)	unify(x(21) x(38))
lbl(7095)	definition(x(21) 7118 pid('List.foldRTailInd' 4 pos('./standard/List.oz' 505 4) nil 5) <P: 85> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 62> 11)
		endDefinition(7095)
lbl(7118)	unify(x(21) x(39))
lbl(7121)	definition(x(21) 7138 pid('List.forAllInd' 2 pos('./standard/List.oz' 509 4) nil 3) <P: 86> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 63> 7)
		endDefinition(7121)
lbl(7138)	unify(x(21) y(96))
lbl(7141)	definition(x(21) 7161 pid('List.allInd' 3 pos('./standard/List.oz' 513 4) nil 4) <P: 87> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 64> 9)
		endDefinition(7141)
lbl(7161)	unify(x(21) x(34))
lbl(7164)	definition(x(21) 7184 pid('List.someInd' 3 pos('./standard/List.oz' 517 4) nil 4) <P: 88> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 67> 9)
		endDefinition(7164)
lbl(7184)	unify(x(21) x(41))
lbl(7187)	definition(x(21) 7204 pid('List.forAllTailInd' 2 pos('./standard/List.oz' 521 4) nil 3) <P: 89> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 65> 7)
		endDefinition(7187)
lbl(7204)	unify(x(21) y(97))
lbl(7207)	definition(x(21) 7227 pid('List.allTailInd' 3 pos('./standard/List.oz' 525 4) nil 4) <P: 90> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 66> 9)
		endDefinition(7207)
lbl(7227)	unify(x(21) x(35))
lbl(7230)	definition(x(21) 7250 pid('List.filterInd' 3 pos('./standard/List.oz' 529 4) nil 4) <P: 91> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 68> 9)
		endDefinition(7230)
lbl(7250)	unify(x(21) x(37))
lbl(7253)	definition(x(21) 7276 pid('List.partitionInd' 4 pos('./standard/List.oz' 533 4) nil 5) <P: 92> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 69> 11)
		endDefinition(7253)
lbl(7276)	unify(x(21) x(40))
lbl(7279)	definition(x(21) 7299 pid('List.takeWhileInd' 3 pos('./standard/List.oz' 537 4) nil 4) <P: 93> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 70> 9)
		endDefinition(7279)
lbl(7299)	unify(x(21) x(43))
lbl(7302)	definition(x(21) 7322 pid('List.dropWhileInd' 3 pos('./standard/List.oz' 541 4) nil 4) <P: 94> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 71> 9)
		endDefinition(7302)
lbl(7322)	unify(x(21) x(36))
lbl(7325)	definition(x(21) 7348 pid('List.takeDropWhileInd' 4 pos('./standard/List.oz' 545 4) nil 5) <P: 95> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 72> 11)
		endDefinition(7325)
lbl(7348)	unify(x(21) x(42))
		putConstant('IsProcedure' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(24)])
		putConstant('ProcedureArity' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(25)])
		putRecord(procedure [arity is] y(101))
		setValue(x(25))
		setValue(x(24))
lbl(7377)	definition(x(21) 7421 pid('HelpPlusOne' 3 pos('./standard/Loop.oz' 36 3) nil 4) <P: 96> nil)
		testLE(x(0) x(1) x(3) 7418)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 96> 7)
lbl(7418)	return
		endDefinition(7377)
lbl(7421)	definition(x(21) 7465 pid('HelpMinusOne' 3 pos('./standard/Loop.oz' 42 3) nil 4) <P: 97> nil)
		testLE(x(1) x(0) x(3) 7462)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 97> 7)
lbl(7462)	return
		endDefinition(7421)
lbl(7465)	definition(x(21) 7517 pid('HelpPlus' 4 pos('./standard/Loop.oz' 47 3) nil 5) <P: 98> nil)
		testLE(x(0) x(1) x(4) 7514)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 98> 9)
lbl(7514)	return
		endDefinition(7465)
lbl(7517)	definition(x(21) 7569 pid('HelpMinus' 4 pos('./standard/Loop.oz' 52 3) nil 5) <P: 99> nil)
		testLE(x(1) x(0) x(4) 7566)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 99> 9)
lbl(7566)	return
		endDefinition(7517)
lbl(7569)	definition(x(21) 7611 pid('For' 4 pos('./standard/Loop.oz' 58 3) nil 6) <P: 100> nil)
		testNumber(x(2) 1 7585)
		move(x(3) x(2))
		genFastCall(<P: 96> 7)
lbl(7585)	testNumber(x(2) ~1 7595)
		move(x(3) x(2))
		genFastCall(<P: 97> 7)
lbl(7595)	putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 7606)
		genFastCall(<P: 98> 9)
lbl(7606)	genFastCall(<P: 99> 9)
		endDefinition(7569)
lbl(7611)	definition(x(23) 7671 pid('HelpPlusOne' 5 pos('./standard/Loop.oz' 71 3) nil 6) <P: 101> nil)
		testLE(x(0) x(1) x(5) 7665)
		allocateL5
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 101> 11)
lbl(7665)	unify(x(4) x(3))
		return
		endDefinition(7611)
lbl(7671)	definition(x(23) 7731 pid('HelpMinusOne' 5 pos('./standard/Loop.oz' 76 3) nil 6) <P: 102> nil)
		testLE(x(1) x(0) x(5) 7725)
		allocateL5
		inlineMinus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 102> 11)
lbl(7725)	unify(x(4) x(3))
		return
		endDefinition(7671)
lbl(7731)	definition(x(23) 7797 pid('HelpPlus' 6 pos('./standard/Loop.oz' 81 3) nil 7) <P: 103> nil)
		testLE(x(0) x(1) x(6) 7791)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 103> 13)
lbl(7791)	unify(x(5) x(4))
		return
		endDefinition(7731)
lbl(7797)	definition(x(23) 7863 pid('HelpMinus' 6 pos('./standard/Loop.oz' 86 3) nil 7) <P: 104> nil)
		testLE(x(1) x(0) x(6) 7857)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 104> 13)
lbl(7857)	unify(x(5) x(4))
		return
		endDefinition(7797)
lbl(7863)	definition(x(23) 7917 pid('ForThread' 6 pos('./standard/Loop.oz' 92 3) nil 8) <P: 105> nil)
		testNumber(x(2) 1 7885)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 101> 11)
lbl(7885)	testNumber(x(2) ~1 7901)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 102> 11)
lbl(7901)	putConstant(0 x(6))
		testLT(x(6) x(2) x(7) 7912)
		genFastCall(<P: 103> 13)
lbl(7912)	genFastCall(<P: 104> 13)
		endDefinition(7863)
lbl(7917)	definition(x(26) 8016 pid('MultiFor' 2 pos('./standard/Loop.oz' 103 3) nil 4) <P: 106> nil)
		createVariable(x(2))
lbl(7925)	definition(x(3) 8005 pid('Help' 2 pos('./standard/Loop.oz' 104 6) nil 6) unit [x(1) x(2)])
		match(x(0) ht(7990 [onScalar(nil 7934) onRecord('|' 2 7951)]))
lbl(7934)	allocateL1
		move(x(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(7951)	getVarVar(x(4) x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyVariable(x(2))
lbl(7964)	definition(x(3) 7984 pid('' 1 pos('./standard/Loop.oz' 107 24) nil 2) unit [x(1) g(1) x(5)])
		putList(x(1))
		setValue(x(0))
		setValue(g(0))
		move(g(2) x(0))
		tailCall(g(1) 2)
		endDefinition(7964)
lbl(7984)	move(x(4) x(1))
		genFastCall(<P: 100> 9)
lbl(7990)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(108)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(7925)
lbl(8005)	unify(x(3) x(2))
		putConstant(nil x(1))
		tailCall(x(2) 2)
		endDefinition(7917)
lbl(8016)	definition(x(28) 8146 pid('MultiForThread' 4 pos('./standard/Loop.oz' 114 3) nil 6) <P: 107> nil)
		createVariable(x(4))
lbl(8024)	definition(x(5) 8135 pid('Help' 4 pos('./standard/Loop.oz' 115 6) nil 10) unit [x(1) x(4)])
		match(x(0) ht(8120 [onScalar(nil 8033) onRecord('|' 2 8060)]))
lbl(8033)	allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailCall(g(0) 3)
lbl(8060)	getVarVar(x(6) x(7))
		getRecord('#' 3 x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		unifyVariable(x(8))
lbl(8073)	definition(x(9) 8102 pid('' 3 pos('./standard/Loop.oz' 119 6) nil 5) unit [x(1) g(1) x(7)])
		putList(x(4))
		setValue(x(1))
		setValue(g(0))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(2) x(0))
		move(x(4) x(1))
		tailCall(g(1) 4)
		endDefinition(8073)
lbl(8102)	move(x(6) x(1))
		move(x(2) x(4))
		move(x(8) x(2))
		move(x(3) x(5))
		move(x(9) x(3))
		genFastCall(<P: 105> 13)
lbl(8120)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(120)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8024)
lbl(8135)	unify(x(5) x(4))
		putConstant(nil x(1))
		tailCall(x(4) 4)
		endDefinition(8016)
lbl(8146)	putRecord(loop [for forThread multiFor multiForThread] y(102))
		setValue(x(21))
		setValue(x(23))
		setValue(x(26))
		setValue(x(28))
		putConstant('NewDictionary' x(26))
		putConstant(1 x(28))
		callBI(builtin [x(26) x(28)]#[x(29)])
		putConstant('IsDictionary' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(34)])
		putConstant('Dictionary.entries' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(35)])
		putRecord(dictionary [clone condGet entries get is items keys member new put remove removeAll toRecord] y(103))
		setVariable(x(26))
		setVariable(x(28))
		setValue(x(35))
		setVariable(x(36))
		setValue(x(34))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setValue(x(29))
		setVariable(x(40))
		setVariable(x(41))
		setVariable(x(42))
		setVariable(y(104))
		putConstant('Dictionary.put' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(40))
		putConstant('Dictionary.get' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(36))
		putConstant('Dictionary.condGet' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(28))
		putConstant('Dictionary.keys' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(38))
		putConstant('Dictionary.items' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(37))
		putConstant('Dictionary.remove' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(41))
		putConstant('Dictionary.removeAll' x(43))
		putConstant(1 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(42))
		putConstant('Dictionary.clone' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(26))
		putConstant('Dictionary.member' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(39))
lbl(8323)	definition(x(43) 8341 pid('Dictionary.toRecord' 3 pos('./standard/Dictionary.oz' 51 21) nil 4) <P: 108> nil)
		callBI('Dictionary.entries' [x(1)]#[x(3)])
		callBI(record [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
		endDefinition(8323)
lbl(8341)	unify(x(43) y(104))
		putConstant('Arity' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		putConstant('IsRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(46)])
		putConstant('Label' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(83))
		putConstant('Width' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(81))
		putConstant('Adjoin' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(82))
		putConstant('AdjoinList' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		putConstant('AdjoinAt' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(48)])
		putConstant('IsRecordC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(49)])
		putConstant('WidthC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(50)])
		putConstant('TellRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(51)])
lbl(8443)	definition(x(43) 8494 pid('MakeEmpty' 2 pos('./standard/Record.oz' 45 3) nil 4) <P: 109> nil)
		match(x(0) ht(8479 [onScalar(nil 8452) onRecord('|' 2 8456)]))
lbl(8452)	getLiteral(nil x(1))
		return
lbl(8456)	getVarVar(x(2) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('#' 2 x(1))
		unifyValue(x(2))
		unifyVoid(1)
		move(x(3) x(1))
		genFastCall(<P: 109> 5)
lbl(8479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(48)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8443)
lbl(8494)	definition(x(43) 8530 pid('MakeRecord' 3 pos('./standard/Record.oz' 51 3) nil 3) <P: 110> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 109> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(8494)
lbl(8530)	createVariable(y(105))
lbl(8532)	definition(x(44) 8606 pid('DescendArity' 2 pos('./standard/Record.oz' 61 3) nil 6) <P: 111> [y(105)])
		match(x(0) ht(8591 [onScalar(nil 8541) onRecord('|' 2 8542)]))
lbl(8541)	return
lbl(8542)	getVarVar(x(2) x(3))
		testList(x(1) 8570)
lbl(8548)	getVarVar(x(1) x(4))
		testBI('==' [x(2) x(1)]#[x(5)] 8564)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8564)	move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8570)	move(g(0) x(0))
		inlineDot(x(0) raiseError x(3) cache)
		move(x(2) x(1))
		putConstant(arityMismatchDefaultMethod x(0))
		tailSendMsg(object x(3) 2 cache)
lbl(8591)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(70)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8532)
lbl(8606)	definition(x(44) 8629 pid('AritySublist' 2 pos('./standard/Record.oz' 73 3) nil 4) <P: 112> nil)
		callBI('Arity' [x(0)]#[x(2)])
		callBI('Arity' [x(1)]#[x(3)])
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 111> 5)
		endDefinition(8606)
lbl(8629)	moveMoveXYXY(x(0) y(106) x(1) y(107))
		moveMoveXYXY(x(2) y(108) x(3) y(109))
		moveMoveXYXY(x(4) y(110) x(5) y(111))
		moveMoveXYXY(x(6) y(112) x(7) y(113))
		moveMoveXYXY(x(8) y(114) x(10) y(115))
		moveMoveXYXY(x(9) y(116) x(11) y(117))
		moveMoveXYXY(x(12) y(118) x(13) y(119))
		moveMoveXYXY(x(15) y(120) x(16) y(121))
		moveMoveXYXY(x(14) y(122) x(17) y(123))
		moveMoveXYXY(x(19) y(124) x(20) y(125))
		moveMoveXYXY(x(18) y(126) x(24) y(127))
		moveMoveXYXY(x(25) y(128) x(21) y(129))
		moveMoveXYXY(x(23) y(130) x(34) y(131))
		moveMoveXYXY(x(29) y(132) x(46) y(133))
		moveMoveXYXY(x(43) y(134) x(45) y(135))
		moveMoveXYXY(x(47) y(136) x(48) y(137))
		moveMoveXYXY(x(49) y(138) x(50) y(139))
		moveMoveXYXY(x(51) y(140) x(22) y(141))
		moveMoveXYXY(x(27) y(142) x(30) y(143))
		moveMoveXYXY(x(31) y(144) x(32) y(145))
		moveMoveXYXY(x(33) y(146) x(35) y(147))
		moveMoveXYXY(x(40) y(148) x(36) y(149))
		moveMoveXYXY(x(28) y(150) x(38) y(151))
		moveMoveXYXY(x(37) y(152) x(41) y(153))
		moveMoveXYXY(x(42) y(154) x(26) y(155))
		moveMoveXYXY(x(39) y(156) x(44) y(157))
		move(y(81) x(1))
		putConstant(width x(0))
		genFastCall(<P: 1> 4)
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('^' x(0))
		genFastCall(<P: 1> 4)
		putConstant(tellRecordSize x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(tellRecordSize x(0))
		genFastCall(<P: 1> 4)
		move(y(157) x(1))
		putConstant(aritySublist x(0))
		genFastCall(<P: 1> 4)
		putConstant(monitorArity x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(8816)	definition(x(2) 8845 pid('MonitorArity' 3 pos('./standard/Record.oz' 91 6) nil 4) <P: 113> nil)
		createVariable(x(3))
		callBI(monitorArity [x(0) x(3) x(2)]#nil)
lbl(8827)	definition(x(0) 8839 pid('P' 0 pos('./standard/Record.oz' 94 2) nil 0) unit [x(3)])
		getLiteral(unit g(0))
		return
		endDefinition(8827)
lbl(8839)	unify(x(0) x(1))
		return
		endDefinition(8816)
lbl(8845)	definition(x(0) 8860 pid('ReflectArity' 2 pos('./standard/Record.oz' 97 6) nil 3) <P: 114> nil)
		putConstant(unit x(2))
		callBI(monitorArity [x(0) x(2) x(1)]#nil)
		return
		endDefinition(8845)
lbl(8860)	definition(x(3) 8919 pid('MakePairs' 3 pos('./standard/Record.oz' 102 3) nil 6) <P: 115> nil)
		match(x(0) ht(8904 [onScalar(nil 8869) onRecord('|' 2 8873)]))
lbl(8869)	getLiteral(nil x(2))
		return
lbl(8873)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 115> 7)
lbl(8904)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(105)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8860)
lbl(8919)	definition(x(3) 8975 pid('Subtract' 3 pos('./standard/Record.oz' 108 3) nil 5) <P: 116> [y(141)])
		allocateL5
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 47> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 115> 6)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(8919)
lbl(8975)	definition(x(4) 9051 pid('Map' 4 pos('./standard/Record.oz' 115 3) nil 5) <P: 117> nil)
		match(x(0) ht(9036 [onScalar(nil 8984) onRecord('|' 2 8988)]))
lbl(8984)	getLiteral(nil x(3))
		return
lbl(8988)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 117> 9)
lbl(9036)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8975)
lbl(9051)	definition(x(4) 9117 pid('MapT' 5 pos('./standard/Record.oz' 121 3) nil 7) <P: 118> nil)
		testLE(x(0) x(1) x(5) 9114)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 118> 11)
lbl(9114)	return
		endDefinition(9051)
lbl(9117)	definition(x(4) 9189 pid('FoldL' 5 pos('./standard/Record.oz' 127 3) nil 6) <P: 119> nil)
		match(x(0) ht(9174 [onScalar(nil 9126) onRecord('|' 2 9130)]))
lbl(9126)	unify(x(4) x(3))
		return
lbl(9130)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 119> 11)
lbl(9174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(130)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9117)
lbl(9189)	definition(x(4) 9265 pid('FoldLT' 6 pos('./standard/Record.oz' 133 3) nil 8) <P: 120> nil)
		testLT(x(0) x(1) x(6) 9251)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(x(7) x(1))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 120> 13)
lbl(9251)	callBI('.' [x(2) x(0)]#[x(1)])
		move(x(4) x(0))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9189)
lbl(9265)	definition(x(4) 9331 pid('FoldR' 5 pos('./standard/Record.oz' 139 3) nil 7) <P: 121> nil)
		match(x(0) ht(9316 [onScalar(nil 9274) onRecord('|' 2 9278)]))
lbl(9274)	unify(x(4) x(3))
		return
lbl(9278)	allocateL4
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(6) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 121> 10)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9265)
lbl(9331)	definition(x(4) 9397 pid('FoldRT' 6 pos('./standard/Record.oz' 145 3) nil 8) <P: 122> nil)
		testLT(x(0) x(1) x(6) 9380)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		move(x(6) y(2))
		move(x(7) x(0))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 122> 12)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9380)	callBI('.' [x(2) x(0)]#[x(6)])
		move(x(6) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9331)
lbl(9397)	definition(x(4) 9452 pid('ForAll' 3 pos('./standard/Record.oz' 151 3) nil 4) <P: 123> nil)
		match(x(0) ht(9437 [onScalar(nil 9406) onRecord('|' 2 9407)]))
lbl(9406)	return
lbl(9407)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		call(y(2) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 123> 7)
lbl(9437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(154)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9397)
lbl(9452)	definition(x(4) 9507 pid('ForAllT' 4 pos('./standard/Record.oz' 157 3) nil 5) <P: 124> nil)
		testLE(x(0) x(1) x(4) 9504)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		call(y(3) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 124> 9)
lbl(9504)	return
		endDefinition(9452)
lbl(9507)	definition(x(4) 9593 pid('All' 4 pos('./standard/Record.oz' 163 3) nil 5) <P: 125> nil)
		match(x(0) ht(9578 [onScalar(nil 9516) onRecord('|' 2 9520)]))
lbl(9516)	getLiteral(true x(3))
		return
lbl(9520)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9562 9567)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 125> 9)
lbl(9562)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(9567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(165)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9578)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9507)
lbl(9593)	definition(x(4) 9679 pid('AllT' 5 pos('./standard/Record.oz' 169 3) nil 6) <P: 126> nil)
		testLE(x(0) x(1) x(5) 9673)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9657 9662)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 126> 11)
lbl(9657)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(9662)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9673)	getLiteral(true x(4))
		return
		endDefinition(9593)
lbl(9679)	definition(x(4) 9765 pid('Some' 4 pos('./standard/Record.oz' 175 3) nil 5) <P: 127> nil)
		match(x(0) ht(9750 [onScalar(nil 9688) onRecord('|' 2 9692)]))
lbl(9688)	getLiteral(false x(3))
		return
lbl(9692)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9725 9739)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(9725)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 127> 9)
lbl(9739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(177)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9750)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9679)
lbl(9765)	definition(x(4) 9851 pid('SomeT' 5 pos('./standard/Record.oz' 181 3) nil 6) <P: 128> nil)
		testLE(x(0) x(1) x(5) 9845)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9811 9834)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(9811)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 128> 11)
lbl(9834)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9845)	getLiteral(false x(4))
		return
		endDefinition(9765)
lbl(9851)	definition(x(4) 9962 pid('Filter' 4 pos('./standard/Record.oz' 185 3) nil 5) <P: 129> nil)
		match(x(0) ht(9947 [onScalar(nil 9860) onRecord('|' 2 9864)]))
lbl(9860)	getLiteral(nil x(3))
		return
lbl(9864)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 9922 9936)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9922)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9947)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(191)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9851)
lbl(9962)	definition(x(4) 10095 pid('Part' 5 pos('./standard/Record.oz' 194 3) nil 6) <P: 130> nil)
		match(x(0) ht(10080 [onScalar(nil 9971) onRecord('|' 2 9978)]))
lbl(9971)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(9978)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(2) 2)
		testBool(y(7) 10041 10069)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10041)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(197)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10080)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(200)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9962)
lbl(10095)	definition(x(4) 10197 pid('Take' 4 pos('./standard/Record.oz' 203 3) nil 5) <P: 131> nil)
		match(x(0) ht(10182 [onScalar(nil 10104) onRecord('|' 2 10108)]))
lbl(10104)	getLiteral(nil x(3))
		return
lbl(10108)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10166 10171)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 131> 9)
lbl(10166)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10182)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10095)
lbl(10197)	definition(x(4) 10299 pid('Drop' 4 pos('./standard/Record.oz' 210 3) nil 5) <P: 132> nil)
		match(x(0) ht(10284 [onScalar(nil 10206) onRecord('|' 2 10210)]))
lbl(10206)	getLiteral(nil x(3))
		return
lbl(10210)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10247 10273)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10247)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 132> 9)
lbl(10273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(213)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10284)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(214)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10197)
lbl(10299)	definition(x(4) 10421 pid('TakeDrop' 5 pos('./standard/Record.oz' 217 3) nil 7) <P: 133> nil)
		match(x(0) ht(10406 [onScalar(nil 10308) onRecord('|' 2 10315)]))
lbl(10308)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(10315)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(3) 2)
		testBool(y(8) 10380 10395)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 133> 11)
lbl(10380)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(10395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(220)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(223)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10299)
lbl(10421)	definition(x(4) 10497 pid('MapInd' 4 pos('./standard/Record.oz' 229 3) nil 5) <P: 134> nil)
		match(x(0) ht(10482 [onScalar(nil 10430) onRecord('|' 2 10434)]))
lbl(10430)	getLiteral(nil x(3))
		return
lbl(10434)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(1))
		move(x(4) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 134> 9)
lbl(10482)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(232)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10421)
lbl(10497)	definition(x(4) 10563 pid('MapIndT' 5 pos('./standard/Record.oz' 235 3) nil 7) <P: 135> nil)
		testLE(x(0) x(1) x(5) 10560)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		move(x(6) x(2))
		call(y(3) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 135> 11)
lbl(10560)	return
		endDefinition(10497)
lbl(10563)	definition(x(4) 10635 pid('FoldLInd' 5 pos('./standard/Record.oz' 241 3) nil 6) <P: 136> nil)
		match(x(0) ht(10620 [onScalar(nil 10572) onRecord('|' 2 10576)]))
lbl(10572)	unify(x(4) x(3))
		return
lbl(10576)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 136> 11)
lbl(10620)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(244)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10563)
lbl(10635)	definition(x(4) 10703 pid('FoldLIndT' 6 pos('./standard/Record.oz' 247 3) nil 8) <P: 137> nil)
		testLE(x(0) x(1) x(6) 10697)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 137> 13)
lbl(10697)	unify(x(5) x(4))
		return
		endDefinition(10635)
lbl(10703)	definition(x(4) 10774 pid('FoldRInd' 5 pos('./standard/Record.oz' 253 3) nil 7) <P: 138> nil)
		match(x(0) ht(10759 [onScalar(nil 10712) onRecord('|' 2 10716)]))
lbl(10712)	unify(x(4) x(3))
		return
lbl(10716)	allocateL5
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		moveMoveXYXY(x(0) y(2) x(6) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 138> 10)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(1) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10759)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10703)
lbl(10774)	definition(x(4) 10834 pid('FoldRIndT' 6 pos('./standard/Record.oz' 259 3) nil 8) <P: 139> nil)
		testLE(x(0) x(1) x(6) 10828)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(7) x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<P: 139> 12)
		moveMoveYXYX(y(1) x(4) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(2) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10828)	unify(x(5) x(4))
		return
		endDefinition(10774)
lbl(10834)	definition(x(4) 10889 pid('ForAllInd' 3 pos('./standard/Record.oz' 265 3) nil 4) <P: 140> nil)
		match(x(0) ht(10874 [onScalar(nil 10843) onRecord('|' 2 10844)]))
lbl(10843)	return
lbl(10844)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 140> 7)
lbl(10874)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(268)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10834)
lbl(10889)	definition(x(4) 10944 pid('ForAllIndT' 4 pos('./standard/Record.oz' 271 3) nil 5) <P: 141> nil)
		testLE(x(0) x(1) x(4) 10941)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 141> 9)
lbl(10941)	return
		endDefinition(10889)
lbl(10944)	definition(x(4) 11030 pid('AllInd' 4 pos('./standard/Record.oz' 277 3) nil 5) <P: 142> nil)
		match(x(0) ht(11015 [onScalar(nil 10953) onRecord('|' 2 10957)]))
lbl(10953)	getLiteral(true x(3))
		return
lbl(10957)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 10999 11004)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 142> 9)
lbl(10999)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(11004)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(279)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11015)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(280)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10944)
lbl(11030)	definition(x(4) 11116 pid('AllIndT' 5 pos('./standard/Record.oz' 283 3) nil 6) <P: 143> nil)
		testLE(x(0) x(1) x(5) 11110)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11094 11099)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 143> 11)
lbl(11094)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(11099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11110)	getLiteral(true x(4))
		return
		endDefinition(11030)
lbl(11116)	definition(x(4) 11202 pid('SomeInd' 4 pos('./standard/Record.oz' 289 3) nil 5) <P: 144> nil)
		match(x(0) ht(11187 [onScalar(nil 11125) onRecord('|' 2 11129)]))
lbl(11125)	getLiteral(false x(3))
		return
lbl(11129)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 11162 11176)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(11162)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 144> 9)
lbl(11176)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(291)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11187)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(292)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11116)
lbl(11202)	definition(x(4) 11288 pid('SomeIndT' 5 pos('./standard/Record.oz' 295 3) nil 6) <P: 145> nil)
		testLE(x(0) x(1) x(5) 11282)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11248 11271)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(11248)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 145> 11)
lbl(11271)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11282)	getLiteral(false x(4))
		return
		endDefinition(11202)
lbl(11288)	definition(x(4) 11399 pid('FilterInd' 4 pos('./standard/Record.oz' 299 3) nil 5) <P: 146> nil)
		match(x(0) ht(11384 [onScalar(nil 11297) onRecord('|' 2 11301)]))
lbl(11297)	getLiteral(nil x(3))
		return
lbl(11301)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11359 11373)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11359)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11373)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(305)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11288)
lbl(11399)	definition(x(4) 11532 pid('PartInd' 5 pos('./standard/Record.oz' 308 3) nil 6) <P: 147> nil)
		match(x(0) ht(11517 [onScalar(nil 11408) onRecord('|' 2 11415)]))
lbl(11408)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11415)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(1))
		createVariableMove(y(7) x(2))
		call(y(2) 3)
		testBool(y(7) 11478 11506)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11478)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11506)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(311)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11517)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(314)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11399)
lbl(11532)	definition(x(4) 11634 pid('TakeInd' 4 pos('./standard/Record.oz' 317 3) nil 5) <P: 148> nil)
		match(x(0) ht(11619 [onScalar(nil 11541) onRecord('|' 2 11545)]))
lbl(11541)	getLiteral(nil x(3))
		return
lbl(11545)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11603 11608)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 148> 9)
lbl(11603)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11608)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(320)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11619)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11532)
lbl(11634)	definition(x(4) 11736 pid('DropInd' 4 pos('./standard/Record.oz' 324 3) nil 5) <P: 149> nil)
		match(x(0) ht(11721 [onScalar(nil 11643) onRecord('|' 2 11647)]))
lbl(11643)	getLiteral(nil x(3))
		return
lbl(11647)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11684 11710)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11684)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 149> 9)
lbl(11710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11634)
lbl(11736)	definition(x(4) 11861 pid('TakeDropInd' 5 pos('./standard/Record.oz' 331 3) nil 7) <P: 150> nil)
		match(x(0) ht(11846 [onScalar(nil 11745) onRecord('|' 2 11752)]))
lbl(11745)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11752)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(6) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		call(y(3) 3)
		testBool(y(8) 11820 11835)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 150> 11)
lbl(11820)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(11835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(334)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(337)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11736)
lbl(11861)	definition(x(4) 11960 pid('Zip' 5 pos('./standard/Record.oz' 340 3) nil 7) <P: 151> nil)
		match(x(0) ht(11945 [onScalar(nil 11870) onRecord('|' 2 11874)]))
lbl(11870)	getLiteral(nil x(4))
		return
lbl(11874)	allocateL5
		getVarVar(x(0) y(0))
		testBI('HasFeature' [x(1) x(0)]#[x(5)] 11938)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 2 x(4))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		move(x(4) x(0))
		move(x(6) x(1))
		move(x(5) x(2))
		call(y(4) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11938)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11945)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11861)
lbl(11960)	definition(x(4) 12037 pid('ZipT' 6 pos('./standard/Record.oz' 349 3) nil 9) <P: 152> nil)
		testLE(x(0) x(1) x(6) 12034)
		allocateL6
		callBI('.' [x(5) x(0)]#[x(6)])
		callBI('.' [x(2) x(0)]#[x(7)])
		callBI('.' [x(3) x(0)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(6) x(2))
		call(y(4) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(6))
		move(x(6) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(12034)	return
		endDefinition(11960)
lbl(12037)	definition(x(4) 12089 pid('ToList' 3 pos('./standard/Record.oz' 354 3) nil 6) <P: 153> nil)
		match(x(0) ht(12074 [onScalar(nil 12046) onRecord('|' 2 12050)]))
lbl(12046)	getLiteral(nil x(2))
		return
lbl(12050)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 153> 7)
lbl(12074)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12037)
lbl(12089)	definition(x(4) 12130 pid('ToListT' 4 pos('./standard/Record.oz' 360 3) nil 6) <P: 154> nil)
		testLT(x(1) x(0) x(4) 12104)
		getLiteral(nil x(3))
		return
lbl(12104)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(3))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 154> 9)
		endDefinition(12089)
lbl(12130)	definition(x(4) 12189 pid('ToListInd' 3 pos('./standard/Record.oz' 364 3) nil 6) <P: 155> nil)
		match(x(0) ht(12174 [onScalar(nil 12139) onRecord('|' 2 12143)]))
lbl(12139)	getLiteral(nil x(2))
		return
lbl(12143)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 155> 7)
lbl(12174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(367)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12130)
lbl(12189)	definition(x(4) 12237 pid('ToListIndT' 4 pos('./standard/Record.oz' 370 3) nil 6) <P: 156> nil)
		testLT(x(1) x(0) x(4) 12204)
		getLiteral(nil x(3))
		return
lbl(12204)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 156> 9)
		endDefinition(12189)
lbl(12237)	definition(x(4) 12265 pid('TupleToDictionary' 3 pos('./standard/Record.oz' 374 3) nil 4) <P: 157> [y(148)])
		testNumber(x(0) 0 12248)
		return
lbl(12248)	callBI('.' [x(1) x(0)]#[x(3)])
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
		endDefinition(12237)
lbl(12265)	definition(x(4) 12305 pid('RecordToDictionary' 3 pos('./standard/Record.oz' 380 3) nil 5) <P: 158> [y(148)])
		match(x(0) ht(12290 [onScalar(nil 12274) onRecord('|' 2 12275)]))
lbl(12274)	return
lbl(12275)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
lbl(12290)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(384)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12265)
lbl(12305)	putRecord(record ['^' adjoin adjoinAt adjoinList all allInd arity dropWhile dropWhileInd filter filterInd foldL foldLInd foldR foldRInd forAll forAllInd hasLabel is isC label make map mapInd monitorArity partition partitionInd reflectArity some someInd subtract takeDropWhile takeDropWhileInd takeWhile takeWhileInd tell toDictionary toList toListInd width widthC zip] y(141))
		setVariable(x(1))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setVariable(y(157))
		setVariable(x(4))
		setValue(y(135))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setVariable(y(158))
		setVariable(x(8))
		setVariable(y(159))
		setVariable(y(160))
		setVariable(x(9))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(x(10))
		setValue(y(133))
		setValue(y(138))
		setValue(y(83))
		setValue(y(134))
		setVariable(y(163))
		setVariable(y(164))
		setValue(x(2))
		setVariable(x(11))
		setVariable(x(12))
		setValue(x(0))
		setVariable(x(13))
		setVariable(x(14))
		setValue(x(3))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setValue(y(140))
		setVariable(x(19))
		setVariable(y(165))
		setVariable(y(166))
		setValue(y(81))
		setValue(y(139))
		setVariable(x(20))
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		unify(x(21) x(1))
		putConstant(hasLabel x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(10))
lbl(12417)	definition(x(1) 12462 pid('Record.toList' 2 pos('./standard/Record.oz' 411 8) nil 5) <P: 159> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12445)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 154> 9)
lbl(12445)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 153> 7)
		endDefinition(12417)
lbl(12462)	unify(x(1) y(165))
lbl(12465)	definition(x(1) 12510 pid('Record.toListInd' 2 pos('./standard/Record.oz' 417 8) nil 5) <P: 160> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12493)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 156> 9)
lbl(12493)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 155> 7)
		endDefinition(12465)
lbl(12510)	unify(x(1) y(166))
lbl(12513)	definition(x(1) 12598 pid('Record.map' 3 pos('./standard/Record.oz' 424 8) nil 6) <P: 161> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12556)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 118> 11)
lbl(12556)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 117> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12513)
lbl(12598)	unify(x(1) y(163))
lbl(12601)	definition(x(1) 12666 pid('Record.foldL' 4 pos('./standard/Record.oz' 434 8) nil 7) <P: 162> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12643)
		testBI('IsLiteral' [x(0)]#[x(4)] 12619)
		unify(x(3) x(2))
		return
lbl(12619)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 120> 13)
lbl(12643)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 119> 11)
		endDefinition(12601)
lbl(12666)	unify(x(1) x(8))
lbl(12669)	definition(x(1) 12734 pid('Record.foldR' 4 pos('./standard/Record.oz' 443 8) nil 7) <P: 163> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12711)
		testBI('IsLiteral' [x(0)]#[x(4)] 12687)
		unify(x(3) x(2))
		return
lbl(12687)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 122> 13)
lbl(12711)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 121> 11)
		endDefinition(12669)
lbl(12734)	unify(x(1) y(160))
lbl(12737)	definition(x(1) 12782 pid('Record.forAll' 2 pos('./standard/Record.oz' 452 8) nil 5) <P: 164> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12765)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 124> 9)
lbl(12765)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 123> 7)
		endDefinition(12737)
lbl(12782)	unify(x(1) y(161))
lbl(12785)	definition(x(1) 12836 pid('Record.all' 3 pos('./standard/Record.oz' 458 8) nil 6) <P: 165> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12816)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 126> 11)
lbl(12816)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 125> 9)
		endDefinition(12785)
lbl(12836)	unify(x(1) y(157))
lbl(12839)	definition(x(1) 12890 pid('Record.some' 3 pos('./standard/Record.oz' 464 8) nil 6) <P: 166> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12870)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 128> 11)
lbl(12870)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 127> 9)
		endDefinition(12839)
lbl(12890)	unify(x(1) x(13))
lbl(12893)	definition(x(1) 12941 pid('Record.filter' 3 pos('./standard/Record.oz' 470 8) nil 5) <P: 167> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 129> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12893)
lbl(12941)	unify(x(1) x(7))
lbl(12944)	definition(x(1) 13007 pid('Record.partition' 4 pos('./standard/Record.oz' 474 8) nil 6) <P: 168> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 130> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(12944)
lbl(13007)	unify(x(1) x(11))
lbl(13010)	definition(x(1) 13058 pid('Record.takeWhile' 3 pos('./standard/Record.oz' 482 8) nil 5) <P: 169> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 131> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13010)
lbl(13058)	unify(x(1) x(17))
lbl(13061)	definition(x(1) 13109 pid('Record.dropWhile' 3 pos('./standard/Record.oz' 486 8) nil 5) <P: 170> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 132> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13061)
lbl(13109)	unify(x(1) x(5))
lbl(13112)	definition(x(1) 13175 pid('Record.takeDropWhile' 4 pos('./standard/Record.oz' 490 8) nil 6) <P: 171> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 133> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13112)
lbl(13175)	unify(x(1) x(15))
lbl(13178)	definition(x(1) 13263 pid('Record.mapInd' 3 pos('./standard/Record.oz' 499 8) nil 6) <P: 172> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13221)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 135> 11)
lbl(13221)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 134> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13178)
lbl(13263)	unify(x(1) y(164))
lbl(13266)	definition(x(1) 13331 pid('Record.foldLInd' 4 pos('./standard/Record.oz' 510 8) nil 7) <P: 173> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13308)
		testBI('IsLiteral' [x(0)]#[x(4)] 13284)
		unify(x(3) x(2))
		return
lbl(13284)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 137> 13)
lbl(13308)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 136> 11)
		endDefinition(13266)
lbl(13331)	unify(x(1) y(159))
lbl(13334)	definition(x(1) 13399 pid('Record.foldRInd' 4 pos('./standard/Record.oz' 519 8) nil 7) <P: 174> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13376)
		testBI('IsLiteral' [x(0)]#[x(4)] 13352)
		unify(x(3) x(2))
		return
lbl(13352)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 139> 13)
lbl(13376)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 138> 11)
		endDefinition(13334)
lbl(13399)	unify(x(1) x(9))
lbl(13402)	definition(x(1) 13447 pid('Record.forAllInd' 2 pos('./standard/Record.oz' 528 8) nil 5) <P: 175> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 13430)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 141> 9)
lbl(13430)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 140> 7)
		endDefinition(13402)
lbl(13447)	unify(x(1) y(162))
lbl(13450)	definition(x(1) 13501 pid('Record.allInd' 3 pos('./standard/Record.oz' 534 8) nil 6) <P: 176> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13481)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 143> 11)
lbl(13481)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 142> 9)
		endDefinition(13450)
lbl(13501)	unify(x(1) x(4))
lbl(13504)	definition(x(1) 13555 pid('Record.someInd' 3 pos('./standard/Record.oz' 540 8) nil 6) <P: 177> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13535)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 145> 11)
lbl(13535)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 144> 9)
		endDefinition(13504)
lbl(13555)	unify(x(1) x(14))
lbl(13558)	definition(x(1) 13606 pid('Record.filterInd' 3 pos('./standard/Record.oz' 546 8) nil 5) <P: 178> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 146> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13558)
lbl(13606)	unify(x(1) y(158))
lbl(13609)	definition(x(1) 13672 pid('Record.partitionInd' 4 pos('./standard/Record.oz' 550 8) nil 6) <P: 179> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 147> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13609)
lbl(13672)	unify(x(1) x(12))
lbl(13675)	definition(x(1) 13723 pid('Record.takeWhileInd' 3 pos('./standard/Record.oz' 558 8) nil 5) <P: 180> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 148> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13675)
lbl(13723)	unify(x(1) x(18))
lbl(13726)	definition(x(1) 13774 pid('Record.dropWhileInd' 3 pos('./standard/Record.oz' 562 8) nil 5) <P: 181> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 149> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13726)
lbl(13774)	unify(x(1) x(6))
lbl(13777)	definition(x(1) 13840 pid('Record.takeDropWhileInd' 4 pos('./standard/Record.oz' 566 8) nil 6) <P: 182> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 150> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13777)
lbl(13840)	unify(x(1) x(16))
lbl(13843)	definition(x(1) 13950 pid('Record.zip' 4 pos('./standard/Record.oz' 575 8) nil 7) <P: 183> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsTuple' [x(0)]#[x(4)] 13906)
lbl(13864)	testBI('IsTuple' [x(1)]#[x(4)] 13906)
lbl(13868)	callBI('Width' [x(0)]#[x(4)])
		callBI('Width' [x(1)]#[x(5)])
		callBI('Min' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(6)]#[x(5)])
		unify(x(5) y(3))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(1 x(0))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(13906)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		callBI('Arity' [x(0)]#[x(5)])
		move(x(1) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 151> 10)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL6
		return
		endDefinition(13843)
lbl(13950)	unify(x(1) x(20))
lbl(13953)	definition(x(1) 14001 pid('Record.toDictionary' 2 pos('./standard/Record.oz' 586 8) nil 4) <P: 184> [y(132)])
		callBI('NewDictionary' nil#[x(2)])
		unify(x(2) x(1))
		testBI('IsTuple' [x(0)]#[x(2)] 13984)
		callBI('Width' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
lbl(13984)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
		endDefinition(13953)
lbl(14001)	unify(x(1) x(19))
		putConstant('NewChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(14022)	definition(x(2) 14072 pid('ChunkSelectFeature' 3 pos('./standard/Chunk.oz' 42 3) nil 5) <P: 185> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14039)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14039)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkSelectFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14022)
lbl(14072)	definition(x(3) 14122 pid('ChunkHasFeature' 3 pos('./standard/Chunk.oz' 47 3) nil 5) <P: 186> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14089)
		callBI('HasFeature' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14089)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkHasFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14072)
lbl(14122)	putRecord(chunk [hasFeature is new selectFeature] y(167))
		setValue(x(3))
		setValue(x(4))
		setValue(x(1))
		setValue(x(2))
		putConstant('IsVirtualString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(14143)	definition(x(2) 14214 pid('AllToString' 4 pos('./standard/VirtualString.oz' 35 6) nil 6) <P: 187> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14208)
		allocateL6
		inlineMinus1(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 188> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 187> 9)
lbl(14208)	unify(x(3) x(2))
		return
		endDefinition(14143)
lbl(14214)	definition(x(2) 14278 pid('SignOzToOS' 2 pos('./standard/VirtualString.oz' 40 6) nil 4) <P: 189> nil)
		match(x(0) ht(14263 [onScalar(nil 14223) onRecord('|' 2 14227)]))
lbl(14223)	getLiteral(nil x(1))
		return
lbl(14227)	allocateL2
		getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		testNumber(x(0) 126 14251)
lbl(14246)	getNumber(45 x(1))
		branch(14254)
lbl(14251)	unify(x(1) x(0))
lbl(14254)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 189> 5)
lbl(14263)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(44)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14214)
lbl(14278)	definition(x(2) 14404 pid('ToString' 2 pos('./standard/VirtualString.oz' 47 6) nil 5) <P: 188> [y(51) y(62) y(79) y(39)])
		callBI('Value.type' [x(0)]#[x(2)])
		match(x(2) ht(14389 [onScalar(int 14290) onScalar(float 14321) onScalar(atom 14330) onScalar(tuple 14348)]))
lbl(14290)	putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 14314)
		getList(x(1))
		unifyNumber(45)
		unifyVariable(x(1))
		callBI('Abs' [x(0)]#[x(2)])
		callBI('IntToString' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(14314)	callBI('IntToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14321)	callBI('FloatToString' [x(0)]#[x(2)])
		move(x(2) x(0))
		genFastCall(<P: 189> 5)
lbl(14330)	match(x(0) ht(14341 [onScalar('#' 14333) onScalar(nil 14337)]))
lbl(14333)	getLiteral(nil x(1))
		return
lbl(14337)	getLiteral(nil x(1))
		return
lbl(14341)	callBI('AtomToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14348)	callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(14376 [onScalar('#' 14354) onScalar('|' 14372)]))
lbl(14354)	callBI('Width' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 187> 9)
lbl(14372)	unify(x(1) x(0))
		return
lbl(14376)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14389)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14278)
lbl(14404)	definition(x(2) 14471 pid('ChangeSignAll' 4 pos('./standard/VirtualString.oz' 70 6) nil 6) <P: 190> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14468)
		allocateL4
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		move(y(2) x(1))
		move(x(4) x(2))
		genFastCall(<P: 191> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 190> 9)
lbl(14468)	return
		endDefinition(14404)
lbl(14471)	definition(x(2) 14533 pid('ChangeLast' 5 pos('./standard/VirtualString.oz' 78 6) nil 6) <P: 192> nil)
		match(x(0) ht(14518 [onScalar(nil 14480) onRecord('|' 2 14487)]))
lbl(14480)	getLiteral(nil x(3))
		unify(x(2) x(4))
		return
lbl(14487)	getVarVar(x(0) x(5))
		testNumber(x(0) 126 14508)
lbl(14494)	getLiteral(nil x(3))
		getRecord('#' 3 x(4))
		unifyValue(x(2))
		unifyValue(x(1))
		unifyValue(x(5))
		return
lbl(14508)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 192> 11)
lbl(14518)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(84)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14471)
lbl(14533)	definition(x(2) 14599 pid('ChangeSignFloat' 3 pos('./standard/VirtualString.oz' 87 6) nil 6) <P: 193> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 14580)
lbl(14551)	getVarVar(x(3) x(4))
		testNumber(x(3) 126 14580)
		getRecord('#' 2 y(2))
		unifyValVar(y(1) x(5))
		createVariable(x(2))
		move(x(4) x(0))
		move(x(2) x(3))
		move(x(5) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
lbl(14580)	createVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(x(2) x(3))
		move(y(2) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
		endDefinition(14533)
lbl(14599)	definition(x(2) 14723 pid('ChangeSign' 3 pos('./standard/VirtualString.oz' 93 6) nil 6) <P: 191> [y(51) y(79)])
		callBI('Value.type' [x(0)]#[x(3)])
		match(x(3) ht(14708 [onScalar(int 14611) onScalar(float 14637) onScalar(atom 14646) onScalar(tuple 14650)]))
lbl(14611)	putConstant(0 x(3))
		testLT(x(0) x(3) x(4) 14633)
		getRecord('#' 2 x(2))
		unifyValVar(x(1) x(2))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(14633)	unify(x(2) x(0))
		return
lbl(14637)	callBI('FloatToString' [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 193> 7)
lbl(14646)	unify(x(2) x(0))
		return
lbl(14650)	callBI('Label' [x(0)]#[x(3)])
		match(x(3) ht(14695 [onScalar('#' 14656) onScalar('|' 14691)]))
lbl(14656)	allocateL2
		callBI('Width' [x(0)]#[x(3)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		move(y(1) x(3))
		genFastCall(<P: 190> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(14691)	unify(x(2) x(0))
		return
lbl(14695)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(104)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14708)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(105)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14599)
lbl(14723)	putConstant(virtualStringLength x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(7)])
		putRecord(virtualString [changeSign is length toAtom toString] y(51))
		setValue(x(2))
		setValue(x(5))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
lbl(14746)	definition(x(2) 14768 pid('VirtualString.toString' 2 pos('./standard/VirtualString.oz' 114 17) nil 2) <P: 194> nil)
		match(x(0) ht(14763 [onScalar(nil 14755) onRecord('|' 2 14759)]))
lbl(14755)	getLiteral(nil x(1))
		return
lbl(14759)	unify(x(1) x(0))
		return
lbl(14763)	genFastCall(<P: 188> 5)
		endDefinition(14746)
lbl(14768)	unify(x(2) y(170))
lbl(14771)	definition(x(2) 14808 pid('VirtualString.toAtom' 2 pos('./standard/VirtualString.oz' 120 17) nil 3) <P: 195> nil)
		testBI('IsAtom' [x(0)]#[x(2)] 14785)
		unify(x(1) x(0))
		return
lbl(14785)	allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 188> 4)
		move(y(1) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(14771)
lbl(14808)	unify(x(2) y(169))
lbl(14811)	definition(x(2) 14835 pid('VirtualString.length' 2 pos('./standard/VirtualString.oz' 127 17) nil 6) <P: 196> nil)
		move(x(0) x(2))
		putConstant(0 x(4))
		move(x(4) x(3))
		callBI(virtualStringLength [x(2) x(3)]#[x(5)])
		unify(x(5) x(1))
		return
		endDefinition(14811)
lbl(14835)	unify(x(2) y(168))
		putConstant('NewArray' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('IsArray' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
lbl(14874)	definition(x(2) 14909 pid('ArrayToRecord' 3 pos('./standard/Array.oz' 34 3) nil 5) <P: 197> nil)
		callBI('.' [x(2) x(0)]#[x(3)])
		callBI('Get' [x(1) x(0)]#[x(4)])
		unify(x(4) x(3))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(4) 14906)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 197> 7)
lbl(14906)	return
		endDefinition(14874)
lbl(14909)	definition(x(2) 14938 pid('ArrayToArray' 4 pos('./standard/Array.oz' 37 3) nil 5) <P: 198> nil)
		testLT(x(1) x(0) x(4) 14921)
		return
lbl(14921)	callBI('Get' [x(2) x(0)]#[x(4)])
		callBI('Put' [x(3) x(0) x(4)]#nil)
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 198> 9)
		endDefinition(14909)
lbl(14938)	definition(x(2) 14986 pid('MakePairs' 4 pos('./standard/Array.oz' 43 3) nil 6) <P: 199> nil)
		testLT(x(1) x(0) x(4) 14953)
		getLiteral(nil x(3))
		return
lbl(14953)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('Get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 199> 9)
		endDefinition(14938)
lbl(14986)	putConstant('Array.low' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Array.high' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		getRecord(array [clone get high is low new put toRecord] y(84))
		unifyVariable(x(2))
		unifyValue(x(9))
		unifyValue(x(12))
		unifyValue(x(7))
		unifyValue(x(11))
		unifyValue(x(6))
		unifyValVar(x(8) x(3))
lbl(15023)	definition(x(13) 15072 pid('Array.clone' 2 pos('./standard/Array.oz' 58 13) nil 6) <P: 200> nil)
		allocateL2
		callBI('Array.low' [x(0)]#[x(2)])
		callBI('Array.high' [x(0)]#[x(3)])
		putConstant(unit x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(3) x(1))
		move(y(1) x(3))
		genFastCall(<P: 198> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15023)
lbl(15072)	unify(x(13) x(2))
lbl(15075)	definition(x(2) 15150 pid('Array.toRecord' 3 pos('./standard/Array.oz' 65 13) nil 5) <P: 201> nil)
		allocateL4
		callBI('Array.low' [x(1)]#[x(3)])
		callBI('Array.high' [x(1)]#[x(4)])
		move(x(2) y(0))
		createVariable(y(1))
		testNumber(x(3) 1 15114)
		callBI('MakeTuple' [x(0) x(4)]#[x(3)])
		unify(x(3) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<P: 197> 6)
		branch(15143)
lbl(15114)	move(x(0) y(2))
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 199> 8)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(15143)	unify(y(1) y(0))
		deAllocateL4
		return
		endDefinition(15075)
lbl(15150)	unify(x(2) x(3))
		putConstant('IsSpace' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putRecord(space ['ask' askVerbose clone commit inject is merge new] y(171))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setValue(x(13))
		setVariable(x(17))
		setVariable(x(18))
		putConstant('Space.new' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(18))
		putConstant('Space.ask' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('Space.askVerbose' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(3))
		putConstant('Space.clone' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(14))
		putConstant('Space.merge' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(17))
		putConstant('Space.inject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(16))
		putConstant('Space.commit' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(15))
		putConstant('IsObject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		putConstant('New' x(3))
		putConstant(3 x(20))
		callBI(builtin [x(3) x(20)]#[x(22)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
lbl(15302)	definition(x(3) 15376 pid('FbApply' 2 pos('./standard/Object.oz' 84 6) nil 6) <P: 202> [y(150)])
		inlineDot(x(0) <U: ooMeth> x(2) cache)
		callBI('Label' [x(1)]#[x(3)])
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15368)
lbl(15327)	putConstant(otherwise x(3))
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15359)
lbl(15340)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(2))
		setConstant(lookup)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(15359)	move(x(1) x(0))
		tailSendMsg(otherwise x(5) 1 cache)
lbl(15368)	move(x(1) x(0))
		tailCall(x(5) 1)
		endDefinition(15302)
lbl(15376)	putConstant(newObject x(20))
		putConstant(2 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
lbl(15385)	definition(x(20) 15413 pid('FbNew' 3 pos('./standard/Object.oz' 100 2) nil 4) <P: 203> nil)
		allocateL2
		callBI(newObject [x(0)]#[x(3)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		call(y(1) 1)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15385)
lbl(15413)	putRecord(fallback [apply new] x(23))
		setValue(x(3))
		setValue(x(20))
		putConstant(makeClass x(3))
		putConstant(7 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
		putConstant('Dictionary.markSafe' x(3))
		putConstant(1 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
lbl(15439)	definition(x(3) 15548 pid('InitMap' 5 pos('./standard/Object.oz' 118 6) nil 8) <P: 204> [y(156) y(148)])
		match(x(0) ht(15533 [onScalar(nil 15448) onRecord('|' 2 15452)]))
lbl(15448)	unify(x(4) x(3))
		return
lbl(15452)	allocateL5
		getVarVar(x(0) x(5))
		inlineDot(x(0) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		createVariable(y(4))
		testBI('Dictionary.member' [x(1) x(6)]#[x(7)] 15483)
		unify(y(4) x(3))
		branch(15516)
lbl(15483)	callBI('Dictionary.put' [x(1) x(6) x(0)]#nil)
		putConstant(nil x(7))
		callBI('Dictionary.put' [x(2) x(6) x(7)]#nil)
		inlineDot(x(0) <U: ooParents> x(6) cache)
		putList(x(7))
		setValue(x(0))
		setValue(x(3))
		move(x(6) x(0))
		move(x(7) x(3))
		move(y(4) x(4))
		genFastCall(<P: 204> 10)
lbl(15516)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 204> 11)
lbl(15533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15439)
lbl(15548)	definition(x(3) 15658 pid('AddIG' 3 pos('./standard/Object.oz' 132 6) nil 4) <P: 205> [y(149) y(148)])
		match(x(1) ht(15643 [onScalar(nil 15557) onRecord('|' 2 15558)]))
lbl(15557)	return
lbl(15558)	allocateL7
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(1) cache)
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(6))
		testBool(y(5) 15601 15609)
		unify(y(6) y(4))
		branch(15620)
lbl(15601)	getList(y(6))
		unifyValue(y(1))
		unifyValue(y(4))
		branch(15620)
lbl(15609)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(15620)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 205> 7)
lbl(15643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(141)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15548)
lbl(15658)	definition(x(3) 15720 pid('InitIG' 2 pos('./standard/Object.oz' 144 6) nil 4) <P: 206> nil)
		match(x(0) ht(15705 [onScalar(nil 15667) onRecord('|' 2 15668)]))
lbl(15667)	return
lbl(15668)	allocateL2
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(0) cache)
		inlineDot(x(3) <U: ooParents> x(3) cache)
		move(x(1) y(1))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<P: 205> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 206> 5)
lbl(15705)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(147)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15658)
lbl(15720)	definition(x(3) 15769 pid('Remove' 3 pos('./standard/Object.oz' 152 2) nil 5) <P: 207> nil)
		match(x(0) ht(15754 [onScalar(nil 15729) onRecord('|' 2 15733)]))
lbl(15729)	getLiteral(nil x(2))
		return
lbl(15733)	getVarVar(x(0) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 15744)
		unify(x(2) x(3))
		return
lbl(15744)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 207> 7)
lbl(15754)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(155)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15720)
lbl(15769)	definition(x(3) 15907 pid('RemoveBefore' 6 pos('./standard/Object.oz' 158 2) nil 7) <P: 208> [y(156) y(149) y(153) y(148)])
		match(x(0) ht(15892 [onScalar(nil 15778) onRecord('|' 2 15782)]))
lbl(15778)	unify(x(5) x(4))
		return
lbl(15782)	allocateL8
		getVarVar(x(0) y(0))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 15885)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(0) y(6))
		move(x(6) x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 207> 6)
		testLiteral(y(7) nil 15855)
lbl(15821)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(2) x(2))
		callBI('Dictionary.get' [x(2) x(1)]#[x(6)])
		putList(x(4))
		setValue(x(6))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15855)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		move(y(7) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15885)	move(y(0) x(0))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15892)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15769)
lbl(15907)	definition(x(3) 15986 pid('RemoveLeader' 6 pos('./standard/Object.oz' 176 2) nil 7) <P: 209> nil)
		match(x(0) ht(15971 [onScalar(nil 15916) onRecord('|' 2 15920)]))
lbl(15916)	unify(x(5) x(4))
		return
lbl(15920)	allocateL6
		getVarVar(x(6) y(0))
		inlineDot(x(6) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(5) y(4))
		move(y(1) x(0))
		move(x(6) x(1))
		createVariableMove(y(5) x(5))
		genFastCall(<P: 208> 12)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(5) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<P: 209> 13)
lbl(15971)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(182)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15907)
lbl(15986)	definition(x(3) 16110 pid('GetPairs' 3 pos('./standard/Object.oz' 185 2) nil 5) <P: 210> [y(147) y(149)])
		callBI('Dictionary.entries' [x(1)]#[x(4)])
lbl(15995)	definition(x(1) 16096 pid('' 3 pos('./standard/Object.oz' 188 6) nil 7) unit [g(1) x(0)])
		shallowGuard(16083)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(16011)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.get' [x(0) x(3)]#[x(5)])
lbl(16018)	definition(x(6) 16068 pid('' 3 pos('./standard/Object.oz' 191 12) nil 6) unit [g(0) g(1) x(5)])
		move(g(1) x(3))
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getList(x(2))
		unifyVariable(x(0))
		unifyValue(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(5))
		move(g(2) x(0))
		inlineDot(x(0) <U: ooPrintName> x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(4) <U: ooPrintName> x(1) cache)
		unify(x(1) x(5))
		return
		endDefinition(16018)
lbl(16068)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(6) x(1))
		genFastCall(<P: 32> 9)
lbl(16083)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15995)
lbl(16096)	move(x(4) x(0))
		move(x(2) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(15986)
lbl(16110)	definition(x(3) 16205 pid('Iterate' 4 pos('./standard/Object.oz' 199 2) nil 7) <P: 211> [y(151)])
		allocateL4
		callBI('Dictionary.keys' [x(2)]#[x(6)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(nil x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 209> 12)
		testLiteral(y(3) nil 16186)
lbl(16149)	move(y(1) x(0))
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		testLiteral(x(1) nil 16164)
		getLiteral(nil y(2))
		deAllocateL4
		return
lbl(16164)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 210> 6)
		putRecord(object 2 x(0))
		setConstant(order)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(16186)	getList(y(2))
		unifyValVar(y(3) x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 211> 9)
		endDefinition(16110)
lbl(16205)	definition(x(3) 16294 pid('Precedence' 2 pos('./standard/Object.oz' 209 6) nil 6) <P: 212> [y(132) y(153)])
		allocateL5
		callBI('NewDictionary' nil#[x(2)])
		callBI('NewDictionary' nil#[x(3)])
		putList(x(5))
		setValue(x(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		putConstant(nil x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 204> 10)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		genFastCall(<P: 206> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooId> x(1) cache)
		move(y(3) x(2))
		callBI('Dictionary.remove' [x(2) x(1)]#nil)
		putList(x(4))
		setValue(y(0))
		setConstant(nil)
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		deAllocateL5
		genFastCall(<P: 211> 9)
		endDefinition(16205)
lbl(16294)	definition(x(3) 16383 pid('SetOne' 4 pos('./standard/Object.oz' 227 6) nil 10) <P: 213> [y(148) y(153)])
		allocateL3
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(5) cache)
		putConstant(fast x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(8)])
		putConstant(default x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(9)])
		callBI('Dictionary.put' [x(1) x(4) x(5)]#nil)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(9) y(2))
		testLiteral(x(8) <N: NoArg> 16351)
		callBI('Dictionary.remove' [x(2) x(4)]#nil)
		branch(16354)
lbl(16351)	callBI('Dictionary.put' [x(2) x(4) x(8)]#nil)
lbl(16354)	testLiteral(y(2) <N: NoArg> 16368)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL3
		return
lbl(16368)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
		endDefinition(16294)
lbl(16383)	definition(x(3) 16450 pid('SetMethods' 5 pos('./standard/Object.oz' 243 6) nil 6) <P: 214> nil)
		testNumber(x(0) 0 16394)
		return
lbl(16394)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
		move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 214> 11)
		endDefinition(16383)
lbl(16450)	definition(x(3) 16529 pid('AddMethods' 5 pos('./standard/Object.oz' 256 2) nil 8) <P: 215> [y(156)])
		testNumber(x(0) 0 16461)
		return
lbl(16461)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		inlineDot(x(5) 1 x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('Dictionary.member' [x(2) x(6)]#[x(7)] 16490)
		branch(16504)
lbl(16490)	move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
lbl(16504)	move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 215> 11)
		endDefinition(16450)
lbl(16529)	definition(x(3) 16657 pid('SafeAdd' 7 pos('./standard/Object.oz' 266 2) nil 11) <P: 216> [y(156) y(149) y(148)])
		testNumber(x(0) 0 16540)
		return
lbl(16540)	allocateL7
		callBI('.' [x(1) x(0)]#[x(7)])
		inlineDot(x(7) 1 x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		testBI('Dictionary.member' [x(3) x(8)]#[x(9)] 16604)
		callBI('Dictionary.get' [x(3) x(8)]#[x(7)])
		inlineDot(x(2) <U: ooPrintName> x(9) cache)
		inlineDot(x(7) <U: ooPrintName> x(7) cache)
		putRecord(object 5 x(10))
		setConstant(sharing)
		setValue(x(9))
		setValue(x(7))
		setConstant(method)
		setValue(x(8))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(16604)	testBI('Dictionary.member' [x(4) x(8)]#[x(9)] 16610)
		branch(16627)
lbl(16610)	callBI('Dictionary.put' [x(3) x(8) x(2)]#nil)
		move(x(7) x(0))
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		move(y(6) x(3))
		genFastCall(<P: 213> 8)
lbl(16627)	move(y(0) x(0))
		inlineMinus1(x(0) x(7))
		move(x(7) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		deAllocateL7
		genFastCall(<P: 216> 15)
		endDefinition(16529)
lbl(16657)	definition(x(3) 16744 pid('SafeAddMethods' 5 pos('./standard/Object.oz' 285 2) nil 9) <P: 217> nil)
		match(x(0) ht(16729 [onScalar(nil 16666) onRecord('|' 2 16667)]))
lbl(16666)	return
lbl(16667)	allocateL5
		getVarVar(x(7) y(0))
		inlineDot(x(7) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) x(1))
		move(x(8) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		moveMoveYXYX(y(3) x(5) y(4) x(6))
		genFastCall(<P: 216> 14)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 217> 11)
lbl(16729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(290)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16657)
lbl(16744)	definition(x(3) 16852 pid('InheritMethods' 4 pos('./standard/Object.oz' 293 2) nil 7) <P: 218> [y(132)])
		match(x(0) ht(16837 [onScalar(nil 16753) onRecord('|' 2 16754)]))
lbl(16753)	return
lbl(16754)	allocateL4
		getVarVar(x(0) x(5))
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		testLiteral(x(4) nil 16806)
		inlineDot(x(6) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 215> 10)
		branch(16823)
lbl(16806)	callBI('NewDictionary' nil#[x(6)])
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 217> 10)
lbl(16823)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 218> 9)
lbl(16837)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(302)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16744)
lbl(16852)	definition(x(3) 16913 pid('AddOther' 3 pos('./standard/Object.oz' 312 6) nil 5) <P: 219> [y(156) y(148)])
		match(x(0) ht(16898 [onScalar(nil 16861) onRecord('|' 2 16862)]))
lbl(16861)	return
lbl(16862)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(4)] 16880)
		branch(16886)
lbl(16880)	callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
lbl(16886)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 219> 7)
lbl(16898)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(319)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16852)
lbl(16913)	definition(x(3) 17023 pid('SafeAdd' 5 pos('./standard/Object.oz' 322 6) nil 9) <P: 220> [y(156) y(149) y(148)])
		match(x(0) ht(17008 [onScalar(nil 16922) onRecord('|' 2 16923)]))
lbl(16922)	return
lbl(16923)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 16976)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		inlineDot(x(2) <U: ooPrintName> x(7) cache)
		inlineDot(x(6) <U: ooPrintName> x(6) cache)
		putRecord(object 5 x(8))
		setConstant(sharing)
		setValue(x(7))
		setValue(x(6))
		setConstant('feature or attribute')
		setValue(x(0))
		callBI('Exception.raiseError' [x(8)]#nil)
lbl(16976)	testBI('Dictionary.member' [x(4) x(0)]#[x(6)] 16982)
		branch(16991)
lbl(16982)	callBI('.' [x(1) x(0)]#[x(6)])
		callBI('Dictionary.put' [x(4) x(0) x(6)]#nil)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
lbl(16991)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 220> 11)
lbl(17008)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(338)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16913)
lbl(17023)	definition(x(3) 17097 pid('SafeAddOther' 4 pos('./standard/Object.oz' 341 6) nil 6) <P: 221> nil)
		match(x(0) ht(17082 [onScalar(nil 17032) onRecord('|' 2 17033)]))
lbl(17032)	return
lbl(17033)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		callBI('Arity' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		genFastCall(<P: 220> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<P: 221> 9)
lbl(17082)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17023)
lbl(17097)	definition(x(3) 17190 pid('InheritOther' 3 pos('./standard/Object.oz' 349 6) nil 6) <P: 222> [y(132)])
		match(x(0) ht(17175 [onScalar(nil 17106) onRecord('|' 2 17107)]))
lbl(17106)	return
lbl(17107)	allocateL3
		getVarVar(x(0) x(3))
		getList(x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(5) nil 17149)
		callBI('.' [x(4) x(2)]#[x(0)])
		callBI('Arity' [x(0)]#[x(4)])
		move(x(0) x(1))
		move(x(4) x(0))
		move(y(0) x(2))
		genFastCall(<P: 219> 6)
		branch(17163)
lbl(17149)	callBI('NewDictionary' nil#[x(4)])
		move(x(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<P: 221> 8)
lbl(17163)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 222> 7)
lbl(17175)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(356)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17097)
lbl(17190)	definition(x(3) 17277 pid('Free' 3 pos('./standard/Object.oz' 365 6) nil 6) <P: 223> nil)
		match(x(0) ht(17262 [onScalar(nil 17199) onRecord('|' 2 17203)]))
lbl(17199)	getLiteral(nil x(2))
		return
lbl(17203)	allocateL3
		getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(4)]#[x(5)] 17250)
lbl(17222)	testLiteral(x(4) <U: ooFreeFlag> 17250)
lbl(17226)	getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17250)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17262)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17190)
lbl(17277)	definition(x(3) 17318 pid('MakeFree' 2 pos('./standard/Object.oz' 375 6) nil 4) <P: 224> [y(2)])
		allocateL2
		callBI('Arity' [x(0)]#[x(3)])
		move(x(1) y(0))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 223> 6)
		putConstant(free x(0))
		move(y(1) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(17277)
lbl(17318)	definition(x(3) 17335 pid('Add' 2 pos('./standard/Object.oz' 382 6) nil 2) <P: 225> nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		return
		endDefinition(17318)
lbl(17335)	definition(x(20) 17374 pid('AddFree' 3 pos('./standard/Object.oz' 386 6) nil 3) <P: 226> [x(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('AdjoinList' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(17335)
lbl(17374)	definition(x(3) 17465 pid('CheckParents' 2 pos('./standard/Object.oz' 395 3) nil 5) <P: 227> nil)
		match(x(0) ht(17450 [onScalar(nil 17383) onRecord('|' 2 17384)]))
lbl(17383)	return
lbl(17384)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(<U: ooPrintName> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17428)
		putConstant(<U: ooParents> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17409)
		branch(17441)
lbl(17409)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(3))
		setConstant(final)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17428)	putRecord(object 3 x(3))
		setConstant(inheritanceFromNonClass)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17441)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 227> 5)
lbl(17450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(406)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17374)
lbl(17465)	definition(x(3) 17524 pid('HasPropertyParents' 3 pos('./standard/Object.oz' 412 3) nil 5) <P: 228> nil)
		match(x(0) ht(17509 [onScalar(nil 17474) onRecord('|' 2 17478)]))
lbl(17474)	getLiteral(false x(2))
		return
lbl(17478)	getVarVar(x(0) x(3))
		callBI('.' [x(0) x(1)]#[x(4)])
		testBool(x(4) 17492 17498)
		getLiteral(true x(2))
		return
lbl(17492)	move(x(3) x(0))
		genFastCall(<P: 228> 7)
lbl(17498)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17509)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(415)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17465)
lbl(17524)	definition(x(3) 18113 pid('`class`' 7 pos('./standard/Object.oz' 423 3) nil 7) <P: 229> [x(23) y(132) y(155) x(19) y(104)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYYX(x(6) y(6) y(5) x(1))
		genFastCall(<P: 227> 4)
		move(y(4) x(1))
		putConstant(locking x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(8))
		testBool(y(7) 17578 17591)
		getLiteral(true y(8))
		branch(17602)
lbl(17578)	moveMoveYXYX(y(0) x(0) y(8) x(2))
		putConstant(<U: ooLocking> x(1))
		genFastCall(<P: 228> 6)
		branch(17602)
lbl(17591)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(432)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17602)	move(y(4) x(1))
		putConstant(native x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(9))
		testBool(y(7) 17625 17638)
		getLiteral(true y(9))
		branch(17649)
lbl(17625)	moveMoveYXYX(y(0) x(0) y(9) x(2))
		putConstant(<U: ooNative> x(1))
		genFastCall(<P: 228> 6)
		branch(17649)
lbl(17638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(433)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17649)	move(y(4) x(1))
		putConstant(final x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooId> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooNewAttr> <U: ooNewFeat> <U: ooNewMeth> <U: ooParents> <U: ooPrintName> <U: ooUnFreeFeat>] y(4))
		setVariable(y(10))
		setVariable(y(11))
		setValue(g(0))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(x(0))
		setValue(y(8))
		setVariable(y(14))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(1))
		setVariable(x(1))
		setValue(y(5))
		setVariable(y(15))
		callBI('NewName' nil#[x(2)])
		unify(x(2) x(0))
		move(y(0) x(0))
		genFastCall(<P: 28> 4)
		match(y(0) ht(18009 [onScalar(nil 17710) onRecord('|' 2 17766)]))
lbl(17710)	callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		unify(y(10) y(2))
		unify(y(15) y(3))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17766)	getVarVar(y(0) x(0))
		testLiteral(x(0) nil 17875)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(14))
		inlineDot(x(0) <U: ooFastMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(12))
		inlineDot(x(0) <U: ooDefaults> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(11))
		move(y(1) x(1))
		callBI('Width' [x(1)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(14) x(2) y(12) x(3))
		move(y(11) x(4))
		genFastCall(<P: 214> 10)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		move(y(2) x(2))
		callBI('Adjoin' [x(1) x(2)]#[x(3)])
		unify(x(3) y(10))
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		move(y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(15))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17875)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 212> 4)
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		moveMoveYXYX(y(0) x(0) y(14) x(1))
		moveMoveYXYX(y(12) x(2) y(11) x(3))
		genFastCall(<P: 218> 8)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewAttr> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(10) x(2))
		putConstant(a x(0))
		genFastCall(<P: 108> 6)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewFeat> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(15) x(2))
		putConstant(f x(0))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(18009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(503)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18022)	move(y(14) x(0))
		callBI('Dictionary.markSafe' [x(0)]#nil)
		move(y(12) x(1))
		callBI('Dictionary.markSafe' [x(1)]#nil)
		move(y(11) x(2))
		callBI('Dictionary.markSafe' [x(2)]#nil)
		createVariable(y(0))
		testBool(y(7) 18072 18077)
		getRecord('class' [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] y(0))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(g(0))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(8))
		unifyValue(y(14))
		unifyValue(y(9))
		unifyValue(y(5))
		unifyValue(y(15))
		branch(18088)
lbl(18072)	unify(y(0) y(4))
		branch(18088)
lbl(18077)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(512)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18088)	moveMoveYXYX(y(12) x(0) y(0) x(1))
		moveMoveYXYX(y(15) x(2) y(11) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		callBI(makeClass [x(0) x(1) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(6))
		deAllocateL
		return
		endDefinition(17524)
lbl(18113)	definition(x(19) 18259 pid('`extend`' 4 pos('./standard/Object.oz' 527 3) nil 12) <P: 230> [x(23)])
		allocateL10
		inlineDot(x(0) <U: ooDefaults> x(4) cache)
		inlineDot(x(0) <U: ooLocking> x(5) cache)
		inlineDot(x(0) <U: ooNative> x(6) cache)
		inlineDot(x(0) <U: ooMeth> x(7) cache)
		inlineDot(x(0) <U: ooFastMeth> x(8) cache)
		inlineDot(x(0) <U: ooAttr> x(9) cache)
		inlineDot(x(0) <U: ooPrintName> x(10) cache)
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		callBI('Adjoin' [x(0) x(1)]#[x(11)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 226> 6)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 224> 4)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] x(0))
		setValue(y(6))
		setValue(y(1))
		setValue(g(0))
		setValue(y(5))
		setValue(y(9))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		setValue(y(7))
		setValue(y(8))
		moveMoveYXYX(y(5) x(1) y(8) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		move(y(3) x(5))
		callBI(makeClass [x(1) x(0) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(0))
		deAllocateL10
		return
		endDefinition(18113)
lbl(18259)	putConstant('NewName' x(20))
		putConstant(1 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
		moveMoveXYXY(x(1) y(172) x(4) y(173))
		moveMoveXYXY(x(5) y(174) x(6) y(175))
		moveMoveXYXY(x(7) y(176) x(8) y(177))
		moveMoveXYXY(x(9) y(178) x(13) y(179))
		moveMoveXYXY(x(21) y(180) x(22) y(181))
		moveMoveXYXY(x(19) y(182) x(18) y(183))
		moveMoveXYXY(x(2) y(184) x(14) y(185))
		moveMoveXYXY(x(17) y(186) x(16) y(187))
		moveMoveXYXY(x(15) y(188) x(0) y(189))
		moveMoveXYXY(x(10) y(190) x(11) y(191))
		moveMoveXYXY(x(12) y(192) x(3) y(193))
		move(x(24) x(1))
		putConstant(ooPrivate x(0))
		genFastCall(<P: 1> 4)
		putConstant('@' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('@' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<-' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<-' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooExch x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooExch x(0))
		genFastCall(<P: 1> 4)
		putConstant(',' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(',' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooGetLock x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooGetLock x(0))
		genFastCall(<P: 1> 4)
		move(y(193) x(1))
		putConstant('class' x(0))
		genFastCall(<P: 1> 4)
lbl(18416)	definition(x(7) 18425 pid('BaseObject,noop/fast' 0 pos('./standard/Object.oz' 572 6) nil 0) <P: 231> nil)
		return
		endDefinition(18416)
lbl(18425)	definition(x(8) 18439 pid('BaseObject,noop/slow' 1 pos('./standard/Object.oz' 572 6) nil 1) unit nil)
		getLiteral(noop x(0))
		genFastCall(<P: 231> 1)
		endDefinition(18425)
lbl(18439)	putRecord('#' [1 2 fast] x(9))
		setConstant(noop)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('BaseObject' x(5))
		createVariableMove(y(194) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Slaves>] x(2))
		setConstant(nil)
lbl(18488)	definition(x(7) 18505 pid('MasterObject,init/fast' 0 pos('./standard/Object.oz' 590 2) nil 1) <P: 232> nil)
		putConstant(nil x(0))
		inlineAssign(<N: Slaves> x(0) cache)
		return
		endDefinition(18488)
lbl(18505)	definition(x(8) 18519 pid('MasterObject,init/slow' 1 pos('./standard/Object.oz' 590 2) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 232> 1)
		endDefinition(18505)
lbl(18519)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(18529)	definition(x(7) 18546 pid('MasterObject,getSlaves/fast' 1 pos('./standard/Object.oz' 593 2) nil 2) <P: 233> nil)
		inlineAt(<N: Slaves> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(18529)
lbl(18546)	definition(x(8) 18572 pid('MasterObject,getSlaves/slow' 1 pos('./standard/Object.oz' 593 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 233> 3)
		endDefinition(18546)
lbl(18572)	putRecord('#' [1 2 fast] x(10))
		setConstant(getSlaves)
		setValue(x(8))
		setValue(x(7))
lbl(18582)	definition(x(7) 18606 pid('MasterObject,AddSlave/fast' 1 pos('./standard/Object.oz' 596 2) nil 4) <P: 234> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		putConstant(<N: Slaves> x(0))
		callBI(ooExch [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(18582)
lbl(18606)	definition(x(8) 18632 pid('MasterObject,AddSlave/slow' 1 pos('./standard/Object.oz' 596 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 234> 3)
		endDefinition(18606)
lbl(18632)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: AddSlave>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(195))
lbl(18644)	definition(x(7) 18676 pid('MasterObject,DoDel/fast' 3 pos('./standard/Object.oz' 601 2) nil 5) <P: 235> [y(195)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 18664)
		unify(x(2) x(3))
		return
lbl(18664)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18644)
lbl(18676)	definition(x(8) 18717 pid('MasterObject,DoDel/slow' 1 pos('./standard/Object.oz' 601 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 235> 7)
		endDefinition(18676)
lbl(18717)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: DoDel>)
		setValue(x(8))
		setValue(x(7))
lbl(18727)	definition(x(7) 18755 pid('MasterObject,DelSlave/fast' 1 pos('./standard/Object.oz' 606 2) nil 5) <P: 236> [y(195)])
		putConstant(<N: Slaves> x(3))
		createVariable(x(1))
		callBI(ooExch [x(3) x(1)]#[x(4)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18727)
lbl(18755)	definition(x(8) 18781 pid('MasterObject,DelSlave/slow' 1 pos('./standard/Object.oz' 606 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 236> 3)
		endDefinition(18755)
lbl(18781)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: DelSlave>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(195) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MasterObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Master>] x(2))
		setConstant(unit)
lbl(18832)	definition(x(7) 18883 pid('SlaveObject,becomeSlave/fast' 1 pos('./standard/Object.oz' 617 2) nil 4) <P: 237> nil)
		putConstant(<N: Master> x(1))
		createVariable(x(2))
		callBI(ooExch [x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 18869)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(<N: AddSlave> y(0) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(18869)	unify(x(2) x(3))
		putRecord(object 1 x(0))
		setConstant(slaveNotFree)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(18832)
lbl(18883)	definition(x(8) 18909 pid('SlaveObject,becomeSlave/slow' 1 pos('./standard/Object.oz' 617 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 237> 3)
		endDefinition(18883)
lbl(18909)	putRecord('#' [1 2 fast] x(9))
		setConstant(becomeSlave)
		setValue(x(8))
		setValue(x(7))
lbl(18919)	definition(x(7) 18942 pid('SlaveObject,isFree/fast' 1 pos('./standard/Object.oz' 629 2) nil 4) <P: 238> nil)
		inlineAt(<N: Master> x(1) cache)
		putConstant(unit x(2))
		callBI('==' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(18919)
lbl(18942)	definition(x(8) 18968 pid('SlaveObject,isFree/slow' 1 pos('./standard/Object.oz' 629 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 238> 3)
		endDefinition(18942)
lbl(18968)	putRecord('#' [1 2 fast] x(10))
		setConstant(isFree)
		setValue(x(8))
		setValue(x(7))
lbl(18978)	definition(x(7) 19024 pid('SlaveObject,free/fast' 0 pos('./standard/Object.oz' 632 2) nil 3) <P: 239> nil)
		putConstant(<N: Master> x(0))
		createVariable(x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		testLiteral(x(2) unit 19005)
		putRecord(object 1 x(0))
		setConstant(slaveAlreadyFree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(19005)	allocateL1
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(<N: DelSlave> x(2) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(18978)
lbl(19024)	definition(x(8) 19038 pid('SlaveObject,free/slow' 1 pos('./standard/Object.oz' 632 2) nil 1) unit nil)
		getLiteral(free x(0))
		genFastCall(<P: 239> 1)
		endDefinition(19024)
lbl(19038)	putRecord('#' [1 2 fast] x(11))
		setConstant(free)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SlaveObject' x(5))
		createVariableMove(y(196) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(19073)	definition(x(7) 19134 pid('MetaObject,GetAttr/fast' 2 pos('./standard/Object.oz' 651 2) nil 5) <P: 240> nil)
		match(x(0) ht(19119 [onScalar(nil 19082) onRecord('|' 2 19086)]))
lbl(19082)	getLiteral(nil x(1))
		return
lbl(19086)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		callBI('@' [x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetAttr> x(4) 2 cache)
lbl(19119)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(654)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19073)
lbl(19134)	definition(x(8) 19169 pid('MetaObject,GetAttr/slow' 1 pos('./standard/Object.oz' 651 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 240> 5)
		endDefinition(19134)
lbl(19169)	putRecord('#' [1 2 fast] x(9))
		setConstant(<N: GetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19179)	definition(x(7) 19242 pid('MetaObject,GetFeat/fast' 2 pos('./standard/Object.oz' 657 2) nil 6) <P: 241> nil)
		match(x(0) ht(19227 [onScalar(nil 19188) onRecord('|' 2 19192)]))
lbl(19188)	getLiteral(nil x(1))
		return
lbl(19192)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		getSelf(x(5))
		callBI('.' [x(5) x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetFeat> x(4) 2 cache)
lbl(19227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(660)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19179)
lbl(19242)	definition(x(8) 19277 pid('MetaObject,GetFeat/slow' 1 pos('./standard/Object.oz' 657 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 241> 5)
		endDefinition(19242)
lbl(19277)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: GetFeat>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(197))
lbl(19289)	definition(x(7) 19394 pid('MetaObject,toChunk/fast' 1 pos('./standard/Object.oz' 663 2) nil 4) <P: 242> [y(197) y(172)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		putRecord(o ['attr' 'class' 'feat'] x(1))
		setValue(y(2))
		setValue(y(1))
		setValue(y(3))
		putRecord(c [<N: PRIVATE>] x(0))
		setValue(x(1))
		callBI('NewChunk' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL4
		return
		endDefinition(19289)
lbl(19394)	definition(x(8) 19420 pid('MetaObject,toChunk/slow' 1 pos('./standard/Object.oz' 663 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 242> 3)
		endDefinition(19394)
lbl(19420)	putRecord('#' [1 2 fast] x(11))
		setConstant(toChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19430)	definition(x(7) 19475 pid('MetaObject,SetAttr/fast' 1 pos('./standard/Object.oz' 673 2) nil 3) <P: 243> nil)
		match(x(0) ht(19460 [onScalar(nil 19439) onRecord('|' 2 19440)]))
lbl(19439)	return
lbl(19440)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('<-' [x(1) x(2)]#nil)
		getSelf(x(2))
		tailSendMsg(<N: SetAttr> x(2) 1 cache)
lbl(19460)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(676)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19430)
lbl(19475)	definition(x(8) 19501 pid('MetaObject,SetAttr/slow' 1 pos('./standard/Object.oz' 673 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 243> 3)
		endDefinition(19475)
lbl(19501)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: SetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19511)	definition(x(7) 19561 pid('MetaObject,SetFeat/fast' 1 pos('./standard/Object.oz' 679 2) nil 5) <P: 244> nil)
		match(x(0) ht(19546 [onScalar(nil 19520) onRecord('|' 2 19521)]))
lbl(19520)	return
lbl(19521)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getSelf(x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		unify(x(4) x(2))
		getSelf(x(2))
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
lbl(19546)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(682)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19511)
lbl(19561)	definition(x(8) 19587 pid('MetaObject,SetFeat/slow' 1 pos('./standard/Object.oz' 679 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 244> 3)
		endDefinition(19561)
lbl(19587)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: SetFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(19597)	definition(x(7) 19662 pid('MetaObject,frmChunk/fast' 1 pos('./standard/Object.oz' 685 2) nil 4) <P: 245> [y(197)])
		allocateL2
		putRecord(o ['attr' 'class' 'feat'] x(2))
		setVariable(y(0))
		setVariable(x(1))
		setVariable(y(1))
		inlineDot(x(0) <N: PRIVATE> x(3) cache)
		unify(x(3) x(2))
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		getSelf(x(0))
		call(x(2) 2)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(<N: SetAttr> x(1) 1 cache)
		getSelf(x(2))
		move(y(1) x(0))
		deAllocateL2
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
		endDefinition(19597)
lbl(19662)	definition(x(8) 19688 pid('MetaObject,frmChunk/slow' 1 pos('./standard/Object.oz' 685 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 245> 3)
		endDefinition(19662)
lbl(19688)	putRecord('#' [1 2 fast] x(14))
		setConstant(frmChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19698)	definition(x(7) 19816 pid('MetaObject,clone/fast' 1 pos('./standard/Object.oz' 693 2) nil 4) <P: 246> [y(197)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(<N: SetAttr> y(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		move(y(1) x(0))
		sendMsg(<N: SetFeat> y(3) 1 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(19698)
lbl(19816)	definition(x(8) 19842 pid('MetaObject,clone/slow' 1 pos('./standard/Object.oz' 693 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 246> 3)
		endDefinition(19816)
lbl(19842)	putRecord('#' [1 2 fast] x(15))
		setConstant(clone)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MetaObject' x(5))
		createVariableMove(y(198) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(object [',' '<-' '@' base 'class' is master meta new send slave] y(199))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setValue(y(194))
		setValue(y(193))
		setValue(y(180))
		setValue(y(195))
		setValue(y(198))
		setValue(y(181))
		setVariable(x(3))
		setValue(y(196))
		putConstant(',' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		unify(x(6) x(0))
		putConstant('@' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(0)])
		unify(x(0) x(2))
		putConstant('<-' x(2))
		putConstant(2 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(1))
		putConstant(send x(2))
		putConstant(3 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(3))
lbl(19965)	definition(x(0) 19991 pid('IsClass' 2 pos('./standard/Class.oz' 29 0) nil 4) <P: 247> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 19985)
		putConstant(<U: ooPrintName> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(19985)	getLiteral(false x(1))
		return
		endDefinition(19965)
lbl(19991)	putConstant(getClass x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
lbl(20000)	definition(x(2) 20062 pid('AssertClass' 2 pos('./standard/Class.oz' 36 3) nil 2) <P: 248> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 20024 20049)
		deAllocateL3
		return
lbl(20024)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setConstant('class')
		setConstant(1)
		setConstant('Module Class')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20049)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(37)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20000)
lbl(20062)	definition(x(2) 20110 pid('AssertNonFinal' 2 pos('./standard/Class.oz' 43 3) nil 3) <P: 249> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 20089)
		deAllocateL2
		return
lbl(20089)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(1))
		setConstant(fromFinalClass)
		setValue(x(0))
		setValue(y(1))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20062)
lbl(20110)	definition(x(2) 20144 pid('GetParents' 2 pos('./standard/Class.oz' 50 3) nil 2) <P: 250> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.parents' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooParents> x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20110)
lbl(20144)	definition(x(3) 20181 pid('MethodNames' 2 pos('./standard/Class.oz' 55 3) nil 2) <P: 251> [y(151)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.methodNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20144)
lbl(20181)	definition(x(4) 20218 pid('AttrNames' 2 pos('./standard/Class.oz' 60 3) nil 2) <P: 252> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.attrNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20181)
lbl(20218)	definition(x(5) 20255 pid('FeatNames' 2 pos('./standard/Class.oz' 65 3) nil 2) <P: 253> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.featNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20218)
lbl(20255)	definition(x(6) 20362 pid('PropNames' 2 pos('./standard/Class.oz' 70 3) nil 3) <P: 254> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.propNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 20326)
		getList(y(1))
		unifyLiteral(final)
		unifyVariable(x(1))
		inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20310 20315)
		getList(x(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20310)	getLiteral(nil x(1))
		deAllocateL2
		return
lbl(20315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20326)	inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20344 20349)
		getList(y(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20344)	getLiteral(nil y(1))
		deAllocateL2
		return
lbl(20349)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(76)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20255)
lbl(20362)	definition(x(7) 20432 pid('HasProperty' 3 pos('./standard/Class.oz' 80 3) nil 3) <P: 255> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		putConstant('Class.property' x(1))
		genFastCall(<P: 248> 4)
		match(y(1) ht(20417 [onScalar(final 20386) onScalar(locking 20403)]))
lbl(20386)	move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(2))
		deAllocateL3
		return
lbl(20403)	move(y(0) x(0))
		inlineDot(x(0) <U: ooLocking> x(1) cache)
		unify(x(1) y(2))
		deAllocateL3
		return
lbl(20417)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20362)
lbl(20432)	definition(x(8) 20507 pid('SubClassOfParent' 3 pos('./standard/Class.oz' 92 6) nil 3) <P: 256> nil)
		match(x(0) ht(20492 [onScalar(nil 20441) onRecord('|' 2 20445)]))
lbl(20441)	getLiteral(false x(2))
		return
lbl(20445)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 257> 6)
		testBool(y(3) 20469 20481)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20469)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
lbl(20481)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20492)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(95)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20432)
lbl(20507)	definition(x(8) 20573 pid('SubClass' 3 pos('./standard/Class.oz' 98 6) nil 3) <P: 257> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 248> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 20544)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20544)	putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 250> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
		endDefinition(20507)
lbl(20573)	definition(x(8) 20590 pid('IsInstanceOf' 3 pos('./standard/Class.oz' 106 6) nil 4) <P: 258> nil)
		callBI(getClass [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 257> 7)
		endDefinition(20573)
lbl(20590)	getRecord('class' [attrNames extendFeatures featNames get getFeature hasFeature hasProperty is isInstanceOf methodNames parents propNames] y(197))
		unifyValue(x(4))
		unifyValue(y(182))
		unifyValue(x(5))
		unifyValVar(x(1) x(9))
		unifyVariable(x(10))
		unifyValue(x(7))
		unifyValue(x(0))
		unifyValue(x(8))
		unifyValue(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
lbl(20617)	definition(x(2) 20666 pid('Class.getFeature' 3 pos('./standard/Class.oz' 120 19) nil 5) <P: 259> nil)
		allocateL2
		inlineDot(x(0) <U: ooUnFreeFeat> x(3) cache)
		callBI('.' [x(3) x(1)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		testBI('IsDet' [x(4)]#[x(3)] 20659)
lbl(20642)	testLiteral(y(1) <U: ooFreeFlag> 20659)
lbl(20646)	putRecord(kernel 3 x(2))
		setConstant('.')
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(20659)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(20617)
lbl(20666)	unify(x(2) x(9))
lbl(20669)	definition(x(2) 20711 pid('Class.hasFeature' 3 pos('./standard/Class.oz' 128 19) nil 5) <P: 260> nil)
		allocateL1
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		putConstant(<U: ooFreeFlag> x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		move(x(2) y(0))
		testBI('IsDet' [x(4)]#[x(0)] 20704)
lbl(20695)	testLiteral(x(4) <U: ooFreeFlag> 20704)
lbl(20699)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(20704)	getLiteral(true y(0))
		deAllocateL1
		return
		endDefinition(20669)
lbl(20711)	unify(x(2) x(10))
		putConstant('BitArray.is' x(2))
		putConstant(2 x(7))
		callBI(builtin [x(2) x(7)]#[x(8)])
		putRecord(bitArray [and card clear clone complementToList disjoint high is low new nimpl 'or' set test toList] y(182))
		setVariable(x(2))
		setVariable(x(7))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setValue(x(8))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putConstant('BitArray.new' x(21))
		putConstant(3 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(15))
		putConstant('BitArray.set' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(18))
		putConstant('BitArray.clear' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('BitArray.test' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(19))
		putConstant('BitArray.low' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(14))
		putConstant('BitArray.high' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(13))
		putConstant('BitArray.clone' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(10))
		putConstant('BitArray.or' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(17))
		putConstant('BitArray.and' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('BitArray.nimpl' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(16))
		putConstant('BitArray.disjoint' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(12))
		putConstant('BitArray.card' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(7))
		putConstant('BitArray.toList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(20))
		putConstant('BitArray.complementToList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(11))
		putConstant('IsForeignPointer' x(9))
		putConstant(2 x(11))
		callBI(builtin [x(9) x(11)]#[x(21)])
		putRecord(foreignPointer [is toInt] y(195))
		setValue(x(21))
		setVariable(x(9))
		putConstant('ForeignPointer.toInt' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('Thread.is' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		putConstant('Thread.getPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(24)])
		putConstant('Thread.setPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(25)])
		putConstant('Thread.this' x(11))
		putConstant(1 x(22))
		callBI(builtin [x(11) x(22)]#[x(26)])
lbl(20990)	definition(x(11) 21008 pid('GetThisPriority' 1 pos('./standard/Thread.oz' 46 3) nil 3) <P: 261> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.getPriority' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(20990)
lbl(21008)	definition(x(22) 21023 pid('SetThisPriority' 1 pos('./standard/Thread.oz' 49 3) nil 2) <P: 262> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.setPriority' [x(1) x(0)]#nil)
		return
		endDefinition(21008)
lbl(21023)	putRecord('thread' [getPriority getThisPriority injectException is isSuspended preempt resume setPriority setThisPriority state suspend terminate this] y(196))
		setValue(x(24))
		setValue(x(11))
		setVariable(x(27))
		setValue(x(23))
		setVariable(x(28))
		setVariable(x(29))
		setVariable(x(30))
		setValue(x(25))
		setValue(x(22))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(y(198))
		setValue(x(26))
		putConstant('Thread.suspend' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(32))
		putConstant('Thread.resume' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(30))
		putConstant('Thread.preempt' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(29))
lbl(21089)	definition(x(11) 21134 pid('Thread.terminate' 1 pos('./standard/Thread.oz' 63 26) nil 4) <P: 263> [x(27) y(105)])
		allocateL2
		move(g(1) x(1))
		inlineDot(x(1) system x(2) cache)
		putRecord(kernel 1 x(3))
		setConstant(terminate)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailCall(g(0) 2)
		endDefinition(21089)
lbl(21134)	unify(x(11) y(198))
		putConstant('Thread.injectException' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(27))
		putConstant('Thread.state' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(31))
		putConstant('Thread.isSuspended' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(28))
		putConstant('Exception.raiseDebugCheck' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		putConstant('Exception.taskStackError' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		putConstant('Exception.location' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		createVariable(y(200))
lbl(21202)	definition(x(11) 21291 pid('RaiseDebugExtend' 2 pos('./standard/Exception.oz' 35 3) nil 7) <P: 264> [y(200)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Label' [x(2)]#[x(3)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Exception.taskStackError' nil#[x(4)])
		callBI('Exception.location' nil#[x(5)])
		putRecord('#' 2 x(6))
		setConstant(stack)
		setValue(x(4))
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putRecord('#' 2 x(6))
		setConstant(loc)
		setValue(x(5))
		putList(x(5))
		setValue(x(6))
		setValue(x(4))
		putRecord('#' 2 x(4))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(4))
		setValue(x(5))
		callBI(record [x(3) x(1)]#[x(4)])
		callBI('Adjoin' [x(2) x(4)]#[x(1)])
		putConstant(debug x(2))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(21202)
lbl(21291)	moveMoveXYXY(x(0) y(201) x(8) y(202))
		moveMoveXYXY(x(21) y(203) x(23) y(204))
		moveMoveXYXY(x(15) y(205) x(18) y(206))
		moveMoveXYXY(x(19) y(207) x(14) y(208))
		moveMoveXYXY(x(13) y(209) x(10) y(210))
		moveMoveXYXY(x(17) y(211) x(2) y(212))
		moveMoveXYXY(x(16) y(213) x(12) y(214))
		moveMoveXYXY(x(7) y(215) x(20) y(216))
		moveMoveXYXY(x(9) y(217) x(1) y(218))
		moveMoveXYXY(x(3) y(219) x(4) y(220))
		moveMoveXYXY(x(5) y(221) x(6) y(222))
		moveMoveXYXY(x(26) y(223) x(22) y(224))
		moveMoveXYXY(x(27) y(225) x(11) y(226))
		move(x(25) x(1))
		putConstant('RaiseDebugCheck' x(0))
		genFastCall(<P: 1> 4)
		move(y(226) x(1))
		putConstant('RaiseDebugExtend' x(0))
		genFastCall(<P: 1> 4)
		unify(y(200) y(0))
lbl(21377)	definition(x(7) 21398 pid('FailureX' 2 pos('./standard/Exception.oz' 57 3) nil 2) <P: 265> nil)
		getRecord('failure' [debug] x(1))
		unifyVariable(x(1))
		getRecord('failure' [info] x(1))
		unifyValue(x(0))
		return
		endDefinition(21377)
lbl(21398)	definition(x(0) 21420 pid('PredefX' 2 pos('./standard/Exception.oz' 61 3) nil 3) <P: 266> nil)
		getRecord(system [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21398)
lbl(21420)	definition(x(8) 21459 pid('PredefXD' 3 pos('./standard/Exception.oz' 65 3) nil 4) <P: 267> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(system [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21420)
lbl(21459)	definition(x(9) 21498 pid('ErrorXD' 3 pos('./standard/Exception.oz' 72 3) nil 4) <P: 268> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(error [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21459)
lbl(21498)	definition(x(10) 21520 pid('ErrorX' 2 pos('./standard/Exception.oz' 79 3) nil 3) <P: 269> nil)
		getRecord(error [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21498)
lbl(21520)	getRecord(exception [error errorDebug 'failure' 'raise' raiseError system systemDebug] y(105))
		unifyValue(x(10))
		unifyValue(x(9))
		unifyValue(x(7))
		unifyValue(y(200))
		unifyValue(y(1))
		unifyValue(x(0))
		unifyValue(x(8))
		putConstant('Alarm' x(7))
		putConstant(2 x(8))
		callBI(builtin [x(7) x(8)]#[x(1)])
		putConstant('Delay' x(7))
		putConstant(1 x(8))
		callBI(builtin [x(7) x(8)]#[x(2)])
lbl(21556)	definition(x(7) 21671 pid('AddWaiter' 4 pos('./standard/Time.oz' 38 3) nil 9) <P: 270> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(x(0) 21653)
lbl(21574)	getVarVar(x(0) x(4))
		createVariable(y(3))
		shallowGuard(21653)
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(21589)	shallowThen
		testLT(x(1) x(5) x(0) 21632)
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		getList(x(3))
		unifyVariable(x(7))
		unifyValue(x(4))
		getRecord('#' 2 x(7))
		unifyVariable(x(8))
		unifyValue(x(6))
		inlineMinus(x(5) x(1) x(0))
		unify(x(0) x(8))
		deAllocateL4
		return
lbl(21632)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(x(5))
		unifyValue(x(6))
		move(x(4) x(0))
		deAllocateL4
		genFastCall(<P: 270> 9)
lbl(21653)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
		endDefinition(21556)
lbl(21671)	definition(x(7) 21683 pid('DefaultFun' 1 pos('./standard/Time.oz' 53 23) nil 1) <P: 271> nil)
		getNumber(1000 x(0))
		return
		endDefinition(21671)
lbl(21683)	putList(x(8))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: ActDelay> <N: Action> <N: DelayFun> <N: Final> <N: NumReset> <N: NumberA> <N: Stop>] x(9))
		setConstant(1000)
		setConstant(dummyRep)
		setValue(x(7))
		setConstant(finalRep)
		setConstant(~1)
		setConstant(~1)
		setConstant(unit)
		putRecord(messagePattern [action delay delayFun final number] x(10))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(21729)	definition(x(11) 21916 pid('Repeat,setRepAll' 1 pos('./standard/Time.oz' 86 6) nil 3) unit [x(10) x(7) y(0)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21768)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
		branch(21771)
lbl(21768)	getLiteral(dummyRep y(1))
lbl(21771)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21794)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(2))
		branch(21797)
lbl(21794)	getLiteral(finalRep y(2))
lbl(21797)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21820)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
		branch(21823)
lbl(21820)	getNumber(1000 y(3))
lbl(21823)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21846)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
		branch(21849)
lbl(21846)	unify(y(4) g(1))
lbl(21849)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(number x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21872)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(5))
		branch(21875)
lbl(21872)	getNumber(~1 y(5))
lbl(21875)	move(y(1) x(0))
		genCall(gci(g(2) true setRepAction false 1) 0)
		move(y(2) x(0))
		genCall(gci(g(2) true setRepFinal false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true setRepNum false 1) 0)
		move(y(4) x(0))
		move(g(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 21910)
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(2) true setRepDelay true 1) 0)
lbl(21910)	deAllocateL6
		genCall(gci(g(2) true setRepDelayFun true 1) 0)
		endDefinition(21729)
lbl(21916)	putList(x(10))
		setConstant(setRepAll)
		setValue(x(11))
lbl(21922)	definition(x(11) 21979 pid('Repeat,getRep/fast' [action actual delay delayFun final number] pos('./standard/Time.oz' 102 6) nil 7) <P: 272> nil)
		inlineAt(<N: Action> x(6) cache)
		unify(x(6) x(0))
		inlineAt(<N: Final> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<N: ActDelay> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<N: DelayFun> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<N: NumReset> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<N: NumberA> x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(21922)
lbl(21979)	putRecord(messagePattern [action actual delay delayFun final number] x(12))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(21995)	definition(x(13) 22158 pid('Repeat,getRep/slow' 1 pos('./standard/Time.oz' 102 6) nil 7) unit [x(12)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22032)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
lbl(22032)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(actual x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22053)
		inlineDot(x(0) actual x(1) cache)
		unify(x(1) y(2))
lbl(22053)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22074)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
lbl(22074)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22095)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
lbl(22095)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22116)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(5))
lbl(22116)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(number x(6))
		testBI('HasFeature' [x(0) x(6)]#[x(1)] 22137)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(6))
lbl(22137)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		deAllocateL7
		genFastCall(<P: 272> 13)
		endDefinition(21995)
lbl(22158)	putRecord(getRep [action actual delay delayFun final number] x(12))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(14))
		setConstant(getRep)
		setValue(x(13))
		setValue(x(12))
		setValue(x(11))
		putRecord(messagePattern 1 x(11))
		setConstant(unit)
lbl(22192)	definition(x(12) 22246 pid('Repeat,setRepAction' 1 pos('./standard/Time.oz' 117 6) nil 3) unit [x(11)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22231)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22234)
lbl(22231)	getLiteral(dummyRep y(1))
lbl(22234)	move(y(1) x(0))
		inlineAssign(<N: Action> x(0) cache)
		deAllocateL2
		return
		endDefinition(22192)
lbl(22246)	putList(x(11))
		setConstant(setRepAction)
		setValue(x(12))
		putRecord(messagePattern 1 x(12))
		setConstant(unit)
lbl(22258)	definition(x(13) 22312 pid('Repeat,setRepFinal' 1 pos('./standard/Time.oz' 121 6) nil 3) unit [x(12)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22297)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22300)
lbl(22297)	getLiteral(finalRep y(1))
lbl(22300)	move(y(1) x(0))
		inlineAssign(<N: Final> x(0) cache)
		deAllocateL2
		return
		endDefinition(22258)
lbl(22312)	putList(x(12))
		setConstant(setRepFinal)
		setValue(x(13))
		putRecord(messagePattern 1 x(13))
		setConstant(unit)
lbl(22324)	definition(x(15) 22395 pid('Repeat,setRepDelay' 1 pos('./standard/Time.oz' 125 6) nil 3) unit [x(13)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22363)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22366)
lbl(22363)	getNumber(1000 y(1))
lbl(22366)	move(y(1) x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
lbl(22374)	definition(x(1) 22386 pid('' 1 pos('./standard/Time.oz' 127 14) nil 1) unit [y(1)])
		unify(x(0) g(0))
		return
		endDefinition(22374)
lbl(22386)	inlineAssign(<N: DelayFun> x(1) cache)
		deAllocateL2
		return
		endDefinition(22324)
lbl(22395)	putList(x(13))
		setConstant(setRepDelay)
		setValue(x(15))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22407)	definition(x(16) 22469 pid('Repeat,setRepDelayFun' 1 pos('./standard/Time.oz' 130 6) nil 3) unit [x(15) x(7)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22446)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22449)
lbl(22446)	unify(y(1) g(1))
lbl(22449)	putConstant(~1 x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: DelayFun> x(0) cache)
		deAllocateL2
		return
		endDefinition(22407)
lbl(22469)	putList(x(7))
		setConstant(setRepDelayFun)
		setValue(x(16))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22481)	definition(x(16) 22540 pid('Repeat,setRepNum' 1 pos('./standard/Time.oz' 135 6) nil 3) unit [x(15)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22520)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22523)
lbl(22520)	getNumber(~1 y(1))
lbl(22523)	move(y(1) x(0))
		inlineAssign(<N: NumberA> x(0) cache)
		inlineAssign(<N: NumReset> x(0) cache)
		deAllocateL2
		return
		endDefinition(22481)
lbl(22540)	putList(x(15))
		setConstant(setRepNum)
		setValue(x(16))
lbl(22546)	definition(x(16) 22611 pid('Repeat,go/fast' 0 pos('./standard/Time.oz' 144 6) nil 2) <P: 273> [y(0)])
		allocateL1
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22588 x(0))
		inlineAt(<N: Stop> x(0) cache)
		createVariable(y(0))
		testBI('IsDet' [x(0)]#[x(1)] 22584)
		createVariable(x(0))
		inlineAssign(<N: Stop> x(0) cache)
		getLiteral(true y(0))
		branch(22587)
lbl(22584)	getLiteral(false y(0))
lbl(22587)	return
lbl(22588)	testBool(y(0) 22596 22598)
		deAllocateL1
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22596)	deAllocateL1
		return
lbl(22598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22546)
lbl(22611)	definition(x(17) 22625 pid('Repeat,go/slow' 1 pos('./standard/Time.oz' 144 6) nil 1) unit nil)
		getLiteral(go x(0))
		genFastCall(<P: 273> 1)
		endDefinition(22611)
lbl(22625)	putRecord('#' [1 2 fast] x(18))
		setConstant(go)
		setValue(x(17))
		setValue(x(16))
lbl(22635)	definition(x(16) 22674 pid('Repeat,stop/fast' 0 pos('./standard/Time.oz' 155 6) nil 2) <P: 274> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22671 x(0))
		putConstant(unit x(0))
		inlineAt(<N: Stop> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<N: NumReset> x(0) cache)
		inlineAssign(<N: NumberA> x(0) cache)
		return
lbl(22671)	return
		endDefinition(22635)
lbl(22674)	definition(x(17) 22688 pid('Repeat,stop/slow' 1 pos('./standard/Time.oz' 155 6) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 274> 1)
		endDefinition(22674)
lbl(22688)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(17))
		setValue(x(16))
lbl(22698)	definition(x(16) 22860 pid('Repeat,Run/fast' 0 pos('./standard/Time.oz' 162 6) nil 5) <P: 275> [y(0)])
		allocateL5
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22752 x(0))
		inlineAt(<N: Stop> x(0) cache)
		inlineAt(<N: ActDelay> x(1) cache)
		inlineAt(<N: Action> x(2) cache)
		inlineAt(<N: Final> x(3) cache)
		inlineAt(<N: NumberA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) y(4))
		return
lbl(22752)	move(y(0) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 22761)
		deAllocateL5
		return
lbl(22761)	testNumber(y(3) 0 22785)
		getSelf(x(1))
		sendMsg(stop x(1) 0 cache)
		getSelf(x(2))
		move(y(4) x(0))
		deAllocateL5
		tailSendMsg(<N: Do> x(2) 1 cache)
lbl(22785)	move(y(1) x(1))
		createVariable(x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
		move(x(2) y(1))
		getSelf(x(3))
		move(y(2) x(0))
		sendMsg(<N: Do> x(3) 1 cache)
		move(y(3) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 22826)
		inlineMinus1(x(0) x(1))
		inlineAssign(<N: NumberA> x(1) cache)
lbl(22826)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 22845 22847)
		deAllocateL5
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22845)	deAllocateL5
		return
lbl(22847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22698)
lbl(22860)	definition(x(17) 22874 pid('Repeat,Run/slow' 1 pos('./standard/Time.oz' 162 6) nil 1) unit nil)
		getLiteral(<N: Run> x(0))
		genFastCall(<P: 275> 1)
		endDefinition(22860)
lbl(22874)	putRecord('#' [1 2 fast] x(20))
		setConstant(<N: Run>)
		setValue(x(17))
		setValue(x(16))
lbl(22884)	definition(x(16) 22904 pid('Repeat,Do/fast' 1 pos('./standard/Time.oz' 195 6) nil 2) <P: 276> nil)
		testBI('IsProcedure' [x(0)]#[x(1)] 22897)
		tailCall(x(0) 0)
lbl(22897)	getSelf(x(1))
		tailCall(x(1) 1)
		endDefinition(22884)
lbl(22904)	definition(x(17) 22930 pid('Repeat,Do/slow' 1 pos('./standard/Time.oz' 195 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 276> 3)
		endDefinition(22904)
lbl(22930)	putRecord('#' [1 2 fast] x(21))
		setConstant(<N: Do>)
		setValue(x(17))
		setValue(x(16))
lbl(22940)	definition(x(16) 22949 pid('Repeat,finalRep/fast' 0 pos('./standard/Time.oz' 204 6) nil 0) <P: 277> nil)
		return
		endDefinition(22940)
lbl(22949)	definition(x(17) 22963 pid('Repeat,finalRep/slow' 1 pos('./standard/Time.oz' 204 6) nil 1) unit nil)
		getLiteral(finalRep x(0))
		genFastCall(<P: 277> 1)
		endDefinition(22949)
lbl(22963)	putRecord('#' [1 2 fast] x(22))
		setConstant(finalRep)
		setValue(x(17))
		setValue(x(16))
lbl(22973)	definition(x(16) 22982 pid('Repeat,dummyRep/fast' 0 pos('./standard/Time.oz' 208 6) nil 0) <P: 278> nil)
		return
		endDefinition(22973)
lbl(22982)	definition(x(17) 22996 pid('Repeat,dummyRep/slow' 1 pos('./standard/Time.oz' 208 6) nil 1) unit nil)
		getLiteral(dummyRep x(0))
		genFastCall(<P: 278> 1)
		endDefinition(22982)
lbl(22996)	putRecord('#' [1 2 fast] x(23))
		setConstant(dummyRep)
		setValue(x(17))
		setValue(x(16))
		putRecord('#' 13 x(16))
		setValue(x(10))
		setValue(x(14))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(7))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		moveMoveXYXY(x(1) y(226) x(2) y(227))
		move(x(0) y(228))
		move(x(8) x(0))
		move(x(16) x(1))
		move(x(9) x(2))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('Repeat' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(time [alarm delay repeat time] y(229))
		setValue(y(226))
		setValue(y(227))
		setValue(y(0))
		setVariable(x(0))
		putConstant('Time.time' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(23098)	definition(x(0) 23124 pid('IsFunctor' 2 pos('./standard/Functor.oz' 30 3) nil 4) <P: 279> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 23118)
		putConstant(<U: functorID> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(23118)	getLiteral(false x(1))
		return
		endDefinition(23098)
lbl(23124)	definition(x(1) 23151 pid('NewFunctor' 4 pos('./standard/Functor.oz' 34 3) nil 5) <P: 280> nil)
		putRecord(f [<U: functorID> apply 'export' 'import'] x(4))
		setConstant(unit)
		setValue(x(2))
		setValue(x(1))
		setValue(x(0))
		callBI('NewChunk' [x(4)]#[x(0)])
		unify(x(0) x(3))
		return
		endDefinition(23124)
lbl(23151)	moveMoveXYXY(x(0) y(0) x(1) y(230))
		putConstant('NewFunctor' x(0))
		genFastCall(<P: 1> 4)
lbl(23162)	definition(x(3) 23187 pid('GetFeatures' 2 pos('./standard/Functor.oz' 44 3) nil 2) <P: 281> nil)
		inlineDot(x(0) type x(0) cache)
		testList(x(0) 23181)
lbl(23177)	unify(x(1) x(0))
		return
lbl(23181)	getLiteral(nil x(1))
		return
		endDefinition(23162)
lbl(23187)	putRecord('functor' [getFeatures is new] y(231))
		setValue(x(3))
		setValue(y(0))
		setValue(y(230))
		move(g(0) x(1))
		putConstant('export' x(0))
		createVariableMove(y(230) x(2))
		genFastCall(<P: 108> 6)
lbl(23209)	definition(x(0) 23227 pid('IsNotNL' 2 pos('./sp/Error.oz' 38 13) nil 4) <P: 282> nil)
		putConstant(10 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23209)
lbl(23227)	definition(x(3) 23258 pid('ToLower' 2 pos('./sp/Error.oz' 39 13) nil 3) <P: 283> [y(54)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(23227)
lbl(23258)	definition(x(3) 23535 pid('EscapeVariableChar' 3 pos('./sp/Error.oz' 45 6) nil 6) <P: 284> nil)
		shallowGuard(23522)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23272)	shallowThen
		testLiteral(x(4) nil 23284)
lbl(23277)	getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(23284)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 23311)
lbl(23297)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23311)	testNumber(y(2) 92 23317)
		branch(23297)
lbl(23317)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 23361)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(23361)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 23412)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23412)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 23463)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23463)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 23514)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23514)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23522)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(45)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23258)
lbl(23535)	definition(x(4) 23619 pid('PrintNameToVS' 2 pos('./sp/Error.oz' 56 6) nil 4) <P: 285> [y(39) x(3)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 23581)
lbl(23553)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 23581)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(23581)	match(y(0) ht(23612 [onScalar(nil 23584) onScalar('#' 23604)]))
lbl(23584)	getList(y(1))
		unifyNumber(110)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(105)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(108)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23604)	getList(y(1))
		unifyNumber(35)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23612)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(23535)
lbl(23619)	definition(x(3) 23721 pid('ListToVS' 3 pos('./sp/Error.oz' 66 3) nil 5) <P: 286> nil)
		testLiteral(x(0) nil 23633)
lbl(23629)	getLiteral('' x(2))
		return
lbl(23633)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 23660)
lbl(23645)	getVarVar(x(3) x(4))
		testLiteral(x(4) nil 23660)
		getRecord(oz 1 y(2))
		unifyValue(x(3))
		deAllocateL3
		return
lbl(23660)	testList(y(0) 23706)
lbl(23663)	getVarVar(x(0) x(1))
		shallowGuard(23706)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(23674)	shallowThen
		getRecord('#' 3 y(2))
		unifyVariable(x(1))
		unifyValVar(y(1) x(4))
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 286> 7)
lbl(23706)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(74)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23619)
lbl(23721)	definition(x(1) 23907 pid('PosToVS' 5 pos('./sp/Error.oz' 77 3) nil 5) <P: 287> nil)
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		testLiteral(x(0) '' 23749)
		getLiteral(nil y(4))
		branch(23759)
lbl(23749)	getRecord('#' 3 y(4))
		unifyLiteral('file "')
		unifyValue(x(0))
		unifyLiteral('"')
lbl(23759)	createVariable(y(5))
		testLiteral(y(0) unit 23770)
		getLiteral(nil y(5))
		branch(23778)
lbl(23770)	getRecord('#' 2 y(5))
		unifyLiteral('line ')
		unifyValue(y(0))
lbl(23778)	createVariable(y(0))
		match(y(1) ht(23793 [onScalar(unit 23783) onScalar(~1 23788)]))
lbl(23783)	getLiteral(nil y(0))
		branch(23801)
lbl(23788)	getLiteral(nil y(0))
		branch(23801)
lbl(23793)	getRecord('#' 2 y(0))
		unifyLiteral('column ')
		unifyValue(y(1))
lbl(23801)	createVariable(y(1))
		testLiteral(y(2) unit 23812)
		getLiteral(nil y(1))
		branch(23820)
lbl(23812)	getRecord('#' 2 y(1))
		unifyLiteral('PC = ')
		unifyValue(y(2))
lbl(23820)	definition(x(1) 23838 pid('' 2 pos('./sp/Error.oz' 84 7) nil 4) unit nil)
		putConstant(nil x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23820)
lbl(23838)	putList(x(4))
		setValue(y(1))
		setConstant(nil)
		putList(x(3))
		setValue(y(0))
		setValue(x(4))
		putList(x(2))
		setValue(y(5))
		setValue(x(3))
		putList(x(0))
		setValue(y(4))
		setValue(x(2))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testList(y(0) 23900)
lbl(23871)	getVarVar(x(2) x(0))
lbl(23874)	definition(x(1) 23893 pid('' 3 pos('./sp/Error.oz' 87 12) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(', ')
		unifyValue(x(1))
		return
		endDefinition(23874)
lbl(23893)	move(y(3) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
lbl(23900)	getLiteral(nil y(3))
		deAllocateL6
		return
		endDefinition(23721)
lbl(23907)	definition(x(2) 23926 pid('StarLine' 2 pos('./sp/Error.oz' 92 3) nil 2) <P: 288> nil)
		getRecord('#' 3 x(1))
		unifyLiteral('%** ')
		unifyValue(x(0))
		unifyLiteral('\n')
		return
		endDefinition(23907)
lbl(23926)	definition(x(3) 23965 pid('Repeat' 3 pos('./sp/Error.oz' 96 3) nil 3) <P: 289> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(23944)	definition(x(1) 23956 pid('' 1 pos('./sp/Error.oz' 98 16) nil 1) unit [y(0)])
		unify(x(0) g(0))
		return
		endDefinition(23944)
lbl(23956)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(23926)
lbl(23965)	definition(x(3) 24022 pid('MaxLeftSize' 2 pos('./sp/Error.oz' 101 3) nil 5) <P: 290> nil)
lbl(23971)	definition(x(4) 24008 pid('' 3 pos('./sp/Error.oz' 102 16) nil 5) unit nil)
		shallowGuard(23995)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23987)	shallowThen
		callBI('Max' [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(23995)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(102)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23971)
lbl(24008)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(0 x(2))
		genFastCall(<P: 30> 9)
		endDefinition(23965)
lbl(24022)	putRecord('#' 3 y(232))
		setConstant('%**')
		setVariable(x(3))
		setConstant('\n')
		putConstant(65 x(4))
		putConstant(3 x(5))
		inlineMinus(x(4) x(5) x(6))
		moveMoveXYXY(x(4) y(233) x(0) y(234))
		moveMoveXYXY(x(1) y(235) x(2) y(236))
		move(x(6) x(0))
		move(x(3) x(2))
		putConstant(45 x(1))
		genFastCall(<P: 289> 6)
		putConstant('%***' x(0))
		createVariableMove(y(237) x(1))
		genFastCall(<P: 196> 4)
		putConstant(0 x(4))
lbl(24076)	definition(x(2) 27815 pid('' 2 pos('./sp/Error.oz' 111 3) nil 4) <P: 291> [y(143) y(234) y(39) y(130) y(163) x(4) y(233) y(237) y(236) y(232) y(134) y(224) y(235)])
		putList(x(2))
		setPredicateRef(<Q: 292>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 294>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 327>)
		setValue(x(2))
lbl(24298)	definitionCopy(x(3) 27810 pid('/body' 0 pos('./sp/Error.oz' 111 3) [once] 14) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) x(1) g(12)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(2) printError x(4) cache)
lbl(24333)	definition(x(5) 24428 pid('DoFormatTypes' 3 pos('./sp/Error.oz' 151 2) nil 5) <Q: 292> [g(1) g(2)])
		testLiteral(x(1) nil 24347)
lbl(24343)	getLiteral(nil x(2))
		return
lbl(24347)	allocateL4
		inlineDot(x(1) 2 x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		move(x(3) y(1))
		testLiteral(y(0) '' 24401)
lbl(24387)	getRecord(hint [m] x(2))
		unifyVariable(x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
		branch(24414)
lbl(24401)	getRecord(hint [l m] x(2))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
lbl(24414)	moveMoveYXYX(y(3) x(1) y(1) x(2))
		putConstant('' x(0))
		deAllocateL4
		genFastCall(<Q: 292> 7)
		endDefinition(24333)
lbl(24428)	definition(x(5) 24457 pid('FormatTypes' 2 pos('./sp/Error.oz' 166 2) nil 5) <Q: 293> [g(3)])
		callBI('AtomToString' [x(0)]#[x(3)])
		putList(x(4))
		setConstant(10)
		setValue(x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant('Expected type' x(0))
		genFastCall(<Q: 292> 7)
		endDefinition(24428)
lbl(24457)	definition(x(6) 24571 pid('FormatPartialAppl' 4 pos('./sp/Error.oz' 171 6) nil 6) <Q: 294> [g(4)])
		allocateL2
		getRecord('#' 4 x(3))
		unifyLiteral('{')
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(oz 1 x(3))
		unifyValue(x(0))
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		testLiteral(x(1) nil 24496)
lbl(24491)	getLiteral('' x(4))
		branch(24512)
lbl(24496)	getRecord('#' 2 x(4))
		unifyLiteral(' ')
		unifyVariable(x(0))
		getRecord(list 2 x(0))
		unifyValue(x(1))
		unifyLiteral(' ')
lbl(24512)	testNumber(y(0) 0 24524)
		getList(y(1))
		unifyNumber(125)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(24524)	getRecord('#' 2 y(1))
		unifyVariable(x(5))
		unifyLiteral('}')
lbl(24532)	definition(x(3) 24553 pid('' 3 pos('./sp/Error.oz' 176 8) nil 3) unit nil)
		getList(x(2))
		unifyNumber(32)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(95)
		unifyValue(x(0))
		return
		endDefinition(24532)
lbl(24553)	move(y(0) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		putConstant(nil x(4))
		deAllocateL2
		genFastCall(<P: 105> 13)
		endDefinition(24457)
lbl(24571)	definition(x(6) 24588 pid('FormatAppl' 3 pos('./sp/Error.oz' 180 6) nil 4) <Q: 295> nil)
		move(x(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 294> 9)
		endDefinition(24571)
lbl(24588)	definition(x(7) 24645 pid('DoFormatHint' 2 pos('./sp/Error.oz' 185 2) nil 4) <Q: 296> [g(1) g(2)])
		testLiteral(x(0) nil 24602)
lbl(24598)	getLiteral(nil x(1))
		return
lbl(24602)	allocateL3
		inlineDot(x(0) 2 x(0) cache)
		move(x(1) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 57> 8)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(line 1 x(0))
		unifyValue(y(1))
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 296> 5)
		endDefinition(24588)
lbl(24645)	definition(x(7) 24738 pid('FormatHint' 2 pos('./sp/Error.oz' 193 2) nil 4) <Q: 297> [x(1)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		inlineDot(x(0) hints x(0) cache)
		testBool(x(0) 24692 24725)
lbl(24688)	testLiteral(y(0) nil 24697)
lbl(24692)	getLiteral(nil y(1))
		deAllocateL3
		return
lbl(24697)	getList(y(1))
		unifyLiteral(unit)
		unifyVariable(y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 194> 4)
		putList(x(0))
		setConstant(10)
		setValue(y(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 296> 5)
lbl(24725)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(24645)
lbl(24738)	definition(x(8) 24786 pid('InfoField' 2 pos('./sp/Error.oz' 203 6) nil 3) <Q: 298> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 24779)
lbl(24761)	putConstant(info x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 24779)
lbl(24768)	inlineDot(x(0) info x(1) cache)
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(24779)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(24738)
lbl(24786)	definition(x(9) 24825 pid('DebugField' 2 pos('./sp/Error.oz' 211 6) nil 4) <Q: 299> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24818)
lbl(24800)	putConstant(debug x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24818)
lbl(24807)	inlineDot(x(0) debug x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24818)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24786)
lbl(24825)	definition(x(9) 24864 pid('DispatchField' 2 pos('./sp/Error.oz' 217 6) nil 4) <Q: 300> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24857)
lbl(24839)	putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24857)
lbl(24846)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24857)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24825)
lbl(24864)	definition(x(10) 24904 pid('HasDispatchField' 2 pos('./sp/Error.oz' 223 6) nil 4) <Q: 301> nil)
		testBI('IsRecord' [x(0)]#[x(2)] 24898)
		putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24894)
		inlineDot(x(0) 1 x(0) cache)
		callBI('IsRecord' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(24894)	getLiteral(false x(1))
		return
lbl(24898)	getLiteral(false x(1))
		return
		endDefinition(24864)
lbl(24904)	definition(x(10) 25026 pid('DebugInfo' 2 pos('./sp/Error.oz' 229 6) nil 6) <Q: 302> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 298> 4)
		match(y(1) ht(25019 [onScalar(unit 24923) onScalar(nil 24928) onRecord('|' 2 24933)]))
lbl(24923)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24928)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24933)	getVarVar(x(0) x(3))
		getList(y(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		match(x(0) ht(24997 [onRecord(apply 2 24950) onRecord(fapply 3 24966) onRecord(vs 1 24987)]))
lbl(24950)	getVarVar(x(0) x(1))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		genFastCall(<Q: 295> 6)
		branch(25010)
lbl(24966)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		move(x(4) x(3))
		genFastCall(<Q: 294> 8)
		branch(25010)
lbl(24987)	getVariable(x(0))
		getRecord(hint [l] x(4))
		unifyValue(x(0))
		branch(25010)
lbl(24997)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(242)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(25010)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 302> 5)
lbl(25019)	getLiteral(nil y(0))
		deAllocateL2
		return
		endDefinition(24904)
lbl(25026)	definition(x(10) 25061 pid('DebugLoc' 2 pos('./sp/Error.oz' 249 6) nil 4) <Q: 303> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		putConstant(loc x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(0))
		deAllocateL2
		return
		endDefinition(25026)
lbl(25061)	definition(x(10) 25145 pid('DebugStack' 2 pos('./sp/Error.oz' 255 6) nil 4) <Q: 304> [x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 299> 4)
		move(y(3) x(0))
		putConstant(stack x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 25138)
lbl(25110)	move(y(2) x(1))
		inlineDot(x(1) 'thread' x(1) cache)
		putConstant(0 x(2))
		testLT(x(2) x(1) x(3) 25138)
lbl(25127)	inlineDot(x(0) stack x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
lbl(25138)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(25061)
lbl(25145)	definition(x(10) 25214 pid('OzValueToVS' 2 pos('./sp/Error.oz' 275 6) nil 6) <Q: 305> [x(1) x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(1))
		inlineDot(x(1) depth x(5) cache)
		inlineDot(x(1) width x(2) cache)
		move(y(0) x(0))
		move(x(5) x(1))
		move(y(1) x(3))
		deAllocateL3
		tailCall(x(4) 4)
		endDefinition(25145)
lbl(25214)	createVariable(y(0))
lbl(25216)	definition(x(10) 25327 pid('AlmostVSToVS' 2 pos('./sp/Error.oz' 280 6) nil 6) <Q: 306> [g(5) y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 25316)
lbl(25232)	testBI('IsRecord' [x(0)]#[x(2)] 25316)
lbl(25236)	match(y(0) ht(25290 [onRecord(oz 1 25239) onRecord(pn 1 25245) onRecord('pos' 3 25251) onRecord(list 2 25269)]))
lbl(25239)	getVariable(x(0))
		deAllocateL2
		genFastCall(<Q: 305> 5)
lbl(25245)	getVariable(x(0))
		deAllocateL2
		genFastCall(<P: 285> 5)
lbl(25251)	getVarVar(x(0) x(5))
		getVariable(x(2))
		move(x(5) x(1))
		move(y(1) x(4))
		putConstant(unit x(3))
		deAllocateL2
		genFastCall(<P: 287> 11)
lbl(25269)	getVarVar(x(0) x(3))
		move(x(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 286> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 306> 5)
lbl(25290)	testBI('IsTuple' [x(0)]#[x(2)] 25311)
lbl(25294)	callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) '#' 25311)
lbl(25301)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 161> 7)
lbl(25311)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(25316)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 305> 5)
		endDefinition(25216)
lbl(25327)	unify(x(10) y(0))
lbl(25330)	definition(x(10) 25425 pid('AttachLeftSizes' 2 pos('./sp/Error.oz' 301 6) nil 4) <Q: 307> nil)
lbl(25336)	definition(x(3) 25414 pid('' 2 pos('./sp/Error.oz' 303 3) nil 3) unit nil)
		match(x(0) ht(25403 [onRecord(hint [l] 25345) onRecord(hint [l m] 25374)]))
lbl(25345)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25374)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25403)	getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyValue(x(0))
		return
		endDefinition(25336)
lbl(25414)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(25330)
lbl(25425)	definition(x(10) 25510 pid('LineOutput' 2 pos('./sp/Error.oz' 317 6) nil 5) <Q: 308> [x(4)])
		testLiteral(x(1) none 25436)
lbl(25435)	return
lbl(25436)	allocateL1
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(3)])
lbl(25443)	definition(x(2) 25483 pid('' 1 pos('./sp/Error.oz' 325 6) nil 3) unit [x(3)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(25443)
lbl(25483)	move(x(3) y(0))
		move(x(0) x(4))
		move(x(2) x(0))
		call(x(4) 2)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		move(x(1) x(0))
		deAllocateL1
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(25425)
lbl(25510)	definition(x(4) 25527 pid('Spaces' 2 pos('./sp/Error.oz' 333 6) nil 3) <Q: 309> nil)
		move(x(1) x(2))
		putConstant(32 x(1))
		genFastCall(<P: 289> 7)
		endDefinition(25510)
lbl(25527)	definition(x(4) 25808 pid('Lines' 2 pos('./sp/Error.oz' 337 6) nil 4) <Q: 310> [g(6)])
		allocateL3
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 307> 4)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 290> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		inlinePlus(x(0) x(1) x(2))
lbl(25565)	definition(x(3) 25796 pid('' 1 pos('./sp/Error.oz' 342 3) nil 5) unit [y(0) x(2)])
		shallowGuard(25783)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(25581)	shallowThen
		match(x(2) ht(25782 [onScalar(unit 25585) onScalar(hint 25602) onRecord(line 1 25619) onRecord('pos' 3 25635) onRecord(hint [l] 25671) onRecord(hint [m] 25687) onRecord(hint [l m] 25734)]))
lbl(25585)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25602)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25619)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25635)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		genFastCall(<P: 287> 10)
		putRecord('#' 2 x(0))
		setConstant('in ')
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25671)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25687)	allocateL2
		getVariable(y(0))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		putConstant(2 x(3))
		inlinePlus(x(2) x(3) x(4))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL2
		tailCall(g(0) 1)
lbl(25734)	allocateL3
		getVarVar(y(0) y(1))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		inlinePlus1(x(2) x(3))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(':')
		setValue(y(2))
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(0) 1)
lbl(25782)	return
lbl(25783)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(25565)
lbl(25796)	move(y(1) x(0))
		move(x(3) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(25527)
lbl(25808)	definition(x(4) 25881 pid('Location' 2 pos('./sp/Error.oz' 368 6) nil 4) <Q: 311> nil)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) nil 25827)
lbl(25822)	getLiteral(nil y(0))
		deAllocateL1
		return
lbl(25827)	testLiteral(x(0) unit 25833)
		branch(25822)
lbl(25833)	getList(y(0))
		unifyLiteral('')
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 2 x(2))
		unifyLiteral('Level: ')
		unifyVariable(x(3))
lbl(25853)	definition(x(1) 25872 pid('' 3 pos('./sp/Error.oz' 373 33) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' ')
		unifyValue(x(1))
		return
		endDefinition(25853)
lbl(25872)	putConstant('' x(2))
		deAllocateL1
		genFastCall(<P: 32> 9)
		endDefinition(25808)
lbl(25881)	definition(x(4) 26223 pid('DoStack' 3 pos('./sp/Error.oz' 382 2) nil 10) <Q: 312> [x(2)])
		match(x(0) ht(26208 [onScalar(nil 25890) onRecord('|' 2 25894)]))
lbl(25890)	getLiteral(nil x(2))
		return
lbl(25894)	allocateL8
		getVarVar(x(0) y(0))
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26200)
		putConstant(file x(5))
		putConstant('' x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(7)])
		putConstant(line x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(8)])
		putConstant(column x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(9)])
		putConstant('PC' x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(2))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 287> 10)
		move(y(3) x(0))
		inlineDot(x(0) kind x(1) cache)
		createVariable(y(5))
		match(x(1) ht(26059 [onScalar('call/c' 25979) onScalar('call/f' 25984) onScalar('lock/c' 25989) onScalar('lock/f' 25994) onScalar('exception handler/c' 25999) onScalar('exception handler/f' 26004) onScalar('conditional/c' 26009) onScalar('conditional/f' 26014) onScalar('definition/c' 26019) onScalar('definition/f' 26024) onScalar('skip/c' 26029) onScalar('skip/f' 26034) onScalar('fail/c' 26039) onScalar('fail/f' 26044) onScalar('thread/c' 26049) onScalar('thread/f' 26054)]))
lbl(25979)	getLiteral('call' y(5))
		branch(26062)
lbl(25984)	getLiteral('call' y(5))
		branch(26062)
lbl(25989)	getLiteral('lock' y(5))
		branch(26062)
lbl(25994)	getLiteral('lock' y(5))
		branch(26062)
lbl(25999)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26004)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26009)	getLiteral(conditional y(5))
		branch(26062)
lbl(26014)	getLiteral(conditional y(5))
		branch(26062)
lbl(26019)	getLiteral('definition' y(5))
		branch(26062)
lbl(26024)	getLiteral('definition' y(5))
		branch(26062)
lbl(26029)	getLiteral('skip' y(5))
		branch(26062)
lbl(26034)	getLiteral('skip' y(5))
		branch(26062)
lbl(26039)	getLiteral('fail' y(5))
		branch(26062)
lbl(26044)	getLiteral('fail' y(5))
		branch(26062)
lbl(26049)	getLiteral('thread' y(5))
		branch(26062)
lbl(26054)	getLiteral('thread' y(5))
		branch(26062)
lbl(26059)	unify(y(5) x(1))
lbl(26062)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(y(2))
		getRecord('#' 2 x(0))
		unifyVariable(y(6))
		unifyVariable(y(7))
		testLiteral(y(5) 'call' 26165)
lbl(26080)	move(y(3) x(0))
		inlineDot(x(0) data x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 26160)
		move(g(0) x(1))
		inlineDot(x(1) printName x(2) cache)
		move(x(0) y(3))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(3) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 26139)
		testLiteral(y(5) '' 26127)
		getLiteral('object application' y(6))
		branch(26168)
lbl(26127)	getRecord('#' 3 y(6))
		unifyLiteral('object application of class \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26139)	testLiteral(y(5) '' 26148)
		getLiteral(procedure y(6))
		branch(26168)
lbl(26148)	getRecord('#' 3 y(6))
		unifyLiteral('procedure \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26160)	getLiteral('procedure _' y(6))
		branch(26168)
lbl(26165)	unify(y(6) y(5))
lbl(26168)	testLiteral(y(4) nil 26177)
		getLiteral(nil y(7))
		branch(26185)
lbl(26177)	getRecord('#' 2 y(7))
		unifyLiteral(' in ')
		unifyValue(y(4))
lbl(26185)	move(y(1) x(0))
		inlineMinus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL8
		genFastCall(<Q: 312> 7)
lbl(26200)	getList(x(2))
		unifyLiteral('...')
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(26208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(25881)
lbl(26223)	definition(x(4) 26337 pid('GetStack' 3 pos('./sp/Error.oz' 442 2) nil 5) <Q: 313> nil)
		testLiteral(x(0) unit 26237)
		getLiteral(nil x(2))
		return
lbl(26237)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26331)
		allocateL4
lbl(26246)	definition(x(3) 26264 pid('' 2 pos('./sp/Error.oz' 446 21) nil 4) unit nil)
		putConstant(toplevel x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(26246)
lbl(26264)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 26299 26320)
		getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('On toplevel')
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(26299)	getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('CallStack: ')
		unifyVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 312> 7)
lbl(26320)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(446)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(26331)	getLiteral(nil x(2))
		return
		endDefinition(26223)
lbl(26337)	definition(x(4) 26485 pid('ErrorTitle' 2 pos('./sp/Error.oz' 488 2) nil 6) <Q: 314> [g(7) g(8)])
		allocateL5
		putConstant(kind x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(4) unit 26367)
lbl(26362)	getLiteral('' y(1))
		branch(26377)
lbl(26367)	getRecord('#' 3 y(1))
		unifyLiteral(' ')
		unifyValue(x(4))
		unifyLiteral(' ')
lbl(26377)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		move(g(0) x(0))
		move(y(2) x(1))
		inlineMinus(x(0) x(1) x(2))
		move(g(1) x(1))
		inlineMinus(x(2) x(1) x(3))
		putConstant(2 x(4))
		callBI('div' [x(3) x(4)]#[x(5)])
		inlinePlus1(x(3) x(2))
		putConstant(2 x(3))
		callBI('div' [x(2) x(3)]#[x(4)])
		move(x(4) y(2))
		move(x(5) x(0))
		putConstant(42 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 289> 6)
		move(y(2) x(0))
		putConstant(42 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 289> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		move(y(4) x(3))
		putConstant('%***' x(0))
		putConstant('\n' x(4))
		sendMsg('#' y(0) 5 cache)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL5
		tailCall(x(1) 1)
		endDefinition(26337)
lbl(26485)	definition(x(4) 26544 pid('ErrorMsgLine' 2 pos('./sp/Error.oz' 503 2) nil 5) <Q: 315> nil)
		putConstant(msg x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26505)
lbl(26504)	return
lbl(26505)	allocateL2
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		move(y(1) x(0))
		call(y(0) 1)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(26485)
lbl(26544)	definition(x(4) 26572 pid('ErrorItems' 2 pos('./sp/Error.oz' 512 2) nil 5) <Q: 316> nil)
		putConstant(items x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26564)
lbl(26563)	return
lbl(26564)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26544)
lbl(26572)	definition(x(4) 26628 pid('ErrorLoc' 2 pos('./sp/Error.oz' 521 2) nil 5) <Q: 317> [g(9)])
		putConstant(loc x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26592)
lbl(26591)	return
lbl(26592)	allocateL3
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 311> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26572)
lbl(26628)	definition(x(4) 26713 pid('ErrorStack' 2 pos('./sp/Error.oz' 532 2) nil 5) <Q: 318> [x(1) g(9)])
		putConstant(stack x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26648)
lbl(26647)	return
lbl(26648)	allocateL3
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(y(2) x(0))
		inlineDot(x(0) 'thread' x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 313> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26628)
lbl(26713)	definition(x(4) 26755 pid('ErrorFooter' 2 pos('./sp/Error.oz' 544 2) nil 5) <Q: 319> [g(10)])
		putConstant(footer x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testBool(x(4) 26741 26742)
		move(x(0) x(1))
		move(g(0) x(0))
		tailCall(x(1) 1)
lbl(26741)	return
lbl(26742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(26713)
lbl(26755)	definition(x(4) 26783 pid('ErrorInfo' 2 pos('./sp/Error.oz' 550 2) nil 5) <Q: 320> nil)
		putConstant(info x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26775)
lbl(26774)	return
lbl(26775)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26755)
lbl(26783)	definition(x(4) 26841 pid('ErrorMsg' 2 pos('./sp/Error.oz' 559 2) nil 2) <Q: 321> nil)
		testLiteral(x(1) none 26794)
lbl(26793)	return
lbl(26794)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26783)
lbl(26841)	definition(x(10) 26923 pid('ErrorMsgDebug' 2 pos('./sp/Error.oz' 571 2) nil 2) <Q: 322> nil)
		testLiteral(x(1) none 26852)
lbl(26851)	return
lbl(26852)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 317> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 320> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 318> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26841)
lbl(26923)	definition(x(11) 27159 pid('Format' 5 pos('./sp/Error.oz' 591 6) nil 10) <Q: 323> [g(11)])
		allocateL7
		putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(footer)
		setValue(x(9))
		putList(x(7))
		setConstant(stack)
		setValue(x(8))
		putList(x(6))
		setConstant(loc)
		setValue(x(7))
		putList(x(5))
		setConstant(items)
		setValue(x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(error y(5))
		createVariable(y(6))
		testLiteral(y(0) unit 26999)
		testLiteral(y(1) unit 26991)
		unify(y(6) x(5))
		branch(27023)
lbl(26991)	getList(y(6))
		unifyLiteral(msg)
		unifyValue(x(5))
		branch(27023)
lbl(26999)	testLiteral(y(1) unit 27011)
		getList(y(6))
		unifyLiteral(kind)
		unifyValue(x(5))
		branch(27023)
lbl(27011)	getList(y(6))
		unifyLiteral(kind)
		unifyVariable(x(6))
		getList(x(6))
		unifyLiteral(msg)
		unifyValue(x(5))
lbl(27023)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		move(y(4) x(2))
		genFastCall(<P: 110> 6)
		testLiteral(y(0) unit 27040)
		branch(27052)
lbl(27040)	move(y(4) x(0))
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(0))
lbl(27052)	move(y(1) x(0))
		putConstant(unit x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		testBool(x(2) 27090 27079)
		move(y(4) x(1))
		inlineDot(x(1) msg x(2) cache)
		unify(x(2) y(1))
		branch(27090)
lbl(27079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(608)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27090)	move(y(4) x(0))
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(2))
		inlineDot(x(0) loc x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 303> 4)
		move(y(4) x(0))
		inlineDot(x(0) stack x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 304> 4)
		putConstant(true x(2))
		move(y(4) x(0))
		inlineDot(x(0) footer x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) info x(1) cache)
		move(y(3) x(0))
		deAllocateL7
		genFastCall(<Q: 302> 5)
		endDefinition(26923)
lbl(27159)	definition(x(12) 27281 pid('FormatReRaiseExc' 3 pos('./sp/Error.oz' 619 6) nil 14) <Q: 324> nil)
		allocateL3
		getRecord(error [items loc stack title] x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('Unable to Print Error Message')
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(hint [l m] x(3))
		unifyLiteral('Initial exception')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(0))
		getList(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(hint [l m] x(6))
		unifyLiteral('Format exception Kind')
		unifyVariable(x(8))
		getList(x(7))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(hint [l m] x(9))
		unifyLiteral('Format exception')
		unifyVariable(x(11))
		getRecord(oz 1 x(11))
		unifyVariable(x(12))
		getList(x(10))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(line 1 x(13))
		unifyLiteral('Please send bug report to oz@ps.uni-sb.de')
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(8))
		move(x(0) y(2))
		move(x(1) x(0))
		move(x(12) x(1))
		genFastCall(<Q: 300> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 303> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 304> 5)
		endDefinition(27159)
lbl(27281)	definition(x(12) 27325 pid('GenericFormatter' 3 pos('./sp/Error.oz' 635 6) nil 6) <Q: 325> nil)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(line 1 x(3))
		setValue(x(4))
		putList(x(5))
		setValue(x(3))
		setConstant(nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(unit x(0))
		genFastCall(<Q: 323> 11)
		endDefinition(27281)
lbl(27325)	definition(x(13) 27619 pid('FormatOzError' 2 pos('./sp/Error.oz' 643 6) nil 5) <Q: 326> [x(3)])
		testBI('IsRecord' [x(0)]#[x(2)] 27605)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'failure' 27378)
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('failure' x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(27378)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Error: unhandled exception' y(2))
		testLiteral(x(2) error 27519)
lbl(27391)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 301> 4)
		testBool(y(3) 27496 27508)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 300> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) exists x(2) cache)
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 27473 27485)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27473)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27485)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(655)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27496)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27508)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27519)	testLiteral(x(2) system 27525)
		branch(27391)
lbl(27525)	callBI('Label' [x(0)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) exists x(4) cache)
		moveMoveXYYX(x(2) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(4) 2)
		testBool(y(4) 27582 27594)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27582)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(665)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27605)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant('Error: unhandled exception' x(0))
		genFastCall(<Q: 325> 7)
		endDefinition(27325)
lbl(27619)	definition(x(3) 27715 pid('DefExHdl' 1 pos('./sp/Error.oz' 681 2) nil 3) <Q: 327> [x(10) g(12) x(2)])
		allocateL2
		move(x(0) y(0))
		exHandler(27654)
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 324> 6)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		branch(27679)
lbl(27654)	putConstant(high x(0))
		genFastCall(<P: 262> 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 326> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		popEx
lbl(27679)	move(g(2) x(0))
		inlineDot(x(0) onToplevel x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		testBool(y(0) 27700 27702)
		deAllocateL2
		return
lbl(27700)	deAllocateL2
		failure
lbl(27702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(27619)
lbl(27715)	inlineDot(x(1) put x(2) cache)
		moveMoveXYXY(x(1) y(1) x(5) y(2))
		moveMoveXYXY(x(6) y(3) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYXY(x(4) y(7) x(10) y(8))
		moveMoveXYXY(x(11) y(9) x(12) y(10))
		move(x(13) y(11))
		move(x(3) x(1))
		putConstant('errors.handler' x(0))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('errors.handler' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		getRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] g(13))
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(g(14))
		unifyValue(y(2))
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(1))
		deAllocateL
		return
		endDefinition(24298)
lbl(27810)	tailCall(x(3) 0)
		endDefinition(24076)
lbl(27815)	putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant(exists)
		setConstant(nil)
		putList(x(3))
		setConstant(get)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(20))
		setConstant(put)
		setConstant(nil)
		putList(x(19))
		setConstant(get)
		setValue(x(20))
		putRecord(info [type] x(18))
		setValue(x(19))
		putList(x(25))
		setConstant(onToplevel)
		setConstant(nil)
		putList(x(24))
		setConstant(valueToVirtualString)
		setValue(x(25))
		putList(x(23))
		setConstant(printError)
		setValue(x(24))
		putList(x(22))
		setConstant(printName)
		setValue(x(23))
		putRecord(info [type] x(21))
		setValue(x(22))
		putRecord('import' ['ErrorRegistry' 'Property' 'System'] x(0))
		setValue(x(1))
		setValue(x(18))
		setValue(x(21))
		putRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] x(1))
		setValue(x(13))
		setValue(x(12))
		setValue(x(9))
		setValue(x(6))
		setValue(x(5))
		setValue(x(11))
		setValue(x(7))
		setValue(x(8))
		setValue(x(10))
		setValue(x(14))
		setValue(x(16))
		setValue(x(17))
		setValue(x(15))
		createVariableMove(y(224) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(28083)	definition(x(4) 28248 pid('LayoutDot' 5 pos('./sp/ErrorRegistry.oz' 33 3) nil 11) <P: 328> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('IsDet' [x(0)]#[x(5)] 28229)
lbl(28107)	testBI('IsRecord' [x(0)]#[x(5)] 28229)
lbl(28111)	callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		putConstant(5 x(1))
		testLT(x(1) x(0) x(2) 28229)
lbl(28134)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		getRecord('#' 6 x(2))
		unifyLiteral('R ')
		unifyValue(y(3))
		unifyLiteral(' ')
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(1))
		getRecord(oz 1 x(4))
		unifyValue(y(2))
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(hint [l m] x(5))
		unifyLiteral('Expected fields')
		unifyVariable(x(7))
		getRecord(list 2 x(7))
		unifyVariable(x(8))
		unifyLiteral(' ')
		getList(x(6))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(hint [l m] x(9))
		unifyLiteral('Record value')
		unifyVariable(x(10))
		getRecord(oz 1 x(10))
		unifyValue(y(0))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(8))
		deAllocateL6
		return
lbl(28229)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		genFastCall(<P: 329> 11)
		endDefinition(28083)
lbl(28248)	definition(x(4) 28305 pid('LayoutComma' 3 pos('./sp/ErrorRegistry.oz' 46 3) nil 8) <P: 330> nil)
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(hint [l m] x(2))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		getRecord('#' 2 x(4))
		unifyLiteral('C, ')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(1))
		getList(x(3))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(hint [l m] x(6))
		unifyLiteral('Class value')
		unifyVariable(x(7))
		getRecord(oz 1 x(7))
		unifyValue(x(0))
		return
		endDefinition(28248)
lbl(28305)	definition(x(4) 28364 pid('LayoutBin' 5 pos('./sp/ErrorRegistry.oz' 51 3) nil 9) <P: 329> nil)
		getList(x(4))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(5))
		getRecord('#' 7 x(5))
		unifyVariable(x(6))
		unifyLiteral(' ')
		unifyValue(x(3))
		unifyLiteral(' ')
		unifyVariable(x(7))
		unifyLiteral(' = ')
		unifyVariable(x(8))
		getRecord(oz 1 x(6))
		unifyValue(x(0))
		getRecord(oz 1 x(7))
		unifyValue(x(1))
		getRecord(oz 1 x(8))
		unifyValue(x(2))
		return
		endDefinition(28305)
lbl(28364)	definition(x(2) 34927 pid('' 2 pos('./sp/ErrorRegistry.oz' 57 3) nil 4) <P: 331> [y(128) y(151) y(191) y(192) y(208) y(209) y(1) y(148) y(149) y(156)])
		putList(x(2))
		setPredicateRef(<Q: 332>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 341>)
		setValue(x(2))
lbl(28430)	definitionCopy(x(3) 34922 pid('/body' 0 pos('./sp/ErrorRegistry.oz' 57 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) x(1)])
		allocateL9
		move(g(0) x(0))
		inlineDot(x(0) 'Error' x(2) cache)
lbl(28446)	definition(x(1) 31412 pid('KernelFormatter' 2 pos('./sp/ErrorRegistry.oz' 79 6) nil 20) <Q: 332> [x(2) g(1) g(2) g(3) g(4) g(5) g(6)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) kernel 6 29282)
lbl(28478)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) type 29282)
		putRecord('#' 2 y(2))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		move(x(5) y(8))
		testRecord(y(2) '#' 2 28592)
lbl(28519)	getVarVar(x(0) x(6))
		shallowGuard(28592)
		getLiteral('.' x(0))
		getList(x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(28545)	shallowThen
		move(x(6) x(1))
		move(x(8) x(2))
		putConstant('.' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(28592)	testRecord(y(2) '#' 2 28667)
lbl(28597)	getVarVar(x(0) x(1))
		shallowGuard(28667)
		getLiteral('^' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28623)	shallowThen
		move(x(3) x(2))
		putConstant('^' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(28667)	testRecord(y(2) '#' 2 28733)
lbl(28672)	getVarVar(x(0) x(1))
		shallowGuard(28733)
		getLiteral(',' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28692)	shallowThen
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 330> 6)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(28733)	testRecord(y(2) '#' 2 28864)
lbl(28738)	getVarVar(x(0) x(1))
		shallowGuard(28864)
		getLiteral('+1' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28758)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' + 1 = ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(9))
		setValue(x(0))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord('#' 4 x(8))
		setConstant('1 + ')
		setValue(x(9))
		setConstant(' = ')
		setValue(x(10))
		putRecord(hint [l m] x(7))
		setConstant('Possible origin')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(y(2))
		setValue(x(1))
		setValue(x(6))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(28864)	testRecord(y(2) '#' 2 28959)
lbl(28869)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(28959)
		getLiteral(fdTellConstraint x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28891)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' :: ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putList(y(6))
		setValue(x(1))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(28959)	putList(x(8))
		setConstant('\\=')
		setConstant(nil)
		putList(x(7))
		setConstant('>=')
		setValue(x(8))
		putList(x(6))
		setConstant('=<')
		setValue(x(7))
		putList(x(5))
		setConstant('>')
		setValue(x(6))
		putList(x(4))
		setConstant('<')
		setValue(x(5))
		putList(x(3))
		setConstant('/')
		setValue(x(4))
		putList(x(2))
		setConstant('*')
		setValue(x(3))
		putList(x(0))
		setConstant('-')
		setValue(x(2))
		putList(x(1))
		setConstant('+')
		setValue(x(0))
		move(y(6) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 29124 29186)
		createVariable(y(9))
		testList(y(7) 29062)
lbl(29031)	getVarVar(x(0) x(1))
		shallowGuard(29062)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(29048)	shallowThen
		move(x(3) x(2))
		moveMoveYXYX(y(6) x(3) y(9) x(4))
		genFastCall(<P: 329> 10)
		branch(29093)
lbl(29062)	getList(y(9))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(29093)	move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(29124)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setVariable(x(2))
		putList(y(9))
		setValue(x(0))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29197)
lbl(29186)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(117)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(29197)	move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('type error' y(3))
		createVariable(y(7))
		testNumber(y(4) 0 29237)
lbl(29232)	unify(y(7) y(5))
		branch(29251)
lbl(29237)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(4))
lbl(29251)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29282)	testRecord(y(2) kernel 6 29455)
lbl(29287)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) instantiation 29455)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(5) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setConstant(nil)
		move(y(6) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('instantiation error' y(2))
		createVariable(y(7))
		testNumber(y(3) 0 29410)
lbl(29405)	unify(y(7) y(4))
		branch(29424)
lbl(29410)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(3))
lbl(29424)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29455)	testRecord(y(2) kernel 3 29531)
lbl(29460)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) apply 29531)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		inlineDot(x(0) formatAppl x(4) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(4) 3)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(3))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(5) y(0) x(3))
		move(y(1) x(4))
		putConstant('error in application' x(0))
		putConstant('Application of non-procedure and non-object' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29531)	testRecord(y(2) kernel 3 29594)
lbl(29536)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '.' 29594)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariable(x(2))
		putConstant('.' x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 328> 10)
		moveMoveYXYX(y(2) x(5) y(3) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: illegal field selection' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29594)	testRecord(y(2) kernel 3 29677)
lbl(29599)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) recordConstruction 29677)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Label')
		setValue(x(4))
		putRecord(list 2 x(9))
		setValue(x(2))
		setConstant(' ')
		putRecord(hint [l m] x(8))
		setConstant('Feature-field Pairs')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: duplicate fields' x(0))
		putConstant('Duplicate fields in record construction' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29677)	testRecord(y(2) kernel 3 29861)
lbl(29682)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) arity 29861)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariable(y(4))
		testBI('IsProcedure' [x(1)]#[x(0)] 29710)
		callBI('ProcedureArity' [x(1)]#[x(0)])
		unify(x(0) y(4))
		branch(29713)
lbl(29710)	getNumber(1 y(4))
lbl(29713)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(7) x(2))
		call(x(3) 3)
		putConstant('Error: illegal number of arguments' y(2))
		createVariable(y(3))
		testNumber(y(4) 1 29765)
		getLiteral('' y(3))
		branch(29768)
lbl(29765)	getLiteral(s y(3))
lbl(29768)	createVariable(y(8))
		testNumber(y(5) 1 29779)
		getLiteral('' y(8))
		branch(29782)
lbl(29779)	getLiteral(s y(8))
lbl(29782)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(7))
		putRecord('#' 3 x(4))
		setValue(y(4))
		setConstant(' argument')
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('Expected')
		setValue(x(4))
		putRecord('#' 3 x(7))
		setValue(y(5))
		setConstant(' argument')
		setValue(y(8))
		putRecord(hint [l m] x(6))
		setConstant('Found')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(2) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29861)	testRecord(y(2) kernel 2 29911)
lbl(29866)	getVarVar(x(0) x(1))
		testLiteral(x(0) noElse 29911)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29911)	testRecord(y(2) kernel 3 29986)
lbl(29916)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) noElse 29986)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Matching')
		setValue(x(8))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29986)	testRecord(y(2) kernel 2 30036)
lbl(29991)	getVarVar(x(0) x(1))
		testLiteral(x(0) boolCaseType 30036)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: boolean conditional failed' x(0))
		putConstant('Non-boolean value found' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30036)	testRecord(y(2) kernel 2 30102)
lbl(30041)	getVarVar(x(0) x(1))
		testLiteral(x(0) div0 30102)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' div 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30102)	testRecord(y(2) kernel 2 30168)
lbl(30107)	getVarVar(x(0) x(1))
		testLiteral(x(0) mod0 30168)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' mod 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30168)	testRecord(y(2) kernel 3 30272)
lbl(30173)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) dict 30272)
		callBI('Dictionary.keys' [x(1)]#[x(5)])
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Dictionary')
		setValue(x(4))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Key found')
		setValue(x(10))
		putRecord(oz 1 x(13))
		setValue(x(5))
		putRecord(hint [l m] x(12))
		setConstant('Legal keys')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(3))
		setValue(x(8))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Dictionary' x(0))
		putConstant('Key not found' x(1))
		deAllocateL10
		tailCall(x(6) 5)
lbl(30272)	testRecord(y(2) kernel 3 30377)
lbl(30277)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) array 30377)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Array.low' [x(1)]#[x(6)])
		callBI('Array.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index Found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Array' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30377)	testRecord(y(2) kernel 3 30446)
lbl(30382)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.new' 30446)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Lower bound')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Upper bound')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Illegal boundaries to BitArray.new' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30446)	testRecord(y(2) kernel 3 30551)
lbl(30451)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.index' 30551)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Bit array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30551)	testRecord(y(2) kernel 3 30692)
lbl(30556)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.binop' 30692)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		callBI('BitArray.low' [x(2)]#[x(8)])
		callBI('BitArray.high' [x(2)]#[x(9)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('First bit array')
		setValue(x(4))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('First bounds')
		setValue(x(13))
		putRecord(oz 1 x(16))
		setValue(x(2))
		putRecord(hint [l m] x(15))
		setConstant('Second bit array')
		setValue(x(16))
		putRecord('#' 3 x(19))
		setValue(x(8))
		setConstant(' - ')
		setValue(x(9))
		putRecord(hint [l m] x(18))
		setConstant('Second bounds')
		setValue(x(19))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(14))
		setValue(x(15))
		setValue(x(17))
		putList(x(11))
		setValue(x(12))
		setValue(x(14))
		putList(x(10))
		setValue(x(3))
		setValue(x(11))
		move(x(10) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Incompatible bounds in binary operation on BitArrays' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30692)	testRecord(y(2) kernel 2 30752)
lbl(30697)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoFloat 30752)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to float failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30752)	testRecord(y(2) kernel 2 30812)
lbl(30757)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoInt 30812)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to integer failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30812)	testRecord(y(2) kernel 2 30872)
lbl(30817)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoAtom 30872)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to atom failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30872)	testRecord(y(2) kernel 2 30932)
lbl(30877)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoValue 30932)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to Oz value failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30932)	testRecord(y(2) kernel 2 31035)
lbl(30937)	getVarVar(x(0) x(1))
		testLiteral(x(0) globalState 31035)
		createVariable(y(2))
		testLiteral(x(1) array 30955)
lbl(30950)	getLiteral('Assignment to global array' y(2))
		branch(31003)
lbl(30955)	testLiteral(x(1) dict 30964)
lbl(30959)	getLiteral('Assignment to global dictionary' y(2))
		branch(31003)
lbl(30964)	testLiteral(x(1) cell 30973)
lbl(30968)	getLiteral('Assignment to global cell' y(2))
		branch(31003)
lbl(30973)	testLiteral(x(1) io 30982)
lbl(30977)	getLiteral('Input/Output' y(2))
		branch(31003)
lbl(30982)	testLiteral(x(1) object 30991)
lbl(30986)	getLiteral('Assignment to global object' y(2))
		branch(31003)
lbl(30991)	testLiteral(x(1) 'lock' 31000)
lbl(30995)	getLiteral('Request of global lock' y(2))
		branch(31003)
lbl(31000)	unify(y(2) x(1))
lbl(31003)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 2 x(1))
		setValue(y(2))
		setConstant(' from local space')
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: space hierarchy' x(0))
		putConstant(nil x(2))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31035)	testRecord(y(2) kernel 2 31091)
lbl(31040)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceMerged 31091)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Space already merged' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31091)	testRecord(y(2) kernel 2 31147)
lbl(31096)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceSuper 31147)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Merge of superordinated space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31147)	testRecord(y(2) kernel 2 31203)
lbl(31152)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceParent 31203)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Current space must be parent space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31203)	testRecord(y(2) kernel 2 31259)
lbl(31208)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceNoChoice 31259)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('No choices left' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31259)	testRecord(y(2) kernel 2 31315)
lbl(31264)	getVarVar(x(0) x(1))
		testLiteral(x(0) portClosed 31315)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Port')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Port' x(0))
		putConstant('Port already closed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31315)	testRecord(y(2) kernel 1 31331)
lbl(31320)	getVariable(x(0))
		testLiteral(x(0) terminate 31331)
		getLiteral(none y(1))
		deAllocateL10
		return
lbl(31331)	testRecord(y(2) kernel 2 31389)
lbl(31336)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) block 31389)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Thread')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Thread' x(0))
		putConstant('Purely sequential thread blocked' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31389)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('Kernel' x(0))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(28446)
lbl(31412)	definition(x(3) 32504 pid('ObjectFormatter' 2 pos('./sp/ErrorRegistry.oz' 470 6) nil 16) <Q: 333> [x(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in object system' y(3))
		testRecord(y(2) object 4 31565)
lbl(31447)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) '<-' 31565)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(oz 1 x(9))
		setValue(x(3))
		putRecord('#' 3 x(4))
		setValue(x(8))
		setConstant(' <- ')
		setValue(x(9))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(4))
		putRecord(oz 1 x(12))
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Attribute does not exist')
		setValue(x(12))
		putRecord(list 2 x(15))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(14))
		setConstant('Expected Attribute(s)')
		setValue(x(15))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(13))
		putList(x(7))
		setValue(x(1))
		setValue(x(10))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31565)	testRecord(y(2) object 3 31681)
lbl(31570)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '@' 31681)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(4))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setConstant('@')
		setValue(x(4))
		setConstant(' = _')
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Attribute does not exist')
		setValue(x(10))
		putRecord(list 2 x(13))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(12))
		setConstant('Expected attribute(s)')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31681)	testRecord(y(2) object 5 31785)
lbl(31686)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		testLiteral(x(0) sharing 31785)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(8))
		setValue(x(1))
		setConstant(' and ')
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Classes')
		setValue(x(8))
		putRecord('#' 2 x(11))
		setConstant('Shared ')
		setValue(x(3))
		putRecord(oz 1 x(13))
		setValue(x(4))
		putRecord('#' 2 x(12))
		setValue(x(13))
		setConstant(' (is not redefined)')
		putRecord(hint [l m] x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes not ordered by inheritance' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31785)	testRecord(y(2) object 2 31949)
lbl(31790)	getVarVar(x(0) x(1))
		shallowGuard(31949)
		getLiteral(order x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31812)	shallowThen
lbl(31813)	definition(x(0) 31832 pid('Rel' 3 pos('./sp/ErrorRegistry.oz' 498 5) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' < ')
		unifyValue(x(1))
		return
		endDefinition(31813)
lbl(31832)	move(g(0) x(4))
		inlineDot(x(4) format x(5) cache)
		moveMoveXYXY(x(1) y(2) x(0) y(4))
		move(x(5) y(5))
		move(x(2) x(0))
		move(x(3) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
lbl(31861)	definition(x(1) 31909 pid('' 2 pos('./sp/ErrorRegistry.oz' 503 16) nil 5) unit [y(4)])
		shallowGuard(31896)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31877)	shallowThen
		getRecord(hint [m] x(1))
		unifyVariable(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		tailCall(g(0) 3)
lbl(31896)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(31861)
lbl(31909)	move(y(2) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		putRecord(hint [l m] x(0))
		setConstant('Relation found')
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(y(4))
		moveMoveYXYX(y(5) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes cannot be ordered' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31949)	testRecord(y(2) object 3 32045)
lbl(31954)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) lookup 32045)
		putRecord(oz 1 x(0))
		setValue(x(1))
		putRecord(hint [l m] y(2))
		setConstant('Class')
		setValue(x(0))
		putRecord(oz 1 x(0))
		setValue(x(2))
		putRecord(hint [l m] y(4))
		setConstant('Message')
		setValue(x(0))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('Method undefined and no otherwise method given' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method lookup in message sending' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32045)	testRecord(y(2) object 3 32129)
lbl(32050)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) final 32129)
		putRecord(hint [l m] y(2))
		setConstant('Final class used as parent')
		setValue(x(1))
		putRecord(hint [l m] y(4))
		setConstant('Class to be created')
		setValue(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('remove prop final from parent class or change inheritance relation' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Inheritance from final class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32129)	testRecord(y(2) object 3 32204)
lbl(32134)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) inheritanceFromNonClass 32204)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Non-class used as parent')
		setValue(x(4))
		putRecord(hint [l m] x(8))
		setConstant('Class to be created')
		setValue(x(2))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Inheritance from non-class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32204)	testRecord(y(2) object 2 32260)
lbl(32209)	getVarVar(x(0) x(1))
		testLiteral(x(0) arityMismatchDefaultMethod 32260)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Unexpected feature')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Arity mismatch for method with defaults' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32260)	testRecord(y(2) object 1 32307)
lbl(32265)	getVariable(x(0))
		testLiteral(x(0) slaveNotFree 32307)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is not free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method becomeSlave' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32307)	testRecord(y(2) object 1 32354)
lbl(32312)	getVariable(x(0))
		testLiteral(x(0) slaveAlreadyFree 32354)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is already free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method free' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32354)	testRecord(y(2) object 2 32410)
lbl(32359)	getVarVar(x(0) x(1))
		testLiteral(x(0) locking 32410)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Object')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Attempt to lock unlockable object' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32410)	testRecord(y(2) object 3 32481)
lbl(32415)	getVarVar(x(0) x(1))
		getVariable(x(2))
		createVariable(y(2))
		testLiteral(x(0) fromFinalClass 32481)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Final class')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Operation')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Final class not allowed' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32481)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(31412)
lbl(32504)	definition(x(4) 33277 pid('FailureFormatter' 2 pos('./sp/ErrorRegistry.oz' 574 6) nil 12) <Q: 334> [x(2)])
		allocateL8
		move(g(0) x(2))
		inlineDot(x(2) info x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testLiteral(y(2) unit 32556)
lbl(32535)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('failure' x(0))
		deAllocateL8
		tailCall(x(3) 3)
lbl(32556)	testLiteral(y(2) 'fail' 32598)
lbl(32560)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setConstant('fail')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32598)	testRecord(y(2) apply 2 33075)
lbl(32603)	getVarVar(x(0) x(1))
		move(g(0) x(2))
		inlineDot(x(2) format x(3) cache)
		putRecord('#' 2 y(2))
		setValue(x(0))
		setValue(x(1))
		putConstant('failure' y(3))
		move(x(3) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(0) y(6) x(1) y(7))
		testRecord(y(2) '#' 2 32702)
lbl(32641)	getVarVar(x(4) x(5))
		shallowGuard(32702)
		getLiteral('^' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(32661)	shallowThen
		getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Tell')
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyVariable(x(5))
		unifyLiteral(' ^ ')
		unifyVariable(x(7))
		unifyLiteral(' = _')
		getRecord(oz 1 x(5))
		unifyValue(x(4))
		getRecord(oz 1 x(7))
		unifyValue(x(6))
		branch(33055)
lbl(32702)	testRecord(y(2) '#' 2 32766)
lbl(32707)	getVarVar(x(0) x(1))
		shallowGuard(32766)
		getLiteral('=' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32727)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' = ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(33055)
lbl(32766)	testRecord(y(2) '#' 2 32830)
lbl(32771)	getVarVar(x(0) x(1))
		shallowGuard(32830)
		getLiteral(fdPutList x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32791)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' :: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(33055)
lbl(32830)	testRecord(y(2) '#' 2 32894)
lbl(32835)	getVarVar(x(0) x(1))
		shallowGuard(32894)
		getLiteral(fdPutGe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32855)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' >: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(33055)
lbl(32894)	testRecord(y(2) '#' 2 32958)
lbl(32899)	getVarVar(x(0) x(1))
		shallowGuard(32958)
		getLiteral(fdPutLe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32919)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' <: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(33055)
lbl(32958)	testRecord(y(2) '#' 2 33024)
lbl(32963)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(33024)
		getLiteral(fdPutNot x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32985)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' \\=: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(33055)
lbl(33024)	getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(33055)	moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(33075)	testRecord(y(2) eq 2 33143)
lbl(33080)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33143)	testRecord(y(2) tell 2 33231)
lbl(33148)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putRecord(oz 1 x(11))
		setValue(x(5))
		putRecord(hint [l m] x(10))
		setConstant('Store')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(9))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33231)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(1))
		setConstant('??? ')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
		endDefinition(32504)
lbl(33277)	definition(x(5) 33447 pid('RecordCFormatter' 2 pos('./sp/ErrorRegistry.oz' 645 6) nil 7) <Q: 335> [x(2)])
		allocateL9
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: records' y(3))
		testRecord(y(2) record 5 33424)
lbl(33312)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) width 33424)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(x(5) y(6))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(7) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(3))
		setConstant('Statement')
		setValue(y(7))
		putList(x(1))
		setValue(x(3))
		setValue(y(8))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL9
		tailCall(x(5) 5)
lbl(33424)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL9
		tailCall(x(3) 3)
		endDefinition(33277)
lbl(33447)	definition(x(6) 34183 pid('SystemFormatter' 2 pos('./sp/ErrorRegistry.oz' 670 6) nil 11) <Q: 336> [x(2)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('system error' y(3))
		testRecord(y(2) system 2 33533)
lbl(33482)	getVarVar(x(0) x(1))
		testLiteral(x(0) parameter 33533)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Illegal system parameter ')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33533)	testRecord(y(2) system 2 33583)
lbl(33538)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitInternal 33583)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Internal System Limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33583)	testRecord(y(2) system 2 33633)
lbl(33588)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitExternal 33633)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('External system limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33633)	testRecord(y(2) system 2 33683)
lbl(33638)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackInstalledTwice 33683)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure installed twice')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33683)	testRecord(y(2) system 2 33733)
lbl(33688)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackNotInstalled 33733)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure not installed')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33733)	testRecord(y(2) system 2 33783)
lbl(33738)	getVarVar(x(0) x(1))
		testLiteral(x(0) builtinUndefined 33783)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Requested')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Undefined builtin' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33783)	testRecord(y(2) system 4 33867)
lbl(33788)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) builtinArity 33867)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in Oz-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33867)	testRecord(y(2) system 4 33951)
lbl(33872)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) inconsistentArity 33951)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in emulator-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33951)	testRecord(y(2) system 1 34010)
lbl(33956)	getVariable(x(0))
		testLiteral(x(0) inconsistentFastcall 34010)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Inconsistency in optimized application')
		putRecord(hint [l] x(4))
		setConstant('Maybe due to previous toplevel failure')
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal inconsistency' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34010)	testRecord(y(2) system 1 34048)
lbl(34015)	getVariable(x(0))
		testLiteral(x(0) onceOnlyFunctor 34048)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Procedure definition with flag `once\' executed more than once' x(1))
		putConstant(nil x(2))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34048)	testRecord(y(2) system 2 34108)
lbl(34053)	getVarVar(x(0) x(1))
		testLiteral(x(0) fatal 34108)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(line 1 x(3))
		setValue(x(1))
		putRecord(line 1 x(6))
		setConstant('Please send bug report to oz@ps.uni-sb.de')
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Fatal exception' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34108)	testRecord(y(2) system 2 34160)
lbl(34113)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) reinstallFormatter 34160)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Exception name already in use')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Registration of error formatter failed' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34160)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(33447)
lbl(34183)	definition(x(7) 34400 pid('OSFormatter' 2 pos('./sp/ErrorRegistry.oz' 796 6) nil 11) <Q: 337> [x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) os 4 34377)
lbl(34215)	getVarVar(x(0) x(5))
		getVarVar(x(6) x(7))
		match(x(0) ht(34356 [onScalar(os 34224) onScalar(host 34290)]))
lbl(34224)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Operating system error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34290)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Network Error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34356)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(34377)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(34183)
lbl(34400)	definition(x(8) 34727 pid('DPFormatter' 2 pos('./sp/ErrorRegistry.oz' 834 6) nil 6) <Q: 338> [x(2)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: distributed programming' y(3))
		testRecord(y(2) dp 3 34534)
lbl(34435)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) generic 34534)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
lbl(34453)	definition(x(4) 34497 pid('' 2 pos('./sp/ErrorRegistry.oz' 843 17) nil 4) unit nil)
		shallowGuard(34484)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(34469)	shallowThen
		getRecord(hint [l m] x(1))
		unifyValVar(x(2) x(0))
		getRecord(oz 1 x(0))
		unifyValue(x(3))
		return
lbl(34484)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(843)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34453)
lbl(34497)	moveMoveXYXY(x(1) y(2) x(3) y(3))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(5) y(2) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34534)	testRecord(y(2) dp 1 34590)
lbl(34539)	getVariable(x(0))
		shallowGuard(34590)
		getRecord(connection 2 x(0))
		unifyLiteral(illegalTicket)
		unifyVariable(x(1))
lbl(34551)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal ticket for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34590)	testRecord(y(2) dp 1 34646)
lbl(34595)	getVariable(x(0))
		shallowGuard(34646)
		getRecord(connection 2 x(0))
		unifyLiteral(refusedTicket)
		unifyVariable(x(1))
lbl(34607)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34646)	testRecord(y(2) dp 1 34704)
lbl(34651)	getVariable(x(0))
		createVariable(y(2))
		shallowGuard(34704)
		getRecord(connection 2 x(0))
		unifyLiteral(ticketToDeadSite)
		unifyVariable(x(1))
lbl(34665)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused: refers to dead site' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34704)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(34400)
lbl(34727)	callBI('NewDictionary' nil#[x(2)])
lbl(34730)	definition(x(9) 34789 pid('NewFormatter' 2 pos('./sp/ErrorRegistry.oz' 874 6) nil 3) <Q: 339> [g(7) g(8) x(2)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 341> 4)
		testBool(y(2) 34763 34776)
		putRecord(system 2 x(0))
		setConstant(reinstallFormatter)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(34763)	move(g(2) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(34776)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(876)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34730)
lbl(34789)	definition(x(10) 34807 pid('GetFormatter' 2 pos('./sp/ErrorRegistry.oz' 886 6) nil 4) <Q: 340> [g(9) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34789)
lbl(34807)	definition(x(11) 34825 pid('ExFormatter' 2 pos('./sp/ErrorRegistry.oz' 892 6) nil 4) <Q: 341> [g(10) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34807)
lbl(34825)	moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) y(8))
		putConstant(kernel x(0))
		genFastCall(<Q: 339> 4)
		move(y(0) x(1))
		putConstant(object x(0))
		genFastCall(<Q: 339> 4)
		move(y(1) x(1))
		putConstant('failure' x(0))
		genFastCall(<Q: 339> 4)
		move(y(2) x(1))
		putConstant(recordC x(0))
		genFastCall(<Q: 339> 4)
		move(y(3) x(1))
		putConstant(system x(0))
		genFastCall(<Q: 339> 4)
		move(y(5) x(1))
		putConstant(dp x(0))
		genFastCall(<Q: 339> 4)
		move(y(4) x(1))
		putConstant(os x(0))
		genFastCall(<Q: 339> 4)
		getRecord('export' [exists get put] g(11))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(6))
		deAllocateL9
		return
		endDefinition(28430)
lbl(34922)	tailCall(x(3) 0)
		endDefinition(28364)
lbl(34927)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(12))
		setConstant(info)
		setConstant(nil)
		putList(x(11))
		setConstant(dispatch)
		setValue(x(12))
		putList(x(10))
		setConstant(format)
		setValue(x(11))
		putList(x(9))
		setConstant(formatHint)
		setValue(x(10))
		putList(x(8))
		setConstant(formatTypes)
		setValue(x(9))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(8))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord('import' ['Error'] x(0))
		setValue(x(1))
		putRecord('export' [exists get put] x(1))
		setValue(x(7))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(191) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		createVariable(x(4))
lbl(35035)	definition(x(0) 35121 pid('VectorToType' 2 pos('./cp/FD.oz' 33 3) nil 3) <P: 342> [y(1) x(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 35062 35108)
		getLiteral(list y(1))
		deAllocateL3
		return
lbl(35062)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 35074)
		getLiteral(tuple y(1))
		deAllocateL3
		return
lbl(35074)	testBI('IsRecord' [x(0)]#[x(1)] 35083)
		getLiteral(record y(1))
		deAllocateL3
		return
lbl(35083)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setValue(g(1))
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('Vector as input argument expected.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(35108)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(35035)
lbl(35121)	unify(x(0) x(4))
lbl(35124)	definition(x(4) 35162 pid('VectorToList' 2 pos('./cp/FD.oz' 44 3) nil 2) <P: 343> [y(165)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) list 35151)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(35151)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
		endDefinition(35124)
lbl(35162)	definition(x(5) 35193 pid('VectorsToLists' 2 pos('./cp/FD.oz' 50 3) nil 3) <P: 344> [x(4)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(35162)
lbl(35193)	definition(x(4) 35242 pid('RecordToTuple' 4 pos('./cp/FD.oz' 55 6) nil 6) <P: 345> nil)
		match(x(0) ht(35227 [onScalar(nil 35202) onRecord('|' 2 35203)]))
lbl(35202)	return
lbl(35203)	getVarVar(x(0) x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(5))
		inlinePlus1(x(1) x(5))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 345> 9)
lbl(35227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(58)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35193)
lbl(35242)	definition(x(4) 35328 pid('VectorToTuple' 2 pos('./cp/FD.oz' 61 6) nil 5) <P: 346> [y(145)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(35313 [onScalar(list 35263) onScalar(tuple 35275) onScalar(record 35280)]))
lbl(35263)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL3
		genFastCall(<P: 77> 7)
lbl(35275)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(35280)	move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		unify(x(2) y(1))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(1 x(1))
		deAllocateL3
		genFastCall(<P: 345> 9)
lbl(35313)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(67)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(35242)
lbl(35328)	definition(x(4) 35369 pid('CloneList' 2 pos('./cp/FD.oz' 71 3) nil 2) <P: 347> nil)
		match(x(0) ht(35354 [onScalar(nil 35337) onRecord('|' 2 35341)]))
lbl(35337)	getLiteral(nil x(1))
		return
lbl(35341)	getVoid(1)
		getVariable(x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		genFastCall(<P: 347> 5)
lbl(35354)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(74)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35328)
lbl(35369)	definition(x(5) 35399 pid('ExpandPair' 4 pos('./cp/FD.oz' 78 6) nil 5) <P: 348> nil)
		testLE(x(0) x(1) x(4) 35393)
		getListValVar(x(3) x(0) x(3))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 348> 9)
lbl(35393)	unify(x(3) x(2))
		return
		endDefinition(35369)
lbl(35399)	definition(x(5) 35475 pid('Expand' 2 pos('./cp/FD.oz' 82 6) nil 4) <P: 349> nil)
		match(x(0) ht(35460 [onScalar(nil 35408) onRecord('|' 2 35412)]))
lbl(35408)	getLiteral(nil x(1))
		return
lbl(35412)	getVarVar(x(0) x(2))
		testRecord(x(0) '#' 2 35450)
lbl(35420)	allocateL4
		getVarVar(y(0) y(1))
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 349> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 348> 9)
lbl(35450)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 349> 5)
lbl(35460)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(88)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35399)
lbl(35475)	putRecord(fwdRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(5))
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord(negRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(6))
		setConstant('>=:')
		setConstant('\\=:')
		setConstant('>:')
		setConstant('=<:')
		setConstant('<:')
		setConstant('=:')
lbl(35507)	definition(x(7) 35519 pid('WaitStable' 0 pos('./cp/FD.oz' 110 3) nil 0) <P: 350> nil)
		createChoice
lbl(35514)	lastClause
		emptyClause
lbl(35516)	return
		endDefinition(35507)
lbl(35519)	putList(x(8))
		setConstant('>=:')
		setConstant(nil)
		putList(x(3))
		setConstant('>:')
		setValue(x(8))
		putList(x(2))
		setConstant('=<:')
		setValue(x(3))
		putList(x(1))
		setConstant('<:')
		setValue(x(2))
		putList(x(0))
		setConstant('\\=:')
		setValue(x(1))
		putList(x(7))
		setConstant('=:')
		setValue(x(0))
		putList(x(1))
		setConstant(nil)
		setConstant(nil)
		putList(x(0))
		setConstant('FD.atLeast')
		setValue(x(1))
		putList(x(3))
		setConstant(nil)
		setConstant(nil)
		putList(x(2))
		setConstant('FD.atMost')
		setValue(x(3))
		putList(x(10))
		setConstant(nil)
		setConstant(nil)
		putList(x(9))
		setConstant('FD.reified.card')
		setValue(x(10))
		putList(x(12))
		setConstant(nil)
		setConstant(nil)
		putList(x(11))
		setConstant('FD.conj')
		setValue(x(12))
		putList(x(14))
		setConstant(nil)
		setConstant(nil)
		putList(x(13))
		setConstant('FD.disj')
		setValue(x(14))
		putList(x(16))
		setConstant(nil)
		setConstant(nil)
		putList(x(15))
		setConstant('FD.disjoint')
		setValue(x(16))
		putList(x(18))
		setConstant(nil)
		setConstant(nil)
		putList(x(17))
		setConstant('FD.disjointC')
		setValue(x(18))
		putList(x(20))
		setConstant(nil)
		setConstant(nil)
		putList(x(19))
		setConstant('FD.distance')
		setValue(x(20))
		putList(x(22))
		setConstant(nil)
		setConstant(nil)
		putList(x(21))
		setConstant('FD.distinct')
		setValue(x(22))
		putList(x(24))
		setConstant(nil)
		setConstant(nil)
		putList(x(23))
		setConstant('FD.distinctOffset')
		setValue(x(24))
		putList(x(26))
		setConstant(nil)
		setConstant(nil)
		putList(x(25))
		setConstant('FD.divD')
		setValue(x(26))
		putList(x(28))
		setConstant(nil)
		setConstant(nil)
		putList(x(27))
		setConstant('FD.divI')
		setValue(x(28))
		putList(x(30))
		setConstant(nil)
		setConstant(nil)
		putList(x(29))
		setConstant('FD.element')
		setValue(x(30))
		putList(x(32))
		setConstant(nil)
		setConstant(nil)
		putList(x(31))
		setConstant('FD.equi')
		setValue(x(32))
		putList(x(34))
		setConstant(nil)
		setConstant(nil)
		putList(x(33))
		setConstant('FD.exactly')
		setValue(x(34))
		putList(x(36))
		setConstant(nil)
		setConstant(nil)
		putList(x(35))
		setConstant('FD.exor')
		setValue(x(36))
		putList(x(39))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(38))
		setValue(x(39))
		setConstant(nil)
		putList(x(37))
		setConstant(fdConstrDisj)
		setValue(x(38))
		putList(x(42))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(41))
		setValue(x(42))
		setConstant(nil)
		putList(x(40))
		setConstant(fdConstrDisjSetUp)
		setValue(x(41))
		putList(x(44))
		setConstant(nil)
		setConstant(nil)
		putList(x(43))
		setConstant('FD.reflect.size')
		setValue(x(44))
		putList(x(47))
		setConstant('FD.reflect.domList')
		setConstant(nil)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant('FD.reflect.dom')
		setValue(x(46))
		putList(x(49))
		setConstant(nil)
		setConstant(nil)
		putList(x(48))
		setConstant('FD.reflect.max')
		setValue(x(49))
		putList(x(51))
		setConstant(nil)
		setConstant(nil)
		putList(x(50))
		setConstant('FD.reflect.mid')
		setValue(x(51))
		putList(x(53))
		setConstant(nil)
		setConstant(nil)
		putList(x(52))
		setConstant('FD.reflect.min')
		setValue(x(53))
		putList(x(55))
		setConstant(nil)
		setConstant(nil)
		putList(x(54))
		setConstant('FD.reflect.nextLarger')
		setValue(x(55))
		putList(x(57))
		setConstant(nil)
		setConstant(nil)
		putList(x(56))
		setConstant('FD.reflect.nextSmaller')
		setValue(x(57))
		putList(x(59))
		setConstant(nil)
		setConstant(nil)
		putList(x(58))
		setConstant('FD.watch.max')
		setValue(x(59))
		putList(x(61))
		setConstant(nil)
		setConstant(nil)
		putList(x(60))
		setConstant('FD.watch.min')
		setValue(x(61))
		putList(x(63))
		setConstant(nil)
		setConstant(nil)
		putList(x(62))
		setConstant('FD.watch.size')
		setValue(x(63))
		putList(x(65))
		setConstant(nil)
		setConstant(nil)
		putList(x(64))
		setConstant('FD.impl')
		setValue(x(65))
		putList(x(68))
		setConstant('FD.reified.dom')
		setConstant(nil)
		putList(x(67))
		setValue(x(68))
		setConstant(nil)
		putList(x(66))
		setConstant('FD.refied.int')
		setValue(x(67))
		putList(x(70))
		setConstant(nil)
		setConstant(nil)
		putList(x(69))
		setConstant('FD.inter')
		setValue(x(70))
		putList(x(84))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(83))
		setConstant('FD.disjointC')
		setValue(x(84))
		putList(x(82))
		setConstant('FD.disjoint')
		setValue(x(83))
		putList(x(81))
		setConstant('FD.modI')
		setValue(x(82))
		putList(x(80))
		setConstant('FD.modD')
		setValue(x(81))
		putList(x(79))
		setConstant('FD.max')
		setValue(x(80))
		putList(x(78))
		setConstant('FD.min')
		setValue(x(79))
		putList(x(77))
		setConstant('>:')
		setValue(x(78))
		putList(x(76))
		setConstant('>=:')
		setValue(x(77))
		putList(x(75))
		setConstant('<:')
		setValue(x(76))
		putList(x(74))
		setConstant('=<:')
		setValue(x(75))
		putList(x(73))
		setConstant('FD.sumC')
		setValue(x(74))
		putList(x(72))
		setValue(x(73))
		setConstant(nil)
		putList(x(71))
		setConstant('FD.lesseq')
		setValue(x(72))
		putList(x(86))
		setConstant(nil)
		setConstant(nil)
		putList(x(85))
		setConstant('FD.max')
		setValue(x(86))
		putList(x(88))
		setConstant(nil)
		setConstant(nil)
		putList(x(87))
		setConstant('FD.min')
		setValue(x(88))
		putList(x(90))
		setConstant(nil)
		setConstant(nil)
		putList(x(89))
		setConstant('FD.minus')
		setValue(x(90))
		putList(x(92))
		setConstant(nil)
		setConstant(nil)
		putList(x(91))
		setConstant('FD.modD')
		setValue(x(92))
		putList(x(94))
		setConstant(nil)
		setConstant(nil)
		putList(x(93))
		setConstant('FD.modI')
		setValue(x(94))
		putList(x(99))
		setConstant('FD.equi')
		setConstant(nil)
		putList(x(98))
		setConstant('FD.impl')
		setValue(x(99))
		putList(x(97))
		setConstant('FD.exor')
		setValue(x(98))
		putList(x(96))
		setValue(x(97))
		setConstant(nil)
		putList(x(95))
		setConstant('FD.nega')
		setValue(x(96))
		putList(x(103))
		setConstant('\\=:')
		setConstant(nil)
		putList(x(102))
		setConstant('FD.sumC')
		setValue(x(103))
		putList(x(101))
		setValue(x(102))
		setConstant(nil)
		putList(x(100))
		setConstant(notEqOff)
		setValue(x(101))
		putList(x(106))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(105))
		setValue(x(106))
		setConstant(nil)
		putList(x(104))
		setConstant('FD.plus')
		setValue(x(105))
		putList(x(110))
		setConstant('+')
		setConstant(nil)
		putList(x(109))
		setConstant('FD.distance')
		setValue(x(110))
		putList(x(108))
		setValue(x(109))
		setConstant(nil)
		putList(x(107))
		setConstant('FD.plus')
		setValue(x(108))
		putList(x(112))
		setConstant(nil)
		setConstant(nil)
		putList(x(111))
		setConstant('FD.schedule.serialized')
		setValue(x(112))
		putList(x(114))
		setConstant(nil)
		setConstant(nil)
		putList(x(113))
		setConstant('FD.schedule.disjoint')
		setValue(x(114))
		putList(x(116))
		setConstant(nil)
		setConstant(nil)
		putList(x(115))
		setConstant('FD.schedule.serializedDisj')
		setValue(x(116))
		putList(x(119))
		setConstant('FD.times')
		setConstant(nil)
		putList(x(118))
		setValue(x(119))
		setConstant(nil)
		putList(x(117))
		setConstant(square)
		setValue(x(118))
		putList(x(123))
		setConstant('FD.inter')
		setConstant(nil)
		putList(x(122))
		setConstant('FD.union')
		setValue(x(123))
		putList(x(121))
		setValue(x(122))
		setConstant(nil)
		putList(x(120))
		setConstant(subset)
		setValue(x(121))
		putList(x(125))
		setConstant(nil)
		setConstant(nil)
		putList(x(124))
		setConstant('FD.sumAC')
		setValue(x(125))
		putList(x(129))
		setConstant('FD.reified.sumC')
		setValue(x(7))
		putList(x(128))
		setConstant('FD.sumCN')
		setValue(x(129))
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant('FD.sumC')
		setValue(x(127))
		putList(x(132))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(131))
		setValue(x(132))
		setConstant(nil)
		putList(x(130))
		setConstant(sumCCD)
		setValue(x(131))
		putList(x(135))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(134))
		setValue(x(135))
		setConstant(nil)
		putList(x(133))
		setConstant(sumCD)
		setValue(x(134))
		putList(x(137))
		setValue(x(7))
		setConstant(nil)
		putList(x(136))
		setConstant('FD.sumCN')
		setValue(x(137))
		putList(x(140))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(139))
		setValue(x(140))
		setConstant(nil)
		putList(x(138))
		setConstant(sumCNCD)
		setValue(x(139))
		putList(x(142))
		setValue(x(7))
		setConstant(nil)
		putList(x(141))
		setConstant('FD.reified.sumC')
		setValue(x(142))
		putList(x(144))
		setConstant(nil)
		setConstant(nil)
		putList(x(143))
		setConstant('FD.times')
		setValue(x(144))
		putList(x(148))
		setConstant('*')
		setConstant(nil)
		putList(x(147))
		setConstant('FD.distance')
		setValue(x(148))
		putList(x(146))
		setValue(x(147))
		setConstant(nil)
		putList(x(145))
		setConstant('FD.plus')
		setValue(x(146))
		putList(x(152))
		setConstant('FD.minus')
		setConstant(nil)
		putList(x(151))
		setConstant('FD.plus')
		setValue(x(152))
		putList(x(150))
		setValue(x(151))
		setConstant(nil)
		putList(x(149))
		setConstant(twice)
		setValue(x(150))
		putList(x(154))
		setConstant(nil)
		setConstant(nil)
		putList(x(153))
		setConstant('FD.union')
		setValue(x(154))
		putRecord(bi [atLeast atMost card conj disj disjoint disjointC distance distinct distinctOffset divD divI element equi exactly exor fdConstrDisj fdConstrDisjSetUp fdGetCard fdGetDom fdGetMax fdGetMid fdGetMin fdGetNextLarger fdGetNextSmaller fdWatchMax fdWatchMin fdWatchSize impl intR inter lessEqOff maximum minimum minus modD modI nega notEqOff plus plus_rel sched_cpIterate sched_disjoint_card sched_disjunctive square subset sumAC sumC sumCCD sumCD sumCN sumCNCD sumCR times times_rel twice union] x(8))
		setValue(x(0))
		setValue(x(2))
		setValue(x(9))
		setValue(x(11))
		setValue(x(13))
		setValue(x(15))
		setValue(x(17))
		setValue(x(19))
		setValue(x(21))
		setValue(x(23))
		setValue(x(25))
		setValue(x(27))
		setValue(x(29))
		setValue(x(31))
		setValue(x(33))
		setValue(x(35))
		setValue(x(37))
		setValue(x(40))
		setValue(x(43))
		setValue(x(45))
		setValue(x(48))
		setValue(x(50))
		setValue(x(52))
		setValue(x(54))
		setValue(x(56))
		setValue(x(58))
		setValue(x(60))
		setValue(x(62))
		setValue(x(64))
		setValue(x(66))
		setValue(x(69))
		setValue(x(71))
		setValue(x(85))
		setValue(x(87))
		setValue(x(89))
		setValue(x(91))
		setValue(x(93))
		setValue(x(95))
		setValue(x(100))
		setValue(x(104))
		setValue(x(107))
		setValue(x(111))
		setValue(x(113))
		setValue(x(115))
		setValue(x(117))
		setValue(x(120))
		setValue(x(124))
		setValue(x(126))
		setValue(x(130))
		setValue(x(133))
		setValue(x(136))
		setValue(x(138))
		setValue(x(141))
		setValue(x(143))
		setValue(x(145))
		setValue(x(149))
		setValue(x(153))
lbl(36573)	definition(x(7) 36617 pid('BIPrintName' 2 pos('./cp/FD.oz' 190 6) nil 4) <P: 351> [x(8)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsAtom' [x(0)]#[x(2)] 36610)
lbl(36589)	move(g(0) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 36610)
lbl(36596)	callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 1 x(0) cache)
		unify(x(0) y(1))
		deAllocateL2
		return
lbl(36610)	unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(36573)
lbl(36617)	definition(x(7) 36647 pid('BIOrigin' 2 pos('./cp/FD.oz' 197 6) nil 4) <P: 352> [x(8)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 2 x(0) cache)
		inlineDot(x(0) 1 x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(36617)
lbl(36647)	definition(x(7) 36755 pid('FormatOrigin' 2 pos('./cp/FD.oz' 203 6) nil 7) <P: 353> [x(8)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 351> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 36686)
lbl(36673)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 352> 4)
		testLiteral(y(2) nil 36691)
lbl(36686)	getLiteral(nil y(0))
		deAllocateL3
		return
lbl(36691)	getList(y(0))
		unifyLiteral(unit)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(hint [l m] x(1))
		unifyLiteral('Possible origin of procedure')
		unifyVariable(x(3))
		getRecord(oz 1 x(3))
		unifyVariable(x(4))
		getList(x(2))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(line 1 x(5))
		unifyVariable(x(6))
		getRecord(oz 1 x(6))
		unifyVariable(y(0))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 351> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 352> 5)
		endDefinition(36647)
lbl(36755)	definition(x(2) 42255 pid('' 2 pos('./cp/FD.oz' 218 3) nil 4) <P: 354> [y(91) x(5) x(4) y(108) y(1) x(6) y(163) y(92) y(157)])
		putList(x(2))
		setPredicateRef(<Q: 355>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 356>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 357>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 358>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 359>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 360>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 361>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 362>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 363>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 364>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 365>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 366>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 367>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 368>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 369>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 370>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 371>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 372>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 373>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 374>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 375>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 376>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 377>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 378>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 379>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 380>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 381>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ForceClone>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 391>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 392>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 393>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 394>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 395>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 403>)
		setValue(x(2))
lbl(37061)	definitionCopy(x(3) 42250 pid('/body' 0 pos('./cp/FD.oz' 218 3) [once] 54) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(53)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(1) cache)
		inlineDot(x(0) 'FDP' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Error' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(2) plus x(6) cache)
		inlineDot(x(2) minus x(7) cache)
		inlineDot(x(2) times x(8) cache)
		inlineDot(x(2) power x(9) cache)
		inlineDot(x(2) divD x(10) cache)
		inlineDot(x(2) divI x(11) cache)
		inlineDot(x(2) modD x(12) cache)
		inlineDot(x(2) modI x(13) cache)
		inlineDot(x(2) conj x(14) cache)
		inlineDot(x(2) disj x(15) cache)
		inlineDot(x(2) exor x(16) cache)
		inlineDot(x(2) impl x(17) cache)
		inlineDot(x(2) nega x(18) cache)
		inlineDot(x(2) equi x(19) cache)
		inlineDot(x(2) intR x(20) cache)
		inlineDot(x(2) card x(21) cache)
		inlineDot(x(2) exactly x(22) cache)
		inlineDot(x(2) atLeast x(23) cache)
		inlineDot(x(2) atMost x(24) cache)
		inlineDot(x(2) element x(25) cache)
		inlineDot(x(2) lessEqOff x(26) cache)
		inlineDot(x(2) minimum x(27) cache)
		inlineDot(x(2) maximum x(28) cache)
		inlineDot(x(2) distinct x(29) cache)
		inlineDot(x(2) distinct2 x(30) cache)
		inlineDot(x(2) distinctD x(31) cache)
		inlineDot(x(2) distinctOffset x(32) cache)
		inlineDot(x(2) disjoint x(33) cache)
		inlineDot(x(2) disjointC x(34) cache)
		inlineDot(x(2) distance x(35) cache)
		inlineDot(x(2) sum x(36) cache)
		inlineDot(x(2) sumC x(37) cache)
		inlineDot(x(2) dsum x(38) cache)
		inlineDot(x(2) dsumC x(39) cache)
		inlineDot(x(2) sumAC x(40) cache)
		inlineDot(x(2) sumCN x(41) cache)
		inlineDot(x(2) sumR x(42) cache)
		inlineDot(x(2) sumCR x(43) cache)
		inlineDot(x(2) sumCNR x(44) cache)
		inlineDot(x(2) sumCD x(45) cache)
		inlineDot(x(2) sumCCD x(46) cache)
		inlineDot(x(2) sumCNCD x(47) cache)
		inlineDot(x(2) selVarMin x(48) cache)
		inlineDot(x(2) selVarMax x(49) cache)
		inlineDot(x(2) selVarSize x(50) cache)
		inlineDot(x(2) selVarNaive x(51) cache)
		inlineDot(x(2) selVarNbSusps x(2) cache)
		inlineDot(x(1) tellConstraint x(52) cache)
lbl(37390)	definition(x(53) 37434 pid('ListDom' 2 pos('./cp/FD.oz' 373 2) nil 2) <Q: 355> [x(52)])
		match(x(0) ht(37419 [onScalar(nil 37399) onRecord('|' 2 37400)]))
lbl(37399)	return
lbl(37400)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 355> 5)
lbl(37419)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37390)
lbl(37434)	definition(x(53) 37490 pid('TupleDom' 3 pos('./cp/FD.oz' 379 2) nil 5) <Q: 356> [x(52)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37487)
		allocateL3
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37487)	return
		endDefinition(37434)
lbl(37490)	definition(x(53) 37548 pid('RecordDom' 3 pos('./cp/FD.oz' 385 2) nil 4) <Q: 357> [x(52)])
		match(x(0) ht(37533 [onScalar(nil 37499) onRecord('|' 2 37500)]))
lbl(37499)	return
lbl(37500)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(388)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37490)
lbl(37548)	inlineDot(x(1) getLimits x(53) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		moveMoveXYXY(x(8) y(6) x(9) y(7))
		moveMoveXYXY(x(10) y(8) x(11) y(9))
		moveMoveXYXY(x(12) y(10) x(13) y(11))
		moveMoveXYXY(x(14) y(12) x(15) y(13))
		moveMoveXYXY(x(16) y(14) x(17) y(15))
		moveMoveXYXY(x(18) y(16) x(19) y(17))
		moveMoveXYXY(x(20) y(18) x(21) y(19))
		moveMoveXYXY(x(22) y(20) x(23) y(21))
		moveMoveXYXY(x(24) y(22) x(25) y(23))
		moveMoveXYXY(x(26) y(24) x(27) y(25))
		moveMoveXYXY(x(28) y(26) x(29) y(27))
		moveMoveXYXY(x(30) y(28) x(31) y(29))
		moveMoveXYXY(x(32) y(30) x(33) y(31))
		moveMoveXYXY(x(34) y(32) x(35) y(33))
		moveMoveXYXY(x(36) y(34) x(37) y(35))
		moveMoveXYXY(x(38) y(36) x(39) y(37))
		moveMoveXYXY(x(40) y(38) x(41) y(39))
		moveMoveXYXY(x(42) y(40) x(43) y(41))
		moveMoveXYXY(x(44) y(42) x(45) y(43))
		moveMoveXYXY(x(46) y(44) x(47) y(45))
		moveMoveXYXY(x(48) y(46) x(49) y(47))
		moveMoveXYXY(x(50) y(48) x(51) y(49))
		moveMoveXYXY(x(2) y(50) x(52) y(51))
		createVariable(x(0))
		createVariableMove(y(52) x(1))
		call(x(53) 2)
lbl(37692)	definition(x(0) 37712 pid('FdInt' 2 pos('./cp/FD.oz' 393 2) nil 2) <Q: 358> [y(51)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37692)
lbl(37712)	putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
lbl(37726)	definition(x(1) 37740 pid('FdBool' 1 pos('./cp/FD.oz' 400 5) nil 2) <Q: 359> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37726)
lbl(37740)	putRecord('#' 2 x(3))
		setConstant(0)
		setValue(y(52))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
lbl(37754)	definition(x(3) 37768 pid('FdDecl' 1 pos('./cp/FD.oz' 408 5) nil 2) <Q: 360> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37754)
lbl(37768)	definition(x(2) 37852 pid('FdDom' 2 pos('./cp/FD.oz' 413 2) nil 4) <Q: 361> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(37837 [onScalar(list 37792) onScalar(tuple 37801) onScalar(record 37819)]))
lbl(37792)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 355> 5)
lbl(37801)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37819)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37837)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(418)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(37768)
lbl(37852)	definition(x(4) 37908 pid('FdList' 3 pos('./cp/FD.oz' 421 2) nil 5) <Q: 362> [y(51)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37902)
		allocateL3
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) x(0))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 362> 7)
lbl(37902)	getLiteral(nil x(2))
		return
		endDefinition(37852)
lbl(37908)	definition(x(5) 37931 pid('FdTuple' 4 pos('./cp/FD.oz' 427 2) nil 5) <Q: 363> nil)
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 356> 7)
		endDefinition(37908)
lbl(37931)	definition(x(6) 37965 pid('FdRecord' 4 pos('./cp/FD.oz' 431 2) nil 4) <Q: 364> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
		endDefinition(37931)
lbl(37965)	move(y(0) x(7))
		inlineDot(x(7) is x(8) cache)
		inlineDot(x(7) getDom x(9) cache)
		putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] y(51))
		setValue(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		inlineDot(x(7) getMin x(18) cache)
		unify(x(18) x(13))
		inlineDot(x(7) getMid x(18) cache)
		unify(x(18) x(12))
		inlineDot(x(7) getMax x(18) cache)
		unify(x(18) x(11))
		inlineDot(x(7) getNextLarger x(18) cache)
		unify(x(18) x(15))
		inlineDot(x(7) getNextSmaller x(15) cache)
		unify(x(15) x(16))
		inlineDot(x(7) getCard x(15) cache)
		unify(x(15) x(17))
		move(y(3) x(15))
		inlineDot(x(15) nbSusps x(16) cache)
		unify(x(16) x(14))
lbl(38068)	definition(x(15) 38095 pid('FdReflect.domList' 2 pos('./cp/FD.oz' 453 23) nil 2) <Q: 365> [x(9)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 349> 5)
		endDefinition(38068)
lbl(38095)	unify(x(15) x(10))
		inlineDot(x(7) tellConstraintCD x(9) cache)
lbl(38104)	definition(x(10) 38153 pid('ListDomCD' 3 pos('./cp/FD.oz' 468 2) nil 3) <Q: 366> [x(9)])
		match(x(0) ht(38138 [onScalar(nil 38113) onRecord('|' 2 38114)]))
lbl(38113)	return
lbl(38114)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 366> 7)
lbl(38138)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(471)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(38104)
lbl(38153)	definition(x(10) 38216 pid('TupleDomCD' 4 pos('./cp/FD.oz' 474 2) nil 6) <Q: 367> [x(9)])
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 38213)
		allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38213)	return
		endDefinition(38153)
lbl(38216)	definition(x(10) 38281 pid('RecordDomCD' 4 pos('./cp/FD.oz' 480 2) nil 5) <Q: 368> [x(9)])
		match(x(0) ht(38266 [onScalar(nil 38225) onRecord('|' 2 38226)]))
lbl(38225)	return
lbl(38226)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38266)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(483)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(38216)
lbl(38281)	definition(x(10) 38301 pid('FdIntCD' 3 pos('./cp/FD.oz' 486 2) nil 3) <Q: 369> [x(9)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38281)
lbl(38301)	definition(x(9) 38396 pid('FdDomCD' 3 pos('./cp/FD.oz' 490 2) nil 5) <Q: 370> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 342> 4)
		match(y(3) ht(38381 [onScalar(list 38327) onScalar(tuple 38339) onScalar(record 38360)]))
lbl(38327)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 366> 7)
lbl(38339)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38360)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38381)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(495)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(38301)
lbl(38396)	putRecord(cd ['body' dom header int sum sumC sumCN] y(3))
		setVariable(x(15))
		setValue(x(9))
		setVariable(x(16))
		setValue(x(10))
		setValue(y(43))
		setValue(y(44))
		setValue(y(45))
		inlineDot(x(7) constrDisjSetUp x(9) cache)
		unify(x(9) x(16))
		inlineDot(x(7) constrDisj x(9) cache)
		unify(x(9) x(15))
lbl(38432)	definition(x(9) 38727 pid('GenSumACN' 4 pos('./cp/FD.oz' 515 6) nil 5) <Q: 371> [g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		thread(38723)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 38522 38712)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(2) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(2) false '' true 4) 0)
lbl(38522)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(8))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(11))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(4))
		setVariable(y(11))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(2))
		call(g(5) 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(8) x(3))
		move(y(4) x(4))
		call(g(6) 5)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(11) x(4))
		call(g(6) 5)
		putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(11))
		putRecord('#' 2 x(2))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(1))
		deAllocateL
		tailCall(g(7) 3)
lbl(38712)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(38723)	deAllocateL
		return
		endDefinition(38432)
lbl(38727)	definition(x(10) 38767 pid('FdIntR' 3 pos('./cp/FD.oz' 545 2) nil 3) <Q: 372> [y(18)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 359> 2)
		move(y(1) x(0))
		genFastCall(<Q: 360> 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38727)
lbl(38767)	definition(x(18) 38806 pid('GenSumR' 4 pos('./cp/FD.oz' 549 2) nil 4) <Q: 373> [y(40)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genCall(gci(g(0) false '' true 4) 0)
		endDefinition(38767)
lbl(38806)	definition(x(19) 38850 pid('GenSumCR' 5 pos('./cp/FD.oz' 553 2) nil 5) <Q: 374> [y(41)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38806)
lbl(38850)	definition(x(20) 38894 pid('GenSumCNR' 5 pos('./cp/FD.oz' 557 2) nil 5) <Q: 375> [y(42)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38850)
lbl(38894)	definition(x(21) 38957 pid('MapIntR' 4 pos('./cp/FD.oz' 562 5) nil 6) <Q: 376> nil)
		testNumber(x(0) 0 38905)
		return
lbl(38905)	allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<Q: 372> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 376> 9)
		endDefinition(38894)
lbl(38957)	definition(x(21) 39030 pid('FdDomR' 3 pos('./cp/FD.oz' 568 5) nil 5) <Q: 377> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		thread(39026)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		move(y(3) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		moveMoveXYXY(x(1) y(1) x(2) y(4))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(3))
		genFastCall(<Q: 376> 8)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		putConstant('=:' x(1))
		deAllocateL5
		genFastCall(<Q: 373> 9)
lbl(39026)	deAllocateL5
		return
		endDefinition(38957)
lbl(39030)	definition(x(22) 39240 pid('Card' 4 pos('./cp/FD.oz' 580 2) nil 5) <Q: 378> [x(8) y(52) y(19) g(5)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		thread(39236)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39146 39225)
lbl(39068)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39146 39225)
lbl(39081)	move(y(1) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 39126)
		createOr
lbl(39089)	nextClause(39101)
		clause
		getNumber(1 y(3))
		getNumber(0 y(0))
		waitTop
lbl(39099)	deAllocateL6
		return
lbl(39101)	lastClause
		clause
		thread(39123)
		getNumber(0 y(3))
		putRecord('#' 2 x(0))
		setConstant(1)
		setValue(g(1))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 358> 5)
lbl(39123)	waitTop
lbl(39124)	deAllocateL6
		return
lbl(39126)	createVariableMove(y(4) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(2) false '' true 4) 0)
lbl(39146)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createVariable(y(5))
		testBool(y(4) 39166 39171)
		getNumber(3 y(5))
		branch(39182)
lbl(39166)	getNumber(1 y(5))
		branch(39182)
lbl(39171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39182)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('FD.reified.card')
		setValue(x(1))
		setConstant(fd)
		setValue(y(5))
		setConstant('Cardinality limits must be finite domain.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39225)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(583)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39236)	deAllocateL6
		return
		endDefinition(39030)
lbl(39240)	definition(x(23) 39631 pid('GenSumACR' 5 pos('./cp/FD.oz' 603 2) nil 5) <Q: 379> [g(6) g(7) g(1) g(2) y(35) g(8) x(16) y(44) x(15)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39627)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 161> 6)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39411 39616)
		createOr
lbl(39324)	nextClause(39362)
		clause
		thread(39359)
		getNumber(1 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39359)	waitTop
lbl(39360)	deAllocateL
		return
lbl(39362)	nextClause(39387)
		clause
		thread(39384)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39384)	waitTop
lbl(39385)	deAllocateL
		return
lbl(39387)	lastClause
		clause
		thread(39408)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39408)	waitTop
lbl(39409)	deAllocateL
		return
lbl(39411)	createOr
lbl(39412)	nextClause(39579)
		clause
		thread(39576)
		move(y(7) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(2)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(4)])
		putRecord(v 1 x(3))
		setVariable(y(1))
		moveMoveXYXY(x(2) y(8) x(4) y(9))
		move(x(3) x(0))
		move(y(8) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setVariable(y(11))
		move(y(9) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setValue(y(3))
		move(y(7) x(1))
		createVariableMove(y(13) x(2))
		genFastCall(<P: 14> 6)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(2))
		call(g(6) 4)
		moveMoveYXYX(y(6) x(0) y(8) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(11) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39576)	waitTop
lbl(39577)	deAllocateL
		return
lbl(39579)	lastClause
		clause
		thread(39613)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39613)	waitTop
lbl(39614)	deAllocateL
		return
lbl(39616)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(611)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39627)	deAllocateL
		return
		endDefinition(39240)
lbl(39631)	definition(x(24) 40074 pid('GenSumACNR' 5 pos('./cp/FD.oz' 642 2) nil 5) <Q: 380> [g(6) g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(17)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(40070)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(2) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39802 40059)
		createOr
lbl(39715)	nextClause(39753)
		clause
		thread(39750)
		getNumber(1 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39750)	waitTop
lbl(39751)	deAllocateL
		return
lbl(39753)	nextClause(39778)
		clause
		thread(39775)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39775)	waitTop
lbl(39776)	deAllocateL
		return
lbl(39778)	lastClause
		clause
		thread(39799)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39799)	waitTop
lbl(39800)	deAllocateL
		return
lbl(39802)	createOr
lbl(39803)	nextClause(40022)
		clause
		thread(40019)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(7) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(8) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(12))
		setValue(y(11))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(13))
		createVariableMove(y(13) x(1))
		genFastCall(<P: 346> 4)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(2))
		call(g(6) 4)
		move(y(7) x(0))
		createVariableMove(y(16) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(1) x(0) y(16) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(12) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(40019)	waitTop
lbl(40020)	deAllocateL
		return
lbl(40022)	lastClause
		clause
		thread(40056)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(40056)	waitTop
lbl(40057)	deAllocateL
		return
lbl(40059)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(650)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(40070)	deAllocateL
		return
		endDefinition(39631)
lbl(40074)	definition(x(15) 40115 pid('DistanceR' 5 pos('./cp/FD.oz' 681 2) nil 8) <Q: 381> nil)
		putList(x(6))
		setConstant(~1)
		setConstant(nil)
		putList(x(5))
		setConstant(1)
		setValue(x(6))
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		putList(x(6))
		setValue(x(0))
		setValue(x(7))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 379> 11)
		endDefinition(40074)
lbl(40115)	putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] y(18))
		setValue(x(22))
		setValue(x(15))
		setValue(x(21))
		setValue(x(10))
		setValue(x(18))
		setValue(x(23))
		setValue(x(24))
		setValue(x(19))
		setValue(x(20))
lbl(40137)	definition(x(10) 40249 pid('MakeDistrTuple' 2 pos('./cp/FD.oz' 708 5) nil 4) <Q: 382> [g(9) x(8) g(5)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) tuple 40173)
		move(y(0) x(0))
		putConstant(<M: ForceClone> x(3))
		callBI('Adjoin' [x(0) x(3)]#[x(1)])
		unify(x(1) y(1))
		branch(40181)
lbl(40173)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<P: 346> 4)
lbl(40181)	move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 165> 6)
		testBool(y(2) 40199 40236)
		deAllocateL3
		return
lbl(40199)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(list 1 x(3))
		setConstant(fd)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('MakeDistrTuple')
		setValue(x(1))
		setValue(x(3))
		setConstant(1)
		setConstant('Distribution vector must contain finite domains.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40236)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40137)
lbl(40249)	putRecord(map [max mid min splitMax splitMin] x(10))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		unify(x(18) x(13))
		unify(x(15) x(11))
		unify(x(16) x(12))
lbl(40272)	definition(x(15) 40291 pid('SelVal.splitMin' 2 pos('./cp/FD.oz' 726 14) nil 2) <Q: 383> [x(12)])
		getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyVariable(x(1))
		tailCall(g(0) 2)
		endDefinition(40272)
lbl(40291)	unify(x(15) x(20))
lbl(40294)	definition(x(15) 40328 pid('SelVal.splitMax' 2 pos('./cp/FD.oz' 729 14) nil 2) <Q: 384> [y(52) x(12)])
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(g(0))
		createVariableMove(y(1) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(40294)
lbl(40328)	unify(x(15) x(19))
		putRecord(map [max min naive nbSusps size] x(12))
		setValue(y(47))
		setValue(y(46))
		setValue(y(49))
		setValue(y(50))
		setValue(y(48))
		putRecord(map [max min naive nbSusps size] x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		setVariable(x(21))
lbl(40359)	definition(x(22) 40371 pid('GenSelVar.naive' 3 pos('./cp/FD.oz' 741 30) nil 3) <Q: 385> nil)
		getLiteral(false x(2))
		return
		endDefinition(40359)
lbl(40371)	unify(x(22) x(19))
lbl(40374)	definition(x(19) 40416 pid('GenSelVar.size' 3 pos('./cp/FD.oz' 744 16) nil 3) <Q: 386> [x(17)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40374)
lbl(40416)	unify(x(19) x(21))
lbl(40419)	definition(x(19) 40506 pid('GenSelVar.nbSusps' 3 pos('./cp/FD.oz' 747 16) nil 3) <Q: 387> [x(14) x(17)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testLT(x(1) x(0) x(2) 40464)
		getLiteral(true y(2))
		deAllocateL5
		return
lbl(40464)	testBI('==' [x(0) x(1)]#[x(2)] 40499)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL5
		return
lbl(40499)	getLiteral(false y(2))
		deAllocateL5
		return
		endDefinition(40419)
lbl(40506)	unify(x(19) x(20))
lbl(40509)	definition(x(14) 40551 pid('GenSelVar.min' 3 pos('./cp/FD.oz' 755 16) nil 3) <Q: 388> [x(13)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40509)
lbl(40551)	unify(x(14) x(18))
lbl(40554)	definition(x(13) 40596 pid('GenSelVar.max' 3 pos('./cp/FD.oz' 758 16) nil 3) <Q: 389> [x(11)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40554)
lbl(40596)	unify(x(13) x(16))
		putRecord(map [undet] x(11))
		setVariable(x(13))
lbl(40605)	definition(x(14) 40637 pid('GenSelFil.undet' 2 pos('./cp/FD.oz' 762 29) nil 3) <Q: 390> [x(17)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(40605)
lbl(40637)	unify(x(14) x(13))
		putRecord(map [noProc] x(13))
		setVariable(x(14))
lbl(40646)	definition(x(16) 40655 pid('GenSelPro.noProc' 0 pos('./cp/FD.oz' 766 29) nil 0) <Q: 391> nil)
		return
		endDefinition(40646)
lbl(40655)	unify(x(16) x(14))
		putRecord(map [id] x(14))
		setVariable(x(16))
lbl(40664)	definition(x(17) 40676 pid('GenSelSel.id' 2 pos('./cp/FD.oz' 770 29) nil 2) <Q: 392> nil)
		unify(x(1) x(0))
		return
		endDefinition(40664)
lbl(40676)	unify(x(17) x(16))
lbl(40679)	definition(x(16) 40702 pid('MapSelect' 3 pos('./cp/FD.oz' 774 5) nil 4) <Q: 393> nil)
		testBI('IsAtom' [x(1)]#[x(3)] 40696)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(40696)	unify(x(2) x(1))
		return
		endDefinition(40679)
lbl(40702)	definition(x(16) 40973 pid('PreProcessSpec' 2 pos('./cp/FD.oz' 780 5) nil 6) <Q: 394> [x(12) x(10) x(15) x(14) x(11) x(13)])
		allocateL5
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(40738 [onScalar(naive 40717) onScalar(ff 40725) onScalar(split 40730)]))
lbl(40717)	getRecord(generic [order] y(1))
		unifyLiteral(naive)
		branch(40741)
lbl(40725)	getLiteral(generic y(1))
		branch(40741)
lbl(40730)	getRecord(generic [value] y(1))
		unifyLiteral(splitMin)
		branch(40741)
lbl(40738)	unify(y(1) x(0))
lbl(40741)	putRecord(generic [filter order procedure select value] x(0))
		setConstant(undet)
		setConstant(size)
		setConstant(noProc)
		setConstant(id)
		setConstant(min)
		move(y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(2))
		testRecord(y(1) generic [filter order procedure select value] 40808)
lbl(40771)	getVarVar(x(0) x(1))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(40808)
		getLiteral(undet x(0))
		getLiteral(noProc x(3))
		getLiteral(id x(4))
lbl(40790)	shallowThen
		testBI('IsAtom' [x(1)]#[x(0)] 40803)
		callBI('IsAtom' [x(5)]#[x(0)])
		unify(x(0) y(2))
		branch(40811)
lbl(40803)	getLiteral(false y(2))
		branch(40811)
lbl(40808)	getLiteral(false y(2))
lbl(40811)	testBool(y(2) 40858 40960)
		getRecord(opt [order value] y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(1) x(2))
		inlineDot(x(2) order x(3) cache)
		move(g(0) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		unify(x(5) x(0))
		inlineDot(x(2) value x(0) cache)
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		deAllocateL5
		return
lbl(40858)	getRecord(gen [filter order procedure select value] y(0))
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		move(y(1) x(0))
		inlineDot(x(0) order x(1) cache)
		move(g(2) x(0))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(1) x(0))
		move(y(4) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) select x(1) cache)
		move(g(3) x(0))
		move(y(3) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) filter x(1) cache)
		move(g(4) x(0))
		move(y(0) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		move(g(5) x(0))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 393> 7)
lbl(40960)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(800)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40702)
lbl(40973)	definition(x(10) 41062 pid('Choose' 4 pos('./cp/FD.oz' 813 2) nil 4) <Q: 395> nil)
		match(x(0) ht(41047 [onScalar(nil 40982) onRecord('|' 2 40986)]))
lbl(40982)	unify(x(3) x(1))
		return
lbl(40986)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		createVariable(y(6))
		testBool(y(5) 41017 41022)
		unify(y(6) y(0))
		branch(41033)
lbl(41017)	unify(y(6) y(2))
		branch(41033)
lbl(41022)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41033)	moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 395> 9)
lbl(41047)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(816)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(40973)
lbl(41062)	definition(x(10) 41348 pid('FdDistribute' 2 pos('./cp/FD.oz' 821 2) nil 7) <Q: 396> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 350> 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 394> 4)
		match(y(2) ht(41333 [onRecord(opt [order value] 41089) onRecord(gen [filter order procedure select value] 41188)]))
lbl(41089)	getVarVar(y(0) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 382> 4)
		createVariable(x(0))
lbl(41103)	definition(x(1) 41165 pid('Do' 0 pos('./cp/FD.oz' 826 8) nil 2) unit [y(0) y(3) y(2) x(0)])
		allocateL2
		move(g(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		call(g(2) 2)
		createChoice
lbl(41129)	nextClause(41142)
		emptyClause
lbl(41132)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 358> 4)
		branch(41156)
lbl(41142)	lastClause
		emptyClause
lbl(41144)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		genFastCall(<Q: 358> 4)
lbl(41156)	genFastCall(<P: 350> 0)
		deAllocateL2
		tailCall(g(3) 0)
		endDefinition(41103)
lbl(41165)	unify(x(1) x(0))
		move(x(0) y(0))
		exHandler(41182)
		testNumber(x(0) ~1 41179)
lbl(41177)	deAllocateL4
		return
lbl(41179)	callBI('Exception.raise' [x(0)]#nil)
lbl(41182)	call(y(0) 0)
		popEx
		deAllocateL4
		return
lbl(41188)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		getVariable(x(6))
		createVariable(y(0))
lbl(41198)	definition(x(0) 41312 pid('Do' 1 pos('./cp/FD.oz' 844 8) nil 4) unit [x(2) x(3) x(5) x(6) x(4) y(0)])
		allocateL3
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(0) nil 41220)
lbl(41218)	deAllocateL3
		return
lbl(41220)	testList(y(0) 41297)
lbl(41223)	getVarVar(x(1) x(0))
		move(g(1) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 395> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(2) 2)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(g(3) 2)
		call(g(4) 0)
		genFastCall(<P: 350> 0)
		createChoice
lbl(41260)	nextClause(41273)
		emptyClause
lbl(41263)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 358> 4)
		branch(41287)
lbl(41273)	lastClause
		emptyClause
lbl(41275)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(2) x(1))
		genFastCall(<Q: 358> 4)
lbl(41287)	genFastCall(<P: 350> 0)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(5) 1)
lbl(41297)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(854)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(41198)
lbl(41312)	unify(x(0) y(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(0) x(1) y(2) x(0))
		deAllocateL4
		tailCall(x(1) 1)
lbl(41333)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(858)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(41062)
lbl(41348)	definition(x(11) 41562 pid('FdChoose' 4 pos('./cp/FD.oz' 862 2) nil 5) <Q: 397> [g(5)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		genFastCall(<P: 350> 0)
		exHandler(41418)
		testNumber(x(0) ~1 41415)
lbl(41374)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fd 5 x(0))
		setConstant(noChoice)
		setConstant('FD.choose')
		setValue(x(1))
		setConstant(2)
		setConstant('Vector must contain non-determined elements.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41415)	callBI('Exception.raise' [x(0)]#nil)
lbl(41418)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 394> 4)
		match(y(4) ht(41544 [onRecord(opt [order value] 41430) onRecord(gen [filter order procedure select value] 41460)]))
lbl(41430)	getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 382> 4)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		call(y(4) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(5) 2)
		branch(41557)
lbl(41460)	getVarVar(y(4) y(5))
		getVoid(1)
		getVarVar(y(6) y(7))
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(8) x(0) y(4) x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(9) nil 41498)
lbl(41492)	putConstant(~1 x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(41498)	testList(y(9) 41531)
lbl(41501)	getVarVar(x(1) x(0))
		move(y(5) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 395> 8)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(6) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(7) 2)
		branch(41557)
lbl(41531)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(880)
		setValue(y(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41544)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(881)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41557)	popEx
		deAllocateL10
		return
		endDefinition(41348)
lbl(41562)	putRecord(watch [max min size] y(19))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		inlineDot(x(7) watchSize x(15) cache)
		unify(x(15) x(14))
		inlineDot(x(7) watchMin x(14) cache)
		unify(x(14) x(13))
		inlineDot(x(7) watchMax x(13) cache)
		unify(x(13) x(12))
lbl(41599)	definition(x(7) 41613 pid('FdLess' 2 pos('./cp/FD.oz' 904 6) nil 3) <Q: 398> [y(24)])
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41599)
lbl(41613)	definition(x(12) 41636 pid('FdGreater' 2 pos('./cp/FD.oz' 907 6) nil 3) <Q: 399> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41613)
lbl(41636)	definition(x(13) 41650 pid('FdLesseq' 2 pos('./cp/FD.oz' 910 6) nil 3) <Q: 400> [y(24)])
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41636)
lbl(41650)	definition(x(14) 41673 pid('FdGreatereq' 2 pos('./cp/FD.oz' 913 6) nil 3) <Q: 401> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41650)
lbl(41673)	definition(x(15) 41717 pid('FdDisjointC' 5 pos('./cp/FD.oz' 916 6) nil 5) <Q: 402> [y(32)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(41673)
lbl(41717)	move(y(1) x(16))
		inlineDot(x(16) put x(16) cache)
lbl(41726)	definition(x(17) 42087 pid('' 2 pos('./cp/FD.oz' 929 7) nil 8) <Q: 403> [y(2)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in finite domain system' y(3))
		testRecord(y(2) fd 6 41925)
lbl(41761)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) scheduling 41925)
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		inlineDot(x(0) formatTypes x(7) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYXY(x(5) y(6) x(6) y(7))
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		call(x(7) 2)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(9))
		putList(x(1))
		setValue(x(0))
		setValue(y(6))
		move(y(8) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putList(x(2))
		setValue(x(0))
		setValue(y(2))
		moveMoveYXYX(y(7) x(5) y(4) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41925)	testRecord(y(2) fd 5 42064)
lbl(41930)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) noChoice 42064)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		move(y(4) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		call(x(6) 3)
		move(y(4) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(y(8))
		putList(x(1))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(7) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(42064)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(41726)
lbl(42087)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(3) y(2) x(2) y(24))
		moveMoveXYXY(x(4) y(32) x(5) y(40))
		moveMoveXYXY(x(6) y(41) x(8) y(42))
		moveMoveXYXY(x(9) y(43) x(10) y(44))
		moveMoveXYXY(x(11) y(45) x(7) y(46))
		moveMoveXYXY(x(12) y(47) x(13) y(48))
		moveMoveXYXY(x(14) y(49) x(15) y(50))
		move(x(17) x(1))
		putConstant(fd x(0))
		call(x(16) 2)
		getRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] g(10))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(1))
		unifyValue(y(3))
		unifyValue(y(45))
		unifyValue(y(12))
		unifyValue(y(2))
		unifyValue(y(13))
		unifyValue(y(31))
		unifyValue(y(50))
		unifyValue(y(33))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(44))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(24))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(20))
		unifyValue(y(14))
		unifyValue(y(47))
		unifyValue(y(49))
		unifyValue(y(15))
		unifyValue(y(0))
		unifyValue(y(42))
		unifyValue(y(46))
		unifyValue(y(48))
		unifyValue(y(32))
		unifyValue(y(26))
		unifyValue(y(25))
		unifyValue(y(5))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(16))
		unifyValue(y(4))
		unifyValue(y(7))
		unifyValue(y(41))
		unifyValue(y(51))
		unifyValue(y(18))
		unifyValue(y(34))
		unifyValue(y(38))
		unifyValue(y(43))
		unifyValue(y(35))
		unifyValue(y(37))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(6))
		unifyValue(y(40))
		unifyValue(y(19))
		deAllocateL
		return
		endDefinition(37061)
lbl(42250)	tailCall(x(3) 0)
		endDefinition(36755)
lbl(42255)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/1')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/1')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] x(4))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord(record 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putRecord(watch [max min size] x(4))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putRecord(record 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(21))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(22))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(23))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(24))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(25))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(26))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(27))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(39))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(40))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(41))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(42))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(43))
		setValue(x(4))
		putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] x(4))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		putRecord(record 1 x(35))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(39))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(40))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(41))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(42))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(43))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(44))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(45))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(46))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(47))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(48))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(49))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(50))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(51))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(52))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(53))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(54))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(55))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(56))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(57))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(58))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(59))
		setValue(x(4))
		putRecord(cd ['body' dom header int sum sumC sumCN] x(4))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		putRecord(record 1 x(53))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(54))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(55))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(56))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(57))
		setValue(x(4))
		putList(x(61))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(60))
		setConstant(format)
		setValue(x(61))
		putList(x(59))
		setConstant(formatHint)
		setValue(x(60))
		putList(x(58))
		setConstant(formatTypes)
		setValue(x(59))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(58))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(63))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(62))
		setValue(x(63))
		putRecord(info ['from' type] x(64))
		setConstant('x-oz://boot/FDB')
		setConstant(nil)
		putRecord(info ['from' type] x(65))
		setConstant('x-oz://boot/FDP')
		setConstant(nil)
		putList(x(67))
		setConstant(nbSusps)
		setConstant(nil)
		putRecord(info [type] x(66))
		setValue(x(67))
		putRecord('import' ['Error' 'ErrorRegistry' 'FDB' 'FDP' 'System'] x(0))
		setValue(x(1))
		setValue(x(62))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		putRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] x(1))
		setValue(x(26))
		setValue(x(25))
		setValue(x(6))
		setValue(x(53))
		setValue(x(55))
		setValue(x(29))
		setValue(x(8))
		setValue(x(30))
		setValue(x(52))
		setValue(x(51))
		setValue(x(46))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(54))
		setValue(x(41))
		setValue(x(40))
		setValue(x(7))
		setValue(x(28))
		setValue(x(34))
		setValue(x(27))
		setValue(x(32))
		setValue(x(48))
		setValue(x(50))
		setValue(x(33))
		setValue(x(5))
		setValue(x(57))
		setValue(x(47))
		setValue(x(49))
		setValue(x(9))
		setValue(x(44))
		setValue(x(45))
		setValue(x(37))
		setValue(x(43))
		setValue(x(42))
		setValue(x(31))
		setValue(x(36))
		setValue(x(39))
		setValue(x(11))
		setValue(x(12))
		setValue(x(35))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(15))
		setValue(x(20))
		setValue(x(16))
		setValue(x(19))
		setValue(x(56))
		setValue(x(38))
		setValue(x(10))
		setValue(x(13))
		createVariableMove(y(91) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(43487)	definition(x(2) 48904 pid('' 2 pos('./cp/FS.oz' 28 0) nil 4) <P: 404> [y(98) y(100) y(165) y(1) y(148) y(149) y(150) y(161)])
		putList(x(2))
		setPredicateRef(<Q: 405>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 406>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 407>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 408>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 409>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 410>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 411>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 412>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 413>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 414>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MINELEM>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MAXELEM>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 415>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 416>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 417>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 418>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 419>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 420>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 421>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 422>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 423>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 424>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 425>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 427>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 428>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 429>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 438>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 439>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 440>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 441>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 442>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 443>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 444>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 445>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 446>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 447>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 448>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 449>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 450>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 451>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 452>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 453>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 454>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 455>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 456>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 457>)
		setValue(x(3))
lbl(43823)	definitionCopy(x(2) 48899 pid('/body' 0 pos('./cp/FS.oz' 28 0) [once] 31) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(47)
		move(g(0) x(0))
		inlineDot(x(0) 'FSB' x(1) cache)
		inlineDot(x(0) 'FSP' x(2) cache)
		inlineDot(x(0) 'FD' x(3) cache)
lbl(43852)	definition(x(4) 43884 pid('Head' 2 pos('./cp/FS.oz' 87 10) nil 4) <Q: 405> nil)
		shallowGuard(43871)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(43866)	shallowThen
		unify(x(1) x(2))
		return
lbl(43871)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(87)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(43852)
lbl(43884)	definition(x(4) 43916 pid('Tail' 2 pos('./cp/FS.oz' 88 10) nil 4) <Q: 406> nil)
		shallowGuard(43903)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(43898)	shallowThen
		unify(x(1) x(3))
		return
lbl(43903)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(43884)
lbl(43916)	definition(x(4) 43989 pid('ExpandList' 2 pos('./cp/FS.oz' 91 3) nil 5) <Q: 407> [g(2)])
lbl(43922)	definition(x(4) 43975 pid('' 3 pos('./cp/FS.oz' 93 7) nil 5) unit [g(0)])
		testRecord(x(0) '#' 2 43966)
lbl(43933)	allocateL3
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(1 x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 80> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 21> 7)
lbl(43966)	getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(43922)
lbl(43975)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(43916)
lbl(43989)	inlineDot(x(2) include x(4) cache)
		inlineDot(x(2) exclude x(5) cache)
		inlineDot(x(2) 'match' x(6) cache)
		inlineDot(x(2) minN x(7) cache)
		inlineDot(x(2) maxN x(8) cache)
		inlineDot(x(2) seq x(9) cache)
		inlineDot(x(2) isIn x(10) cache)
		inlineDot(x(2) isInR x(11) cache)
lbl(44037)	definition(x(12) 44080 pid('FSIsInReif' 3 pos('./cp/FS.oz' 110 6) nil 5) <Q: 408> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(44037)
lbl(44080)	inlineDot(x(2) equalR x(11) cache)
lbl(44086)	definition(x(12) 44129 pid('FSEqualReif' 3 pos('./cp/FS.oz' 119 6) nil 5) <Q: 409> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(44086)
lbl(44129)	inlineDot(x(1) 'setValue' x(11) cache)
		inlineDot(x(1) set x(13) cache)
		inlineDot(x(2) disjoint x(14) cache)
		inlineDot(x(2) distinct x(15) cache)
lbl(44153)	definition(x(16) 44182 pid('FSDistinctWith' 2 pos('./cp/FS.oz' 134 3) nil 3) <Q: 410> [x(15)])
lbl(44159)	definition(x(2) 44176 pid('' 1 pos('./cp/FS.oz' 135 6) nil 2) unit [g(0) x(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(44159)
lbl(44176)	unify(x(2) x(1))
		return
		endDefinition(44153)
lbl(44182)	inlineDot(x(2) union x(16) cache)
		inlineDot(x(2) intersection x(17) cache)
		inlineDot(x(2) subsume x(18) cache)
		inlineDot(x(2) diff x(19) cache)
		inlineDot(x(2) min x(20) cache)
		inlineDot(x(2) max x(21) cache)
		inlineDot(x(2) convex x(22) cache)
		inlineDot(x(1) isVarB x(23) cache)
		inlineDot(x(1) isValueB x(24) cache)
		inlineDot(x(1) valueToString x(25) cache)
lbl(44242)	definition(x(26) 44403 pid('GetFeaturePath' 4 pos('./cp/FS.oz' 155 6) nil 5) <Q: 411> nil)
		allocateL10
		move(x(3) y(0))
		testList(x(2) 44396)
lbl(44255)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createCond(44396)
lbl(44265)	nextClause(44320)
		clause
		createVariable(y(5))
		createVariable(y(6))
		getRecord('#' 2 y(1))
		unifyValue(y(5))
		unifyValue(y(6))
		getLiteral(nil y(2))
		ask
lbl(44284)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 44307)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(0))
		callBI('.' [x(0) x(2)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL10
		return
lbl(44307)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL10
		return
lbl(44320)	lastClause
		clause
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		getRecord('#' 2 y(1))
		unifyValue(y(7))
		unifyValue(y(8))
		unify(y(9) y(2))
		ask
lbl(44340)	moveMoveYXYX(y(4) x(0) y(7) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 44373)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(1))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(44373)	moveMoveYXYX(y(3) x(1) y(8) x(2))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(44396)	getLiteral(found_nil_in_path y(0))
		deAllocateL10
		return
		endDefinition(44242)
lbl(44403)	definition(x(26) 44499 pid('Find' 3 pos('./cp/FS.oz' 168 6) nil 4) <Q: 412> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 406> 4)
lbl(44424)	definition(x(0) 44472 pid('' 3 pos('./cp/FS.oz' 170 3) nil 3) unit [y(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		call(g(0) 3)
		testBool(y(3) 44454 44459)
		unify(y(2) y(0))
		deAllocateL4
		return
lbl(44454)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(44459)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(44424)
lbl(44472)	moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(44403)
lbl(44499)	definition(x(26) 44534 pid('MinElement' 2 pos('./cp/FS.oz' 175 6) nil 2) <Q: 413> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 405> 4)
		testRecord(y(1) '#' 2 44527)
lbl(44520)	getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(44527)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(44499)
lbl(44534)	definition(x(26) 44571 pid('MaxElement' 2 pos('./cp/FS.oz' 180 6) nil 2) <Q: 414> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(1) '#' 2 44564)
lbl(44555)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(44564)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(44534)
lbl(44571)	definition(x(26) 44723 pid('LESS' 3 pos('./cp/FS.oz' 188 6) nil 5) <Q: 415> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 44616)
lbl(44599)	getVarVar(x(3) x(4))
		shallowGuard(44616)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(44610)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44616)	testRecord(y(0) '#' 2 44632)
lbl(44621)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 44632)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(44632)	testRecord(y(0) '#' 2 44650)
lbl(44637)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 44650)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44650)	testRecord(y(0) '#' 2 44672)
lbl(44655)	getVarVar(x(0) x(1))
		shallowGuard(44672)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(44666)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44672)	testRecord(y(0) '#' 2 44688)
lbl(44677)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 44688)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44688)	testRecord(y(0) '#' 2 44708)
lbl(44693)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 44708)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(44708)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(44571)
lbl(44723)	definition(x(27) 44875 pid('GREATER' 3 pos('./cp/FS.oz' 201 6) nil 5) <Q: 416> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 44768)
lbl(44751)	getVarVar(x(3) x(4))
		shallowGuard(44768)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(44762)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44768)	testRecord(y(0) '#' 2 44784)
lbl(44773)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 44784)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44784)	testRecord(y(0) '#' 2 44802)
lbl(44789)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 44802)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(44802)	testRecord(y(0) '#' 2 44824)
lbl(44807)	getVarVar(x(0) x(1))
		shallowGuard(44824)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(44818)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44824)	testRecord(y(0) '#' 2 44840)
lbl(44829)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 44840)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(44840)	testRecord(y(0) '#' 2 44860)
lbl(44845)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 44860)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(44860)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(44723)
lbl(44875)	definition(x(28) 44966 pid('WeightMin' 2 pos('./cp/FS.oz' 214 6) nil 3) <Q: 417> nil)
lbl(44881)	definition(x(2) 44960 pid('' 3 pos('./cp/FS.oz' 215 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 44895)
		unify(x(2) g(0))
		return
lbl(44895)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(44907)	definition(x(1) 44949 pid('' 3 pos('./cp/FS.oz' 217 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(44907)
lbl(44949)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(44881)
lbl(44960)	unify(x(2) x(1))
		return
		endDefinition(44875)
lbl(44966)	definition(x(28) 45057 pid('WeightMax' 2 pos('./cp/FS.oz' 223 6) nil 3) <Q: 418> nil)
lbl(44972)	definition(x(2) 45051 pid('' 3 pos('./cp/FS.oz' 224 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 44986)
		unify(x(2) g(0))
		return
lbl(44986)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(44998)	definition(x(1) 45040 pid('' 3 pos('./cp/FS.oz' 226 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(44998)
lbl(45040)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(44972)
lbl(45051)	unify(x(2) x(1))
		return
		endDefinition(44966)
lbl(45057)	definition(x(28) 45136 pid('WeightSum' 3 pos('./cp/FS.oz' 232 6) nil 5) <Q: 419> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) sum x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 407> 4)
lbl(45087)	definition(x(1) 45098 pid('' 2 pos('./cp/FS.oz' 233 31) nil 2) unit [y(0)])
		tailCall(g(0) 2)
		endDefinition(45087)
lbl(45098)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant('=:' x(1))
		call(y(2) 3)
		move(g(0) x(0))
		inlineDot(x(0) decl x(1) cache)
		move(y(1) x(0))
		deAllocateL4
		tailCall(x(1) 1)
		endDefinition(45057)
lbl(45136)	createVariable(y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
lbl(45148)	definition(x(29) 45709 pid('OrderFun' 4 pos('./cp/FS.oz' 237 6) nil 9) <Q: 420> [y(0) y(1) y(2) y(3) y(4) y(5) x(28) x(27) x(26)])
		allocateL(11)
		putRecord(c [lowerBound unknown upperBound] x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
lbl(45166)	definition(x(8) 45193 pid('CardTable.unknown' 2 pos('./cp/FS.oz' 240 16) nil 2) unit [x(1) g(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(45166)
lbl(45193)	unify(x(8) x(6))
lbl(45196)	definition(x(6) 45223 pid('CardTable.lowerBound' 2 pos('./cp/FS.oz' 241 16) nil 2) unit [x(1) g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(45196)
lbl(45223)	unify(x(6) x(5))
lbl(45226)	definition(x(5) 45253 pid('CardTable.upperBound' 2 pos('./cp/FS.oz' 242 16) nil 2) unit [x(1) g(2)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(45226)
lbl(45253)	unify(x(5) x(7))
lbl(45256)	definition(x(5) 45404 pid('MakeCompTableWeight' 2 pos('./cp/FS.oz' 245 2) nil 5) unit [x(1) g(3) x(2) g(4) g(5)])
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(45272)	definition(x(4) 45312 pid('Result3.unknown' 2 pos('./cp/FS.oz' 246 19) nil 3) unit [g(0) g(1) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(45272)
lbl(45312)	unify(x(4) x(2))
lbl(45315)	definition(x(2) 45355 pid('Result3.lowerBound' 2 pos('./cp/FS.oz' 247 19) nil 3) unit [g(0) g(3) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(45315)
lbl(45355)	unify(x(2) x(1))
lbl(45358)	definition(x(1) 45398 pid('Result3.upperBound' 2 pos('./cp/FS.oz' 248 19) nil 3) unit [g(0) g(4) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(45358)
lbl(45398)	unify(x(1) x(3))
		return
		endDefinition(45256)
lbl(45404)	putRecord(c [card weightMax weightMin weightSum] x(1))
		setValue(x(4))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		putRecord(c [card weightMax weightMin weightSum] x(2))
		setValue(x(4))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		putRecord(s [max min] y(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(7) x(3) y(8))
		move(x(5) y(9))
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(10) x(0) y(5) x(1))
		call(y(9) 2)
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(6) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(3) x(1))
		call(y(9) 2)
		putRecord(s [max min] x(0))
		setValue(g(7))
		setValue(g(8))
		move(y(7) x(1))
		testBI('IsProcedure' [x(1)]#[x(2)] 45550)
		unify(y(8) y(7))
		deAllocateL
		return
lbl(45550)	testLiteral(y(7) naive 45571)
lbl(45554)	definition(x(0) 45566 pid('' 2 pos('./cp/FS.oz' 267 29) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45554)
lbl(45566)	unify(x(0) y(8))
		deAllocateL
		return
lbl(45571)	putRecord('#' 2 x(3))
		setConstant(sel)
		setConstant(min)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 411> 8)
		putRecord('#' 2 x(0))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(3))
		setConstant(cost)
		setConstant(card)
		putRecord('#' 2 x(5))
		setConstant(comp)
		setConstant(unknown)
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(4))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 411> 8)
lbl(45644)	definition(x(0) 45702 pid('' 2 pos('./cp/FS.oz' 275 8) nil 4) unit [y(2) y(1)])
lbl(45650)	definition(x(3) 45691 pid('' 3 pos('./cp/FS.oz' 276 12) nil 3) unit [g(0) g(1)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(g(1) 3)
		endDefinition(45650)
lbl(45691)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 44> 7)
		endDefinition(45644)
lbl(45702)	unify(x(0) y(8))
		deAllocateL
		return
		endDefinition(45148)
lbl(45709)	createVariable(y(6))
lbl(45711)	definition(x(26) 46028 pid('ElementFun' 4 pos('./cp/FS.oz' 283 6) nil 11) <Q: 421> [y(6)])
		putRecord(v [unknown weight] x(5))
		setVariable(x(6))
		setVariable(x(7))
		putRecord(v [unknown weight] x(8))
		setVariable(x(9))
		setVariable(x(10))
		putRecord(v [max min] x(4))
		setValue(x(5))
		setValue(x(8))
lbl(45741)	definition(x(5) 45788 pid('ElementFunTable.min.unknown' 2 pos('./cp/FS.oz' 285 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 413> 5)
		endDefinition(45741)
lbl(45788)	unify(x(5) x(9))
lbl(45791)	definition(x(5) 45858 pid('ElementFunTable.min.weight' 2 pos('./cp/FS.oz' 288 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 417> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(45791)
lbl(45858)	unify(x(5) x(10))
lbl(45861)	definition(x(5) 45908 pid('ElementFunTable.max.unknown' 2 pos('./cp/FS.oz' 293 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 414> 5)
		endDefinition(45861)
lbl(45908)	unify(x(5) x(6))
lbl(45911)	definition(x(5) 45978 pid('ElementFunTable.max.weight' 2 pos('./cp/FS.oz' 296 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(45911)
lbl(45978)	unify(x(5) x(7))
		testBI('IsProcedure' [x(0)]#[x(1)] 45989)
		unify(x(3) x(0))
		return
lbl(45989)	putRecord('#' 2 x(1))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(6))
		setConstant(wrt)
		setConstant(unknown)
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(5))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 411> 9)
		endDefinition(45711)
lbl(46028)	definition(x(26) 46141 pid('FilterFun' 3 pos('./cp/FS.oz' 309 6) nil 4) <Q: 422> [y(0)])
		testLiteral(x(0) true 46083)
lbl(46038)	definition(x(0) 46079 pid('' 2 pos('./cp/FS.oz' 312 5) nil 3) unit [x(1) g(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(46038)
lbl(46079)	unify(x(0) x(2))
		return
lbl(46083)	definition(x(3) 46135 pid('' 2 pos('./cp/FS.oz' 314 5) nil 3) unit [x(1) g(0) x(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 46128)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		tailCall(g(2) 2)
lbl(46128)	getLiteral(false y(0))
		deAllocateL3
		return
		endDefinition(46083)
lbl(46135)	unify(x(3) x(2))
		return
		endDefinition(46028)
lbl(46141)	definition(x(26) 46173 pid('SelectFun' 2 pos('./cp/FS.oz' 321 6) nil 2) <Q: 423> nil)
		testLiteral(x(0) id 46167)
lbl(46151)	definition(x(0) 46163 pid('' 2 pos('./cp/FS.oz' 323 13) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(46151)
lbl(46163)	unify(x(0) x(1))
		return
lbl(46167)	unify(x(1) x(0))
		return
		endDefinition(46141)
lbl(46173)	definition(x(26) 46262 pid('RRobinFun' 2 pos('./cp/FS.oz' 329 6) nil 2) <Q: 424> nil)
		testBool(x(0) 46233 46249)
lbl(46183)	definition(x(0) 46229 pid('' 2 pos('./cp/FS.oz' 330 17) nil 5) unit nil)
		shallowGuard(46216)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(46197)	shallowThen
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 21> 7)
lbl(46216)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46183)
lbl(46229)	unify(x(0) x(1))
		return
lbl(46233)	definition(x(0) 46245 pid('' 2 pos('./cp/FS.oz' 331 7) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(46233)
lbl(46245)	unify(x(0) x(1))
		return
lbl(46249)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46173)
lbl(46262)	definition(x(26) 46394 pid('FSDistNaive' 1 pos('./cp/FS.oz' 336 6) nil 2) <Q: 425> [y(6) x(4) x(5)])
		testLiteral(x(0) nil 46273)
		return
lbl(46273)	allocateL4
		move(x(0) y(0))
		createChoice
lbl(46278)	lastClause
		emptyClause
lbl(46280)	move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testLiteral(y(3) nil 46329)
lbl(46313)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 406> 4)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(46329)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 413> 4)
		createChoice
lbl(46339)	nextClause(46366)
		emptyClause
lbl(46342)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(46366)	lastClause
		emptyClause
lbl(46368)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
		endDefinition(46262)
lbl(46394)	createVariable(y(7))
lbl(46396)	definition(x(26) 46581 pid('FSDistGeneric' 7 pos('./cp/FS.oz' 360 6) nil 7) <Q: 426> [y(7) x(4) x(5)])
		allocateL10
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createChoice
lbl(46425)	lastClause
		emptyClause
lbl(46427)	call(y(5) 0)
		createChoice
lbl(46431)	lastClause
		emptyClause
lbl(46433)	moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 39> 6)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		call(y(0) 2)
		testLiteral(y(6) nil 46459)
		deAllocateL10
		return
lbl(46459)	move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(9) x(1))
		call(y(4) 2)
		createChoice
lbl(46496)	nextClause(46538)
		emptyClause
lbl(46499)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
lbl(46538)	lastClause
		emptyClause
lbl(46540)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
		endDefinition(46396)
lbl(46581)	createVariable(y(8))
lbl(46583)	definition(x(26) 46807 pid('FSDistribute' 2 pos('./cp/FS.oz' 390 6) nil 8) <Q: 427> [y(7) y(8)])
		allocateL7
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testLiteral(y(0) naive 46613)
lbl(46606)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<Q: 425> 3)
lbl(46613)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) generic 46794)
lbl(46623)	putConstant(select x(2))
		putConstant(id x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 423> 4)
		putConstant(nil x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		putConstant(weights x(4))
		move(y(3) x(1))
		callBI('CondSelect' [x(0) x(4) x(1)]#[x(2)])
		putConstant(order x(4))
		putConstant(order x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(2) y(3))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 420> 8)
		move(y(0) x(0))
		putConstant(filter x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(5)])
		move(x(5) x(0))
		move(y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 422> 6)
		move(y(0) x(0))
		putConstant(element x(4))
		putConstant(element x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(6) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 421> 8)
		move(y(0) x(0))
		putConstant(rrobin x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 424> 4)
lbl(46757)	definition(x(0) 46766 pid('' 0 pos('./cp/FS.oz' 404 42) nil 0) unit nil)
		return
		endDefinition(46757)
lbl(46766)	move(y(0) x(1))
		putConstant(procedure x(7))
		callBI('CondSelect' [x(1) x(7) x(0)]#[x(6)])
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(2) x(5))
		deAllocateL7
		genFastCall(<Q: 426> 15)
lbl(46794)	putRecord('#' 2 x(1))
		setConstant('Error in FSDistribute')
		setValue(y(0))
		callBI('Exception.raise' [x(1)]#nil)
		endDefinition(46583)
lbl(46807)	definition(x(27) 46907 pid('FDWatchMax' 2 pos('./cp/FS.oz' 423 3) nil 4) <Q: 428> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 46820)
		tailCall(x(1) 1)
lbl(46820)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 46892 46894)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 428> 5)
lbl(46892)	deAllocateL4
		return
lbl(46894)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(429)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46807)
lbl(46907)	definition(x(27) 47007 pid('FDWatchMin' 2 pos('./cp/FS.oz' 435 3) nil 4) <Q: 429> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 46920)
		tailCall(x(1) 1)
lbl(46920)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 46992 46994)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 429> 5)
lbl(46992)	deAllocateL4
		return
lbl(46994)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46907)
lbl(47007)	inlineDot(x(2) card x(27) cache)
lbl(47013)	definition(x(28) 47051 pid('FSCard' 2 pos('./cp/FS.oz' 452 6) nil 4) <Q: 430> [x(3) x(27)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) decl x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		call(x(3) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(47013)
lbl(47051)	inlineDot(x(1) cardRange x(27) cache)
		inlineDot(x(1) getUnknown x(29) cache)
		unify(x(29) y(3))
		inlineDot(x(1) getGlb x(29) cache)
		unify(x(29) y(4))
		inlineDot(x(1) getLub x(29) cache)
		unify(x(29) y(5))
		inlineDot(x(1) getCard x(29) cache)
		inlineDot(x(1) getNumOfKnownIn x(30) cache)
		unify(x(30) y(1))
		inlineDot(x(1) getNumOfKnownNotIn x(30) cache)
		unify(x(30) y(2))
		inlineDot(x(1) getNumOfUnknown x(30) cache)
		unify(x(30) y(0))
		inlineDot(x(1) sup x(1) cache)
		moveMoveXYXY(x(2) y(9) x(3) y(10))
		moveMoveXYXY(x(4) y(11) x(5) y(12))
		moveMoveXYXY(x(6) y(13) x(7) y(14))
		moveMoveXYXY(x(8) y(15) x(9) y(16))
		moveMoveXYXY(x(10) y(17) x(12) y(18))
		moveMoveXYXY(x(11) y(19) x(13) y(20))
		moveMoveXYXY(x(14) y(21) x(15) y(22))
		moveMoveXYXY(x(16) y(23) x(17) y(24))
		moveMoveXYXY(x(18) y(25) x(19) y(26))
		moveMoveXYXY(x(20) y(27) x(21) y(28))
		moveMoveXYXY(x(22) y(29) x(23) y(30))
		moveMoveXYXY(x(24) y(31) x(25) y(32))
		moveMoveXYXY(x(26) y(33) x(28) y(34))
		moveMoveXYXY(x(27) y(35) x(29) y(36))
		createVariableMove(y(37) x(0))
		call(x(1) 1)
		putRecord('#' 2 x(0))
		setConstant(0)
		setValue(y(37))
		putList(y(38))
		setValue(x(0))
		setConstant(nil)
		move(y(38) x(0))
		createVariableMove(y(39) x(1))
		call(y(19) 2)
lbl(47222)	definition(x(0) 47301 pid('VectorToList' 2 pos('./cp/FS.oz' 479 3) nil 3) <Q: 431> [g(3) g(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 47249 47288)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(47249)	move(y(0) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 47263)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
lbl(47263)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setConstant('VectorToTuple')
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('A propagator expected a vector as input argument.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(47288)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(480)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(47222)
lbl(47301)	unify(x(0) y(7))
lbl(47304)	definition(x(0) 47338 pid('FSIntersectN' 2 pos('./cp/FS.oz' 495 3) nil 4) <Q: 432> [y(24) y(39)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 431> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(g(1) x(2))
		move(y(0) x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(47304)
lbl(47338)	definition(x(1) 47428 pid('FSUnionN' 2 pos('./cp/FS.oz' 500 3) nil 4) <Q: 433> [y(9) y(10)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unionN x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) sum x(1) cache)
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 431> 4)
lbl(47382)	definition(x(1) 47393 pid('' 2 pos('./cp/FS.oz' 502 37) nil 2) unit nil)
		genFastCall(<Q: 430> 5)
		endDefinition(47382)
lbl(47393)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 430> 4)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(y(3) x(2))
		putConstant('=:' x(1))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(47338)
lbl(47428)	move(y(9) x(2))
		inlineDot(x(2) disjointN x(3) cache)
lbl(47437)	definition(x(4) 47503 pid('FSDistinctN' 1 pos('./cp/FS.oz' 508 3) nil 2) <Q: 434> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 431> 4)
lbl(47450)	definition(x(1) 47494 pid('' 1 pos('./cp/FS.oz' 511 7) nil 2) unit nil)
		match(x(0) ht(47479 [onScalar(nil 47459) onRecord('|' 2 47460)]))
lbl(47459)	return
lbl(47460)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 410> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(47479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(515)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(47450)
lbl(47494)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 37> 5)
		endDefinition(47437)
lbl(47503)	inlineDot(x(2) partition x(5) cache)
lbl(47509)	definition(x(6) 47750 pid('FSNewWeights' 2 pos('./cp/FS.oz' 521 3) nil 6) <Q: 435> [g(5) g(6) g(7)])
		allocateL2
		callBI('NewDictionary' nil#[x(2)])
		createVariable(x(3))
lbl(47521)	definition(x(4) 47693 pid('ScanWeightDescr' 1 pos('./cp/FS.oz' 524 6) nil 8) unit [g(0) x(2) x(3)])
		allocateL1
		move(x(0) y(0))
		testList(y(0) 47564)
lbl(47534)	getVarVar(x(1) x(2))
		shallowGuard(47564)
		getRecord('#' 2 x(1))
		unifyLiteral(default)
		unifyVariable(x(3))
lbl(47547)	shallowThen
		move(g(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		move(x(2) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(47564)	testList(y(0) 47642)
lbl(47567)	getVarVar(x(0) x(1))
		shallowGuard(47642)
		getRecord('#' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(47588)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		createVariable(y(0))
		testLT(x(3) x(4) x(5) 47632)
		getList(y(0))
		unifyVariable(x(5))
		unifyValue(x(1))
		getRecord('#' 2 x(5))
		unifyVariable(x(6))
		unifyValue(x(2))
		getRecord('#' 2 x(6))
		unifyVariable(x(7))
		unifyValue(x(4))
		inlinePlus1(x(3) x(1))
		unify(x(1) x(7))
		branch(47635)
lbl(47632)	unify(y(0) x(1))
lbl(47635)	move(y(0) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(47642)	testList(y(0) 47672)
lbl(47645)	getVarVar(x(0) x(1))
		shallowGuard(47672)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(47658)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(3)]#nil)
		move(x(1) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(47672)	testLiteral(y(0) nil 47678)
lbl(47676)	deAllocateL1
		return
lbl(47678)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(538)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(47521)
lbl(47693)	unify(x(4) x(3))
		putConstant(default x(4))
		putConstant(0 x(5))
		callBI('Dictionary.put' [x(2) x(4) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(3) 1)
		move(y(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
lbl(47722)	definition(x(1) 47743 pid('' 2 pos('./cp/FS.oz' 546 6) nil 5) unit [g(2) y(1) x(2)])
		move(g(1) x(2))
		move(g(2) x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(47722)
lbl(47743)	unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(47509)
lbl(47750)	unify(x(6) y(8))
lbl(47753)	definition(x(6) 47773 pid('FSCompl' 2 pos('./cp/FS.oz' 552 3) nil 3) <Q: 436> [y(26) y(39)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47753)
lbl(47773)	definition(x(7) 47807 pid('FSComplIn' 3 pos('./cp/FS.oz' 556 3) nil 3) <Q: 437> [y(21) y(23)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(47773)
lbl(47807)	createVariable(y(7))
lbl(47809)	definition(x(8) 47836 pid('FSForAllIn' 2 pos('./cp/FS.oz' 562 3) nil 2) <Q: 438> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47809)
lbl(47836)	putRecord(l [decl lowerBound new upperBound] x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		putRecord(r [decl lowerBound new upperBound] x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putRecord(t [decl lowerBound new upperBound] x(21))
		setVariable(x(22))
		setVariable(x(23))
		setVariable(x(24))
		setVariable(x(25))
		putRecord(v [decl is list lowerBound new record tuple upperBound] y(39))
		setVariable(x(9))
		setValue(y(30))
		setValue(x(10))
		setVariable(x(15))
		setValue(y(20))
		setValue(x(16))
		setValue(x(21))
		setVariable(x(26))
lbl(47892)	definition(x(10) 47912 pid('FSVar.decl' 1 pos('./cp/FS.oz' 568 14) nil 3) <Q: 439> [y(20) y(38)])
		move(x(0) x(2))
		move(g(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47892)
lbl(47912)	unify(x(10) x(9))
lbl(47915)	definition(x(10) 47935 pid('FSVar.upperBound' 2 pos('./cp/FS.oz' 572 10) nil 3) <Q: 440> [y(20)])
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47915)
lbl(47935)	unify(x(10) x(26))
lbl(47938)	definition(x(10) 47955 pid('FSVar.lowerBound' 2 pos('./cp/FS.oz' 576 19) nil 3) <Q: 441> [y(20) y(38)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47938)
lbl(47955)	unify(x(10) x(15))
lbl(47958)	definition(x(10) 47991 pid('FSVar.list.decl' 2 pos('./cp/FS.oz' 582 22) nil 2) <Q: 442> [x(9)])
		allocateL1
		move(x(1) y(0))
		genFastCall(<P: 19> 4)
lbl(47971)	definition(x(1) 47982 pid('' 1 pos('./cp/FS.oz' 585 12) nil 1) unit [g(0)])
		genFastCall(<Q: 439> 3)
		endDefinition(47971)
lbl(47982)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(47958)
lbl(47991)	unify(x(10) x(11))
lbl(47994)	definition(x(10) 48038 pid('FSVar.list.upperBound' 3 pos('./cp/FS.oz' 589 22) nil 3) <Q: 443> [x(26)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(48012)	definition(x(1) 48029 pid('' 1 pos('./cp/FS.oz' 592 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(48012)
lbl(48029)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47994)
lbl(48038)	unify(x(10) x(14))
lbl(48041)	definition(x(10) 48085 pid('FSVar.list.lowerBound' 3 pos('./cp/FS.oz' 596 22) nil 3) <Q: 444> [x(15)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(48059)	definition(x(1) 48076 pid('' 1 pos('./cp/FS.oz' 599 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(48059)
lbl(48076)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(48041)
lbl(48085)	unify(x(10) x(12))
lbl(48088)	definition(x(10) 48137 pid('FSVar.list.new' 4 pos('./cp/FS.oz' 603 15) nil 4) <Q: 445> [y(20)])
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<P: 19> 4)
lbl(48108)	definition(x(1) 48128 pid('' 1 pos('./cp/FS.oz' 606 12) nil 3) unit [g(0) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(48108)
lbl(48128)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(48088)
lbl(48137)	unify(x(10) x(13))
lbl(48140)	definition(x(10) 48171 pid('FSVar.tuple.decl' 3 pos('./cp/FS.oz' 611 22) nil 4) <Q: 446> [g(8) x(9)])
		callBI('MakeTuple' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
lbl(48152)	definition(x(1) 48163 pid('' 1 pos('./cp/FS.oz' 614 12) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(48152)
lbl(48163)	move(x(2) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(48140)
lbl(48171)	unify(x(10) x(22))
lbl(48174)	definition(x(10) 48211 pid('FSVar.tuple.upperBound' 4 pos('./cp/FS.oz' 618 22) nil 5) <Q: 447> [g(8) x(26)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(48186)	definition(x(1) 48203 pid('' 1 pos('./cp/FS.oz' 621 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(48186)
lbl(48203)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(48174)
lbl(48211)	unify(x(10) x(25))
lbl(48214)	definition(x(10) 48251 pid('FSVar.tuple.lowerBound' 4 pos('./cp/FS.oz' 625 22) nil 5) <Q: 448> [g(8) x(15)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(48226)	definition(x(1) 48243 pid('' 1 pos('./cp/FS.oz' 628 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(48226)
lbl(48243)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(48214)
lbl(48251)	unify(x(10) x(23))
lbl(48254)	definition(x(10) 48294 pid('FSVar.tuple.new' 5 pos('./cp/FS.oz' 632 15) nil 6) <Q: 449> [g(8) y(20)])
		callBI('MakeTuple' [x(0) x(1)]#[x(5)])
		unify(x(5) x(4))
lbl(48266)	definition(x(1) 48286 pid('' 1 pos('./cp/FS.oz' 635 12) nil 3) unit [g(1) x(2) x(3)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(48266)
lbl(48286)	move(x(4) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(48254)
lbl(48294)	unify(x(10) x(24))
lbl(48297)	definition(x(10) 48330 pid('FSVar.record.decl' 3 pos('./cp/FS.oz' 641 23) nil 3) <Q: 450> [g(8) x(9)])
		allocateL1
		move(x(2) y(0))
		genFastCall(<P: 110> 6)
lbl(48310)	definition(x(1) 48321 pid('' 1 pos('./cp/FS.oz' 644 6) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(48310)
lbl(48321)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 164> 5)
		endDefinition(48297)
lbl(48330)	unify(x(10) x(17))
lbl(48333)	definition(x(9) 48377 pid('FSVar.record.upperBound' 4 pos('./cp/FS.oz' 648 23) nil 4) <Q: 451> [g(8) x(26)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(48351)	definition(x(1) 48368 pid('' 1 pos('./cp/FS.oz' 651 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(48351)
lbl(48368)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(48333)
lbl(48377)	unify(x(9) x(20))
lbl(48380)	definition(x(9) 48424 pid('FSVar.record.lowerBound' 4 pos('./cp/FS.oz' 655 23) nil 4) <Q: 452> [g(8) x(15)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(48398)	definition(x(1) 48415 pid('' 1 pos('./cp/FS.oz' 658 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(48398)
lbl(48415)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(48380)
lbl(48424)	unify(x(9) x(18))
lbl(48427)	definition(x(9) 48476 pid('FSVar.record.new' 5 pos('./cp/FS.oz' 662 16) nil 5) <Q: 453> [g(8) y(20)])
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYYX(x(4) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
lbl(48447)	definition(x(1) 48467 pid('' 1 pos('./cp/FS.oz' 665 6) nil 3) unit [g(1) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(48447)
lbl(48467)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 164> 5)
		endDefinition(48427)
lbl(48476)	unify(x(9) x(19))
		putRecord(c [empty is new singl toString universal] y(20))
		setVariable(x(9))
		setValue(y(31))
		setValue(y(19))
		setVariable(y(30))
		setValue(y(32))
		setVariable(y(40))
		moveMoveXYXY(x(0) y(31) x(1) y(32))
		moveMoveXYXY(x(3) y(41) x(4) y(42))
		moveMoveXYXY(x(5) y(43) x(6) y(44))
		moveMoveXYXY(x(7) y(45) x(8) y(46))
		move(x(9) x(1))
		putConstant(nil x(0))
		call(y(19) 2)
		moveMoveYXYX(y(38) x(0) y(40) x(1))
		call(y(19) 2)
lbl(48532)	definition(x(0) 48552 pid('FSValue.singl' 2 pos('./cp/FS.oz' 674 14) nil 3) <Q: 454> [y(19)])
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(48532)
lbl(48552)	unify(x(0) y(30))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setValue(y(18))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
lbl(48573)	definition(x(7) 48616 pid('FSReified.isIn' 3 pos('./cp/FS.oz' 682 31) nil 5) <Q: 455> [y(10)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 408> 7)
		endDefinition(48573)
lbl(48616)	unify(x(7) x(5))
lbl(48619)	definition(x(5) 48695 pid('FSReified.areIn' 3 pos('./cp/FS.oz' 686 17) nil 5) <Q: 456> [y(10)])
		allocateL5
		move(g(0) x(3))
		inlineDot(x(3) list x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		call(y(3) 3)
lbl(48667)	definition(x(1) 48684 pid('' 2 pos('./cp/FS.oz' 690 9) nil 3) unit [y(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 408> 7)
		endDefinition(48667)
lbl(48684)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(48619)
lbl(48695)	unify(x(5) x(1))
lbl(48698)	definition(x(1) 48750 pid('FSReified.include' 3 pos('./cp/FS.oz' 692 17) nil 5) <Q: 457> [y(10) y(9)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		move(g(1) x(0))
		inlineDot(x(0) includeR x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(48698)
lbl(48750)	unify(x(1) x(4))
		move(y(9) x(1))
		inlineDot(x(1) bounds x(4) cache)
		unify(x(4) x(2))
		inlineDot(x(1) boundsN x(2) cache)
		unify(x(2) x(3))
		inlineDot(x(1) partitionReified x(2) cache)
		unify(x(2) x(6))
		inlineDot(x(1) monitorIn x(2) cache)
		unify(x(2) y(7))
		getRecord(r [card cardOf lowerBound unknown upperBound] y(6))
		unifyValVar(y(36) x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		putRecord(i [convex 'match' max maxN min minN seq] x(1))
		setValue(y(29))
		setValue(y(13))
		setValue(y(28))
		setValue(y(15))
		setValue(y(27))
		setValue(y(14))
		setValue(y(16))
		getRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] g(9))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(44))
		unifyValue(y(45))
		unifyValue(y(26))
		unifyValue(y(21))
		unifyValue(y(41))
		unifyValue(y(22))
		unifyValue(y(42))
		unifyValue(y(33))
		unifyValue(y(12))
		unifyValue(y(46))
		unifyValue(y(11))
		unifyNumber(0)
		unifyValue(x(1))
		unifyValue(y(24))
		unifyValue(y(31))
		unifyValue(y(17))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(43))
		unifyValue(y(6))
		unifyValue(x(0))
		unifyValue(y(25))
		unifyValue(y(37))
		unifyValue(y(23))
		unifyValue(y(32))
		unifyValue(y(20))
		unifyValue(y(39))
		deAllocateL
		return
		endDefinition(43823)
lbl(48899)	tailCall(x(2) 0)
		endDefinition(43487)
lbl(48904)	putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/1')
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putRecord(value 1 x(4))
		setConstant(0)
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(22))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(23))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(24))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(25))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(26))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/1')
		setConstant(nil)
		putRecord(type 1 x(27))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putRecord(l [decl lowerBound new upperBound] x(21))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		putRecord(record 1 x(29))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(21))
		putRecord(r [decl lowerBound new upperBound] x(21))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		putRecord(record 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(21))
		putRecord(t [decl lowerBound new upperBound] x(21))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		putRecord(record 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putRecord(v [decl is list lowerBound new record tuple upperBound] x(21))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		putRecord(record 1 x(27))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putRecord(c [empty is new singl toString universal] x(21))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		putRecord(record 1 x(28))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(21))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(21))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		putRecord(record 1 x(29))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putRecord(c [lowerBound unknown upperBound] x(21))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		putRecord(record 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(21))
		putRecord(r [card cardOf lowerBound unknown upperBound] x(21))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		putRecord(record 1 x(31))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(21))
		putList(x(21))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(21))
		putRecord(i [convex 'match' max maxN min minN seq] x(21))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		putRecord(record 1 x(32))
		setValue(x(21))
		putList(x(21))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(21))
		putList(x(37))
		setConstant(watch)
		setConstant(nil)
		putList(x(36))
		setConstant(sum)
		setValue(x(37))
		putList(x(35))
		setConstant(reflect)
		setValue(x(36))
		putList(x(34))
		setConstant(list)
		setValue(x(35))
		putList(x(21))
		setConstant(decl)
		setValue(x(34))
		putList(x(3))
		setConstant(bool)
		setValue(x(21))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(38))
		setConstant('x-oz://boot/FSB')
		setConstant(nil)
		putRecord(info ['from' type] x(39))
		setConstant('x-oz://boot/FSP')
		setConstant(nil)
		putRecord('import' ['FD' 'FSB' 'FSP'] x(0))
		setValue(x(1))
		setValue(x(38))
		setValue(x(39))
		putRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] x(1))
		setValue(x(18))
		setValue(x(19))
		setValue(x(23))
		setValue(x(24))
		setValue(x(22))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(33))
		setValue(x(6))
		setValue(x(26))
		setValue(x(5))
		setValue(x(4))
		setValue(x(32))
		setValue(x(7))
		setValue(x(8))
		setValue(x(25))
		setValue(x(30))
		setValue(x(17))
		setValue(x(16))
		setValue(x(31))
		setValue(x(29))
		setValue(x(11))
		setValue(x(20))
		setValue(x(9))
		setValue(x(10))
		setValue(x(28))
		setValue(x(27))
		createVariableMove(y(92) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(50036)	definition(x(7) 50060 pid('NewKiller' 2 pos('./cp/Search.oz' 27 3) nil 3) <P: 458> nil)
lbl(50042)	definition(x(2) 50054 pid('Killer' 0 pos('./cp/Search.oz' 28 6) nil 0) unit [x(1)])
		getLiteral(kill g(0))
		return
		endDefinition(50042)
lbl(50054)	unify(x(2) x(0))
		return
		endDefinition(50036)
lbl(50060)	definition(x(7) 50072 pid('WrapS' 2 pos('./cp/Search.oz' 36 3) nil 2) <P: 459> nil)
		unify(x(1) x(0))
		return
		endDefinition(50060)
lbl(50072)	definition(x(8) 50105 pid('WrapP' 2 pos('./cp/Search.oz' 40 3) nil 3) <P: 460> [y(186) y(185)])
lbl(50078)	definition(x(2) 50099 pid('' 1 pos('./cp/Search.oz' 41 6) nil 4) unit [g(0) g(1) x(0)])
		move(g(2) x(1))
		callBI('Space.clone' [x(1)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(50078)
lbl(50099)	unify(x(2) x(1))
		return
		endDefinition(50072)
lbl(50105)	definition(x(9) 50150 pid('ReDo' 2 pos('./cp/Search.oz' 50 6) nil 2) <P: 461> [y(188)])
		match(x(0) ht(50135 [onScalar(nil 50114) onRecord('|' 2 50115)]))
lbl(50114)	return
lbl(50115)	allocateL2
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		genFastCall(<P: 461> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(50135)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(53)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(50105)
lbl(50150)	definition(x(9) 50173 pid('Recompute' 3 pos('./cp/Search.oz' 56 6) nil 4) <P: 462> [y(185)])
		callBI('Space.clone' [x(0)]#[x(3)])
		unify(x(3) x(2))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 461> 5)
		endDefinition(50150)
lbl(50173)	definition(x(9) 50211 pid('Better' 3 pos('./cp/Search.oz' 64 3) nil 4) <P: 463> [y(185) y(187) y(186)])
		callBI('Space.clone' [x(2)]#[x(3)])
lbl(50182)	definition(x(2) 50205 pid('' 1 pos('./cp/Search.oz' 67 22) nil 3) unit [g(2) x(3) x(1)])
		move(g(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		move(x(0) x(1))
		move(x(2) x(0))
		tailCall(g(2) 2)
		endDefinition(50182)
lbl(50205)	callBI('Space.inject' [x(0) x(2)]#nil)
		return
		endDefinition(50173)
lbl(50211)	definition(x(9) 50312 pid('OneDepthNR' 3 pos('./cp/Search.oz' 74 3) nil 5) <P: 464> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(3)] 50306)
		callBI('Space.ask' [x(1)]#[x(3)])
		match(x(3) ht(50293 [onScalar(failed 50227) onScalar(succeeded 50231) onRecord(alternatives 1 50235)]))
lbl(50227)	getLiteral(nil x(2))
		return
lbl(50231)	unify(x(2) x(1))
		return
lbl(50235)	allocateL5
		getVariable(y(0))
		callBI('Space.clone' [x(1)]#[x(3)])
		putConstant(1 x(4))
		callBI('Space.commit' [x(1) x(4)]#nil)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(4) nil 50288)
lbl(50265)	putRecord('#' 2 x(0))
		setConstant(2)
		setValue(y(0))
		move(y(3) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 464> 7)
lbl(50288)	unify(y(2) y(4))
		deAllocateL5
		return
lbl(50293)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(50306)	getLiteral(nil x(2))
		return
		endDefinition(50211)
lbl(50312)	definition(x(9) 50426 pid('AltCopy' 6 pos('./cp/Search.oz' 91 6) nil 8) <P: 465> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(6)] 50343)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 466> 15)
lbl(50343)	allocateL7
		callBI('Space.clone' [x(3)]#[x(6)])
		callBI('Space.commit' [x(6) x(1)]#nil)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(1))
		move(y(3) x(2))
		move(x(7) x(3))
		move(y(4) x(5))
		putConstant(1 x(4))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 50419)
lbl(50396)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL7
		genFastCall(<P: 465> 13)
lbl(50419)	unify(y(5) y(6))
		deAllocateL7
		return
		endDefinition(50312)
lbl(50426)	definition(x(9) 50565 pid('Alt' 9 pos('./cp/Search.oz' 104 6) nil 10) <P: 467> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(9)] 50466)
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(9) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		genFastCall(<P: 466> 15)
lbl(50466)	allocateL9
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		createVariableMove(y(8) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(8) nil 50558)
lbl(50517)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(8) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		deAllocateL9
		genFastCall(<P: 467> 19)
lbl(50558)	unify(y(7) y(8))
		deAllocateL9
		return
		endDefinition(50426)
lbl(50565)	definition(x(9) 50662 pid('OneDepthR' 7 pos('./cp/Search.oz' 114 6) nil 10) <P: 466> [y(184)])
		testBI('IsFree' [x(0)]#[x(7)] 50656)
		callBI('Space.ask' [x(1)]#[x(7)])
		match(x(7) ht(50643 [onScalar(failed 50581) onScalar(succeeded 50585) onRecord(alternatives 1 50589)]))
lbl(50581)	getLiteral(nil x(6))
		return
lbl(50585)	unify(x(6) x(1))
		return
lbl(50589)	getVariable(x(7))
		testBI('==' [x(4) x(5)]#[x(8)] 50613)
		move(x(1) x(3))
		move(x(7) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		putConstant(1 x(1))
		genFastCall(<P: 465> 13)
lbl(50613)	inlinePlus1(x(4) x(9))
		move(x(2) x(4))
		move(x(7) x(2))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(8))
		move(x(9) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 467> 19)
lbl(50643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(123)
		setValue(x(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(50656)	getLiteral(nil x(6))
		return
		endDefinition(50565)
lbl(50662)	definition(x(9) 50728 pid('OneDepth' 4 pos('./cp/Search.oz' 130 6) nil 7) <P: 468> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 50705)
		moveMoveYXYX(y(3) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 464> 7)
lbl(50705)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(y(2) x(6))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 466> 15)
		endDefinition(50662)
lbl(50728)	definition(x(9) 50862 pid('AltCopy' 8 pos('./cp/Search.oz' 139 2) nil 10) <P: 469> [y(188) y(185) y(179)])
		testBI('==' [x(1) x(2)]#[x(8)] 50762)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		putConstant(nil x(3))
		genFastCall(<P: 470> 19)
lbl(50762)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		move(x(6) x(7))
		move(y(5) x(6))
		putConstant(1 x(5))
		createVariableMove(y(7) x(8))
		genFastCall(<P: 470> 18)
		move(y(7) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 50829)
		unify(y(6) y(7))
		deAllocateL8
		return
lbl(50829)	move(y(1) x(1))
		inlinePlus1(x(1) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(7) x(6) y(6) x(7))
		deAllocateL8
		genFastCall(<P: 469> 17)
		endDefinition(50728)
lbl(50862)	definition(x(9) 51025 pid('Alt' 11 pos('./cp/Search.oz' 154 2) nil 12) <P: 471> [y(188) y(179)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 50908)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 470> 19)
lbl(50908)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(10) y(8))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		move(y(7) x(6))
		move(x(9) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<P: 470> 18)
		move(y(9) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 50977)
		unify(y(8) y(9))
		deAllocateL
		return
lbl(50977)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(10) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		moveMoveYXYX(y(9) x(9) y(8) x(10))
		deAllocateL
		genFastCall(<P: 471> 23)
		endDefinition(50862)
lbl(51025)	definition(x(9) 51152 pid('OneBoundR' 9 pos('./cp/Search.oz' 165 2) nil 13) <P: 470> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 51146)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51133 [onScalar(failed 51041) onScalar(succeeded 51045) onRecord(alternatives 1 51049)]))
lbl(51041)	unify(x(8) x(7))
		return
lbl(51045)	unify(x(8) x(1))
		return
lbl(51049)	getVariable(x(9))
		putConstant(0 x(10))
		testLE(x(4) x(10) x(11) 51063)
		getLiteral(cut x(8))
		return
lbl(51063)	testBI('==' [x(5) x(6)]#[x(10)] 51094)
		inlineMinus1(x(4) x(10))
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(10) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 469> 17)
lbl(51094)	inlineMinus1(x(4) x(11))
		inlinePlus1(x(5) x(12))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		move(x(7) x(9))
		move(x(12) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 471> 23)
lbl(51133)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51146)	getLiteral(nil x(8))
		return
		endDefinition(51025)
lbl(51152)	definition(x(9) 51240 pid('OneIterR' 5 pos('./cp/Search.oz' 180 8) nil 10) <P: 472> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 51234)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(9)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(9) x(1))
		move(x(9) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(3) x(6))
		putConstant(nil x(3))
		putConstant(nil x(7))
		createVariableMove(y(5) x(8))
		genFastCall(<P: 470> 18)
		testLiteral(y(5) cut 51229)
lbl(51209)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 472> 11)
lbl(51229)	unify(y(4) y(5))
		deAllocateL6
		return
lbl(51234)	getLiteral(nil x(4))
		return
		endDefinition(51152)
lbl(51240)	definition(x(9) 51299 pid('OneBound' 5 pos('./cp/Search.oz' 191 2) nil 9) <P: 473> [y(183)])
		allocateL5
		callBI('Space.new' [x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(4))
		moveMoveYXYX(y(1) x(5) y(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 470> 19)
		endDefinition(51240)
lbl(51299)	definition(x(9) 51346 pid('OneIter' 4 pos('./cp/Search.oz' 197 2) nil 5) <P: 474> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		moveMoveYXYX(y(3) x(0) y(1) x(3))
		move(y(2) x(4))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 472> 11)
		endDefinition(51299)
lbl(51346)	definition(x(9) 51461 pid('Probe' 3 pos('./cp/Search.oz' 203 2) nil 6) <P: 475> [y(184) y(188) y(185)])
		testBI('IsDet' [x(2)]#[x(3)] 51362)
		putConstant(killed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(51362)	callBI('Space.ask' [x(0)]#[x(3)])
		match(x(3) ht(51446 [onScalar(failed 51368) onScalar(succeeded 51369) onRecord(alternatives 1 51378)]))
lbl(51368)	return
lbl(51369)	putRecord(succeeded 1 x(1))
		setValue(x(0))
		callBI('Exception.raise' [x(1)]#nil)
lbl(51378)	getVariable(x(3))
		testNumber(x(1) 0 51396)
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		putConstant(0 x(1))
		genFastCall(<P: 475> 7)
lbl(51396)	allocateL3
		callBI('Space.clone' [x(0)]#[x(4)])
		putRecord('#' 2 x(5))
		setConstant(2)
		setValue(x(3))
		callBI('Space.commit' [x(0) x(5)]#nil)
		inlineMinus1(x(1) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(x(3) x(1))
		genFastCall(<P: 475> 6)
		move(y(2) x(0))
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 475> 7)
lbl(51446)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(51346)
lbl(51461)	definition(x(9) 51520 pid('Iterate' 4 pos('./cp/Search.oz' 220 2) nil 5) <P: 476> [y(185)])
		testBI('==' [x(2) x(1)]#[x(4)] 51477)
		move(x(3) x(2))
		genFastCall(<P: 475> 7)
lbl(51477)	allocateL4
		callBI('Space.clone' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(y(3) x(2))
		genFastCall(<P: 475> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 476> 9)
		endDefinition(51461)
lbl(51520)	definition(x(9) 51561 pid('LDS' 3 pos('./cp/Search.oz' 226 2) nil 4) <P: 477> [y(183)])
		allocateL3
		callBI('Space.new' [x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		move(y(2) x(3))
		putConstant(0 x(1))
		deAllocateL3
		genFastCall(<P: 476> 9)
		endDefinition(51520)
lbl(51561)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] y(100))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(y(145))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
lbl(51589)	definition(x(0) 51633 pid('OneModule.depth' 4 pos('./cp/Search.oz' 233 32) nil 4) <P: 478> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 51614)
lbl(51609)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51614)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(51589)
lbl(51633)	unify(x(0) y(145))
lbl(51636)	definition(x(0) 51676 pid('OneModule.depthP' 4 pos('./cp/Search.oz' 239 18) nil 4) <P: 479> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 51661)
lbl(51656)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51661)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(51636)
lbl(51676)	unify(x(0) x(12))
lbl(51679)	definition(x(0) 51714 pid('OneModule.depthS' 4 pos('./cp/Search.oz' 245 18) nil 4) <P: 480> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 51704)
lbl(51699)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51704)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(51679)
lbl(51714)	unify(x(0) x(13))
lbl(51717)	definition(x(0) 51765 pid('OneModule.bound' 5 pos('./cp/Search.oz' 252 18) nil 5) <P: 481> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(51746 [onScalar(nil 51736) onScalar(cut 51741)]))
lbl(51736)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51741)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(51746)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(51717)
lbl(51765)	unify(x(0) x(9))
lbl(51768)	definition(x(0) 51812 pid('OneModule.boundP' 5 pos('./cp/Search.oz' 259 18) nil 5) <P: 482> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(51797 [onScalar(nil 51787) onScalar(cut 51792)]))
lbl(51787)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51792)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(51797)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(51768)
lbl(51812)	unify(x(0) x(10))
lbl(51815)	definition(x(0) 51854 pid('OneModule.boundS' 5 pos('./cp/Search.oz' 266 18) nil 5) <P: 483> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(51844 [onScalar(nil 51834) onScalar(cut 51839)]))
lbl(51834)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51839)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(51844)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(51815)
lbl(51854)	unify(x(0) x(11))
lbl(51857)	definition(x(0) 51901 pid('OneModule.iter' 4 pos('./cp/Search.oz' 274 18) nil 4) <P: 484> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 51882)
lbl(51877)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51882)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(51857)
lbl(51901)	unify(x(0) x(14))
lbl(51904)	definition(x(0) 51944 pid('OneModule.iterP' 4 pos('./cp/Search.oz' 280 18) nil 4) <P: 485> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 51929)
lbl(51924)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51929)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(51904)
lbl(51944)	unify(x(0) x(15))
lbl(51947)	definition(x(0) 51982 pid('OneModule.iterS' 4 pos('./cp/Search.oz' 286 18) nil 4) <P: 486> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 51972)
lbl(51967)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(51972)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(51947)
lbl(51982)	unify(x(0) x(16))
lbl(51985)	definition(x(0) 52050 pid('OneModule.lds' 4 pos('./cp/Search.oz' 293 18) nil 4) <P: 487> [y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(52031)
		match(x(0) ht(52028 [onScalar(killed 52007) onRecord(succeeded 1 52012)]))
lbl(52007)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(52012)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.merge' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL4
		return
lbl(52028)	callBI('Exception.raise' [x(0)]#nil)
lbl(52031)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(51985)
lbl(52050)	unify(x(0) x(17))
lbl(52053)	definition(x(0) 52114 pid('OneModule.ldsP' 4 pos('./cp/Search.oz' 299 18) nil 4) <P: 488> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(52095)
		match(x(0) ht(52092 [onScalar(killed 52075) onRecord(succeeded 1 52080)]))
lbl(52075)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(52080)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL4
		genFastCall(<P: 460> 5)
lbl(52092)	callBI('Exception.raise' [x(0)]#nil)
lbl(52095)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(52053)
lbl(52114)	unify(x(0) x(18))
lbl(52117)	definition(x(0) 52176 pid('OneModule.ldsS' 4 pos('./cp/Search.oz' 305 18) nil 4) <P: 489> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(52157)
		match(x(0) ht(52154 [onScalar(killed 52139) onRecord(succeeded 1 52144)]))
lbl(52139)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(52144)	getVariable(x(0))
		getList(y(3))
		unifyValue(x(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(52154)	callBI('Exception.raise' [x(0)]#nil)
lbl(52157)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(52117)
lbl(52176)	unify(x(0) x(19))
lbl(52179)	definition(x(9) 52289 pid('AllNR' 5 pos('./cp/Search.oz' 320 6) nil 8) <P: 490> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 52283)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(52270 [onScalar(failed 52195) onScalar(succeeded 52199) onRecord(alternatives 1 52214)]))
lbl(52195)	unify(x(4) x(3))
		return
lbl(52199)	getList(x(4))
		unifyVariable(x(4))
		unifyValue(x(3))
		move(x(1) x(0))
		move(x(4) x(1))
		tailCall(x(2) 2)
lbl(52214)	allocateL5
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 490> 10)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 490> 11)
lbl(52270)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(329)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(52283)	unify(x(4) x(3))
		return
		endDefinition(52179)
lbl(52289)	definition(x(9) 52413 pid('AltCopy' 8 pos('./cp/Search.oz' 335 2) nil 10) <P: 491> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 52326)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 492> 19)
lbl(52326)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(x(7) x(8))
		putConstant(1 x(4))
		createVariableMove(y(7) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		move(y(7) x(7))
		deAllocateL8
		genFastCall(<P: 491> 17)
		endDefinition(52289)
lbl(52413)	definition(x(9) 52567 pid('Alt' 11 pos('./cp/Search.oz' 346 2) nil 12) <P: 493> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 52459)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 492> 19)
lbl(52459)	allocateL(13)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		moveMoveXYXY(x(8) y(8) x(9) y(9))
		moveMoveXYYX(x(10) y(10) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(11) x(2))
		genFastCall(<P: 462> 6)
		putList(x(3))
		setValue(y(1))
		setValue(y(5))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(6) x(4))
		moveMoveYXYX(y(7) x(5) y(8) x(6))
		move(y(10) x(8))
		createVariableMove(y(12) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(11) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		moveMoveYXYX(y(7) x(7) y(8) x(8))
		moveMoveYXYX(y(9) x(9) y(12) x(10))
		deAllocateL
		genFastCall(<P: 493> 23)
		endDefinition(52413)
lbl(52567)	definition(x(9) 52687 pid('AllR' 9 pos('./cp/Search.oz' 356 2) nil 12) <P: 492> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 52681)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(52668 [onScalar(failed 52583) onScalar(succeeded 52587) onRecord(alternatives 1 52602)]))
lbl(52583)	unify(x(8) x(7))
		return
lbl(52587)	getList(x(8))
		unifyVariable(x(2))
		unifyValue(x(7))
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(6) 2)
lbl(52602)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 52632)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 491> 17)
lbl(52632)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 493> 23)
lbl(52668)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(365)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(52681)	unify(x(8) x(7))
		return
		endDefinition(52567)
lbl(52687)	definition(x(0) 52766 pid('All' 4 pos('./cp/Search.oz' 371 6) nil 9) <P: 494> [y(183) y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 52737)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(52737)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(52687)
lbl(52766)	definition(x(1) 52845 pid('AllS' 4 pos('./cp/Search.oz' 379 6) nil 9) <P: 495> [y(183) x(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 52816)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(52816)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(52766)
lbl(52845)	definition(x(2) 52924 pid('AllP' 4 pos('./cp/Search.oz' 387 6) nil 9) <P: 496> [y(183) x(8)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 52895)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(52895)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(52845)
lbl(52924)	definition(x(7) 53072 pid('BABNR' 5 pos('./cp/Search.oz' 404 2) nil 8) <P: 497> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 53066)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(53053 [onScalar(failed 52940) onScalar(succeeded 52944) onRecord(alternatives 1 52948)]))
lbl(52940)	unify(x(4) x(3))
		return
lbl(52944)	unify(x(4) x(1))
		return
lbl(52948)	allocateL6
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(6) y(4))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 497> 10)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 53016)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(53016)	testLiteral(y(5) nil 53025)
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(53025)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(53053)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(416)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53066)	getLiteral(nil x(4))
		return
		endDefinition(52924)
lbl(53072)	definition(x(7) 53277 pid('AltCopy' 8 pos('./cp/Search.oz' 422 5) nil 10) <P: 498> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 53109)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 499> 19)
lbl(53109)	allocateL9
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(y(6) x(7))
		putConstant(1 x(4))
		createVariableMove(y(8) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(8) x(0) y(6) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 53208)
		move(y(1) x(0))
		inlinePlus1(x(0) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(6) x(6) y(7) x(7))
		deAllocateL9
		genFastCall(<P: 498> 17)
lbl(53208)	testLiteral(y(8) nil 53217)
		getLiteral(nil y(7))
		deAllocateL9
		return
lbl(53217)	move(y(1) x(1))
		inlinePlus1(x(1) x(3))
		putRecord('#' 2 x(1))
		setValue(x(3))
		setValue(y(2))
		move(y(3) x(2))
		callBI('Space.commit' [x(2) x(1)]#nil)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(8) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(8) x(7) y(7) x(8))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<P: 499> 19)
		endDefinition(53072)
lbl(53277)	definition(x(7) 53522 pid('Alt' 11 pos('./cp/Search.oz' 440 5) nil 12) <P: 500> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 53323)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 499> 19)
lbl(53323)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		moveMoveYXYX(y(7) x(6) y(8) x(7))
		createVariableMove(y(10) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(10) x(0) y(8) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 53442)
		move(y(1) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		moveMoveYXYX(y(7) x(8) y(8) x(9))
		move(y(9) x(10))
		deAllocateL
		genFastCall(<P: 500> 23)
lbl(53442)	testLiteral(y(10) nil 53451)
		getLiteral(nil y(9))
		deAllocateL
		return
lbl(53451)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(3))
		putRecord('#' 2 x(0))
		setValue(x(3))
		setValue(y(2))
		move(y(5) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(10) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(4))
		moveMoveYXYX(y(6) x(5) y(7) x(6))
		moveMoveYXYX(y(10) x(7) y(9) x(8))
		putConstant(nil x(3))
		deAllocateL
		genFastCall(<P: 499> 19)
		endDefinition(53277)
lbl(53522)	definition(x(7) 53631 pid('BABR' 9 pos('./cp/Search.oz' 458 5) nil 12) <P: 499> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 53625)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(53612 [onScalar(failed 53538) onScalar(succeeded 53542) onRecord(alternatives 1 53546)]))
lbl(53538)	unify(x(8) x(7))
		return
lbl(53542)	unify(x(8) x(1))
		return
lbl(53546)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 53576)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 498> 17)
lbl(53576)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 500> 23)
lbl(53612)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(467)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53625)	getLiteral(nil x(8))
		return
		endDefinition(53522)
lbl(53631)	definition(x(7) 53710 pid('BestBAB' 5 pos('./cp/Search.oz' 474 2) nil 9) <P: 501> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 53682)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 497> 11)
lbl(53682)	move(y(4) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(2) x(4) y(2) x(5))
		moveMoveYXYX(y(1) x(6) y(3) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 499> 19)
		endDefinition(53631)
lbl(53710)	definition(x(7) 53786 pid('RestartNR' 5 pos('./cp/Search.oz' 484 2) nil 6) <P: 502> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 53780)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(5) nil 53752)
lbl(53747)	unify(y(3) y(2))
		deAllocateL6
		return
lbl(53752)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 502> 11)
lbl(53780)	getLiteral(nil x(4))
		return
		endDefinition(53710)
lbl(53786)	definition(x(7) 53875 pid('RestartR' 6 pos('./cp/Search.oz' 494 2) nil 7) <P: 503> [y(185)])
		testBI('IsFree' [x(0)]#[x(6)] 53869)
		allocateL7
		callBI('Space.clone' [x(1)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(1) x(2))
		move(y(3) x(5))
		putConstant(nil x(3))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 53839)
lbl(53834)	unify(y(4) y(2))
		deAllocateL7
		return
lbl(53839)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL7
		genFastCall(<P: 503> 13)
lbl(53869)	getLiteral(nil x(5))
		return
		endDefinition(53786)
lbl(53875)	definition(x(7) 53945 pid('BestRestart' 5 pos('./cp/Search.oz' 504 2) nil 6) <P: 504> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 53926)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 502> 11)
lbl(53926)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 503> 13)
		endDefinition(53875)
lbl(53945)	putRecord(best [bab babP babS restart restartP restartS] y(187))
		setVariable(y(192))
		setVariable(x(7))
		setVariable(x(8))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
lbl(53961)	definition(x(3) 54005 pid('BestModule.bab' 5 pos('./cp/Search.oz' 516 34) nil 5) <P: 505> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 53986)
lbl(53981)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(53986)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(53961)
lbl(54005)	unify(x(3) y(192))
lbl(54008)	definition(x(3) 54048 pid('BestModule.babP' 5 pos('./cp/Search.oz' 522 13) nil 5) <P: 506> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 54033)
lbl(54028)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(54033)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(54008)
lbl(54048)	unify(x(3) x(7))
lbl(54051)	definition(x(3) 54086 pid('BestModule.babS' 5 pos('./cp/Search.oz' 528 13) nil 5) <P: 507> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 54076)
lbl(54071)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(54076)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(54051)
lbl(54086)	unify(x(3) x(8))
lbl(54089)	definition(x(3) 54133 pid('BestModule.restart' 5 pos('./cp/Search.oz' 535 13) nil 5) <P: 508> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 54114)
lbl(54109)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(54114)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(54089)
lbl(54133)	unify(x(3) x(9))
lbl(54136)	definition(x(3) 54176 pid('BestModule.restartP' 5 pos('./cp/Search.oz' 541 13) nil 5) <P: 509> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 54161)
lbl(54156)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(54161)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(54136)
lbl(54176)	unify(x(3) x(10))
lbl(54179)	definition(x(3) 54214 pid('BestModule.restartS' 5 pos('./cp/Search.oz' 547 13) nil 5) <P: 510> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 54204)
lbl(54199)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(54204)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(54179)
lbl(54214)	unify(x(3) x(11))
lbl(54217)	definition(x(7) 54285 pid('Recompute' 2 pos('./cp/Search.oz' 559 2) nil 4) <P: 511> [y(179) y(185) y(188)])
		shallowGuard(54272)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(54231)	shallowThen
		testBI('IsSpace' [x(2)]#[x(0)] 54243)
		callBI('Space.clone' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(54243)	allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genFastCall(<P: 511> 4)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(0) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		deAllocateL2
		return
lbl(54272)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(54217)
lbl(54285)	putRecord('attr' [backtrack cur isStopped prev rd sol stack] x(7))
		setConstant(false)
		setConstant(<U: ooFreeFlag>)
		setConstant(false)
		setConstant(nil)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		setConstant(nil)
		putRecord('feat' [manager mrd order] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(54313)	definition(x(8) 54373 pid('ReClass,init/fast' 3 pos('./cp/Search.oz' 572 5) nil 4) <P: 512> [y(183)])
		callBI('Space.new' [x(0)]#[x(3)])
		inlineAssign(cur x(3) cache)
		inlineAssign(rd x(2) cache)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		putConstant(false x(0))
		inlineAssign(backtrack x(0) cache)
		getSelf(x(0))
		inlineDot(x(0) mrd x(3) cache)
		unify(x(3) x(2))
		getSelf(x(0))
		inlineDot(x(0) order x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(54313)
lbl(54373)	definition(x(9) 54414 pid('ReClass,init/slow' 1 pos('./cp/Search.oz' 572 5) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 512> 7)
		endDefinition(54373)
lbl(54414)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(54424)	definition(x(8) 54441 pid('ReClass,stop/fast' 0 pos('./cp/Search.oz' 581 5) nil 1) <P: 513> nil)
		putConstant(true x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(54424)
lbl(54441)	definition(x(9) 54455 pid('ReClass,stop/slow' 1 pos('./cp/Search.oz' 581 5) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 513> 1)
		endDefinition(54441)
lbl(54455)	putRecord('#' [1 2 fast] x(11))
		setConstant(stop)
		setValue(x(9))
		setValue(x(8))
lbl(54465)	definition(x(8) 54482 pid('ReClass,resume/fast' 0 pos('./cp/Search.oz' 585 5) nil 1) <P: 514> nil)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(54465)
lbl(54482)	definition(x(9) 54496 pid('ReClass,resume/slow' 1 pos('./cp/Search.oz' 585 5) nil 1) unit nil)
		getLiteral(resume x(0))
		genFastCall(<P: 514> 1)
		endDefinition(54482)
lbl(54496)	putRecord('#' [1 2 fast] x(12))
		setConstant(resume)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(208))
lbl(54508)	definition(x(8) 54564 pid('ReClass,last/fast' 1 pos('./cp/Search.oz' 589 5) nil 3) <P: 515> [y(208)])
		allocateL2
		move(x(0) y(0))
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(next x(2) 1 cache)
		match(y(1) ht(54547 [onScalar(stopped 54532) onScalar(nil 54537)]))
lbl(54532)	getLiteral(stopped y(0))
		deAllocateL2
		return
lbl(54537)	inlineAt(prev x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(54547)	move(y(1) x(0))
		inlineAssign(prev x(0) cache)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true last true 1) 0)
		endDefinition(54508)
lbl(54564)	definition(x(9) 54590 pid('ReClass,last/slow' 1 pos('./cp/Search.oz' 589 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 515> 3)
		endDefinition(54564)
lbl(54590)	putRecord('#' [1 2 fast] x(13))
		setConstant(last)
		setValue(x(9))
		setValue(x(8))
lbl(54600)	definition(x(8) 54657 pid('ReClass,next/fast' 1 pos('./cp/Search.oz' 597 5) nil 3) <P: 516> [y(208)])
		allocateL1
		inlineAt(backtrack x(1) cache)
		move(x(0) y(0))
		testBool(x(1) 54643 54632)
		genCall(gci(g(0) true backtrack false 0) 0)
		putConstant(false x(1))
		inlineAssign(backtrack x(1) cache)
		branch(54643)
lbl(54632)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(598)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(54643)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(explore x(2) 1 cache)
		endDefinition(54600)
lbl(54657)	definition(x(9) 54683 pid('ReClass,next/slow' 1 pos('./cp/Search.oz' 597 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 516> 3)
		endDefinition(54657)
lbl(54683)	putRecord('#' [1 2 fast] x(14))
		setConstant(next)
		setValue(x(9))
		setValue(x(8))
lbl(54693)	definition(x(8) 54817 pid('ReClass,push/fast' 1 pos('./cp/Search.oz' 606 5) nil 7) <P: 517> [y(185)])
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAt(rd x(2) cache)
		testBI('==' [x(1) x(2)]#[x(3)] 54770)
		putConstant(1 x(1))
		inlineAssign(rd x(1) cache)
		inlineAt(sol x(1) cache)
		inlineAt(cur x(2) cache)
		callBI('Space.clone' [x(2)]#[x(3)])
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(5))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(6))
		setValue(x(3))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		inlineAssign(stack x(4) cache)
		return
lbl(54770)	inlineAt(rd x(1) cache)
		inlinePlus1(x(1) x(2))
		inlineAssign(rd x(2) cache)
		inlineAt(sol x(1) cache)
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(4))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(x(2))
		inlineAssign(stack x(3) cache)
		return
		endDefinition(54693)
lbl(54817)	definition(x(9) 54843 pid('ReClass,push/slow' 1 pos('./cp/Search.oz' 606 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 517> 3)
		endDefinition(54817)
lbl(54843)	putRecord('#' [1 2 fast] x(15))
		setConstant(push)
		setValue(x(9))
		setValue(x(8))
lbl(54853)	definition(x(8) 55150 pid('ReClass,backtrack/fast' 0 pos('./cp/Search.oz' 616 5) nil 7) <P: 518> [y(208) y(179) y(188)])
		inlineAt(stack x(0) cache)
		match(x(0) ht(55135 [onScalar(nil 54867) onRecord('|' 2 54876)]))
lbl(54867)	putConstant(false x(0))
		inlineAssign(cur x(0) cache)
		return
lbl(54876)	getVarVar(x(0) x(1))
		testRecord(x(0) '#' 3 55127)
lbl(54884)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testBI('==' [x(0) x(2)]#[x(4)] 54914)
		inlineAssign(stack x(1) cache)
		inlineAt(rd x(0) cache)
		inlineMinus1(x(0) x(1))
		inlineAssign(rd x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(54914)	allocateL4
		inlinePlus1(x(0) x(4))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		testBI('==' [x(2) x(4)]#[x(6)] 54996)
lbl(54938)	testBI('IsSpace' [x(0)]#[x(6)] 54996)
lbl(54942)	callBI('Space.commit' [x(0) x(2)]#nil)
		inlineAssign(stack x(5) cache)
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAssign(rd x(1) cache)
		inlineAssign(cur x(0) cache)
		inlineAt(sol x(1) cache)
		testBI('==' [x(1) x(3)]#[x(2)] 54979)
		deAllocateL4
		return
lbl(54979)	getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		deAllocateL4
		genFastCall(<P: 463> 7)
lbl(54996)	inlineAt(sol x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 55050)
		putRecord('#' 3 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(2))
		putList(x(2))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(stack x(2) cache)
		inlineAt(stack x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 511> 4)
		move(y(0) x(0))
		inlineAssign(cur x(0) cache)
		deAllocateL4
		return
lbl(55050)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 511> 4)
		move(y(2) x(0))
		inlineAssign(cur x(0) cache)
		inlineAt(cur x(0) cache)
		putRecord('#' 2 x(1))
		setValue(y(3))
		setValue(y(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		inlineAt(cur x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		genFastCall(<P: 463> 6)
		getSelf(x(0))
		inlineDot(x(0) mrd x(0) cache)
		inlineAssign(rd x(0) cache)
		move(y(0) x(0))
		inlineAssign(stack x(0) cache)
		deAllocateL4
		return
lbl(55127)	inlineAssign(stack x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(55135)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(646)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(54853)
lbl(55150)	definition(x(9) 55164 pid('ReClass,backtrack/slow' 1 pos('./cp/Search.oz' 616 5) nil 1) unit nil)
		getLiteral(backtrack x(0))
		genFastCall(<P: 518> 1)
		endDefinition(55150)
lbl(55164)	putRecord('#' [1 2 fast] x(16))
		setConstant(backtrack)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 7 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		moveMoveXYXY(x(0) y(209) x(1) y(232))
		move(x(2) y(233))
		move(x(8) x(1))
		move(x(7) x(2))
		move(y(208) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('ReClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(208))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(234))
lbl(55235)	definition(x(7) 55355 pid('All,explore/fast' 1 pos('./cp/Search.oz' 653 5) nil 3) <P: 519> [y(184) y(234) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 55259 55342)
		getLiteral(stopped x(0))
		return
lbl(55259)	testLiteral(x(1) false 55267)
		getLiteral(nil x(0))
		return
lbl(55267)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(55329 [onScalar(failed 55273) onScalar(succeeded 55287) onRecord(alternatives 1 55299)]))
lbl(55273)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(55287)	unify(x(0) x(1))
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(55299)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(1) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(55329)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(665)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(55342)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(656)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(55235)
lbl(55355)	definition(x(8) 55381 pid('All,explore/slow' 1 pos('./cp/Search.oz' 653 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 519> 3)
		endDefinition(55355)
lbl(55381)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(234) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('All' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(208))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(235))
lbl(55426)	definition(x(7) 55551 pid('Best,explore/fast' 1 pos('./cp/Search.oz' 670 5) nil 3) <P: 520> [y(184) y(235) y(208) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 55450 55538)
		getLiteral(stopped x(0))
		return
lbl(55450)	testLiteral(x(1) false 55458)
		getLiteral(nil x(0))
		return
lbl(55458)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(55525 [onScalar(failed 55464) onScalar(succeeded 55478) onRecord(alternatives 1 55495)]))
lbl(55464)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(55478)	unify(x(0) x(1))
		inlineAssign(sol x(0) cache)
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(55495)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(2) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(55525)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(682)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(55538)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(673)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(55426)
lbl(55551)	definition(x(8) 55577 pid('Best,explore/slow' 1 pos('./cp/Search.oz' 670 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 520> 3)
		endDefinition(55551)
lbl(55577)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(235) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('Best' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(55608)	definition(x(7) 55617 pid('Dummy' 1 pos('./cp/Search.oz' 687 6) nil 1) <P: 521> nil)
		return
		endDefinition(55608)
lbl(55617)	putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: MyAgent> <N: RCD>] x(2))
		setValue(x(7))
		setConstant(1)
lbl(55637)	definition(x(8) 55761 pid('SearchObject,script' 1 pos('./cp/Search.oz' 700 2) nil 5) unit [y(235) y(234)])
		allocateL3
		inlineDot(x(0) 1 x(3) cache)
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(55757 x(1))
		inlineAt(<N: RCD> x(1) cache)
		putConstant(rcd x(2))
		callBI('CondSelect' [x(0) x(2) x(1)]#[x(4)])
		move(x(4) y(0))
		createVariable(y(1))
		putConstant(2 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 55713)
		inlineDot(x(0) 2 x(1) cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(2)])
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
		branch(55740)
lbl(55713)	move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		putConstant(false x(1))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
lbl(55740)	move(y(1) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<N: RCD> x(0) cache)
		return
lbl(55757)	deAllocateL3
		return
		endDefinition(55637)
lbl(55761)	putList(x(9))
		setConstant(script)
		setValue(x(8))
lbl(55767)	definition(x(8) 55812 pid('SearchObject,Next/fast' 1 pos('./cp/Search.oz' 711 2) nil 2) <P: 522> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(55808 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(next y(1) 1 cache)
		return
lbl(55808)	deAllocateL2
		return
		endDefinition(55767)
lbl(55812)	definition(x(10) 55838 pid('SearchObject,Next/slow' 1 pos('./cp/Search.oz' 711 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 522> 3)
		endDefinition(55812)
lbl(55838)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Next>)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(184))
lbl(55850)	definition(x(8) 55897 pid('SearchObject,next/fast' 1 pos('./cp/Search.oz' 715 2) nil 3) <P: 523> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 55890)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(55890)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(55850)
lbl(55897)	definition(x(10) 55923 pid('SearchObject,next/slow' 1 pos('./cp/Search.oz' 715 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 523> 3)
		endDefinition(55897)
lbl(55923)	putRecord('#' [1 2 fast] x(12))
		setConstant(next)
		setValue(x(10))
		setValue(x(8))
lbl(55933)	definition(x(8) 55977 pid('SearchObject,nextS/fast' 1 pos('./cp/Search.oz' 723 2) nil 3) <P: 524> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 55970)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(55970)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(55933)
lbl(55977)	definition(x(10) 56003 pid('SearchObject,nextS/slow' 1 pos('./cp/Search.oz' 723 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 524> 3)
		endDefinition(55977)
lbl(56003)	putRecord('#' [1 2 fast] x(13))
		setConstant(nextS)
		setValue(x(10))
		setValue(x(8))
lbl(56013)	definition(x(8) 56053 pid('SearchObject,nextP/fast' 1 pos('./cp/Search.oz' 731 2) nil 2) <P: 525> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 56046)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(56046)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(56013)
lbl(56053)	definition(x(10) 56079 pid('SearchObject,nextP/slow' 1 pos('./cp/Search.oz' 731 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 525> 3)
		endDefinition(56053)
lbl(56079)	putRecord('#' [1 2 fast] x(14))
		setConstant(nextP)
		setValue(x(10))
		setValue(x(8))
lbl(56089)	definition(x(8) 56134 pid('SearchObject,Last/fast' 1 pos('./cp/Search.oz' 739 2) nil 2) <P: 526> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(56130 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(last y(1) 1 cache)
		return
lbl(56130)	deAllocateL2
		return
		endDefinition(56089)
lbl(56134)	definition(x(10) 56160 pid('SearchObject,Last/slow' 1 pos('./cp/Search.oz' 739 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 526> 3)
		endDefinition(56134)
lbl(56160)	putRecord('#' [1 2 fast] x(15))
		setConstant(<N: Last>)
		setValue(x(10))
		setValue(x(8))
lbl(56170)	definition(x(8) 56217 pid('SearchObject,last/fast' 1 pos('./cp/Search.oz' 743 2) nil 3) <P: 527> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 56210)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(56210)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(56170)
lbl(56217)	definition(x(10) 56243 pid('SearchObject,last/slow' 1 pos('./cp/Search.oz' 743 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 527> 3)
		endDefinition(56217)
lbl(56243)	putRecord('#' [1 2 fast] x(16))
		setConstant(last)
		setValue(x(10))
		setValue(x(8))
lbl(56253)	definition(x(8) 56297 pid('SearchObject,lastS/fast' 1 pos('./cp/Search.oz' 751 2) nil 3) <P: 528> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 56290)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(56290)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(56253)
lbl(56297)	definition(x(10) 56323 pid('SearchObject,lastS/slow' 1 pos('./cp/Search.oz' 751 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 528> 3)
		endDefinition(56297)
lbl(56323)	putRecord('#' [1 2 fast] x(17))
		setConstant(lastS)
		setValue(x(10))
		setValue(x(8))
lbl(56333)	definition(x(8) 56373 pid('SearchObject,lastP/fast' 1 pos('./cp/Search.oz' 759 2) nil 2) <P: 529> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 56366)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(56366)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(56333)
lbl(56373)	definition(x(10) 56399 pid('SearchObject,lastP/slow' 1 pos('./cp/Search.oz' 759 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 529> 3)
		endDefinition(56373)
lbl(56399)	putRecord('#' [1 2 fast] x(18))
		setConstant(lastP)
		setValue(x(10))
		setValue(x(8))
lbl(56409)	definition(x(8) 56428 pid('SearchObject,stop/fast' 0 pos('./cp/Search.oz' 767 2) nil 1) <P: 530> nil)
		inlineAt(<N: MyAgent> x(0) cache)
		tailSendMsg(stop x(0) 0 cache)
		endDefinition(56409)
lbl(56428)	definition(x(10) 56442 pid('SearchObject,stop/slow' 1 pos('./cp/Search.oz' 767 2) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 530> 1)
		endDefinition(56428)
lbl(56442)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(10))
		setValue(x(8))
lbl(56452)	definition(x(8) 56489 pid('SearchObject,clear/fast' 0 pos('./cp/Search.oz' 771 2) nil 1) <P: 531> [x(7)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(56486 x(0))
		inlineAt(<N: MyAgent> x(0) cache)
		sendMsg(stop x(0) 0 cache)
		move(g(0) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		return
lbl(56486)	return
		endDefinition(56452)
lbl(56489)	definition(x(7) 56503 pid('SearchObject,clear/slow' 1 pos('./cp/Search.oz' 771 2) nil 1) unit nil)
		getLiteral(clear x(0))
		genFastCall(<P: 531> 1)
		endDefinition(56489)
lbl(56503)	putRecord('#' [1 2 fast] x(10))
		setConstant(clear)
		setValue(x(7))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(10))
		move(y(184) x(6))
		putConstant('feat' x(3))
		putConstant('SearchObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(56551)	definition(x(4) 56570 pid('SearchOne' 2 pos('./cp/Search.oz' 784 3) nil 4) <P: 532> [y(145)])
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 478> 9)
		endDefinition(56551)
lbl(56570)	definition(x(5) 56589 pid('SearchAll' 2 pos('./cp/Search.oz' 788 3) nil 4) <P: 533> nil)
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 494> 9)
		endDefinition(56570)
lbl(56589)	definition(x(6) 56608 pid('SearchBest' 3 pos('./cp/Search.oz' 792 3) nil 5) <P: 534> [y(192)])
		move(x(2) x(4))
		putConstant(1 x(2))
		createVariable(x(3))
		genFastCall(<P: 505> 11)
		endDefinition(56589)
lbl(56608)	putRecord(base [all best one] x(7))
		setValue(x(5))
		setValue(x(6))
		setValue(x(4))
lbl(56618)	definition(x(2) 56665 pid('' 2 pos('./cp/Search.oz' 802 3) nil 2) <P: 535> [x(5) x(6) x(4) y(209) y(233) y(232) x(7) y(187) y(184) y(100)])
		putConstant(nil x(0))
lbl(56627)	definitionCopy(x(0) 56660 pid('/body' 0 pos('./cp/Search.oz' 802 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9)])
		getRecord('export' ['SearchAll' 'SearchBest' 'SearchOne' all allP allS base best object one] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		unifyValue(g(6))
		unifyValue(g(7))
		unifyValue(g(8))
		unifyValue(g(9))
		unifyValue(g(10))
		return
		endDefinition(56627)
lbl(56660)	tailCall(x(0) 0)
		endDefinition(56618)
lbl(56665)	putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		putRecord(record 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putRecord(best [bab babP babS restart restartP restartS] x(4))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putRecord(record 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putRecord(base [all best one] x(4))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putRecord(record 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putRecord('export' ['SearchAll' 'SearchBest' 'SearchOne' all allP allS base best object one] x(1))
		setValue(x(13))
		setValue(x(14))
		setValue(x(12))
		setValue(x(6))
		setValue(x(8))
		setValue(x(7))
		setValue(x(11))
		setValue(x(9))
		setValue(x(10))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(100) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(100) x(1))
		call(x(2) 2)
lbl(57124)	definition(x(2) 57200 pid('NewTagTest' 2 pos('./op/HtmlTable.oz' 25 3) nil 3) <P: 536> [y(2) y(165)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 159> 4)
lbl(57140)	definition(x(1) 57157 pid('' 2 pos('./op/HtmlTable.oz' 27 28) nil 2) unit nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(unit)
		return
		endDefinition(57140)
lbl(57157)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		putConstant(tags x(0))
		move(y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
lbl(57175)	definition(x(0) 57193 pid('' 2 pos('./op/HtmlTable.oz' 29 6) nil 4) unit [x(2)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(57175)
lbl(57193)	unify(x(0) y(0))
		deAllocateL3
		return
		endDefinition(57124)
lbl(57200)	putRecord(tags 91 x(0))
		setConstant(a)
		setConstant(abbr)
		setConstant(acronym)
		setConstant(address)
		setConstant(applet)
		setConstant(area)
		setConstant(b)
		setConstant(base)
		setConstant(basefont)
		setConstant(bdo)
		setConstant(big)
		setConstant(blockquote)
		setConstant('body')
		setConstant(br)
		setConstant(button)
		setConstant(caption)
		setConstant(center)
		setConstant(cite)
		setConstant(code)
		setConstant(col)
		setConstant(colgroup)
		setConstant(dd)
		setConstant(del)
		setConstant(dfn)
		setConstant(dir)
		setConstant('div')
		setConstant(dl)
		setConstant(dt)
		setConstant(em)
		setConstant(fieldset)
		setConstant(font)
		setConstant(form)
		setConstant(frame)
		setConstant(frameset)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(hr)
		setConstant(html)
		setConstant(i)
		setConstant(iframe)
		setConstant(img)
		setConstant(input)
		setConstant(ins)
		setConstant(isindex)
		setConstant(kbd)
		setConstant(label)
		setConstant(legend)
		setConstant(li)
		setConstant(link)
		setConstant(map)
		setConstant(menu)
		setConstant(meta)
		setConstant(noframes)
		setConstant(noscript)
		setConstant(object)
		setConstant(ol)
		setConstant(optgroup)
		setConstant(option)
		setConstant(p)
		setConstant(param)
		setConstant(pre)
		setConstant(q)
		setConstant(s)
		setConstant(samp)
		setConstant(script)
		setConstant(select)
		setConstant(small)
		setConstant(span)
		setConstant(strike)
		setConstant(strong)
		setConstant(style)
		setConstant(sub)
		setConstant(sup)
		setConstant(table)
		setConstant(tbody)
		setConstant(td)
		setConstant(textarea)
		setConstant(tfoot)
		setConstant(th)
		setConstant(thead)
		setConstant(title)
		setConstant(tr)
		setConstant(tt)
		setConstant(u)
		setConstant(ul)
		setConstant(var)
		createVariableMove(y(145) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 13 x(0))
		setConstant(area)
		setConstant(base)
		setConstant(basefont)
		setConstant(br)
		setConstant(col)
		setConstant(frame)
		setConstant(hr)
		setConstant(img)
		setConstant(input)
		setConstant(isindex)
		setConstant(link)
		setConstant(meta)
		setConstant(param)
		createVariableMove(y(184) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 19 x(0))
		setConstant(blockquote)
		setConstant('body')
		setConstant(center)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(html)
		setConstant(map)
		setConstant(menu)
		setConstant(p)
		setConstant(pre)
		setConstant(table)
		setConstant(td)
		setConstant(th)
		setConstant(title)
		createVariableMove(y(185) x(1))
		genFastCall(<P: 536> 4)
lbl(57476)	definition(x(4) 57533 pid('GetOptions' 4 pos('./op/Open.oz' 27 3) nil 7) <P: 537> nil)
		match(x(0) ht(57518 [onScalar(nil 57485) onRecord('|' 2 57492)]))
lbl(57485)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(57492)	getVarVar(x(4) x(5))
		testBI('IsInt' [x(4)]#[x(6)] 57511)
		inlinePlus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 537> 9)
lbl(57511)	unify(x(2) x(1))
		unify(x(0) x(3))
		return
lbl(57518)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(33)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(57476)
lbl(57533)	definition(x(4) 57595 pid('BuildOptions' 3 pos('./op/Open.oz' 36 3) nil 6) <P: 538> nil)
		match(x(0) ht(57580 [onScalar(nil 57542) onRecord('|' 2 57546)]))
lbl(57542)	getLiteral('' x(2))
		return
lbl(57546)	getVarVar(x(0) x(3))
		getRecord('#' 6 x(2))
		unifyLiteral(' ')
		unifyValue(x(0))
		unifyLiteral('="')
		unifyVariable(x(2))
		unifyLiteral('"')
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 538> 7)
lbl(57580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(57533)
lbl(57595)	putList(x(3))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(2))
		setConstant('S_IXGRP')
		setValue(x(3))
		putList(x(1))
		setConstant('S_IXUSR')
		setValue(x(2))
		putList(x(7))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(6))
		setConstant('S_IRGRP')
		setValue(x(7))
		putList(x(5))
		setConstant('S_IRUSR')
		setValue(x(6))
		putList(x(10))
		setConstant('S_IWOTH')
		setConstant(nil)
		putList(x(9))
		setConstant('S_IWGRP')
		setValue(x(10))
		putList(x(8))
		setConstant('S_IWUSR')
		setValue(x(9))
		putRecord(access [execute read write] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putList(x(12))
		setConstant('S_IXGRP')
		setConstant(nil)
		putList(x(13))
		setConstant('S_IRGRP')
		setConstant(nil)
		putList(x(14))
		setConstant('S_IWGRP')
		setConstant(nil)
		putRecord(access [execute read write] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(16))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(17))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(18))
		setConstant('S_IWOTH')
		setConstant(nil)
		putRecord(access [execute read write] x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(20))
		setConstant('S_IXUSR')
		setConstant(nil)
		putList(x(21))
		setConstant('S_IRUSR')
		setConstant(nil)
		putList(x(22))
		setConstant('S_IWUSR')
		setConstant(nil)
		putRecord(access [execute read write] x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		putRecord(map [all group others owner] x(4))
		setValue(x(0))
		setValue(x(11))
		setValue(x(15))
		setValue(x(19))
lbl(57755)	definition(x(5) 57853 pid('ModeToOS' 2 pos('./op/Open.oz' 77 6) nil 5) <P: 539> [y(159) x(4)])
lbl(57761)	definition(x(4) 57839 pid('' 4 pos('./op/Open.oz' 79 3) nil 5) unit [g(1)])
lbl(57767)	definition(x(4) 57825 pid('' 3 pos('./op/Open.oz' 81 7) nil 7) unit [g(0) x(0)])
		testLiteral(x(0) false 57781)
		getLiteral(false x(2))
		return
lbl(57781)	allocateL1
		move(x(2) y(0))
		move(g(0) x(3))
		move(g(1) x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 57818)
lbl(57795)	callBI('.' [x(3) x(4)]#[x(5)])
		testBI('HasFeature' [x(5) x(1)]#[x(6)] 57818)
lbl(57802)	callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(5) x(1)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		deAllocateL1
		genFastCall(<P: 21> 7)
lbl(57818)	getLiteral(false y(0))
		deAllocateL1
		return
		endDefinition(57767)
lbl(57825)	move(x(2) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(57761)
lbl(57839)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 173> 9)
		endDefinition(57755)
lbl(57853)	putRecord(map [append create exclude truncate] x(4))
		setConstant('O_APPEND')
		setConstant('O_CREAT')
		setConstant('O_EXCL')
		setConstant('O_TRUNC')
lbl(57865)	definition(x(5) 58049 pid('FlagsToOS' 2 pos('./op/Open.oz' 100 6) nil 4) <P: 540> [x(4)])
		allocateL5
lbl(57872)	definition(x(2) 57935 pid('' 3 pos('./op/Open.oz' 102 3) nil 5) unit [g(0)])
		testLiteral(x(0) false 57886)
		getLiteral(false x(2))
		return
lbl(57886)	allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) read 57901)
lbl(57896)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(57901)	testLiteral(x(1) write 57907)
		branch(57896)
lbl(57907)	move(g(0) x(3))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 57928)
		getList(y(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		deAllocateL2
		return
lbl(57928)	getLiteral(false y(1))
		deAllocateL2
		return
		endDefinition(57872)
lbl(57935)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(1))
		putConstant(read x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		testBool(y(3) 57981 58018)
lbl(57960)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 57981 58018)
lbl(57976)	getLiteral('O_RDWR' y(4))
		branch(58029)
lbl(57981)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 58002 58007)
		getLiteral('O_WRONLY' y(4))
		branch(58029)
lbl(58002)	getLiteral('O_RDONLY' y(4))
		branch(58029)
lbl(58007)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(111)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58018)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58029)	putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(57865)
lbl(58049)	putConstant(4096 x(4))
		putConstant(1024 x(5))
		putConstant(500 x(6))
lbl(58058)	definition(x(2) 65104 pid('' 2 pos('./op/Open.oz' 120 3) nil 4) <P: 541> [y(228) y(194) x(4) x(5) x(6) y(145) y(184) y(185)])
		putList(x(2))
		setPredicateRef(<Q: 542>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 543>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 544>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 545>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 546>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 547>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 548>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 549>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 550>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 551>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 552>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 553>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 554>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 555>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 556>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 557>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 558>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 559>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 560>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 561>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 562>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 563>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 564>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 565>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 566>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 567>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 568>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 569>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PID>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 570>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: WriteTagBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 571>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 572>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 573>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 574>)
		setValue(x(3))
lbl(58274)	definitionCopy(x(2) 65099 pid('/body' 0 pos('./op/Open.oz' 120 3) [once] 21) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL8
		move(g(0) x(0))
		inlineDot(x(0) 'OS' x(1) cache)
		inlineDot(x(0) 'Error' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Resolve' x(4) cache)
lbl(58308)	definition(x(7) 58342 pid('RaiseClosed' 2 pos('./op/Open.oz' 166 6) nil 3) <Q: 542> [g(1)])
		allocateL1
		putRecord(open 3 x(2))
		setConstant(alreadyClosed)
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(58308)
lbl(58342)	definition(x(7) 58421 pid('DoWrite' 4 pos('./op/Open.oz' 173 6) nil 6) <Q: 543> [x(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 58405)
lbl(58377)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 543> 9)
lbl(58405)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(58342)
lbl(58421)	putList(x(7))
		setConstant(0)
		setConstant(nil)
		putList(x(8))
		setValue(g(2))
		setConstant(nil)
		putList(x(9))
		setConstant(native)
		setConstant(nil)
		putRecord('attr' [<N: AtEnd> <N: Buff> <N: Last> <N: ReadDesc> <N: WriteDesc>] x(10))
		setConstant(false)
		setConstant(nil)
		setValue(x(7))
		setConstant(false)
		setConstant(false)
		putRecord('feat' [<N: ReadLock> <N: WriteLock>] x(7))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(58461)	definition(x(11) 58538 pid('DescClass,InitLocks/fast' 1 pos('./op/Open.oz' 193 2) nil 3) <Q: 544> [g(1)])
		allocateL1
		move(x(0) y(0))
		exHandler(58505)
		testRecord(x(0) 'failure' [debug] 58502)
lbl(58478)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(alreadyInitialized)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(58502)	callBI('Exception.raise' [x(0)]#nil)
lbl(58505)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		popEx
		deAllocateL1
		return
		endDefinition(58461)
lbl(58538)	definition(x(12) 58564 pid('DescClass,InitLocks/slow' 1 pos('./op/Open.oz' 193 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 544> 3)
		endDefinition(58538)
lbl(58564)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: InitLocks>)
		setValue(x(12))
		setValue(x(11))
		createVariable(y(0))
lbl(58576)	definition(x(11) 58622 pid('DescClass,dOpen/fast' 2 pos('./op/Open.oz' 203 2) nil 3) <Q: 545> [y(0)])
		allocateL2
		putRecord(dOpen 2 x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <N: InitLocks> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
		endDefinition(58576)
lbl(58622)	definition(x(12) 58657 pid('DescClass,dOpen/slow' 1 pos('./op/Open.oz' 203 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 545> 5)
		endDefinition(58622)
lbl(58657)	putRecord('#' [1 2 fast] x(14))
		setConstant(dOpen)
		setValue(x(12))
		setValue(x(11))
lbl(58667)	definition(x(11) 58716 pid('DescClass,getDesc/fast' 2 pos('./op/Open.oz' 209 2) nil 3) <Q: 546> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(58713 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58712 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		unify(x(0) x(1))
		return
lbl(58712)	return
lbl(58713)	return
		endDefinition(58667)
lbl(58716)	definition(x(12) 58751 pid('DescClass,getDesc/slow' 1 pos('./op/Open.oz' 209 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 546> 5)
		endDefinition(58716)
lbl(58751)	putRecord('#' [1 2 fast] x(15))
		setConstant(getDesc)
		setValue(x(12))
		setValue(x(11))
lbl(58761)	definition(x(11) 58874 pid('DescClass,CloseDescs/fast' 0 pos('./op/Open.oz' 218 2) nil 4) <Q: 547> [x(1)])
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 58871)
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) deSelect x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 58853)
lbl(58823)	move(g(0) x(0))
		inlineDot(x(0) deSelect x(2) cache)
		move(y(1) x(0))
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
lbl(58853)	putConstant(true x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		putConstant(true x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
lbl(58871)	return
		endDefinition(58761)
lbl(58874)	definition(x(12) 58888 pid('DescClass,CloseDescs/slow' 1 pos('./op/Open.oz' 218 2) nil 1) unit nil)
		getLiteral(<N: CloseDescs> x(0))
		genFastCall(<Q: 547> 1)
		endDefinition(58874)
lbl(58888)	putRecord('#' [1 2 fast] x(16))
		setConstant(<N: CloseDescs>)
		setValue(x(12))
		setValue(x(11))
lbl(58898)	definition(x(11) 58934 pid('DescClass,close/fast' 0 pos('./op/Open.oz' 232 2) nil 1) <Q: 548> [y(0)])
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58931 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58930 x(0))
		genCall(gci(g(0) true <N: CloseDescs> false 0) 0)
		return
lbl(58930)	return
lbl(58931)	return
		endDefinition(58898)
lbl(58934)	definition(x(12) 58948 pid('DescClass,close/slow' 1 pos('./op/Open.oz' 232 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 548> 1)
		endDefinition(58934)
lbl(58948)	putRecord('#' [1 2 fast] x(17))
		setConstant(close)
		setValue(x(12))
		setValue(x(11))
		putRecord('#' 5 x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(8) x(0))
		move(x(11) x(1))
		move(x(10) x(2))
		move(x(7) x(3))
		move(x(9) x(4))
		move(y(0) x(6))
		putConstant('DescClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(59006)	definition(x(7) 59084 pid('DoReadAll' 5 pos('./op/Open.oz' 247 2) nil 7) <Q: 549> [y(1) g(3)])
		allocateL6
		move(g(0) x(5))
		inlineDot(x(5) read x(6) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		call(x(6) 5)
		testNumber(y(5) 0 59059)
lbl(59051)	unify(y(4) y(1))
		unify(y(2) y(3))
		deAllocateL6
		return
lbl(59059)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 549> 11)
		endDefinition(59006)
lbl(59084)	definition(x(7) 59163 pid('DoWrite' 4 pos('./op/Open.oz' 256 2) nil 6) <Q: 550> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 59147)
lbl(59119)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 550> 9)
lbl(59147)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(59084)
lbl(59163)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [flags mode name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(59181)	definition(x(8) 59635 pid('File,init' 1 pos('./op/Open.oz' 268 5) nil 5) unit [x(7) y(0) g(1) y(1) y(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(flags x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59220)
		inlineDot(x(0) flags x(1) cache)
		unify(x(1) y(1))
		branch(59226)
lbl(59220)	getList(y(1))
		unifyLiteral(read)
		unifyLiteral(nil)
lbl(59226)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(mode x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59249)
		inlineDot(x(0) mode x(1) cache)
		unify(x(1) y(2))
		branch(59269)
lbl(59249)	putList(x(1))
		setConstant(read)
		setConstant(nil)
		putList(x(2))
		setConstant(write)
		setConstant(nil)
		getRecord(mode [all owner] y(2))
		unifyValue(x(1))
		unifyValue(x(2))
lbl(59269)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59292)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(59295)
lbl(59292)	getLiteral(<N: NoArg> y(3))
lbl(59295)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59318)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(59321)
lbl(59318)	getLiteral(<N: NoArg> y(4))
lbl(59321)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 540> 4)
		testLiteral(y(5) false 59364)
lbl(59340)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalFlags)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(59364)	move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 539> 4)
		testLiteral(y(1) false 59401)
lbl(59377)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalModes)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(59401)	testLiteral(y(3) <N: NoArg> 59433)
lbl(59405)	testLiteral(y(4) <N: NoArg> 59433)
lbl(59409)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(nameOrUrl)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(59433)	testLiteral(y(3) <N: NoArg> 59627)
lbl(59437)	createVariable(y(2))
		match(y(3) ht(59590 [onScalar(stdin 59442) onScalar(stdout 59462) onScalar(stderr 59482) onScalar(<N: NoArg> 59502)]))
lbl(59442)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDIN_FILENO' x(0))
		call(x(2) 2)
		branch(59612)
lbl(59462)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDOUT_FILENO' x(0))
		call(x(2) 2)
		branch(59612)
lbl(59482)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDERR_FILENO' x(0))
		call(x(2) 2)
		branch(59612)
lbl(59502)	move(y(5) x(1))
		putConstant('O_RDWR' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 59542 59579)
lbl(59518)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(urlIsReadOnly)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(59542)	move(y(5) x(1))
		putConstant('O_WRONLY' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 59560 59579)
		branch(59518)
lbl(59560)	move(g(4) x(0))
		inlineDot(x(0) open x(2) cache)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(x(2) 2)
		branch(59612)
lbl(59579)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(59590)	move(g(3) x(0))
		inlineDot(x(0) open x(4) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		call(x(4) 4)
lbl(59612)	move(y(2) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
lbl(59627)	testLiteral(y(4) <N: NoArg> 59409)
lbl(59631)	branch(59437)
		endDefinition(59181)
lbl(59635)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		putRecord(messagePattern [len list size tail] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(59653)	definition(x(9) 59849 pid('File,read' 1 pos('./op/Open.oz' 316 5) nil 6) unit [x(8) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 59701)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(59704)
lbl(59701)	getLiteral(nil y(2))
lbl(59704)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59725)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(59725)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59748)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(59751)
lbl(59748)	getNumber(1024 y(4))
lbl(59751)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(59845 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(59844 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 59826)
		testLiteral(y(4) all 59802)
lbl(59786)	moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(4))
		putConstant(0 x(3))
		genFastCall(<Q: 549> 10)
		branch(59843)
lbl(59802)	move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		call(x(5) 5)
		branch(59843)
lbl(59826)	putRecord(read [len list size tail] x(1))
		setValue(y(3))
		setValue(y(1))
		setValue(y(4))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59843)	return
lbl(59844)	return
lbl(59845)	deAllocateL5
		return
		endDefinition(59653)
lbl(59849)	putList(x(8))
		setConstant(read)
		setValue(x(9))
lbl(59855)	definition(x(9) 59927 pid('File,write/fast' [len vs] pos('./op/Open.oz' 332 5) nil 4) <Q: 551> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(59924 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(59923 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 59906)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 550> 8)
		branch(59922)
lbl(59906)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59922)	return
lbl(59923)	return
lbl(59924)	return
		endDefinition(59855)
lbl(59927)	putRecord(messagePattern [len vs] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(59935)	definition(x(11) 59990 pid('File,write/slow' 1 pos('./op/Open.oz' 332 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 59972)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(59972)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 551> 5)
		endDefinition(59935)
lbl(59990)	putRecord(write [len vs] x(10))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(write)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(60010)	definition(x(9) 60135 pid('File,seek/fast' [offset whence] pos('./op/Open.oz' 342 5) nil 6) <Q: 552> [y(1)])
		allocateL4
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(60131 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(60130 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 60113)
		move(g(0) x(3))
		inlineDot(x(3) lSeek x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariable(y(3))
		match(x(1) ht(60085 [onScalar(set 60070) onScalar(current 60075) onScalar('end' 60080)]))
lbl(60070)	getLiteral('SEEK_SET' y(3))
		branch(60098)
lbl(60075)	getLiteral('SEEK_CUR' y(3))
		branch(60098)
lbl(60080)	getLiteral('SEEK_END' y(3))
		branch(60098)
lbl(60085)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(350)
		setValue(x(1))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(60098)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		call(y(2) 4)
		branch(60129)
lbl(60113)	putRecord(seek [offset whence] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60129)	return
lbl(60130)	return
lbl(60131)	deAllocateL4
		return
		endDefinition(60010)
lbl(60135)	putRecord(messagePattern [offset whence] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(60143)	definition(x(11) 60222 pid('File,seek/slow' 1 pos('./op/Open.oz' 342 5) nil 3) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(offset x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60182)
		inlineDot(x(0) offset x(1) cache)
		unify(x(1) y(1))
		branch(60185)
lbl(60182)	getNumber(0 y(1))
lbl(60185)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(whence x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 60208)
		inlineDot(x(0) whence x(1) cache)
		unify(x(1) y(2))
		branch(60211)
lbl(60208)	getLiteral(set y(2))
lbl(60211)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 552> 5)
		endDefinition(60143)
lbl(60222)	putRecord(seek [offset whence] x(10))
		setConstant(0)
		setConstant(set)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(seek)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(60242)	definition(x(9) 60321 pid('File,tell/fast' [offset] pos('./op/Open.oz' 357 5) nil 5) <Q: 553> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(60318 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(60317 x(1))
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 60305)
		move(g(0) x(2))
		inlineDot(x(2) lSeek x(4) cache)
		move(x(0) x(3))
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant('SEEK_CUR' x(2))
		call(x(4) 4)
		branch(60316)
lbl(60305)	putRecord(tell [offset] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60316)	return
lbl(60317)	return
lbl(60318)	return
		endDefinition(60242)
lbl(60321)	definition(x(10) 60347 pid('File,tell/slow' 1 pos('./op/Open.oz' 357 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) offset x(0) cache)
		genFastCall(<Q: 553> 3)
		endDefinition(60321)
lbl(60347)	putRecord('#' [1 2 fast] x(11))
		setConstant(tell)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 5 x(1))
		setValue(x(7))
		setValue(x(8))
		setValue(x(12))
		setValue(x(13))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('File' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [len list size tail] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60407)	definition(x(8) 60571 pid('SockAndPipe,read' 1 pos('./op/Open.oz' 378 2) nil 6) unit [x(7) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60444)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(60444)	move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(2))
		createVariable(y(3))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 60476)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(3))
		branch(60479)
lbl(60476)	getLiteral(nil y(3))
lbl(60479)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60502)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(60505)
lbl(60502)	getNumber(1024 y(4))
lbl(60505)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60567 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60549)
		move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(1) x(4))
		call(x(5) 5)
		branch(60566)
lbl(60549)	putRecord(read [len list size tail] x(1))
		setValue(y(1))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60566)	return
lbl(60567)	deAllocateL5
		return
		endDefinition(60407)
lbl(60571)	putList(x(7))
		setConstant(read)
		setValue(x(8))
lbl(60577)	definition(x(8) 60637 pid('SockAndPipe,write/fast' [len vs] pos('./op/Open.oz' 391 2) nil 4) <Q: 554> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(60634 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 60617)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 543> 8)
		branch(60633)
lbl(60617)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60633)	return
lbl(60634)	return
		endDefinition(60577)
lbl(60637)	putRecord(messagePattern [len vs] x(9))
		setConstant(unit)
		setConstant(unit)
lbl(60645)	definition(x(10) 60700 pid('SockAndPipe,write/slow' 1 pos('./op/Open.oz' 391 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 60682)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(60682)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 554> 5)
		endDefinition(60645)
lbl(60700)	putRecord(write [len vs] x(9))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(11))
		setConstant(write)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
lbl(60720)	definition(x(8) 60858 pid('SockAndPipe,flush/fast' [how] pos('./op/Open.oz' 399 2) nil 3) <Q: 555> nil)
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 60787 60845)
lbl(60757)	testBool(y(2) 60787 60845)
lbl(60761)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60785 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60784 x(0))
		return
lbl(60784)	return
lbl(60785)	deAllocateL3
		return
lbl(60787)	testBool(y(1) 60805 60834)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60803 x(0))
		return
lbl(60803)	deAllocateL3
		return
lbl(60805)	testBool(y(2) 60821 60823)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60821 x(0))
		return
lbl(60821)	deAllocateL3
		return
lbl(60823)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(60834)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(60845)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(403)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(60720)
lbl(60858)	putRecord(messagePattern [how] x(9))
		setConstant(unit)
lbl(60864)	definition(x(10) 60924 pid('SockAndPipe,flush/slow' 1 pos('./op/Open.oz' 399 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60903)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(60915)
lbl(60903)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(60915)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 555> 3)
		endDefinition(60864)
lbl(60924)	putRecord(flush [how] x(9))
		setVariable(x(12))
		putList(x(13))
		setConstant(send)
		setConstant(nil)
		getList(x(12))
		unifyLiteral(receive)
		unifyValue(x(13))
		putRecord('#' [1 2 default fast] x(12))
		setConstant(flush)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 3 x(1))
		setValue(x(7))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SockAndPipe' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(60982)	definition(x(7) 61064 pid('DoSend' 4 pos('./op/Open.oz' 418 2) nil 6) <Q: 556> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) send x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		call(x(5) 4)
		testRecord(y(3) suspend 3 61048)
lbl(61020)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 556> 9)
lbl(61048)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(60982)
lbl(61064)	definition(x(7) 61161 pid('DoSendTo' 6 pos('./op/Open.oz' 425 2) nil 8) <Q: 557> [y(1)])
		allocateL6
		move(g(0) x(6))
		inlineDot(x(6) sendTo x(7) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYYX(x(5) y(4) y(1) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		createVariableMove(y(5) x(5))
		call(x(7) 6)
		testRecord(y(5) suspend 3 61145)
lbl(61112)	getVarVar(x(0) x(1))
		getVariable(x(6))
		callBI('Wait' [x(1)]#nil)
		move(y(3) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(y(0) x(0))
		move(x(6) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 557> 13)
lbl(61145)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(4))
		deAllocateL6
		return
		endDefinition(61064)
lbl(61161)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<N: TimeOut>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [protocol time type] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(61183)	definition(x(8) 61368 pid('Socket,init' 1 pos('./op/Open.oz' 438 5) nil 4) unit [x(7) y(0) y(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(type x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61222)
		inlineDot(x(0) type x(1) cache)
		unify(x(1) y(1))
		branch(61225)
lbl(61222)	getLiteral(stream y(1))
lbl(61225)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(protocol x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61248)
		inlineDot(x(0) protocol x(1) cache)
		unify(x(1) y(2))
		branch(61251)
lbl(61248)	getLiteral(nil y(2))
lbl(61251)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(time x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61274)
		inlineDot(x(0) time x(1) cache)
		unify(x(1) y(3))
		branch(61277)
lbl(61274)	getNumber(~1 y(3))
lbl(61277)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(g(2) x(0))
		inlineDot(x(0) socket x(1) cache)
		move(x(1) y(0))
		putConstant('PF_INET' y(4))
		createVariable(y(5))
		match(y(1) ht(61313 [onScalar(stream 61303) onScalar(datagram 61308)]))
lbl(61303)	getLiteral('SOCK_STREAM' y(5))
		branch(61326)
lbl(61308)	getLiteral('SOCK_DGRAM' y(5))
		branch(61326)
lbl(61313)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(443)
		setValue(y(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(61326)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(1) x(3))
		call(y(0) 4)
		getSelf(x(0))
		inlineDot(x(0) <N: TimeOut> x(1) cache)
		unify(x(1) y(3))
		move(y(1) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
		endDefinition(61183)
lbl(61368)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		createVariable(y(6))
lbl(61376)	definition(x(8) 61473 pid('Socket,server' 1 pos('./op/Open.oz' 450 5) nil 3) unit [y(6)])
		allocateL3
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61404)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(61404)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61425)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(2))
lbl(61425)	genCall(gci(g(0) true init false 0) 0)
		move(y(0) x(0))
		putConstant(takePort x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61452)
		inlineDot(x(0) takePort x(1) cache)
		move(y(1) x(0))
		genCall(gci(g(0) true bind false [port takePort]) 0)
		branch(61458)
lbl(61452)	move(y(1) x(0))
		genCall(gci(g(0) true bind false [port]) 0)
lbl(61458)	putConstant(1 x(0))
		genCall(gci(g(0) true listen false [backLog]) 0)
		move(y(2) x(0))
		deAllocateL3
		genCall(gci(g(0) true accept true [host]) 0)
		endDefinition(61376)
lbl(61473)	putList(x(9))
		setConstant(server)
		setValue(x(8))
lbl(61479)	definition(x(8) 61505 pid('Socket,client/fast' [host port] pos('./op/Open.oz' 461 5) nil 2) <Q: 558> [y(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true connect true [host port]) 0)
		endDefinition(61479)
lbl(61505)	putRecord(messagePattern [host port] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(61513)	definition(x(11) 61573 pid('Socket,client/slow' 1 pos('./op/Open.oz' 461 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 61552)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(61555)
lbl(61552)	getLiteral(localhost y(1))
lbl(61555)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 558> 5)
		endDefinition(61513)
lbl(61573)	putRecord(client [host port] x(10))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(client)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(61593)	definition(x(8) 61669 pid('Socket,listen/fast' [backLog] pos('./op/Open.oz' 466 5) nil 4) <Q: 559> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61666 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(61665 x(1))
		inlineAt(<N: ReadDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 61653)
		move(g(0) x(2))
		inlineDot(x(2) listen x(3) cache)
		move(x(1) x(4))
		move(x(0) x(1))
		move(x(4) x(0))
		call(x(3) 2)
		branch(61664)
lbl(61653)	putRecord(listen [backLog] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(61664)	return
lbl(61665)	return
lbl(61666)	return
		endDefinition(61593)
lbl(61669)	putRecord(messagePattern [backLog] x(10))
		setConstant(unit)
lbl(61675)	definition(x(11) 61726 pid('Socket,listen/slow' 1 pos('./op/Open.oz' 466 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(backLog x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61714)
		inlineDot(x(0) backLog x(1) cache)
		unify(x(1) y(1))
		branch(61717)
lbl(61714)	getNumber(5 y(1))
lbl(61717)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 559> 3)
		endDefinition(61675)
lbl(61726)	putRecord(listen [backLog] x(10))
		setConstant(5)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(listen)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(61744)	definition(x(8) 61899 pid('Socket,bind' 1 pos('./op/Open.oz' 476 5) nil 5) unit [y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61772)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(61772)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(61895 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(61894 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 61885)
		move(y(0) x(1))
		putConstant(takePort x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 61848)
		move(g(0) x(2))
		inlineDot(x(2) bind x(3) cache)
		inlineDot(x(1) takePort x(4) cache)
		move(x(4) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		inlineDot(x(0) takePort x(1) cache)
		unify(x(1) y(1))
		branch(61893)
lbl(61848)	move(g(0) x(1))
		inlineDot(x(1) bind x(2) cache)
		move(x(0) y(0))
		putConstant(0 x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) getSockName x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		call(x(2) 2)
		branch(61893)
lbl(61885)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(61893)	return
lbl(61894)	return
lbl(61895)	deAllocateL2
		return
		endDefinition(61744)
lbl(61899)	putList(x(10))
		setConstant(bind)
		setValue(x(8))
lbl(61905)	definition(x(8) 62152 pid('Socket,accept' 1 pos('./op/Open.oz' 493 5) nil 5) unit [y(1) y(0)])
		allocateL6
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61933)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
lbl(61933)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61954)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(2))
lbl(61954)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(62148 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(62147 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 62138)
		getSelf(x(1))
		inlineDot(x(1) <N: TimeOut> x(1) cache)
		move(x(0) y(3))
		createVariable(y(4))
		match(x(1) ht(62001 [onScalar(~1 62007)]))
lbl(62001)	move(y(4) x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
lbl(62007)	createVariable(y(5))
		thread(62031)
		move(g(0) x(0))
		inlineDot(x(0) acceptSelect x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		getLiteral(unit y(5))
		deAllocateL6
		return
lbl(62031)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		testBI('IsDet' [x(1)]#[x(0)] 62130)
		move(g(0) x(0))
		inlineDot(x(0) accept x(4) cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		putConstant(accepted x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62112)
		inlineDot(x(0) accepted x(1) cache)
		inlineDot(x(0) acceptClass x(2) cache)
		callBI(newObject [x(2)]#[x(0)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveYXYX(y(4) x(0) y(4) x(1))
		sendMsg(dOpen y(1) 2 cache)
		unify(y(1) y(0))
		branch(62146)
lbl(62112)	genCall(gci(g(1) true <N: CloseDescs> false 0) 0)
		move(y(4) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		branch(62146)
lbl(62130)	getLiteral(false y(2))
		getLiteral(false y(1))
		branch(62146)
lbl(62138)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62146)	return
lbl(62147)	return
lbl(62148)	deAllocateL6
		return
		endDefinition(61905)
lbl(62152)	putList(x(11))
		setConstant(accept)
		setValue(x(8))
lbl(62158)	definition(x(8) 62242 pid('Socket,connect/fast' [host port] pos('./op/Open.oz' 525 5) nil 5) <Q: 560> [y(1)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(62239 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(62238 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 62221)
		move(g(0) x(3))
		inlineDot(x(3) connect x(4) cache)
		move(x(2) x(5))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		call(x(4) 3)
		branch(62237)
lbl(62221)	putRecord(connect [host port] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62237)	return
lbl(62238)	return
lbl(62239)	return
		endDefinition(62158)
lbl(62242)	putRecord(messagePattern [host port] x(14))
		setConstant(unit)
		setConstant(unit)
lbl(62250)	definition(x(15) 62310 pid('Socket,connect/slow' 1 pos('./op/Open.oz' 525 5) nil 3) unit [x(14)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 62289)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(62292)
lbl(62289)	getLiteral(localhost y(1))
lbl(62292)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 560> 5)
		endDefinition(62250)
lbl(62310)	putRecord(connect [host port] x(14))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(16))
		setConstant(connect)
		setValue(x(15))
		setValue(x(14))
		setValue(x(8))
		putRecord(messagePattern [host len port vs] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(62342)	definition(x(14) 62517 pid('Socket,send' 1 pos('./op/Open.oz' 535 5) nil 6) unit [x(8)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 62388)
		inlineDot(x(0) len x(2) cache)
		unify(x(2) y(2))
lbl(62388)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62411)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(3))
		branch(62414)
lbl(62411)	getLiteral(localhost y(3))
lbl(62414)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62437)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(4))
		branch(62440)
lbl(62437)	getLiteral(<N: Missing> y(4))
lbl(62440)	getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(62513 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 62495)
		testLiteral(y(4) <N: Missing> 62477)
lbl(62464)	moveMoveYXYX(y(1) x(1) y(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 556> 8)
		branch(62512)
lbl(62477)	moveMoveYXYX(y(1) x(1) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(2) x(5))
		putConstant(0 x(4))
		genFastCall(<Q: 557> 12)
		branch(62512)
lbl(62495)	putRecord(send [host len port vs] x(1))
		setValue(y(3))
		setValue(y(2))
		setValue(y(4))
		setValue(y(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62512)	return
lbl(62513)	deAllocateL5
		return
		endDefinition(62342)
lbl(62517)	putList(x(8))
		setConstant(send)
		setValue(x(14))
		putRecord(messagePattern [host len list port size tail] x(14))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(62539)	definition(x(15) 62757 pid('Socket,receive' 1 pos('./op/Open.oz' 546 5) nil 9) unit [x(14) y(1)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 62587)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(62590)
lbl(62587)	getLiteral(nil y(2))
lbl(62590)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62611)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(62611)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62632)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(4))
lbl(62632)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62653)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(5))
lbl(62653)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62676)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(6))
		branch(62679)
lbl(62676)	getNumber(1024 y(6))
lbl(62679)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(62753 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 62731)
		move(g(1) x(1))
		inlineDot(x(1) receiveFrom x(8) cache)
		moveMoveYXYX(y(6) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(3) x(7))
		putConstant(nil x(2))
		call(x(8) 8)
		branch(62752)
lbl(62731)	putRecord(receive [host len list port size tail] x(1))
		setValue(y(4))
		setValue(y(3))
		setValue(y(1))
		setValue(y(5))
		setValue(y(6))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62752)	return
lbl(62753)	deAllocateL7
		return
		endDefinition(62539)
lbl(62757)	putList(x(14))
		setConstant(receive)
		setValue(x(15))
lbl(62763)	definition(x(15) 63066 pid('Socket,shutDown/fast' [how] pos('./op/Open.oz' 560 5) nil 4) <Q: 561> [y(1)])
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 62921 63053)
lbl(62800)	testBool(y(2) 62921 63053)
lbl(62804)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(62919 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(62918 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 62906)
lbl(62840)	testBI('IsInt' [x(1)]#[x(2)] 62906)
lbl(62844)	testBI('==' [x(0) x(1)]#[x(2)] 62868)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(x(1) x(0))
		putConstant(2 x(1))
		call(x(2) 2)
		branch(62917)
lbl(62868)	move(g(0) x(2))
		inlineDot(x(2) shutDown x(3) cache)
		move(x(1) y(0))
		putConstant(0 x(1))
		call(x(3) 2)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(62917)
lbl(62906)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62917)	return
lbl(62918)	return
lbl(62919)	deAllocateL3
		return
lbl(62921)	testBool(y(1) 62976 63042)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(62974 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 62962)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(0 x(1))
		call(x(2) 2)
		branch(62973)
lbl(62962)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(62973)	return
lbl(62974)	deAllocateL3
		return
lbl(62976)	testBool(y(2) 63029 63031)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(63029 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 63017)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(1 x(1))
		call(x(2) 2)
		branch(63028)
lbl(63017)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(63028)	return
lbl(63029)	deAllocateL3
		return
lbl(63031)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63042)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(579)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63053)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(62763)
lbl(63066)	putRecord(messagePattern [how] x(17))
		setConstant(unit)
lbl(63072)	definition(x(18) 63132 pid('Socket,shutDown/slow' 1 pos('./op/Open.oz' 560 5) nil 3) unit [x(17)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 63111)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(63123)
lbl(63111)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(63123)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 561> 3)
		endDefinition(63072)
lbl(63132)	putRecord(shutDown [how] x(17))
		setVariable(x(19))
		putList(x(20))
		setConstant(send)
		setConstant(nil)
		getList(x(19))
		unifyLiteral(receive)
		unifyValue(x(20))
		putRecord('#' [1 2 default fast] x(19))
		setConstant(shutDown)
		setValue(x(18))
		setValue(x(17))
		setValue(x(15))
		putRecord('#' 10 x(1))
		setValue(x(7))
		setValue(x(9))
		setValue(x(12))
		setValue(x(13))
		setValue(x(10))
		setValue(x(11))
		setValue(x(16))
		setValue(x(8))
		setValue(x(14))
		setValue(x(19))
		move(y(6) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Socket' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(63201)	definition(x(7) 63322 pid('DoReadLine' 5 pos('./op/Open.oz' 604 2) nil 6) <Q: 562> [y(1) g(4)])
		match(x(0) ht(63307 [onScalar(nil 63210) onRecord('|' 2 63280)]))
lbl(63210)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 63263)
lbl(63252)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(63263)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 562> 11)
lbl(63280)	getVarVar(x(0) x(5))
		testNumber(x(0) 10 63297)
lbl(63287)	unify(x(2) x(5))
		getLiteral(false x(3))
		getLiteral(nil x(4))
		return
lbl(63297)	getListValVar(x(4) x(0) x(4))
		move(x(5) x(0))
		genFastCall(<Q: 562> 11)
lbl(63307)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(615)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(63201)
lbl(63322)	definition(x(7) 63429 pid('DoReadOne' 5 pos('./op/Open.oz' 618 2) nil 6) <Q: 563> [y(1) g(4)])
		match(x(0) ht(63414 [onScalar(nil 63331) onRecord('|' 2 63401)]))
lbl(63331)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 63384)
lbl(63373)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(false y(3))
		deAllocateL6
		return
lbl(63384)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 563> 11)
lbl(63401)	getVarVar(x(0) x(1))
		unify(x(2) x(1))
		getLiteral(false x(3))
		unify(x(0) x(4))
		return
lbl(63414)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(626)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(63322)
lbl(63429)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(63435)	definition(x(7) 63553 pid('Text,getC/fast' 1 pos('./op/Open.oz' 633 5) nil 7) <Q: 564> nil)
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(63549 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: Last> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		createVariable(x(6))
		inlineAssign(<N: Last> x(6) cache)
		testBool(x(1) 63507 63537)
		getLiteral(false x(0))
		getLiteral(true x(4))
		getLiteral(nil x(5))
		unify(x(6) x(3))
		branch(63548)
lbl(63507)	inlineAt(<N: ReadDesc> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(6) y(1))
		move(x(2) x(0))
		move(x(5) x(2))
		move(x(4) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 563> 10)
		unify(y(1) y(0))
		branch(63548)
lbl(63537)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63548)	return
lbl(63549)	deAllocateL2
		return
		endDefinition(63435)
lbl(63553)	definition(x(8) 63579 pid('Text,getC/slow' 1 pos('./op/Open.oz' 633 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 564> 3)
		endDefinition(63553)
lbl(63579)	putRecord('#' [1 2 fast] x(9))
		setConstant(getC)
		setValue(x(8))
		setValue(x(7))
lbl(63589)	definition(x(7) 63614 pid('Text,putC/fast' 1 pos('./op/Open.oz' 652 5) nil 4) <Q: 565> nil)
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(63589)
lbl(63614)	definition(x(8) 63640 pid('Text,putC/slow' 1 pos('./op/Open.oz' 652 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 565> 3)
		endDefinition(63614)
lbl(63640)	putRecord('#' [1 2 fast] x(10))
		setConstant(putC)
		setValue(x(8))
		setValue(x(7))
lbl(63650)	definition(x(7) 63785 pid('Text,getS/fast' 1 pos('./op/Open.oz' 656 5) nil 6) <Q: 566> nil)
		allocateL3
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(63781 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: ReadDesc> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		testBool(x(1) 63712 63769)
		getLiteral(true x(4))
		getLiteral(nil x(5))
		getLiteral(false x(0))
		branch(63780)
lbl(63712)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		move(y(1) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 562> 10)
		testBool(y(1) 63753 63758)
		testLiteral(y(2) nil 63748)
lbl(63743)	getLiteral(false y(0))
		branch(63780)
lbl(63748)	unify(y(0) y(2))
		branch(63780)
lbl(63753)	unify(y(0) y(2))
		branch(63780)
lbl(63758)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63780)	return
lbl(63781)	deAllocateL3
		return
		endDefinition(63650)
lbl(63785)	definition(x(8) 63811 pid('Text,getS/slow' 1 pos('./op/Open.oz' 656 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 566> 3)
		endDefinition(63785)
lbl(63811)	putRecord('#' [1 2 fast] x(11))
		setConstant(getS)
		setValue(x(8))
		setValue(x(7))
lbl(63821)	definition(x(7) 63848 pid('Text,putS/fast' 1 pos('./op/Open.oz' 678 5) nil 4) <Q: 567> nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setConstant('\n')
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(63821)
lbl(63848)	definition(x(8) 63874 pid('Text,putS/slow' 1 pos('./op/Open.oz' 678 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 567> 3)
		endDefinition(63848)
lbl(63874)	putRecord('#' [1 2 fast] x(12))
		setConstant(putS)
		setValue(x(8))
		setValue(x(7))
lbl(63884)	definition(x(7) 63945 pid('Text,unGetC/fast' 0 pos('./op/Open.oz' 682 5) nil 3) <Q: 568> nil)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(63942 x(0))
		inlineAt(<N: Last> x(0) cache)
		inlineAt(<N: Buff> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<N: Buff> x(2) cache)
		putList(x(0))
		setConstant(0)
		setConstant(nil)
		inlineAssign(<N: Last> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<N: AtEnd> x(0) cache)
		return
lbl(63942)	return
		endDefinition(63884)
lbl(63945)	definition(x(8) 63959 pid('Text,unGetC/slow' 1 pos('./op/Open.oz' 682 5) nil 1) unit nil)
		getLiteral(unGetC x(0))
		genFastCall(<Q: 568> 1)
		endDefinition(63945)
lbl(63959)	putRecord('#' [1 2 fast] x(13))
		setConstant(unGetC)
		setValue(x(8))
		setValue(x(7))
lbl(63969)	definition(x(7) 64012 pid('Text,atEnd/fast' 1 pos('./op/Open.oz' 690 5) nil 2) <Q: 569> nil)
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(64009 x(1))
		inlineAt(<N: Buff> x(1) cache)
		testLiteral(x(1) nil 64005)
		inlineAt(<N: AtEnd> x(1) cache)
		unify(x(1) x(0))
		branch(64008)
lbl(64005)	getLiteral(false x(0))
lbl(64008)	return
lbl(64009)	return
		endDefinition(63969)
lbl(64012)	definition(x(8) 64038 pid('Text,atEnd/slow' 1 pos('./op/Open.oz' 690 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 569> 3)
		endDefinition(64012)
lbl(64038)	putRecord('#' [1 2 fast] x(14))
		setConstant(atEnd)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Text' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<M: PID>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [args cmd 'pid'] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(64104)	definition(x(8) 64241 pid('Pipe,init' 1 pos('./op/Open.oz' 706 2) nil 5) unit [x(7) y(0) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) cmd x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(args x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 64152)
		inlineDot(x(0) args x(2) cache)
		unify(x(2) y(2))
		branch(64155)
lbl(64152)	getLiteral(nil y(2))
lbl(64155)	createVariable(y(3))
		move(y(0) x(0))
		putConstant('pid' x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 64176)
		inlineDot(x(0) 'pid' x(1) cache)
		unify(x(1) y(3))
lbl(64176)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(0))
		setVariable(y(4))
		move(g(2) x(0))
		inlineDot(x(0) pipe x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		call(x(4) 4)
		getSelf(x(0))
		inlineDot(x(0) <M: PID> x(1) cache)
		unify(x(1) y(3))
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(4) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL5
		return
		endDefinition(64104)
lbl(64241)	putList(x(7))
		setConstant(init)
		setValue(x(8))
lbl(64247)	definition(x(8) 64356 pid('Pipe,close/fast' 0 pos('./op/Open.oz' 715 2) nil 5) <Q: 570> [y(1) g(5) y(0)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(0) cache)
		lockThread(64353 x(0))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(0) cache)
		lockThread(64352 x(0))
		move(g(0) x(0))
		inlineDot(x(0) system x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: PID> x(3) cache)
		putRecord('#' 3 x(4))
		setConstant('kill ')
		setValue(x(3))
		setConstant(' 2> /dev/null')
		move(x(4) x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(1) x(0))
		callBI('Delay' [x(0)]#nil)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		genCall(gci(g(2) true close false 0) 0)
		return
lbl(64352)	return
lbl(64353)	return
		endDefinition(64247)
lbl(64356)	definition(x(9) 64370 pid('Pipe,close/slow' 1 pos('./op/Open.oz' 715 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 570> 1)
		endDefinition(64356)
lbl(64370)	putRecord('#' [1 2 fast] x(10))
		setConstant(close)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(1))
		setValue(x(7))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Pipe' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(64403)	definition(x(7) 64422 pid('Html,header/fast' 0 pos('./op/Open.oz' 732 2) nil 3) <Q: 571> nil)
		getSelf(x(2))
		putConstant('Content-type: text/html\n\n' x(0))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(64403)
lbl(64422)	definition(x(8) 64436 pid('Html,header/slow' 1 pos('./op/Open.oz' 732 2) nil 1) unit nil)
		getLiteral(header x(0))
		genFastCall(<Q: 571> 1)
		endDefinition(64422)
lbl(64436)	putRecord('#' [1 2 fast] x(9))
		setConstant(header)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(64448)	definition(x(7) 64498 pid('Html,WriteTagBody/fast' 3 pos('./op/Open.oz' 736 2) nil 4) <Q: 572> [y(1)])
		testLT(x(1) x(0) x(3) 64460)
		return
lbl(64460)	allocateL3
		callBI('.' [x(2) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true tag false 1) 0)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: WriteTagBody> true 3) 0)
		endDefinition(64448)
lbl(64498)	definition(x(8) 64539 pid('Html,WriteTagBody/slow' 1 pos('./op/Open.oz' 736 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 572> 7)
		endDefinition(64498)
lbl(64539)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: WriteTagBody>)
		setValue(x(8))
		setValue(x(7))
lbl(64549)	definition(x(7) 64824 pid('Html,tag/fast' 1 pos('./op/Open.oz' 742 2) nil 5) <Q: 573> [g(6) y(1) g(7) g(8)])
		testBI('IsRecord' [x(0)]#[x(1)] 64793)
		allocateL6
		callBI('Label' [x(0)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		testBool(y(2) 64750 64782)
		getSelf(x(1))
		move(x(1) y(2))
		createVariable(y(3))
		createVariable(y(4))
		move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(2)] 64608)
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) y(3))
		getLiteral('' y(4))
		branch(64637)
lbl(64608)	callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		move(y(3) x(2))
		putConstant(0 x(1))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 537> 8)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 538> 6)
lbl(64637)	putRecord('#' 4 x(0))
		setConstant('<')
		setValue(y(1))
		setValue(y(4))
		setConstant('>')
		sendMsg(write y(2) [vs] cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		putConstant(1 x(0))
		genCall(gci(g(1) true <M: WriteTagBody> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(2) 2)
		testBool(y(0) 64681 64701)
		branch(64712)
lbl(64681)	putRecord('#' 3 x(0))
		setConstant('</')
		setValue(y(1))
		setConstant('>')
		getSelf(x(2))
		sendMsg(write x(2) [vs] cache)
		branch(64712)
lbl(64701)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64712)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(3) 2)
		testBool(y(0) 64737 64739)
		getSelf(x(2))
		putConstant('\n' x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(64737)	deAllocateL6
		return
lbl(64739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(761)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64750)	testLiteral(y(1) '#' 64770)
		move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(y(0) x(2))
		putConstant(1 x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: WriteTagBody> true 3) 0)
lbl(64770)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(64782)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(746)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64793)	testBI('IsProcedure' [x(0)]#[x(1)] 64814)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true tag true 1) 0)
lbl(64814)	getSelf(x(2))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(64549)
lbl(64824)	definition(x(8) 64850 pid('Html,tag/slow' 1 pos('./op/Open.oz' 742 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 573> 3)
		endDefinition(64824)
lbl(64850)	putRecord('#' [1 2 fast] x(11))
		setConstant(tag)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Html' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(3) x(0))
		inlineDot(x(0) put x(2) cache)
lbl(64900)	definition(x(1) 65075 pid('' 2 pos('./op/Open.oz' 785 7) nil 6) <Q: 574> [y(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) open 3 65052)
lbl(64932)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) format x(4) cache)
		putConstant('error in Open module' y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(4) y(5))
		createVariable(y(6))
		match(x(0) ht(64992 [onScalar(alreadyClosed 64962) onScalar(alreadyInitialized 64967) onScalar(illegalFlags 64972) onScalar(illegalModes 64977) onScalar(nameOrUrl 64982) onScalar(urlIsReadOnly 64987)]))
lbl(64962)	getLiteral('Object already closed' y(6))
		branch(64995)
lbl(64967)	getLiteral('Object already initialized' y(6))
		branch(64995)
lbl(64972)	getLiteral('Illegal value for flags' y(6))
		branch(64995)
lbl(64977)	getLiteral('Illegal value for mode' y(6))
		branch(64995)
lbl(64982)	getLiteral('Exactly one of \'name\' or \'url\' feature needed' y(6))
		branch(64995)
lbl(64987)	getLiteral('Only reading access to url-files allowed' y(6))
		branch(64995)
lbl(64992)	getLiteral('Unknown' y(6))
lbl(64995)	putRecord(oz 1 x(3))
		setValue(y(3))
		putRecord(oz 1 x(4))
		setValue(y(4))
		putRecord('#' 5 x(1))
		setConstant('{')
		setValue(x(3))
		setConstant(' ')
		setValue(x(4))
		setConstant('}')
		putRecord(hint [l m] x(0))
		setConstant('Object Application')
		setValue(x(1))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(1) x(4))
		deAllocateL7
		tailCall(x(5) 5)
lbl(65052)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in Open module' x(0))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(64900)
lbl(65075)	putConstant(open x(0))
		call(x(2) 2)
		getRecord('export' [file html pipe socket text] g(9))
		unifyValue(y(4))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL8
		return
		endDefinition(58274)
lbl(65099)	tailCall(x(2) 0)
		endDefinition(58058)
lbl(65104)	putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(10))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(4))
		setConstant(format)
		setValue(x(10))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(12))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(11))
		setValue(x(12))
		putList(x(34))
		setConstant('wait')
		setConstant(nil)
		putList(x(33))
		setConstant(pipe)
		setValue(x(34))
		putList(x(32))
		setConstant(system)
		setValue(x(33))
		putList(x(31))
		setConstant(deSelect)
		setValue(x(32))
		putList(x(30))
		setConstant(acceptSelect)
		setValue(x(31))
		putList(x(29))
		setConstant(getSockName)
		setValue(x(30))
		putList(x(28))
		setConstant(receiveFrom)
		setValue(x(29))
		putList(x(27))
		setConstant(sendTo)
		setValue(x(28))
		putList(x(26))
		setConstant(send)
		setValue(x(27))
		putList(x(25))
		setConstant(shutDown)
		setValue(x(26))
		putList(x(24))
		setConstant(accept)
		setValue(x(25))
		putList(x(23))
		setConstant(connect)
		setValue(x(24))
		putList(x(22))
		setConstant(listen)
		setValue(x(23))
		putList(x(21))
		setConstant(bind)
		setValue(x(22))
		putList(x(20))
		setConstant(socket)
		setValue(x(21))
		putList(x(19))
		setConstant(lSeek)
		setValue(x(20))
		putList(x(18))
		setConstant(read)
		setValue(x(19))
		putList(x(17))
		setConstant(write)
		setValue(x(18))
		putList(x(16))
		setConstant(close)
		setValue(x(17))
		putList(x(15))
		setConstant(fileDesc)
		setValue(x(16))
		putList(x(14))
		setConstant(open)
		setValue(x(15))
		putRecord(info [type] x(13))
		setValue(x(14))
		putList(x(36))
		setConstant(open)
		setConstant(nil)
		putRecord(info [type] x(35))
		setValue(x(36))
		putRecord('import' ['Error' 'ErrorRegistry' 'OS' 'Resolve'] x(0))
		setValue(x(1))
		setValue(x(11))
		setValue(x(13))
		setValue(x(35))
		putRecord('export' [file html pipe socket text] x(1))
		setValue(x(5))
		setValue(x(9))
		setValue(x(8))
		setValue(x(7))
		setValue(x(6))
		createVariableMove(y(145) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putList(x(4))
		setConstant(46)
		setConstant(nil)
		putList(x(0))
		setConstant(46)
		setConstant(nil)
		putList(x(5))
		setConstant(46)
		setValue(x(0))
lbl(65394)	definition(x(6) 65494 pid('Normalize' 3 pos('./dp/URL.oz' 29 6) nil 7) <P: 575> [x(4) x(5)])
		match(x(0) ht(65479 [onScalar(nil 65403) onRecord('|' 2 65412)]))
lbl(65403)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 28> 5)
lbl(65412)	getVarVar(x(0) x(3))
		move(g(0) x(4))
		testBI('==' [x(0) x(4)]#[x(5)] 65428)
		move(x(3) x(0))
		genFastCall(<P: 575> 7)
lbl(65428)	move(g(1) x(5))
		testBI('==' [x(0) x(5)]#[x(6)] 65464)
		testLiteral(x(1) nil 65452)
		getListValVar(x(2) g(1) x(2))
		move(x(3) x(0))
		putConstant(nil x(1))
		genFastCall(<P: 575> 7)
lbl(65452)	inlineDot(x(1) 2 x(1) cache)
		move(x(3) x(0))
		genFastCall(<P: 575> 7)
lbl(65464)	putList(x(6))
		setValue(x(0))
		setValue(x(1))
		move(x(3) x(0))
		move(x(6) x(1))
		genFastCall(<P: 575> 7)
lbl(65479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(65394)
lbl(65494)	definition(x(4) 65511 pid('NormalizePath' 2 pos('./dp/URL.oz' 42 6) nil 3) <P: 576> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 575> 7)
		endDefinition(65494)
lbl(65511)	definition(x(4) 65572 pid('StripLast' 3 pos('./dp/URL.oz' 48 6) nil 5) <P: 577> nil)
		shallowGuard(65559)
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(65525)	shallowThen
		match(x(4) ht(65546 [onScalar(nil 65529) onRecord('|' 2 65536)]))
lbl(65529)	unify(x(1) x(3))
		getLiteral(nil x(2))
		return
lbl(65536)	getListValVar(x(2) x(3) x(2))
		move(x(4) x(0))
		genFastCall(<P: 577> 7)
lbl(65546)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(51)
		setValue(x(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65559)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(48)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(65511)
lbl(65572)	definition(x(4) 65681 pid('PathResolve' 3 pos('./dp/URL.oz' 54 6) nil 6) <P: 578> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(1) 1 x(1) cache)
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(2) x(3))
		putConstant(1 x(2))
		marshalledFastCall(<R: tuple> 8)
		createVariable(y(3))
		testLiteral(y(1) nil 65631)
		unify(y(3) y(2))
		branch(65670)
lbl(65631)	move(y(1) x(0))
		createVariable(x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 577> 6)
		createVariable(y(1))
		testLiteral(y(2) nil 65656)
		getList(y(1))
		unifyLiteral(nil)
		unifyLiteral(nil)
		branch(65659)
lbl(65656)	unify(y(1) y(2))
lbl(65659)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(65670)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<P: 576> 5)
		endDefinition(65572)
lbl(65681)	definition(x(4) 65744 pid('Split' 3 pos('./dp/URL.oz' 71 2) nil 4) <P: 579> nil)
		match(x(0) ht(65729 [onScalar(nil 65690) onRecord('|' 2 65697)]))
lbl(65690)	unify(x(1) x(2))
		getLiteral(nil x(1))
		return
lbl(65697)	getVarVar(x(0) x(3))
		testNumber(x(0) 47 65719)
		getLiteral(nil x(1))
		getList(x(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		move(x(3) x(0))
		genFastCall(<P: 579> 7)
lbl(65719)	getListValVar(x(1) x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 579> 7)
lbl(65729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(65681)
lbl(65744)	definition(x(4) 65761 pid('SplitPath' 2 pos('./dp/URL.oz' 80 2) nil 3) <P: 580> nil)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		genFastCall(<P: 579> 7)
		endDefinition(65744)
lbl(65761)	definition(x(4) 66339 pid('StringToUrl' 2 pos('./dp/URL.oz' 86 6) nil 4) <P: 581> [y(55) y(54) y(146) y(160) y(82)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(65799)
		move(x(0) y(2))
		createCond(65793)
lbl(65781)	lastClause
		clause
		ask
lbl(65784)	putRecord(illegalUrl 1 x(0))
		setValue(y(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(65793)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(65799)	createVariable(y(2))
		testLiteral(y(0) nil 65810)
		getLiteral(url y(2))
		branch(66331)
lbl(65810)	move(y(0) x(1))
		putConstant(35 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(5))
		testBool(y(3) 65849 65857)
		getRecord(o [fragment] y(5))
		unifyVariable(x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(2))
		putConstant(35 x(1))
		genFastCall(<P: 2> 8)
		branch(65868)
lbl(65849)	unify(y(4) y(0))
		getLiteral(o y(5))
		branch(65868)
lbl(65857)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(95)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65868)	createVariable(y(3))
		createVariable(y(6))
		testLiteral(y(4) nil 65884)
lbl(65876)	unify(y(3) y(4))
		getLiteral(o y(6))
		branch(65951)
lbl(65884)	move(y(4) x(0))
		inlineDot(x(0) 2 x(1) cache)
		putConstant(58 x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(7) 65876 65940)
lbl(65906)	getRecord(o [scheme] y(6))
		unifyVariable(y(7))
		moveMoveYXYX(y(4) x(0) y(3) x(3))
		putConstant(58 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 2> 8)
		move(y(8) x(0))
		move(g(1) x(1))
		move(y(7) x(2))
		genFastCall(<P: 29> 6)
		branch(65951)
lbl(65940)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65951)	putList(x(1))
		setConstant(47)
		setConstant(nil)
		putList(x(0))
		setConstant(47)
		setValue(x(1))
		move(y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 78> 6)
		createVariable(y(7))
		createVariable(y(8))
		testBool(y(4) 66082 66090)
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		inlineDot(x(3) 2 x(0) cache)
		moveMoveXYYX(x(0) y(3) y(3) x(1))
		putConstant(47 x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 66051 66071)
		getList(y(7))
		unifyNumber(47)
		unifyVariable(x(3))
		getRecord(o [netloc] y(8))
		unifyVariable(y(4))
		move(y(3) x(0))
		putConstant(47 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 2> 8)
		move(y(9) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		branch(66101)
lbl(66051)	getLiteral(nil y(7))
		getRecord(o [netloc] y(8))
		unifyVariable(x(2))
		move(y(3) x(0))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		branch(66101)
lbl(66071)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66082)	unify(y(7) y(3))
		getLiteral(o y(8))
		branch(66101)
lbl(66090)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(108)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66101)	move(y(7) x(1))
		putConstant(63 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(9))
		testBool(y(3) 66140 66148)
		getRecord(o [query] y(9))
		unifyVariable(x(3))
		moveMoveYXYX(y(7) x(0) y(4) x(2))
		putConstant(63 x(1))
		genFastCall(<P: 2> 8)
		branch(66159)
lbl(66140)	unify(y(4) y(7))
		getLiteral(o y(9))
		branch(66159)
lbl(66148)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66159)	move(y(4) x(1))
		putConstant(59 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(7))
		createVariable(y(10))
		testBool(y(3) 66198 66206)
		getRecord(o [parameter] y(10))
		unifyVariable(x(3))
		moveMoveYXYX(y(4) x(0) y(7) x(2))
		putConstant(59 x(1))
		genFastCall(<P: 2> 8)
		branch(66217)
lbl(66198)	unify(y(7) y(4))
		getLiteral(o y(10))
		branch(66217)
lbl(66206)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66217)	createVariable(y(3))
		match(y(7) ht(66290 [onScalar(nil 66222) onRecord('|' 2 66227)]))
lbl(66222)	getLiteral(o y(3))
		branch(66303)
lbl(66227)	getVarVar(x(0) x(2))
		getRecord(o [path] y(3))
		unifyVariable(x(3))
		testNumber(x(0) 47 66265)
		getRecord(abs 1 x(3))
		unifyVariable(y(4))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 580> 4)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<P: 576> 4)
		branch(66303)
lbl(66265)	getRecord(rel 1 x(3))
		unifyVariable(y(4))
		move(y(7) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 580> 4)
		moveMoveYXYX(y(11) x(0) y(4) x(1))
		genFastCall(<P: 576> 4)
		branch(66303)
lbl(66290)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(137)
		setValue(y(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66303)	putRecord('#' 6 x(0))
		setValue(y(6))
		setValue(y(5))
		setValue(y(8))
		setValue(y(9))
		setValue(y(10))
		setValue(y(3))
		move(g(4) x(1))
		move(y(2) x(3))
		putConstant(url x(2))
		genFastCall(<P: 163> 8)
lbl(66331)	unify(y(1) y(2))
		popEx
		deAllocateL
		return
		endDefinition(65761)
lbl(66339)	definition(x(4) 66388 pid('UrlIsAbs' 2 pos('./dp/URL.oz' 148 3) nil 4) <P: 582> nil)
		putConstant(scheme x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66356)
		getLiteral(true x(1))
		return
lbl(66356)	putConstant(path x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66382)
		inlineDot(x(0) path x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(abs x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(66382)	getLiteral(false x(1))
		return
		endDefinition(66339)
lbl(66388)	definition(x(5) 66431 pid('Copy' 3 pos('./dp/URL.oz' 154 6) nil 6) <P: 583> nil)
		match(x(0) ht(66416 [onScalar(nil 66397) onRecord('|' 2 66398)]))
lbl(66397)	return
lbl(66398)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(4))
		move(x(3) x(0))
		genFastCall(<P: 583> 7)
lbl(66416)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(157)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66388)
lbl(66431)	definition(x(5) 66504 pid('Project' 3 pos('./dp/URL.oz' 160 6) nil 4) <P: 584> nil)
		allocateL3
lbl(66438)	definition(x(3) 66456 pid('' 2 pos('./dp/URL.oz' 161 16) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(66438)
lbl(66456)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 583> 7)
		endDefinition(66431)
lbl(66504)	definition(x(5) 66803 pid('UrlResolve' 3 pos('./dp/URL.oz' 169 6) nil 6) <P: 585> nil)
		testLiteral(x(0) url 66518)
		unify(x(2) x(1))
		return
lbl(66518)	testLiteral(x(1) url 66526)
		unify(x(2) x(0))
		return
lbl(66526)	putConstant(scheme x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66537)
		unify(x(2) x(1))
		return
lbl(66537)	putConstant(netloc x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66578)
		allocateL3
		putList(x(3))
		setConstant(scheme)
		setConstant(nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 584> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66578)	putConstant(path x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66726)
		inlineDot(x(1) path x(3) cache)
		callBI('Label' [x(3)]#[x(4)])
		testLiteral(x(4) abs 66638)
		allocateL3
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 584> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66638)	allocateL4
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 584> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		putRecord(abs 1 x(1))
		setConstant(nil)
		move(y(0) x(3))
		putConstant(path x(4))
		callBI('CondSelect' [x(3) x(4) x(1)]#[x(5)])
		inlineDot(x(0) path x(1) cache)
		move(x(2) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 578> 6)
		move(y(0) x(0))
		putConstant(path x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL4
		return
lbl(66726)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		putConstant(parameter x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66749)
		getLiteral(nil y(3))
		branch(66755)
lbl(66749)	getList(y(3))
		unifyLiteral(query)
		unifyLiteral(nil)
lbl(66755)	putList(x(3))
		setConstant(parameter)
		setValue(y(3))
		putList(x(2))
		setConstant(path)
		setValue(x(3))
		putList(x(0))
		setConstant(netloc)
		setValue(x(2))
		putList(x(1))
		setConstant(scheme)
		setValue(x(0))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 584> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(66504)
lbl(66803)	definition(x(6) 67107 pid('UrlToVs' 2 pos('./dp/URL.oz' 200 3) nil 9) <P: 586> nil)
		allocateL6
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		putConstant(scheme x(7))
		testBI('HasFeature' [x(0) x(7)]#[x(8)] 66867)
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral('://')
		inlineDot(x(0) scheme x(7) cache)
		unify(x(7) x(1))
		branch(66870)
lbl(66867)	getLiteral('' x(1))
lbl(66870)	move(y(0) x(0))
		putConstant(netloc x(1))
		putConstant('' x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(1))
		putConstant(path x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 66998)
		inlineDot(x(0) path x(1) cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		callBI('Label' [x(1)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		testLiteral(x(4) abs 66923)
		getLiteral('/' x(2))
		branch(66926)
lbl(66923)	getLiteral('' x(2))
lbl(66926)	move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
		testLiteral(x(1) nil 66944)
		getLiteral('' y(2))
		branch(67001)
lbl(66944)	inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 2 x(4) cache)
lbl(66956)	definition(x(1) 66975 pid('' 3 pos('./dp/URL.oz' 207 18) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral('/')
		unifyValue(x(1))
		return
		endDefinition(66956)
lbl(66975)	inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(5) 1 x(2) cache)
		move(x(4) x(0))
		move(y(2) x(3))
		genFastCall(<P: 30> 8)
		branch(67001)
lbl(66998)	getLiteral('' y(2))
lbl(67001)	move(y(0) x(0))
		putConstant(parameter x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67030)
		getRecord('#' 2 y(3))
		unifyLiteral(';')
		unifyVariable(x(1))
		inlineDot(x(0) parameter x(2) cache)
		unify(x(2) x(1))
		branch(67033)
lbl(67030)	getLiteral('' y(3))
lbl(67033)	move(y(0) x(0))
		putConstant(query x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67062)
		getRecord('#' 2 y(4))
		unifyLiteral('?')
		unifyVariable(x(1))
		inlineDot(x(0) query x(2) cache)
		unify(x(2) x(1))
		branch(67065)
lbl(67062)	getLiteral('' y(4))
lbl(67065)	move(y(0) x(0))
		putConstant(fragment x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67100)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(1))
		unifyNumber(35)
		unifyLiteral(nil)
		inlineDot(x(0) fragment x(1) cache)
		unify(x(1) x(2))
		deAllocateL6
		return
lbl(67100)	getLiteral('' y(5))
		deAllocateL6
		return
		endDefinition(66803)
lbl(67107)	definition(x(7) 67134 pid('VsToUrl' 2 pos('./dp/URL.oz' 217 3) nil 2) <P: 587> [y(170)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 581> 5)
		endDefinition(67107)
lbl(67134)	definition(x(8) 67161 pid('UrlToAtom' 2 pos('./dp/URL.oz' 221 3) nil 2) <P: 588> [y(169)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 586> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 195> 5)
		endDefinition(67134)
lbl(67161)	definition(x(2) 67198 pid('' 2 pos('./dp/URL.oz' 227 3) nil 2) <P: 589> [x(7) x(4) x(5) x(8) x(6)])
		putConstant(nil x(0))
lbl(67170)	definitionCopy(x(0) 67193 pid('/body' 0 pos('./dp/URL.oz' 227 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4)])
		getRecord('export' [fromVs isAbsUrl resolve toAtom toVs] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		return
		endDefinition(67170)
lbl(67193)	tailCall(x(0) 0)
		endDefinition(67161)
lbl(67198)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putRecord('export' [fromVs isAbsUrl resolve toAtom toVs] x(1))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(9))
		setValue(x(8))
		putConstant('import' x(0))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(146) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(146) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) fromVs x(2) cache)
		putList(x(18))
		setConstant(89)
		setConstant(nil)
		putList(x(17))
		setConstant(77)
		setValue(x(18))
		putList(x(16))
		setConstant(77)
		setValue(x(17))
		putList(x(15))
		setConstant(85)
		setValue(x(16))
		putList(x(14))
		setConstant(68)
		setValue(x(15))
		putList(x(13))
		setConstant(47)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(111)
		setValue(x(12))
		putList(x(10))
		setConstant(111)
		setValue(x(11))
		putList(x(9))
		setConstant(98)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(159) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) fromVs x(2) cache)
		putList(x(20))
		setConstant(89)
		setConstant(nil)
		putList(x(19))
		setConstant(77)
		setValue(x(20))
		putList(x(18))
		setConstant(77)
		setValue(x(19))
		putList(x(17))
		setConstant(85)
		setValue(x(18))
		putList(x(16))
		setConstant(68)
		setValue(x(17))
		putList(x(15))
		setConstant(47)
		setValue(x(16))
		putList(x(14))
		setConstant(109)
		setValue(x(15))
		putList(x(13))
		setConstant(101)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(121)
		setValue(x(11))
		putList(x(9))
		setConstant(115)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(184) x(1))
		call(x(2) 2)
		move(y(159) x(0))
		inlineDot(x(0) scheme x(0) cache)
		move(y(184) x(1))
		inlineDot(x(1) scheme x(2) cache)
		unify(x(2) x(0))
		putRecord(url ['functor' home pickle] x(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
lbl(67582)	definition(x(1) 67591 pid('Swallow' 1 pos('./init/Module.oz' 41 3) nil 1) <P: 590> nil)
		return
		endDefinition(67582)
lbl(67591)	putList(x(26))
		setConstant('Misc')
		setConstant(nil)
		putList(x(25))
		setConstant('Type')
		setValue(x(26))
		putList(x(24))
		setConstant('RunTimeLibrary')
		setValue(x(25))
		putList(x(23))
		setConstant('Compiler')
		setValue(x(24))
		putList(x(22))
		setConstant('TkTools')
		setValue(x(23))
		putList(x(21))
		setConstant('Tk')
		setValue(x(22))
		putList(x(20))
		setConstant('Open')
		setValue(x(21))
		putList(x(19))
		setConstant('URL')
		setValue(x(20))
		putList(x(18))
		setConstant('VirtualSite')
		setValue(x(19))
		putList(x(17))
		setConstant('Remote')
		setValue(x(18))
		putList(x(16))
		setConstant('Connection')
		setValue(x(17))
		putList(x(15))
		setConstant('Fault')
		setValue(x(16))
		putList(x(14))
		setConstant('Foreign')
		setValue(x(15))
		putList(x(13))
		setConstant('Finalize')
		setValue(x(14))
		putList(x(12))
		setConstant('ErrorRegistry')
		setValue(x(13))
		putList(x(11))
		setConstant('Error')
		setValue(x(12))
		putList(x(10))
		setConstant('FS')
		setValue(x(11))
		putList(x(9))
		setConstant('Schedule')
		setValue(x(10))
		putList(x(8))
		setConstant('FD')
		setValue(x(9))
		putList(x(7))
		setConstant('Search')
		setValue(x(8))
		putList(x(6))
		setConstant('Servlet')
		setValue(x(7))
		putList(x(5))
		setConstant('Syslet')
		setValue(x(6))
		putList(x(4))
		setConstant('Applet')
		setValue(x(5))
		putList(x(3))
		setConstant('GetArgs')
		setValue(x(4))
		putList(x(2))
		setConstant('Application')
		setValue(x(3))
		putList(x(36))
		setConstant('GumpParser')
		setConstant(nil)
		putList(x(35))
		setConstant('GumpScanner')
		setValue(x(36))
		putList(x(34))
		setConstant('Gump')
		setValue(x(35))
		putList(x(33))
		setConstant('Profiler')
		setValue(x(34))
		putList(x(32))
		setConstant('Ozcar')
		setValue(x(33))
		putList(x(31))
		setConstant('Emacs')
		setValue(x(32))
		putList(x(30))
		setConstant('CompilerPanel')
		setValue(x(31))
		putList(x(29))
		setConstant('Explorer')
		setValue(x(30))
		putList(x(28))
		setConstant('Browser')
		setValue(x(29))
		putList(x(27))
		setConstant('Panel')
		setValue(x(28))
		putList(x(42))
		setConstant('System')
		setConstant(nil)
		putList(x(41))
		setConstant('Pickle')
		setValue(x(42))
		putList(x(40))
		setConstant('Property')
		setValue(x(41))
		putList(x(39))
		setConstant('OS')
		setValue(x(40))
		putList(x(38))
		setConstant('Resolve')
		setValue(x(39))
		putList(x(37))
		setConstant('Module')
		setValue(x(38))
		putRecord(defaults [lib tools volatile] y(159))
		setValue(x(2))
		setValue(x(27))
		setValue(x(37))
		move(y(146) x(2))
		inlineDot(x(2) fromVs x(3) cache)
		putList(x(22))
		setConstant(89)
		setConstant(nil)
		putList(x(21))
		setConstant(77)
		setValue(x(22))
		putList(x(20))
		setConstant(77)
		setValue(x(21))
		putList(x(19))
		setConstant(85)
		setValue(x(20))
		putList(x(18))
		setConstant(68)
		setValue(x(19))
		putList(x(17))
		setConstant(47)
		setValue(x(18))
		putList(x(16))
		setConstant(109)
		setValue(x(17))
		putList(x(15))
		setConstant(101)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(115)
		setValue(x(14))
		putList(x(12))
		setConstant(121)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(47)
		setValue(x(11))
		putList(x(9))
		setConstant(47)
		setValue(x(10))
		putList(x(8))
		setConstant(58)
		setValue(x(9))
		putList(x(7))
		setConstant(122)
		setValue(x(8))
		putList(x(6))
		setConstant(111)
		setValue(x(7))
		putList(x(5))
		setConstant(45)
		setValue(x(6))
		putList(x(4))
		setConstant(120)
		setValue(x(5))
		moveMoveXYXY(x(0) y(184) x(1) y(185))
		move(x(4) x(0))
		createVariableMove(y(186) x(1))
		call(x(3) 2)
		move(y(159) x(0))
		inlineDot(x(0) volatile x(1) cache)
		inlineDot(x(0) lib x(3) cache)
		inlineDot(x(0) tools x(4) cache)
		move(x(1) y(159))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(187) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(159) x(0) y(187) x(1))
		createVariableMove(y(188) x(2))
		genFastCall(<P: 21> 6)
lbl(68031)	definition(x(1) 68086 pid('' 2 pos('./init/Module.oz' 56 3) nil 4) <P: 591> [y(146) y(186)])
		allocateL3
		getRecord('#' 2 x(1))
		unifyValVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) resolve x(2) cache)
		inlineDot(x(1) fromVs x(3) cache)
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(1) x(3))
		move(g(1) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(68031)
lbl(68086)	move(y(188) x(0))
		createVariableMove(y(159) x(2))
		genFastCall(<P: 29> 6)
		putConstant(map x(7))
		move(y(159) x(0))
		callBI(record [x(7) x(0)]#[x(8)])
lbl(68104)	definition(x(7) 68167 pid('ModNameToUrl' 2 pos('./init/Module.oz' 63 3) nil 5) <P: 592> [y(169) x(8) y(146)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 68138)
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
lbl(68138)	move(g(2) x(2))
		inlineDot(x(2) fromVs x(3) cache)
		putRecord('#' 2 x(4))
		setValue(y(1))
		setConstant('.ozf')
		move(x(4) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(68104)
lbl(68167)	definition(x(7) 68203 pid('NameOrUrlToUrl' 3 pos('./init/Module.oz' 75 3) nil 4) <P: 593> [y(146)])
		testLiteral(x(1) <N: NONE> 68183)
		move(x(2) x(1))
		genFastCall(<P: 592> 5)
lbl(68183)	move(g(0) x(0))
		inlineDot(x(0) fromVs x(3) cache)
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
		endDefinition(68167)
lbl(68203)	putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('feat' [<N: ModuleMap>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(68215)	definition(x(7) 68238 pid('BaseManager,init/fast' 0 pos('./init/Module.oz' 88 6) nil 2) <P: 594> [y(132)])
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		return
		endDefinition(68215)
lbl(68238)	definition(x(8) 68252 pid('BaseManager,init/slow' 1 pos('./init/Module.oz' 88 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 594> 1)
		endDefinition(68238)
lbl(68252)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(68262)	definition(x(7) 68428 pid('BaseManager,Link/fast' 2 pos('./init/Module.oz' 92 6) nil 4) <P: 595> [y(146) y(156) y(149) y(184) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intLink 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(68424 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 68352)
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(68423)
lbl(68352)	getSelf(x(2))
lbl(68354)	definition(x(3) 68414 pid('' 1 pos('./init/Module.oz' 100 7) nil 6) unit [x(2) y(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		putConstant(scheme x(3))
		putConstant(unit x(4))
		callBI('CondSelect' [x(2) x(3) x(4)]#[x(5)])
		move(g(2) x(3))
		testBI('==' [x(5) x(3)]#[x(4)] 68398)
		getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(system x(4) 2 cache)
lbl(68398)	getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(load x(4) 2 cache)
		endDefinition(68354)
lbl(68414)	callBI('ByNeed' [x(3)]#[x(2)])
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(1) x(2))
lbl(68423)	return
lbl(68424)	deAllocateL3
		return
		endDefinition(68262)
lbl(68428)	definition(x(8) 68463 pid('BaseManager,Link/slow' 1 pos('./init/Module.oz' 92 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 595> 5)
		endDefinition(68428)
lbl(68463)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: Link>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(159))
lbl(68475)	definition(x(7) 68647 pid('BaseManager,Apply/fast' 3 pos('./init/Module.oz' 114 6) nil 5) <P: 596> [y(146) y(164) y(159)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) toAtom x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(x(4) 2)
		putRecord(intApply 1 x(0))
		setValue(y(3))
		getSelf(x(3))
		sendMsg(trace x(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) 'import' x(3) cache)
		getSelf(x(4))
lbl(68530)	definition(x(1) 68618 pid('' 3 pos('./init/Module.oz' 118 6) nil 6) unit [x(4) g(0) y(0) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		move(x(2) y(0))
		createVariable(y(1))
		putConstant('from' x(4))
		testBI('HasFeature' [x(1) x(4)]#[x(5)] 68580)
		move(g(1) x(0))
		inlineDot(x(0) fromVs x(4) cache)
		inlineDot(x(1) 'from' x(5) cache)
		move(x(5) x(0))
		move(y(1) x(1))
		call(x(4) 2)
		branch(68586)
lbl(68580)	move(y(1) x(1))
		genFastCall(<P: 592> 4)
lbl(68586)	move(g(1) x(0))
		inlineDot(x(0) resolve x(3) cache)
		move(g(2) x(0))
		move(y(1) x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(3) true <N: Link> true 2) 0)
		endDefinition(68530)
lbl(68618)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailCall(x(2) 2)
		endDefinition(68475)
lbl(68647)	definition(x(8) 68688 pid('BaseManager,Apply/slow' 1 pos('./init/Module.oz' 114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 596> 7)
		endDefinition(68647)
lbl(68688)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Apply>)
		setValue(x(8))
		setValue(x(7))
lbl(68698)	definition(x(7) 68810 pid('BaseManager,Enter/fast' 2 pos('./init/Module.oz' 131 6) nil 4) <P: 597> [y(146) y(156) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intEnter 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(68806 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 68791)
		putRecord(module 2 x(0))
		setConstant(alreadyInstalled)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(68791)	getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(68805)	return
lbl(68806)	deAllocateL3
		return
		endDefinition(68698)
lbl(68810)	definition(x(8) 68845 pid('BaseManager,Enter/slow' 1 pos('./init/Module.oz' 131 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 597> 5)
		endDefinition(68810)
lbl(68845)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: Enter>)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern [1 name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(68865)	definition(x(8) 68996 pid('BaseManager,link' 1 pos('./init/Module.oz' 147 6) nil 4) unit [x(7) y(159)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 68902)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
lbl(68902)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 68925)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(2))
		branch(68928)
lbl(68925)	getLiteral(<N: NONE> y(2))
lbl(68928)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 68951)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(68954)
lbl(68951)	getLiteral(<N: NONE> y(3))
lbl(68954)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 593> 6)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(1) true <N: Link> false 2) 0)
		move(y(0) x(0))
		putConstant(1 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 68992)
		move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(68992)	deAllocateL5
		return
		endDefinition(68865)
lbl(68996)	putList(x(7))
		setConstant(link)
		setValue(x(8))
		putRecord(messagePattern [1 2 name url] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69014)	definition(x(13) 69157 pid('BaseManager,apply' 1 pos('./init/Module.oz' 156 6) nil 4) unit [x(8) y(159)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69060)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(69060)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69083)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(69086)
lbl(69083)	getLiteral(<N: NONE> y(3))
lbl(69086)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69109)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(69112)
lbl(69109)	getLiteral(<N: NONE> y(4))
lbl(69112)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 593> 6)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(1) true <N: Apply> false 3) 0)
		move(y(0) x(0))
		putConstant(2 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 69153)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(69153)	deAllocateL6
		return
		endDefinition(69014)
lbl(69157)	putList(x(8))
		setConstant(apply)
		setValue(x(13))
		putRecord(messagePattern [1 name url] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69173)	definition(x(14) 69272 pid('BaseManager,enter' 1 pos('./init/Module.oz' 166 6) nil 4) unit [x(13) y(159)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(name x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69221)
		inlineDot(x(0) name x(2) cache)
		unify(x(2) y(2))
		branch(69224)
lbl(69221)	getLiteral(<N: NONE> y(2))
lbl(69224)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69247)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69250)
lbl(69247)	getLiteral(<N: NONE> y(3))
lbl(69250)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 593> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(1) true <N: Enter> true 2) 0)
		endDefinition(69173)
lbl(69272)	putList(x(13))
		setConstant(enter)
		setValue(x(14))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(7))
		setValue(x(8))
		setValue(x(13))
		move(y(159) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('BaseManager' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(69311)	definition(x(2) 70070 pid('' 2 pos('./init/Module.oz' 178 3) nil 4) <P: 598> [y(185) y(159) y(146) y(55)])
		putList(x(2))
		setPredicateRef(<Q: 599>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 600>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 601>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 602>)
		setValue(x(2))
lbl(69341)	definitionCopy(x(3) 70065 pid('/body' 0 pos('./init/Module.oz' 178 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL5
		move(g(0) x(0))
		inlineDot(x(0) 'Pickle' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'OS' x(3) cache)
		inlineDot(x(0) 'Boot' x(4) cache)
		inlineDot(x(3) getEnv x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		putConstant('OZ_TRACE_MODULE' x(0))
		createVariableMove(y(3) x(1))
		call(x(3) 2)
		createVariable(y(4))
		testLiteral(y(3) false 69409)
		unify(y(4) g(1))
		branch(69421)
lbl(69409)	move(y(1) x(0))
		inlineDot(x(0) show x(1) cache)
		unify(x(1) y(4))
lbl(69421)	putList(x(0))
		setValue(g(2))
		setConstant(nil)
lbl(69427)	definition(x(7) 69438 pid('RootManager,trace/fast' 1 pos('./init/Module.oz' 196 2) nil 1) <Q: 599> [y(4)])
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(69427)
lbl(69438)	definition(x(8) 69464 pid('RootManager,trace/slow' 1 pos('./init/Module.oz' 196 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 599> 3)
		endDefinition(69438)
lbl(69464)	putRecord('#' [1 2 fast] x(9))
		setConstant(trace)
		setValue(x(8))
		setValue(x(7))
lbl(69474)	definition(x(7) 69541 pid('RootManager,load/fast' 2 pos('./init/Module.oz' 200 2) nil 6) <Q: 600> [y(0) g(3)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) load x(3) cache)
		move(g(1) x(4))
		inlineDot(x(4) toVs x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg(<N: Apply> x(4) 3 cache)
		endDefinition(69474)
lbl(69541)	definition(x(8) 69576 pid('RootManager,load/slow' 1 pos('./init/Module.oz' 200 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 600> 5)
		endDefinition(69541)
lbl(69576)	putRecord('#' [1 2 fast] x(10))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(69586)	definition(x(7) 69876 pid('RootManager,system/fast' 2 pos('./init/Module.oz' 205 2) nil 5) <Q: 601> [g(3) g(4) y(2) y(0)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(systemOrBoot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		exHandler(69672)
		move(x(0) y(2))
		createCond(69666)
lbl(69634)	lastClause
		clause
		ask
lbl(69637)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(systemNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(69666)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(69672)	move(y(0) x(0))
		inlineDot(x(0) netloc x(1) cache)
		callBI('StringToAtom' [x(1)]#[x(2)])
		inlineDot(x(0) path x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(46 x(1))
		createVariableMove(y(3) x(2))
		createVariable(x(3))
		genFastCall(<P: 2> 8)
		createVariable(y(4))
		match(y(2) ht(69855 [onScalar(boot 69724) onScalar(system 69775)]))
lbl(69724)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(boot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) manager x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		call(x(2) 2)
		branch(69868)
lbl(69775)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(system 2 x(0))
		setValue(y(3))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(3) x(0))
		inlineDot(x(0) load x(2) cache)
		putRecord('#' 3 x(3))
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setValue(y(3))
		setConstant('.ozf')
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(<N: Apply> x(4) 3 cache)
		branch(69868)
lbl(69855)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(220)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(69868)	unify(y(1) y(4))
		popEx
		deAllocateL5
		return
		endDefinition(69586)
lbl(69876)	definition(x(8) 69911 pid('RootManager,system/slow' 1 pos('./init/Module.oz' 205 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 601> 5)
		endDefinition(69876)
lbl(69911)	putRecord('#' [1 2 fast] x(11))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('RootManager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(69970)	definition(x(7) 69984 pid('Manager,system/fast' 2 pos('./init/Module.oz' 233 2) nil 3) <Q: 602> [y(1)])
		tailSendMsg(<N: Link> g(0) 2 cache)
		endDefinition(69970)
lbl(69984)	definition(x(8) 70019 pid('Manager,system/slow' 1 pos('./init/Module.oz' 233 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 602> 5)
		endDefinition(69984)
lbl(70019)	putRecord('#' [1 2 fast] x(9))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Manager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [manager root] g(5))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL5
		return
		endDefinition(69341)
lbl(70065)	tailCall(x(3) 0)
		endDefinition(69311)
lbl(70070)	putList(x(4))
		setConstant(object)
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(7))
		putRecord('export' [manager root] x(1))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(70144)	definition(x(2) 70465 pid('' 2 pos('./compiler/FunMisc.oz' 1 0) nil 4) <P: 603> [y(53) y(39) y(52) y(47) y(54)])
		putList(x(2))
		setPredicateRef(<Q: 604>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 605>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 606>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 607>)
		setValue(x(2))
lbl(70174)	definitionCopy(x(3) 70460 pid('/body' 0 pos('./compiler/FunMisc.oz' 1 0) [once] 5) unit [x(0) g(0) g(1) g(2) g(3) g(4) x(1)])
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
lbl(70189)	definition(x(2) 70215 pid('IsIDChar' 2 pos('./compiler/Misc.oz' 27 3) nil 4) <Q: 604> [g(1)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 70203)
		getLiteral(true x(1))
		return
lbl(70203)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(70189)
lbl(70215)	definition(x(3) 70286 pid('IsQuotedVariable' 2 pos('./compiler/Misc.oz' 31 3) nil 3) <Q: 605> nil)
		match(x(0) ht(70271 [onScalar(nil 70224) onRecord('|' 2 70228)]))
lbl(70224)	getLiteral(false x(1))
		return
lbl(70228)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 70253)
lbl(70244)	testLiteral(y(2) nil 70253)
lbl(70248)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(70253)	testNumber(y(1) 0 70262)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(70262)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 605> 5)
lbl(70271)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(38)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(70215)
lbl(70286)	definition(x(3) 70358 pid('IsPrintName' 2 pos('./compiler/Misc.oz' 41 3) nil 4) <Q: 606> [g(2) g(3) x(2)])
		testBI('IsAtom' [x(0)]#[x(2)] 70352)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70339 [onScalar(nil 70302) onRecord('|' 2 70306)]))
lbl(70302)	getLiteral(false x(1))
		return
lbl(70306)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 70319)
lbl(70313)	move(x(2) x(0))
		genFastCall(<Q: 605> 5)
lbl(70319)	testBI('Char.isUpper' [x(0)]#[x(3)] 70335)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(70335)	getLiteral(false x(1))
		return
lbl(70339)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(53)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70352)	getLiteral(false x(1))
		return
		endDefinition(70286)
lbl(70358)	definition(x(2) 70433 pid('DowncasePrintName' 2 pos('./compiler/Misc.oz' 58 0) nil 5) <Q: 607> [g(2) g(3) g(4) g(5)])
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70418 [onScalar(nil 70370) onRecord('|' 2 70374)]))
lbl(70370)	unify(x(1) x(0))
		return
lbl(70374)	getVarVar(x(2) x(3))
		testBI('Char.isUpper' [x(2)]#[x(4)] 70397)
		callBI('Char.toLower' [x(2)]#[x(0)])
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		callBI('StringToAtom' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(70397)	testNumber(x(2) 96 70405)
lbl(70401)	unify(x(1) x(0))
		return
lbl(70405)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(63)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70418)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(66)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(70358)
lbl(70433)	inlineDot(x(1) nameVariable x(4) cache)
		inlineDot(x(1) isBuiltin x(1) cache)
		getRecord('export' [downcasePrintName isBuiltin isPrintName nameVariable] g(6))
		unifyValue(x(2))
		unifyValue(x(1))
		unifyValue(x(3))
		unifyValue(x(4))
		return
		endDefinition(70174)
lbl(70460)	tailCall(x(3) 0)
		endDefinition(70144)
lbl(70465)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putRecord(info [type] x(1))
		setConstant(nil)
		putRecord('import' ['CompilerSupport'] x(0))
		setValue(x(1))
		putRecord('export' [downcasePrintName isBuiltin isPrintName nameVariable] x(1))
		setValue(x(6))
		setValue(x(8))
		setValue(x(5))
		setValue(x(7))
		createVariableMove(y(54) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(any 1 x(4))
		setConstant(det)
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setConstant(det)
		setValue(x(3))
		putList(x(1))
		setConstant(det)
		setValue(x(2))
		putList(x(6))
		setConstant(false)
		setConstant(nil)
		putList(x(5))
		setConstant(false)
		setValue(x(6))
		putList(x(9))
		setConstant(number)
		setConstant(nil)
		putList(x(8))
		setConstant(number)
		setValue(x(9))
		putList(x(7))
		setConstant(number)
		setValue(x(8))
		putRecord(builtin [det imods types] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(7))
		putRecord(any 1 x(14))
		setConstant(det)
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(12))
		setConstant(det)
		setValue(x(13))
		putList(x(11))
		setConstant(det)
		setValue(x(12))
		putList(x(16))
		setConstant(false)
		setConstant(nil)
		putList(x(15))
		setConstant(false)
		setValue(x(16))
		putList(x(19))
		setConstant(number)
		setConstant(nil)
		putList(x(18))
		setConstant(number)
		setValue(x(19))
		putList(x(17))
		setConstant(number)
		setValue(x(18))
		putRecord(builtin [det imods types] x(10))
		setValue(x(11))
		setValue(x(15))
		setValue(x(17))
		putRecord(any 1 x(23))
		setConstant(det)
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(21))
		setConstant(det)
		setValue(x(22))
		putList(x(24))
		setConstant(false)
		setConstant(nil)
		putList(x(26))
		setConstant(int)
		setConstant(nil)
		putList(x(25))
		setConstant(int)
		setValue(x(26))
		putRecord(builtin [det imods types] x(20))
		setValue(x(21))
		setValue(x(24))
		setValue(x(25))
		putList(x(29))
		setConstant(det)
		setConstant(nil)
		putList(x(28))
		setConstant(det)
		setValue(x(29))
		putList(x(31))
		setConstant(false)
		setConstant(nil)
		putList(x(30))
		setConstant(false)
		setValue(x(31))
		putList(x(33))
		setConstant(record)
		setConstant(nil)
		putList(x(32))
		setConstant('class')
		setValue(x(33))
		putRecord(builtin [det imods types] x(27))
		setValue(x(28))
		setValue(x(30))
		setValue(x(32))
		putRecord(any 1 x(38))
		setConstant(det)
		putList(x(37))
		setValue(x(38))
		setConstant(nil)
		putList(x(36))
		setConstant(det)
		setValue(x(37))
		putList(x(35))
		setConstant(det)
		setValue(x(36))
		putList(x(40))
		setConstant(false)
		setConstant(nil)
		putList(x(39))
		setConstant(false)
		setValue(x(40))
		putList(x(43))
		setConstant(number)
		setConstant(nil)
		putList(x(42))
		setConstant(number)
		setValue(x(43))
		putList(x(41))
		setConstant(number)
		setValue(x(42))
		putRecord(builtin [det imods types] x(34))
		setValue(x(35))
		setValue(x(39))
		setValue(x(41))
		putRecord(any 1 x(47))
		setConstant(det)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant(det)
		setValue(x(46))
		putList(x(48))
		setConstant(false)
		setConstant(nil)
		putList(x(50))
		setConstant(int)
		setConstant(nil)
		putList(x(49))
		setConstant(int)
		setValue(x(50))
		putRecord(builtin [det imods types] x(44))
		setValue(x(45))
		setValue(x(48))
		setValue(x(49))
		putList(x(54))
		setConstant(any)
		setConstant(nil)
		putList(x(53))
		setConstant(det)
		setValue(x(54))
		putList(x(52))
		setConstant(detOrKinded)
		setValue(x(53))
		putList(x(56))
		setConstant(false)
		setConstant(nil)
		putList(x(55))
		setConstant(false)
		setValue(x(56))
		putList(x(59))
		setConstant(value)
		setConstant(nil)
		putList(x(58))
		setConstant(feature)
		setValue(x(59))
		putList(x(57))
		setConstant(recordCOrChunk)
		setValue(x(58))
		putRecord(builtin [det imods types] x(51))
		setValue(x(52))
		setValue(x(55))
		setValue(x(57))
		putRecord(any 1 x(64))
		setConstant(det)
		putList(x(63))
		setValue(x(64))
		setConstant(nil)
		putList(x(62))
		setConstant(det)
		setValue(x(63))
		putList(x(61))
		setConstant(det)
		setValue(x(62))
		putList(x(66))
		setConstant(false)
		setConstant(nil)
		putList(x(65))
		setConstant(false)
		setValue(x(66))
		putList(x(69))
		setConstant(float)
		setConstant(nil)
		putList(x(68))
		setConstant(float)
		setValue(x(69))
		putList(x(67))
		setConstant(float)
		setValue(x(68))
		putRecord(builtin [det imods types] x(60))
		setValue(x(61))
		setValue(x(65))
		setValue(x(67))
		putRecord(any 1 x(74))
		setConstant(det)
		putList(x(73))
		setValue(x(74))
		setConstant(nil)
		putList(x(72))
		setConstant(det)
		setValue(x(73))
		putList(x(71))
		setConstant(det)
		setValue(x(72))
		putList(x(76))
		setConstant(false)
		setConstant(nil)
		putList(x(75))
		setConstant(false)
		setValue(x(76))
		putList(x(79))
		setConstant(bool)
		setConstant(nil)
		putList(x(78))
		setConstant(comparable)
		setValue(x(79))
		putList(x(77))
		setConstant(comparable)
		setValue(x(78))
		putRecord(builtin [det imods negated test types] x(70))
		setValue(x(71))
		setValue(x(75))
		setConstant('>=')
		setConstant(true)
		setValue(x(77))
		putList(x(82))
		setConstant(any)
		setConstant(nil)
		putList(x(81))
		setConstant(any)
		setValue(x(82))
		putList(x(84))
		setConstant(false)
		setConstant(nil)
		putList(x(83))
		setConstant(false)
		setValue(x(84))
		putList(x(86))
		setConstant(value)
		setConstant(nil)
		putList(x(85))
		setConstant(value)
		setValue(x(86))
		putRecord(builtin [det imods types] x(80))
		setValue(x(81))
		setValue(x(83))
		setValue(x(85))
		putList(x(89))
		setConstant(any)
		setConstant(nil)
		putList(x(88))
		setConstant(any)
		setValue(x(89))
		putList(x(91))
		setConstant(false)
		setConstant(nil)
		putList(x(90))
		setConstant(false)
		setValue(x(91))
		putList(x(93))
		setConstant(value)
		setConstant(nil)
		putList(x(92))
		setConstant(value)
		setValue(x(93))
		putRecord(builtin [det imods types] x(87))
		setValue(x(88))
		setValue(x(90))
		setValue(x(92))
		putRecord(any 1 x(98))
		setConstant(det)
		putList(x(97))
		setValue(x(98))
		setConstant(nil)
		putList(x(96))
		setConstant(det)
		setValue(x(97))
		putList(x(95))
		setConstant(det)
		setValue(x(96))
		putList(x(100))
		setConstant(false)
		setConstant(nil)
		putList(x(99))
		setConstant(false)
		setValue(x(100))
		putList(x(103))
		setConstant(bool)
		setConstant(nil)
		putList(x(102))
		setConstant(comparable)
		setValue(x(103))
		putList(x(101))
		setConstant(comparable)
		setValue(x(102))
		putRecord(builtin [det imods negated test types] x(94))
		setValue(x(95))
		setValue(x(99))
		setConstant('>')
		setConstant(true)
		setValue(x(101))
		putRecord(any 1 x(108))
		setConstant(det)
		putList(x(107))
		setValue(x(108))
		setConstant(nil)
		putList(x(106))
		setConstant(detOrKinded)
		setValue(x(107))
		putList(x(105))
		setConstant(detOrKinded)
		setValue(x(106))
		putList(x(110))
		setConstant(false)
		setConstant(nil)
		putList(x(109))
		setConstant(false)
		setValue(x(110))
		putList(x(113))
		setConstant(bool)
		setConstant(nil)
		putList(x(112))
		setConstant(value)
		setValue(x(113))
		putList(x(111))
		setConstant(value)
		setValue(x(112))
		putRecord(builtin [det imods negated test types] x(104))
		setValue(x(105))
		setValue(x(109))
		setConstant('\\=')
		setConstant(true)
		setValue(x(111))
		putRecord(any 1 x(118))
		setConstant(det)
		putList(x(117))
		setValue(x(118))
		setConstant(nil)
		putList(x(116))
		setConstant(det)
		setValue(x(117))
		putList(x(115))
		setConstant(det)
		setValue(x(116))
		putList(x(120))
		setConstant(false)
		setConstant(nil)
		putList(x(119))
		setConstant(false)
		setValue(x(120))
		putList(x(123))
		setConstant(bool)
		setConstant(nil)
		putList(x(122))
		setConstant(comparable)
		setValue(x(123))
		putList(x(121))
		setConstant(comparable)
		setValue(x(122))
		putRecord(builtin [det imods negated test types] x(114))
		setValue(x(115))
		setValue(x(119))
		setConstant('=<')
		setConstant(true)
		setValue(x(121))
		putRecord(any 1 x(128))
		setConstant(det)
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant(det)
		setValue(x(127))
		putList(x(125))
		setConstant(det)
		setValue(x(126))
		putList(x(130))
		setConstant(false)
		setConstant(nil)
		putList(x(129))
		setConstant(false)
		setValue(x(130))
		putList(x(133))
		setConstant(bool)
		setConstant(nil)
		putList(x(132))
		setConstant(comparable)
		setValue(x(133))
		putList(x(131))
		setConstant(comparable)
		setValue(x(132))
		putRecord(builtin [det imods negated test types] x(124))
		setValue(x(125))
		setValue(x(129))
		setConstant('<')
		setConstant(true)
		setValue(x(131))
		putList(x(136))
		setConstant(any)
		setConstant(nil)
		putList(x(135))
		setConstant(any)
		setValue(x(136))
		putList(x(137))
		setConstant(false)
		setConstant(nil)
		putList(x(139))
		setConstant(value)
		setConstant(nil)
		putList(x(138))
		setConstant(value)
		setValue(x(139))
		putRecord(builtin [det imods types] x(134))
		setValue(x(135))
		setValue(x(137))
		setValue(x(138))
		putRecord(any 1 x(143))
		setConstant(det)
		putList(x(142))
		setValue(x(143))
		setConstant(nil)
		putList(x(141))
		setConstant(det)
		setValue(x(142))
		putList(x(144))
		setConstant(false)
		setConstant(nil)
		putList(x(146))
		setConstant(number)
		setConstant(nil)
		putList(x(145))
		setConstant(number)
		setValue(x(146))
		putRecord(builtin [det imods types] x(140))
		setValue(x(141))
		setValue(x(144))
		setValue(x(145))
		putList(x(149))
		setConstant(any)
		setConstant(nil)
		putList(x(148))
		setConstant(det)
		setValue(x(149))
		putList(x(150))
		setConstant(false)
		setConstant(nil)
		putList(x(152))
		setConstant(value)
		setConstant(nil)
		putList(x(151))
		setConstant(cell)
		setValue(x(152))
		putRecord(builtin [det imods types] x(147))
		setValue(x(148))
		setValue(x(150))
		setValue(x(151))
		putRecord(any 1 x(156))
		setConstant(det)
		putList(x(155))
		setValue(x(156))
		setConstant(nil)
		putList(x(154))
		setConstant(det)
		setValue(x(155))
		putList(x(157))
		setConstant(false)
		setConstant(nil)
		putList(x(159))
		setConstant(float)
		setConstant(nil)
		putList(x(158))
		setConstant(float)
		setValue(x(159))
		putRecord(builtin [det imods types] x(153))
		setValue(x(154))
		setValue(x(157))
		setValue(x(158))
		putRecord(any 1 x(164))
		setConstant(det)
		putList(x(163))
		setValue(x(164))
		setConstant(nil)
		putList(x(162))
		setConstant(det)
		setValue(x(163))
		putList(x(161))
		setConstant(det)
		setValue(x(162))
		putList(x(166))
		setConstant(false)
		setConstant(nil)
		putList(x(165))
		setConstant(false)
		setValue(x(166))
		putList(x(169))
		setConstant(record)
		setConstant(nil)
		putList(x(168))
		setConstant(record)
		setValue(x(169))
		putList(x(167))
		setConstant(record)
		setValue(x(168))
		putRecord(builtin [det imods types] x(160))
		setValue(x(161))
		setValue(x(165))
		setValue(x(167))
		putRecord(any 1 x(175))
		setConstant(det)
		putList(x(174))
		setValue(x(175))
		setConstant(nil)
		putList(x(173))
		setConstant(any)
		setValue(x(174))
		putList(x(172))
		setConstant(det)
		setValue(x(173))
		putList(x(171))
		setConstant(det)
		setValue(x(172))
		putList(x(178))
		setConstant(false)
		setConstant(nil)
		putList(x(177))
		setConstant(false)
		setValue(x(178))
		putList(x(176))
		setConstant(false)
		setValue(x(177))
		putList(x(182))
		setConstant(record)
		setConstant(nil)
		putList(x(181))
		setConstant(value)
		setValue(x(182))
		putList(x(180))
		setConstant(feature)
		setValue(x(181))
		putList(x(179))
		setConstant(record)
		setValue(x(180))
		putRecord(builtin [det imods types] x(170))
		setValue(x(171))
		setValue(x(176))
		setValue(x(179))
		putRecord(any 1 x(187))
		setConstant(det)
		putList(x(186))
		setValue(x(187))
		setConstant(nil)
		putList(x(185))
		setConstant(det)
		setValue(x(186))
		putList(x(184))
		setConstant(det)
		setValue(x(185))
		putList(x(189))
		setConstant(false)
		setConstant(nil)
		putList(x(188))
		setConstant(false)
		setValue(x(189))
		putRecord(pair 2 x(193))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(192))
		setValue(x(193))
		putList(x(194))
		setConstant(record)
		setConstant(nil)
		putList(x(191))
		setValue(x(192))
		setValue(x(194))
		putList(x(190))
		setConstant(record)
		setValue(x(191))
		putRecord(builtin [det imods types] x(183))
		setValue(x(184))
		setValue(x(188))
		setValue(x(190))
		putList(x(197))
		setConstant(any)
		setConstant(nil)
		putList(x(196))
		setConstant(det)
		setValue(x(197))
		putList(x(199))
		setConstant(false)
		setConstant(nil)
		putList(x(198))
		setConstant(false)
		setValue(x(199))
		putList(x(201))
		setConstant('unit')
		setConstant(nil)
		putList(x(200))
		setConstant(int)
		setValue(x(201))
		putRecord(builtin [det imods types] x(195))
		setValue(x(196))
		setValue(x(198))
		setValue(x(200))
		putRecord(any 1 x(206))
		setConstant(det)
		putList(x(205))
		setValue(x(206))
		setConstant(nil)
		putList(x(204))
		setConstant(det)
		setValue(x(205))
		putList(x(203))
		setConstant(det)
		setValue(x(204))
		putList(x(208))
		setConstant(false)
		setConstant(nil)
		putList(x(207))
		setConstant(false)
		setValue(x(208))
		putList(x(211))
		setConstant(bool)
		setConstant(nil)
		putList(x(210))
		setConstant(bool)
		setValue(x(211))
		putList(x(209))
		setConstant(bool)
		setValue(x(210))
		putRecord(builtin [det imods test types] x(202))
		setValue(x(203))
		setValue(x(207))
		setConstant(true)
		setValue(x(209))
		putRecord(any 1 x(215))
		setConstant(det)
		putList(x(214))
		setValue(x(215))
		setConstant(nil)
		putList(x(213))
		setConstant(det)
		setValue(x(214))
		putList(x(216))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(219))
		setConstant(feature)
		putList(x(218))
		setValue(x(219))
		setConstant(nil)
		putList(x(217))
		setConstant(record)
		setValue(x(218))
		putRecord(builtin [det imods types] x(212))
		setValue(x(213))
		setValue(x(216))
		setValue(x(217))
		putRecord(any 1 x(223))
		setConstant(det)
		putList(x(222))
		setValue(x(223))
		setConstant(nil)
		putList(x(221))
		setConstant(det)
		setValue(x(222))
		putList(x(224))
		setConstant(false)
		setConstant(nil)
		putList(x(226))
		setConstant(int)
		setConstant(nil)
		putList(x(225))
		setConstant(array)
		setValue(x(226))
		putRecord(builtin [det imods types] x(220))
		setValue(x(221))
		setValue(x(224))
		setValue(x(225))
		putRecord(any 1 x(230))
		setConstant(det)
		putList(x(229))
		setValue(x(230))
		setConstant(nil)
		putList(x(228))
		setConstant(det)
		setValue(x(229))
		putList(x(231))
		setConstant(false)
		setConstant(nil)
		putList(x(233))
		setConstant(int)
		setConstant(nil)
		putList(x(232))
		setConstant(array)
		setValue(x(233))
		putRecord(builtin [det imods types] x(227))
		setValue(x(228))
		setValue(x(231))
		setValue(x(232))
		putRecord(any 1 x(237))
		setConstant(det)
		putList(x(236))
		setValue(x(237))
		setConstant(nil)
		putList(x(235))
		setConstant(det)
		setValue(x(236))
		putList(x(238))
		setConstant(false)
		setConstant(nil)
		putList(x(240))
		setConstant(float)
		setConstant(nil)
		putList(x(239))
		setConstant(float)
		setValue(x(240))
		putRecord(builtin [det imods types] x(234))
		setValue(x(235))
		setValue(x(238))
		setValue(x(239))
		putList(x(243))
		setConstant(any)
		setConstant(nil)
		putList(x(242))
		setConstant(det)
		setValue(x(243))
		putList(x(245))
		setConstant(false)
		setConstant(nil)
		putList(x(244))
		setConstant(false)
		setValue(x(245))
		putList(x(247))
		setConstant(value)
		setConstant(nil)
		putList(x(246))
		setConstant(cell)
		setValue(x(247))
		putRecord(builtin [det imods types] x(241))
		setValue(x(242))
		setValue(x(244))
		setValue(x(246))
		putRecord(any 1 x(251))
		setConstant(det)
		putList(x(250))
		setValue(x(251))
		setConstant(nil)
		putList(x(249))
		setConstant(det)
		setValue(x(250))
		putList(x(252))
		setConstant(false)
		setConstant(nil)
		putList(x(254))
		setConstant(float)
		setConstant(nil)
		putList(x(253))
		setConstant(float)
		setValue(x(254))
		putRecord(builtin [det imods types] x(248))
		setValue(x(249))
		setValue(x(252))
		setValue(x(253))
		putRecord(any 1 x(259))
		setConstant(det)
		putList(x(258))
		setValue(x(259))
		setConstant(nil)
		putList(x(257))
		setConstant(det)
		setValue(x(258))
		putList(x(256))
		setConstant(det)
		setValue(x(257))
		putList(x(261))
		setConstant(false)
		setConstant(nil)
		putList(x(260))
		setConstant(false)
		setValue(x(261))
		putList(x(264))
		setConstant(float)
		setConstant(nil)
		putList(x(263))
		setConstant(float)
		setValue(x(264))
		putList(x(262))
		setConstant(float)
		setValue(x(263))
		putRecord(builtin [det imods types] x(255))
		setValue(x(256))
		setValue(x(260))
		setValue(x(262))
		putRecord(any 1 x(268))
		setConstant(det)
		putList(x(267))
		setValue(x(268))
		setConstant(nil)
		putList(x(266))
		setConstant(det)
		setValue(x(267))
		putList(x(269))
		setConstant(false)
		setConstant(nil)
		putList(x(271))
		setConstant(string)
		setConstant(nil)
		putList(x(270))
		setConstant(atom)
		setValue(x(271))
		putRecord(builtin [det imods types] x(265))
		setValue(x(266))
		setValue(x(269))
		setValue(x(270))
		putList(x(274))
		setConstant(det)
		setConstant(nil)
		putList(x(273))
		setConstant(det)
		setValue(x(274))
		putList(x(276))
		setConstant(false)
		setConstant(nil)
		putList(x(275))
		setConstant(false)
		setValue(x(276))
		putList(x(278))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(277))
		setConstant(bitArray)
		setValue(x(278))
		putRecord(builtin [det imods types] x(272))
		setValue(x(273))
		setValue(x(275))
		setValue(x(277))
		putRecord(any 1 x(282))
		setConstant(det)
		putList(x(281))
		setValue(x(282))
		setConstant(nil)
		putList(x(280))
		setConstant(det)
		setValue(x(281))
		putList(x(283))
		setConstant(false)
		setConstant(nil)
		putList(x(285))
		setConstant(int)
		setConstant(nil)
		putList(x(284))
		setConstant(bitArray)
		setValue(x(285))
		putRecord(builtin [det imods types] x(279))
		setValue(x(280))
		setValue(x(283))
		setValue(x(284))
		putList(x(288))
		setConstant(det)
		setConstant(nil)
		putList(x(287))
		setConstant(det)
		setValue(x(288))
		putList(x(290))
		setConstant(false)
		setConstant(nil)
		putList(x(289))
		setConstant(false)
		setValue(x(290))
		putList(x(292))
		setConstant(int)
		setConstant(nil)
		putList(x(291))
		setConstant(bitArray)
		setValue(x(292))
		putRecord(builtin [det imods types] x(286))
		setValue(x(287))
		setValue(x(289))
		setValue(x(291))
		putRecord(any 1 x(296))
		setConstant(det)
		putList(x(295))
		setValue(x(296))
		setConstant(nil)
		putList(x(294))
		setConstant(det)
		setValue(x(295))
		putList(x(297))
		setConstant(false)
		setConstant(nil)
		putList(x(299))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(298))
		setConstant(bitArray)
		setValue(x(299))
		putRecord(builtin [det imods types] x(293))
		setValue(x(294))
		setValue(x(297))
		setValue(x(298))
		putRecord(any 1 x(303))
		setConstant(det)
		putList(x(302))
		setValue(x(303))
		setConstant(nil)
		putList(x(301))
		setConstant(det)
		setValue(x(302))
		putList(x(304))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(307))
		setConstant(int)
		putList(x(306))
		setValue(x(307))
		setConstant(nil)
		putList(x(305))
		setConstant(bitArray)
		setValue(x(306))
		putRecord(builtin [det imods types] x(300))
		setValue(x(301))
		setValue(x(304))
		setValue(x(305))
		putRecord(any 1 x(312))
		setConstant(det)
		putList(x(311))
		setValue(x(312))
		setConstant(nil)
		putList(x(310))
		setConstant(det)
		setValue(x(311))
		putList(x(309))
		setConstant(det)
		setValue(x(310))
		putList(x(314))
		setConstant(false)
		setConstant(nil)
		putList(x(313))
		setConstant(false)
		setValue(x(314))
		putList(x(317))
		setConstant(bool)
		setConstant(nil)
		putList(x(316))
		setConstant(bitArray)
		setValue(x(317))
		putList(x(315))
		setConstant(bitArray)
		setValue(x(316))
		putRecord(builtin [det imods test types] x(308))
		setValue(x(309))
		setValue(x(313))
		setConstant(true)
		setValue(x(315))
		putRecord(any 1 x(321))
		setConstant(det)
		putList(x(320))
		setValue(x(321))
		setConstant(nil)
		putList(x(319))
		setConstant(det)
		setValue(x(320))
		putList(x(322))
		setConstant(false)
		setConstant(nil)
		putList(x(324))
		setConstant(int)
		setConstant(nil)
		putList(x(323))
		setConstant(bitArray)
		setValue(x(324))
		putRecord(builtin [det imods types] x(318))
		setValue(x(319))
		setValue(x(322))
		setValue(x(323))
		putRecord(any 1 x(328))
		setConstant(det)
		putList(x(327))
		setValue(x(328))
		setConstant(nil)
		putList(x(326))
		setConstant(det)
		setValue(x(327))
		putList(x(329))
		setConstant(false)
		setConstant(nil)
		putList(x(331))
		setConstant(bool)
		setConstant(nil)
		putList(x(330))
		setConstant(value)
		setValue(x(331))
		putRecord(builtin [det imods test types] x(325))
		setValue(x(326))
		setValue(x(329))
		setConstant(true)
		setValue(x(330))
		putRecord(any 1 x(335))
		setConstant(det)
		putList(x(334))
		setValue(x(335))
		setConstant(nil)
		putList(x(333))
		setConstant(det)
		setValue(x(334))
		putList(x(336))
		setConstant(false)
		setConstant(nil)
		putList(x(338))
		setConstant(int)
		setConstant(nil)
		putList(x(337))
		setConstant(bitArray)
		setValue(x(338))
		putRecord(builtin [det imods types] x(332))
		setValue(x(333))
		setValue(x(336))
		setValue(x(337))
		putRecord(any 1 x(343))
		setConstant(det)
		putList(x(342))
		setValue(x(343))
		setConstant(nil)
		putList(x(341))
		setConstant(det)
		setValue(x(342))
		putList(x(340))
		setConstant(det)
		setValue(x(341))
		putList(x(345))
		setConstant(false)
		setConstant(nil)
		putList(x(344))
		setConstant(false)
		setValue(x(345))
		putList(x(348))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(347))
		setConstant(int)
		setValue(x(348))
		putList(x(346))
		setConstant(int)
		setValue(x(347))
		putRecord(builtin [det imods types] x(339))
		setValue(x(340))
		setValue(x(344))
		setValue(x(346))
		putList(x(351))
		setConstant(det)
		setConstant(nil)
		putList(x(350))
		setConstant(det)
		setValue(x(351))
		putList(x(353))
		setConstant(false)
		setConstant(nil)
		putList(x(352))
		setConstant(false)
		setValue(x(353))
		putList(x(355))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(354))
		setConstant(bitArray)
		setValue(x(355))
		putRecord(builtin [det imods types] x(349))
		setValue(x(350))
		setValue(x(352))
		setValue(x(354))
		putList(x(358))
		setConstant(det)
		setConstant(nil)
		putList(x(357))
		setConstant(det)
		setValue(x(358))
		putList(x(360))
		setConstant(false)
		setConstant(nil)
		putList(x(359))
		setConstant(false)
		setValue(x(360))
		putList(x(362))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(361))
		setConstant(bitArray)
		setValue(x(362))
		putRecord(builtin [det imods types] x(356))
		setValue(x(357))
		setValue(x(359))
		setValue(x(361))
		putList(x(365))
		setConstant(det)
		setConstant(nil)
		putList(x(364))
		setConstant(det)
		setValue(x(365))
		putList(x(367))
		setConstant(false)
		setConstant(nil)
		putList(x(366))
		setConstant(false)
		setValue(x(367))
		putList(x(369))
		setConstant(int)
		setConstant(nil)
		putList(x(368))
		setConstant(bitArray)
		setValue(x(369))
		putRecord(builtin [det imods types] x(363))
		setValue(x(364))
		setValue(x(366))
		setValue(x(368))
		putRecord(any 1 x(374))
		setConstant(det)
		putList(x(373))
		setValue(x(374))
		setConstant(nil)
		putList(x(372))
		setConstant(det)
		setValue(x(373))
		putList(x(371))
		setConstant(det)
		setValue(x(372))
		putList(x(376))
		setConstant(false)
		setConstant(nil)
		putList(x(375))
		setConstant(false)
		setValue(x(376))
		putList(x(379))
		setConstant(bool)
		setConstant(nil)
		putList(x(378))
		setConstant(int)
		setValue(x(379))
		putList(x(377))
		setConstant(bitArray)
		setValue(x(378))
		putRecord(builtin [det imods test types] x(370))
		setValue(x(371))
		setValue(x(375))
		setConstant(true)
		setValue(x(377))
		putRecord(any 1 x(383))
		setConstant(det)
		putList(x(382))
		setValue(x(383))
		setConstant(nil)
		putList(x(381))
		setConstant(det)
		setValue(x(382))
		putList(x(384))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(387))
		setConstant(int)
		putList(x(386))
		setValue(x(387))
		setConstant(nil)
		putList(x(385))
		setConstant(bitArray)
		setValue(x(386))
		putRecord(builtin [det imods types] x(380))
		setValue(x(381))
		setValue(x(384))
		setValue(x(385))
		putRecord(any 1 x(391))
		setConstant(det)
		putList(x(390))
		setValue(x(391))
		setConstant(nil)
		putList(x(389))
		setConstant(det)
		setValue(x(390))
		putList(x(392))
		setConstant(false)
		setConstant(nil)
		putList(x(394))
		setConstant(record)
		setConstant(nil)
		putList(x(393))
		setConstant(virtualString)
		setValue(x(394))
		putRecord(builtin [det imods types] x(388))
		setValue(x(389))
		setValue(x(392))
		setValue(x(393))
		putList(x(397))
		setConstant(any)
		setConstant(nil)
		putList(x(396))
		setConstant(any)
		setValue(x(397))
		putList(x(398))
		setConstant(false)
		setConstant(nil)
		putList(x(400))
		setConstant(value)
		setConstant(nil)
		putList(x(399))
		setConstant(value)
		setValue(x(400))
		putRecord(builtin [det imods types] x(395))
		setValue(x(396))
		setValue(x(398))
		setValue(x(399))
		putRecord(any 1 x(404))
		setConstant(det)
		putList(x(403))
		setValue(x(404))
		setConstant(nil)
		putList(x(402))
		setConstant(det)
		setValue(x(403))
		putList(x(405))
		setConstant(false)
		setConstant(nil)
		putList(x(407))
		setConstant(float)
		setConstant(nil)
		putList(x(406))
		setConstant(float)
		setValue(x(407))
		putRecord(builtin [det imods types] x(401))
		setValue(x(402))
		setValue(x(405))
		setValue(x(406))
		putRecord(any 1 x(411))
		setConstant(det)
		putList(x(410))
		setValue(x(411))
		setConstant(nil)
		putList(x(409))
		setConstant(det)
		setValue(x(410))
		putList(x(412))
		setConstant(false)
		setConstant(nil)
		putList(x(414))
		setConstant(bool)
		setConstant(nil)
		putList(x(413))
		setConstant(char)
		setValue(x(414))
		putRecord(builtin [det imods test types] x(408))
		setValue(x(409))
		setValue(x(412))
		setConstant(true)
		setValue(x(413))
		putRecord(any 1 x(418))
		setConstant(det)
		putList(x(417))
		setValue(x(418))
		setConstant(nil)
		putList(x(416))
		setConstant(det)
		setValue(x(417))
		putList(x(419))
		setConstant(false)
		setConstant(nil)
		putList(x(421))
		setConstant(bool)
		setConstant(nil)
		putList(x(420))
		setConstant(char)
		setValue(x(421))
		putRecord(builtin [det imods test types] x(415))
		setValue(x(416))
		setValue(x(419))
		setConstant(true)
		setValue(x(420))
		putRecord(any 1 x(425))
		setConstant(det)
		putList(x(424))
		setValue(x(425))
		setConstant(nil)
		putList(x(423))
		setConstant(det)
		setValue(x(424))
		putList(x(426))
		setConstant(false)
		setConstant(nil)
		putList(x(428))
		setConstant(bool)
		setConstant(nil)
		putList(x(427))
		setConstant(char)
		setValue(x(428))
		putRecord(builtin [det imods test types] x(422))
		setValue(x(423))
		setValue(x(426))
		setConstant(true)
		setValue(x(427))
		putRecord(any 1 x(432))
		setConstant(det)
		putList(x(431))
		setValue(x(432))
		setConstant(nil)
		putList(x(430))
		setConstant(det)
		setValue(x(431))
		putList(x(433))
		setConstant(false)
		setConstant(nil)
		putList(x(435))
		setConstant(bool)
		setConstant(nil)
		putList(x(434))
		setConstant(char)
		setValue(x(435))
		putRecord(builtin [det imods test types] x(429))
		setValue(x(430))
		setValue(x(433))
		setConstant(true)
		setValue(x(434))
		putRecord(any 1 x(439))
		setConstant(det)
		putList(x(438))
		setValue(x(439))
		setConstant(nil)
		putList(x(437))
		setConstant(det)
		setValue(x(438))
		putList(x(440))
		setConstant(false)
		setConstant(nil)
		putList(x(442))
		setConstant(bool)
		setConstant(nil)
		putList(x(441))
		setConstant(char)
		setValue(x(442))
		putRecord(builtin [det imods test types] x(436))
		setValue(x(437))
		setValue(x(440))
		setConstant(true)
		setValue(x(441))
		putRecord(any 1 x(446))
		setConstant(det)
		putList(x(445))
		setValue(x(446))
		setConstant(nil)
		putList(x(444))
		setConstant(det)
		setValue(x(445))
		putList(x(447))
		setConstant(false)
		setConstant(nil)
		putList(x(449))
		setConstant(bool)
		setConstant(nil)
		putList(x(448))
		setConstant(char)
		setValue(x(449))
		putRecord(builtin [det imods test types] x(443))
		setValue(x(444))
		setValue(x(447))
		setConstant(true)
		setValue(x(448))
		putRecord(any 1 x(453))
		setConstant(det)
		putList(x(452))
		setValue(x(453))
		setConstant(nil)
		putList(x(451))
		setConstant(det)
		setValue(x(452))
		putList(x(454))
		setConstant(false)
		setConstant(nil)
		putList(x(456))
		setConstant(bool)
		setConstant(nil)
		putList(x(455))
		setConstant(char)
		setValue(x(456))
		putRecord(builtin [det imods test types] x(450))
		setValue(x(451))
		setValue(x(454))
		setConstant(true)
		setValue(x(455))
		putRecord(any 1 x(460))
		setConstant(det)
		putList(x(459))
		setValue(x(460))
		setConstant(nil)
		putList(x(458))
		setConstant(det)
		setValue(x(459))
		putList(x(461))
		setConstant(false)
		setConstant(nil)
		putList(x(463))
		setConstant(bool)
		setConstant(nil)
		putList(x(462))
		setConstant(char)
		setValue(x(463))
		putRecord(builtin [det imods test types] x(457))
		setValue(x(458))
		setValue(x(461))
		setConstant(true)
		setValue(x(462))
		putRecord(any 1 x(467))
		setConstant(det)
		putList(x(466))
		setValue(x(467))
		setConstant(nil)
		putList(x(465))
		setConstant(det)
		setValue(x(466))
		putList(x(468))
		setConstant(false)
		setConstant(nil)
		putList(x(470))
		setConstant(bool)
		setConstant(nil)
		putList(x(469))
		setConstant(char)
		setValue(x(470))
		putRecord(builtin [det imods test types] x(464))
		setValue(x(465))
		setValue(x(468))
		setConstant(true)
		setValue(x(469))
		putRecord(any 1 x(474))
		setConstant(det)
		putList(x(473))
		setValue(x(474))
		setConstant(nil)
		putList(x(472))
		setConstant(det)
		setValue(x(473))
		putList(x(475))
		setConstant(false)
		setConstant(nil)
		putList(x(477))
		setConstant(bool)
		setConstant(nil)
		putList(x(476))
		setConstant(char)
		setValue(x(477))
		putRecord(builtin [det imods test types] x(471))
		setValue(x(472))
		setValue(x(475))
		setConstant(true)
		setValue(x(476))
		putRecord(any 1 x(481))
		setConstant(det)
		putList(x(480))
		setValue(x(481))
		setConstant(nil)
		putList(x(479))
		setConstant(det)
		setValue(x(480))
		putList(x(482))
		setConstant(false)
		setConstant(nil)
		putList(x(484))
		setConstant(bool)
		setConstant(nil)
		putList(x(483))
		setConstant(char)
		setValue(x(484))
		putRecord(builtin [det imods test types] x(478))
		setValue(x(479))
		setValue(x(482))
		setConstant(true)
		setValue(x(483))
		putRecord(any 1 x(488))
		setConstant(det)
		putList(x(487))
		setValue(x(488))
		setConstant(nil)
		putList(x(486))
		setConstant(det)
		setValue(x(487))
		putList(x(489))
		setConstant(false)
		setConstant(nil)
		putList(x(491))
		setConstant(atom)
		setConstant(nil)
		putList(x(490))
		setConstant(char)
		setValue(x(491))
		putRecord(builtin [det imods types] x(485))
		setValue(x(486))
		setValue(x(489))
		setValue(x(490))
		putRecord(any 1 x(495))
		setConstant(det)
		putList(x(494))
		setValue(x(495))
		setConstant(nil)
		putList(x(493))
		setConstant(det)
		setValue(x(494))
		putList(x(496))
		setConstant(false)
		setConstant(nil)
		putList(x(498))
		setConstant(char)
		setConstant(nil)
		putList(x(497))
		setConstant(char)
		setValue(x(498))
		putRecord(builtin [det imods types] x(492))
		setValue(x(493))
		setValue(x(496))
		setValue(x(497))
		putRecord(any 1 x(502))
		setConstant(det)
		putList(x(501))
		setValue(x(502))
		setConstant(nil)
		putList(x(500))
		setConstant(det)
		setValue(x(501))
		putList(x(503))
		setConstant(false)
		setConstant(nil)
		putList(x(505))
		setConstant(char)
		setConstant(nil)
		putList(x(504))
		setConstant(char)
		setValue(x(505))
		putRecord(builtin [det imods types] x(499))
		setValue(x(500))
		setValue(x(503))
		setValue(x(504))
		putRecord(any 1 x(509))
		setConstant(det)
		putList(x(508))
		setValue(x(509))
		setConstant(nil)
		putList(x(507))
		setConstant(det)
		setValue(x(508))
		putList(x(510))
		setConstant(false)
		setConstant(nil)
		putList(x(512))
		setConstant(atom)
		setConstant(nil)
		putList(x(511))
		setConstant(char)
		setValue(x(512))
		putRecord(builtin [det imods types] x(506))
		setValue(x(507))
		setValue(x(510))
		setValue(x(511))
		putList(x(517))
		setConstant(any)
		setConstant(nil)
		putList(x(516))
		setConstant(any)
		setValue(x(517))
		putList(x(515))
		setConstant(det)
		setValue(x(516))
		putList(x(514))
		setConstant(detOrKinded)
		setValue(x(515))
		putList(x(520))
		setConstant(false)
		setConstant(nil)
		putList(x(519))
		setConstant(false)
		setValue(x(520))
		putList(x(518))
		setConstant(false)
		setValue(x(519))
		putList(x(524))
		setConstant(value)
		setConstant(nil)
		putList(x(523))
		setConstant(value)
		setValue(x(524))
		putList(x(522))
		setConstant(feature)
		setValue(x(523))
		putList(x(521))
		setConstant(recordCOrChunk)
		setValue(x(522))
		putRecord(builtin [det imods types] x(513))
		setValue(x(514))
		setValue(x(518))
		setValue(x(521))
		putRecord(any 1 x(528))
		setConstant(det)
		putList(x(527))
		setValue(x(528))
		setConstant(nil)
		putList(x(526))
		setConstant(det)
		setValue(x(527))
		putList(x(529))
		setConstant(false)
		setConstant(nil)
		putList(x(531))
		setConstant(float)
		setConstant(nil)
		putList(x(530))
		setConstant(float)
		setValue(x(531))
		putRecord(builtin [det imods types] x(525))
		setValue(x(526))
		setValue(x(529))
		setValue(x(530))
		putList(x(533))
		setConstant(det)
		setConstant(nil)
		putList(x(534))
		setConstant(true)
		setConstant(nil)
		putList(x(535))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(532))
		setValue(x(533))
		setValue(x(534))
		setValue(x(535))
		putRecord(any 1 x(539))
		setConstant(det)
		putList(x(538))
		setValue(x(539))
		setConstant(nil)
		putList(x(537))
		setConstant(det)
		setValue(x(538))
		putList(x(540))
		setConstant(false)
		setConstant(nil)
		putList(x(542))
		setConstant(dictionary)
		setConstant(nil)
		putList(x(541))
		setConstant(dictionary)
		setValue(x(542))
		putRecord(builtin [det imods types] x(536))
		setValue(x(537))
		setValue(x(540))
		setValue(x(541))
		putList(x(547))
		setConstant(any)
		setConstant(nil)
		putList(x(546))
		setConstant(any)
		setValue(x(547))
		putList(x(545))
		setConstant(det)
		setValue(x(546))
		putList(x(544))
		setConstant(det)
		setValue(x(545))
		putList(x(550))
		setConstant(false)
		setConstant(nil)
		putList(x(549))
		setConstant(false)
		setValue(x(550))
		putList(x(548))
		setConstant(false)
		setValue(x(549))
		putList(x(554))
		setConstant(value)
		setConstant(nil)
		putList(x(553))
		setConstant(value)
		setValue(x(554))
		putList(x(552))
		setConstant(feature)
		setValue(x(553))
		putList(x(551))
		setConstant(dictionary)
		setValue(x(552))
		putRecord(builtin [det imods types] x(543))
		setValue(x(544))
		setValue(x(548))
		setValue(x(551))
		putRecord(any 1 x(558))
		setConstant(det)
		putList(x(557))
		setValue(x(558))
		setConstant(nil)
		putList(x(556))
		setConstant(det)
		setValue(x(557))
		putList(x(559))
		setConstant(false)
		setConstant(nil)
		putRecord(pair 2 x(563))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(562))
		setValue(x(563))
		putList(x(561))
		setValue(x(562))
		setConstant(nil)
		putList(x(560))
		setConstant(dictionary)
		setValue(x(561))
		putRecord(builtin [det imods types] x(555))
		setValue(x(556))
		setValue(x(559))
		setValue(x(560))
		putList(x(567))
		setConstant(any)
		setConstant(nil)
		putList(x(566))
		setConstant(det)
		setValue(x(567))
		putList(x(565))
		setConstant(det)
		setValue(x(566))
		putList(x(569))
		setConstant(false)
		setConstant(nil)
		putList(x(568))
		setConstant(false)
		setValue(x(569))
		putList(x(572))
		setConstant(value)
		setConstant(nil)
		putList(x(571))
		setConstant(feature)
		setValue(x(572))
		putList(x(570))
		setConstant(dictionary)
		setValue(x(571))
		putRecord(builtin [det imods types] x(564))
		setValue(x(565))
		setValue(x(568))
		setValue(x(570))
		putRecord(any 1 x(576))
		setConstant(det)
		putList(x(575))
		setValue(x(576))
		setConstant(nil)
		putList(x(574))
		setConstant(det)
		setValue(x(575))
		putList(x(577))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(580))
		setConstant(value)
		putList(x(579))
		setValue(x(580))
		setConstant(nil)
		putList(x(578))
		setConstant(dictionary)
		setValue(x(579))
		putRecord(builtin [det imods types] x(573))
		setValue(x(574))
		setValue(x(577))
		setValue(x(578))
		putRecord(any 1 x(584))
		setConstant(det)
		putList(x(583))
		setValue(x(584))
		setConstant(nil)
		putList(x(582))
		setConstant(det)
		setValue(x(583))
		putList(x(585))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(588))
		setConstant(feature)
		putList(x(587))
		setValue(x(588))
		setConstant(nil)
		putList(x(586))
		setConstant(dictionary)
		setValue(x(587))
		putRecord(builtin [det imods types] x(581))
		setValue(x(582))
		setValue(x(585))
		setValue(x(586))
		putList(x(590))
		setConstant(det)
		setConstant(nil)
		putList(x(591))
		setConstant(false)
		setConstant(nil)
		putList(x(592))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(589))
		setValue(x(590))
		setValue(x(591))
		setValue(x(592))
		putRecord(any 1 x(597))
		setConstant(det)
		putList(x(596))
		setValue(x(597))
		setConstant(nil)
		putList(x(595))
		setConstant(det)
		setValue(x(596))
		putList(x(594))
		setConstant(det)
		setValue(x(595))
		putList(x(599))
		setConstant(false)
		setConstant(nil)
		putList(x(598))
		setConstant(false)
		setValue(x(599))
		putList(x(602))
		setConstant(bool)
		setConstant(nil)
		putList(x(601))
		setConstant(feature)
		setValue(x(602))
		putList(x(600))
		setConstant(dictionary)
		setValue(x(601))
		putRecord(builtin [det imods test types] x(593))
		setValue(x(594))
		setValue(x(598))
		setConstant(true)
		setValue(x(600))
		putList(x(606))
		setConstant(any)
		setConstant(nil)
		putList(x(605))
		setConstant(det)
		setValue(x(606))
		putList(x(604))
		setConstant(det)
		setValue(x(605))
		putList(x(609))
		setConstant(false)
		setConstant(nil)
		putList(x(608))
		setConstant(false)
		setValue(x(609))
		putList(x(607))
		setConstant(false)
		setValue(x(608))
		putList(x(612))
		setConstant(value)
		setConstant(nil)
		putList(x(611))
		setConstant(feature)
		setValue(x(612))
		putList(x(610))
		setConstant(dictionary)
		setValue(x(611))
		putRecord(builtin [det imods types] x(603))
		setValue(x(604))
		setValue(x(607))
		setValue(x(610))
		putList(x(615))
		setConstant(det)
		setConstant(nil)
		putList(x(614))
		setConstant(det)
		setValue(x(615))
		putList(x(617))
		setConstant(false)
		setConstant(nil)
		putList(x(616))
		setConstant(false)
		setValue(x(617))
		putList(x(619))
		setConstant(feature)
		setConstant(nil)
		putList(x(618))
		setConstant(dictionary)
		setValue(x(619))
		putRecord(builtin [det imods types] x(613))
		setValue(x(614))
		setValue(x(616))
		setValue(x(618))
		putList(x(621))
		setConstant(det)
		setConstant(nil)
		putList(x(622))
		setConstant(false)
		setConstant(nil)
		putList(x(623))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(620))
		setValue(x(621))
		setValue(x(622))
		setValue(x(623))
		putRecord(any 1 x(626))
		setConstant(det)
		putList(x(625))
		setValue(x(626))
		setConstant(nil)
		putRecord(list 1 x(628))
		setConstant(atom)
		putList(x(627))
		setValue(x(628))
		setConstant(nil)
		putRecord(builtin [det imods types] x(624))
		setValue(x(625))
		setConstant(nil)
		setValue(x(627))
		putList(x(630))
		setConstant(any)
		setConstant(nil)
		putList(x(631))
		setConstant(false)
		setConstant(nil)
		putList(x(632))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(629))
		setValue(x(630))
		setConstant(true)
		setValue(x(631))
		setValue(x(632))
		putList(x(634))
		setConstant(any)
		setConstant(nil)
		putList(x(635))
		setConstant(false)
		setConstant(nil)
		putList(x(636))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(633))
		setValue(x(634))
		setConstant(true)
		setValue(x(635))
		setValue(x(636))
		putRecord(any 1 x(640))
		setConstant(det)
		putList(x(639))
		setValue(x(640))
		setConstant(nil)
		putList(x(638))
		setConstant(any)
		setValue(x(639))
		putList(x(641))
		setConstant(false)
		setConstant(nil)
		putList(x(643))
		setConstant(bool)
		setConstant(nil)
		putList(x(642))
		setConstant(value)
		setValue(x(643))
		putRecord(builtin [det imods test types] x(637))
		setValue(x(638))
		setValue(x(641))
		setConstant(true)
		setValue(x(642))
		putList(x(645))
		setConstant(any)
		setConstant(nil)
		putList(x(646))
		setConstant(false)
		setConstant(nil)
		putList(x(647))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(644))
		setValue(x(645))
		setConstant(true)
		setValue(x(646))
		setValue(x(647))
		putRecord(any 1 x(650))
		setConstant(det)
		putList(x(649))
		setValue(x(650))
		setConstant(nil)
		putRecord(list 1 x(652))
		setConstant(record)
		putList(x(651))
		setValue(x(652))
		setConstant(nil)
		putRecord(builtin [det imods types] x(648))
		setValue(x(649))
		setConstant(nil)
		setValue(x(651))
		putList(x(656))
		setConstant(any)
		setConstant(nil)
		putList(x(655))
		setConstant(any)
		setValue(x(656))
		putList(x(654))
		setConstant(det)
		setValue(x(655))
		putList(x(659))
		setConstant(false)
		setConstant(nil)
		putList(x(658))
		setConstant(false)
		setValue(x(659))
		putList(x(657))
		setConstant(false)
		setValue(x(658))
		putList(x(662))
		setConstant(value)
		setConstant(nil)
		putList(x(661))
		setConstant(value)
		setValue(x(662))
		putList(x(660))
		setConstant(cell)
		setValue(x(661))
		putRecord(builtin [det imods types] x(653))
		setValue(x(654))
		setValue(x(657))
		setValue(x(660))
		putRecord(any 1 x(666))
		setConstant(det)
		putList(x(665))
		setValue(x(666))
		setConstant(nil)
		putList(x(664))
		setConstant(det)
		setValue(x(665))
		putList(x(667))
		setConstant(false)
		setConstant(nil)
		putList(x(669))
		setConstant(float)
		setConstant(nil)
		putList(x(668))
		setConstant(float)
		setValue(x(669))
		putRecord(builtin [det imods types] x(663))
		setValue(x(664))
		setValue(x(667))
		setValue(x(668))
		putRecord(any 1 x(673))
		setConstant(det)
		putList(x(672))
		setValue(x(673))
		setConstant(nil)
		putList(x(671))
		setConstant(det)
		setValue(x(672))
		putList(x(674))
		setConstant(false)
		setConstant(nil)
		putList(x(676))
		setConstant(int)
		setConstant(nil)
		putList(x(675))
		setConstant(float)
		setValue(x(676))
		putRecord(builtin [det imods types] x(670))
		setValue(x(671))
		setValue(x(674))
		setValue(x(675))
		putRecord(any 1 x(680))
		setConstant(det)
		putList(x(679))
		setValue(x(680))
		setConstant(nil)
		putList(x(678))
		setConstant(det)
		setValue(x(679))
		putList(x(681))
		setConstant(false)
		setConstant(nil)
		putList(x(683))
		setConstant(string)
		setConstant(nil)
		putList(x(682))
		setConstant(float)
		setValue(x(683))
		putRecord(builtin [det imods types] x(677))
		setValue(x(678))
		setValue(x(681))
		setValue(x(682))
		putRecord(any 1 x(687))
		setConstant(det)
		putList(x(686))
		setValue(x(687))
		setConstant(nil)
		putList(x(685))
		setConstant(det)
		setValue(x(686))
		putList(x(688))
		setConstant(false)
		setConstant(nil)
		putList(x(690))
		setConstant(float)
		setConstant(nil)
		putList(x(689))
		setConstant(float)
		setValue(x(690))
		putRecord(builtin [det imods types] x(684))
		setValue(x(685))
		setValue(x(688))
		setValue(x(689))
		putRecord(any 1 x(694))
		setConstant(det)
		putList(x(693))
		setValue(x(694))
		setConstant(nil)
		putList(x(692))
		setConstant(det)
		setValue(x(693))
		putList(x(695))
		setConstant(false)
		setConstant(nil)
		putList(x(697))
		setConstant(int)
		setConstant(nil)
		putList(x(696))
		setConstant(foreignPointer)
		setValue(x(697))
		putRecord(builtin [det imods types] x(691))
		setValue(x(692))
		setValue(x(695))
		setValue(x(696))
		putList(x(700))
		setConstant(any)
		setConstant(nil)
		putList(x(699))
		setConstant(any)
		setValue(x(700))
		putList(x(701))
		setConstant(false)
		setConstant(nil)
		putList(x(703))
		setConstant(value)
		setConstant(nil)
		putList(x(702))
		setConstant(value)
		setValue(x(703))
		putRecord(builtin [det imods types] x(698))
		setValue(x(699))
		setValue(x(701))
		setValue(x(702))
		putList(x(707))
		setConstant(any)
		setConstant(nil)
		putList(x(706))
		setConstant(det)
		setValue(x(707))
		putList(x(705))
		setConstant(det)
		setValue(x(706))
		putList(x(709))
		setConstant(false)
		setConstant(nil)
		putList(x(708))
		setConstant(false)
		setValue(x(709))
		putList(x(712))
		setConstant(value)
		setConstant(nil)
		putList(x(711))
		setConstant(int)
		setValue(x(712))
		putList(x(710))
		setConstant(array)
		setValue(x(711))
		putRecord(builtin [det imods types] x(704))
		setValue(x(705))
		setValue(x(708))
		setValue(x(710))
		putRecord(any 1 x(717))
		setConstant(det)
		putList(x(716))
		setValue(x(717))
		setConstant(nil)
		putList(x(715))
		setConstant(det)
		setValue(x(716))
		putList(x(714))
		setConstant(detOrKinded)
		setValue(x(715))
		putList(x(719))
		setConstant(false)
		setConstant(nil)
		putList(x(718))
		setConstant(false)
		setValue(x(719))
		putList(x(722))
		setConstant(bool)
		setConstant(nil)
		putList(x(721))
		setConstant(feature)
		setValue(x(722))
		putList(x(720))
		setConstant(recordCOrChunk)
		setValue(x(721))
		putRecord(builtin [det imods test types] x(713))
		setValue(x(714))
		setValue(x(718))
		setConstant(true)
		setValue(x(720))
		putRecord(any 1 x(726))
		setConstant(det)
		putList(x(725))
		setValue(x(726))
		setConstant(nil)
		putList(x(724))
		setConstant(det)
		setValue(x(725))
		putList(x(727))
		setConstant(false)
		setConstant(nil)
		putList(x(729))
		setConstant(float)
		setConstant(nil)
		putList(x(728))
		setConstant(int)
		setValue(x(729))
		putRecord(builtin [det imods types] x(723))
		setValue(x(724))
		setValue(x(727))
		setValue(x(728))
		putRecord(any 1 x(733))
		setConstant(det)
		putList(x(732))
		setValue(x(733))
		setConstant(nil)
		putList(x(731))
		setConstant(det)
		setValue(x(732))
		putList(x(734))
		setConstant(false)
		setConstant(nil)
		putList(x(736))
		setConstant(string)
		setConstant(nil)
		putList(x(735))
		setConstant(int)
		setValue(x(736))
		putRecord(builtin [det imods types] x(730))
		setValue(x(731))
		setValue(x(734))
		setValue(x(735))
		putRecord(any 1 x(740))
		setConstant(det)
		putList(x(739))
		setValue(x(740))
		setConstant(nil)
		putList(x(738))
		setConstant(det)
		setValue(x(739))
		putList(x(741))
		setConstant(false)
		setConstant(nil)
		putList(x(743))
		setConstant(bool)
		setConstant(nil)
		putList(x(742))
		setConstant(value)
		setValue(x(743))
		putRecord(builtin [det imods test types] x(737))
		setValue(x(738))
		setValue(x(741))
		setConstant(true)
		setValue(x(742))
		putRecord(any 1 x(747))
		setConstant(det)
		putList(x(746))
		setValue(x(747))
		setConstant(nil)
		putList(x(745))
		setConstant(det)
		setValue(x(746))
		putList(x(748))
		setConstant(false)
		setConstant(nil)
		putList(x(750))
		setConstant(bool)
		setConstant(nil)
		putList(x(749))
		setConstant(value)
		setValue(x(750))
		putRecord(builtin [det imods test types] x(744))
		setValue(x(745))
		setValue(x(748))
		setConstant(true)
		setValue(x(749))
		putRecord(any 1 x(754))
		setConstant(det)
		putList(x(753))
		setValue(x(754))
		setConstant(nil)
		putList(x(752))
		setConstant(det)
		setValue(x(753))
		putList(x(755))
		setConstant(false)
		setConstant(nil)
		putList(x(757))
		setConstant(bool)
		setConstant(nil)
		putList(x(756))
		setConstant(value)
		setValue(x(757))
		putRecord(builtin [det imods test types] x(751))
		setValue(x(752))
		setValue(x(755))
		setConstant(true)
		setValue(x(756))
		putRecord(any 1 x(761))
		setConstant(det)
		putList(x(760))
		setValue(x(761))
		setConstant(nil)
		putList(x(759))
		setConstant(det)
		setValue(x(760))
		putList(x(762))
		setConstant(false)
		setConstant(nil)
		putList(x(764))
		setConstant(bool)
		setConstant(nil)
		putList(x(763))
		setConstant(value)
		setValue(x(764))
		putRecord(builtin [det imods test types] x(758))
		setValue(x(759))
		setValue(x(762))
		setConstant(true)
		setValue(x(763))
		putRecord(any 1 x(768))
		setConstant(det)
		putList(x(767))
		setValue(x(768))
		setConstant(nil)
		putList(x(766))
		setConstant(det)
		setValue(x(767))
		putList(x(769))
		setConstant(false)
		setConstant(nil)
		putList(x(771))
		setConstant(bool)
		setConstant(nil)
		putList(x(770))
		setConstant(value)
		setValue(x(771))
		putRecord(builtin [det imods test types] x(765))
		setValue(x(766))
		setValue(x(769))
		setConstant(true)
		setValue(x(770))
		putRecord(any 1 x(775))
		setConstant(det)
		putList(x(774))
		setValue(x(775))
		setConstant(nil)
		putList(x(773))
		setConstant(det)
		setValue(x(774))
		putList(x(776))
		setConstant(false)
		setConstant(nil)
		putList(x(778))
		setConstant(bool)
		setConstant(nil)
		putList(x(777))
		setConstant(value)
		setValue(x(778))
		putRecord(builtin [det imods test types] x(772))
		setValue(x(773))
		setValue(x(776))
		setConstant(true)
		setValue(x(777))
		putRecord(any 1 x(782))
		setConstant(det)
		putList(x(781))
		setValue(x(782))
		setConstant(nil)
		putList(x(780))
		setConstant(any)
		setValue(x(781))
		putList(x(783))
		setConstant(false)
		setConstant(nil)
		putList(x(785))
		setConstant(bool)
		setConstant(nil)
		putList(x(784))
		setConstant(value)
		setValue(x(785))
		putRecord(builtin [det imods test types] x(779))
		setValue(x(780))
		setValue(x(783))
		setConstant(true)
		setValue(x(784))
		putRecord(any 1 x(789))
		setConstant(det)
		putList(x(788))
		setValue(x(789))
		setConstant(nil)
		putList(x(787))
		setConstant(det)
		setValue(x(788))
		putList(x(790))
		setConstant(false)
		setConstant(nil)
		putList(x(792))
		setConstant(bool)
		setConstant(nil)
		putList(x(791))
		setConstant(value)
		setValue(x(792))
		putRecord(builtin [det imods test types] x(786))
		setValue(x(787))
		setValue(x(790))
		setConstant(true)
		setValue(x(791))
		putRecord(any 1 x(796))
		setConstant(det)
		putList(x(795))
		setValue(x(796))
		setConstant(nil)
		putList(x(794))
		setConstant(det)
		setValue(x(795))
		putList(x(797))
		setConstant(false)
		setConstant(nil)
		putList(x(799))
		setConstant(bool)
		setConstant(nil)
		putList(x(798))
		setConstant(value)
		setValue(x(799))
		putRecord(builtin [det imods test types] x(793))
		setValue(x(794))
		setValue(x(797))
		setConstant(true)
		setValue(x(798))
		putRecord(any 1 x(803))
		setConstant(det)
		putList(x(802))
		setValue(x(803))
		setConstant(nil)
		putList(x(801))
		setConstant(det)
		setValue(x(802))
		putList(x(804))
		setConstant(false)
		setConstant(nil)
		putList(x(806))
		setConstant(bool)
		setConstant(nil)
		putList(x(805))
		setConstant(value)
		setValue(x(806))
		putRecord(builtin [det imods test types] x(800))
		setValue(x(801))
		setValue(x(804))
		setConstant(true)
		setValue(x(805))
		putRecord(any 1 x(810))
		setConstant(det)
		putList(x(809))
		setValue(x(810))
		setConstant(nil)
		putList(x(808))
		setConstant(any)
		setValue(x(809))
		putList(x(811))
		setConstant(false)
		setConstant(nil)
		putList(x(813))
		setConstant(bool)
		setConstant(nil)
		putList(x(812))
		setConstant(value)
		setValue(x(813))
		putRecord(builtin [det imods test types] x(807))
		setValue(x(808))
		setValue(x(811))
		setConstant(true)
		setValue(x(812))
		putRecord(any 1 x(817))
		setConstant(det)
		putList(x(816))
		setValue(x(817))
		setConstant(nil)
		putList(x(815))
		setConstant(det)
		setValue(x(816))
		putList(x(818))
		setConstant(false)
		setConstant(nil)
		putList(x(820))
		setConstant(bool)
		setConstant(nil)
		putList(x(819))
		setConstant(value)
		setValue(x(820))
		putRecord(builtin [det imods test types] x(814))
		setValue(x(815))
		setValue(x(818))
		setConstant(true)
		setValue(x(819))
		putRecord(any 1 x(824))
		setConstant(det)
		putList(x(823))
		setValue(x(824))
		setConstant(nil)
		putList(x(822))
		setConstant(any)
		setValue(x(823))
		putList(x(825))
		setConstant(false)
		setConstant(nil)
		putList(x(827))
		setConstant(bool)
		setConstant(nil)
		putList(x(826))
		setConstant(value)
		setValue(x(827))
		putRecord(builtin [det imods test types] x(821))
		setValue(x(822))
		setValue(x(825))
		setConstant(true)
		setValue(x(826))
		putRecord(any 1 x(831))
		setConstant(det)
		putList(x(830))
		setValue(x(831))
		setConstant(nil)
		putList(x(829))
		setConstant(det)
		setValue(x(830))
		putList(x(832))
		setConstant(false)
		setConstant(nil)
		putList(x(834))
		setConstant(bool)
		setConstant(nil)
		putList(x(833))
		setConstant(value)
		setValue(x(834))
		putRecord(builtin [det imods test types] x(828))
		setValue(x(829))
		setValue(x(832))
		setConstant(true)
		setValue(x(833))
		putRecord(any 1 x(838))
		setConstant(det)
		putList(x(837))
		setValue(x(838))
		setConstant(nil)
		putList(x(836))
		setConstant(det)
		setValue(x(837))
		putList(x(839))
		setConstant(false)
		setConstant(nil)
		putList(x(841))
		setConstant(bool)
		setConstant(nil)
		putList(x(840))
		setConstant(value)
		setValue(x(841))
		putRecord(builtin [det imods test types] x(835))
		setValue(x(836))
		setValue(x(839))
		setConstant(true)
		setValue(x(840))
		putRecord(any 1 x(845))
		setConstant(det)
		putList(x(844))
		setValue(x(845))
		setConstant(nil)
		putList(x(843))
		setConstant(det)
		setValue(x(844))
		putList(x(846))
		setConstant(false)
		setConstant(nil)
		putList(x(848))
		setConstant(bool)
		setConstant(nil)
		putList(x(847))
		setConstant(value)
		setValue(x(848))
		putRecord(builtin [det imods test types] x(842))
		setValue(x(843))
		setValue(x(846))
		setConstant(true)
		setValue(x(847))
		putRecord(any 1 x(852))
		setConstant(det)
		putList(x(851))
		setValue(x(852))
		setConstant(nil)
		putList(x(850))
		setConstant(det)
		setValue(x(851))
		putList(x(853))
		setConstant(false)
		setConstant(nil)
		putList(x(855))
		setConstant(bool)
		setConstant(nil)
		putList(x(854))
		setConstant(value)
		setValue(x(855))
		putRecord(builtin [det imods test types] x(849))
		setValue(x(850))
		setValue(x(853))
		setConstant(true)
		setValue(x(854))
		putRecord(any 1 x(859))
		setConstant(det)
		putList(x(858))
		setValue(x(859))
		setConstant(nil)
		putList(x(857))
		setConstant(det)
		setValue(x(858))
		putList(x(860))
		setConstant(false)
		setConstant(nil)
		putList(x(862))
		setConstant(bool)
		setConstant(nil)
		putList(x(861))
		setConstant(value)
		setValue(x(862))
		putRecord(builtin [det imods test types] x(856))
		setValue(x(857))
		setValue(x(860))
		setConstant(true)
		setValue(x(861))
		putRecord(any 1 x(866))
		setConstant(det)
		putList(x(865))
		setValue(x(866))
		setConstant(nil)
		putList(x(864))
		setConstant(det)
		setValue(x(865))
		putList(x(867))
		setConstant(false)
		setConstant(nil)
		putList(x(869))
		setConstant(bool)
		setConstant(nil)
		putList(x(868))
		setConstant(value)
		setValue(x(869))
		putRecord(builtin [det imods test types] x(863))
		setValue(x(864))
		setValue(x(867))
		setConstant(true)
		setValue(x(868))
		putRecord(any 1 x(873))
		setConstant(det)
		putList(x(872))
		setValue(x(873))
		setConstant(nil)
		putList(x(871))
		setConstant(det)
		setValue(x(872))
		putList(x(874))
		setConstant(false)
		setConstant(nil)
		putList(x(876))
		setConstant(bool)
		setConstant(nil)
		putList(x(875))
		setConstant(value)
		setValue(x(876))
		putRecord(builtin [det imods test types] x(870))
		setValue(x(871))
		setValue(x(874))
		setConstant(true)
		setValue(x(875))
		putRecord(any 1 x(880))
		setConstant(det)
		putList(x(879))
		setValue(x(880))
		setConstant(nil)
		putList(x(878))
		setConstant(det)
		setValue(x(879))
		putList(x(881))
		setConstant(false)
		setConstant(nil)
		putList(x(883))
		setConstant(bool)
		setConstant(nil)
		putList(x(882))
		setConstant(value)
		setValue(x(883))
		putRecord(builtin [det imods test types] x(877))
		setValue(x(878))
		setValue(x(881))
		setConstant(true)
		setValue(x(882))
		putRecord(any 1 x(887))
		setConstant(det)
		putList(x(886))
		setValue(x(887))
		setConstant(nil)
		putList(x(885))
		setConstant(det)
		setValue(x(886))
		putList(x(888))
		setConstant(false)
		setConstant(nil)
		putList(x(890))
		setConstant(bool)
		setConstant(nil)
		putList(x(889))
		setConstant(value)
		setValue(x(890))
		putRecord(builtin [det imods test types] x(884))
		setValue(x(885))
		setValue(x(888))
		setConstant(true)
		setValue(x(889))
		putRecord(any 1 x(894))
		setConstant(det)
		putList(x(893))
		setValue(x(894))
		setConstant(nil)
		putList(x(892))
		setConstant(det)
		setValue(x(893))
		putList(x(895))
		setConstant(false)
		setConstant(nil)
		putList(x(897))
		setConstant(bool)
		setConstant(nil)
		putList(x(896))
		setConstant(value)
		setValue(x(897))
		putRecord(builtin [det imods test types] x(891))
		setValue(x(892))
		setValue(x(895))
		setConstant(true)
		setValue(x(896))
		putRecord(any 1 x(901))
		setConstant(det)
		putList(x(900))
		setValue(x(901))
		setConstant(nil)
		putList(x(899))
		setConstant(det)
		setValue(x(900))
		putList(x(902))
		setConstant(false)
		setConstant(nil)
		putList(x(904))
		setConstant(bool)
		setConstant(nil)
		putList(x(903))
		setConstant(value)
		setValue(x(904))
		putRecord(builtin [det imods test types] x(898))
		setValue(x(899))
		setValue(x(902))
		setConstant(true)
		setValue(x(903))
		putRecord(any 1 x(908))
		setConstant(det)
		putList(x(907))
		setValue(x(908))
		setConstant(nil)
		putList(x(906))
		setConstant(det)
		setValue(x(907))
		putList(x(909))
		setConstant(false)
		setConstant(nil)
		putList(x(911))
		setConstant(bool)
		setConstant(nil)
		putList(x(910))
		setConstant(value)
		setValue(x(911))
		putRecord(builtin [det imods test types] x(905))
		setValue(x(906))
		setValue(x(909))
		setConstant(true)
		setValue(x(910))
		putRecord(any 1 x(915))
		setConstant(det)
		putList(x(914))
		setValue(x(915))
		setConstant(nil)
		putList(x(913))
		setConstant(det)
		setValue(x(914))
		putList(x(916))
		setConstant(false)
		setConstant(nil)
		putList(x(918))
		setConstant(bool)
		setConstant(nil)
		putList(x(917))
		setConstant(value)
		setValue(x(918))
		putRecord(builtin [det imods test types] x(912))
		setValue(x(913))
		setValue(x(916))
		setConstant(true)
		setValue(x(917))
		putRecord(any 1 x(922))
		setConstant(det)
		putList(x(921))
		setValue(x(922))
		setConstant(nil)
		putList(x(920))
		setConstant(det)
		setValue(x(921))
		putList(x(923))
		setConstant(true)
		setConstant(nil)
		putList(x(925))
		setConstant(bool)
		setConstant(nil)
		putList(x(924))
		setConstant(value)
		setValue(x(925))
		putRecord(builtin [det imods test types] x(919))
		setValue(x(920))
		setValue(x(923))
		setConstant(true)
		setValue(x(924))
		putRecord(any 1 x(929))
		setConstant(det)
		putList(x(928))
		setValue(x(929))
		setConstant(nil)
		putList(x(927))
		setConstant(detOrKinded)
		setValue(x(928))
		putList(x(930))
		setConstant(false)
		setConstant(nil)
		putList(x(932))
		setConstant(literal)
		setConstant(nil)
		putList(x(931))
		setConstant(recordC)
		setValue(x(932))
		putRecord(builtin [det imods types] x(926))
		setValue(x(927))
		setValue(x(930))
		setValue(x(931))
		putList(x(934))
		setConstant(det)
		setConstant(nil)
		putList(x(935))
		setConstant(false)
		setConstant(nil)
		putList(x(936))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(933))
		setValue(x(934))
		setValue(x(935))
		setValue(x(936))
		putRecord(any 1 x(940))
		setConstant(det)
		putList(x(939))
		setValue(x(940))
		setConstant(nil)
		putList(x(938))
		setConstant(det)
		setValue(x(939))
		putList(x(941))
		setConstant(false)
		setConstant(nil)
		putList(x(943))
		setConstant(float)
		setConstant(nil)
		putList(x(942))
		setConstant(float)
		setValue(x(943))
		putRecord(builtin [det imods types] x(937))
		setValue(x(938))
		setValue(x(941))
		setValue(x(942))
		putRecord(any 1 x(948))
		setConstant(det)
		putList(x(947))
		setValue(x(948))
		setConstant(nil)
		putList(x(946))
		setConstant(det)
		setValue(x(947))
		putList(x(945))
		setConstant(det)
		setValue(x(946))
		putList(x(950))
		setConstant(false)
		setConstant(nil)
		putList(x(949))
		setConstant(false)
		setValue(x(950))
		putList(x(953))
		setConstant(tuple)
		setConstant(nil)
		putList(x(952))
		setConstant(int)
		setValue(x(953))
		putList(x(951))
		setConstant(literal)
		setValue(x(952))
		putRecord(builtin [det imods types] x(944))
		setValue(x(945))
		setValue(x(949))
		setValue(x(951))
		putRecord(any 1 x(958))
		setConstant(det)
		putList(x(957))
		setValue(x(958))
		setConstant(nil)
		putList(x(956))
		setConstant(det)
		setValue(x(957))
		putList(x(955))
		setConstant(det)
		setValue(x(956))
		putList(x(960))
		setConstant(false)
		setConstant(nil)
		putList(x(959))
		setConstant(false)
		setValue(x(960))
		putList(x(963))
		setConstant(comparable)
		setConstant(nil)
		putList(x(962))
		setConstant(comparable)
		setValue(x(963))
		putList(x(961))
		setConstant(comparable)
		setValue(x(962))
		putRecord(builtin [det imods types] x(954))
		setValue(x(955))
		setValue(x(959))
		setValue(x(961))
		putRecord(any 1 x(968))
		setConstant(det)
		putList(x(967))
		setValue(x(968))
		setConstant(nil)
		putList(x(966))
		setConstant(det)
		setValue(x(967))
		putList(x(965))
		setConstant(det)
		setValue(x(966))
		putList(x(970))
		setConstant(false)
		setConstant(nil)
		putList(x(969))
		setConstant(false)
		setValue(x(970))
		putList(x(973))
		setConstant(comparable)
		setConstant(nil)
		putList(x(972))
		setConstant(comparable)
		setValue(x(973))
		putList(x(971))
		setConstant(comparable)
		setValue(x(972))
		putRecord(builtin [det imods types] x(964))
		setValue(x(965))
		setValue(x(969))
		setValue(x(971))
		putList(x(977))
		setConstant(any)
		setConstant(nil)
		putList(x(976))
		setConstant(det)
		setValue(x(977))
		putList(x(975))
		setConstant(det)
		setValue(x(976))
		putList(x(980))
		setConstant(false)
		setConstant(nil)
		putList(x(979))
		setConstant(false)
		setValue(x(980))
		putList(x(978))
		setConstant(false)
		setValue(x(979))
		putList(x(983))
		setConstant(value)
		setConstant(nil)
		putList(x(982))
		setConstant(record)
		setValue(x(983))
		putList(x(981))
		setConstant('class')
		setValue(x(982))
		putRecord(builtin [det imods types] x(974))
		setValue(x(975))
		setValue(x(978))
		setValue(x(981))
		putRecord(any 1 x(989))
		setConstant(det)
		putList(x(988))
		setValue(x(989))
		setConstant(nil)
		putList(x(987))
		setConstant(any)
		setValue(x(988))
		putList(x(986))
		setConstant(det)
		setValue(x(987))
		putList(x(985))
		setConstant(det)
		setValue(x(986))
		putList(x(992))
		setConstant(false)
		setConstant(nil)
		putList(x(991))
		setConstant(false)
		setValue(x(992))
		putList(x(990))
		setConstant(false)
		setValue(x(991))
		putList(x(996))
		setConstant(array)
		setConstant(nil)
		putList(x(995))
		setConstant(value)
		setValue(x(996))
		putList(x(994))
		setConstant(int)
		setValue(x(995))
		putList(x(993))
		setConstant(int)
		setValue(x(994))
		putRecord(builtin [det imods types] x(984))
		setValue(x(985))
		setValue(x(990))
		setValue(x(993))
		putRecord(any 1 x(1000))
		setConstant(det)
		putList(x(999))
		setValue(x(1000))
		setConstant(nil)
		putList(x(998))
		setConstant(any)
		setValue(x(999))
		putList(x(1001))
		setConstant(false)
		setConstant(nil)
		putList(x(1003))
		setConstant(cell)
		setConstant(nil)
		putList(x(1002))
		setConstant(value)
		setValue(x(1003))
		putRecord(builtin [det imods types] x(997))
		setValue(x(998))
		setValue(x(1001))
		setValue(x(1002))
		putRecord(any 1 x(1007))
		setConstant(det)
		putList(x(1006))
		setValue(x(1007))
		setConstant(nil)
		putList(x(1005))
		setConstant(det)
		setValue(x(1006))
		putList(x(1008))
		setConstant(false)
		setConstant(nil)
		putList(x(1010))
		setConstant(chunk)
		setConstant(nil)
		putList(x(1009))
		setConstant(record)
		setValue(x(1010))
		putRecord(builtin [det imods types] x(1004))
		setValue(x(1005))
		setValue(x(1008))
		setValue(x(1009))
		putRecord(any 1 x(1013))
		setConstant(det)
		putList(x(1012))
		setValue(x(1013))
		setConstant(nil)
		putList(x(1014))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1011))
		setValue(x(1012))
		setConstant(nil)
		setValue(x(1014))
		putRecord(any 1 x(1017))
		setConstant(det)
		putList(x(1016))
		setValue(x(1017))
		setConstant(nil)
		putList(x(1018))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1015))
		setValue(x(1016))
		setConstant(nil)
		setValue(x(1018))
		putRecord(any 1 x(1021))
		setConstant(det)
		putList(x(1020))
		setValue(x(1021))
		setConstant(nil)
		putList(x(1022))
		setConstant(name)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1019))
		setValue(x(1020))
		setConstant(nil)
		setValue(x(1022))
		putRecord(any 1 x(1026))
		setConstant(det)
		putList(x(1025))
		setValue(x(1026))
		setConstant(nil)
		putList(x(1024))
		setConstant(any)
		setValue(x(1025))
		putList(x(1027))
		setConstant(false)
		setConstant(nil)
		putList(x(1029))
		setConstant(port)
		setConstant(nil)
		putList(x(1028))
		setConstant(value)
		setValue(x(1029))
		putRecord(builtin [det imods types] x(1023))
		setValue(x(1024))
		setValue(x(1027))
		setValue(x(1028))
		putRecord(any 1 x(1033))
		setConstant(det)
		putList(x(1032))
		setValue(x(1033))
		setConstant(nil)
		putList(x(1031))
		setConstant(det)
		setValue(x(1032))
		putList(x(1034))
		setConstant(false)
		setConstant(nil)
		putList(x(1036))
		setConstant(name)
		setConstant(nil)
		putList(x(1035))
		setConstant(atom)
		setValue(x(1036))
		putRecord(builtin [det imods types] x(1030))
		setValue(x(1031))
		setValue(x(1034))
		setValue(x(1035))
		putRecord(any 1 x(1040))
		setConstant(det)
		putList(x(1039))
		setValue(x(1040))
		setConstant(nil)
		putList(x(1038))
		setConstant(det)
		setValue(x(1039))
		putList(x(1041))
		setConstant(false)
		setConstant(nil)
		putList(x(1043))
		setConstant(bool)
		setConstant(nil)
		putList(x(1042))
		setConstant(bool)
		setValue(x(1043))
		putRecord(builtin [det imods test types] x(1037))
		setValue(x(1038))
		setValue(x(1041))
		setConstant(true)
		setValue(x(1042))
		putRecord(any 1 x(1048))
		setConstant(det)
		putList(x(1047))
		setValue(x(1048))
		setConstant(nil)
		putList(x(1046))
		setConstant(det)
		setValue(x(1047))
		putList(x(1045))
		setConstant(det)
		setValue(x(1046))
		putList(x(1050))
		setConstant(false)
		setConstant(nil)
		putList(x(1049))
		setConstant(false)
		setValue(x(1050))
		putList(x(1053))
		setConstant(bool)
		setConstant(nil)
		putList(x(1052))
		setConstant(bool)
		setValue(x(1053))
		putList(x(1051))
		setConstant(bool)
		setValue(x(1052))
		putRecord(builtin [det imods test types] x(1044))
		setValue(x(1045))
		setValue(x(1049))
		setConstant(true)
		setValue(x(1051))
		putRecord(any 1 x(1057))
		setConstant(det)
		putList(x(1056))
		setValue(x(1057))
		setConstant(nil)
		putList(x(1055))
		setConstant(det)
		setValue(x(1056))
		putList(x(1058))
		setConstant(false)
		setConstant(nil)
		putList(x(1060))
		setConstant(int)
		setConstant(nil)
		putList(x(1059))
		setConstant(procedure)
		setValue(x(1060))
		putRecord(builtin [det imods types] x(1054))
		setValue(x(1055))
		setValue(x(1058))
		setValue(x(1059))
		putList(x(1064))
		setConstant(any)
		setConstant(nil)
		putList(x(1063))
		setConstant(det)
		setValue(x(1064))
		putList(x(1062))
		setConstant(det)
		setValue(x(1063))
		putList(x(1067))
		setConstant(false)
		setConstant(nil)
		putList(x(1066))
		setConstant(false)
		setValue(x(1067))
		putList(x(1065))
		setConstant(false)
		setValue(x(1066))
		putList(x(1070))
		setConstant(value)
		setConstant(nil)
		putList(x(1069))
		setConstant(int)
		setValue(x(1070))
		putList(x(1068))
		setConstant(array)
		setValue(x(1069))
		putRecord(builtin [det imods types] x(1061))
		setValue(x(1062))
		setValue(x(1065))
		setValue(x(1068))
		putRecord(any 1 x(1074))
		setConstant(det)
		putList(x(1073))
		setValue(x(1074))
		setConstant(nil)
		putList(x(1072))
		setConstant(det)
		setValue(x(1073))
		putList(x(1075))
		setConstant(false)
		setConstant(nil)
		putList(x(1077))
		setConstant(float)
		setConstant(nil)
		putList(x(1076))
		setConstant(float)
		setValue(x(1077))
		putRecord(builtin [det imods types] x(1071))
		setValue(x(1072))
		setValue(x(1075))
		setValue(x(1076))
		putList(x(1080))
		setConstant(any)
		setConstant(nil)
		putList(x(1079))
		setConstant(det)
		setValue(x(1080))
		putList(x(1082))
		setConstant(false)
		setConstant(nil)
		putList(x(1081))
		setConstant(false)
		setValue(x(1082))
		putList(x(1084))
		setConstant(value)
		setConstant(nil)
		putList(x(1083))
		setConstant(port)
		setValue(x(1084))
		putRecord(builtin [det imods types] x(1078))
		setValue(x(1079))
		setValue(x(1081))
		setValue(x(1083))
		putRecord(any 1 x(1088))
		setConstant(det)
		putList(x(1087))
		setValue(x(1088))
		setConstant(nil)
		putList(x(1086))
		setConstant(det)
		setValue(x(1087))
		putList(x(1089))
		setConstant(false)
		setConstant(nil)
		putList(x(1091))
		setConstant(float)
		setConstant(nil)
		putList(x(1090))
		setConstant(float)
		setValue(x(1091))
		putRecord(builtin [det imods types] x(1085))
		setValue(x(1086))
		setValue(x(1089))
		setValue(x(1090))
		putRecord(any 1 x(1095))
		setConstant(det)
		putList(x(1094))
		setValue(x(1095))
		setConstant(nil)
		putList(x(1093))
		setConstant(det)
		setValue(x(1094))
		putList(x(1096))
		setConstant(false)
		setConstant(nil)
		putList(x(1098))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1097))
		setConstant(space)
		setValue(x(1098))
		putRecord(builtin [det imods types] x(1092))
		setValue(x(1093))
		setValue(x(1096))
		setValue(x(1097))
		putList(x(1101))
		setConstant(any)
		setConstant(nil)
		putList(x(1100))
		setConstant(det)
		setValue(x(1101))
		putList(x(1103))
		setConstant(true)
		setConstant(nil)
		putList(x(1102))
		setConstant(false)
		setValue(x(1103))
		putList(x(1105))
		setConstant(value)
		setConstant(nil)
		putList(x(1104))
		setConstant(space)
		setValue(x(1105))
		putRecord(builtin [det imods types] x(1099))
		setValue(x(1100))
		setValue(x(1102))
		setValue(x(1104))
		putRecord(any 1 x(1109))
		setConstant(det)
		putList(x(1108))
		setValue(x(1109))
		setConstant(nil)
		putList(x(1107))
		setConstant(det)
		setValue(x(1108))
		putList(x(1110))
		setConstant(false)
		setConstant(nil)
		putList(x(1112))
		setConstant(space)
		setConstant(nil)
		putList(x(1111))
		setConstant(space)
		setValue(x(1112))
		putRecord(builtin [det imods types] x(1106))
		setValue(x(1107))
		setValue(x(1110))
		setValue(x(1111))
		putList(x(1115))
		setConstant(det)
		setConstant(nil)
		putList(x(1114))
		setConstant(det)
		setValue(x(1115))
		putList(x(1117))
		setConstant(false)
		setConstant(nil)
		putList(x(1116))
		setConstant(false)
		setValue(x(1117))
		putList(x(1119))
		setConstant(value)
		setConstant(nil)
		putList(x(1118))
		setConstant(space)
		setValue(x(1119))
		putRecord(builtin [det imods types] x(1113))
		setValue(x(1114))
		setValue(x(1116))
		setValue(x(1118))
		putList(x(1122))
		setConstant(det)
		setConstant(nil)
		putList(x(1121))
		setConstant(det)
		setValue(x(1122))
		putList(x(1124))
		setConstant(false)
		setConstant(nil)
		putList(x(1123))
		setConstant(false)
		setValue(x(1124))
		putList(x(1126))
		setConstant('procedure/1')
		setConstant(nil)
		putList(x(1125))
		setConstant(space)
		setValue(x(1126))
		putRecord(builtin [det imods types] x(1120))
		setValue(x(1121))
		setValue(x(1123))
		setValue(x(1125))
		putRecord(any 1 x(1130))
		setConstant(det)
		putList(x(1129))
		setValue(x(1130))
		setConstant(nil)
		putList(x(1128))
		setConstant(det)
		setValue(x(1129))
		putList(x(1131))
		setConstant(false)
		setConstant(nil)
		putList(x(1133))
		setConstant(value)
		setConstant(nil)
		putList(x(1132))
		setConstant(space)
		setValue(x(1133))
		putRecord(builtin [det imods types] x(1127))
		setValue(x(1128))
		setValue(x(1131))
		setValue(x(1132))
		putRecord(any 1 x(1137))
		setConstant(det)
		putList(x(1136))
		setValue(x(1137))
		setConstant(nil)
		putList(x(1135))
		setConstant(det)
		setValue(x(1136))
		putList(x(1138))
		setConstant(false)
		setConstant(nil)
		putList(x(1140))
		setConstant(space)
		setConstant(nil)
		putList(x(1139))
		setConstant('procedure/1')
		setValue(x(1140))
		putRecord(builtin [det imods types] x(1134))
		setValue(x(1135))
		setValue(x(1138))
		setValue(x(1139))
		putRecord(any 1 x(1144))
		setConstant(det)
		putList(x(1143))
		setValue(x(1144))
		setConstant(nil)
		putList(x(1142))
		setConstant(det)
		setValue(x(1143))
		putList(x(1145))
		setConstant(false)
		setConstant(nil)
		putList(x(1147))
		setConstant(float)
		setConstant(nil)
		putList(x(1146))
		setConstant(float)
		setValue(x(1147))
		putRecord(builtin [det imods types] x(1141))
		setValue(x(1142))
		setValue(x(1145))
		setValue(x(1146))
		putRecord(any 1 x(1151))
		setConstant(det)
		putList(x(1150))
		setValue(x(1151))
		setConstant(nil)
		putList(x(1149))
		setConstant(det)
		setValue(x(1150))
		putList(x(1152))
		setConstant(false)
		setConstant(nil)
		putList(x(1154))
		setConstant(atom)
		setConstant(nil)
		putList(x(1153))
		setConstant(string)
		setValue(x(1154))
		putRecord(builtin [det imods types] x(1148))
		setValue(x(1149))
		setValue(x(1152))
		setValue(x(1153))
		putRecord(any 1 x(1158))
		setConstant(det)
		putList(x(1157))
		setValue(x(1158))
		setConstant(nil)
		putList(x(1156))
		setConstant(det)
		setValue(x(1157))
		putList(x(1159))
		setConstant(false)
		setConstant(nil)
		putList(x(1161))
		setConstant(float)
		setConstant(nil)
		putList(x(1160))
		setConstant(string)
		setValue(x(1161))
		putRecord(builtin [det imods types] x(1155))
		setValue(x(1156))
		setValue(x(1159))
		setValue(x(1160))
		putRecord(any 1 x(1165))
		setConstant(det)
		putList(x(1164))
		setValue(x(1165))
		setConstant(nil)
		putList(x(1163))
		setConstant(det)
		setValue(x(1164))
		putList(x(1166))
		setConstant(false)
		setConstant(nil)
		putList(x(1168))
		setConstant(int)
		setConstant(nil)
		putList(x(1167))
		setConstant(string)
		setValue(x(1168))
		putRecord(builtin [det imods types] x(1162))
		setValue(x(1163))
		setValue(x(1166))
		setValue(x(1167))
		putRecord(any 1 x(1172))
		setConstant(det)
		putList(x(1171))
		setValue(x(1172))
		setConstant(nil)
		putList(x(1170))
		setConstant(det)
		setValue(x(1171))
		putList(x(1173))
		setConstant(false)
		setConstant(nil)
		putList(x(1175))
		setConstant(float)
		setConstant(nil)
		putList(x(1174))
		setConstant(float)
		setValue(x(1175))
		putRecord(builtin [det imods types] x(1169))
		setValue(x(1170))
		setValue(x(1173))
		setValue(x(1174))
		putList(x(1178))
		setConstant(any)
		setConstant(nil)
		putList(x(1177))
		setConstant(det)
		setValue(x(1178))
		putList(x(1180))
		setConstant(false)
		setConstant(nil)
		putList(x(1179))
		setConstant(false)
		setValue(x(1180))
		putList(x(1182))
		setConstant(record)
		setConstant(nil)
		putList(x(1181))
		setConstant(literal)
		setValue(x(1182))
		putRecord(builtin [det imods types] x(1176))
		setValue(x(1177))
		setValue(x(1179))
		setValue(x(1181))
		putList(x(1184))
		setConstant(det)
		setConstant(nil)
		putList(x(1185))
		setConstant(false)
		setConstant(nil)
		putList(x(1186))
		setConstant(procedure)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1183))
		setValue(x(1184))
		setValue(x(1185))
		setValue(x(1186))
		putRecord(any 1 x(1190))
		setConstant(det)
		putList(x(1189))
		setValue(x(1190))
		setConstant(nil)
		putList(x(1188))
		setConstant(det)
		setValue(x(1189))
		putList(x(1191))
		setConstant(false)
		setConstant(nil)
		putList(x(1193))
		setConstant(atom)
		setConstant(nil)
		putList(x(1192))
		setConstant('thread')
		setValue(x(1193))
		putRecord(builtin [det imods types] x(1187))
		setValue(x(1188))
		setValue(x(1191))
		setValue(x(1192))
		putList(x(1196))
		setConstant(det)
		setConstant(nil)
		putList(x(1195))
		setConstant(det)
		setValue(x(1196))
		putList(x(1198))
		setConstant(false)
		setConstant(nil)
		putList(x(1197))
		setConstant(false)
		setValue(x(1198))
		putList(x(1200))
		setConstant(value)
		setConstant(nil)
		putList(x(1199))
		setConstant('thread')
		setValue(x(1200))
		putRecord(builtin [det imods types] x(1194))
		setValue(x(1195))
		setValue(x(1197))
		setValue(x(1199))
		putRecord(any 1 x(1204))
		setConstant(det)
		putList(x(1203))
		setValue(x(1204))
		setConstant(nil)
		putList(x(1202))
		setConstant(det)
		setValue(x(1203))
		putList(x(1205))
		setConstant(false)
		setConstant(nil)
		putList(x(1207))
		setConstant(bool)
		setConstant(nil)
		putList(x(1206))
		setConstant(value)
		setValue(x(1207))
		putRecord(builtin [det imods test types] x(1201))
		setValue(x(1202))
		setValue(x(1205))
		setConstant(true)
		setValue(x(1206))
		putRecord(any 1 x(1211))
		setConstant(det)
		putList(x(1210))
		setValue(x(1211))
		setConstant(nil)
		putList(x(1209))
		setConstant(det)
		setValue(x(1210))
		putList(x(1212))
		setConstant(false)
		setConstant(nil)
		putList(x(1214))
		setConstant(bool)
		setConstant(nil)
		putList(x(1213))
		setConstant('thread')
		setValue(x(1214))
		putRecord(builtin [det imods test types] x(1208))
		setValue(x(1209))
		setValue(x(1212))
		setConstant(true)
		setValue(x(1213))
		putList(x(1216))
		setConstant(det)
		setConstant(nil)
		putList(x(1217))
		setConstant(false)
		setConstant(nil)
		putList(x(1218))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1215))
		setValue(x(1216))
		setValue(x(1217))
		setValue(x(1218))
		putList(x(1220))
		setConstant(det)
		setConstant(nil)
		putList(x(1221))
		setConstant(false)
		setConstant(nil)
		putList(x(1222))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1219))
		setValue(x(1220))
		setValue(x(1221))
		setValue(x(1222))
		putList(x(1225))
		setConstant(det)
		setConstant(nil)
		putList(x(1224))
		setConstant(det)
		setValue(x(1225))
		putList(x(1227))
		setConstant(false)
		setConstant(nil)
		putList(x(1226))
		setConstant(false)
		setValue(x(1227))
		putList(x(1229))
		setConstant(atom)
		setConstant(nil)
		putList(x(1228))
		setConstant('thread')
		setValue(x(1229))
		putRecord(builtin [det imods types] x(1223))
		setValue(x(1224))
		setValue(x(1226))
		setValue(x(1228))
		putRecord(any 1 x(1233))
		setConstant(det)
		putList(x(1232))
		setValue(x(1233))
		setConstant(nil)
		putList(x(1231))
		setConstant(det)
		setValue(x(1232))
		putList(x(1234))
		setConstant(false)
		setConstant(nil)
		putList(x(1236))
		setConstant(atom)
		setConstant(nil)
		putList(x(1235))
		setConstant('thread')
		setValue(x(1236))
		putRecord(builtin [det imods types] x(1230))
		setValue(x(1231))
		setValue(x(1234))
		setValue(x(1235))
		putList(x(1238))
		setConstant(det)
		setConstant(nil)
		putList(x(1239))
		setConstant(false)
		setConstant(nil)
		putList(x(1240))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1237))
		setValue(x(1238))
		setValue(x(1239))
		setValue(x(1240))
		putRecord(any 1 x(1243))
		setConstant(det)
		putList(x(1242))
		setValue(x(1243))
		setConstant(nil)
		putList(x(1244))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1241))
		setValue(x(1242))
		setConstant(nil)
		setValue(x(1244))
		putRecord(any 1 x(1247))
		setConstant(det)
		putList(x(1246))
		setValue(x(1247))
		setConstant(nil)
		putList(x(1248))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1245))
		setValue(x(1246))
		setConstant(nil)
		setValue(x(1248))
		putList(x(1250))
		setConstant(det)
		setConstant(nil)
		putList(x(1251))
		setConstant(false)
		setConstant(nil)
		putList(x(1252))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1249))
		setValue(x(1250))
		setValue(x(1251))
		setValue(x(1252))
		putRecord(any 1 x(1256))
		setConstant(det)
		putList(x(1255))
		setValue(x(1256))
		setConstant(nil)
		putList(x(1254))
		setConstant(any)
		setValue(x(1255))
		putList(x(1257))
		setConstant(false)
		setConstant(nil)
		putList(x(1259))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1258))
		setConstant(value)
		setValue(x(1259))
		putRecord(builtin [det imods types] x(1253))
		setValue(x(1254))
		setValue(x(1257))
		setValue(x(1258))
		putRecord(any 1 x(1263))
		setConstant(det)
		putList(x(1262))
		setValue(x(1263))
		setConstant(nil)
		putList(x(1261))
		setConstant(det)
		setValue(x(1262))
		putList(x(1264))
		setConstant(false)
		setConstant(nil)
		putList(x(1266))
		setConstant(atom)
		setConstant(nil)
		putList(x(1265))
		setConstant(value)
		setValue(x(1266))
		putRecord(builtin [det imods types] x(1260))
		setValue(x(1261))
		setValue(x(1264))
		setValue(x(1265))
		putList(x(1268))
		setConstant(det)
		setConstant(nil)
		putList(x(1269))
		setConstant(false)
		setConstant(nil)
		putList(x(1270))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1267))
		setValue(x(1268))
		setValue(x(1269))
		setValue(x(1270))
		putList(x(1273))
		setConstant(any)
		setConstant(nil)
		putList(x(1272))
		setConstant(any)
		setValue(x(1273))
		putList(x(1275))
		setConstant(false)
		setConstant(nil)
		putList(x(1274))
		setConstant(false)
		setValue(x(1275))
		putList(x(1277))
		setConstant(value)
		setConstant(nil)
		putList(x(1276))
		setConstant(value)
		setValue(x(1277))
		putRecord(builtin [det imods types] x(1271))
		setValue(x(1272))
		setValue(x(1274))
		setValue(x(1276))
		putRecord(any 1 x(1281))
		setConstant(det)
		putList(x(1280))
		setValue(x(1281))
		setConstant(nil)
		putList(x(1279))
		setConstant(det)
		setValue(x(1280))
		putList(x(1282))
		setConstant(false)
		setConstant(nil)
		putList(x(1284))
		setConstant(int)
		setConstant(nil)
		putList(x(1283))
		setConstant(record)
		setValue(x(1284))
		putRecord(builtin [det imods types] x(1278))
		setValue(x(1279))
		setValue(x(1282))
		setValue(x(1283))
		putList(x(1287))
		setConstant(any)
		setConstant(nil)
		putList(x(1286))
		setConstant(detOrKinded)
		setValue(x(1287))
		putList(x(1289))
		setConstant(false)
		setConstant(nil)
		putList(x(1288))
		setConstant(false)
		setValue(x(1289))
		putList(x(1291))
		setConstant(int)
		setConstant(nil)
		putList(x(1290))
		setConstant(record)
		setValue(x(1291))
		putRecord(builtin [det imods types] x(1285))
		setValue(x(1286))
		setValue(x(1288))
		setValue(x(1290))
		putRecord(any 1 x(1296))
		setConstant(det)
		putList(x(1295))
		setValue(x(1296))
		setConstant(nil)
		putList(x(1294))
		setConstant(detOrKinded)
		setValue(x(1295))
		putList(x(1293))
		setConstant(detOrKinded)
		setValue(x(1294))
		putList(x(1298))
		setConstant(false)
		setConstant(nil)
		putList(x(1297))
		setConstant(false)
		setValue(x(1298))
		putList(x(1301))
		setConstant(bool)
		setConstant(nil)
		putList(x(1300))
		setConstant(value)
		setValue(x(1301))
		putList(x(1299))
		setConstant(value)
		setValue(x(1300))
		putRecord(builtin [det imods negated test types] x(1292))
		setValue(x(1293))
		setValue(x(1297))
		setConstant('==')
		setConstant(true)
		setValue(x(1299))
		putList(x(1305))
		setConstant(any)
		setConstant(nil)
		putList(x(1304))
		setConstant(det)
		setValue(x(1305))
		putList(x(1303))
		setConstant(detOrKinded)
		setValue(x(1304))
		putList(x(1307))
		setConstant(false)
		setConstant(nil)
		putList(x(1306))
		setConstant(false)
		setValue(x(1307))
		putList(x(1310))
		setConstant(value)
		setConstant(nil)
		putList(x(1309))
		setConstant(feature)
		setValue(x(1310))
		putList(x(1308))
		setConstant(recordCOrChunk)
		setValue(x(1309))
		putRecord(builtin [det imods types] x(1302))
		setValue(x(1303))
		setValue(x(1306))
		setValue(x(1308))
		putRecord(any 1 x(1315))
		setConstant(det)
		putList(x(1314))
		setValue(x(1315))
		setConstant(nil)
		putList(x(1313))
		setConstant(det)
		setValue(x(1314))
		putList(x(1312))
		setConstant(det)
		setValue(x(1313))
		putList(x(1317))
		setConstant(false)
		setConstant(nil)
		putList(x(1316))
		setConstant(false)
		setValue(x(1317))
		putList(x(1320))
		setConstant(procedure)
		setConstant(nil)
		putList(x(1319))
		setConstant(int)
		setValue(x(1320))
		putList(x(1318))
		setConstant(virtualString)
		setValue(x(1319))
		putRecord(builtin [det imods types] x(1311))
		setValue(x(1312))
		setValue(x(1316))
		setValue(x(1318))
		putRecord(any 1 x(1324))
		setConstant(det)
		putList(x(1323))
		setValue(x(1324))
		setConstant(nil)
		putList(x(1322))
		setConstant(det)
		setValue(x(1323))
		putList(x(1325))
		setConstant(false)
		setConstant(nil)
		putList(x(1327))
		setConstant(record)
		setConstant(nil)
		putList(x(1326))
		setConstant(record)
		setValue(x(1327))
		putRecord(builtin [det imods types] x(1321))
		setValue(x(1322))
		setValue(x(1325))
		setValue(x(1326))
		putRecord(any 1 x(1332))
		setConstant(det)
		putList(x(1331))
		setValue(x(1332))
		setConstant(nil)
		putList(x(1330))
		setConstant(det)
		setValue(x(1331))
		putList(x(1329))
		setConstant(det)
		setValue(x(1330))
		putList(x(1334))
		setConstant(false)
		setConstant(nil)
		putList(x(1333))
		setConstant(false)
		setValue(x(1334))
		putList(x(1337))
		setConstant(int)
		setConstant(nil)
		putList(x(1336))
		setConstant(int)
		setValue(x(1337))
		putList(x(1335))
		setConstant(int)
		setValue(x(1336))
		putRecord(builtin [det imods types] x(1328))
		setValue(x(1329))
		setValue(x(1333))
		setValue(x(1335))
		putRecord(any 1 x(1342))
		setConstant(det)
		putList(x(1341))
		setValue(x(1342))
		setConstant(nil)
		putList(x(1340))
		setConstant(det)
		setValue(x(1341))
		putList(x(1339))
		setConstant(det)
		setValue(x(1340))
		putList(x(1344))
		setConstant(false)
		setConstant(nil)
		putList(x(1343))
		setConstant(false)
		setValue(x(1344))
		putList(x(1347))
		setConstant(float)
		setConstant(nil)
		putList(x(1346))
		setConstant(float)
		setValue(x(1347))
		putList(x(1345))
		setConstant(float)
		setValue(x(1346))
		putRecord(builtin [det imods types] x(1338))
		setValue(x(1339))
		setValue(x(1343))
		setValue(x(1345))
		putRecord(any 1 x(1351))
		setConstant(det)
		putList(x(1350))
		setValue(x(1351))
		setConstant(nil)
		putList(x(1349))
		setConstant(det)
		setValue(x(1350))
		putList(x(1352))
		setConstant(false)
		setConstant(nil)
		putList(x(1354))
		setConstant('class')
		setConstant(nil)
		putList(x(1353))
		setConstant(object)
		setValue(x(1354))
		putRecord(builtin [det imods types] x(1348))
		setValue(x(1349))
		setValue(x(1352))
		setValue(x(1353))
		putRecord(any 1 x(1358))
		setConstant(det)
		putList(x(1357))
		setValue(x(1358))
		setConstant(nil)
		putList(x(1356))
		setConstant(any)
		setValue(x(1357))
		putList(x(1359))
		setConstant(false)
		setConstant(nil)
		putList(x(1361))
		setConstant(bool)
		setConstant(nil)
		putList(x(1360))
		setConstant(value)
		setValue(x(1361))
		putRecord(builtin [det imods test types] x(1355))
		setValue(x(1356))
		setValue(x(1359))
		setConstant(true)
		setValue(x(1360))
		putRecord(any 1 x(1370))
		setConstant(det)
		putList(x(1369))
		setValue(x(1370))
		setConstant(nil)
		putList(x(1368))
		setConstant(det)
		setValue(x(1369))
		putList(x(1367))
		setConstant(det)
		setValue(x(1368))
		putList(x(1366))
		setConstant(det)
		setValue(x(1367))
		putList(x(1365))
		setConstant(det)
		setValue(x(1366))
		putList(x(1364))
		setConstant(det)
		setValue(x(1365))
		putList(x(1363))
		setConstant(det)
		setValue(x(1364))
		putList(x(1376))
		setConstant(false)
		setConstant(nil)
		putList(x(1375))
		setConstant(false)
		setValue(x(1376))
		putList(x(1374))
		setConstant(false)
		setValue(x(1375))
		putList(x(1373))
		setConstant(false)
		setValue(x(1374))
		putList(x(1372))
		setConstant(false)
		setValue(x(1373))
		putList(x(1371))
		setConstant(false)
		setValue(x(1372))
		putList(x(1383))
		setConstant('class')
		setConstant(nil)
		putList(x(1382))
		setConstant(bool)
		setValue(x(1383))
		putList(x(1381))
		setConstant(bool)
		setValue(x(1382))
		putList(x(1380))
		setConstant(dictionary)
		setValue(x(1381))
		putList(x(1379))
		setConstant(record)
		setValue(x(1380))
		putList(x(1378))
		setConstant(record)
		setValue(x(1379))
		putList(x(1377))
		setConstant(dictionary)
		setValue(x(1378))
		putRecord(builtin [det imods types] x(1362))
		setValue(x(1363))
		setValue(x(1371))
		setValue(x(1377))
		putRecord(any 1 x(1388))
		setConstant(det)
		putList(x(1387))
		setValue(x(1388))
		setConstant(nil)
		putList(x(1386))
		setConstant(det)
		setValue(x(1387))
		putList(x(1385))
		setConstant(det)
		setValue(x(1386))
		putList(x(1390))
		setConstant(false)
		setConstant(nil)
		putList(x(1389))
		setConstant(false)
		setValue(x(1390))
		putList(x(1393))
		setConstant(int)
		setConstant(nil)
		putList(x(1392))
		setConstant(int)
		setValue(x(1393))
		putList(x(1391))
		setConstant(int)
		setValue(x(1392))
		putRecord(builtin [det imods types] x(1384))
		setValue(x(1385))
		setValue(x(1389))
		setValue(x(1391))
		putList(x(1397))
		setConstant(any)
		setConstant(nil)
		putList(x(1396))
		setConstant(any)
		setValue(x(1397))
		putList(x(1395))
		setConstant(detOrKinded)
		setValue(x(1396))
		putList(x(1400))
		setConstant(false)
		setConstant(nil)
		putList(x(1399))
		setConstant(false)
		setValue(x(1400))
		putList(x(1398))
		setConstant(false)
		setValue(x(1399))
		putRecord(list 1 x(1404))
		setConstant(feature)
		putList(x(1403))
		setValue(x(1404))
		setConstant(nil)
		putList(x(1402))
		setConstant(value)
		setValue(x(1403))
		putList(x(1401))
		setConstant(recordC)
		setValue(x(1402))
		putRecord(builtin [det imods types] x(1394))
		setValue(x(1395))
		setValue(x(1398))
		setValue(x(1401))
		putRecord(any 1 x(1408))
		setConstant(det)
		putList(x(1407))
		setValue(x(1408))
		setConstant(nil)
		putList(x(1406))
		setConstant(det)
		setValue(x(1407))
		putList(x(1409))
		setConstant(false)
		setConstant(nil)
		putList(x(1411))
		setConstant(object)
		setConstant(nil)
		putList(x(1410))
		setConstant('class')
		setValue(x(1411))
		putRecord(builtin [det imods types] x(1405))
		setValue(x(1406))
		setValue(x(1409))
		setValue(x(1410))
		putList(x(1415))
		setConstant(any)
		setConstant(nil)
		putList(x(1414))
		setConstant(any)
		setValue(x(1415))
		putList(x(1413))
		setConstant(any)
		setValue(x(1414))
		putList(x(1417))
		setConstant(false)
		setConstant(nil)
		putList(x(1416))
		setConstant(false)
		setValue(x(1417))
		putList(x(1420))
		setConstant(value)
		setConstant(nil)
		putList(x(1419))
		setConstant(value)
		setValue(x(1420))
		putList(x(1418))
		setConstant(value)
		setValue(x(1419))
		putRecord(builtin [det imods types] x(1412))
		setValue(x(1413))
		setValue(x(1416))
		setValue(x(1418))
		putList(x(1422))
		setConstant(any)
		setConstant(nil)
		putList(x(1423))
		setConstant(false)
		setConstant(nil)
		putList(x(1424))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1421))
		setValue(x(1422))
		setValue(x(1423))
		setValue(x(1424))
		putRecord(any 1 x(1429))
		setConstant(det)
		putList(x(1428))
		setValue(x(1429))
		setConstant(nil)
		putList(x(1427))
		setConstant(det)
		setValue(x(1428))
		putList(x(1426))
		setConstant(det)
		setValue(x(1427))
		putList(x(1431))
		setConstant(false)
		setConstant(nil)
		putList(x(1430))
		setConstant(false)
		setValue(x(1431))
		putRecord(pair 2 x(1435))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(1434))
		setValue(x(1435))
		putList(x(1436))
		setConstant(record)
		setConstant(nil)
		putList(x(1433))
		setValue(x(1434))
		setValue(x(1436))
		putList(x(1432))
		setConstant(literal)
		setValue(x(1433))
		putRecord(builtin [det imods types] x(1425))
		setValue(x(1426))
		setValue(x(1430))
		setValue(x(1432))
		putList(x(1440))
		setConstant(det)
		setConstant(nil)
		putList(x(1439))
		setConstant(det)
		setValue(x(1440))
		putList(x(1438))
		setConstant(det)
		setValue(x(1439))
		putList(x(1443))
		setConstant(false)
		setConstant(nil)
		putList(x(1442))
		setConstant(false)
		setValue(x(1443))
		putList(x(1441))
		setConstant(false)
		setValue(x(1442))
		putList(x(1446))
		setConstant(object)
		setConstant(nil)
		putList(x(1445))
		setConstant('class')
		setValue(x(1446))
		putList(x(1444))
		setConstant(record)
		setValue(x(1445))
		putRecord(builtin [det imods types] x(1437))
		setValue(x(1438))
		setValue(x(1441))
		setValue(x(1444))
		putList(x(1450))
		setConstant(any)
		setConstant(nil)
		putList(x(1449))
		setConstant(det)
		setValue(x(1450))
		putList(x(1448))
		setConstant(det)
		setValue(x(1449))
		putList(x(1453))
		setConstant(false)
		setConstant(nil)
		putList(x(1452))
		setConstant(false)
		setValue(x(1453))
		putList(x(1451))
		setConstant(false)
		setValue(x(1452))
		putList(x(1456))
		setConstant(record)
		setConstant(nil)
		putList(x(1455))
		setConstant(int)
		setValue(x(1456))
		putList(x(1454))
		setConstant(literal)
		setValue(x(1455))
		putRecord(builtin [det imods types] x(1447))
		setValue(x(1448))
		setValue(x(1451))
		setValue(x(1454))
		putRecord(any 1 x(1461))
		setConstant(det)
		putList(x(1460))
		setValue(x(1461))
		setConstant(nil)
		putList(x(1459))
		setConstant(det)
		setValue(x(1460))
		putList(x(1458))
		setConstant(any)
		setValue(x(1459))
		putList(x(1463))
		setConstant(true)
		setConstant(nil)
		putList(x(1462))
		setConstant(true)
		setValue(x(1463))
		putList(x(1466))
		setConstant(int)
		setConstant(nil)
		putList(x(1465))
		setConstant(int)
		setValue(x(1466))
		putList(x(1464))
		setConstant(virtualString)
		setValue(x(1465))
		putRecord(builtin [det imods types] x(1457))
		setValue(x(1458))
		setValue(x(1462))
		setValue(x(1464))
		putRecord(any 1 x(1470))
		setConstant(det)
		putList(x(1469))
		setValue(x(1470))
		setConstant(nil)
		putList(x(1468))
		setConstant(det)
		setValue(x(1469))
		putList(x(1471))
		setConstant(false)
		setConstant(nil)
		putList(x(1473))
		setConstant(number)
		setConstant(nil)
		putList(x(1472))
		setConstant(number)
		setValue(x(1473))
		putRecord(builtin [det imods types] x(1467))
		setValue(x(1468))
		setValue(x(1471))
		setValue(x(1472))
		putRecord(builtinTable ['*' '+' '+1' ',' '-' '-1' '.' '/' '<' '<-' '=' '=<' '==' '>' '>=' '@' 'Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'And' 'Arity' 'Array.high' 'Array.low' 'Asin' 'Assign' 'Atan' 'Atan2' 'AtomToString' 'BitArray.and' 'BitArray.card' 'BitArray.clear' 'BitArray.clone' 'BitArray.complementToList' 'BitArray.disjoint' 'BitArray.high' 'BitArray.is' 'BitArray.low' 'BitArray.new' 'BitArray.nimpl' 'BitArray.or' 'BitArray.set' 'BitArray.test' 'BitArray.toList' 'BootManager' 'ByNeed' 'Ceil' 'Char.isAlNum' 'Char.isAlpha' 'Char.isCntrl' 'Char.isDigit' 'Char.isGraph' 'Char.isLower' 'Char.isPrint' 'Char.isPunct' 'Char.isSpace' 'Char.isUpper' 'Char.isXDigit' 'Char.toAtom' 'Char.toLower' 'Char.toUpper' 'Char.type' 'CondSelect' 'Cos' 'Delay' 'Dictionary.clone' 'Dictionary.condGet' 'Dictionary.entries' 'Dictionary.get' 'Dictionary.items' 'Dictionary.keys' 'Dictionary.markSafe' 'Dictionary.member' 'Dictionary.put' 'Dictionary.remove' 'Dictionary.removeAll' 'Exception.location' 'Exception.raise' 'Exception.raiseDebug' 'Exception.raiseDebugCheck' 'Exception.raiseError' 'Exception.taskStackError' 'Exchange' 'Exp' 'FloatToInt' 'FloatToString' 'Floor' 'ForeignPointer.toInt' 'Future' 'Get' 'HasFeature' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Lock' 'Log' 'MakeTuple' 'Max' 'Min' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Put' 'Round' 'Send' 'Sin' 'Space.ask' 'Space.askVerbose' 'Space.clone' 'Space.commit' 'Space.inject' 'Space.merge' 'Space.new' 'Sqrt' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread.create' 'Thread.getPriority' 'Thread.injectException' 'Thread.is' 'Thread.isSuspended' 'Thread.preempt' 'Thread.resume' 'Thread.setPriority' 'Thread.state' 'Thread.suspend' 'Thread.this' 'Time.time' 'Unlock' 'Value.status' 'Value.type' 'Wait' 'WaitOr' 'Width' 'WidthC' '\\=' '^' builtin copyRecord 'div' fPow getClass hasLabel makeClass 'mod' monitorArity newObject ooExch ooGetLock record send tellRecordSize virtualStringLength '~'] y(159))
		setValue(x(0))
		setValue(x(10))
		setValue(x(20))
		setValue(x(27))
		setValue(x(34))
		setValue(x(44))
		setValue(x(51))
		setValue(x(60))
		setValue(x(70))
		setValue(x(80))
		setValue(x(87))
		setValue(x(94))
		setValue(x(104))
		setValue(x(114))
		setValue(x(124))
		setValue(x(134))
		setValue(x(140))
		setValue(x(147))
		setValue(x(153))
		setValue(x(160))
		setValue(x(170))
		setValue(x(183))
		setValue(x(195))
		setValue(x(202))
		setValue(x(212))
		setValue(x(220))
		setValue(x(227))
		setValue(x(234))
		setValue(x(241))
		setValue(x(248))
		setValue(x(255))
		setValue(x(265))
		setValue(x(272))
		setValue(x(279))
		setValue(x(286))
		setValue(x(293))
		setValue(x(300))
		setValue(x(308))
		setValue(x(318))
		setValue(x(325))
		setValue(x(332))
		setValue(x(339))
		setValue(x(349))
		setValue(x(356))
		setValue(x(363))
		setValue(x(370))
		setValue(x(380))
		setValue(x(388))
		setValue(x(395))
		setValue(x(401))
		setValue(x(408))
		setValue(x(415))
		setValue(x(422))
		setValue(x(429))
		setValue(x(436))
		setValue(x(443))
		setValue(x(450))
		setValue(x(457))
		setValue(x(464))
		setValue(x(471))
		setValue(x(478))
		setValue(x(485))
		setValue(x(492))
		setValue(x(499))
		setValue(x(506))
		setValue(x(513))
		setValue(x(525))
		setValue(x(532))
		setValue(x(536))
		setValue(x(543))
		setValue(x(555))
		setValue(x(564))
		setValue(x(573))
		setValue(x(581))
		setValue(x(589))
		setValue(x(593))
		setValue(x(603))
		setValue(x(613))
		setValue(x(620))
		setValue(x(624))
		setValue(x(629))
		setValue(x(633))
		setValue(x(637))
		setValue(x(644))
		setValue(x(648))
		setValue(x(653))
		setValue(x(663))
		setValue(x(670))
		setValue(x(677))
		setValue(x(684))
		setValue(x(691))
		setValue(x(698))
		setValue(x(704))
		setValue(x(713))
		setValue(x(723))
		setValue(x(730))
		setValue(x(737))
		setValue(x(744))
		setValue(x(751))
		setValue(x(758))
		setValue(x(765))
		setValue(x(772))
		setValue(x(779))
		setValue(x(786))
		setValue(x(793))
		setValue(x(800))
		setValue(x(807))
		setValue(x(814))
		setValue(x(821))
		setValue(x(828))
		setValue(x(835))
		setValue(x(842))
		setValue(x(849))
		setValue(x(856))
		setValue(x(863))
		setValue(x(870))
		setValue(x(877))
		setValue(x(884))
		setValue(x(891))
		setValue(x(898))
		setValue(x(905))
		setValue(x(912))
		setValue(x(919))
		setValue(x(926))
		setValue(x(933))
		setValue(x(937))
		setValue(x(944))
		setValue(x(954))
		setValue(x(964))
		setValue(x(974))
		setValue(x(984))
		setValue(x(997))
		setValue(x(1004))
		setValue(x(1011))
		setValue(x(1015))
		setValue(x(1019))
		setValue(x(1023))
		setValue(x(1030))
		setValue(x(1037))
		setValue(x(1044))
		setValue(x(1054))
		setValue(x(1061))
		setValue(x(1071))
		setValue(x(1078))
		setValue(x(1085))
		setValue(x(1092))
		setValue(x(1099))
		setValue(x(1106))
		setValue(x(1113))
		setValue(x(1120))
		setValue(x(1127))
		setValue(x(1134))
		setValue(x(1141))
		setValue(x(1148))
		setValue(x(1155))
		setValue(x(1162))
		setValue(x(1169))
		setValue(x(1176))
		setValue(x(1183))
		setValue(x(1187))
		setValue(x(1194))
		setValue(x(1201))
		setValue(x(1208))
		setValue(x(1215))
		setValue(x(1219))
		setValue(x(1223))
		setValue(x(1230))
		setValue(x(1237))
		setValue(x(1241))
		setValue(x(1245))
		setValue(x(1249))
		setValue(x(1253))
		setValue(x(1260))
		setValue(x(1267))
		setValue(x(1271))
		setValue(x(1278))
		setValue(x(1285))
		setValue(x(1292))
		setValue(x(1302))
		setValue(x(1311))
		setValue(x(1321))
		setValue(x(1328))
		setValue(x(1338))
		setValue(x(1348))
		setValue(x(1355))
		setValue(x(1362))
		setValue(x(1384))
		setValue(x(1394))
		setValue(x(1405))
		setValue(x(1412))
		setValue(x(1421))
		setValue(x(1425))
		setValue(x(1437))
		setValue(x(1447))
		setValue(x(1457))
		setValue(x(1467))
lbl(80703)	definition(x(2) 80724 pid('E' 2 pos('./compiler/Builtins.oz' 58 3) nil 3) <P: 608> [y(1)])
		putRecord(compiler 3 x(2))
		setConstant(badBuiltinTableEntry)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(80703)
lbl(80724)	definition(x(1) 81165 pid('' 2 pos('./compiler/Builtins.oz' 67 4) nil 5) <P: 609> [y(159)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(types x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 80764)
lbl(80743)	inlineDot(x(1) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 80764 80775)
		branch(80786)
lbl(80764)	move(y(0) x(0))
		putConstant(types x(1))
		genFastCall(<P: 608> 4)
		branch(80786)
lbl(80775)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(68)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(80786)	move(y(1) x(0))
		putConstant(det x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 80817)
lbl(80796)	inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 80817 80828)
		branch(80839)
lbl(80817)	move(y(0) x(0))
		putConstant(det x(1))
		genFastCall(<P: 608> 4)
		branch(80839)
lbl(80828)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(80839)	move(y(1) x(0))
		inlineDot(x(0) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 80893)
lbl(80884)	move(y(0) x(0))
		putConstant(typesdet x(1))
		genFastCall(<P: 608> 4)
lbl(80893)	move(y(1) x(0))
		putConstant(imods x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 80908)
		branch(80986)
lbl(80908)	inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 80929 80975)
		branch(80986)
lbl(80929)	move(y(1) x(0))
		inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) iarity x(1) cache)
		move(y(2) x(2))
		testLT(x(1) x(2) x(3) 80986)
lbl(80964)	move(y(0) x(0))
		putConstant(imods x(1))
		genFastCall(<P: 608> 4)
		branch(80986)
lbl(80975)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(78)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(80986)	move(y(1) x(0))
		putConstant(test x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81001)
		branch(81022)
lbl(81001)	inlineDot(x(0) test x(1) cache)
		testBI('IsBool' [x(1)]#[x(2)] 81013)
		branch(81022)
lbl(81013)	move(y(0) x(0))
		putConstant(test x(1))
		genFastCall(<P: 608> 4)
lbl(81022)	move(y(1) x(0))
		putConstant(negated x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 81126 81115)
		inlineDot(x(0) negated x(1) cache)
		testBI('IsAtom' [x(1)]#[x(2)] 81104)
		putConstant(test x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 81093)
		move(g(0) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 81082)
		callBI('.' [x(2) x(1)]#[x(3)])
		putConstant(test x(1))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 81071)
		branch(81126)
lbl(81071)	move(y(0) x(0))
		putConstant(negatedNotTest2 x(1))
		genFastCall(<P: 608> 4)
		branch(81126)
lbl(81082)	move(y(0) x(0))
		putConstant(undefinedNegatedBuiltin x(1))
		genFastCall(<P: 608> 4)
		branch(81126)
lbl(81093)	move(y(0) x(0))
		putConstant(negatedNotTest x(1))
		genFastCall(<P: 608> 4)
		branch(81126)
lbl(81104)	move(y(0) x(0))
		putConstant(negated x(1))
		genFastCall(<P: 608> 4)
		branch(81126)
lbl(81115)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(86)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(81126)	move(y(1) x(0))
		putConstant(doesNotReturn x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81141)
		deAllocateL4
		return
lbl(81141)	inlineDot(x(0) doesNotReturn x(0) cache)
		testBI('IsBool' [x(0)]#[x(1)] 81153)
		deAllocateL4
		return
lbl(81153)	move(y(0) x(0))
		putConstant(doesNotReturn x(1))
		deAllocateL4
		genFastCall(<P: 608> 5)
		endDefinition(80724)
lbl(81165)	move(y(159) x(0))
		genFastCall(<P: 175> 4)
lbl(81171)	definition(x(4) 81192 pid('GetBuiltinInfo' 2 pos('./compiler/Builtins.oz' 111 3) nil 5) <P: 610> [y(159)])
		move(g(0) x(2))
		putConstant(noInformation x(3))
		callBI('CondSelect' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(81171)
lbl(81192)	definition(x(2) 81221 pid('' 2 pos('./compiler/FunBuiltins.oz' 4 3) nil 2) <P: 611> [x(4)])
		putConstant(nil x(0))
lbl(81201)	definitionCopy(x(0) 81216 pid('/body' 0 pos('./compiler/FunBuiltins.oz' 4 3) [once] 0) unit [x(1) g(0)])
		getRecord('export' [getInfo] g(0))
		unifyValue(g(1))
		return
		endDefinition(81201)
lbl(81216)	tailCall(x(0) 0)
		endDefinition(81192)
lbl(81221)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putRecord('export' [getInfo] x(1))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(159) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant(false y(184))
		putConstant(true y(185))
		putConstant(unit x(4))
lbl(81257)	definition(x(2) 130281 pid('' 2 pos('./compiler/FunSA.oz' 1 0) nil 4) <P: 612> [y(134) y(161) y(205) y(129) y(206) y(100) y(89) y(211) y(213) y(216) y(210) y(202) y(170) y(174) y(142) y(215) y(189) y(176) y(38) y(42) y(30) y(50) y(173) y(201) y(131) y(64) y(57) y(107) y(26) y(28) y(40) y(86) y(35) y(127) y(133) y(138) y(179) y(46) y(204) y(90) y(27) y(128) y(203) y(157) y(163) y(7) y(180) y(214) y(108) y(212) y(193) y(194) y(184) y(185) y(165) y(166) y(190) y(99) y(2) y(175) y(132) y(183) x(4) y(219) y(220) y(221) y(222) y(218) y(47)])
		putList(x(2))
		setPredicateRef(<Q: 613>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 614>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 615>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 616>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 617>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 618>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 619>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 620>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 621>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 622>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 623>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 624>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 625>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 626>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 627>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 628>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 629>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 630>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 631>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 632>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 633>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 634>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 635>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 636>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 637>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 638>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 639>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 640>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 641>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 642>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 643>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 644>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 645>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 646>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 647>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 648>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 649>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 650>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 651>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 652>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 653>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 654>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 655>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 656>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 657>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 658>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 659>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 660>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 661>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 662>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 663>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 664>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 665>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 666>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 667>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 668>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 669>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 670>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 671>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 672>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 673>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 674>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 675>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 676>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 677>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 678>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 679>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 680>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 681>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 682>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 683>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 684>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 685>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 686>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 687>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 688>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 689>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 690>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 691>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 692>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 693>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 694>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 695>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 696>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 697>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 698>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 699>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 700>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 701>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 702>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 703>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 704>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 705>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 706>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 707>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 708>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 709>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 710>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 711>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 712>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 713>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 714>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 715>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 716>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 717>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 718>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 719>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaDo>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 722>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 723>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 724>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 725>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 726>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 727>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 728>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 729>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 730>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 731>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 732>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 733>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 734>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 735>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 736>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 737>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 738>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 740>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 742>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 743>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 744>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 745>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 746>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 747>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 748>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 749>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 750>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 751>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 752>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 753>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 754>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 755>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 756>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 757>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 758>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 759>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 760>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AssertTypes>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoDetType>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoRecDetType>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoKindedType>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 761>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 762>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 763>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 764>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 765>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 766>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 767>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 768>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 769>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 770>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 771>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 772>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 773>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 774>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 775>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 776>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 777>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 778>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 779>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 780>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 781>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 782>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 783>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 784>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 785>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 786>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 787>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 788>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 789>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 790>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 791>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 792>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 793>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AssertArity>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 794>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 795>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 796>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 797>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 798>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 799>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 800>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 801>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 802>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 803>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 804>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 805>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 806>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 807>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 808>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 809>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 810>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 811>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 812>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 813>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 814>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 815>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 816>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 817>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 818>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 819>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 820>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 821>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 822>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 823>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 824>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 825>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 826>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 827>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 828>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 829>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 830>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 831>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 832>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 833>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 834>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 835>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 836>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 837>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 838>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 839>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 840>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 841>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaBody>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 842>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 843>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 844>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 845>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 846>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 847>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 848>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 849>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 850>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 851>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 852>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 853>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 854>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 855>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 856>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 857>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 858>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 859>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 860>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 861>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 862>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 863>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 864>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 865>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 866>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 867>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 868>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 869>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 870>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 871>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 872>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 873>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 874>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 875>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 876>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 877>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 878>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 879>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 880>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 881>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 882>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 883>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 884>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 885>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 886>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 887>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 888>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 889>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 890>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 891>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 892>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 893>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 894>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 895>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 896>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 897>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 898>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 899>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 900>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 901>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 902>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 903>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 904>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ValToSubst>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TypeToSubst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RecordToSubst>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 905>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 906>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 907>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 908>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 909>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 910>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 911>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 912>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 913>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 914>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 915>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 916>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 917>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 918>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 919>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 920>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 921>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 922>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 923>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 924>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnifyDeref>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 925>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 926>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 927>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 928>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 929>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 930>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 931>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 932>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 933>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 934>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 935>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 936>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 937>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 938>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 939>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 940>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 941>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 942>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 943>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 944>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 945>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 946>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 947>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 948>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 949>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 950>)
		setValue(x(3))
lbl(83357)	definitionCopy(x(2) 130276 pid('/body' 0 pos('./compiler/FunSA.oz' 1 0) [once] 89) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) g(51) g(52) g(53) g(54) g(55) g(56) g(57) g(58) g(59) g(60) g(61) g(62) g(63) g(64) g(65) g(66) g(67) g(68) x(1)])
		allocateL(50)
		move(g(0) x(0))
		inlineDot(x(0) 'FD' x(1) cache)
		inlineDot(x(0) 'FS' x(2) cache)
		inlineDot(x(0) 'System' x(3) cache)
		inlineDot(x(0) 'Misc' x(4) cache)
		inlineDot(x(0) 'ImAConstruction' x(5) cache)
		inlineDot(x(0) 'ImAValueNode' x(6) cache)
		inlineDot(x(0) 'ImAVariableOccurrence' x(7) cache)
		inlineDot(x(0) 'ImAToken' x(8) cache)
		inlineDot(x(0) 'Core' x(9) cache)
		inlineDot(x(0) 'Builtins' x(10) cache)
		inlineDot(x(0) 'RunTime' x(11) cache)
		inlineDot(x(0) 'CompilerSupport' x(12) cache)
lbl(83440)	definition(x(13) 83491 pid('Add' 3 pos('./compiler/POTypes.oz' 33 3) nil 3) <Q: 613> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 83470 83478)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(83470)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(83478)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83440)
lbl(83491)	definition(x(13) 83568 pid('GetNames' 2 pos('./compiler/POTypes.oz' 39 3) nil 5) <Q: 614> nil)
lbl(83497)	definition(x(4) 83554 pid('' 3 pos('./compiler/POTypes.oz' 41 7) nil 5) unit nil)
		shallowGuard(83541)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(83513)	shallowThen
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 613> 6)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 613> 7)
lbl(83541)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(41)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83497)
lbl(83554)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(83491)
lbl(83568)	definition(x(13) 84664 pid('PartialOrder' 3 pos('./compiler/POTypes.oz' 45 3) nil 5) <Q: 615> [g(1) g(2) x(1) g(3) x(2) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 614> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
lbl(83598)	definition(x(1) 83632 pid('' 2 pos('./compiler/POTypes.oz' 49 23) nil 4) unit nil)
		shallowGuard(83619)
		getRecord(def 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(83614)	shallowThen
		unify(x(1) x(2))
		return
lbl(83619)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83598)
lbl(83632)	move(y(1) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(83652)	definition(x(0) 83813 pid('IdxMapping' 1 pos('./compiler/POTypes.oz' 53 6) nil 3) unit [g(0) y(3) g(1) g(2) y(4) y(0)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2i x(0))
		genFastCall(<P: 110> 6)
lbl(83674)	definition(x(1) 83708 pid('' 1 pos('./compiler/POTypes.oz' 58 3) nil 4) unit [g(3) g(4)])
		move(g(0) x(1))
		inlineDot(x(1) int x(2) cache)
		putRecord('#' 2 x(3))
		setConstant(1)
		setValue(g(1))
		move(x(0) x(1))
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(83674)
lbl(83708)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83714)	definition(x(1) 83771 pid('' 1 pos('./compiler/POTypes.oz' 64 3) nil 6) unit [g(3) y(0)])
		shallowGuard(83758)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83730)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) less x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(2)]#[x(5)])
		callBI('.' [x(4) x(1)]#[x(2)])
		move(x(5) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
lbl(83758)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83714)
lbl(83771)	move(g(5) x(0))
		genFastCall(<P: 34> 4)
		move(g(3) x(0))
		inlineDot(x(0) distinct x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(3) x(0))
		inlineDot(x(0) distribute x(2) cache)
		move(y(0) x(1))
		putConstant(naive x(0))
		deAllocateL1
		tailCall(x(2) 2)
		endDefinition(83652)
lbl(83813)	createVariable(y(5))
lbl(83815)	definition(x(1) 84182 pid('BitMapping' 1 pos('./compiler/POTypes.oz' 76 6) nil 3) unit [g(0) y(6) g(1) g(3) y(4) g(4) y(5) y(3) y(0) g(5) g(6)])
		allocateL2
		move(x(0) y(0))
		move(g(1) x(1))
		putConstant(n2s x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 110> 6)
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2b x(0))
		genFastCall(<P: 110> 6)
lbl(83849)	definition(x(1) 83870 pid('' 1 pos('./compiler/POTypes.oz' 84 3) nil 4) unit [g(3) g(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(83849)
lbl(83870)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83876)	definition(x(1) 83963 pid('' 1 pos('./compiler/POTypes.oz' 90 3) nil 6) unit [g(5) g(4) y(1) g(6)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) var x(2) cache)
		inlineDot(x(2) upperBound x(2) cache)
		putRecord('#' 2 x(4))
		setConstant(1)
		setValue(g(1))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(g(2) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		move(g(0) x(2))
		inlineDot(x(2) include x(3) cache)
		move(g(3) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		move(x(5) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(83876)
lbl(83963)	move(g(7) x(0))
		genFastCall(<P: 34> 4)
lbl(83969)	definition(x(1) 84023 pid('' 1 pos('./compiler/POTypes.oz' 99 3) nil 6) unit [g(5) y(1)])
		shallowGuard(84010)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83985)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) subset x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		callBI('.' [x(4) x(2)]#[x(1)])
		move(x(5) x(0))
		tailCall(x(3) 2)
lbl(84010)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83969)
lbl(84023)	move(g(8) x(0))
		genFastCall(<P: 34> 4)
lbl(84029)	definition(x(1) 84173 pid('' 1 pos('./compiler/POTypes.oz' 105 3) nil 4) unit [y(1) g(5) g(9) g(10) y(0) g(4)])
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createChoice
lbl(84048)	lastClause
		emptyClause
lbl(84050)	move(g(1) x(0))
		inlineDot(x(0) value x(2) cache)
		inlineDot(x(2) new x(1) cache)
		inlineDot(x(0) reflect x(2) cache)
		inlineDot(x(2) lowerBound x(2) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		call(y(2) 2)
lbl(84096)	definition(x(3) 84158 pid('' 1 pos('./compiler/POTypes.oz' 111 3) nil 4) unit [g(1) y(1) g(3) g(4) y(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) isIn x(3) cache)
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		call(x(3) 3)
		testBool(y(1) 84143 84145)
		move(g(3) x(0))
		move(g(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(3))
		callBI('BitArray.set' [x(2) x(3)]#nil)
lbl(84143)	deAllocateL2
		return
lbl(84145)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(112)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84096)
lbl(84158)	move(g(5) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 100> 9)
		endDefinition(84029)
lbl(84173)	move(g(7) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(83815)
lbl(84182)	move(g(7) x(2))
		inlineDot(x(2) base x(3) cache)
		inlineDot(x(3) one x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(6) x(1))
		call(x(3) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		move(y(5) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant(i2n x(2))
		callBI('MakeTuple' [x(2) x(1)]#[x(3)])
lbl(84230)	definition(x(1) 84254 pid('' 1 pos('./compiler/POTypes.oz' 125 7) nil 5) unit [y(5) x(3)])
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		unify(x(4) x(0))
		return
		endDefinition(84230)
lbl(84254)	moveMoveXYYX(x(3) y(5) y(3) x(0))
		genFastCall(<P: 34> 4)
		move(g(7) x(0))
		inlineDot(x(0) base x(2) cache)
		inlineDot(x(2) one x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(2) cache)
lbl(84295)	definition(x(3) 84399 pid('Constrain' 3 pos('./compiler/POTypes.oz' 133 6) nil 5) unit [g(9) x(2) g(10)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testBI('IsAtom' [x(0)]#[x(3)] 84322)
		move(g(1) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('BitArray.or' [x(2) x(4)]#nil)
		branch(84359)
lbl(84322)	definition(x(3) 84353 pid('' 1 pos('./compiler/POTypes.oz' 138 6) nil 3) unit [g(1) g(0) y(1)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84345)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		return
lbl(84345)	putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(84322)
lbl(84353)	move(x(3) x(1))
		genFastCall(<P: 34> 4)
lbl(84359)	definition(x(1) 84390 pid('' 1 pos('./compiler/POTypes.oz' 145 3) nil 3) unit [g(1) g(2) y(1)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84382)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.nimpl' [x(0) x(2)]#nil)
		return
lbl(84382)	putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(84359)
lbl(84390)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(84295)
lbl(84399)	definition(x(0) 84432 pid('Encode' 3 pos('./compiler/POTypes.oz' 152 6) nil 6) unit [g(3) y(4) x(3)])
		testLiteral(x(0) nil 84415)
		putConstant(illegalType x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(84415)	putConstant(1 x(3))
		move(g(1) x(4))
		callBI('BitArray.new' [x(3) x(4)]#[x(5)])
		unify(x(5) x(2))
		tailCall(g(2) 3)
		endDefinition(84399)
lbl(84432)	createVariable(x(4))
lbl(84434)	definition(x(1) 84493 pid('DecodeAux' 2 pos('./compiler/POTypes.oz' 165 2) nil 6) unit [g(11) y(5) g(10) x(2) x(4)])
		callBI('BitArray.toList' [x(0)]#[x(2)])
		testLiteral(x(2) nil 84451)
lbl(84447)	getLiteral(nil x(1))
		return
lbl(84451)	testList(x(2) 84478)
lbl(84454)	getVariable(x(2))
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(g(3) x(2))
		callBI('.' [x(2) x(4)]#[x(5)])
		callBI('BitArray.nimpl' [x(0) x(5)]#nil)
		getListValVar(x(1) x(4) x(1))
		tailCall(g(4) 2)
lbl(84478)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(173)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84434)
lbl(84493)	unify(x(1) x(4))
lbl(84496)	definition(x(1) 84524 pid('Decode' 2 pos('./compiler/POTypes.oz' 176 2) nil 3) unit [g(12) x(4)])
		testBI('IsFree' [x(0)]#[x(2)] 84513)
		getList(x(1))
		unifyLiteral(value)
		unifyLiteral(nil)
		return
lbl(84513)	callBI('BitArray.clone' [x(0)]#[x(2)])
		move(x(2) x(0))
		tailCall(g(1) 2)
		endDefinition(84496)
lbl(84524)	definition(x(4) 84612 pid('' 1 pos('./compiler/POTypes.oz' 191 7) nil 3) unit [y(3) x(2) x(3)])
		shallowGuard(84599)
		getRecord(def 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(84540)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(0) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 84569 84588)
		putConstant(illegalPartialOrderSpecification x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(84569)	move(g(1) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(g(2) 3)
lbl(84588)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(192)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84599)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(191)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84524)
lbl(84612)	moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		getRecord(po [decl decode encode] y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(0))
lbl(84636)	definition(x(1) 84657 pid('' 1 pos('./compiler/POTypes.oz' 203 12) nil 4) unit [g(3) y(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(84636)
lbl(84657)	unify(x(1) x(0))
		deAllocateL7
		return
		endDefinition(83568)
lbl(84664)	putRecord('#' 2 x(14))
		setConstant('thread')
		setConstant(value)
		putRecord('#' 2 x(16))
		setConstant(space)
		setConstant(value)
		putRecord('#' 2 x(18))
		setConstant(chunk)
		setConstant(value)
		putRecord('#' 2 x(20))
		setConstant(cell)
		setConstant(value)
		putRecord('#' 2 x(22))
		setConstant(foreignPointer)
		setConstant(value)
		putRecord('#' 2 x(24))
		setConstant(fset)
		setConstant(value)
		putRecord('#' 2 x(26))
		setConstant(recordC)
		setConstant(value)
		putRecord('#' 2 x(28))
		setConstant(record)
		setConstant(recordC)
		putRecord('#' 2 x(30))
		setConstant(number)
		setConstant(value)
		putRecord('#' 2 x(32))
		setConstant(intC)
		setConstant(number)
		putRecord('#' 2 x(34))
		setConstant(int)
		setConstant(intC)
		putRecord('#' 2 x(36))
		setConstant(float)
		setConstant(number)
		putRecord('#' 2 x(38))
		setConstant(char)
		setConstant(fdint)
		putRecord('#' 2 x(40))
		setConstant(fdint)
		setConstant(int)
		putRecord('#' 2 x(42))
		setConstant(tuple)
		setConstant(record)
		putRecord('#' 2 x(44))
		setConstant(literal)
		setConstant(tuple)
		putRecord('#' 2 x(46))
		setConstant(atom)
		setConstant(literal)
		putRecord('#' 2 x(48))
		setConstant(name)
		setConstant(literal)
		putRecord('#' 2 x(50))
		setConstant(nilAtom)
		setConstant(atom)
		putRecord('#' 2 x(52))
		setConstant(cons)
		setConstant(tuple)
		putRecord('#' 2 x(54))
		setConstant(bool)
		setConstant(name)
		putRecord('#' 2 x(56))
		setConstant('unit')
		setConstant(name)
		putRecord('#' 2 x(58))
		setConstant(bitArray)
		setConstant(chunk)
		putRecord('#' 2 x(60))
		setConstant(array)
		setConstant(chunk)
		putRecord('#' 2 x(62))
		setConstant(dictionary)
		setConstant(chunk)
		putRecord('#' 2 x(64))
		setConstant('class')
		setConstant(chunk)
		putRecord('#' 2 x(66))
		setConstant(object)
		setConstant(chunk)
		putRecord('#' 2 x(68))
		setConstant('lock')
		setConstant(chunk)
		putRecord('#' 2 x(70))
		setConstant(port)
		setConstant(chunk)
		putRecord('#' 2 x(72))
		setConstant('procedure/0')
		setConstant(value)
		putRecord('#' 2 x(74))
		setConstant('procedure/1')
		setConstant(value)
		putRecord('#' 2 x(76))
		setConstant('procedure/2')
		setConstant(value)
		putRecord('#' 2 x(78))
		setConstant('procedure/3')
		setConstant(value)
		putRecord('#' 2 x(80))
		setConstant('procedure/4')
		setConstant(value)
		putRecord('#' 2 x(82))
		setConstant('procedure/5')
		setConstant(value)
		putRecord('#' 2 x(84))
		setConstant('procedure/6')
		setConstant(value)
		putRecord('#' 2 x(86))
		setConstant('procedure/>6')
		setConstant(value)
		putRecord('#' 2 x(88))
		setConstant(pair)
		setConstant(tuple)
		putList(x(87))
		setValue(x(88))
		setConstant(nil)
		putList(x(85))
		setValue(x(86))
		setValue(x(87))
		putList(x(83))
		setValue(x(84))
		setValue(x(85))
		putList(x(81))
		setValue(x(82))
		setValue(x(83))
		putList(x(79))
		setValue(x(80))
		setValue(x(81))
		putList(x(77))
		setValue(x(78))
		setValue(x(79))
		putList(x(75))
		setValue(x(76))
		setValue(x(77))
		putList(x(73))
		setValue(x(74))
		setValue(x(75))
		putList(x(71))
		setValue(x(72))
		setValue(x(73))
		putList(x(69))
		setValue(x(70))
		setValue(x(71))
		putList(x(67))
		setValue(x(68))
		setValue(x(69))
		putList(x(65))
		setValue(x(66))
		setValue(x(67))
		putList(x(63))
		setValue(x(64))
		setValue(x(65))
		putList(x(61))
		setValue(x(62))
		setValue(x(63))
		putList(x(59))
		setValue(x(60))
		setValue(x(61))
		putList(x(57))
		setValue(x(58))
		setValue(x(59))
		putList(x(55))
		setValue(x(56))
		setValue(x(57))
		putList(x(53))
		setValue(x(54))
		setValue(x(55))
		putList(x(51))
		setValue(x(52))
		setValue(x(53))
		putList(x(49))
		setValue(x(50))
		setValue(x(51))
		putList(x(47))
		setValue(x(48))
		setValue(x(49))
		putList(x(45))
		setValue(x(46))
		setValue(x(47))
		putList(x(43))
		setValue(x(44))
		setValue(x(45))
		putList(x(41))
		setValue(x(42))
		setValue(x(43))
		putList(x(39))
		setValue(x(40))
		setValue(x(41))
		putList(x(37))
		setValue(x(38))
		setValue(x(39))
		putList(x(35))
		setValue(x(36))
		setValue(x(37))
		putList(x(33))
		setValue(x(34))
		setValue(x(35))
		putList(x(31))
		setValue(x(32))
		setValue(x(33))
		putList(x(29))
		setValue(x(30))
		setValue(x(31))
		putList(x(27))
		setValue(x(28))
		setValue(x(29))
		putList(x(25))
		setValue(x(26))
		setValue(x(27))
		putList(x(23))
		setValue(x(24))
		setValue(x(25))
		putList(x(21))
		setValue(x(22))
		setValue(x(23))
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(17))
		setConstant(literal)
		setConstant(nil)
		putList(x(16))
		setConstant(int)
		setValue(x(17))
		putRecord(def 2 x(15))
		setConstant(feature)
		setValue(x(16))
		putList(x(21))
		setConstant(atom)
		setConstant(nil)
		putList(x(20))
		setConstant(number)
		setValue(x(21))
		putRecord(def 2 x(19))
		setConstant(comparable)
		setValue(x(20))
		putList(x(25))
		setConstant(chunk)
		setConstant(nil)
		putList(x(24))
		setConstant(record)
		setValue(x(25))
		putRecord(def 2 x(23))
		setConstant(recordOrChunk)
		setValue(x(24))
		putList(x(29))
		setConstant(chunk)
		setConstant(nil)
		putList(x(28))
		setConstant(recordC)
		setValue(x(29))
		putRecord(def 2 x(27))
		setConstant(recordCOrChunk)
		setValue(x(28))
		putList(x(33))
		setConstant(cons)
		setConstant(nil)
		putList(x(32))
		setConstant(nilAtom)
		setValue(x(33))
		putRecord(def 2 x(31))
		setConstant(list)
		setValue(x(32))
		putList(x(37))
		setConstant(cons)
		setConstant(nil)
		putList(x(36))
		setConstant(nilAtom)
		setValue(x(37))
		putRecord(def 2 x(35))
		setConstant(string)
		setValue(x(36))
		putList(x(47))
		setConstant('procedure/>6')
		setConstant(nil)
		putList(x(46))
		setConstant('procedure/6')
		setValue(x(47))
		putList(x(45))
		setConstant('procedure/5')
		setValue(x(46))
		putList(x(44))
		setConstant('procedure/4')
		setValue(x(45))
		putList(x(43))
		setConstant('procedure/3')
		setValue(x(44))
		putList(x(42))
		setConstant('procedure/2')
		setValue(x(43))
		putList(x(41))
		setConstant('procedure/1')
		setValue(x(42))
		putList(x(40))
		setConstant('procedure/0')
		setValue(x(41))
		putRecord(def 2 x(39))
		setConstant(procedure)
		setValue(x(40))
		putList(x(51))
		setConstant(record)
		setConstant(nil)
		putList(x(50))
		setConstant(number)
		setValue(x(51))
		putRecord(def 2 x(49))
		setConstant(virtualString)
		setValue(x(50))
		putList(x(55))
		setConstant(object)
		setConstant(nil)
		putList(x(54))
		setConstant(procedure)
		setValue(x(55))
		putRecord(def 2 x(53))
		setConstant(procedureOrObject)
		setValue(x(54))
		putList(x(59))
		setConstant(object)
		setConstant(nil)
		putList(x(58))
		setConstant('procedure/1')
		setValue(x(59))
		putRecord(def 2 x(57))
		setConstant(unaryProcOrObject)
		setValue(x(58))
		putList(x(56))
		setValue(x(57))
		setConstant(nil)
		putList(x(52))
		setValue(x(53))
		setValue(x(56))
		putList(x(48))
		setValue(x(49))
		setValue(x(52))
		putList(x(38))
		setValue(x(39))
		setValue(x(48))
		putList(x(34))
		setValue(x(35))
		setValue(x(38))
		putList(x(30))
		setValue(x(31))
		setValue(x(34))
		putList(x(26))
		setValue(x(27))
		setValue(x(30))
		putList(x(22))
		setValue(x(23))
		setValue(x(26))
		putList(x(18))
		setValue(x(19))
		setValue(x(22))
		putList(x(14))
		setValue(x(15))
		setValue(x(18))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		moveMoveXYXY(x(11) y(10) x(12) y(11))
		move(x(13) x(0))
		move(x(14) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<Q: 615> 6)
lbl(85534)	definition(x(3) 86672 pid('OzValueToType' 2 pos('./compiler/POTypes.oz' 275 3) nil 11) <Q: 616> [y(12) y(0) g(12)])
		testBI('IsDet' [x(0)]#[x(2)] 86527)
		testBI('IsInt' [x(0)]#[x(2)] 85651)
		testBI('IsChar' [x(0)]#[x(2)] 85573)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(char x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85573)	allocateL2
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		testBool(y(1) 85618 85640)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(fdint x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85618)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(int x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85640)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(283)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(85651)	testBI('IsFloat' [x(0)]#[x(2)] 85676)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(float x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85676)	testBI('IsAtom' [x(0)]#[x(2)] 85726)
		testLiteral(x(0) nil 85705)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(nilAtom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85705)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(atom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85726)	testBI('IsName' [x(0)]#[x(2)] 85814)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) true 85760)
lbl(85738)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(bool x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85760)	testLiteral(x(0) false 85766)
		branch(85738)
lbl(85766)	testLiteral(x(0) unit 85792)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant('unit' x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85792)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(name x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85814)	testBI('IsTuple' [x(0)]#[x(2)] 85884)
		match(x(0) ht(85863 [onRecord('|' 2 85821) onRecord('#' 2 85842)]))
lbl(85821)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cons x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85842)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(pair x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85863)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(tuple x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85884)	testBI('IsRecord' [x(0)]#[x(2)] 85909)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(record x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85909)	testBI('IsProcedure' [x(0)]#[x(2)] 86112)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		testNumber(x(2) 0 85941)
lbl(85920)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85941)	testNumber(x(2) 1 85966)
lbl(85945)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/1' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85966)	testNumber(x(2) 2 85991)
lbl(85970)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85991)	testNumber(x(2) 3 86016)
lbl(85995)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86016)	testNumber(x(2) 4 86041)
lbl(86020)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86041)	testNumber(x(2) 5 86066)
lbl(86045)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86066)	testNumber(x(2) 6 86091)
lbl(86070)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86091)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86112)	testBI('IsCell' [x(0)]#[x(2)] 86137)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cell x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86137)	testBI('IsChunk' [x(0)]#[x(2)] 86408)
		testBI('IsArray' [x(0)]#[x(2)] 86166)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(array x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86166)	testBI('IsDictionary' [x(0)]#[x(2)] 86191)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(dictionary x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86191)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 86229 86397)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('class' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86229)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 86258)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(object x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86258)	testBI('IsLock' [x(0)]#[x(1)] 86284)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('lock' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86284)	testBI('IsPort' [x(0)]#[x(1)] 86310)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(port x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86310)	testBI('BitArray.is' [x(0)]#[x(1)] 86336)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(bitArray x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86336)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(8))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(7))
		setConstant(port)
		setValue(x(8))
		putList(x(6))
		setConstant('lock')
		setValue(x(7))
		putList(x(5))
		setConstant(object)
		setValue(x(6))
		putList(x(4))
		setConstant('class')
		setValue(x(5))
		putList(x(2))
		setConstant(dictionary)
		setValue(x(4))
		putList(x(1))
		setConstant(array)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(chunk x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86397)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(334)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86408)	testBI('IsSpace' [x(0)]#[x(2)] 86433)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(space x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86433)	testBI('Thread.is' [x(0)]#[x(2)] 86458)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('thread' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86458)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(10))
		setConstant('thread')
		setConstant(nil)
		putList(x(9))
		setConstant(space)
		setValue(x(10))
		putList(x(8))
		setConstant(chunk)
		setValue(x(9))
		putList(x(7))
		setConstant(cell)
		setValue(x(8))
		putList(x(6))
		setConstant(procedure)
		setValue(x(7))
		putList(x(5))
		setConstant(record)
		setValue(x(6))
		putList(x(2))
		setConstant(float)
		setValue(x(5))
		putList(x(4))
		setConstant(int)
		setValue(x(2))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant(value x(0))
		tailCall(x(3) 3)
lbl(86527)	testBI('IsKinded' [x(0)]#[x(2)] 86649)
		allocateL3
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testBool(y(2) 86578 86638)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(intC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86578)	move(y(0) x(0))
		testBI('IsRecordC' [x(0)]#[x(1)] 86607)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(recordC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86607)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(2))
		setConstant(recordC)
		setConstant(nil)
		putList(x(1))
		setConstant(intC)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(value x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86649)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(value x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
		endDefinition(85534)
lbl(86672)	definition(x(3) 86726 pid('NormalizeCoord' 2 pos('./compiler/StaticAnalysis.oz' 54 3) nil 5) <Q: 617> nil)
		testLiteral(x(0) unit 86686)
lbl(86682)	getLiteral(unit x(1))
		return
lbl(86686)	getRecord('pos' 3 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineDot(x(0) 1 x(4) cache)
		unify(x(4) x(1))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(3))
		return
		endDefinition(86672)
lbl(86726)	definition(x(3) 86747 pid('IsMinimalType' 2 pos('./compiler/StaticAnalysis.oz' 60 3) nil 4) <Q: 618> [g(16)])
		callBI('BitArray.card' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(86726)
lbl(86747)	definition(x(0) 86770 pid('FirstOrId' 2 pos('./compiler/StaticAnalysis.oz' 66 3) nil 2) <Q: 619> nil)
		testRecord(x(0) '#' 2 86764)
lbl(86758)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(86764)	unify(x(1) x(0))
		return
		endDefinition(86747)
lbl(86770)	definition(x(3) 86807 pid('LabelToVS' 2 pos('./compiler/StaticAnalysis.oz' 70 3) nil 5) <Q: 620> [y(2)])
		testBI('IsDet' [x(0)]#[x(2)] 86801)
		move(g(0) x(2))
		inlineDot(x(2) valueToVirtualString x(4) cache)
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(86801)	getLiteral('_' x(1))
		return
		endDefinition(86770)
lbl(86807)	definition(x(3) 86868 pid('Bool2Token' 2 pos('./compiler/StaticAnalysis.oz' 74 3) nil 4) <Q: 621> [y(10)])
		testBool(x(0) 86836 86855)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86836)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86855)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(75)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(86807)
lbl(86868)	definition(x(3) 86887 pid('CurrentArity' 2 pos('./compiler/StaticAnalysis.oz' 89 3) nil 3) <Q: 622> [g(17)])
		testBI('IsFree' [x(0)]#[x(2)] 86882)
		getLiteral(nil x(1))
		return
lbl(86882)	genFastCall(<P: 114> 5)
		endDefinition(86868)
lbl(86887)	definition(x(3) 86919 pid('HasFeatureNow' 3 pos('./compiler/StaticAnalysis.oz' 97 3) nil 3) <Q: 623> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 622> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 22> 7)
		endDefinition(86887)
lbl(86919)	definition(x(3) 87014 pid('GetClassData' 2 pos('./compiler/StaticAnalysis.oz' 107 3) nil 3) <Q: 624> [y(7) y(6)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87007)
lbl(86947)	testBI('IsObject' [x(0)]#[x(1)] 87007)
lbl(86951)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 86963)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(86963)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 86985)
lbl(86970)	inlineDot(x(0) kind x(2) cache)
		testLiteral(x(2) 'class' 86985)
lbl(86980)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(86985)	move(y(2) x(0))
		move(g(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87002)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 624> 5)
lbl(87002)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87007)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(86919)
lbl(87014)	definition(x(3) 87117 pid('GetClassOfObjectData' 2 pos('./compiler/StaticAnalysis.oz' 135 3) nil 3) <Q: 625> [y(7) y(6)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87110)
lbl(87042)	testBI('IsObject' [x(0)]#[x(1)] 87110)
lbl(87046)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 87058)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87058)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87088)
lbl(87065)	inlineDot(x(0) kind x(2) cache)
		testLiteral(x(2) object 87088)
lbl(87075)	move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(getClassNode x(1) 1 cache)
lbl(87088)	move(y(2) x(0))
		move(g(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87105)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 625> 5)
lbl(87105)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87110)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(87014)
lbl(87117)	definition(x(3) 87137 pid('GetDataObject' 2 pos('./compiler/StaticAnalysis.oz' 164 3) nil 3) <Q: 626> nil)
		move(x(0) x(2))
		putConstant(true x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87117)
lbl(87137)	definition(x(1) 87157 pid('GetData' 2 pos('./compiler/StaticAnalysis.oz' 174 3) nil 3) <Q: 627> nil)
		move(x(0) x(2))
		putConstant(false x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87137)
lbl(87157)	definition(x(3) 87183 pid('GetFullData' 2 pos('./compiler/StaticAnalysis.oz' 184 3) nil 4) <Q: 628> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(true x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87157)
lbl(87183)	definition(x(3) 87209 pid('GetPrintData' 2 pos('./compiler/StaticAnalysis.oz' 188 3) nil 4) <Q: 629> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(false x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87183)
lbl(87209)	definition(x(3) 87221 pid('IsAny' 2 pos('./compiler/StaticAnalysis.oz' 195 3) nil 2) <Q: 630> nil)
		getLiteral(true x(1))
		return
		endDefinition(87209)
lbl(87221)	putRecord(tt [any array atom bitArray bool builtin cell char chunk 'class' comparable dictionary 'false' feature float foreignPointer fset int list literal 'lock' name number object pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject record recordC recordCOrChunk recordOrChunk space string 'thread' token 'true' tuple 'unit' value virtualString] x(4))
		setValue(x(3))
		setValue(g(18))
		setValue(g(19))
		setVariable(x(5))
		setValue(g(20))
		setVariable(y(0))
		setValue(g(21))
		setValue(g(22))
		setValue(g(23))
		setValue(g(24))
		setVariable(x(6))
		setValue(g(25))
		setVariable(x(7))
		setVariable(y(13))
		setValue(g(26))
		setVariable(x(8))
		setVariable(x(9))
		setValue(g(27))
		setValue(g(28))
		setValue(g(29))
		setValue(g(30))
		setValue(g(31))
		setValue(g(32))
		setVariable(y(14))
		setVariable(x(10))
		setValue(g(33))
		setValue(g(34))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setValue(g(35))
		setValue(g(36))
		setVariable(x(20))
		setVariable(x(21))
		setValue(g(37))
		setValue(g(38))
		setValue(g(39))
		setVariable(y(15))
		setVariable(y(16))
		setValue(g(40))
		setValue(g(41))
		setValue(x(3))
		setValue(g(14))
lbl(87323)	definition(x(2) 87341 pid('TypeTests.true' 2 pos('./compiler/StaticAnalysis.oz' 210 20) nil 4) <Q: 631> nil)
		putConstant(true x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(87323)
lbl(87341)	unify(x(2) y(16))
lbl(87344)	definition(x(2) 87362 pid('TypeTests.false' 2 pos('./compiler/StaticAnalysis.oz' 213 20) nil 4) <Q: 632> nil)
		putConstant(false x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(87344)
lbl(87362)	unify(x(2) x(7))
lbl(87365)	definition(x(2) 87388 pid('TypeTests.feature' 2 pos('./compiler/StaticAnalysis.oz' 217 20) nil 3) <Q: 633> [g(27) g(29)])
		testBI('IsInt' [x(0)]#[x(2)] 87379)
		getLiteral(true x(1))
		return
lbl(87379)	callBI('IsLiteral' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(87365)
lbl(87388)	unify(x(2) y(13))
lbl(87391)	definition(x(2) 87414 pid('TypeTests.comparable' 2 pos('./compiler/StaticAnalysis.oz' 220 20) nil 3) <Q: 634> [g(32) g(19)])
		testBI('IsNumber' [x(0)]#[x(2)] 87405)
		getLiteral(true x(1))
		return
lbl(87405)	callBI('IsAtom' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(87391)
lbl(87414)	unify(x(2) x(6))
lbl(87417)	definition(x(2) 87440 pid('TypeTests.recordOrChunk' 2 pos('./compiler/StaticAnalysis.oz' 226 20) nil 3) <Q: 635> [g(35) g(23)])
		testBI('IsRecord' [x(0)]#[x(2)] 87431)
		getLiteral(true x(1))
		return
lbl(87431)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(87417)
lbl(87440)	unify(x(2) x(21))
lbl(87443)	definition(x(2) 87466 pid('TypeTests.recordCOrChunk' 2 pos('./compiler/StaticAnalysis.oz' 229 20) nil 3) <Q: 636> [g(36) g(23)])
		testBI('IsRecordC' [x(0)]#[x(2)] 87457)
		getLiteral(true x(1))
		return
lbl(87457)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(87443)
lbl(87466)	unify(x(2) x(20))
lbl(87469)	definition(x(2) 87495 pid('TypeTests.token' 2 pos('./compiler/StaticAnalysis.oz' 232 20) nil 4) <Q: 637> [y(7)])
		testBI('IsObject' [x(0)]#[x(2)] 87489)
		move(g(0) x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87489)	getLiteral(false x(1))
		return
		endDefinition(87469)
lbl(87495)	unify(x(2) y(15))
		move(y(3) x(2))
		inlineDot(x(2) isBuiltin x(6) cache)
		unify(x(6) y(0))
lbl(87510)	definition(x(6) 87529 pid('TypeTests.procedureOrObject' 2 pos('./compiler/StaticAnalysis.oz' 237 20) nil 3) <Q: 638> [g(34) y(14)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87524)
		getLiteral(true x(1))
		return
lbl(87524)	tailCall(g(1) 2)
		endDefinition(87510)
lbl(87529)	unify(x(6) x(19))
lbl(87532)	definition(x(6) 87561 pid('TypeTests.procedure/0' 2 pos('./compiler/StaticAnalysis.oz' 241 20) nil 4) <Q: 639> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87555)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(0 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87555)	getLiteral(false x(1))
		return
		endDefinition(87532)
lbl(87561)	unify(x(6) x(11))
lbl(87564)	definition(x(6) 87593 pid('TypeTests.procedure/1' 2 pos('./compiler/StaticAnalysis.oz' 245 20) nil 4) <Q: 640> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87587)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87587)	getLiteral(false x(1))
		return
		endDefinition(87564)
lbl(87593)	unify(x(6) x(12))
lbl(87596)	definition(x(6) 87625 pid('TypeTests.procedure/2' 2 pos('./compiler/StaticAnalysis.oz' 249 20) nil 4) <Q: 641> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87619)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(2 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87619)	getLiteral(false x(1))
		return
		endDefinition(87596)
lbl(87625)	unify(x(6) x(13))
lbl(87628)	definition(x(6) 87657 pid('TypeTests.procedure/3' 2 pos('./compiler/StaticAnalysis.oz' 253 20) nil 4) <Q: 642> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87651)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(3 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87651)	getLiteral(false x(1))
		return
		endDefinition(87628)
lbl(87657)	unify(x(6) x(14))
lbl(87660)	definition(x(6) 87689 pid('TypeTests.procedure/4' 2 pos('./compiler/StaticAnalysis.oz' 257 20) nil 4) <Q: 643> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87683)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(4 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87683)	getLiteral(false x(1))
		return
		endDefinition(87660)
lbl(87689)	unify(x(6) x(15))
lbl(87692)	definition(x(6) 87721 pid('TypeTests.procedure/5' 2 pos('./compiler/StaticAnalysis.oz' 261 20) nil 4) <Q: 644> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87715)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87715)	getLiteral(false x(1))
		return
		endDefinition(87692)
lbl(87721)	unify(x(6) x(16))
lbl(87724)	definition(x(6) 87753 pid('TypeTests.procedure/6' 2 pos('./compiler/StaticAnalysis.oz' 265 20) nil 4) <Q: 645> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87747)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87747)	getLiteral(false x(1))
		return
		endDefinition(87724)
lbl(87753)	unify(x(6) x(17))
lbl(87756)	definition(x(6) 87785 pid('TypeTests.procedure/>6' 2 pos('./compiler/StaticAnalysis.oz' 269 20) nil 4) <Q: 646> [g(34) g(42)])
		testBI('IsProcedure' [x(0)]#[x(2)] 87779)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('<' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87779)	getLiteral(false x(1))
		return
		endDefinition(87756)
lbl(87785)	unify(x(6) x(18))
		unify(x(5) g(12))
lbl(87791)	definition(x(6) 87857 pid('TypeTests.object' 2 pos('./compiler/StaticAnalysis.oz' 279 20) nil 6) <Q: 647> [y(4) y(5) y(7)])
		testBI('IsObject' [x(0)]#[x(2)] 87851)
		allocateL2
		move(x(1) y(0))
		createVariable(y(1))
		move(g(0) x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 87819)
		getLiteral(true y(1))
		branch(87840)
lbl(87819)	move(g(1) x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 87831)
		getLiteral(true y(1))
		branch(87840)
lbl(87831)	move(g(2) x(4))
		callBI('HasFeature' [x(0) x(4)]#[x(5)])
		unify(x(5) y(1))
lbl(87840)	move(y(1) x(0))
		callBI('Not' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(87851)	getLiteral(false x(1))
		return
		endDefinition(87791)
lbl(87857)	unify(x(6) y(14))
		unify(x(8) g(43))
lbl(87863)	definition(x(6) 87942 pid('TypeTests.fset' 2 pos('./compiler/StaticAnalysis.oz' 290 20) nil 4) <Q: 648> [y(1)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) value x(3) cache)
		inlineDot(x(3) is x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testBool(y(2) 87905 87929)
		getLiteral(true y(1))
		deAllocateL3
		return
lbl(87905)	move(g(0) x(0))
		inlineDot(x(0) var x(2) cache)
		inlineDot(x(2) is x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(87929)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(291)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(87863)
lbl(87942)	unify(x(6) x(9))
lbl(87945)	definition(x(6) 87966 pid('TypeTests.pair' 2 pos('./compiler/StaticAnalysis.oz' 296 20) nil 2) <Q: 649> nil)
		testRecord(x(0) '#' 2 87960)
lbl(87956)	getLiteral(true x(1))
		return
lbl(87960)	getLiteral(false x(1))
		return
		endDefinition(87945)
lbl(87966)	unify(x(6) x(10))
		putRecord(dt [any atomic det detOrKinded] y(1))
		setValue(x(3))
		setVariable(x(6))
		setVariable(y(5))
		setVariable(y(7))
lbl(87981)	definition(x(3) 88034 pid('DetTests.det' 2 pos('./compiler/StaticAnalysis.oz' 305 16) nil 3) <Q: 650> [y(6)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88027)
		testBI('IsObject' [x(0)]#[x(1)] 88022)
		move(g(0) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(88022)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(88027)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(87981)
lbl(88034)	unify(x(3) y(5))
lbl(88037)	definition(x(3) 88093 pid('DetTests.detOrKinded' 2 pos('./compiler/StaticAnalysis.oz' 312 2) nil 3) <Q: 651> [y(6)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88083)
		testBI('IsObject' [x(0)]#[x(1)] 88078)
		move(g(0) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(88078)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(88083)	callBI('IsKinded' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(88037)
lbl(88093)	unify(x(3) y(7))
lbl(88096)	definition(x(3) 88169 pid('DetTests.atomic' 2 pos('./compiler/StaticAnalysis.oz' 320 9) nil 4) <Q: 652> [y(6) y(4)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88162)
		testBI('IsObject' [x(0)]#[x(1)] 88157)
		createVariable(y(2))
		move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88137)
		getLiteral(true y(2))
		branch(88146)
lbl(88137)	move(g(1) x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) y(2))
lbl(88146)	move(y(2) x(0))
		callBI('Not' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(88157)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(88162)	getLiteral(false y(0))
		deAllocateL3
		return
		endDefinition(88096)
lbl(88169)	unify(x(3) x(6))
lbl(88172)	definition(x(3) 88210 pid('IsListNow' 2 pos('./compiler/StaticAnalysis.oz' 332 3) nil 3) <Q: 653> nil)
		testBI('IsDet' [x(0)]#[x(2)] 88204)
		testLiteral(x(0) nil 88190)
lbl(88186)	getLiteral(true x(1))
		return
lbl(88190)	testList(x(0) 88200)
lbl(88193)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 653> 5)
lbl(88200)	getLiteral(false x(1))
		return
lbl(88204)	getLiteral(unit x(1))
		return
		endDefinition(88172)
lbl(88210)	definition(x(3) 88266 pid('IsStringNow' 2 pos('./compiler/StaticAnalysis.oz' 342 3) nil 4) <Q: 654> nil)
		testBI('IsDet' [x(0)]#[x(2)] 88260)
		testLiteral(x(0) nil 88228)
lbl(88224)	getLiteral(true x(1))
		return
lbl(88228)	testList(x(0) 88256)
lbl(88231)	getVarVar(x(0) x(2))
		testBI('IsDet' [x(0)]#[x(3)] 88252)
		testBI('IsChar' [x(0)]#[x(3)] 88248)
		move(x(2) x(0))
		genFastCall(<Q: 654> 5)
lbl(88248)	getLiteral(false x(1))
		return
lbl(88252)	getLiteral(false x(1))
		return
lbl(88256)	getLiteral(false x(1))
		return
lbl(88260)	getLiteral(unit x(1))
		return
		endDefinition(88210)
lbl(88266)	definition(x(6) 88357 pid('IsVirtualStringNow' 2 pos('./compiler/StaticAnalysis.oz' 356 3) nil 3) <Q: 655> nil)
		testBI('IsDet' [x(0)]#[x(2)] 88351)
		allocateL3
		move(x(1) y(0))
		testBI('IsAtom' [x(0)]#[x(2)] 88289)
lbl(88284)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(88289)	testBI('IsInt' [x(0)]#[x(2)] 88295)
		branch(88284)
lbl(88295)	testBI('IsFloat' [x(0)]#[x(2)] 88301)
		branch(88284)
lbl(88301)	move(x(0) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 654> 4)
		testBool(y(2) 88316 88340)
		branch(88284)
lbl(88316)	move(y(1) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 88335)
lbl(88323)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 88335)
lbl(88330)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(88335)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(88340)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88351)	getLiteral(unit x(1))
		return
		endDefinition(88266)
lbl(88357)	definition(x(7) 88424 pid('Maybe' 2 pos('./compiler/StaticAnalysis.oz' 374 6) nil 3) <Q: 656> [y(6)])
lbl(88363)	definition(x(2) 88418 pid('' 2 pos('./compiler/StaticAnalysis.oz' 375 2) nil 3) unit [g(0) x(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88411)
		testBI('IsObject' [x(0)]#[x(1)] 88402)
lbl(88390)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88402)
lbl(88397)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(88402)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailCall(g(1) 2)
lbl(88411)	getLiteral(true y(0))
		deAllocateL2
		return
		endDefinition(88363)
lbl(88418)	unify(x(2) x(1))
		return
		endDefinition(88357)
lbl(88424)	createVariable(y(17))
lbl(88426)	definition(x(9) 88534 pid('MaybePairOf' 4 pos('./compiler/StaticAnalysis.oz' 387 6) nil 4) <Q: 657> [y(6) y(17)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88527)
		testBI('IsObject' [x(0)]#[x(1)] 88473)
lbl(88461)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88473)
lbl(88468)	getLiteral(true y(2))
		deAllocateL5
		return
lbl(88473)	testRecord(y(3) '#' 2 88522)
lbl(88478)	getVarVar(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) false '' false 3) 0)
		testBool(y(4) 88506 88511)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(1) false '' true 3) 0)
lbl(88506)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(88511)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88522)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(88527)	getLiteral(true y(2))
		deAllocateL5
		return
		endDefinition(88426)
lbl(88534)	definition(x(10) 88642 pid('MaybeListOf' 3 pos('./compiler/StaticAnalysis.oz' 401 6) nil 3) <Q: 658> [y(6) y(17)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88635)
		testBI('IsObject' [x(0)]#[x(1)] 88578)
lbl(88566)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88578)
lbl(88573)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88578)	match(y(2) ht(88630 [onScalar(nil 88581) onRecord('|' 2 88586)]))
lbl(88581)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88586)	getVarVar(x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genCall(gci(g(1) false '' false 3) 0)
		testBool(y(3) 88614 88619)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 658> 7)
lbl(88614)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88619)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(411)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88630)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88635)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(88534)
lbl(88642)	definition(x(11) 88662 pid('MaybeList' 2 pos('./compiler/StaticAnalysis.oz' 416 6) nil 3) <Q: 659> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(value x(0))
		genFastCall(<Q: 658> 7)
		endDefinition(88642)
lbl(88662)	definition(x(12) 88682 pid('MaybeString' 2 pos('./compiler/StaticAnalysis.oz' 419 6) nil 3) <Q: 660> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(char x(0))
		genFastCall(<Q: 658> 7)
		endDefinition(88662)
lbl(88682)	createVariable(x(13))
lbl(88684)	definition(x(14) 88811 pid('MaybeVirtualString' 2 pos('./compiler/StaticAnalysis.oz' 422 6) nil 3) <Q: 661> [y(6) g(44) x(13)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88804)
		testBI('IsObject' [x(0)]#[x(1)] 88725)
lbl(88713)	move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88725)
lbl(88720)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88725)	move(y(2) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 88737)
lbl(88732)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88737)	testBI('IsInt' [x(0)]#[x(1)] 88743)
		branch(88732)
lbl(88743)	testBI('IsFloat' [x(0)]#[x(1)] 88749)
		branch(88732)
lbl(88749)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		testBool(y(3) 88764 88793)
		branch(88732)
lbl(88764)	move(y(2) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 88788)
lbl(88771)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 88788)
lbl(88778)	move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 165> 7)
lbl(88788)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88793)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(429)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88804)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(88684)
lbl(88811)	unify(x(14) x(13))
		putRecord(dtt [list listOf pairOf string virtualString] y(18))
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
		setValue(x(12))
		setValue(x(13))
		moveMoveXYXY(x(0) y(19) x(1) y(20))
		moveMoveXYXY(x(3) y(21) x(6) y(22))
		move(x(4) x(0))
		move(x(7) x(1))
		createVariableMove(y(23) x(2))
		genFastCall(<P: 161> 6)
		moveMoveYXYX(y(23) x(0) y(18) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
lbl(88858)	definition(x(0) 88941 pid('DetTypeTest' 3 pos('./compiler/StaticAnalysis.oz' 453 6) nil 6) <Q: 662> [x(2)])
		callBI('Width' [x(0)]#[x(3)])
		testNumber(x(3) 0 88889)
		callBI('Label' [x(0)]#[x(3)])
		move(g(0) x(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(4) 2)
lbl(88889)	match(x(0) ht(88930 [onRecord(list 1 88892) onRecord(pair 2 88906)]))
lbl(88892)	getVariable(x(0))
		move(g(0) x(3))
		inlineDot(x(3) listOf x(4) cache)
		tailCall(x(4) 3)
lbl(88906)	getVarVar(x(0) x(4))
		move(g(0) x(3))
		inlineDot(x(3) pairOf x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		tailCall(x(5) 4)
lbl(88930)	putRecord(illegalTypeDeclaration 1 x(1))
		setValue(x(0))
		callBI('Exception.raise' [x(1)]#nil)
		endDefinition(88858)
lbl(88941)	unify(x(0) y(17))
		putRecord(doCheckType 2 x(0))
		setConstant(det)
		setValue(g(18))
		putRecord(doCheckType 2 x(1))
		setConstant(det)
		setValue(g(19))
		putRecord(doCheckType 2 x(3))
		setConstant(det)
		setValue(g(20))
		putRecord(doCheckType 2 x(4))
		setConstant(det)
		setValue(g(21))
		putRecord(doCheckType 2 x(5))
		setConstant(det)
		setValue(g(22))
		putRecord(doCheckType 2 x(6))
		setConstant(det)
		setValue(g(23))
		putRecord(doCheckType 2 x(7))
		setConstant(det)
		setValue(g(46))
		putRecord(doCheckType 2 x(8))
		setConstant(det)
		setValue(g(25))
		putRecord(doCheckType 2 x(9))
		setConstant(det)
		setValue(g(26))
		putRecord(doCheckType 2 x(10))
		setConstant(det)
		setValue(g(27))
		putRecord(doCheckType 2 x(11))
		setConstant(rec)
		setValue(g(28))
		putRecord(doCheckType 2 x(12))
		setConstant(det)
		setValue(g(29))
		putRecord(doCheckType 2 x(13))
		setConstant(det)
		setValue(g(30))
		putRecord(doCheckType 2 x(14))
		setConstant(det)
		setValue(g(31))
		putRecord(doCheckType 2 x(15))
		setConstant(det)
		setValue(g(32))
		putRecord(doCheckType 2 x(16))
		setConstant(det)
		setValue(g(47))
		putRecord(doCheckType 2 x(17))
		setConstant(det)
		setValue(g(33))
		putRecord(doCheckType 2 x(18))
		setConstant(det)
		setValue(g(34))
		putRecord(doCheckType 2 x(19))
		setConstant(det)
		setValue(g(35))
		putRecord(doCheckType 2 x(20))
		setConstant(kind)
		setValue(g(36))
		putRecord(doCheckType 2 x(21))
		setConstant(det)
		setValue(g(37))
		putRecord(doCheckType 2 x(22))
		setConstant(rec)
		setValue(y(21))
		putRecord(doCheckType 2 x(23))
		setConstant(det)
		setValue(g(40))
		putRecord(doCheckType 2 x(24))
		setConstant(det)
		setValue(g(41))
		putRecord(doCheckType 2 x(25))
		setConstant(rec)
		setValue(y(22))
		putRecord(bi [',' '.' '<-' '=' '@' 'And' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsInt' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Space.new' 'Width' '^' builtin] y(17))
		setConstant(doComma)
		setConstant(doDot)
		setConstant(doAssignAccess)
		setConstant(doEq)
		setConstant(doAssignAccess)
		setConstant(doAnd)
		setValue(x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setConstant(doLabel)
		setConstant(doNew)
		setConstant(doNewArray)
		setConstant(doNewCell)
		setConstant(doNewChunk)
		setConstant(doNewDictionary)
		setConstant(doNewLock)
		setConstant(doNewName)
		setConstant(doNewPort)
		setConstant(doNewUniqueName)
		setConstant(doNot)
		setConstant(doOr)
		setConstant(doProcedureArity)
		setConstant(doNewSpace)
		setConstant(doWidth)
		setConstant(doHat)
		setConstant(doBuiltin)
lbl(89244)	definition(x(7) 89600 pid('GetReachable' 2 pos('./compiler/StaticAnalysis.oz' 526 3) nil 2) <Q: 663> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getType y(0) 1 cache)
		testLiteral(y(2) unit 89339)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 618> 4)
		testBool(y(4) 89301 89328)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(89301)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(89328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(538)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(89339)	createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(4) 89427 89587)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 618> 4)
		testBool(y(4) 89382 89416)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 626> 5)
lbl(89382)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 626> 5)
lbl(89416)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(552)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(89427)	createVariableMove(y(4) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(4) 89515 89576)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 618> 4)
		testBool(y(4) 89470 89504)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 626> 5)
lbl(89470)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 626> 5)
lbl(89504)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(566)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(89515)	move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 618> 4)
		testBool(y(4) 89538 89565)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(89538)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(89565)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(577)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(89576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(560)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(89587)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89244)
lbl(89600)	definition(x(8) 89620 pid('AppendReachable' 3 pos('./compiler/StaticAnalysis.oz' 590 3) nil 4) <Q: 664> nil)
		move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(89600)
lbl(89620)	definition(x(9) 89724 pid('InstallEntry' 1 pos('./compiler/StaticAnalysis.oz' 594 3) nil 3) <Q: 665> nil)
		allocateL3
		inlineDot(x(0) var x(1) cache)
		inlineDot(x(0) last x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		sendMsg(setLastValue y(1) 1 cache)
		move(y(0) x(0))
		putConstant(data x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 89680)
		inlineDot(x(0) data x(1) cache)
		move(x(1) x(0))
		sendMsg('setValue' y(2) 1 cache)
lbl(89680)	move(y(0) x(0))
		putConstant(type x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 89709 89711)
		inlineDot(x(0) type x(0) cache)
		move(y(1) x(1))
		deAllocateL3
		tailSendMsg(setType x(1) 1 cache)
lbl(89709)	deAllocateL3
		return
lbl(89711)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(607)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89620)
lbl(89724)	definition(x(10) 89761 pid('GetGlobalEnv' 2 pos('./compiler/StaticAnalysis.oz' 612 3) nil 4) <Q: 666> [x(8) x(7)])
		allocateL2
		move(x(1) y(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(89724)
lbl(89761)	definition(x(7) 89775 pid('InstallGlobalEnv' 1 pos('./compiler/StaticAnalysis.oz' 623 3) nil 2) <Q: 667> [x(9)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(89761)
lbl(89775)	definition(x(7) 89901 pid('ValueToErrorLine' 3 pos('./compiler/StaticAnalysis.oz' 636 3) nil 5) <Q: 668> nil)
		testLiteral(x(1) unit 89789)
		getLiteral(nil x(2))
		return
lbl(89789)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 629> 4)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(4) 89867 89888)
		getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(pn 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(3))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(89867)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord(oz 1 x(1))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(89888)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(644)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89775)
lbl(89901)	definition(x(7) 90199 pid('IssueTypeError' 6 pos('./compiler/StaticAnalysis.oz' 654 3) nil 8) <Q: 669> [g(49)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getErrorMsg y(4) 1 cache)
		createVariableMove(y(7) x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getUnifier y(4) 2 cache)
		putRecord(hint [l m] x(1))
		setConstant('First type')
		setVariable(x(2))
		putRecord(hint [l m] x(4))
		setConstant('Second type')
		setVariable(y(10))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(0))
		setValue(x(1))
		setValue(x(3))
		putList(x(7))
		setVariable(y(13))
		setConstant(nil)
		putList(x(6))
		setVariable(y(12))
		setValue(x(7))
		putList(x(5))
		setVariable(y(11))
		setValue(x(6))
		putList(y(9))
		setValue(x(0))
		setValue(x(5))
		move(y(0) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 682> 4)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		genFastCall(<Q: 682> 4)
		moveMoveYXYX(y(2) x(1) y(11) x(2))
		putConstant('First value' x(0))
		genFastCall(<Q: 668> 6)
		moveMoveYXYX(y(3) x(1) y(12) x(2))
		putConstant('Second value' x(0))
		genFastCall(<Q: 668> 6)
		testLiteral(y(7) unit 90045)
lbl(90040)	getLiteral(nil y(13))
		branch(90104)
lbl(90045)	testLiteral(y(8) unit 90051)
lbl(90049)	branch(90040)
lbl(90051)	getList(y(13))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Original assertion')
		unifyVariable(x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(oz 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyVariable(y(0))
		move(y(7) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 629> 4)
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		genFastCall(<Q: 629> 4)
lbl(90104)	move(y(9) x(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(4) 1 cache)
		testBool(y(1) 90159 90186)
		move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('type error' x(2))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(90159)	move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('static analysis warning' x(2))
		deAllocateL
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(90186)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(679)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89901)
lbl(90199)	definition(x(7) 90277 pid('UnifyTypesOf' 5 pos('./compiler/StaticAnalysis.oz' 692 3) nil 6) <Q: 670> [g(50)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getType y(0) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getType y(1) 1 cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(2)] 90264)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		genFastCall(<Q: 669> 12)
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(90264)	callBI('BitArray.and' [x(0) x(1)]#nil)
		callBI('BitArray.and' [x(1) x(0)]#nil)
		getLiteral(true y(4))
		deAllocateL7
		return
		endDefinition(90199)
lbl(90277)	definition(x(7) 90300 pid('ConstrainTypes' 3 pos('./compiler/StaticAnalysis.oz' 712 3) nil 4) <Q: 671> [g(50)])
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(3)] 90291)
		getLiteral(false x(2))
		return
lbl(90291)	callBI('BitArray.and' [x(0) x(1)]#nil)
		getLiteral(true x(2))
		return
		endDefinition(90277)
lbl(90300)	definition(x(7) 90594 pid('IssueUnificationFailure' 3 pos('./compiler/StaticAnalysis.oz' 729 3) nil 5) <Q: 672> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getErrorMsg y(0) 1 cache)
		createVariableMove(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getUnifier y(0) 2 cache)
		putRecord(hint [l m] y(7))
		setConstant('Offending expression in')
		setVariable(x(1))
		move(y(1) x(0))
		genFastCall(<Q: 617> 4)
		createVariable(y(8))
		testLiteral(y(5) unit 90370)
lbl(90365)	unify(y(8) y(2))
		branch(90438)
lbl(90370)	testLiteral(y(6) unit 90376)
lbl(90374)	branch(90365)
lbl(90376)	move(y(5) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 629> 4)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(3))
		setValue(y(9))
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 3 x(2))
		setValue(x(3))
		setConstant(' = ')
		setValue(x(4))
		putRecord(hint [l m] x(0))
		setConstant('Original assertion')
		setValue(x(2))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 21> 6)
lbl(90438)	createVariable(y(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 90454)
lbl(90449)	unify(y(2) y(8))
		branch(90474)
lbl(90454)	testLiteral(y(1) unit 90460)
		branch(90449)
lbl(90460)	putList(x(1))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(8) x(0) y(2) x(2))
		genFastCall(<P: 21> 6)
lbl(90474)	createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(0) 1 cache)
		testBool(y(1) 90534 90581)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 90510)
lbl(90505)	getLiteral('unification error in needed statement' y(1))
		branch(90513)
lbl(90510)	unify(y(1) y(4))
lbl(90513)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(90534)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 90557)
lbl(90552)	getLiteral('unification error in possibly unneeded statement' y(1))
		branch(90560)
lbl(90557)	unify(y(1) y(4))
lbl(90560)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(90581)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(753)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(90300)
lbl(90594)	definition(x(7) 90878 pid('MakeDummyProcedure' 3 pos('./compiler/StaticAnalysis.oz' 773 3) nil 3) <Q: 673> nil)
		match(x(0) ht(90875 [onScalar(0 90603) onScalar(1 90616) onScalar(2 90629) onScalar(3 90642) onScalar(4 90655) onScalar(5 90668) onScalar(6 90681) onScalar(7 90694) onScalar(8 90707) onScalar(9 90720) onScalar(10 90733) onScalar(11 90746) onScalar(12 90759) onScalar(13 90772) onScalar(14 90785) onScalar(15 90798) onScalar(16 90811) onScalar(17 90824) onScalar(18 90837) onScalar(19 90850) onScalar(20 90863)]))
lbl(90603)	definition(x(0) 90612 pid('' 0 pos('./compiler/StaticAnalysis.oz' 775 17) nil 0) unit nil)
		return
		endDefinition(90603)
lbl(90612)	unify(x(0) x(2))
		return
lbl(90616)	definition(x(0) 90625 pid('' 1 pos('./compiler/StaticAnalysis.oz' 776 17) nil 1) unit nil)
		return
		endDefinition(90616)
lbl(90625)	unify(x(0) x(2))
		return
lbl(90629)	definition(x(0) 90638 pid('' 2 pos('./compiler/StaticAnalysis.oz' 777 17) nil 2) unit nil)
		return
		endDefinition(90629)
lbl(90638)	unify(x(0) x(2))
		return
lbl(90642)	definition(x(0) 90651 pid('' 3 pos('./compiler/StaticAnalysis.oz' 778 17) nil 3) unit nil)
		return
		endDefinition(90642)
lbl(90651)	unify(x(0) x(2))
		return
lbl(90655)	definition(x(0) 90664 pid('' 4 pos('./compiler/StaticAnalysis.oz' 779 17) nil 4) unit nil)
		return
		endDefinition(90655)
lbl(90664)	unify(x(0) x(2))
		return
lbl(90668)	definition(x(0) 90677 pid('' 5 pos('./compiler/StaticAnalysis.oz' 780 17) nil 5) unit nil)
		return
		endDefinition(90668)
lbl(90677)	unify(x(0) x(2))
		return
lbl(90681)	definition(x(0) 90690 pid('' 6 pos('./compiler/StaticAnalysis.oz' 781 17) nil 6) unit nil)
		return
		endDefinition(90681)
lbl(90690)	unify(x(0) x(2))
		return
lbl(90694)	definition(x(0) 90703 pid('' 7 pos('./compiler/StaticAnalysis.oz' 782 17) nil 7) unit nil)
		return
		endDefinition(90694)
lbl(90703)	unify(x(0) x(2))
		return
lbl(90707)	definition(x(0) 90716 pid('' 8 pos('./compiler/StaticAnalysis.oz' 783 17) nil 8) unit nil)
		return
		endDefinition(90707)
lbl(90716)	unify(x(0) x(2))
		return
lbl(90720)	definition(x(0) 90729 pid('' 9 pos('./compiler/StaticAnalysis.oz' 784 17) nil 9) unit nil)
		return
		endDefinition(90720)
lbl(90729)	unify(x(0) x(2))
		return
lbl(90733)	definition(x(0) 90742 pid('' 10 pos('./compiler/StaticAnalysis.oz' 785 17) nil 10) unit nil)
		return
		endDefinition(90733)
lbl(90742)	unify(x(0) x(2))
		return
lbl(90746)	definition(x(0) 90755 pid('' 11 pos('./compiler/StaticAnalysis.oz' 786 17) nil 11) unit nil)
		return
		endDefinition(90746)
lbl(90755)	unify(x(0) x(2))
		return
lbl(90759)	definition(x(0) 90768 pid('' 12 pos('./compiler/StaticAnalysis.oz' 787 17) nil 12) unit nil)
		return
		endDefinition(90759)
lbl(90768)	unify(x(0) x(2))
		return
lbl(90772)	definition(x(0) 90781 pid('' 13 pos('./compiler/StaticAnalysis.oz' 788 17) nil 13) unit nil)
		return
		endDefinition(90772)
lbl(90781)	unify(x(0) x(2))
		return
lbl(90785)	definition(x(0) 90794 pid('' 14 pos('./compiler/StaticAnalysis.oz' 789 17) nil 14) unit nil)
		return
		endDefinition(90785)
lbl(90794)	unify(x(0) x(2))
		return
lbl(90798)	definition(x(0) 90807 pid('' 15 pos('./compiler/StaticAnalysis.oz' 790 17) nil 15) unit nil)
		return
		endDefinition(90798)
lbl(90807)	unify(x(0) x(2))
		return
lbl(90811)	definition(x(0) 90820 pid('' 16 pos('./compiler/StaticAnalysis.oz' 791 17) nil 16) unit nil)
		return
		endDefinition(90811)
lbl(90820)	unify(x(0) x(2))
		return
lbl(90824)	definition(x(0) 90833 pid('' 17 pos('./compiler/StaticAnalysis.oz' 792 17) nil 17) unit nil)
		return
		endDefinition(90824)
lbl(90833)	unify(x(0) x(2))
		return
lbl(90837)	definition(x(0) 90846 pid('' 18 pos('./compiler/StaticAnalysis.oz' 793 17) nil 18) unit nil)
		return
		endDefinition(90837)
lbl(90846)	unify(x(0) x(2))
		return
lbl(90850)	definition(x(0) 90859 pid('' 19 pos('./compiler/StaticAnalysis.oz' 794 17) nil 19) unit nil)
		return
		endDefinition(90850)
lbl(90859)	unify(x(0) x(2))
		return
lbl(90863)	definition(x(0) 90872 pid('' 20 pos('./compiler/StaticAnalysis.oz' 795 17) nil 20) unit nil)
		return
		endDefinition(90863)
lbl(90872)	unify(x(0) x(2))
lbl(90875)	return
		endDefinition(90594)
lbl(90878)	definition(x(7) 90940 pid('MakeDummyObject' 2 pos('./compiler/StaticAnalysis.oz' 801 3) nil 8) <Q: 674> [g(51) g(52)])
		allocateL3
		putList(x(7))
		setValue(g(1))
		setConstant(nil)
		move(x(1) y(0))
		move(x(0) x(5))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		createVariableMove(y(1) x(6))
		genFastCall(<P: 229> 14)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		sendMsg(noop y(2) 0 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90878)
lbl(90940)	definition(x(7) 90972 pid('MakeDummyClass' 2 pos('./compiler/StaticAnalysis.oz' 805 3) nil 7) <Q: 675> [g(51)])
		move(x(0) x(5))
		move(x(1) x(6))
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		genFastCall(<P: 229> 15)
		endDefinition(90940)
lbl(90972)	definition(x(7) 91098 pid('ListToVS' 5 pos('./compiler/StaticAnalysis.oz' 812 3) nil 7) <Q: 676> nil)
		testLiteral(x(0) nil 90991)
lbl(90982)	getRecord('#' 2 x(4))
		unifyValue(x(1))
		unifyValue(x(3))
		return
lbl(90991)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testList(y(0) 91027)
lbl(91008)	getVarVar(x(5) x(6))
		testLiteral(x(6) nil 91027)
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValue(x(5))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(91027)	testList(y(0) 91083)
lbl(91030)	getVarVar(x(0) x(1))
		shallowGuard(91083)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(91041)	shallowThen
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValVar(x(0) x(3))
lbl(91051)	definition(x(4) 91070 pid('' 3 pos('./compiler/StaticAnalysis.oz' 821 3) nil 3) unit [y(2)])
		getRecord('#' 3 x(2))
		unifyValue(g(0))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(91051)
lbl(91070)	move(x(1) x(0))
		move(x(4) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 32> 9)
lbl(91083)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(823)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(90972)
lbl(91098)	definition(x(7) 91121 pid('SetToVS' 2 pos('./compiler/StaticAnalysis.oz' 826 3) nil 5) <Q: 677> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(', ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 676> 11)
		endDefinition(91098)
lbl(91121)	definition(x(7) 91144 pid('ProdToVS' 2 pos('./compiler/StaticAnalysis.oz' 830 3) nil 5) <Q: 678> nil)
		move(x(1) x(4))
		putConstant('' x(1))
		putConstant(' x ' x(2))
		putConstant('' x(3))
		genFastCall(<Q: 676> 11)
		endDefinition(91121)
lbl(91144)	definition(x(7) 91167 pid('ApplToVS' 2 pos('./compiler/StaticAnalysis.oz' 834 3) nil 5) <Q: 679> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(' ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 676> 11)
		endDefinition(91144)
lbl(91167)	definition(x(7) 91213 pid('FormatArity' 2 pos('./compiler/StaticAnalysis.oz' 838 3) nil 5) <Q: 680> nil)
		callBI('Arity' [x(0)]#[x(3)])
lbl(91176)	definition(x(4) 91199 pid('' 2 pos('./compiler/StaticAnalysis.oz' 840 7) nil 3) unit nil)
		testBI('IsLiteral' [x(0)]#[x(2)] 91193)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
lbl(91193)	unify(x(1) x(0))
		return
		endDefinition(91176)
lbl(91199)	move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(91167)
lbl(91213)	definition(x(7) 91256 pid('Ozify' 2 pos('./compiler/StaticAnalysis.oz' 843 3) nil 4) <Q: 681> nil)
lbl(91219)	definition(x(3) 91245 pid('' 2 pos('./compiler/StaticAnalysis.oz' 845 7) nil 4) unit nil)
		move(x(0) x(2))
		testBI('IsVirtualString' [x(2)]#[x(3)] 91236)
		unify(x(1) x(0))
		return
lbl(91236)	getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(91219)
lbl(91245)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(91213)
lbl(91256)	definition(x(7) 91306 pid('TypeToVS' 2 pos('./compiler/StaticAnalysis.oz' 848 3) nil 5) <Q: 682> [y(12)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) decode x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		putConstant('' x(1))
		putConstant(' ++ ' x(2))
		putConstant('' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 676> 10)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(91256)
lbl(91306)	definition(x(7) 91403 pid('AllUpToAux' 5 pos('./compiler/StaticAnalysis.oz' 863 6) nil 5) <Q: 683> nil)
		match(x(0) ht(91388 [onScalar(nil 91315) onRecord('|' 2 91322)]))
lbl(91315)	unify(x(3) x(2))
		getLiteral(true x(4))
		return
lbl(91322)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 91369 91377)
		move(y(3) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		deAllocateL7
		genFastCall(<Q: 683> 11)
lbl(91369)	unify(y(4) y(0))
		getLiteral(false y(5))
		deAllocateL7
		return
lbl(91377)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(869)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91388)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(872)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91306)
lbl(91403)	definition(x(7) 91423 pid('AllUpTo' 4 pos('./compiler/StaticAnalysis.oz' 875 6) nil 5) <Q: 684> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 683> 11)
		endDefinition(91403)
lbl(91423)	definition(x(7) 91517 pid('SomeUpToNAux' 5 pos('./compiler/StaticAnalysis.oz' 886 6) nil 5) <Q: 685> nil)
		match(x(0) ht(91502 [onScalar(nil 91432) onRecord('|' 2 91439)]))
lbl(91432)	unify(x(3) x(2))
		getLiteral(false x(4))
		return
lbl(91439)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariableMove(y(5) x(1))
		call(y(1) 2)
		testBool(y(5) 91471 91491)
		unify(y(3) y(2))
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(91471)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<Q: 685> 11)
lbl(91491)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(892)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91502)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(895)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91423)
lbl(91517)	definition(x(7) 91537 pid('SomeUpToN' 4 pos('./compiler/StaticAnalysis.oz' 898 6) nil 5) <Q: 686> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 685> 11)
		endDefinition(91517)
lbl(91537)	definition(x(7) 91605 pid('AllDistinct' 2 pos('./compiler/StaticAnalysis.oz' 903 3) nil 3) <Q: 687> nil)
		testLiteral(x(0) nil 91551)
lbl(91547)	getLiteral(true x(1))
		return
lbl(91551)	testList(x(0) 91590)
lbl(91554)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 91585)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 687> 5)
lbl(91585)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(91590)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(907)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91537)
lbl(91605)	definition(x(7) 91656 pid('Add' 3 pos('./compiler/StaticAnalysis.oz' 910 3) nil 3) <Q: 688> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 91635 91643)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(91635)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(91643)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(911)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91605)
lbl(91656)	definition(x(7) 91747 pid('Union' 3 pos('./compiler/StaticAnalysis.oz' 915 3) nil 3) <Q: 689> nil)
		testLiteral(x(0) nil 91670)
lbl(91666)	unify(x(2) x(1))
		return
lbl(91670)	testList(x(0) 91732)
lbl(91673)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 91707 91721)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 689> 7)
lbl(91707)	getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 689> 7)
lbl(91721)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(918)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91732)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(922)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91656)
lbl(91747)	definition(x(8) 91791 pid('UnionAll' 2 pos('./compiler/StaticAnalysis.oz' 925 3) nil 4) <Q: 690> [x(7)])
		testLiteral(x(0) nil 91761)
lbl(91757)	getLiteral(nil x(1))
		return
lbl(91761)	testList(x(0) 91776)
lbl(91764)	getVarVar(x(2) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<P: 32> 9)
lbl(91776)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(928)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91747)
lbl(91791)	definition(x(7) 91883 pid('PLDotEQ' 3 pos('./compiler/StaticAnalysis.oz' 934 3) nil 5) <Q: 691> [y(2)])
		match(x(1) ht(91868 [onScalar(nil 91800) onRecord('|' 2 91804)]))
lbl(91800)	getLiteral(unit x(2))
		return
lbl(91804)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(g(0) x(3))
		inlineDot(x(3) eq x(4) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		call(x(4) 3)
		testBool(y(4) 91845 91857)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(91845)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 691> 7)
lbl(91857)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(940)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91868)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(947)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91791)
lbl(91883)	definition(x(7) 91988 pid('ApproxInheritance' 3 pos('./compiler/StaticAnalysis.oz' 962 3) nil 5) <Q: 692> nil)
		allocateL3
lbl(91890)	definition(x(4) 91956 pid('' 3 pos('./compiler/StaticAnalysis.oz' 965 1) nil 6) unit nil)
		callBI('Arity' [x(1)]#[x(4)])
lbl(91899)	definition(x(5) 91939 pid('' 3 pos('./compiler/StaticAnalysis.oz' 967 5) nil 6) unit [x(1)])
		testBI('HasFeature' [x(0) x(1)]#[x(3)] 91924)
		putRecord('#' 2 x(3))
		setConstant(nil)
		setConstant(unit)
		callBI('AdjoinAt' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
lbl(91924)	move(g(0) x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		callBI('AdjoinAt' [x(0) x(1) x(4)]#[x(5)])
		unify(x(5) x(2))
		return
		endDefinition(91899)
lbl(91939)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(91890)
lbl(91956)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(m x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(91883)
lbl(91988)	move(y(11) x(0))
		inlineDot(x(0) newNamedName x(7) cache)
		inlineDot(x(0) newCopyableName x(8) cache)
		inlineDot(x(0) newPredicateRef x(9) cache)
		inlineDot(x(0) newCopyablePredicateRef x(10) cache)
		putConstant('NewUniqueName' x(11))
		putConstant(2 x(12))
		callBI(builtin [x(11) x(12)]#[x(13)])
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord errorMsg needed savedToCopy 'self' toCopy top unifierLeft unifierRight] x(11))
		setConstant(unit)
		setConstant(unit)
		setConstant(true)
		setConstant(nil)
		setConstant(nil)
		setConstant(unit)
		setConstant(true)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [rep switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(92060)	definition(x(12) 92163 pid('Control,init/fast' 2 pos('./compiler/StaticAnalysis.oz' 1006 6) nil 4) <Q: 693> nil)
		getSelf(x(2))
		inlineDot(x(2) rep x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) switches x(2) cache)
		unify(x(2) x(1))
		putConstant(nil x(0))
		inlineAssign('self' x(0) cache)
		putConstant(unit x(0))
		inlineAssign(coord x(0) cache)
		putConstant(true x(0))
		inlineAssign(top x(0) cache)
		putConstant(true x(0))
		inlineAssign(needed x(0) cache)
		putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		putConstant(nil x(0))
		inlineAssign(savedToCopy x(0) cache)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(92060)
lbl(92163)	definition(x(13) 92198 pid('Control,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 1006 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 693> 5)
		endDefinition(92163)
lbl(92198)	putRecord('#' [1 2 fast] x(14))
		setConstant(init)
		setValue(x(13))
		setValue(x(12))
lbl(92208)	definition(x(12) 92233 pid('Control,pushSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 1020 6) nil 3) <Q: 694> nil)
		inlineAt('self' x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign('self' x(2) cache)
		return
		endDefinition(92208)
lbl(92233)	definition(x(13) 92259 pid('Control,pushSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 1020 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 694> 3)
		endDefinition(92233)
lbl(92259)	putRecord('#' [1 2 fast] x(15))
		setConstant(pushSelf)
		setValue(x(13))
		setValue(x(12))
lbl(92269)	definition(x(12) 92301 pid('Control,popSelf/fast' 0 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 1) <Q: 695> nil)
		inlineAt('self' x(0) cache)
		testList(x(0) 92293)
lbl(92283)	getVoid(1)
		getVariable(x(0))
		inlineAssign('self' x(0) cache)
		return
lbl(92293)	putConstant(popEmptyStack x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(92269)
lbl(92301)	definition(x(13) 92315 pid('Control,popSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 1) unit nil)
		getLiteral(popSelf x(0))
		genFastCall(<Q: 695> 1)
		endDefinition(92301)
lbl(92315)	putRecord('#' [1 2 fast] x(16))
		setConstant(popSelf)
		setValue(x(13))
		setValue(x(12))
lbl(92325)	definition(x(12) 92364 pid('Control,getSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 1030 6) nil 2) <Q: 696> nil)
		inlineAt('self' x(1) cache)
		match(x(1) ht(92349 [onScalar(nil 92339) onRecord('|' 2 92343)]))
lbl(92339)	getLiteral(unit x(0))
		return
lbl(92343)	getVariable(x(1))
		unify(x(0) x(1))
		return
lbl(92349)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1033)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(92325)
lbl(92364)	definition(x(13) 92390 pid('Control,getSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 1030 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 696> 3)
		endDefinition(92364)
lbl(92390)	putRecord('#' [1 2 fast] x(17))
		setConstant('getSelf')
		setValue(x(13))
		setValue(x(12))
lbl(92400)	definition(x(12) 92414 pid('Control,setCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1036 6) nil 1) <Q: 697> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(92400)
lbl(92414)	definition(x(13) 92440 pid('Control,setCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1036 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 697> 3)
		endDefinition(92414)
lbl(92440)	putRecord('#' [1 2 fast] x(18))
		setConstant(setCoord)
		setValue(x(13))
		setValue(x(12))
lbl(92450)	definition(x(12) 92467 pid('Control,getCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1039 6) nil 2) <Q: 698> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92450)
lbl(92467)	definition(x(13) 92493 pid('Control,getCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1039 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 698> 3)
		endDefinition(92467)
lbl(92493)	putRecord('#' [1 2 fast] x(19))
		setConstant(getCoord)
		setValue(x(13))
		setValue(x(12))
lbl(92503)	definition(x(12) 92520 pid('Control,getTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1043 6) nil 2) <Q: 699> nil)
		inlineAt(top x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92503)
lbl(92520)	definition(x(13) 92546 pid('Control,getTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1043 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 699> 3)
		endDefinition(92520)
lbl(92546)	putRecord('#' [1 2 fast] x(20))
		setConstant(getTop)
		setValue(x(13))
		setValue(x(12))
lbl(92556)	definition(x(12) 92570 pid('Control,setTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1046 6) nil 1) <Q: 700> nil)
		inlineAssign(top x(0) cache)
		return
		endDefinition(92556)
lbl(92570)	definition(x(13) 92596 pid('Control,setTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1046 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 700> 3)
		endDefinition(92570)
lbl(92596)	putRecord('#' [1 2 fast] x(21))
		setConstant(setTop)
		setValue(x(13))
		setValue(x(12))
lbl(92606)	definition(x(12) 92623 pid('Control,getNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1050 6) nil 2) <Q: 701> nil)
		inlineAt(needed x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92606)
lbl(92623)	definition(x(13) 92649 pid('Control,getNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1050 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 701> 3)
		endDefinition(92623)
lbl(92649)	putRecord('#' [1 2 fast] x(22))
		setConstant(getNeeded)
		setValue(x(13))
		setValue(x(12))
lbl(92659)	definition(x(12) 92673 pid('Control,setNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 1) <Q: 702> nil)
		inlineAssign(needed x(0) cache)
		return
		endDefinition(92659)
lbl(92673)	definition(x(13) 92699 pid('Control,setNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 702> 3)
		endDefinition(92673)
lbl(92699)	putRecord('#' [1 2 fast] x(23))
		setConstant(setNeeded)
		setValue(x(13))
		setValue(x(12))
lbl(92709)	definition(x(12) 92734 pid('Control,getTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1057 6) nil 3) <Q: 703> nil)
		inlineAt(top x(2) cache)
		unify(x(2) x(0))
		inlineAt(needed x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92709)
lbl(92734)	definition(x(13) 92769 pid('Control,getTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1057 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 703> 5)
		endDefinition(92734)
lbl(92769)	putRecord('#' [1 2 fast] x(24))
		setConstant(getTopNeeded)
		setValue(x(13))
		setValue(x(12))
		createVariable(y(11))
lbl(92781)	definition(x(12) 92803 pid('Control,setTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 2) <Q: 704> [y(11)])
		allocateL1
		move(x(1) y(0))
		genCall(gci(g(0) true setTop false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setNeeded true 1) 0)
		endDefinition(92781)
lbl(92803)	definition(x(13) 92838 pid('Control,setTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 704> 5)
		endDefinition(92803)
lbl(92838)	putRecord('#' [1 2 fast] x(25))
		setConstant(setTopNeeded)
		setValue(x(13))
		setValue(x(12))
lbl(92848)	definition(x(12) 92865 pid('Control,notTopNotNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1065 6) nil 2) <Q: 705> [y(11) g(53)])
		move(g(1) x(0))
		move(g(1) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92848)
lbl(92865)	definition(x(13) 92879 pid('Control,notTopNotNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1065 6) nil 1) unit nil)
		getLiteral(notTopNotNeeded x(0))
		genFastCall(<Q: 705> 1)
		endDefinition(92865)
lbl(92879)	putRecord('#' [1 2 fast] x(26))
		setConstant(notTopNotNeeded)
		setValue(x(13))
		setValue(x(12))
lbl(92889)	definition(x(12) 92906 pid('Control,notTopButNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1068 6) nil 2) <Q: 706> [y(11) g(53) g(54)])
		move(g(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92889)
lbl(92906)	definition(x(13) 92920 pid('Control,notTopButNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1068 6) nil 1) unit nil)
		getLiteral(notTopButNeeded x(0))
		genFastCall(<Q: 706> 1)
		endDefinition(92906)
lbl(92920)	putRecord('#' [1 2 fast] x(27))
		setConstant(notTopButNeeded)
		setValue(x(13))
		setValue(x(12))
lbl(92930)	definition(x(12) 92971 pid('Control,beginVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1072 6) nil 3) <Q: 707> nil)
		inlineAt(toCopy x(0) cache)
		match(x(0) ht(92944 [onScalar(unit 92960)]))
lbl(92944)	inlineAt(savedToCopy x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedToCopy x(2) cache)
lbl(92960)	putConstant(nil x(0))
		inlineAssign(toCopy x(0) cache)
		return
		endDefinition(92930)
lbl(92971)	definition(x(13) 92997 pid('Control,beginVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1072 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 707> 3)
		endDefinition(92971)
lbl(92997)	putRecord('#' [1 2 fast] x(28))
		setConstant(beginVirtualToplevel)
		setValue(x(13))
		setValue(x(12))
lbl(93007)	definition(x(12) 93049 pid('Control,declareToplevelName/fast' 2 pos('./compiler/StaticAnalysis.oz' 1079 6) nil 3) <Q: 708> [x(7) x(8)])
		inlineAt(toCopy x(2) cache)
		testLiteral(x(2) unit 93025)
lbl(93022)	genCall(gci(g(0) false '' true 2) 0)
lbl(93025)	allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		genCall(gci(g(1) false '' false 2) 0)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(93007)
lbl(93049)	definition(x(7) 93084 pid('Control,declareToplevelName/slow' 1 pos('./compiler/StaticAnalysis.oz' 1079 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 708> 5)
		endDefinition(93049)
lbl(93084)	putRecord('#' [1 2 fast] x(8))
		setConstant(declareToplevelName)
		setValue(x(7))
		setValue(x(12))
lbl(93094)	definition(x(7) 93136 pid('Control,declareToplevelProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 1087 6) nil 2) <Q: 709> [x(9) x(10)])
		inlineAt(toCopy x(1) cache)
		testLiteral(x(1) unit 93112)
lbl(93109)	genCall(gci(g(0) false '' true 1) 0)
lbl(93112)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(1) false '' false 1) 0)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(93094)
lbl(93136)	definition(x(9) 93162 pid('Control,declareToplevelProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 1087 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 709> 3)
		endDefinition(93136)
lbl(93162)	putRecord('#' [1 2 fast] x(10))
		setConstant(declareToplevelProcedure)
		setValue(x(9))
		setValue(x(7))
lbl(93172)	definition(x(7) 93232 pid('Control,endVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1095 6) nil 2) <Q: 710> nil)
		inlineAt(toCopy x(1) cache)
		unify(x(1) x(0))
		inlineAt(savedToCopy x(0) cache)
		match(x(0) ht(93217 [onScalar(nil 93194) onRecord('|' 2 93203)]))
lbl(93194)	putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		return
lbl(93203)	getVarVar(x(0) x(1))
		inlineAssign(toCopy x(0) cache)
		inlineAssign(savedToCopy x(1) cache)
		return
lbl(93217)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1102)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(93172)
lbl(93232)	definition(x(9) 93258 pid('Control,endVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1095 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 710> 3)
		endDefinition(93232)
lbl(93258)	putRecord('#' [1 2 fast] x(12))
		setConstant(endVirtualToplevel)
		setValue(x(9))
		setValue(x(7))
lbl(93268)	definition(x(7) 93282 pid('Control,setErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1105 6) nil 1) <Q: 711> nil)
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(93268)
lbl(93282)	definition(x(9) 93308 pid('Control,setErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1105 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 711> 3)
		endDefinition(93282)
lbl(93308)	putRecord('#' [1 2 fast] x(13))
		setConstant(setErrorMsg)
		setValue(x(9))
		setValue(x(7))
lbl(93318)	definition(x(7) 93335 pid('Control,resetErrorMsg/fast' 0 pos('./compiler/StaticAnalysis.oz' 1108 6) nil 1) <Q: 712> nil)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(93318)
lbl(93335)	definition(x(9) 93349 pid('Control,resetErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1108 6) nil 1) unit nil)
		getLiteral(resetErrorMsg x(0))
		genFastCall(<Q: 712> 1)
		endDefinition(93335)
lbl(93349)	putRecord('#' [1 2 fast] x(29))
		setConstant(resetErrorMsg)
		setValue(x(9))
		setValue(x(7))
lbl(93359)	definition(x(7) 93376 pid('Control,getErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1111 6) nil 2) <Q: 713> nil)
		inlineAt(errorMsg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(93359)
lbl(93376)	definition(x(9) 93402 pid('Control,getErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1111 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 713> 3)
		endDefinition(93376)
lbl(93402)	putRecord('#' [1 2 fast] x(30))
		setConstant(getErrorMsg)
		setValue(x(9))
		setValue(x(7))
lbl(93412)	definition(x(7) 93431 pid('Control,setUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1115 6) nil 2) <Q: 714> nil)
		inlineAssign(unifierLeft x(0) cache)
		inlineAssign(unifierRight x(1) cache)
		return
		endDefinition(93412)
lbl(93431)	definition(x(9) 93466 pid('Control,setUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1115 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 714> 5)
		endDefinition(93431)
lbl(93466)	putRecord('#' [1 2 fast] x(31))
		setConstant(setUnifier)
		setValue(x(9))
		setValue(x(7))
lbl(93476)	definition(x(7) 93501 pid('Control,resetUnifier/fast' 0 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 1) <Q: 715> nil)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(93476)
lbl(93501)	definition(x(9) 93515 pid('Control,resetUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 1) unit nil)
		getLiteral(resetUnifier x(0))
		genFastCall(<Q: 715> 1)
		endDefinition(93501)
lbl(93515)	putRecord('#' [1 2 fast] x(32))
		setConstant(resetUnifier)
		setValue(x(9))
		setValue(x(7))
lbl(93525)	definition(x(7) 93550 pid('Control,getUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1123 6) nil 3) <Q: 716> nil)
		inlineAt(unifierLeft x(2) cache)
		unify(x(2) x(0))
		inlineAt(unifierRight x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(93525)
lbl(93550)	definition(x(9) 93585 pid('Control,getUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1123 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 716> 5)
		endDefinition(93550)
lbl(93585)	putRecord('#' [1 2 fast] x(33))
		setConstant(getUnifier)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 24 x(1))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(8))
		setValue(x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		move(x(2) y(18))
		move(x(11) x(2))
		move(y(11) x(6))
		putConstant(nil x(0))
		putConstant('Control' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(93665)	definition(x(7) 93674 pid('SADefault,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1133 6) nil 1) <Q: 717> nil)
		return
		endDefinition(93665)
lbl(93674)	definition(x(8) 93700 pid('SADefault,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1133 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 717> 3)
		endDefinition(93674)
lbl(93700)	putRecord('#' [1 2 fast] x(9))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
lbl(93710)	definition(x(7) 93719 pid('SADefault,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1136 6) nil 1) <Q: 718> nil)
		return
		endDefinition(93710)
lbl(93719)	definition(x(8) 93745 pid('SADefault,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1136 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 718> 3)
		endDefinition(93719)
lbl(93745)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(93755)	definition(x(7) 93764 pid('SADefault,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1139 6) nil 1) <Q: 719> nil)
		return
		endDefinition(93755)
lbl(93764)	definition(x(8) 93790 pid('SADefault,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1139 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 719> 3)
		endDefinition(93764)
lbl(93790)	putRecord('#' [1 2 fast] x(11))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADefault' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(21))
		setConstant(nil)
		putRecord('feat' [isComplex] x(3))
		setConstant(true)
lbl(93843)	definition(x(7) 93882 pid('SAStatement,staticAnalysis/fast' 3 pos('./compiler/StaticAnalysis.oz' 1157 6) nil 4) <Q: 720> [y(11)])
		allocateL1
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 2 cache)
		getSelf(x(3))
		move(y(0) x(0))
		putConstant(true x(1))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(3) 2 cache)
		endDefinition(93843)
lbl(93882)	definition(x(8) 93923 pid('SAStatement,staticAnalysis/slow' 1 pos('./compiler/StaticAnalysis.oz' 1157 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 720> 7)
		endDefinition(93882)
lbl(93923)	putRecord('#' [1 2 fast] x(9))
		setConstant(staticAnalysis)
		setValue(x(8))
		setValue(x(7))
lbl(93933)	definition(x(7) 93969 pid('SAStatement,saveCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1167 6) nil 2) <Q: 721> nil)
		allocateL2
		move(x(0) y(0))
		getSelf(x(1))
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setCoord x(1) 1 cache)
		endDefinition(93933)
lbl(93969)	definition(x(8) 93995 pid('SAStatement,saveCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1167 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 721> 3)
		endDefinition(93969)
lbl(93995)	putRecord('#' [1 2 fast] x(10))
		setConstant(saveCoord)
		setValue(x(8))
		setValue(x(7))
lbl(94005)	definition(x(7) 94014 pid('SAStatement,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 1175 6) nil 1) <Q: 722> nil)
		return
		endDefinition(94005)
lbl(94014)	definition(x(8) 94040 pid('SAStatement,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 1175 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 722> 3)
		endDefinition(94014)
lbl(94040)	putRecord('#' [1 2 fast] x(11))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(94050)	definition(x(7) 94134 pid('SAStatement,saLookahead/fast' 1 pos('./compiler/StaticAnalysis.oz' 1185 6) nil 3) <Q: 723> nil)
		allocateL1
		move(x(0) y(0))
		getSelf(x(1))
		sendMsg(applyEnvSubst x(1) 1 cache)
		getSelf(x(2))
		move(y(0) x(0))
		sendMsg(saSimple x(2) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) isComplex x(0) cache)
		testBool(x(0) 94093 94121)
		deAllocateL1
		return
lbl(94093)	inlineAt(next x(0) cache)
		getSelf(x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 94106)
		deAllocateL1
		return
lbl(94106)	inlineAt(next x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(saLookahead x(1) 1 cache)
lbl(94121)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(94050)
lbl(94134)	definition(x(8) 94160 pid('SAStatement,saLookahead/slow' 1 pos('./compiler/StaticAnalysis.oz' 1185 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 723> 3)
		endDefinition(94134)
lbl(94160)	putRecord('#' [1 2 fast] x(12))
		setConstant(saLookahead)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(11))
lbl(94172)	definition(x(7) 94289 pid('SAStatement,SaDo/fast' 2 pos('./compiler/StaticAnalysis.oz' 1198 6) nil 4) <Q: 724> [y(11)])
		allocateL1
		move(x(0) y(0))
		testBool(x(1) 94202 94212)
		genCall(gci(g(0) true saveCoord false 1) 0)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(saLookahead x(1) 1 cache)
		branch(94223)
lbl(94202)	getSelf(x(1))
		sendMsg(applyEnvSubst x(1) 1 cache)
		branch(94223)
lbl(94212)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1199)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(94223)	move(y(0) x(0))
		genCall(gci(g(0) true saveCoord false 1) 0)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		getSelf(x(2))
		move(y(0) x(0))
		sendMsg(saDescend x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 94264)
		deAllocateL1
		return
lbl(94264)	inlineAt(next x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) isComplex x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(2) 2 cache)
		endDefinition(94172)
lbl(94289)	definition(x(8) 94324 pid('SAStatement,SaDo/slow' 1 pos('./compiler/StaticAnalysis.oz' 1198 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 724> 5)
		endDefinition(94289)
lbl(94324)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: SaDo>)
		setValue(x(8))
		setValue(x(7))
lbl(94334)	definition(x(7) 94369 pid('SAStatement,saBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 1220 6) nil 3) <Q: 725> nil)
		testList(x(1) 94354)
lbl(94343)	getVariable(x(2))
		putConstant(true x(1))
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(94354)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1227)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(94334)
lbl(94369)	definition(x(8) 94404 pid('SAStatement,saBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 1220 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 725> 5)
		endDefinition(94369)
lbl(94404)	putRecord('#' [1 2 fast] x(14))
		setConstant(saBody)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(11) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAStatement' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(94445)	definition(x(7) 94497 pid('SATypeOf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1232 6) nil 3) <Q: 726> nil)
		allocateL2
		inlineAt(arg x(2) cache)
		move(x(0) y(0))
		putConstant(3 x(0))
		createVariableMove(y(1) x(1))
		sendMsg(reflectType x(2) 2 cache)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		inlineAt(res x(1) cache)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(94445)
lbl(94497)	definition(x(8) 94523 pid('SATypeOf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 726> 3)
		endDefinition(94497)
lbl(94523)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATypeOf' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94560)	definition(x(7) 94569 pid('SAStepPoint,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1240 6) nil 1) <Q: 727> nil)
		return
		endDefinition(94560)
lbl(94569)	definition(x(8) 94595 pid('SAStepPoint,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1240 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 727> 3)
		endDefinition(94569)
lbl(94595)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94605)	definition(x(7) 94621 pid('SAStepPoint,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1243 6) nil 2) <Q: 728> [y(11)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(94605)
lbl(94621)	definition(x(8) 94647 pid('SAStepPoint,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1243 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 728> 3)
		endDefinition(94621)
lbl(94647)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAStepPoint' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94686)	definition(x(7) 94739 pid('SADeclaration,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1249 6) nil 3) <Q: 729> nil)
		inlineAt(localVars x(2) cache)
lbl(94697)	definition(x(1) 94731 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1253 21) nil 2) unit [x(0)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getTop g(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(94697)
lbl(94731)	move(x(2) x(0))
		genFastCall(<P: 34> 5)
		endDefinition(94686)
lbl(94739)	definition(x(8) 94765 pid('SADeclaration,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1249 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 729> 3)
		endDefinition(94739)
lbl(94765)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94775)	definition(x(7) 94791 pid('SADeclaration,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1255 6) nil 2) <Q: 730> [y(11)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(94775)
lbl(94791)	definition(x(8) 94817 pid('SADeclaration,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1255 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 730> 3)
		endDefinition(94791)
lbl(94817)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADeclaration' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94856)	definition(x(7) 94867 pid('SASkipNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 1) <Q: 731> [y(11)])
		genCall(gci(g(0) true sa true 1) 0)
		endDefinition(94856)
lbl(94867)	definition(x(8) 94893 pid('SASkipNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 731> 3)
		endDefinition(94867)
lbl(94893)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SASkipNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94930)	definition(x(7) 95013 pid('SAEquation,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1268 6) nil 3) <Q: 732> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		putConstant('equality constraint failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(left x(0) cache)
		inlineAt(right x(1) cache)
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(94930)
lbl(95013)	definition(x(8) 95039 pid('SAEquation,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1268 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 732> 3)
		endDefinition(95013)
lbl(95039)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(95049)	definition(x(7) 95087 pid('SAEquation,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1282 6) nil 2) <Q: 733> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(95049)
lbl(95087)	definition(x(8) 95113 pid('SAEquation,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1282 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 733> 3)
		endDefinition(95087)
lbl(95113)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquation' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(95160)	definition(x(7) 95200 pid('SAConstructionOrPattern,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 1293 6) nil 4) <Q: 734> [y(12)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(record x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(95160)
lbl(95200)	definition(x(8) 95214 pid('SAConstructionOrPattern,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 1293 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 734> 1)
		endDefinition(95200)
lbl(95214)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(95224)	definition(x(7) 95241 pid('SAConstructionOrPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1296 6) nil 2) <Q: 735> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95224)
lbl(95241)	definition(x(8) 95267 pid('SAConstructionOrPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1296 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 735> 3)
		endDefinition(95241)
lbl(95267)	putRecord('#' [1 2 fast] x(10))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(95277)	definition(x(7) 95291 pid('SAConstructionOrPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1299 6) nil 1) <Q: 736> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(95277)
lbl(95291)	definition(x(8) 95317 pid('SAConstructionOrPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1299 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 736> 3)
		endDefinition(95291)
lbl(95317)	putRecord('#' [1 2 fast] x(11))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(95327)	definition(x(7) 95344 pid('SAConstructionOrPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1302 6) nil 2) <Q: 737> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95327)
lbl(95344)	definition(x(8) 95370 pid('SAConstructionOrPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1302 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 737> 3)
		endDefinition(95344)
lbl(95370)	putRecord('#' [1 2 fast] x(12))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(95380)	definition(x(7) 95394 pid('SAConstructionOrPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1305 6) nil 1) <Q: 738> nil)
		inlineAssign(lastValue x(0) cache)
		return
		endDefinition(95380)
lbl(95394)	definition(x(8) 95420 pid('SAConstructionOrPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1305 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 738> 3)
		endDefinition(95394)
lbl(95420)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(95430)	definition(x(7) 95447 pid('SAConstructionOrPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1308 6) nil 2) <Q: 739> nil)
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95430)
lbl(95447)	definition(x(8) 95473 pid('SAConstructionOrPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1308 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 739> 3)
		endDefinition(95447)
lbl(95473)	putRecord('#' [1 2 fast] x(14))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(95483)	definition(x(7) 95500 pid('SAConstructionOrPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 1311 6) nil 2) <Q: 740> nil)
		inlineAt(args x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95483)
lbl(95500)	definition(x(8) 95526 pid('SAConstructionOrPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 1311 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 740> 3)
		endDefinition(95500)
lbl(95526)	putRecord('#' [1 2 fast] x(15))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(95536)	definition(x(7) 95553 pid('SAConstructionOrPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 1314 6) nil 2) <Q: 741> nil)
		inlineAt(isOpen x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95536)
lbl(95553)	definition(x(8) 95579 pid('SAConstructionOrPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 1314 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 741> 3)
		endDefinition(95553)
lbl(95579)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(95589)	definition(x(7) 95606 pid('SAConstructionOrPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1317 6) nil 2) <Q: 742> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(95589)
lbl(95606)	definition(x(8) 95632 pid('SAConstructionOrPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1317 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 742> 3)
		endDefinition(95606)
lbl(95632)	putRecord('#' [1 2 fast] x(17))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(95642)	definition(x(7) 96103 pid('SAConstructionOrPattern,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1320 6) nil 5) <Q: 743> [g(55) g(56) y(2) g(57)])
		putConstant(0 x(2))
		testLE(x(0) x(2) x(3) 95664)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 682> 5)
lbl(95664)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 95930)
		inlineAt(value x(0) cache)
		testBI('IsTuple' [x(0)]#[x(1)] 95782)
		inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 159> 4)
lbl(95709)	definition(x(1) 95735 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1333 5) nil 5) unit [y(0)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		tailSendMsg(getPrintType x(4) 2 cache)
		endDefinition(95709)
lbl(95735)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 620> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 676> 11)
lbl(95782)	inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 160> 4)
lbl(95793)	definition(x(1) 95883 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1338 5) nil 6) unit [g(2) y(0)])
		shallowGuard(95870)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(95809)	shallowThen
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(4))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(5) cache)
		move(x(3) y(1))
		move(x(2) x(0))
		move(x(4) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(5) 4)
		move(g(1) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
lbl(95870)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1338)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(95793)
lbl(95883)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 620> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 676> 11)
lbl(95930)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 95951)
		inlineAt(type x(0) cache)
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 682> 5)
lbl(95951)	inlineAt(value x(0) cache)
		createVariable(y(2))
		testBI(hasLabel [x(0)]#[x(1)] 95973)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
lbl(95973)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 622> 4)
		getSelf(x(3))
lbl(95986)	definition(x(1) 96062 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1353 9) nil 5) unit [x(3) g(2) y(0)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(0) y(1))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(4) 4)
		inlineAt(value x(0) cache)
		move(y(1) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(95986)
lbl(96062)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 620> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(3) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant('...)' x(3))
		deAllocateL4
		genFastCall(<Q: 676> 11)
		endDefinition(95642)
lbl(96103)	definition(x(8) 96138 pid('SAConstructionOrPattern,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1320 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 743> 5)
		endDefinition(96103)
lbl(96138)	putRecord('#' [1 2 fast] x(18))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(96148)	definition(x(7) 96423 pid('SAConstructionOrPattern,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1361 6) nil 5) <Q: 744> [y(12) g(58) g(59)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(96219)
		move(x(0) y(2))
		createCond(96213)
lbl(96167)	lastClause
		clause
		thread(96185)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(96185)	ask
lbl(96186)	getRecord(type 1 y(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL6
		tailCall(x(2) 2)
lbl(96213)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(96219)	putConstant(decode x(0))
		move(x(0) y(2))
		putConstant(type x(1))
		moveMoveXYYX(x(1) y(3) y(0) x(2))
		putConstant(0 x(3))
		testLE(x(2) x(3) x(4) 96242)
lbl(96241)	failure
lbl(96242)	inlineAt(isOpen x(3) cache)
		testBool(x(3) 96264 96253)
		branch(96241)
lbl(96253)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1363)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96264)	inlineAt(label x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(reflectType x(2) 2 cache)
		createVariable(y(5))
		testRecord(y(4) value 1 96295)
lbl(96288)	getVariable(x(0))
		unify(y(5) x(0))
		branch(96296)
lbl(96295)	failure
lbl(96296)	inlineAt(args x(0) cache)
lbl(96301)	definition(x(1) 96395 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1368 6) nil 5) unit [y(0)])
		testRecord(x(1) '#' 2 96365)
lbl(96312)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(reflectType x(3) 2 cache)
		testRecord(y(2) value 1 96364)
lbl(96336)	getVariable(x(2))
		getRecord('#' 2 y(1))
		unifyValVar(x(2) x(1))
		move(g(0) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reflectType x(2) 2 cache)
lbl(96364)	failure
lbl(96365)	getRecord('#' 2 x(2))
		unifyValVar(x(0) x(2))
		move(g(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(1) x(4))
		move(x(3) x(0))
		move(x(2) x(1))
		tailSendMsg(reflectType x(4) 2 cache)
		endDefinition(96301)
lbl(96395)	createVariableMove(y(0) x(2))
		genFastCall(<P: 81> 6)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		putRecord(record 1 x(0))
		setValue(x(2))
		unify(y(1) x(0))
		popEx
		deAllocateL6
		return
		endDefinition(96148)
lbl(96423)	definition(x(8) 96458 pid('SAConstructionOrPattern,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1361 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 744> 5)
		endDefinition(96423)
lbl(96458)	putRecord('#' [1 2 fast] x(19))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(96468)	definition(x(7) 96482 pid('SAConstructionOrPattern,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1384 6) nil 1) <Q: 745> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(96468)
lbl(96482)	definition(x(8) 96508 pid('SAConstructionOrPattern,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1384 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 745> 3)
		endDefinition(96482)
lbl(96508)	putRecord('#' [1 2 fast] x(20))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(96518)	definition(x(7) 96550 pid('SAConstructionOrPattern,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 1387 6) nil 3) <Q: 746> nil)
		allocateL1
		move(x(1) y(0))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL1
		return
		endDefinition(96518)
lbl(96550)	definition(x(8) 96585 pid('SAConstructionOrPattern,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1387 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 746> 5)
		endDefinition(96550)
lbl(96585)	putRecord('#' [1 2 fast] x(21))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(96595)	definition(x(7) 96830 pid('SAConstructionOrPattern,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 1391 6) nil 5) <Q: 747> [g(45) g(57)])
		putConstant(0 x(3))
		testLE(x(0) x(3) x(4) 96610)
		return
lbl(96610)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		getSelf(x(3))
		getSelf(x(0))
		sendMsg(deref x(3) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 96682)
		inlineAt(value x(0) cache)
lbl(96643)	definition(x(1) 96675 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1401 27) nil 5) unit [y(0) y(1)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		tailSendMsg(getFullData x(4) 3 cache)
		endDefinition(96643)
lbl(96675)	move(y(2) x(2))
		deAllocateL5
		genFastCall(<P: 161> 7)
lbl(96682)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 96701)
		inlineAt(value x(0) cache)
		unify(x(0) y(2))
		deAllocateL5
		return
lbl(96701)	inlineAt(value x(0) cache)
		createVariable(y(3))
		testBI(hasLabel [x(0)]#[x(1)] 96723)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(3))
lbl(96723)	move(y(3) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		createVariable(y(4))
		testBool(x(1) 96754 96743)
		move(y(4) x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		branch(96754)
lbl(96743)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1410)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96754)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 622> 4)
		getSelf(x(2))
lbl(96767)	definition(x(1) 96817 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1414 2) nil 6) unit [x(2) y(4) y(0) y(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		inlineUparrow(x(2) x(0) x(3))
		inlineAt(value x(4) cache)
		inlineUparrow(x(4) x(0) x(5))
		move(g(2) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		move(g(3) x(1))
		move(x(3) x(2))
		tailSendMsg(getFullData x(5) 3 cache)
		endDefinition(96767)
lbl(96817)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		unify(y(4) y(2))
		deAllocateL5
		return
		endDefinition(96595)
lbl(96830)	definition(x(8) 96871 pid('SAConstructionOrPattern,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1391 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 747> 7)
		endDefinition(96830)
lbl(96871)	putRecord('#' [1 2 fast] x(22))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(27))
lbl(96883)	definition(x(7) 97000 pid('SAConstructionOrPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 1421 6) nil 3) <Q: 748> [y(27)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 96901)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(96901)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 96985 96987)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 96951)
		deAllocateL2
		return
lbl(96951)	testLiteral(y(1) unit 96972)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(96972)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(96985)	deAllocateL2
		return
lbl(96987)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1426)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96883)
lbl(97000)	definition(x(8) 97026 pid('SAConstructionOrPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 1421 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 748> 3)
		endDefinition(97000)
lbl(97026)	putRecord('#' [1 2 fast] x(23))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(97036)	definition(x(7) 97142 pid('SAConstructionOrPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 1447 6) nil 5) <Q: 749> nil)
		allocateL4
		inlineAt(args x(2) cache)
lbl(97048)	definition(x(3) 97104 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1452 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 97090)
lbl(97059)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(97090)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(97048)
lbl(97104)	inlineAt(label x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		sendMsg(reachable x(4) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(97036)
lbl(97142)	definition(x(8) 97177 pid('SAConstructionOrPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 1447 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 749> 5)
		endDefinition(97142)
lbl(97177)	putRecord('#' [1 2 fast] x(24))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(97187)	definition(x(7) 97217 pid('SAConstructionOrPattern,makeType/fast' 0 pos('./compiler/StaticAnalysis.oz' 1462 6) nil 2) <Q: 750> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 616> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(97187)
lbl(97217)	definition(x(8) 97231 pid('SAConstructionOrPattern,makeType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1462 6) nil 1) unit nil)
		getLiteral(makeType x(0))
		genFastCall(<Q: 750> 1)
		endDefinition(97217)
lbl(97231)	putRecord('#' [1 2 fast] x(25))
		setConstant(makeType)
		setValue(x(8))
		setValue(x(7))
lbl(97241)	definition(x(7) 97832 pid('SAConstructionOrPattern,makeConstruction/fast' 1 pos('./compiler/StaticAnalysis.oz' 1466 6) nil 7) <Q: 751> [y(18) g(58) y(5) g(59)])
		allocateL7
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(97270)	definition(x(1) 97296 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1469 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 97290)
lbl(97281)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(97290)	unify(x(2) x(0))
		return
		endDefinition(97270)
lbl(97296)	putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		move(g(0) x(0))
		inlineDot(x(0) literal x(2) cache)
		inlineAt(label x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 97754 97819)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(4) 97684 97743)
		inlineAt(label x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(args x(0) cache)
lbl(97373)	definition(x(1) 97409 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1485 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 97398)
lbl(97384)	getVarVar(x(0) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(3))
		genFastCall(<Q: 627> 5)
lbl(97398)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(97373)
lbl(97409)	createVariableMove(y(4) x(2))
		genFastCall(<P: 81> 6)
lbl(97415)	definition(x(1) 97449 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1488 27) nil 4) unit nil)
		shallowGuard(97436)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(97431)	shallowThen
		unify(x(1) x(2))
		return
lbl(97436)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1488)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97415)
lbl(97449)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 687> 4)
		testBool(y(6) 97620 97673)
		inlineAt(label x(3) cache)
		putList(x(0))
		setValue(x(3))
		setValue(y(2))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(0) 97600 97609)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 97574 97589)
		move(y(3) x(0))
		createVariable(x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		inlineAssign(value x(1) cache)
		getSelf(x(2))
lbl(97519)	definition(x(1) 97567 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1503 17) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(97554)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(97540)	shallowThen
		inlineAt(value x(0) cache)
		inlineUparrow(x(0) x(2) x(4))
		unify(x(4) x(3))
		return
lbl(97554)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97519)
lbl(97567)	move(y(4) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(97574)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		inlineAssign(value x(2) cache)
		deAllocateL7
		return
lbl(97589)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1499)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97600)	createVariable(x(0))
		inlineAssign(value x(0) cache)
		deAllocateL7
		return
lbl(97609)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1496)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97620)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(2))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in record construction' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(97673)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1493)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97684)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(97743)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1480)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97754)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(label x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record label ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(97819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1473)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97241)
lbl(97832)	definition(x(8) 97858 pid('SAConstructionOrPattern,makeConstruction/slow' 1 pos('./compiler/StaticAnalysis.oz' 1466 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 751> 3)
		endDefinition(97832)
lbl(97858)	putRecord('#' [1 2 fast] x(26))
		setConstant(makeConstruction)
		setValue(x(8))
		setValue(x(7))
lbl(97868)	definition(x(7) 97936 pid('SAConstructionOrPattern,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 1539 6) nil 5) <Q: 752> [y(27)])
		allocateL4
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(3) 97921 97923)
		move(y(1) x(0))
		deAllocateL4
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(97921)	deAllocateL4
		return
lbl(97923)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97868)
lbl(97936)	definition(x(8) 97971 pid('SAConstructionOrPattern,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 1539 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 752> 5)
		endDefinition(97936)
lbl(97971)	putRecord('#' [1 2 fast] x(27))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(97981)	definition(x(7) 99027 pid('SAConstructionOrPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 1555 6) nil 12) <Q: 753> [y(15)])
		allocateL8
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 670> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 98032)
		deAllocateL8
		return
lbl(98032)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 98724 99014)
		createVariableMove(y(3) x(0))
		sendMsg(getLabel y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getArgs y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(isOpen y(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 98117 98297)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		sendMsg('unify' x(2) 2 cache)
		branch(98308)
lbl(98117)	createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(3) 1 cache)
		testBool(y(1) 98146 98286)
		inlineAt(label x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(3) 2 cache)
		branch(98308)
lbl(98146)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 627> 4)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 98308)
lbl(98175)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(value x(3) cache)
		putRecord(oz 1 x(4))
		setValue(y(1))
		putRecord(oz 1 x(5))
		setValue(y(7))
		putRecord('#' 3 x(1))
		setValue(x(4))
		setConstant(' and ')
		setValue(x(5))
		putRecord(hint [l m] x(0))
		setConstant('incompatible labels')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(3))
		putRecord(hint [l m] x(7))
		setConstant('First value')
		setValue(x(8))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Second value')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(2))
		setValue(x(0))
		setValue(x(6))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 672> 6)
		branch(98308)
lbl(98286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1577)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98297)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1573)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98308)	inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 98450)
lbl(98317)	move(y(5) x(0))
		testBI('Not' [x(0)]#[x(1)] 98450)
lbl(98324)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 98450)
lbl(98353)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(3) cache)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' and ')
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(6))
		setValue(x(3))
		putRecord(hint [l m] x(5))
		setConstant('First value')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Second value')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putList(x(2))
		setValue(x(0))
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 672> 6)
lbl(98450)	inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 98572)
lbl(98459)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 98572)
lbl(98466)	inlineAt(value x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
lbl(98476)	definition(x(1) 98565 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1616 2) nil 5) unit [x(3) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(value x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 98536 98552)
		move(g(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(98536)	move(g(2) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(98552)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1620)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(98476)
lbl(98565)	move(x(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(98572)	inlineAt(value x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 622> 4)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 622> 4)
		getSelf(x(2))
lbl(98594)	definition(x(1) 98717 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1633 2) nil 4) unit [x(2) y(1) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 98702 98704)
		inlineAt(value x(0) cache)
		move(y(0) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineUparrow(x(0) x(1) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 98675 98691)
		move(g(3) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(98675)	move(g(3) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(98691)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1640)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98702)	deAllocateL3
		return
lbl(98704)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1634)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(98594)
lbl(98717)	move(y(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(98724)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(3) 98907 99003)
lbl(98737)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 98763 98896)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(98763)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(3) 0 98795)
lbl(98778)	inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(98795)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(0) cache)
		move(x(0) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord('#' 3 x(1))
		setValue(y(3))
		setConstant(' and ')
		setConstant(0)
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('First value')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Second value')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 672> 7)
lbl(98896)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1660)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98907)	createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 98925)
		branch(98737)
lbl(98925)	inlineAt(value x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('record = number')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [1 l] x(3))
		setValue(x(4))
		setConstant('First value')
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [1 l] x(6))
		setValue(x(7))
		setConstant('Second value')
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 672> 7)
lbl(99003)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1655)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99014)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1565)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97981)
lbl(99027)	definition(x(8) 99062 pid('SAConstructionOrPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 1555 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 753> 5)
		endDefinition(99027)
lbl(99062)	putRecord('#' [1 2 fast] x(28))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(99072)	definition(x(7) 99156 pid('SAConstructionOrPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1683 6) nil 3) <Q: 754> [y(27)])
		allocateL1
		inlineAt(args x(2) cache)
lbl(99084)	definition(x(1) 99135 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1690 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 99121)
lbl(99095)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(sa x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(sa x(1) 1 cache)
lbl(99121)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(99084)
lbl(99135)	move(x(0) y(0))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genCall(gci(g(0) true makeConstruction false 1) 0)
		deAllocateL1
		genCall(gci(g(0) true makeType true 0) 0)
		endDefinition(99072)
lbl(99156)	definition(x(8) 99182 pid('SAConstructionOrPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1683 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 754> 3)
		endDefinition(99156)
lbl(99182)	putRecord('#' [1 2 fast] x(29))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(99192)	definition(x(7) 99275 pid('SAConstructionOrPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1701 6) nil 2) <Q: 755> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(99218)	definition(x(1) 99269 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1704 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 99255)
lbl(99229)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(99255)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(99218)
lbl(99269)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(99192)
lbl(99275)	definition(x(8) 99301 pid('SAConstructionOrPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1701 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 755> 3)
		endDefinition(99275)
lbl(99301)	putRecord('#' [1 2 fast] x(30))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 22 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		move(y(27) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstructionOrPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(27))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstruction' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [value] x(2))
		setConstant(unit)
lbl(99410)	definition(x(7) 99427 pid('SAAbstraction,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1722 6) nil 2) <Q: 756> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(99410)
lbl(99427)	definition(x(8) 99453 pid('SAAbstraction,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1722 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 756> 3)
		endDefinition(99427)
lbl(99453)	putRecord('#' [1 2 fast] x(9))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAAbstraction' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(29))
		setConstant(nil)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
lbl(99499)	definition(x(7) 99718 pid('SADefinition,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 1731 6) nil 3) <Q: 757> [y(8)])
		allocateL4
		inlineAt(formalArgs x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 673> 6)
		move(g(0) x(0))
		inlineDot(x(0) procedureToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		createVariable(y(2))
		testBool(y(1) 99620 99660)
		inlineAt(value x(0) cache)
		inlineDot(x(0) clauseBodyStatements x(0) cache)
		inlineAt(statements x(1) cache)
		unify(x(1) x(0))
		getLiteral(unit y(2))
		branch(99671)
lbl(99620)	createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 99644 99649)
		move(y(2) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		branch(99671)
lbl(99644)	getLiteral(unit y(2))
		branch(99671)
lbl(99649)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1743)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99660)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1740)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99671)	getSelf(x(2))
		inlineDot(x(2) predicateRef x(0) cache)
		unify(x(0) y(2))
		inlineAt(value x(2) cache)
		inlineDot(x(2) predicateRef x(0) cache)
		unify(x(0) y(2))
		inlineAt(designator x(2) cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(99499)
lbl(99718)	definition(x(8) 99744 pid('SADefinition,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 1731 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 757> 3)
		endDefinition(99718)
lbl(99744)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(99754)	definition(x(7) 99763 pid('SADefinition,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1757 6) nil 1) <Q: 758> nil)
		return
		endDefinition(99754)
lbl(99763)	definition(x(8) 99789 pid('SADefinition,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1757 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 758> 3)
		endDefinition(99763)
lbl(99789)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(99799)	definition(x(7) 99971 pid('SADefinition,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1763 6) nil 3) <Q: 759> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		inlineAt(procFlags x(1) cache)
		putConstant(instantiate x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 99909 99951)
		inlineAt(coord x(0) cache)
		sendMsg(beginVirtualToplevel y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getTop y(0) 1 cache)
		putConstant(true x(0))
		sendMsg(setTop y(0) 1 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		move(y(2) x(0))
		sendMsg(setTop y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(endVirtualToplevel y(0) 1 cache)
		move(y(2) x(0))
		inlineAssign(toCopy x(0) cache)
		branch(99962)
lbl(99909)	createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		branch(99962)
lbl(99951)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1766)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99962)	move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(99799)
lbl(99971)	definition(x(8) 99997 pid('SADefinition,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1763 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 759> 3)
		endDefinition(99971)
lbl(99997)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(100007)	definition(x(7) 100026 pid('SADefinition,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1782 6) nil 2) <Q: 760> nil)
		inlineAt(designator x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(100007)
lbl(100026)	definition(x(8) 100052 pid('SADefinition,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1782 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 760> 3)
		endDefinition(100026)
lbl(100052)	putRecord('#' [1 2 fast] x(12))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SADefinition' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAFunctionDefinition' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAClauseBody' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(33))
lbl(100139)	definition(x(7) 100309 pid('SABuiltinApplication,typeCheckN/fast' 5 pos('./compiler/StaticAnalysis.oz' 1795 6) nil 6) <Q: 761> [y(33)])
		match(x(2) ht(100294 [onScalar(nil 100148) onRecord('|' 2 100192)]))
lbl(100148)	allocateL1
		move(x(4) y(0))
		testLiteral(x(3) nil 100158)
		branch(100187)
lbl(100158)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(100187)	getNumber(0 y(0))
		deAllocateL1
		return
lbl(100192)	allocateL6
		getVarVar(x(5) y(0))
		testList(x(3) 100262)
lbl(100199)	getVarVar(x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(4) y(4))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 662> 6)
		testBool(y(5) 100246 100251)
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		deAllocateL6
		genCall(gci(g(0) true typeCheckN true 5) 0)
lbl(100246)	unify(y(4) y(3))
		deAllocateL6
		return
lbl(100251)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1808)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(100262)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		move(x(4) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(100294)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1820)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100139)
lbl(100309)	definition(x(8) 100362 pid('SABuiltinApplication,typeCheckN/slow' 1 pos('./compiler/StaticAnalysis.oz' 1795 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 761> 11)
		endDefinition(100309)
lbl(100362)	putRecord('#' [1 2 fast] x(9))
		setConstant(typeCheckN)
		setValue(x(8))
		setValue(x(7))
lbl(100372)	definition(x(7) 100395 pid('SABuiltinApplication,typeCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1823 6) nil 5) <Q: 762> [y(33)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genCall(gci(g(0) true typeCheckN true 5) 0)
		endDefinition(100372)
lbl(100395)	definition(x(8) 100442 pid('SABuiltinApplication,typeCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1823 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 762> 9)
		endDefinition(100395)
lbl(100442)	putRecord('#' [1 2 fast] x(10))
		setConstant(typeCheck)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(34))
lbl(100454)	definition(x(7) 100621 pid('SABuiltinApplication,detCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1827 6) nil 6) <Q: 763> [y(1) y(34)])
		match(x(1) ht(100606 [onScalar(nil 100463) onRecord('|' 2 100507)]))
lbl(100463)	allocateL1
		move(x(3) y(0))
		testLiteral(x(2) nil 100473)
		branch(100502)
lbl(100473)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(100502)	getLiteral(true y(0))
		deAllocateL1
		return
lbl(100507)	allocateL5
		getVarVar(x(4) y(0))
		testList(x(2) 100574)
lbl(100514)	getVarVar(x(1) y(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(0) x(1))
		callBI('.' [x(1) x(2)]#[x(5)])
		moveMoveXYXY(x(0) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(x(5) 2)
		testBool(y(4) 100558 100563)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL5
		genCall(gci(g(1) true detCheck true 4) 0)
lbl(100558)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(100563)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1841)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(100574)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		move(x(3) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putConstant(crashed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(100606)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1850)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100454)
lbl(100621)	definition(x(8) 100668 pid('SABuiltinApplication,detCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1827 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 763> 9)
		endDefinition(100621)
lbl(100668)	putRecord('#' [1 2 fast] x(11))
		setConstant(detCheck)
		setValue(x(8))
		setValue(x(7))
lbl(100678)	definition(x(7) 101171 pid('SABuiltinApplication,AssertTypes/fast' 5 pos('./compiler/StaticAnalysis.oz' 1853 6) nil 19) <Q: 764> [y(12) y(33)])
		testLiteral(x(2) nil 100689)
lbl(100688)	return
lbl(100689)	testList(x(2) 101156)
lbl(100692)	allocateL(11)
		getVarVar(x(2) x(5))
		putRecord('#' 2 x(6))
		setValue(x(3))
		setValue(x(4))
		testRecord(x(6) '#' 2 101154)
lbl(100710)	getVarVar(x(3) x(4))
		createVariable(y(0))
		shallowGuard(101152)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(100729)	shallowThen
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(5) y(4))
		moveMoveXYXY(x(3) y(5) x(6) y(6))
		move(x(8) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getType y(3) 1 cache)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(5) x(1))
		callBI('Label' [x(1)]#[x(4)])
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<Q: 671> 6)
		testBool(y(10) 100819 101141)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		moveMoveYXYX(y(6) x(3) y(7) x(4))
		deAllocateL
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
lbl(100819)	putRecord(pn 1 y(4))
		setVariable(x(0))
		inlineAt(designator x(1) cache)
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(100841)	definition(x(1) 100867 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1874 27) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(100841)
lbl(100867)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(100878)	definition(x(1) 100895 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1875 27) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 629> 5)
		endDefinition(100878)
lbl(100895)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(100906)	definition(x(1) 100939 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1876 27) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(2) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 682> 5)
		endDefinition(100906)
lbl(100939)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(9))
		createVariableMove(y(10) x(0))
		sendMsg(getType y(3) 1 cache)
		move(y(10) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 682> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 679> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 679> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(8))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('At argument')
		setValue(y(2))
		putRecord(oz 1 x(10))
		setValue(y(5))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setValue(x(10))
		putRecord(hint [l m] x(12))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(14))
		setConstant('Application (names)')
		setValue(y(6))
		putRecord(hint [l m] x(16))
		setConstant('Application (values)')
		setValue(y(7))
		putRecord(hint [l m] x(18))
		setConstant('Application (types)')
		setValue(y(8))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(9) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(101141)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1866)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(101152)	deAllocateL
		return
lbl(101154)	deAllocateL
		return
lbl(101156)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1896)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100678)
lbl(101171)	definition(x(8) 101224 pid('SABuiltinApplication,AssertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1853 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 764> 11)
		endDefinition(101171)
lbl(101224)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AssertTypes>)
		setValue(x(8))
		setValue(x(7))
lbl(101234)	definition(x(7) 101294 pid('SABuiltinApplication,assertTypes/fast' 2 pos('./compiler/StaticAnalysis.oz' 1899 6) nil 5) <Q: 765> [y(9) y(33)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) getInfo x(3) cache)
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		inlineDot(x(0) types x(3) cache)
		inlineDot(x(0) det x(4) cache)
		inlineAt(actualArgs x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
		endDefinition(101234)
lbl(101294)	definition(x(8) 101329 pid('SABuiltinApplication,assertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1899 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 765> 5)
		endDefinition(101294)
lbl(101329)	putRecord('#' [1 2 fast] x(13))
		setConstant(assertTypes)
		setValue(x(8))
		setValue(x(7))
lbl(101339)	definition(x(7) 101930 pid('SABuiltinApplication,checkMessage/fast' 5 pos('./compiler/StaticAnalysis.oz' 1913 6) nil 12) <Q: 766> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 629> 4)
		createVariable(y(1))
		createVariable(y(7))
		testLiteral(y(3) object 101392)
lbl(101384)	getLiteral('Object' y(1))
		getLiteral('object application' y(7))
		branch(101422)
lbl(101392)	testLiteral(y(3) new 101404)
lbl(101396)	getLiteral('Object' y(1))
		getLiteral('object creation' y(7))
		branch(101422)
lbl(101404)	testLiteral(y(3) 'class' 101416)
lbl(101408)	getLiteral('Class' y(1))
		getLiteral('class application' y(7))
		branch(101422)
lbl(101416)	getLiteral('???' y(1))
		getLiteral('???' y(7))
lbl(101422)	testLiteral(y(2) unit 101428)
		deAllocateL9
		return
lbl(101428)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 101926)
lbl(101435)	testBI('IsRecord' [x(0)]#[x(1)] 101924)
lbl(101439)	callBI('Label' [x(0)]#[x(1)])
		move(y(2) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 101800)
		putRecord('#' 2 x(1))
		setVariable(y(3))
		setVariable(y(8))
		callBI('Label' [x(0)]#[x(3)])
		callBI('.' [x(2) x(3)]#[x(4)])
		unify(x(4) x(1))
		getSelf(x(2))
lbl(101468)	definition(x(1) 101583 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1950 2) nil 15) unit [x(2) y(5) y(0) y(7) y(1) y(4) y(6)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 101487)
		return
lbl(101487)	move(g(2) x(3))
		inlineDot(x(3) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord('#' 2 x(6))
		setConstant('missing message feature in ')
		setValue(g(3))
		putRecord(pn 1 x(9))
		setValue(g(5))
		putRecord(hint [l m] x(8))
		setValue(g(4))
		setValue(x(9))
		putRecord(hint [l m] x(11))
		setConstant('Required feature')
		setValue(x(0))
		putRecord(oz 1 x(14))
		setValue(g(6))
		putRecord(hint [l m] x(13))
		setConstant('Message found')
		setValue(x(14))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(7))
		setValue(x(8))
		setValue(x(10))
		move(x(5) x(0))
		move(x(7) x(1))
		move(x(6) x(3))
		putConstant('static analysis error' x(2))
		tailSendMsg(error x(4) [coord items kind msg] cache)
		endDefinition(101468)
lbl(101583)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(8) unit 101595)
		deAllocateL9
		return
lbl(101595)	move(y(5) x(0))
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(101603)	definition(x(1) 101793 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1968 5) nil 14) unit [x(3) y(3) y(8) y(0) y(7) y(1) y(4) y(6)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 101633 101780)
		deAllocateL4
		return
lbl(101633)	move(y(0) x(0))
		move(g(2) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 101651 101780)
		deAllocateL4
		return
lbl(101651)	move(g(3) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 677> 4)
		move(g(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 677> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message feature in ')
		setValue(g(4))
		putRecord(pn 1 x(6))
		setValue(g(6))
		putRecord(hint [l m] x(5))
		setValue(g(5))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Required features')
		setValue(y(2))
		putRecord(hint [l m] x(10))
		setConstant('Optional features')
		setValue(y(3))
		putRecord(oz 1 x(13))
		setValue(g(7))
		putRecord(hint [l m] x(12))
		setConstant('Message found')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL4
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(101780)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1969)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(101603)
lbl(101793)	move(x(2) x(0))
		deAllocateL9
		genFastCall(<P: 34> 5)
lbl(101800)	putConstant(otherwise x(0))
		testBI('HasFeature' [x(2) x(0)]#[x(1)] 101809)
		deAllocateL9
		return
lbl(101809)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 680> 4)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 677> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message label in ')
		setValue(y(7))
		putRecord(pn 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setValue(y(1))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Message found')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL9
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(101924)	deAllocateL9
		return
lbl(101926)	deAllocateL9
		return
		endDefinition(101339)
lbl(101930)	definition(x(8) 101983 pid('SABuiltinApplication,checkMessage/slow' 1 pos('./compiler/StaticAnalysis.oz' 1913 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 766> 11)
		endDefinition(101930)
lbl(101983)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkMessage)
		setValue(x(8))
		setValue(x(7))
lbl(101993)	definition(x(7) 102636 pid('SABuiltinApplication,checkArguments/fast' 3 pos('./compiler/StaticAnalysis.oz' 2007 6) nil 15) <Q: 767> [y(2) y(9) g(42) y(33)])
		allocateL9
		move(g(0) x(3))
		inlineDot(x(3) printName x(4) cache)
		inlineAt(designator x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 627> 4)
		move(y(6) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		move(y(4) x(0))
		testBI('==' [x(0) x(1)]#[x(2)] 102412)
		inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) types x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true typeCheck false 4) 0)
		testNumber(y(4) 0 102157)
lbl(102122)	move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 102134)
		getLiteral(true y(2))
		deAllocateL9
		return
lbl(102134)	inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) det x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		deAllocateL9
		genCall(gci(g(3) true detCheck true 4) 0)
lbl(102157)	inlineAt(actualArgs x(0) cache)
lbl(102162)	definition(x(1) 102188 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2033 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(102162)
lbl(102188)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(102199)	definition(x(1) 102216 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2034 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 629> 5)
		endDefinition(102199)
lbl(102216)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		inlineDot(x(0) types x(0) cache)
lbl(102231)	definition(x(1) 102246 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2035 32) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(102231)
lbl(102246)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(7))
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 678> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(6))
		setValue(y(5))
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(10))
		setConstant('Expected types')
		setValue(y(8))
		putRecord(hint [l m] x(12))
		setConstant('Argument names')
		setValue(y(1))
		putRecord(hint [l m] x(14))
		setConstant('Argument values')
		setValue(y(3))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(7) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
lbl(102412)	inlineAt(actualArgs x(3) cache)
lbl(102417)	definition(x(4) 102443 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2048 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(102417)
lbl(102443)	move(x(1) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(102463)	definition(x(1) 102480 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2049 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 629> 5)
		endDefinition(102463)
lbl(102480)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		putRecord(pn 1 x(3))
		setValue(y(5))
		putList(x(2))
		setValue(x(3))
		setValue(y(3))
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(9))
		setConstant('Found')
		setValue(y(4))
		putRecord(hint [l m] x(11))
		setConstant('Argument names')
		setValue(y(7))
		putRecord(hint [l m] x(13))
		setConstant('Argument values')
		setValue(y(6))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal arity in application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
		endDefinition(101993)
lbl(102636)	definition(x(8) 102677 pid('SABuiltinApplication,checkArguments/slow' 1 pos('./compiler/StaticAnalysis.oz' 2007 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 767> 7)
		endDefinition(102636)
lbl(102677)	putRecord('#' [1 2 fast] x(15))
		setConstant(checkArguments)
		setValue(x(8))
		setValue(x(7))
lbl(102687)	definition(x(7) 103006 pid('SABuiltinApplication,doBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 2065 6) nil 9) <Q: 768> [y(8)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		exHandler(102958)
		move(x(0) y(1))
		createCond(102952)
lbl(102767)	lastClause
		clause
		createVariable(y(4))
		thread(102813)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(1) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		putConstant(system x(0))
		putConstant(1 x(3))
		callBI(tellRecordSize [x(0) x(3) x(1)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(1) x(0) x(3))
		unify(x(3) y(4))
		deAllocateL5
		return
lbl(102813)	ask
lbl(102814)	match(y(4) ht(102939 [onScalar(builtinUndefined 102817) onScalar(builtinArity 102878)]))
lbl(102817)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin undefined' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(102878)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin has wrong arity' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(102939)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2102)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(102952)	move(y(1) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(102958)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(builtin [x(0) x(1)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) builtinToken x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		move(x(5) y(4))
		move(x(2) x(0))
		sendMsg(init y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		popEx
		deAllocateL5
		return
		endDefinition(102687)
lbl(103006)	definition(x(8) 103032 pid('SABuiltinApplication,doBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 2065 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 768> 3)
		endDefinition(103006)
lbl(103032)	putRecord('#' [1 2 fast] x(16))
		setConstant(doBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(103042)	definition(x(7) 103240 pid('SABuiltinApplication,doNewName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2106 6) nil 4) <Q: 769> [y(8)])
		allocateL7
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getTop y(0) 1 cache)
		createVariable(y(5))
		testBool(y(4) 103115 103136)
lbl(103102)	createVariableMove(y(4) x(0))
		sendMsg(getOrigin y(2) 1 cache)
		testLiteral(y(4) generated 103123)
lbl(103115)	callBI('NewName' nil#[x(0)])
		unify(x(0) y(5))
		branch(103147)
lbl(103123)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		sendMsg(declareToplevelName y(0) 2 cache)
		branch(103147)
lbl(103136)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2112)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103147)	move(g(0) x(0))
		inlineDot(x(0) nameToken x(1) cache)
		move(x(1) y(2))
		createVariableMove(y(4) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(3) x(0))
		moveMoveYXYX(y(5) x(1) y(4) x(2))
		sendMsg(init y(6) 3 cache)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 103225 103227)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(5))
lbl(103225)	deAllocateL7
		return
lbl(103227)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2119)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(103042)
lbl(103240)	definition(x(8) 103266 pid('SABuiltinApplication,doNewName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 769> 3)
		endDefinition(103240)
lbl(103266)	putRecord('#' [1 2 fast] x(17))
		setConstant(doNewName)
		setValue(x(8))
		setValue(x(7))
lbl(103276)	definition(x(7) 103384 pid('SABuiltinApplication,doNewUniqueName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2123 6) nil 5) <Q: 770> [y(8)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		callBI('NewUniqueName' [x(0)]#[x(1)])
		move(g(0) x(2))
		inlineDot(x(2) nameToken x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(4) y(3))
		putConstant(true x(2))
		sendMsg(init y(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
		endDefinition(103276)
lbl(103384)	definition(x(8) 103410 pid('SABuiltinApplication,doNewUniqueName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 770> 3)
		endDefinition(103384)
lbl(103410)	putRecord('#' [1 2 fast] x(18))
		setConstant(doNewUniqueName)
		setValue(x(8))
		setValue(x(7))
lbl(103420)	definition(x(7) 103487 pid('SABuiltinApplication,doNewLock/fast' 1 pos('./compiler/StaticAnalysis.oz' 2136 6) nil 5) <Q: 771> [y(8)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI('NewLock' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103420)
lbl(103487)	definition(x(8) 103513 pid('SABuiltinApplication,doNewLock/slow' 1 pos('./compiler/StaticAnalysis.oz' 2136 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 771> 3)
		endDefinition(103487)
lbl(103513)	putRecord('#' [1 2 fast] x(19))
		setConstant(doNewLock)
		setValue(x(8))
		setValue(x(7))
lbl(103523)	definition(x(7) 103592 pid('SABuiltinApplication,doNewPort/fast' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 5) <Q: 772> [y(8)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) portToken x(2) cache)
		createVariable(x(3))
		callBI('NewPort' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103523)
lbl(103592)	definition(x(8) 103618 pid('SABuiltinApplication,doNewPort/slow' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 772> 3)
		endDefinition(103592)
lbl(103618)	putRecord('#' [1 2 fast] x(20))
		setConstant(doNewPort)
		setValue(x(8))
		setValue(x(7))
lbl(103628)	definition(x(7) 103697 pid('SABuiltinApplication,doNewCell/fast' 1 pos('./compiler/StaticAnalysis.oz' 2150 6) nil 5) <Q: 773> [y(8)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		createVariable(x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103628)
lbl(103697)	definition(x(8) 103723 pid('SABuiltinApplication,doNewCell/slow' 1 pos('./compiler/StaticAnalysis.oz' 2150 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 773> 3)
		endDefinition(103697)
lbl(103723)	putRecord('#' [1 2 fast] x(21))
		setConstant(doNewCell)
		setValue(x(8))
		setValue(x(7))
lbl(103733)	definition(x(7) 103857 pid('SABuiltinApplication,doNewArray/fast' 1 pos('./compiler/StaticAnalysis.oz' 2157 6) nil 6) <Q: 774> [y(8) g(60)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		move(g(0) x(0))
		inlineDot(x(0) arrayToken x(1) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		createVariable(x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(5) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(4 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103733)
lbl(103857)	definition(x(8) 103883 pid('SABuiltinApplication,doNewArray/slow' 1 pos('./compiler/StaticAnalysis.oz' 2157 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 774> 3)
		endDefinition(103857)
lbl(103883)	putRecord('#' [1 2 fast] x(22))
		setConstant(doNewArray)
		setValue(x(8))
		setValue(x(7))
lbl(103893)	definition(x(7) 103960 pid('SABuiltinApplication,doNewDictionary/fast' 1 pos('./compiler/StaticAnalysis.oz' 2166 6) nil 5) <Q: 775> [y(8) g(61)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI('NewDictionary' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103893)
lbl(103960)	definition(x(8) 103986 pid('SABuiltinApplication,doNewDictionary/slow' 1 pos('./compiler/StaticAnalysis.oz' 2166 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 775> 3)
		endDefinition(103960)
lbl(103986)	putRecord('#' [1 2 fast] x(23))
		setConstant(doNewDictionary)
		setValue(x(8))
		setValue(x(7))
lbl(103996)	definition(x(7) 104093 pid('SABuiltinApplication,doNewChunk/fast' 1 pos('./compiler/StaticAnalysis.oz' 2173 6) nil 4) <Q: 776> [y(8)])
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(g(0) x(0))
		inlineDot(x(0) chunkToken x(1) cache)
		move(y(2) x(2))
		callBI('NewChunk' [x(2)]#[x(3)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103996)
lbl(104093)	definition(x(8) 104119 pid('SABuiltinApplication,doNewChunk/slow' 1 pos('./compiler/StaticAnalysis.oz' 2173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 776> 3)
		endDefinition(104093)
lbl(104119)	putRecord('#' [1 2 fast] x(24))
		setConstant(doNewChunk)
		setValue(x(8))
		setValue(x(7))
lbl(104129)	definition(x(7) 104205 pid('SABuiltinApplication,doNewSpace/fast' 1 pos('./compiler/StaticAnalysis.oz' 2181 6) nil 5) <Q: 777> [y(8) g(62)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
lbl(104145)	definition(x(3) 104154 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2182 46) nil 1) unit nil)
		return
		endDefinition(104145)
lbl(104154)	callBI('Space.new' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(104129)
lbl(104205)	definition(x(8) 104231 pid('SABuiltinApplication,doNewSpace/slow' 1 pos('./compiler/StaticAnalysis.oz' 2181 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 777> 3)
		endDefinition(104205)
lbl(104231)	putRecord('#' [1 2 fast] x(25))
		setConstant(doNewSpace)
		setValue(x(8))
		setValue(x(7))
lbl(104241)	definition(x(7) 104405 pid('SABuiltinApplication,doNew/fast' 1 pos('./compiler/StaticAnalysis.oz' 2192 6) nil 5) <Q: 778> [y(8) y(33)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 674> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 624> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(g(0) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(5) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		testLiteral(y(3) unit 104377)
		deAllocateL6
		return
lbl(104377)	createVariableMove(y(2) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(5) x(4))
		putConstant(new x(3))
		deAllocateL6
		genCall(gci(g(1) true checkMessage true 5) 0)
		endDefinition(104241)
lbl(104405)	definition(x(8) 104431 pid('SABuiltinApplication,doNew/slow' 1 pos('./compiler/StaticAnalysis.oz' 2192 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 778> 3)
		endDefinition(104405)
lbl(104431)	putRecord('#' [1 2 fast] x(26))
		setConstant(doNew)
		setValue(x(8))
		setValue(x(7))
lbl(104441)	definition(x(7) 104531 pid('SABuiltinApplication,doEq/fast' 1 pos('./compiler/StaticAnalysis.oz' 2213 6) nil 4) <Q: 779> nil)
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		putConstant('equation failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(104441)
lbl(104531)	definition(x(8) 104557 pid('SABuiltinApplication,doEq/slow' 1 pos('./compiler/StaticAnalysis.oz' 2213 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 779> 3)
		endDefinition(104531)
lbl(104557)	putRecord('#' [1 2 fast] x(27))
		setConstant(doEq)
		setValue(x(8))
		setValue(x(7))
lbl(104567)	definition(x(7) 105282 pid('SABuiltinApplication,doDot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2226 6) nil 9) <Q: 780> [y(14) g(24) g(35) g(36)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104791)
lbl(104633)	createVariableMove(y(3) x(1))
		genFastCall(<Q: 647> 4)
		testBool(y(3) 104791 105269)
lbl(104643)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 625> 4)
		testLiteral(y(2) unit 104658)
lbl(104656)	deAllocateL5
		return
lbl(104658)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 104673)
		deAllocateL5
		return
lbl(104673)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 104690 104780)
		deAllocateL5
		return
lbl(104690)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 681> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from object' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104780)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2251)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104791)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104956)
lbl(104798)	createVariableMove(y(3) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(3) 104956 105258)
lbl(104808)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 624> 4)
		testLiteral(y(2) unit 104823)
lbl(104821)	deAllocateL5
		return
lbl(104823)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 104838)
		deAllocateL5
		return
lbl(104838)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 104855 104945)
		deAllocateL5
		return
lbl(104855)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 681> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from class' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104945)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2274)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104956)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105143)
lbl(104963)	testBI('IsRecord' [x(0)]#[x(1)] 105143)
lbl(104967)	move(y(4) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 105056)
		inlineAt(actualArgs x(3) cache)
		move(x(3) x(0))
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105056)	move(y(0) x(2))
		inlineDot(x(2) rep x(2) cache)
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 680> 4)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(105143)	move(y(2) x(0))
		testBI('IsRecordC' [x(0)]#[x(1)] 105256)
lbl(105150)	move(y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 623> 6)
		testBool(y(1) 105243 105245)
lbl(105163)	inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105243)	deAllocateL5
		return
lbl(105245)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2310)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105256)	deAllocateL5
		return
lbl(105258)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2265)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105269)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2238)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104567)
lbl(105282)	definition(x(8) 105308 pid('SABuiltinApplication,doDot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2226 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 780> 3)
		endDefinition(105282)
lbl(105308)	putRecord('#' [1 2 fast] x(28))
		setConstant(doDot)
		setValue(x(8))
		setValue(x(7))
lbl(105318)	definition(x(7) 105582 pid('SABuiltinApplication,doHat/fast' 1 pos('./compiler/StaticAnalysis.oz' 2327 6) nil 9) <Q: 781> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 623> 6)
		testBool(y(1) 105473 105569)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (^) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105473)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105567)
		move(y(0) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 680> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(3))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(105567)	deAllocateL5
		return
lbl(105569)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2337)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(105318)
lbl(105582)	definition(x(8) 105608 pid('SABuiltinApplication,doHat/slow' 1 pos('./compiler/StaticAnalysis.oz' 2327 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 781> 3)
		endDefinition(105582)
lbl(105608)	putRecord('#' [1 2 fast] x(29))
		setConstant(doHat)
		setValue(x(8))
		setValue(x(7))
lbl(105618)	definition(x(7) 105725 pid('SABuiltinApplication,doComma/fast' 1 pos('./compiler/StaticAnalysis.oz' 2363 6) nil 5) <Q: 782> [y(33)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 624> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		testLiteral(y(2) unit 105697)
		deAllocateL5
		return
lbl(105697)	createVariableMove(y(3) x(0))
		sendMsg(getMethods y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		putConstant('class' x(3))
		deAllocateL5
		genCall(gci(g(0) true checkMessage true 5) 0)
		endDefinition(105618)
lbl(105725)	definition(x(8) 105751 pid('SABuiltinApplication,doComma/slow' 1 pos('./compiler/StaticAnalysis.oz' 2363 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 782> 3)
		endDefinition(105725)
lbl(105751)	putRecord('#' [1 2 fast] x(30))
		setConstant(doComma)
		setValue(x(8))
		setValue(x(7))
lbl(105761)	definition(x(7) 106311 pid('SABuiltinApplication,doAssignAccess/fast' 1 pos('./compiler/StaticAnalysis.oz' 2376 6) nil 13) <Q: 783> [y(5) y(2)])
		allocateL10
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getSelf' y(0) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getAttributes y(4) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getProperties y(4) 1 cache)
		testLiteral(y(5) unit 105836)
		deAllocateL10
		return
lbl(105836)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 650> 4)
		move(y(4) x(0))
		testBI('Not' [x(0)]#[x(1)] 105854)
		deAllocateL10
		return
lbl(105854)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 105871 106298)
		deAllocateL10
		return
lbl(105871)	inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 627> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		createVariable(y(2))
		testLiteral(y(8) '<-' 105959)
lbl(105935)	getRecord('#' 3 y(2))
		unifyVariable(x(0))
		unifyLiteral(' <- ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(4))
		branch(106002)
lbl(105959)	testLiteral(y(8) '@' 105989)
lbl(105963)	getRecord('#' 4 y(2))
		unifyLiteral('@')
		unifyVariable(x(0))
		unifyLiteral(' = ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(4))
		branch(106002)
lbl(105989)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2395)
		setValue(y(8))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106002)	createVariable(y(3))
		testLiteral(y(6) unit 106013)
lbl(106008)	getLiteral(false y(3))
		branch(106024)
lbl(106013)	moveMoveYXYX(y(6) x(1) y(3) x(2))
		putConstant(final x(0))
		genFastCall(<P: 22> 6)
lbl(106024)	createVariable(y(4))
		testBool(y(3) 106035 106040)
		getLiteral('(correct use requires method application)' y(4))
		branch(106051)
lbl(106035)	getLiteral('(may be a correct forward declaration)' y(4))
		branch(106051)
lbl(106040)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106051)	createVariable(y(6))
		testBool(y(3) 106062 106067)
		getLiteral('In Final Class ' y(6))
		branch(106078)
lbl(106062)	getLiteral('In Class ' y(6))
		branch(106078)
lbl(106067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2401)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106078)	testBool(y(3) 106258 106287)
lbl(106082)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(1) x(2))
		inlineDot(x(2) printName x(3) cache)
		inlineAt(designator x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(3) y(7))
		move(x(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 627> 4)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		call(y(7) 2)
		createVariableMove(y(7) x(0))
		sendMsg(getDesignator y(1) 1 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(7) 1 cache)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 681> 4)
		move(y(7) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 677> 4)
		putRecord('#' 3 x(3))
		setConstant('applying ')
		setValue(y(9))
		setConstant(' to unavailable attribute')
		putRecord(hint [l m] x(5))
		setConstant('Expression')
		setValue(y(2))
		putRecord(pn 1 x(8))
		setValue(y(1))
		putRecord(hint [l m] x(7))
		setValue(y(6))
		setValue(x(8))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(y(5))
		putRecord(line 1 x(12))
		setValue(y(4))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(106258)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnforward x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 106285 106287)
		branch(106082)
lbl(106285)	deAllocateL10
		return
lbl(106287)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106298)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(105761)
lbl(106311)	definition(x(8) 106337 pid('SABuiltinApplication,doAssignAccess/slow' 1 pos('./compiler/StaticAnalysis.oz' 2376 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 783> 3)
		endDefinition(106311)
lbl(106337)	putRecord('#' [1 2 fast] x(31))
		setConstant(doAssignAccess)
		setValue(x(8))
		setValue(x(7))
lbl(106347)	definition(x(7) 106499 pid('SABuiltinApplication,doAnd/fast' 1 pos('./compiler/StaticAnalysis.oz' 2426 6) nil 4) <Q: 784> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106495)
lbl(106427)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 106493)
lbl(106434)	callBI('And' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 621> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106493)	deAllocateL5
		return
lbl(106495)	deAllocateL5
		return
		endDefinition(106347)
lbl(106499)	definition(x(8) 106525 pid('SABuiltinApplication,doAnd/slow' 1 pos('./compiler/StaticAnalysis.oz' 2426 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 784> 3)
		endDefinition(106499)
lbl(106525)	putRecord('#' [1 2 fast] x(32))
		setConstant(doAnd)
		setValue(x(8))
		setValue(x(7))
lbl(106535)	definition(x(7) 106687 pid('SABuiltinApplication,doOr/fast' 1 pos('./compiler/StaticAnalysis.oz' 2450 6) nil 4) <Q: 785> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106683)
lbl(106615)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 106681)
lbl(106622)	callBI('Or' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 621> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106681)	deAllocateL5
		return
lbl(106683)	deAllocateL5
		return
		endDefinition(106535)
lbl(106687)	definition(x(8) 106713 pid('SABuiltinApplication,doOr/slow' 1 pos('./compiler/StaticAnalysis.oz' 2450 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 785> 3)
		endDefinition(106687)
lbl(106713)	putRecord('#' [1 2 fast] x(33))
		setConstant(doOr)
		setValue(x(8))
		setValue(x(7))
lbl(106723)	definition(x(7) 106843 pid('SABuiltinApplication,doNot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2474 6) nil 4) <Q: 786> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106839)
		callBI('Not' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 621> 4)
		putConstant('boolean not failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106839)	deAllocateL4
		return
		endDefinition(106723)
lbl(106843)	definition(x(8) 106869 pid('SABuiltinApplication,doNot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2474 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 786> 3)
		endDefinition(106843)
lbl(106869)	putRecord('#' [1 2 fast] x(34))
		setConstant(doNot)
		setValue(x(8))
		setValue(x(7))
lbl(106879)	definition(x(7) 106999 pid('SABuiltinApplication,doLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2494 6) nil 4) <Q: 787> [y(4)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		move(g(0) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 106995)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(3) 1 cache)
		putConstant('label assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106995)	deAllocateL4
		return
		endDefinition(106879)
lbl(106999)	definition(x(8) 107025 pid('SABuiltinApplication,doLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2494 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 787> 3)
		endDefinition(106999)
lbl(107025)	putRecord('#' [1 2 fast] x(35))
		setConstant(doLabel)
		setValue(x(8))
		setValue(x(7))
lbl(107035)	definition(x(7) 107178 pid('SABuiltinApplication,doWidth/fast' 1 pos('./compiler/StaticAnalysis.oz' 2514 6) nil 5) <Q: 788> [y(8)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 107174)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Width' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('width assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(107174)	deAllocateL4
		return
		endDefinition(107035)
lbl(107178)	definition(x(8) 107204 pid('SABuiltinApplication,doWidth/slow' 1 pos('./compiler/StaticAnalysis.oz' 2514 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 788> 3)
		endDefinition(107178)
lbl(107204)	putRecord('#' [1 2 fast] x(36))
		setConstant(doWidth)
		setValue(x(8))
		setValue(x(7))
lbl(107214)	definition(x(7) 107357 pid('SABuiltinApplication,doProcedureArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2534 6) nil 5) <Q: 789> [y(8) g(42)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 627> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 107353)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('ProcedureArity' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('assertion of procedure arity failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(107353)	deAllocateL4
		return
		endDefinition(107214)
lbl(107357)	definition(x(8) 107383 pid('SABuiltinApplication,doProcedureArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2534 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 789> 3)
		endDefinition(107357)
lbl(107383)	putRecord('#' [1 2 fast] x(37))
		setConstant(doProcedureArity)
		setValue(x(8))
		setValue(x(7))
lbl(107393)	definition(x(7) 107444 pid('SABuiltinApplication,doCheckType/fast' 3 pos('./compiler/StaticAnalysis.oz' 2554 6) nil 3) <Q: 790> [y(33)])
		match(x(0) ht(107429 [onScalar(det 107402) onScalar(rec 107411) onScalar(kind 107420)]))
lbl(107402)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoDetType> true 2) 0)
lbl(107411)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoRecDetType> true 2) 0)
lbl(107420)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoKindedType> true 2) 0)
lbl(107429)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2562)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(107393)
lbl(107444)	definition(x(8) 107485 pid('SABuiltinApplication,doCheckType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2554 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 790> 7)
		endDefinition(107444)
lbl(107485)	putRecord('#' [1 2 fast] x(38))
		setConstant(doCheckType)
		setValue(x(8))
		setValue(x(7))
lbl(107495)	definition(x(7) 107724 pid('SABuiltinApplication,DoDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2565 6) nil 4) <Q: 791> [y(5) y(10)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(4) 107709 107711)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 107632 107682)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107693)
lbl(107632)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107693)
lbl(107682)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2575)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107693)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(107709)	deAllocateL5
		return
lbl(107711)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2572)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107495)
lbl(107724)	definition(x(8) 107759 pid('SABuiltinApplication,DoDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2565 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 791> 5)
		endDefinition(107724)
lbl(107759)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: DoDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(107769)	definition(x(7) 107981 pid('SABuiltinApplication,DoRecDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2588 6) nil 4) <Q: 792> [y(10)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 628> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testLiteral(y(2) true 107893)
lbl(107843)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107963)
lbl(107893)	testLiteral(y(2) false 107947)
lbl(107897)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107963)
lbl(107947)	match(y(2) ht(107950 [onScalar(unit 107963)]))
lbl(107950)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2609)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107963)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(107769)
lbl(107981)	definition(x(8) 108016 pid('SABuiltinApplication,DoRecDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2588 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 792> 5)
		endDefinition(107981)
lbl(108016)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: DoRecDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(108026)	definition(x(7) 108253 pid('SABuiltinApplication,DoKindedType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2614 6) nil 4) <Q: 793> [y(7) y(10)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 651> 4)
		testBool(y(4) 108235 108224)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 627> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 108163 108213)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(108235)
lbl(108163)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(108235)
lbl(108213)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2621)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108224)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2620)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108235)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(108026)
lbl(108253)	definition(x(8) 108288 pid('SABuiltinApplication,DoKindedType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2614 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 793> 5)
		endDefinition(108253)
lbl(108288)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: DoKindedType>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 33 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		move(y(33) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABuiltinApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(33))
		setConstant(nil)
lbl(108395)	definition(x(7) 108887 pid('SAApplication,AssertArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2637 6) nil 13) <Q: 794> [y(12)])
		allocateL7
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		createVariable(y(3))
		match(y(2) ht(108596 [onScalar(0 108435) onScalar(1 108458) onScalar(2 108481) onScalar(3 108504) onScalar(4 108527) onScalar(5 108550) onScalar(6 108573)]))
lbl(108435)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108458)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant(unaryProcOrObject x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108481)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108504)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108527)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108550)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108573)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(108617)
lbl(108596)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
lbl(108617)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 671> 6)
		testBool(y(2) 108634 108874)
		deAllocateL7
		return
lbl(108634)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(108653)	definition(x(1) 108679 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2655 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(108653)
lbl(108679)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(108690)	definition(x(1) 108707 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2656 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 629> 5)
		endDefinition(108690)
lbl(108707)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 682> 4)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(3))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(4))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(5))
		setValue(y(2))
		putRecord('#' 2 x(3))
		setConstant('wrong arity in application of ')
		setValue(x(5))
		putRecord(hint [l m] x(6))
		setConstant('Procedure type')
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Application arity')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Application (names)')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (values)')
		setValue(y(4))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(6))
		setValue(x(7))
		move(y(5) x(0))
		putConstant('type error' x(2))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2649)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108395)
lbl(108887)	definition(x(8) 108913 pid('SAApplication,AssertArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2637 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 794> 3)
		endDefinition(108887)
lbl(108913)	putRecord('#' [1 2 fast] x(9))
		setConstant(<M: AssertArity>)
		setValue(x(8))
		setValue(x(7))
lbl(108923)	definition(x(7) 109723 pid('SAApplication,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2671 6) nil 15) <Q: 795> [y(34) y(2) y(17) y(33) g(53) g(54) g(42) y(5)])
		allocateL8
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(108949)	definition(x(1) 108969 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2678 22) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(108949)
lbl(108969)	genFastCall(<P: 34> 4)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorBuiltin false 1) 0)
		testBool(y(1) 109127 109710)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		move(g(2) x(0))
		move(y(3) x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(1))
		testLiteral(x(3) unit 109049)
lbl(109035)	move(y(0) x(0))
		move(g(4) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		branch(109101)
lbl(109049)	moveMoveXYYX(x(3) y(2) y(0) x(0))
		move(g(5) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		testBool(y(1) 109101 109090)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		inlinePlus1(x(1) x(2))
		move(y(0) x(1))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(g(3) x(0))
		callBI(',' [x(0) x(3)]#nil)
		branch(109101)
lbl(109090)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2702)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109101)	testBool(y(1) 109114 109116)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL8
		genCall(gci(g(3) true assertTypes true 2) 0)
lbl(109114)	deAllocateL8
		return
lbl(109116)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2721)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109127)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorProcedure false 1) 0)
		testBool(y(1) 109417 109699)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		inlineAt(actualArgs x(0) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 109415)
		inlineAt(actualArgs x(3) cache)
lbl(109196)	definition(x(4) 109222 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2736 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(109196)
lbl(109222)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(109239)	definition(x(1) 109256 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2737 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 629> 5)
		endDefinition(109239)
lbl(109256)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putList(x(3))
		setValue(x(4))
		setValue(y(4))
		moveMoveXYXY(x(1) y(4) x(2) y(6))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(5))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 679> 4)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (names)')
		setValue(y(7))
		putRecord(hint [l m] x(14))
		setConstant('Application (values)')
		setValue(y(5))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(6) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in application' x(3))
		move(y(4) x(4))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(109415)	deAllocateL8
		return
lbl(109417)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorObject false 1) 0)
		testBool(y(1) 109603 109688)
		inlineAt(designator x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getClassNode y(2) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(2) 1 109525)
lbl(109479)	testLiteral(y(3) unit 109485)
		deAllocateL8
		return
lbl(109485)	inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(4))
		putConstant(object x(3))
		deAllocateL8
		genCall(gci(g(0) true checkMessage true 5) 0)
lbl(109525)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(pn 1 x(7))
		setValue(y(1))
		putRecord(hint [l m] x(6))
		setConstant('Object')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setConstant(1)
		putRecord(hint [l m] x(11))
		setConstant('Found')
		setValue(y(2))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(1))
		setValue(x(6))
		setValue(x(8))
		move(x(5) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in object application' x(3))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(109603)	inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(1) 109670 109677)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 629> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(4) cache)
		putRecord(oz 1 x(5))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('applying non-procedure and non-object ')
		setValue(x(5))
		move(x(4) x(0))
		putConstant('static analysis error' x(1))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(109670)	move(y(0) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: AssertArity> true 1) 0)
lbl(109677)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2780)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109688)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2752)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109699)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2725)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2680)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108923)
lbl(109723)	definition(x(8) 109749 pid('SAApplication,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2671 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 795> 3)
		endDefinition(109723)
lbl(109749)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(109759)	definition(x(7) 109825 pid('SAApplication,checkDesignatorBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 2794 6) nil 3) <Q: 796> [y(5) y(0)])
		allocateL2
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(1) 109807 109812)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailCall(g(1) 2)
lbl(109807)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(109812)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2796)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109759)
lbl(109825)	definition(x(8) 109851 pid('SAApplication,checkDesignatorBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 2794 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 796> 3)
		endDefinition(109825)
lbl(109851)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkDesignatorBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(109861)	definition(x(7) 109929 pid('SAApplication,checkDesignatorProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 2798 6) nil 3) <Q: 797> [y(5) g(34)])
		allocateL2
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(1) 109911 109916)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		callBI('IsProcedure' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(109911)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(109916)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2800)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109861)
lbl(109929)	definition(x(8) 109955 pid('SAApplication,checkDesignatorProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 2798 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 797> 3)
		endDefinition(109929)
lbl(109955)	putRecord('#' [1 2 fast] x(12))
		setConstant(checkDesignatorProcedure)
		setValue(x(8))
		setValue(x(7))
lbl(109965)	definition(x(7) 110031 pid('SAApplication,checkDesignatorObject/fast' 1 pos('./compiler/StaticAnalysis.oz' 2802 6) nil 3) <Q: 798> [y(5) y(14)])
		allocateL2
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(1) 110013 110018)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 647> 5)
lbl(110013)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(110018)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2804)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109965)
lbl(110031)	definition(x(8) 110057 pid('SAApplication,checkDesignatorObject/slow' 1 pos('./compiler/StaticAnalysis.oz' 2802 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 798> 3)
		endDefinition(110031)
lbl(110057)	putRecord('#' [1 2 fast] x(13))
		setConstant(checkDesignatorObject)
		setValue(x(8))
		setValue(x(7))
lbl(110067)	definition(x(7) 110119 pid('SAApplication,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2806 6) nil 2) <Q: 799> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(110093)	definition(x(1) 110113 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2809 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110093)
lbl(110113)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(110067)
lbl(110119)	definition(x(8) 110145 pid('SAApplication,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2806 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 799> 3)
		endDefinition(110119)
lbl(110145)	putRecord('#' [1 2 fast] x(14))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(34) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(110189)	definition(x(7) 110198 pid('SABoolCase,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2817 6) nil 1) <Q: 800> nil)
		return
		endDefinition(110189)
lbl(110198)	definition(x(8) 110224 pid('SABoolCase,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2817 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 800> 3)
		endDefinition(110198)
lbl(110224)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(110234)	definition(x(7) 110882 pid('SABoolCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2823 6) nil 9) <Q: 801> [y(5) g(20) y(16) y(12) y(10)])
		allocateL6
		inlineAt(arbiter x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(1) 110553 110869)
lbl(110262)	inlineAt(arbiter x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 627> 4)
		move(y(1) x(0))
		testBI('IsBool' [x(0)]#[x(1)] 110553)
lbl(110280)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(arbiter x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 631> 4)
		testBool(y(3) 110430 110542)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always true')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(110430)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always false')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(110542)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2834)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(110553)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		move(g(3) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(bool x(0))
		putConstant(nil x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 671> 6)
		testBool(y(3) 110704 110858)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(4) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'true' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(4) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'false' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL6
		tailSendMsg(setTopNeeded x(2) 2 cache)
lbl(110704)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(arbiter x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		inlineAt(arbiter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getType x(2) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 682> 4)
		createVariable(y(4))
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 110785)
		getLiteral(nil y(4))
		branch(110805)
lbl(110785)	getList(y(4))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Name')
		unifyVariable(x(2))
		getRecord(pn 1 x(2))
		unifyValue(y(1))
lbl(110805)	putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Value')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Type')
		setValue(y(5))
		putList(x(7))
		setValue(x(8))
		setValue(y(4))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('type error' x(2))
		putConstant('Non-boolean arbiter in boolean case statement' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(110858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2867)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(110869)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2826)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(110234)
lbl(110882)	definition(x(8) 110908 pid('SABoolCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2823 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 801> 3)
		endDefinition(110882)
lbl(110908)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110918)	definition(x(7) 111002 pid('SABoolCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2897 6) nil 3) <Q: 802> nil)
		allocateL3
		inlineAt(arbiter x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110918)
lbl(111002)	definition(x(8) 111028 pid('SABoolCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2897 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 802> 3)
		endDefinition(111002)
lbl(111028)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolCase' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(21))
		setConstant(nil)
lbl(111075)	definition(x(7) 111084 pid('SABoolClause,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2912 6) nil 1) <Q: 803> nil)
		return
		endDefinition(111075)
lbl(111084)	definition(x(8) 111110 pid('SABoolClause,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2912 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 803> 3)
		endDefinition(111084)
lbl(111110)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111120)	definition(x(7) 111227 pid('SABoolClause,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2915 6) nil 3) <Q: 804> [y(11)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 688> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(4) x(0))
		createVariableMove(y(5) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL6
		genFastCall(<Q: 667> 3)
		endDefinition(111120)
lbl(111227)	definition(x(8) 111268 pid('SABoolClause,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2915 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 804> 7)
		endDefinition(111227)
lbl(111268)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(111278)	definition(x(7) 111351 pid('SABoolClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 3) <Q: 805> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(111278)
lbl(111351)	definition(x(8) 111377 pid('SABoolClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 805> 3)
		endDefinition(111351)
lbl(111377)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(111387)	definition(x(7) 111403 pid('SABoolClause,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 2) <Q: 806> [y(11)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(111387)
lbl(111403)	definition(x(8) 111429 pid('SABoolClause,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 806> 3)
		endDefinition(111403)
lbl(111429)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolClause' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111469)	definition(x(7) 111478 pid('SAPatternCase,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2949 6) nil 1) <Q: 807> nil)
		return
		endDefinition(111469)
lbl(111478)	definition(x(8) 111504 pid('SAPatternCase,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2949 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 807> 3)
		endDefinition(111478)
lbl(111504)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111514)	definition(x(7) 111621 pid('SAPatternCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 3) <Q: 808> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(2))
lbl(111549)	definition(x(1) 111582 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2963 3) nil 4) unit [x(2) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(arbiter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(saDescendWith x(3) 2 cache)
		endDefinition(111549)
lbl(111582)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescendWith x(2) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(111514)
lbl(111621)	definition(x(8) 111647 pid('SAPatternCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 808> 3)
		endDefinition(111621)
lbl(111647)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(111657)	definition(x(7) 111758 pid('SAPatternCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2968 6) nil 3) <Q: 809> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(111704)	definition(x(1) 111724 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2975 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(111704)
lbl(111724)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(111657)
lbl(111758)	definition(x(8) 111784 pid('SAPatternCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2968 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 809> 3)
		endDefinition(111758)
lbl(111784)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternCase' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111825)	definition(x(7) 111884 pid('SAPatternClause,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2983 6) nil 3) <Q: 810> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(111825)
lbl(111884)	definition(x(8) 111910 pid('SAPatternClause,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2983 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 810> 3)
		endDefinition(111884)
lbl(111910)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111920)	definition(x(7) 112076 pid('SAPatternClause,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2993 6) nil 3) <Q: 811> [y(11)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 688> 6)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 666> 4)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		createVariableMove(y(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		putConstant('pattern never matches' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(pattern x(1) cache)
		move(y(1) x(0))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		sendMsg(resetErrorMsg y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 667> 3)
		endDefinition(111920)
lbl(112076)	definition(x(8) 112111 pid('SAPatternClause,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2993 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 811> 5)
		endDefinition(112076)
lbl(112111)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112121)	definition(x(7) 112140 pid('SAPatternClause,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3019 6) nil 2) <Q: 812> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(112121)
lbl(112140)	definition(x(8) 112166 pid('SAPatternClause,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3019 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 812> 3)
		endDefinition(112140)
lbl(112166)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternClause' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(27))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SARecordPattern' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112234)	definition(x(7) 112253 pid('SAEquationPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3034 6) nil 2) <Q: 813> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(112234)
lbl(112253)	definition(x(8) 112279 pid('SAEquationPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3034 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 813> 3)
		endDefinition(112253)
lbl(112279)	putRecord('#' [1 2 fast] x(9))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(112289)	definition(x(7) 112308 pid('SAEquationPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3037 6) nil 2) <Q: 814> nil)
		inlineAt(right x(1) cache)
		tailSendMsg('setValue' x(1) 1 cache)
		endDefinition(112289)
lbl(112308)	definition(x(8) 112334 pid('SAEquationPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3037 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 814> 3)
		endDefinition(112308)
lbl(112334)	putRecord('#' [1 2 fast] x(10))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(112344)	definition(x(7) 112363 pid('SAEquationPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3040 6) nil 2) <Q: 815> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(112344)
lbl(112363)	definition(x(8) 112389 pid('SAEquationPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3040 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 815> 3)
		endDefinition(112363)
lbl(112389)	putRecord('#' [1 2 fast] x(11))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(112399)	definition(x(7) 112418 pid('SAEquationPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3043 6) nil 2) <Q: 816> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(setLastValue x(1) 1 cache)
		endDefinition(112399)
lbl(112418)	definition(x(8) 112444 pid('SAEquationPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3043 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 816> 3)
		endDefinition(112418)
lbl(112444)	putRecord('#' [1 2 fast] x(12))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(112454)	definition(x(7) 112473 pid('SAEquationPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 3046 6) nil 2) <Q: 817> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLabel x(1) 1 cache)
		endDefinition(112454)
lbl(112473)	definition(x(8) 112499 pid('SAEquationPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 3046 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 817> 3)
		endDefinition(112473)
lbl(112499)	putRecord('#' [1 2 fast] x(13))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(112509)	definition(x(7) 112528 pid('SAEquationPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 3049 6) nil 2) <Q: 818> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getArgs x(1) 1 cache)
		endDefinition(112509)
lbl(112528)	definition(x(8) 112554 pid('SAEquationPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3049 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 818> 3)
		endDefinition(112528)
lbl(112554)	putRecord('#' [1 2 fast] x(14))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(112564)	definition(x(7) 112583 pid('SAEquationPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3052 6) nil 2) <Q: 819> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(112564)
lbl(112583)	definition(x(8) 112609 pid('SAEquationPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3052 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 819> 3)
		endDefinition(112583)
lbl(112609)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(112619)	definition(x(7) 112638 pid('SAEquationPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 3055 6) nil 2) <Q: 820> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isOpen x(1) 1 cache)
		endDefinition(112619)
lbl(112638)	definition(x(8) 112664 pid('SAEquationPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 3055 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 820> 3)
		endDefinition(112638)
lbl(112664)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(112674)	definition(x(7) 112693 pid('SAEquationPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3059 6) nil 2) <Q: 821> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(112674)
lbl(112693)	definition(x(8) 112719 pid('SAEquationPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3059 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 821> 3)
		endDefinition(112693)
lbl(112719)	putRecord('#' [1 2 fast] x(17))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(112729)	definition(x(7) 112772 pid('SAEquationPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3063 6) nil 3) <Q: 822> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(112729)
lbl(112772)	definition(x(8) 112798 pid('SAEquationPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3063 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 822> 3)
		endDefinition(112772)
lbl(112798)	putRecord('#' [1 2 fast] x(18))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(112808)	definition(x(7) 112856 pid('SAEquationPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3071 6) nil 4) <Q: 823> nil)
		allocateL3
		inlineAt(right x(2) cache)
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
		endDefinition(112808)
lbl(112856)	definition(x(8) 112891 pid('SAEquationPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3071 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 823> 5)
		endDefinition(112856)
lbl(112891)	putRecord('#' [1 2 fast] x(19))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(112901)	definition(x(7) 112920 pid('SAEquationPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 3080 6) nil 3) <Q: 824> nil)
		inlineAt(right x(2) cache)
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(112901)
lbl(112920)	definition(x(8) 112955 pid('SAEquationPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 3080 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 824> 5)
		endDefinition(112920)
lbl(112955)	putRecord('#' [1 2 fast] x(20))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(112965)	definition(x(7) 113003 pid('SAEquationPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3087 6) nil 2) <Q: 825> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(112965)
lbl(113003)	definition(x(8) 113029 pid('SAEquationPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3087 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 825> 3)
		endDefinition(113003)
lbl(113029)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquationPattern' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(21))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAAbstractElse' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
lbl(113123)	definition(x(7) 113132 pid('SAElseNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 1) <Q: 826> nil)
		return
		endDefinition(113123)
lbl(113132)	definition(x(8) 113158 pid('SAElseNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 826> 3)
		endDefinition(113132)
lbl(113158)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(113168)	definition(x(7) 113241 pid('SAElseNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3105 6) nil 3) <Q: 827> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(113168)
lbl(113241)	definition(x(8) 113267 pid('SAElseNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3105 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 827> 3)
		endDefinition(113241)
lbl(113267)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(113277)	definition(x(7) 113384 pid('SAElseNode,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 3116 6) nil 3) <Q: 828> [y(11)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 688> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 666> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL5
		genFastCall(<Q: 667> 3)
		endDefinition(113277)
lbl(113384)	definition(x(8) 113425 pid('SAElseNode,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3116 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 828> 7)
		endDefinition(113384)
lbl(113425)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(113435)	definition(x(7) 113526 pid('SAElseNode,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3130 6) nil 3) <Q: 829> [y(11)])
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 688> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(113435)
lbl(113526)	definition(x(8) 113561 pid('SAElseNode,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3130 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 829> 5)
		endDefinition(113526)
lbl(113561)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(113571)	definition(x(7) 113587 pid('SAElseNode,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3143 6) nil 2) <Q: 830> [y(11)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(113571)
lbl(113587)	definition(x(8) 113613 pid('SAElseNode,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3143 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 830> 3)
		endDefinition(113587)
lbl(113613)	putRecord('#' [1 2 fast] x(13))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAElseNode' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
lbl(113661)	definition(x(7) 113670 pid('SANoElse,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3149 6) nil 1) <Q: 831> nil)
		return
		endDefinition(113661)
lbl(113670)	definition(x(8) 113696 pid('SANoElse,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3149 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 831> 3)
		endDefinition(113670)
lbl(113696)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(113706)	definition(x(7) 113715 pid('SANoElse,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 3155 6) nil 3) <Q: 832> nil)
		return
		endDefinition(113706)
lbl(113715)	definition(x(8) 113756 pid('SANoElse,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3155 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 832> 7)
		endDefinition(113715)
lbl(113756)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(113766)	definition(x(7) 113775 pid('SANoElse,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3158 6) nil 2) <Q: 833> nil)
		return
		endDefinition(113766)
lbl(113775)	definition(x(8) 113810 pid('SANoElse,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3158 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 833> 5)
		endDefinition(113775)
lbl(113810)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(113820)	definition(x(7) 113829 pid('SANoElse,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3161 6) nil 1) <Q: 834> nil)
		return
		endDefinition(113820)
lbl(113829)	definition(x(8) 113855 pid('SANoElse,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3161 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 834> 3)
		endDefinition(113829)
lbl(113855)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANoElse' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(113895)	definition(x(7) 113904 pid('SAThreadNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3167 6) nil 1) <Q: 835> nil)
		return
		endDefinition(113895)
lbl(113904)	definition(x(8) 113930 pid('SAThreadNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3167 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 835> 3)
		endDefinition(113904)
lbl(113930)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(113940)	definition(x(7) 114013 pid('SAThreadNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3173 6) nil 3) <Q: 836> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(113940)
lbl(114013)	definition(x(8) 114039 pid('SAThreadNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 836> 3)
		endDefinition(114013)
lbl(114039)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAThreadNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(114078)	definition(x(7) 114087 pid('SATryNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3187 6) nil 1) <Q: 837> nil)
		return
		endDefinition(114078)
lbl(114087)	definition(x(8) 114113 pid('SATryNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3187 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 837> 3)
		endDefinition(114087)
lbl(114113)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(114123)	definition(x(7) 114241 pid('SATryNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3193 6) nil 3) <Q: 838> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(tryStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 667> 2)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(catchStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(114123)
lbl(114241)	definition(x(8) 114267 pid('SATryNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3193 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 838> 3)
		endDefinition(114241)
lbl(114267)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATryNode' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(114306)	definition(x(7) 114315 pid('SALockNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3226 6) nil 1) <Q: 839> nil)
		return
		endDefinition(114306)
lbl(114315)	definition(x(8) 114341 pid('SALockNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3226 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 839> 3)
		endDefinition(114315)
lbl(114341)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(114351)	definition(x(7) 114407 pid('SALockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3232 6) nil 3) <Q: 840> [y(11)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(114351)
lbl(114407)	definition(x(8) 114433 pid('SALockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 840> 3)
		endDefinition(114407)
lbl(114433)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(114443)	definition(x(7) 114462 pid('SALockNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3239 6) nil 2) <Q: 841> nil)
		inlineAt(lockVar x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(114443)
lbl(114462)	definition(x(8) 114488 pid('SALockNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3239 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 841> 3)
		endDefinition(114462)
lbl(114488)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SALockNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(29))
		setConstant(nil)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
lbl(114541)	definition(x(7) 114558 pid('SAClassNode,getDesignator/fast' 1 pos('./compiler/StaticAnalysis.oz' 3249 6) nil 2) <Q: 842> nil)
		inlineAt(designator x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(114541)
lbl(114558)	definition(x(8) 114584 pid('SAClassNode,getDesignator/slow' 1 pos('./compiler/StaticAnalysis.oz' 3249 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 842> 3)
		endDefinition(114558)
lbl(114584)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDesignator)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(29))
lbl(114596)	definition(x(7) 114926 pid('SAClassNode,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 3252 6) nil 5) <Q: 843> [y(8) y(18) y(5) y(29)])
		allocateL5
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 675> 4)
		move(g(0) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(1) x(0))
		inlineAssign(isToplevel x(0) cache)
		inlineAt(parents x(0) cache)
		move(g(1) x(1))
		inlineDot(x(1) 'class' x(4) cache)
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(2) 114797 114853)
		inlineAt(parents x(0) cache)
lbl(114712)	definition(x(1) 114732 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3271 25) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getValue x(2) 1 cache)
		endDefinition(114712)
lbl(114732)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(parents x(0) cache)
		move(g(2) x(1))
		createVariable(x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 684> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(3) true inheritProperties false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true inheritAttributes false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true inheritFeatures false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true inheritMethods false 3) 0)
		branch(114864)
lbl(114797)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(4))
		setValue(y(4))
		putRecord('#' 2 x(2))
		setConstant('inheriting from non-class ')
		setValue(x(4))
		move(y(3) x(0))
		putConstant('type error' x(1))
		sendMsg(error y(2) [coord kind msg] cache)
		branch(114864)
lbl(114853)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3268)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114864)	putConstant('class definition failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(designator x(0) cache)
		inlineAt(value x(1) cache)
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(designator x(2) cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(114596)
lbl(114926)	definition(x(8) 114952 pid('SAClassNode,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 3252 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 843> 3)
		endDefinition(114926)
lbl(114952)	putRecord('#' [1 2 fast] x(10))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(114962)	definition(x(7) 115344 pid('SAClassNode,inheritProperties/fast' 2 pos('./compiler/StaticAnalysis.oz' 3325 6) nil 6) <Q: 844> [y(18) y(20) g(19) y(5)])
		allocateL6
		inlineAt(properties x(4) cache)
		move(g(0) x(2))
		inlineDot(x(2) atom x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(3) 115273 115331)
		inlineAt(properties x(0) cache)
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 39> 6)
lbl(115033)	definition(x(1) 115086 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3341 21) nil 2) unit [g(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 650> 4)
		testBool(y(2) 115068 115073)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getProperties x(1) 1 cache)
lbl(115068)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(115073)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3342)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115033)
lbl(115086)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
lbl(115095)	definition(x(1) 115123 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3349 6) nil 3) unit nil)
		testLiteral(x(0) unit 115109)
lbl(115105)	getLiteral(false x(1))
		return
lbl(115109)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant(final x(0))
		genFastCall(<P: 22> 7)
		endDefinition(115095)
lbl(115123)	move(y(2) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 686> 8)
		testBool(y(5) 115199 115262)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord('#' 2 x(2))
		setConstant('inheritance from final class ')
		setValue(x(4))
		move(y(2) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL6
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(115199)	definition(x(1) 115217 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3359 34) nil 4) unit nil)
		putConstant(unit x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(115199)
lbl(115217)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		inlineAt(value x(0) cache)
		putList(x(2))
		setValue(y(3))
		setValue(y(0))
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 690> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL6
		tailSendMsg(setProperties x(1) 1 cache)
lbl(115262)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3352)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115273)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(3))
		putRecord('#' 2 x(2))
		setConstant('non-atomic class property ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL6
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(115331)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3336)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114962)
lbl(115344)	definition(x(8) 115379 pid('SAClassNode,inheritProperties/slow' 1 pos('./compiler/StaticAnalysis.oz' 3325 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 844> 5)
		endDefinition(115344)
lbl(115379)	putRecord('#' [1 2 fast] x(11))
		setConstant(inheritProperties)
		setValue(x(8))
		setValue(x(7))
lbl(115389)	definition(x(7) 115764 pid('SAClassNode,inheritAttributes/fast' 3 pos('./compiler/StaticAnalysis.oz' 3373 6) nil 7) <Q: 845> [y(19) y(18) y(20) y(13)])
		allocateL6
		inlineAt(attributes x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(5) 115684 115751)
		move(y(3) x(0))
		move(g(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 687> 4)
		testBool(y(3) 115603 115673)
		testBool(y(2) 115590 115592)
lbl(115475)	definition(x(1) 115495 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3394 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getAttributes x(2) 1 cache)
		endDefinition(115475)
lbl(115495)	move(y(1) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(1))
		putConstant(unit x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 115588)
lbl(115523)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 115575 115577)
lbl(115539)	inlineAt(value x(0) cache)
		putList(x(2))
		setValue(y(4))
		setValue(y(0))
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 690> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL6
		tailSendMsg(setAttributes x(1) 1 cache)
lbl(115575)	deAllocateL6
		return
lbl(115577)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3398)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115588)	deAllocateL6
		return
lbl(115590)	deAllocateL6
		return
lbl(115592)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3393)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115603)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 681> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Attributes found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate attributes in class definition' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115673)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3389)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115684)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Attribute found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class attribute ' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115751)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3383)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115389)
lbl(115764)	definition(x(8) 115805 pid('SAClassNode,inheritAttributes/slow' 1 pos('./compiler/StaticAnalysis.oz' 3373 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 845> 7)
		endDefinition(115764)
lbl(115805)	putRecord('#' [1 2 fast] x(12))
		setConstant(inheritAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(115815)	definition(x(7) 116190 pid('SAClassNode,inheritFeatures/fast' 3 pos('./compiler/StaticAnalysis.oz' 3432 6) nil 7) <Q: 846> [y(19) y(18) y(20) y(13)])
		allocateL6
		inlineAt(features x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(5) 116110 116177)
		move(y(3) x(0))
		move(g(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 687> 4)
		testBool(y(3) 116029 116099)
		testBool(y(2) 116016 116018)
lbl(115901)	definition(x(1) 115921 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3453 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFeatures x(2) 1 cache)
		endDefinition(115901)
lbl(115921)	move(y(1) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(1))
		putConstant(unit x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 116014)
lbl(115949)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 116001 116003)
lbl(115965)	inlineAt(value x(0) cache)
		putList(x(2))
		setValue(y(4))
		setValue(y(0))
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 690> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL6
		tailSendMsg(setFeatures x(1) 1 cache)
lbl(116001)	deAllocateL6
		return
lbl(116003)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3457)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116014)	deAllocateL6
		return
lbl(116016)	deAllocateL6
		return
lbl(116018)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3452)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116029)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 681> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in class definition' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(116099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3448)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116110)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class feature ' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(116177)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3442)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115815)
lbl(116190)	definition(x(8) 116231 pid('SAClassNode,inheritFeatures/slow' 1 pos('./compiler/StaticAnalysis.oz' 3432 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 846> 7)
		endDefinition(116190)
lbl(116231)	putRecord('#' [1 2 fast] x(13))
		setConstant(inheritFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(116241)	definition(x(7) 117258 pid('SAClassNode,inheritMethods/fast' 3 pos('./compiler/StaticAnalysis.oz' 3490 6) nil 10) <Q: 847> [y(18) y(20) g(29) g(59)])
		allocateL10
		inlineAt(methods x(3) cache)
lbl(116253)	definition(x(4) 116273 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3491 23) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPattern x(2) 1 cache)
		endDefinition(116253)
lbl(116273)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(116293)	definition(x(1) 116338 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3501 3) nil 4) unit [g(0)])
		shallowGuard(116325)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(116309)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) literal x(3) cache)
		move(x(2) x(0))
		tailCall(x(3) 2)
lbl(116325)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3501)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116293)
lbl(116338)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 684> 8)
lbl(116350)	definition(x(1) 116409 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3503 3) nil 6) unit [g(0)])
		shallowGuard(116396)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(116374)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(116396)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116350)
lbl(116409)	move(y(3) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 684> 8)
lbl(116421)	definition(x(1) 116488 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3505 3) nil 6) unit [g(0)])
		shallowGuard(116475)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(116445)	shallowThen
		testLiteral(x(5) unit 116454)
		getLiteral(true x(1))
		return
lbl(116454)	move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(5) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(116475)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3505)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116421)
lbl(116488)	move(y(3) x(0))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 684> 8)
		testBool(y(5) 117173 117245)
		testBool(y(7) 117030 117162)
		testBool(y(9) 116887 117019)
lbl(116512)	definition(x(1) 116612 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3517 6) nil 6) unit [g(1)])
		shallowGuard(116599)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(116536)	shallowThen
		allocateL4
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(2) x(0))
		genFastCall(<Q: 627> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		genFastCall(<P: 29> 6)
		testLiteral(y(3) unit 116586)
		unify(y(1) y(3))
		deAllocateL4
		return
lbl(116586)	move(y(3) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
lbl(116599)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3517)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116512)
lbl(116612)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
lbl(116621)	definition(x(1) 116655 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3523 27) nil 4) unit nil)
		shallowGuard(116642)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(116637)	shallowThen
		unify(x(1) x(2))
		return
lbl(116642)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3523)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116621)
lbl(116655)	move(y(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 687> 4)
		testBool(y(5) 116806 116876)
		testBool(y(2) 116793 116795)
lbl(116681)	definition(x(1) 116701 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3531 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getMethods x(2) 1 cache)
		endDefinition(116681)
lbl(116701)	move(y(1) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		move(g(2) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 116780 116782)
lbl(116726)	move(y(0) x(1))
		putConstant(unit x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 116778)
lbl(116745)	putConstant(m x(3))
		move(y(4) x(0))
		callBI(record [x(3) x(0)]#[x(1)])
		move(y(0) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 692> 6)
		inlineAt(value x(1) cache)
		move(y(1) x(0))
		deAllocateL10
		tailSendMsg(setMethods x(1) 1 cache)
lbl(116778)	deAllocateL10
		return
lbl(116780)	deAllocateL10
		return
lbl(116782)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3535)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116793)	deAllocateL10
		return
lbl(116795)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3530)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116806)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 681> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 677> 4)
		putRecord(hint [l m] x(5))
		setConstant('Method names')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate method names in class definition' x(3))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(116876)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116887)	getRecord('#' 2 y(8))
		unifyVariable(y(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 684> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 629> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message label')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(117019)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3513)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(117030)	getRecord('#' 2 y(6))
		unifyVariable(y(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 684> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 629> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message found')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(117162)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3510)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(117173)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(0) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 629> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('non-literal method label ' x(3))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(117245)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3507)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116241)
lbl(117258)	definition(x(8) 117299 pid('SAClassNode,inheritMethods/slow' 1 pos('./compiler/StaticAnalysis.oz' 3490 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 847> 7)
		endDefinition(117258)
lbl(117299)	putRecord('#' [1 2 fast] x(14))
		setConstant(inheritMethods)
		setValue(x(8))
		setValue(x(7))
lbl(117309)	definition(x(7) 117318 pid('SAClassNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3595 6) nil 1) <Q: 848> nil)
		return
		endDefinition(117309)
lbl(117318)	definition(x(8) 117344 pid('SAClassNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3595 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 848> 3)
		endDefinition(117318)
lbl(117344)	putRecord('#' [1 2 fast] x(15))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(117354)	definition(x(7) 117395 pid('SAClassNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3601 6) nil 2) <Q: 849> [y(29)])
		allocateL1
		move(x(0) y(0))
		getSelf(x(0))
		sendMsg(pushSelf y(0) 1 cache)
		inlineAt(methods x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(0) true <M: SaBody> false 2) 0)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(popSelf x(0) 0 cache)
		endDefinition(117354)
lbl(117395)	definition(x(8) 117421 pid('SAClassNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3601 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 849> 3)
		endDefinition(117395)
lbl(117421)	putRecord('#' [1 2 fast] x(16))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(117431)	definition(x(7) 117489 pid('SAClassNode,SaBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 3610 6) nil 2) <Q: 850> [y(29)])
		match(x(0) ht(117474 [onScalar(nil 117440) onRecord('|' 2 117441)]))
lbl(117440)	return
lbl(117441)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		sendMsg(sa y(0) 1 cache)
		move(y(2) x(0))
		sendMsg(saDescend y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: SaBody> true 2) 0)
lbl(117474)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(3616)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(117431)
lbl(117489)	definition(x(8) 117524 pid('SAClassNode,SaBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 3610 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 850> 5)
		endDefinition(117489)
lbl(117524)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: SaBody>)
		setValue(x(8))
		setValue(x(7))
lbl(117534)	definition(x(7) 117760 pid('SAClassNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3618 6) nil 2) <Q: 851> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(parents x(0) cache)
lbl(117560)	definition(x(1) 117580 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3622 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117560)
lbl(117580)	genFastCall(<P: 34> 4)
		inlineAt(properties x(0) cache)
lbl(117588)	definition(x(1) 117608 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3626 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117588)
lbl(117608)	genFastCall(<P: 34> 4)
		inlineAt(attributes x(0) cache)
lbl(117616)	definition(x(1) 117667 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3628 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 117653)
lbl(117627)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(117653)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117616)
lbl(117667)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(117675)	definition(x(1) 117726 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3635 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 117712)
lbl(117686)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(117712)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117675)
lbl(117726)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
lbl(117734)	definition(x(1) 117754 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3642 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(preApplyEnvSubst x(1) 1 cache)
		endDefinition(117734)
lbl(117754)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(117534)
lbl(117760)	definition(x(8) 117786 pid('SAClassNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3618 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 851> 3)
		endDefinition(117760)
lbl(117786)	putRecord('#' [1 2 fast] x(18))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		move(y(29) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAClassNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(117835)	definition(x(7) 117994 pid('SAMethod,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3647 6) nil 4) <Q: 852> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(117847)	definition(x(1) 117867 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3650 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(117847)
lbl(117867)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(117879)	definition(x(1) 117900 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3651 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(117879)
lbl(117900)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(117912)	definition(x(1) 117930 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3653 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(117912)
lbl(117930)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(117939)	definition(x(1) 117957 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3654 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(117939)
lbl(117957)	move(y(3) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(117835)
lbl(117994)	definition(x(8) 118020 pid('SAMethod,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3647 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 852> 3)
		endDefinition(117994)
lbl(118020)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(118030)	definition(x(7) 118039 pid('SAMethod,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 1) <Q: 853> nil)
		return
		endDefinition(118030)
lbl(118039)	definition(x(8) 118065 pid('SAMethod,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 853> 3)
		endDefinition(118039)
lbl(118065)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118075)	definition(x(7) 118190 pid('SAMethod,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 3) <Q: 854> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 667> 2)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 118175 118177)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(1) x(0))
		inlineAssign(predicateRef x(0) cache)
lbl(118175)	deAllocateL4
		return
lbl(118177)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3674)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(118075)
lbl(118190)	definition(x(8) 118216 pid('SAMethod,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 854> 3)
		endDefinition(118190)
lbl(118216)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(118226)	definition(x(7) 118278 pid('SAMethod,preApplyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3679 6) nil 2) <Q: 855> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(formalArgs x(0) cache)
lbl(118252)	definition(x(1) 118272 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3682 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(118252)
lbl(118272)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(118226)
lbl(118278)	definition(x(8) 118304 pid('SAMethod,preApplyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3679 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 855> 3)
		endDefinition(118278)
lbl(118304)	putRecord('#' [1 2 fast] x(12))
		setConstant(preApplyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethod' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(5))
		setConstant(nil)
lbl(118353)	definition(x(7) 118540 pid('SAMethodWithDesignator,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3687 6) nil 4) <Q: 856> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(118365)	definition(x(1) 118385 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3690 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(118365)
lbl(118385)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(118397)	definition(x(1) 118418 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3691 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(118397)
lbl(118418)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(118430)	definition(x(1) 118448 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3693 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(118430)
lbl(118448)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(isOpen x(0) cache)
		createVariable(y(2))
		testBool(x(0) 118473 118501)
		getLiteral(unit y(2))
		branch(118512)
lbl(118473)	definition(x(1) 118491 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3694 43) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(118473)
lbl(118491)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		genFastCall(<P: 29> 6)
		branch(118512)
lbl(118501)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3694)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(118512)	getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(118353)
lbl(118540)	definition(x(8) 118566 pid('SAMethodWithDesignator,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3687 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 856> 3)
		endDefinition(118540)
lbl(118566)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(118576)	definition(x(7) 118585 pid('SAMethodWithDesignator,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3698 6) nil 1) <Q: 857> nil)
		return
		endDefinition(118576)
lbl(118585)	definition(x(8) 118611 pid('SAMethodWithDesignator,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3698 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 857> 3)
		endDefinition(118585)
lbl(118611)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118621)	definition(x(7) 118694 pid('SAMethodWithDesignator,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3704 6) nil 3) <Q: 858> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(118621)
lbl(118694)	definition(x(8) 118720 pid('SAMethodWithDesignator,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3704 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 858> 3)
		endDefinition(118694)
lbl(118720)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethodWithDesignator' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(118758)	definition(x(7) 118767 pid('SAMethFormal,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3718 6) nil 1) <Q: 859> nil)
		return
		endDefinition(118758)
lbl(118767)	definition(x(8) 118793 pid('SAMethFormal,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3718 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 859> 3)
		endDefinition(118767)
lbl(118793)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118803)	definition(x(7) 118826 pid('SAMethFormal,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3724 6) nil 2) <Q: 860> nil)
		getRecord(required 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118803)
lbl(118826)	definition(x(8) 118852 pid('SAMethFormal,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3724 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 860> 3)
		endDefinition(118826)
lbl(118852)	putRecord('#' [1 2 fast] x(10))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(118862)	definition(x(7) 118881 pid('SAMethFormal,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 2) <Q: 861> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(118862)
lbl(118881)	definition(x(8) 118907 pid('SAMethFormal,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 861> 3)
		endDefinition(118881)
lbl(118907)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormal' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(118948)	definition(x(7) 118957 pid('SAMethFormalOptional,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3732 6) nil 1) <Q: 862> nil)
		return
		endDefinition(118948)
lbl(118957)	definition(x(8) 118983 pid('SAMethFormalOptional,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3732 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 862> 3)
		endDefinition(118957)
lbl(118983)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118993)	definition(x(7) 119016 pid('SAMethFormalOptional,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3738 6) nil 2) <Q: 863> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118993)
lbl(119016)	definition(x(8) 119042 pid('SAMethFormalOptional,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3738 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 863> 3)
		endDefinition(119016)
lbl(119042)	putRecord('#' [1 2 fast] x(10))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(119052)	definition(x(7) 119071 pid('SAMethFormalOptional,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3741 6) nil 2) <Q: 864> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(119052)
lbl(119071)	definition(x(8) 119097 pid('SAMethFormalOptional,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3741 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 864> 3)
		endDefinition(119071)
lbl(119097)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalOptional' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(119138)	definition(x(7) 119147 pid('SAMethFormalWithDefault,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3746 6) nil 1) <Q: 865> nil)
		return
		endDefinition(119138)
lbl(119147)	definition(x(8) 119173 pid('SAMethFormalWithDefault,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3746 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 865> 3)
		endDefinition(119147)
lbl(119173)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(119183)	definition(x(7) 119206 pid('SAMethFormalWithDefault,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3752 6) nil 2) <Q: 866> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119183)
lbl(119206)	definition(x(8) 119232 pid('SAMethFormalWithDefault,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3752 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 866> 3)
		endDefinition(119206)
lbl(119232)	putRecord('#' [1 2 fast] x(10))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(119242)	definition(x(7) 119261 pid('SAMethFormalWithDefault,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3755 6) nil 2) <Q: 867> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(119242)
lbl(119261)	definition(x(8) 119287 pid('SAMethFormalWithDefault,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3755 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 867> 3)
		endDefinition(119261)
lbl(119287)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalWithDefault' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(119328)	definition(x(7) 119337 pid('SAObjectLockNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3761 6) nil 1) <Q: 868> nil)
		return
		endDefinition(119328)
lbl(119337)	definition(x(8) 119363 pid('SAObjectLockNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3761 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 868> 3)
		endDefinition(119337)
lbl(119363)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(119373)	definition(x(7) 119429 pid('SAObjectLockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3767 6) nil 3) <Q: 869> [y(11)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(119373)
lbl(119429)	definition(x(8) 119455 pid('SAObjectLockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3767 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 869> 3)
		endDefinition(119429)
lbl(119455)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAObjectLockNode' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(119494)	definition(x(7) 119518 pid('SAGetSelf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3778 6) nil 2) <Q: 870> nil)
		inlineAt(destination x(1) cache)
		inlineAt(destination x(0) cache)
		tailSendMsg('setValue' x(1) 1 cache)
		endDefinition(119494)
lbl(119518)	definition(x(8) 119544 pid('SAGetSelf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3778 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 870> 3)
		endDefinition(119518)
lbl(119544)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(119554)	definition(x(7) 119573 pid('SAGetSelf,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3784 6) nil 2) <Q: 871> nil)
		inlineAt(destination x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(119554)
lbl(119573)	definition(x(8) 119599 pid('SAGetSelf,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3784 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 871> 3)
		endDefinition(119573)
lbl(119599)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAGetSelf' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(119638)	definition(x(7) 119647 pid('SAFailNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3790 6) nil 1) <Q: 872> nil)
		return
		endDefinition(119638)
lbl(119647)	definition(x(8) 119673 pid('SAFailNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3790 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 872> 3)
		endDefinition(119647)
lbl(119673)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAFailNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(119710)	definition(x(7) 119719 pid('SAIfNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3799 6) nil 1) <Q: 873> nil)
		return
		endDefinition(119710)
lbl(119719)	definition(x(8) 119745 pid('SAIfNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3799 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 873> 3)
		endDefinition(119719)
lbl(119745)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(119755)	definition(x(7) 119842 pid('SAIfNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3805 6) nil 3) <Q: 874> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(119788)	definition(x(1) 119808 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3813 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(119788)
lbl(119808)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(119755)
lbl(119842)	definition(x(8) 119868 pid('SAIfNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3805 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 874> 3)
		endDefinition(119842)
lbl(119868)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(119878)	definition(x(7) 119965 pid('SAIfNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3818 6) nil 3) <Q: 875> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(119911)	definition(x(1) 119931 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3824 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(119911)
lbl(119931)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(119878)
lbl(119965)	definition(x(8) 119991 pid('SAIfNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3818 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 875> 3)
		endDefinition(119965)
lbl(119991)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAIfNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(120032)	definition(x(7) 120041 pid('SAChoicesAndDisjunctions,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3832 6) nil 1) <Q: 876> nil)
		return
		endDefinition(120032)
lbl(120041)	definition(x(8) 120067 pid('SAChoicesAndDisjunctions,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3832 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 876> 3)
		endDefinition(120041)
lbl(120067)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(120077)	definition(x(7) 120150 pid('SAChoicesAndDisjunctions,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3838 6) nil 3) <Q: 877> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(120110)	definition(x(1) 120130 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3846 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(120110)
lbl(120130)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(120077)
lbl(120150)	definition(x(8) 120176 pid('SAChoicesAndDisjunctions,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3838 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 877> 3)
		endDefinition(120150)
lbl(120176)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(120186)	definition(x(7) 120259 pid('SAChoicesAndDisjunctions,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3850 6) nil 3) <Q: 878> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(120219)	definition(x(1) 120239 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3856 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(120219)
lbl(120239)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(120186)
lbl(120259)	definition(x(8) 120285 pid('SAChoicesAndDisjunctions,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3850 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 878> 3)
		endDefinition(120259)
lbl(120285)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAChoicesAndDisjunctions' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(40))
		setConstant(nil)
lbl(120332)	definition(x(7) 120341 pid('SAOrNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3863 6) nil 1) <Q: 879> nil)
		return
		endDefinition(120332)
lbl(120341)	definition(x(8) 120367 pid('SAOrNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3863 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 879> 3)
		endDefinition(120341)
lbl(120367)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAOrNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(40))
		setConstant(nil)
lbl(120407)	definition(x(7) 120416 pid('SADisNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3872 6) nil 1) <Q: 880> nil)
		return
		endDefinition(120407)
lbl(120416)	definition(x(8) 120442 pid('SADisNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3872 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 880> 3)
		endDefinition(120416)
lbl(120442)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADisNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(40))
		setConstant(nil)
lbl(120482)	definition(x(7) 120491 pid('SAChoiceNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3881 6) nil 1) <Q: 881> nil)
		return
		endDefinition(120482)
lbl(120491)	definition(x(8) 120517 pid('SAChoiceNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3881 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 881> 3)
		endDefinition(120491)
lbl(120517)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAChoiceNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(21))
		setConstant(nil)
lbl(120557)	definition(x(7) 120566 pid('SAClause,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3891 6) nil 1) <Q: 882> nil)
		return
		endDefinition(120557)
lbl(120566)	definition(x(8) 120592 pid('SAClause,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3891 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 882> 3)
		endDefinition(120566)
lbl(120592)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(120602)	definition(x(7) 120686 pid('SAClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3897 6) nil 3) <Q: 883> [y(11)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 666> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(guard x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 667> 3)
		endDefinition(120602)
lbl(120686)	definition(x(8) 120712 pid('SAClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3897 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 883> 3)
		endDefinition(120686)
lbl(120712)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAClause' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(21))
		setConstant(nil)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(120760)	definition(x(7) 120790 pid('SAValueNode,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3916 6) nil 2) <Q: 884> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 616> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(120760)
lbl(120790)	definition(x(8) 120804 pid('SAValueNode,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3916 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 884> 1)
		endDefinition(120790)
lbl(120804)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(120814)	definition(x(7) 120831 pid('SAValueNode,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3919 6) nil 2) <Q: 885> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(120814)
lbl(120831)	definition(x(8) 120857 pid('SAValueNode,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3919 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 885> 3)
		endDefinition(120831)
lbl(120857)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(120867)	definition(x(7) 120883 pid('SAValueNode,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3922 6) nil 2) <Q: 886> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 682> 5)
		endDefinition(120867)
lbl(120883)	definition(x(8) 120918 pid('SAValueNode,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3922 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 886> 5)
		endDefinition(120883)
lbl(120918)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(120928)	definition(x(7) 120951 pid('SAValueNode,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3925 6) nil 2) <Q: 887> nil)
		getRecord(value 1 x(1))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(120928)
lbl(120951)	definition(x(8) 120986 pid('SAValueNode,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3925 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 887> 5)
		endDefinition(120951)
lbl(120986)	putRecord('#' [1 2 fast] x(12))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(120996)	definition(x(7) 121013 pid('SAValueNode,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 3928 6) nil 2) <Q: 888> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(120996)
lbl(121013)	definition(x(8) 121048 pid('SAValueNode,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3928 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 888> 5)
		endDefinition(121013)
lbl(121048)	putRecord('#' [1 2 fast] x(13))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(121058)	definition(x(7) 121075 pid('SAValueNode,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 3931 6) nil 3) <Q: 889> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(121058)
lbl(121075)	definition(x(8) 121116 pid('SAValueNode,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3931 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 889> 7)
		endDefinition(121075)
lbl(121116)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAValueNode' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(121157)	definition(x(7) 121171 pid('SAAtomNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3937 6) nil 2) <Q: 890> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(121157)
lbl(121171)	definition(x(8) 121197 pid('SAAtomNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3937 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 890> 3)
		endDefinition(121171)
lbl(121197)	putRecord('#' [1 2 fast] x(9))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(121207)	definition(x(7) 121216 pid('SAAtomNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3940 6) nil 1) <Q: 891> nil)
		return
		endDefinition(121207)
lbl(121216)	definition(x(8) 121242 pid('SAAtomNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3940 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 891> 3)
		endDefinition(121216)
lbl(121242)	putRecord('#' [1 2 fast] x(10))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(121252)	definition(x(7) 121261 pid('SAAtomNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3943 6) nil 1) <Q: 892> nil)
		return
		endDefinition(121252)
lbl(121261)	definition(x(8) 121287 pid('SAAtomNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3943 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 892> 3)
		endDefinition(121261)
lbl(121287)	putRecord('#' [1 2 fast] x(11))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(121297)	definition(x(7) 121309 pid('SAAtomNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3950 6) nil 2) <Q: 893> nil)
		unify(x(0) x(1))
		return
		endDefinition(121297)
lbl(121309)	definition(x(8) 121344 pid('SAAtomNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3950 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 893> 5)
		endDefinition(121309)
lbl(121344)	putRecord('#' [1 2 fast] x(12))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(121354)	definition(x(7) 121611 pid('SAAtomNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 3956 6) nil 8) <Q: 894> [y(15)])
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(2) 121596 121598)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(2) 121484 121585)
		inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('atom = token')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('First value')
		setValue(x(4))
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [l m] x(6))
		setConstant('Second value')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(121484)	inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 121512)
		deAllocateL5
		return
lbl(121512)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [1 l] x(0))
		setValue(x(1))
		setConstant('First value')
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [1 l] x(4))
		setValue(x(5))
		setConstant('Second value')
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(121585)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3963)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121596)	deAllocateL5
		return
lbl(121598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3960)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(121354)
lbl(121611)	definition(x(8) 121646 pid('SAAtomNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 3956 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 894> 5)
		endDefinition(121611)
lbl(121646)	putRecord('#' [1 2 fast] x(13))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAAtomNode' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(121691)	definition(x(7) 121705 pid('SAIntNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3986 6) nil 2) <Q: 895> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(121691)
lbl(121705)	definition(x(8) 121731 pid('SAIntNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3986 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 895> 3)
		endDefinition(121705)
lbl(121731)	putRecord('#' [1 2 fast] x(9))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(121741)	definition(x(7) 121750 pid('SAIntNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3989 6) nil 1) <Q: 896> nil)
		return
		endDefinition(121741)
lbl(121750)	definition(x(8) 121776 pid('SAIntNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3989 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 896> 3)
		endDefinition(121750)
lbl(121776)	putRecord('#' [1 2 fast] x(10))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(121786)	definition(x(7) 121795 pid('SAIntNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3992 6) nil 1) <Q: 897> nil)
		return
		endDefinition(121786)
lbl(121795)	definition(x(8) 121821 pid('SAIntNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3992 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 897> 3)
		endDefinition(121795)
lbl(121821)	putRecord('#' [1 2 fast] x(11))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(121831)	definition(x(7) 121843 pid('SAIntNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3999 6) nil 2) <Q: 898> nil)
		unify(x(0) x(1))
		return
		endDefinition(121831)
lbl(121843)	definition(x(8) 121878 pid('SAIntNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3999 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 898> 5)
		endDefinition(121843)
lbl(121878)	putRecord('#' [1 2 fast] x(12))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(121888)	definition(x(7) 122145 pid('SAIntNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4005 6) nil 8) <Q: 899> [y(15)])
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(2) 122130 122132)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(2) 122018 122119)
		inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('integer = token')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('First value')
		setValue(x(4))
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [l m] x(6))
		setConstant('Second value')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(122018)	inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 122046)
		deAllocateL5
		return
lbl(122046)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(122119)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4013)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(122130)	deAllocateL5
		return
lbl(122132)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4010)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(121888)
lbl(122145)	definition(x(8) 122180 pid('SAIntNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4005 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 899> 5)
		endDefinition(122145)
lbl(122180)	putRecord('#' [1 2 fast] x(13))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAIntNode' x(5))
		createVariableMove(y(46) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(122225)	definition(x(7) 122239 pid('SAFloatNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4038 6) nil 2) <Q: 900> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(122225)
lbl(122239)	definition(x(8) 122265 pid('SAFloatNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4038 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 900> 3)
		endDefinition(122239)
lbl(122265)	putRecord('#' [1 2 fast] x(9))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(122275)	definition(x(7) 122284 pid('SAFloatNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4041 6) nil 1) <Q: 901> nil)
		return
		endDefinition(122275)
lbl(122284)	definition(x(8) 122310 pid('SAFloatNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4041 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 901> 3)
		endDefinition(122284)
lbl(122310)	putRecord('#' [1 2 fast] x(10))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(122320)	definition(x(7) 122329 pid('SAFloatNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 4044 6) nil 1) <Q: 902> nil)
		return
		endDefinition(122320)
lbl(122329)	definition(x(8) 122355 pid('SAFloatNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 4044 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 902> 3)
		endDefinition(122329)
lbl(122355)	putRecord('#' [1 2 fast] x(11))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(122365)	definition(x(7) 122377 pid('SAFloatNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4051 6) nil 2) <Q: 903> nil)
		unify(x(0) x(1))
		return
		endDefinition(122365)
lbl(122377)	definition(x(8) 122412 pid('SAFloatNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4051 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 903> 5)
		endDefinition(122377)
lbl(122412)	putRecord('#' [1 2 fast] x(12))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(122422)	definition(x(7) 122679 pid('SAFloatNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4057 6) nil 8) <Q: 904> [y(15)])
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(2) 122664 122666)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(2) 122552 122653)
		inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('float = token')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('First value')
		setValue(x(4))
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [l m] x(6))
		setConstant('Second value')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(122552)	inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 122580)
		deAllocateL5
		return
lbl(122580)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(122653)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4065)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(122664)	deAllocateL5
		return
lbl(122666)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4062)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(122422)
lbl(122679)	definition(x(8) 122714 pid('SAFloatNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4057 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 904> 5)
		endDefinition(122679)
lbl(122714)	putRecord('#' [1 2 fast] x(13))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAFloatNode' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(122767)	definition(x(7) 122807 pid('SAVariable,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 4092 6) nil 4) <Q: 905> [y(12)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(value x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(122767)
lbl(122807)	definition(x(8) 122821 pid('SAVariable,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 4092 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 905> 1)
		endDefinition(122807)
lbl(122821)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(122831)	definition(x(7) 122848 pid('SAVariable,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4095 6) nil 2) <Q: 906> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(122831)
lbl(122848)	definition(x(8) 122874 pid('SAVariable,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4095 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 906> 3)
		endDefinition(122848)
lbl(122874)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(122884)	definition(x(7) 122898 pid('SAVariable,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4098 6) nil 1) <Q: 907> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(122884)
lbl(122898)	definition(x(8) 122924 pid('SAVariable,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4098 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 907> 3)
		endDefinition(122898)
lbl(122924)	putRecord('#' [1 2 fast] x(11))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(122934)	definition(x(7) 122950 pid('SAVariable,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4101 6) nil 2) <Q: 908> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 682> 5)
		endDefinition(122934)
lbl(122950)	definition(x(8) 122985 pid('SAVariable,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4101 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 908> 5)
		endDefinition(122950)
lbl(122985)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(122995)	definition(x(7) 123043 pid('SAVariable,outputDebugType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4104 6) nil 3) <Q: 909> nil)
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 123024)
		inlineAt(type x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 682> 5)
lbl(123024)	inlineAt(lastValue x(2) cache)
		move(x(0) x(1))
		putConstant(3 x(0))
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(122995)
lbl(123043)	definition(x(8) 123069 pid('SAVariable,outputDebugType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4104 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 909> 3)
		endDefinition(123043)
lbl(123069)	putRecord('#' [1 2 fast] x(13))
		setConstant(outputDebugType)
		setValue(x(8))
		setValue(x(7))
lbl(123079)	definition(x(7) 123213 pid('SAVariable,outputDebugMeths/fast' 1 pos('./compiler/StaticAnalysis.oz' 4109 6) nil 4) <Q: 910> nil)
		allocateL3
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 123103)
lbl(123098)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(123103)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 123098)
lbl(123115)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(123206 [onScalar('class' 123129) onScalar(object 123163)]))
lbl(123129)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getMethods x(1) 1 cache)
		testLiteral(y(1) unit 123152)
lbl(123147)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(123152)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(123163)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getMethods y(1) 1 cache)
		testLiteral(y(2) unit 123195)
lbl(123190)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(123195)	move(y(2) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(123206)	getLiteral(unit y(0))
		deAllocateL3
		return
		endDefinition(123079)
lbl(123213)	definition(x(8) 123239 pid('SAVariable,outputDebugMeths/slow' 1 pos('./compiler/StaticAnalysis.oz' 4109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 910> 3)
		endDefinition(123213)
lbl(123239)	putRecord('#' [1 2 fast] x(14))
		setConstant(outputDebugMeths)
		setValue(x(8))
		setValue(x(7))
lbl(123249)	definition(x(7) 123345 pid('SAVariable,outputDebugAttrs/fast' 1 pos('./compiler/StaticAnalysis.oz' 4125 6) nil 4) <Q: 911> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 123273)
lbl(123268)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(123273)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 123268)
lbl(123285)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(123338 [onScalar('class' 123299) onScalar(object 123311)]))
lbl(123299)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(123311)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(123338)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(123249)
lbl(123345)	definition(x(8) 123371 pid('SAVariable,outputDebugAttrs/slow' 1 pos('./compiler/StaticAnalysis.oz' 4125 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 911> 3)
		endDefinition(123345)
lbl(123371)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputDebugAttrs)
		setValue(x(8))
		setValue(x(7))
lbl(123381)	definition(x(7) 123477 pid('SAVariable,outputDebugFeats/fast' 1 pos('./compiler/StaticAnalysis.oz' 4135 6) nil 4) <Q: 912> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 123405)
lbl(123400)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(123405)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 123400)
lbl(123417)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(123470 [onScalar('class' 123431) onScalar(object 123443)]))
lbl(123431)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(123443)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(123470)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(123381)
lbl(123477)	definition(x(8) 123503 pid('SAVariable,outputDebugFeats/slow' 1 pos('./compiler/StaticAnalysis.oz' 4135 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 912> 3)
		endDefinition(123477)
lbl(123503)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputDebugFeats)
		setValue(x(8))
		setValue(x(7))
lbl(123513)	definition(x(7) 123583 pid('SAVariable,outputDebugProps/fast' 1 pos('./compiler/StaticAnalysis.oz' 4145 6) nil 4) <Q: 913> nil)
		allocateL1
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 123537)
lbl(123532)	getLiteral(unit y(0))
		deAllocateL1
		return
lbl(123537)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 123532)
lbl(123549)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		testLiteral(x(1) 'class' 123576)
lbl(123564)	inlineAt(lastValue x(1) cache)
		deAllocateL1
		tailSendMsg(getProperties x(1) 1 cache)
lbl(123576)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(123513)
lbl(123583)	definition(x(8) 123609 pid('SAVariable,outputDebugProps/slow' 1 pos('./compiler/StaticAnalysis.oz' 4145 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 913> 3)
		endDefinition(123583)
lbl(123609)	putRecord('#' [1 2 fast] x(17))
		setConstant(outputDebugProps)
		setValue(x(8))
		setValue(x(7))
lbl(123619)	definition(x(7) 123636 pid('SAVariable,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4154 6) nil 2) <Q: 914> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(123619)
lbl(123636)	definition(x(8) 123662 pid('SAVariable,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4154 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 914> 3)
		endDefinition(123636)
lbl(123662)	putRecord('#' [1 2 fast] x(18))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(123672)	definition(x(7) 123713 pid('SAVariable,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4157 6) nil 2) <Q: 915> nil)
		inlineAssign(lastValue x(0) cache)
		testLiteral(x(0) unit 123688)
		return
lbl(123688)	allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getType x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(123672)
lbl(123713)	definition(x(8) 123739 pid('SAVariable,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4157 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 915> 3)
		endDefinition(123713)
lbl(123739)	putRecord('#' [1 2 fast] x(19))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(48))
lbl(123751)	definition(x(7) 123952 pid('SAVariable,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4162 6) nil 3) <Q: 916> [y(48)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 123769)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(123769)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 123832 123939)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123825)
		deAllocateL2
		return
lbl(123825)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(123832)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 123926 123928)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123878)
		deAllocateL2
		return
lbl(123878)	testLiteral(y(1) unit 123899)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(123899)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123919)
		deAllocateL2
		return
lbl(123919)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(123926)	deAllocateL2
		return
lbl(123928)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4178)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(123939)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4168)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(123751)
lbl(123952)	definition(x(8) 123978 pid('SAVariable,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4162 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 916> 3)
		endDefinition(123952)
lbl(123978)	putRecord('#' [1 2 fast] x(20))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(123988)	definition(x(7) 124021 pid('SAVariable,valToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4204 6) nil 6) <Q: 917> nil)
		inlineAt(printName x(4) cache)
		getSelf(x(5))
		move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(1))
		putConstant(3 x(2))
		tailSendMsg(<M: ValToSubst> x(5) 4 cache)
		endDefinition(123988)
lbl(124021)	definition(x(8) 124047 pid('SAVariable,valToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4204 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 917> 3)
		endDefinition(124021)
lbl(124047)	putRecord('#' [1 2 fast] x(21))
		setConstant(valToSubst)
		setValue(x(8))
		setValue(x(7))
lbl(124057)	definition(x(7) 125233 pid('SAVariable,ValToSubst/fast' 4 pos('./compiler/StaticAnalysis.oz' 4207 6) nil 8) <Q: 918> [y(48) g(63) y(8) g(56) y(2) g(59) y(3) g(1) g(64) g(65) g(66) g(67) g(2) g(68) g(12)])
		putConstant(0 x(4))
		testLE(x(2) x(4) x(5) 124077)
		move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124077)	testBI('IsDet' [x(3)]#[x(4)] 125225)
		testBI('IsInt' [x(3)]#[x(4)] 124120)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124120)	testBI('IsFloat' [x(3)]#[x(4)] 124159)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124159)	testBI('IsAtom' [x(3)]#[x(4)] 124198)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124198)	testBI('IsName' [x(3)]#[x(4)] 124245)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) nameToken x(4) cache)
		inlineAt(printName x(5) cache)
		callBI(newObject [x(4)]#[x(1)])
		move(x(1) y(0))
		move(x(5) x(0))
		move(x(3) x(1))
		putConstant(true x(2))
		sendMsg(init y(0) 3 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124245)	testBI('IsRecord' [x(3)]#[x(4)] 124487)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(x(1) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(1)]#[x(2)] 124315)
		move(g(2) x(2))
		inlineDot(x(2) atomNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(124387)
lbl(124315)	testBI('IsName' [x(1)]#[x(2)] 124376)
		move(g(2) x(2))
		inlineDot(x(2) nameToken x(3) cache)
		move(g(4) x(4))
		inlineDot(x(4) printName x(5) cache)
		moveMoveXYYX(x(3) y(7) y(5) x(0))
		createVariableMove(y(8) x(1))
		call(x(5) 2)
		move(y(7) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(1))
		putConstant(true x(2))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		branch(124387)
lbl(124376)	putRecord(kernel 2 x(2))
		setConstant(noElse)
		setConstant(4255)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(124387)	getSelf(x(2))
		putRecord('#' 2 x(7))
		setValue(y(3))
		setValue(x(2))
		putList(x(1))
		setValue(x(7))
		setValue(y(1))
		getSelf(x(3))
		move(x(3) x(6))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		move(y(0) x(3))
		createVariableMove(y(7) x(4))
		createVariableMove(y(8) x(5))
		sendMsg(recordValToArgs x(6) 6 cache)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(7) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(5) x(0) y(8) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL10
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124487)	allocateL7
		move(g(6) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		moveMoveXYYX(x(3) y(0) y(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 124542 125214)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124542)	move(y(0) x(0))
		testBI('IsProcedure' [x(0)]#[x(1)] 124586)
		move(g(2) x(1))
		inlineDot(x(1) procedureToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124586)	createVariableMove(y(1) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(1) 124733 125203)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
lbl(124667)	definition(x(1) 124684 pid('' 1 pos('./compiler/StaticAnalysis.oz' 4295 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(124667)
lbl(124684)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(1) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124733)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 124908)
		callBI(getClass [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(6) y(1) x(0))
		sendMsg(init y(6) 1 cache)
lbl(124816)	definition(x(1) 124833 pid('' 1 pos('./compiler/StaticAnalysis.oz' 4312 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(124816)
lbl(124833)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(6) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(6) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(6) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(6) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(y(6) x(1))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124908)	testBI('IsCell' [x(0)]#[x(1)] 124940)
		move(g(2) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124940)	testBI('IsLock' [x(0)]#[x(1)] 124972)
		move(g(2) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(124972)	testBI('IsPort' [x(0)]#[x(1)] 125004)
		move(g(2) x(1))
		inlineDot(x(1) portToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125004)	testBI('IsArray' [x(0)]#[x(1)] 125036)
		move(g(2) x(1))
		inlineDot(x(1) arrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125036)	testBI('IsDictionary' [x(0)]#[x(1)] 125068)
		move(g(2) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125068)	testBI('IsSpace' [x(0)]#[x(1)] 125100)
		move(g(2) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125100)	testBI('Thread.is' [x(0)]#[x(1)] 125132)
		move(g(2) x(1))
		inlineDot(x(1) threadToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125132)	testBI('BitArray.is' [x(0)]#[x(1)] 125164)
		move(g(2) x(1))
		inlineDot(x(1) bitArrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125164)	testBI('IsChunk' [x(0)]#[x(1)] 125196)
		move(g(2) x(1))
		inlineDot(x(1) chunkToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125196)	move(g(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(125203)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4286)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125214)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4271)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125225)	move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
		endDefinition(124057)
lbl(125233)	definition(x(8) 125280 pid('SAVariable,ValToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4207 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 918> 9)
		endDefinition(125233)
lbl(125280)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ValToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(125290)	definition(x(7) 125704 pid('SAVariable,recordValToArgs/fast' 6 pos('./compiler/StaticAnalysis.oz' 4374 6) nil 10) <Q: 919> [y(8) y(2) g(69)])
		allocateL(13)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(5) y(2))
		testList(y(0) 125677)
lbl(125309)	getVarVar(x(6) x(7))
		shallowGuard(125677)
		getRecord('#' 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(125322)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(7) y(7))
		move(y(6) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 691> 6)
		createVariable(y(9))
		move(y(5) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 125385)
		move(g(0) x(1))
		inlineDot(x(1) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(125488)
lbl(125385)	testBI('IsName' [x(0)]#[x(1)] 125444)
		move(g(0) x(1))
		inlineDot(x(1) nameToken x(2) cache)
		move(g(1) x(3))
		inlineDot(x(3) printName x(4) cache)
		move(x(2) y(10))
		createVariableMove(y(11) x(1))
		call(x(4) 2)
		move(y(10) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(12) y(11) x(0))
		move(y(5) x(1))
		putConstant(true x(2))
		sendMsg(init y(12) 3 cache)
		unify(y(12) y(9))
		branch(125488)
lbl(125444)	testBI('IsInt' [x(0)]#[x(1)] 125477)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(125488)
lbl(125477)	putRecord(kernel 2 x(1))
		setConstant(noElse)
		setConstant(4386)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(125488)	createVariable(y(10))
		testLiteral(y(8) unit 125600)
		putRecord('#' 3 x(0))
		setValue(y(4))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 194> 4)
		move(y(8) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(2)])
		moveMoveXYXY(x(1) y(8) x(2) y(11))
		move(y(8) x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(11) 3 cache)
		move(y(3) x(0))
		inlineMinus1(x(0) x(2))
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		move(y(6) x(3))
		sendMsg(<M: ValToSubst> y(11) 4 cache)
		move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(11) 2 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getLastValue y(11) 1 cache)
		move(y(6) x(0))
		sendMsg(updateValue y(10) 1 cache)
		branch(125630)
lbl(125600)	move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(8) 2 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getLastValue y(8) 1 cache)
		move(y(6) x(0))
		sendMsg(updateValue y(10) 1 cache)
lbl(125630)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(10))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(10))
		getSelf(x(7))
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		tailSendMsg(recordValToArgs x(7) 6 cache)
lbl(125677)	testLiteral(y(0) nil 125689)
lbl(125681)	getLiteral(nil y(1))
		getLiteral(nil y(2))
		deAllocateL
		return
lbl(125689)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(4414)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125290)
lbl(125704)	definition(x(8) 125763 pid('SAVariable,recordValToArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 4374 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 919> 13)
		endDefinition(125704)
lbl(125763)	putRecord('#' [1 2 fast] x(23))
		setConstant(recordValToArgs)
		setValue(x(8))
		setValue(x(7))
		putConstant(3 x(7))
lbl(125776)	definition(x(8) 125790 pid('SAVariable,typeToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4416 6) nil 2) <Q: 920> [y(48) x(7)])
		move(g(1) x(1))
		genCall(gci(g(0) true <M: TypeToSubst> true 2) 0)
		endDefinition(125776)
lbl(125790)	definition(x(7) 125816 pid('SAVariable,typeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4416 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 920> 3)
		endDefinition(125790)
lbl(125816)	putRecord('#' [1 2 fast] x(24))
		setConstant(typeToSubst)
		setValue(x(7))
		setValue(x(8))
lbl(125826)	definition(x(7) 126088 pid('SAVariable,TypeToSubst/fast' 2 pos('./compiler/StaticAnalysis.oz' 4419 6) nil 7) <Q: 921> [y(48) y(12) y(8) y(2) g(59)])
		match(x(0) ht(126073 [onRecord(value 1 125835) onRecord(type 1 125840) onRecord(record 1 125868)]))
lbl(125835)	getVariable(x(0))
		genCall(gci(g(0) true valToSubst true 1) 0)
lbl(125840)	allocateL1
		getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) encode x(3) cache)
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setType true 1) 0)
lbl(125868)	allocateL7
		getVariable(x(0))
		callBI('Label' [x(0)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		testBI('IsAtom' [x(2)]#[x(3)] 125919)
		move(g(2) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(unit x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(125991)
lbl(125919)	testBI('IsName' [x(2)]#[x(3)] 125980)
		move(g(2) x(3))
		inlineDot(x(3) nameToken x(4) cache)
		move(g(3) x(5))
		inlineDot(x(5) printName x(6) cache)
		moveMoveXYYX(x(4) y(4) y(2) x(0))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		move(y(4) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		move(y(2) x(1))
		putConstant(true x(2))
		sendMsg(init y(6) 3 cache)
		unify(y(6) y(3))
		branch(125991)
lbl(125980)	putRecord(kernel 2 x(3))
		setConstant(noElse)
		setConstant(4432)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(125991)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: RecordToSubst> false 5) 0)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(126073)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4438)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(125826)
lbl(126088)	definition(x(8) 126123 pid('SAVariable,TypeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4419 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 921> 5)
		endDefinition(126088)
lbl(126123)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: TypeToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(126133)	definition(x(7) 126445 pid('SAVariable,RecordToSubst/fast' 5 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 9) <Q: 922> [y(8) y(2) y(48)])
		match(x(0) ht(126430 [onScalar(nil 126142) onRecord('|' 2 126149)]))
lbl(126142)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(126149)	allocateL10
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(0)]#[x(5)] 126201)
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(126304)
lbl(126201)	testBI('IsName' [x(0)]#[x(5)] 126260)
		move(g(0) x(5))
		inlineDot(x(5) nameToken x(6) cache)
		move(g(1) x(7))
		inlineDot(x(7) printName x(8) cache)
		move(x(6) y(7))
		createVariableMove(y(8) x(1))
		call(x(8) 2)
		move(y(7) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(1))
		putConstant(true x(2))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		branch(126304)
lbl(126260)	testBI('IsInt' [x(0)]#[x(5)] 126293)
		move(g(0) x(5))
		inlineDot(x(5) intNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(126304)
lbl(126293)	putRecord(kernel 2 x(5))
		setConstant(noElse)
		setConstant(4449)
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(126304)	move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(7))
		putConstant('' x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(7) 3 cache)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(3))
		inlineMinus1(x(3) x(4))
		move(x(2) x(0))
		move(x(4) x(1))
		sendMsg(<M: TypeToSubst> y(7) 2 cache)
		putConstant(unit x(0))
		createVariableMove(y(8) x(1))
		sendMsg(occ y(7) 2 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getLastValue y(7) 1 cache)
		move(y(9) x(0))
		sendMsg(updateValue y(8) 1 cache)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(8))
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(8))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL10
		genCall(gci(g(2) true <M: RecordToSubst> true 5) 0)
lbl(126430)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4460)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(126133)
lbl(126445)	definition(x(8) 126498 pid('SAVariable,RecordToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 922> 11)
		endDefinition(126445)
lbl(126498)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: RecordToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(126508)	definition(x(7) 126590 pid('SAVariable,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4462 6) nil 5) <Q: 923> [y(12) y(6)])
		inlineAt(lastValue x(2) cache)
		testLiteral(x(2) unit 126549)
lbl(126523)	getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(126549)	move(g(1) x(3))
		testBI('HasFeature' [x(2) x(3)]#[x(4)] 126582)
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(4) cache)
		move(x(4) x(0))
		tailCall(x(2) 2)
lbl(126582)	tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(126508)
lbl(126590)	definition(x(8) 126625 pid('SAVariable,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4462 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 923> 5)
		endDefinition(126590)
lbl(126625)	putRecord('#' [1 2 fast] x(27))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(126635)	definition(x(7) 126820 pid('SAVariable,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4472 6) nil 3) <Q: 924> [y(48)])
		allocateL4
		inlineAt(lastValue x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(0) cache)
		testLiteral(x(0) unit 126678)
lbl(126667)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 688> 7)
lbl(126678)	inlineAt(lastValue x(0) cache)
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 126740 126807)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 688> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 688> 7)
lbl(126740)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(2) 126791 126796)
		inlineAt(lastValue x(0) cache)
		moveMoveXYYX(x(0) y(2) y(0) x(1))
		getSelf(x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 688> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(reachable x(2) 2 cache)
lbl(126791)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(126796)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4492)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(126807)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126635)
lbl(126820)	definition(x(8) 126855 pid('SAVariable,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4472 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 924> 5)
		endDefinition(126820)
lbl(126855)	putRecord('#' [1 2 fast] x(28))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 20 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		move(y(48) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(126927)	definition(x(7) 127021 pid('SAVariableOccurrence,outputDebugValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4509 6) nil 5) <Q: 925> [y(2)])
		allocateL4
		getRecord('#' 3 x(0))
		unifyVariable(y(0))
		unifyLiteral(' // ')
		unifyVariable(y(1))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(2))
		getSelf(x(4))
		createVariableMove(y(3) x(0))
		sendMsg(getValue x(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(y(2) 4)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(0))
		getSelf(x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 627> 4)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		move(y(1) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		deAllocateL4
		tailCall(x(4) 4)
		endDefinition(126927)
lbl(127021)	definition(x(8) 127047 pid('SAVariableOccurrence,outputDebugValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4509 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 925> 3)
		endDefinition(127021)
lbl(127047)	putRecord('#' [1 2 fast] x(9))
		setConstant(outputDebugValue)
		setValue(x(8))
		setValue(x(7))
lbl(127057)	definition(x(7) 127066 pid('SAVariableOccurrence,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 4514 6) nil 1) <Q: 926> nil)
		return
		endDefinition(127057)
lbl(127066)	definition(x(8) 127092 pid('SAVariableOccurrence,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 4514 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 926> 3)
		endDefinition(127066)
lbl(127092)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(127102)	definition(x(7) 127142 pid('SAVariableOccurrence,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4521 6) nil 2) <Q: 927> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		move(x(0) y(0))
		getSelf(x(0))
		sendMsg(deref x(1) 1 cache)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(127102)
lbl(127142)	definition(x(8) 127168 pid('SAVariableOccurrence,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4521 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 927> 3)
		endDefinition(127142)
lbl(127168)	putRecord('#' [1 2 fast] x(11))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(127178)	definition(x(7) 127197 pid('SAVariableOccurrence,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4525 6) nil 2) <Q: 928> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(127178)
lbl(127197)	definition(x(8) 127223 pid('SAVariableOccurrence,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4525 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 928> 3)
		endDefinition(127197)
lbl(127223)	putRecord('#' [1 2 fast] x(12))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(49))
lbl(127235)	definition(x(7) 127583 pid('SAVariableOccurrence,updateValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4535 6) nil 4) <Q: 929> [y(49) y(8)])
		testLiteral(x(0) unit 127255)
		getSelf(x(2))
		getSelf(x(0))
		tailSendMsg('setValue' x(2) 1 cache)
lbl(127255)	allocateL6
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(0) 1 cache)
		testBool(y(1) 127330 127570)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 127302)
lbl(127290)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(127302)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		inlineAt(variable x(0) cache)
		move(y(2) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 127290)
lbl(127323)	move(y(1) x(0))
		deAllocateL6
		genCall(gci(g(0) true updateValue true 1) 0)
lbl(127330)	createVariableMove(y(1) x(0))
		sendMsg(isConstruction y(0) 1 cache)
		testBool(y(1) 127547 127559)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getArgs y(0) 1 cache)
lbl(127370)	definition(x(1) 127426 pid('' 2 pos('./compiler/StaticAnalysis.oz' 4565 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 127412)
lbl(127381)	allocateL2
		getVarVar(x(2) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(getLastValue x(2) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getLastValue x(1) 1 cache)
lbl(127412)	move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getLastValue x(2) 1 cache)
		endDefinition(127370)
lbl(127426)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 127465)
lbl(127444)	moveMoveYXYX(y(1) x(0) y(2) x(2))
		testBI('==' [x(0) x(2)]#[x(3)] 127465)
lbl(127453)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(127465)	move(g(1) x(0))
		inlineDot(x(0) construction x(1) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(0))
		sendMsg(isOpen y(0) 1 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(3) x(2))
		sendMsg(init y(5) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(1) x(0))
		sendMsg('setValue' y(5) 1 cache)
		move(y(5) x(0))
		sendMsg(setLastValue y(5) 1 cache)
		getSelf(x(2))
		move(y(5) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(127547)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(127559)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4555)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(127570)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(127235)
lbl(127583)	definition(x(8) 127609 pid('SAVariableOccurrence,updateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4535 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 929> 3)
		endDefinition(127583)
lbl(127609)	putRecord('#' [1 2 fast] x(13))
		setConstant(updateValue)
		setValue(x(8))
		setValue(x(7))
lbl(127619)	definition(x(7) 127638 pid('SAVariableOccurrence,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4607 6) nil 2) <Q: 930> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(setType x(1) 1 cache)
		endDefinition(127619)
lbl(127638)	definition(x(8) 127664 pid('SAVariableOccurrence,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4607 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 930> 3)
		endDefinition(127638)
lbl(127664)	putRecord('#' [1 2 fast] x(14))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(127674)	definition(x(7) 127693 pid('SAVariableOccurrence,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4610 6) nil 2) <Q: 931> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(127674)
lbl(127693)	definition(x(8) 127719 pid('SAVariableOccurrence,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4610 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 931> 3)
		endDefinition(127693)
lbl(127719)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(127729)	definition(x(7) 127748 pid('SAVariableOccurrence,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4613 6) nil 3) <Q: 932> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(127729)
lbl(127748)	definition(x(8) 127783 pid('SAVariableOccurrence,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4613 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 932> 5)
		endDefinition(127748)
lbl(127783)	putRecord('#' [1 2 fast] x(16))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(127793)	definition(x(7) 127812 pid('SAVariableOccurrence,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4616 6) nil 3) <Q: 933> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(127793)
lbl(127812)	definition(x(8) 127847 pid('SAVariableOccurrence,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4616 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 933> 5)
		endDefinition(127812)
lbl(127847)	putRecord('#' [1 2 fast] x(17))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(127857)	definition(x(7) 127897 pid('SAVariableOccurrence,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4620 6) nil 3) <Q: 934> nil)
		allocateL1
		inlineAt(variable x(2) cache)
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(127857)
lbl(127897)	definition(x(8) 127932 pid('SAVariableOccurrence,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4620 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 934> 5)
		endDefinition(127897)
lbl(127932)	putRecord('#' [1 2 fast] x(18))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(127942)	definition(x(7) 128027 pid('SAVariableOccurrence,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4624 6) nil 6) <Q: 935> [y(6) y(3)])
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 128014)
		testBool(x(1) 127965 128003)
		return
lbl(127965)	allocateL3
		move(g(1) x(0))
		inlineDot(x(0) nameVariable x(1) cache)
		moveMoveXYXY(x(2) y(0) x(1) y(1))
		getSelf(x(3))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		moveMoveYXYX(y(1) x(2) y(0) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(128003)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4628)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128014)	inlineAt(value x(3) cache)
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(127942)
lbl(128027)	definition(x(8) 128068 pid('SAVariableOccurrence,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4624 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 935> 7)
		endDefinition(128027)
lbl(128068)	putRecord('#' [1 2 fast] x(19))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(128078)	definition(x(7) 128097 pid('SAVariableOccurrence,getPrintName/fast' 1 pos('./compiler/StaticAnalysis.oz' 4637 6) nil 2) <Q: 936> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(128078)
lbl(128097)	definition(x(8) 128123 pid('SAVariableOccurrence,getPrintName/slow' 1 pos('./compiler/StaticAnalysis.oz' 4637 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 936> 3)
		endDefinition(128097)
lbl(128123)	putRecord('#' [1 2 fast] x(20))
		setConstant(getPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(128133)	definition(x(7) 128155 pid('SAVariableOccurrence,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4640 6) nil 1) <Q: 937> [y(49)])
		allocateL1
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true updateValue true 1) 0)
		endDefinition(128133)
lbl(128155)	definition(x(8) 128181 pid('SAVariableOccurrence,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4640 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 937> 3)
		endDefinition(128155)
lbl(128181)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
lbl(128191)	definition(x(7) 128259 pid('SAVariableOccurrence,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4646 6) nil 4) <Q: 938> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 128229 128246)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(128229)	inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(128246)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4650)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(128191)
lbl(128259)	definition(x(8) 128294 pid('SAVariableOccurrence,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4646 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 938> 5)
		endDefinition(128259)
lbl(128294)	putRecord('#' [1 2 fast] x(22))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(128304)	definition(x(7) 128605 pid('SAVariableOccurrence,unifyVal/fast' 2 pos('./compiler/StaticAnalysis.oz' 4661 6) nil 6) <Q: 939> [y(49) y(15)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 670> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 128349)
		deAllocateL5
		return
lbl(128349)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 128371 128592)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genCall(gci(g(0) true bind true 2) 0)
lbl(128371)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 128399 128581)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(128399)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(3) 128555 128570)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(3) 128529 128544)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 128454)
		deAllocateL5
		return
lbl(128454)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(2))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 672> 7)
lbl(128529)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(128544)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4684)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128555)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(128570)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4681)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128581)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4677)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128592)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4673)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(128304)
lbl(128605)	definition(x(8) 128640 pid('SAVariableOccurrence,unifyVal/slow' 1 pos('./compiler/StaticAnalysis.oz' 4661 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 939> 5)
		endDefinition(128605)
lbl(128640)	putRecord('#' [1 2 fast] x(23))
		setConstant(unifyVal)
		setValue(x(8))
		setValue(x(7))
lbl(128650)	definition(x(7) 128710 pid('SAVariableOccurrence,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 4710 6) nil 5) <Q: 940> nil)
		allocateL2
		inlineAt(coord x(3) cache)
		move(x(1) y(0))
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(1) 128695 128697)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(128695)	deAllocateL2
		return
lbl(128697)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4714)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(128650)
lbl(128710)	definition(x(8) 128745 pid('SAVariableOccurrence,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 4710 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 940> 5)
		endDefinition(128710)
lbl(128745)	putRecord('#' [1 2 fast] x(24))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(128755)	definition(x(7) 128909 pid('SAVariableOccurrence,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4726 6) nil 5) <Q: 941> [y(49)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 670> 10)
		testBool(y(3) 128894 128896)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		createVariable(y(4))
		testBool(y(3) 128822 128871)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(128882)
lbl(128822)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 128855 128860)
		move(y(1) x(0))
		sendMsg(deref y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(128882)
lbl(128855)	unify(y(4) y(1))
		branch(128882)
lbl(128860)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4749)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128871)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4744)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(128882)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnifyDeref> true 3) 0)
lbl(128894)	deAllocateL5
		return
lbl(128896)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4741)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(128755)
lbl(128909)	definition(x(8) 128944 pid('SAVariableOccurrence,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4726 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 941> 5)
		endDefinition(128909)
lbl(128944)	putRecord('#' [1 2 fast] x(25))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(128954)	definition(x(7) 129351 pid('SAVariableOccurrence,UnifyDeref/fast' 3 pos('./compiler/StaticAnalysis.oz' 4766 6) nil 6) <Q: 942> [y(15)])
		testBI('==' [x(1) x(2)]#[x(3)] 128965)
		return
lbl(128965)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(3) 129002 129338)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(129002)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 129030 129327)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(129030)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 129095 129316)
		createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 129080 129069)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(bind y(2) 2 cache)
		branch(129080)
lbl(129069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4787)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129080)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(129095)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 129123 129305)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(129123)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(3) 129279 129294)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 637> 4)
		testBool(y(3) 129253 129268)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 129178)
		deAllocateL6
		return
lbl(129178)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(2) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(5))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL6
		genFastCall(<Q: 672> 7)
lbl(129253)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(129268)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4802)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129279)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(129294)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4799)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129305)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4795)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129316)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4783)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129327)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4779)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129338)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4775)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(128954)
lbl(129351)	definition(x(8) 129392 pid('SAVariableOccurrence,UnifyDeref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4766 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 942> 7)
		endDefinition(129351)
lbl(129392)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: UnifyDeref>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 18 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		move(y(49) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(129469)	definition(x(7) 129499 pid('SAToken,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 4831 6) nil 2) <Q: 943> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 616> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(129469)
lbl(129499)	definition(x(8) 129513 pid('SAToken,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 4831 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 943> 1)
		endDefinition(129499)
lbl(129513)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(129523)	definition(x(7) 129537 pid('SAToken,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4834 6) nil 2) <Q: 944> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(129523)
lbl(129537)	definition(x(8) 129563 pid('SAToken,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4834 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 944> 3)
		endDefinition(129537)
lbl(129563)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(129573)	definition(x(7) 129590 pid('SAToken,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4837 6) nil 2) <Q: 945> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(129573)
lbl(129590)	definition(x(8) 129616 pid('SAToken,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4837 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 945> 3)
		endDefinition(129590)
lbl(129616)	putRecord('#' [1 2 fast] x(11))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(129626)	definition(x(7) 129642 pid('SAToken,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4840 6) nil 2) <Q: 946> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 682> 5)
		endDefinition(129626)
lbl(129642)	definition(x(8) 129677 pid('SAToken,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4840 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 946> 5)
		endDefinition(129642)
lbl(129677)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(129687)	definition(x(7) 129721 pid('SAToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4843 6) nil 4) <Q: 947> [y(12)])
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(129687)
lbl(129721)	definition(x(8) 129756 pid('SAToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4843 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 947> 5)
		endDefinition(129721)
lbl(129756)	putRecord('#' [1 2 fast] x(13))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(129766)	definition(x(7) 129804 pid('SAToken,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4846 6) nil 2) <Q: 948> nil)
		testBool(x(0) 129782 129791)
		getSelf(x(0))
		unify(x(0) x(1))
		return
lbl(129782)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
lbl(129791)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4847)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(129766)
lbl(129804)	definition(x(8) 129839 pid('SAToken,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4846 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 948> 5)
		endDefinition(129804)
lbl(129839)	putRecord('#' [1 2 fast] x(14))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(129849)	definition(x(7) 129922 pid('SAToken,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4850 6) nil 5) <Q: 949> [y(2)])
		testBool(x(1) 129865 129909)
		getSelf(x(0))
		unify(x(0) x(2))
		return
lbl(129865)	allocateL3
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		moveMoveXYXY(x(2) y(0) x(1) y(1))
		getSelf(x(4))
		createVariableMove(y(2) x(0))
		sendMsg(getValue x(4) 1 cache)
		moveMoveYXYX(y(1) x(4) y(2) x(0))
		move(y(0) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		deAllocateL3
		tailCall(x(4) 4)
lbl(129909)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4851)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(129849)
lbl(129922)	definition(x(8) 129963 pid('SAToken,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4850 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 949> 7)
		endDefinition(129922)
lbl(129963)	putRecord('#' [1 2 fast] x(15))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAToken' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(130009)	definition(x(7) 130078 pid('SANameToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4858 6) nil 4) <Q: 950> [y(12)])
		inlineAt(isToplevel x(0) cache)
		testBool(x(0) 130039 130065)
		getRecord(value 1 x(1))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
lbl(130039)	getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(130065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4859)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(130009)
lbl(130078)	definition(x(8) 130113 pid('SANameToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4858 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 950> 5)
		endDefinition(130078)
lbl(130113)	putRecord('#' [1 2 fast] x(9))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANameToken' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABuiltinToken' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(70))
		unifyValue(y(14))
		unifyValue(y(34))
		unifyValue(y(45))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(6))
		unifyValue(y(43))
		unifyValue(y(40))
		unifyValue(y(29))
		unifyValue(y(44))
		unifyValue(y(32))
		unifyValue(y(28))
		unifyValue(y(24))
		unifyValue(y(30))
		unifyValue(y(42))
		unifyValue(y(16))
		unifyValue(y(26))
		unifyValue(y(10))
		unifyValue(y(38))
		unifyValue(y(47))
		unifyValue(y(31))
		unifyValue(y(37))
		unifyValue(y(39))
		unifyValue(y(46))
		unifyValue(y(35))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(20))
		unifyValue(y(5))
		unifyValue(y(13))
		unifyValue(y(3))
		unifyValue(y(17))
		unifyValue(y(36))
		unifyValue(y(41))
		unifyValue(y(4))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(25))
		unifyValue(y(11))
		unifyValue(y(23))
		unifyValue(y(27))
		unifyValue(y(2))
		unifyValue(y(33))
		unifyValue(y(22))
		unifyValue(y(21))
		unifyValue(y(48))
		unifyValue(y(49))
		deAllocateL
		return
		endDefinition(83357)
lbl(130276)	tailCall(x(2) 0)
		endDefinition(81257)
lbl(130281)	putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(21))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(22))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(23))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(24))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(25))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(26))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(27))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(39))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(40))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(41))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(42))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(43))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(44))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(45))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(46))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(47))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(48))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(49))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(50))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(51))
		setValue(x(4))
		putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(52))
		setConstant(nil)
		putList(x(58))
		setConstant(distribute)
		setConstant(nil)
		putList(x(57))
		setConstant(distinct)
		setValue(x(58))
		putList(x(56))
		setConstant(less)
		setValue(x(57))
		putList(x(55))
		setConstant(is)
		setValue(x(56))
		putList(x(54))
		setConstant(int)
		setValue(x(55))
		putRecord(info [type] x(53))
		setValue(x(54))
		putList(x(65))
		setConstant(isIn)
		setConstant(nil)
		putList(x(64))
		setConstant(reflect)
		setValue(x(65))
		putList(x(63))
		setConstant(value)
		setValue(x(64))
		putList(x(62))
		setConstant(subset)
		setValue(x(63))
		putList(x(61))
		setConstant(var)
		setValue(x(62))
		putList(x(60))
		setConstant(include)
		setValue(x(61))
		putRecord(info [type] x(59))
		setValue(x(60))
		putRecord(info [type] x(66))
		setConstant(nil)
		putRecord(info [type] x(67))
		setConstant(nil)
		putRecord(info [type] x(68))
		setConstant(nil)
		putRecord(info [type] x(69))
		setConstant(nil)
		putList(x(72))
		setConstant(nameVariable)
		setConstant(nil)
		putList(x(71))
		setConstant(isBuiltin)
		setValue(x(72))
		putRecord(info [type] x(70))
		setValue(x(71))
		putList(x(74))
		setConstant(tokens)
		setConstant(nil)
		putRecord(info [type] x(73))
		setValue(x(74))
		putList(x(78))
		setConstant(printName)
		setConstant(nil)
		putList(x(77))
		setConstant(valueToVirtualString)
		setValue(x(78))
		putList(x(76))
		setConstant(eq)
		setValue(x(77))
		putRecord(info [type] x(75))
		setValue(x(76))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'ImAConstruction' 'ImAToken' 'ImAValueNode' 'ImAVariableOccurrence' 'Misc' 'RunTime' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(52))
		setValue(x(53))
		setValue(x(59))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		setValue(x(73))
		setValue(x(75))
		putRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(22))
		setValue(x(15))
		setValue(x(44))
		setValue(x(16))
		setValue(x(17))
		setValue(x(51))
		setValue(x(41))
		setValue(x(38))
		setValue(x(28))
		setValue(x(42))
		setValue(x(14))
		setValue(x(11))
		setValue(x(8))
		setValue(x(12))
		setValue(x(40))
		setValue(x(23))
		setValue(x(10))
		setValue(x(21))
		setValue(x(36))
		setValue(x(46))
		setValue(x(13))
		setValue(x(35))
		setValue(x(37))
		setValue(x(45))
		setValue(x(27))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(29))
		setValue(x(30))
		setValue(x(50))
		setValue(x(24))
		setValue(x(34))
		setValue(x(39))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(9))
		setValue(x(5))
		setValue(x(7))
		setValue(x(25))
		setValue(x(49))
		setValue(x(26))
		setValue(x(6))
		setValue(x(43))
		setValue(x(47))
		setValue(x(48))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(131157)	definition(x(2) 187701 pid('' 2 pos('./compiler/FunCode.oz' 1 0) nil 4) <P: 951> [y(156) y(150) y(206) y(96) y(149) y(154) y(148) y(213) y(216) y(153) y(98) y(184) y(185) y(169) y(95) y(97) y(210) y(207) y(155) y(151) y(205) y(211) y(212) y(99) y(7) y(144) y(2) y(166) y(94) y(203) y(1) y(163) y(165) y(47) y(170)])
		putList(x(2))
		setPredicateRef(<Q: 952>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 953>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 954>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 955>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 956>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 957>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Temporaries>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Permanents>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LastAliveRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ShortLivedTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UsedX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LowestFreeX>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HighestEverX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UsedY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LowestFreeY>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestEverY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GRegRef>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestUsedG>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvSize>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LocalVarnames>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeHd>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CodeTl>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvsInhibited>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AdjDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DelayedInitsDict>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoneDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentID>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stack>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arity>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LetDie>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LetDieSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVInstr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DebugEntry>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DebugExit>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitSendMsg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GenericEmitCall>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SetArguments>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OrderMoves>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetCycle>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordRead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitUnifies>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitDisjunction>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitTestConstant>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrepareShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PushContLabel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PopContLabel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dereference>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DereferenceSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsFirst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: IsLast>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitInitialization>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ReserveTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocatePerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CopyTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CopyPerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FreeX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictArgReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForCall>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictRegForInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictPermReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Emit>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitMultiple>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 958>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 959>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 960>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 961>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 962>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 963>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 964>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 965>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 966>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 967>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 968>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 969>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 970>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 971>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 972>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 973>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 974>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 975>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 976>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 977>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 978>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 979>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 980>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 981>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 982>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 983>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 984>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 985>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 986>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 987>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 988>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 989>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 990>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 991>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 992>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 993>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 994>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 995>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 996>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 997>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 998>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 999>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1000>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1001>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1002>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1003>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1004>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1005>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1006>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1007>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1008>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1009>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1010>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1011>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1012>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1013>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1014>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1015>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1016>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1017>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1018>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1019>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1020>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1021>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1022>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1023>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1024>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1025>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1026>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1027>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1028>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1029>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1030>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1031>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmptyRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Saved>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ComputeOccs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOcc>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOccVArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1032>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1033>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1034>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1035>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1036>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1037>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1038>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1039>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1040>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1041>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1042>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1043>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1044>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1045>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1046>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1047>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1048>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1049>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1050>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1051>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1052>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1053>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1054>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1055>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1056>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1057>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1058>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1059>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1060>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1061>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1062>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1063>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1064>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1065>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1066>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1067>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1068>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1069>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1070>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1071>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1072>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1073>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Scalars>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Records>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AltNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arbiter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: WarnedCatchAll>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Reg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRecord>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeGenRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1074>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1075>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1076>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1077>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1078>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1079>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1080>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1081>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1082>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1083>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1084>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1085>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1086>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1087>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1088>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1089>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1090>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1091>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Val>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1092>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1093>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1094>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1095>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1096>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1097>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1098>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1099>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1100>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1101>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1102>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1103>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1104>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1105>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1106>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1107>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1108>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1109>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1110>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1111>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1112>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1113>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1114>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1115>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1116>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1117>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1118>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1119>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1120>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1121>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1122>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1123>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1124>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1125>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1126>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1127>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1128>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1129>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1130>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1131>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1132>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1133>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1134>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1135>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1136>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1137>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1138>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1139>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1140>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1141>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1142>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1143>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1144>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1145>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1146>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1147>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MessagePatternVO>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1148>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1149>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1150>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1151>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1152>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1153>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1154>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1155>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1156>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1157>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1158>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1159>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1160>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1161>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1162>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1163>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1164>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1165>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1166>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1167>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1168>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1169>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1170>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1171>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1172>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1173>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1174>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1175>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1176>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1177>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1178>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1179>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1180>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1181>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1182>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1183>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1184>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1185>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1186>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1187>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1188>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1189>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1190>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1191>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1192>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1193>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1194>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1195>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1196>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1197>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1198>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1199>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1200>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1201>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1202>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1203>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1204>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ClauseBodyShared>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1205>)
		setValue(x(2))
lbl(133407)	definitionCopy(x(3) 187696 pid('/body' 0 pos('./compiler/FunCode.oz' 1 0) [once] 84) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) x(1)])
		allocateL(49)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'Misc' x(2) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'ImAVariableOccurrence' x(3) cache)
		inlineDot(x(0) 'Core' x(4) cache)
		inlineDot(x(0) 'RunTime' x(5) cache)
lbl(133454)	definition(x(8) 133479 pid('NextFreeIndex' 3 pos('./compiler/CodeEmitter.oz' 25 3) nil 4) <Q: 952> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 133473)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 952> 7)
lbl(133473)	unify(x(2) x(1))
		return
		endDefinition(133454)
lbl(133479)	definition(x(8) 133531 pid('NextFreeIndexWithoutPrintName' 4 pos('./compiler/CodeEmitter.oz' 31 3) nil 5) <Q: 953> [g(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 133518)
lbl(133500)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 953> 9)
lbl(133518)	testBI('Dictionary.member' [x(1) x(2)]#[x(4)] 133524)
		branch(133500)
lbl(133524)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(133479)
lbl(133531)	definition(x(8) 133587 pid('NextFreeIndexWithEmptyPrintName' 4 pos('./compiler/CodeEmitter.oz' 38 3) nil 6) <Q: 954> [g(1) g(2)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 133570)
lbl(133552)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 954> 9)
lbl(133570)	putConstant('' x(4))
		callBI('Dictionary.condGet' [x(1) x(2) x(4)]#[x(5)])
		testLiteral(x(5) '' 133552)
lbl(133580)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(133531)
lbl(133587)	definition(x(8) 133624 pid('LastUsedIndex' 3 pos('./compiler/CodeEmitter.oz' 46 3) nil 5) <Q: 955> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 133601)
		unify(x(2) x(1))
		return
lbl(133601)	putConstant(0 x(3))
		testLE(x(1) x(3) x(4) 133613)
		getNumber(~1 x(2))
		return
lbl(133613)	inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 955> 7)
		endDefinition(133587)
lbl(133624)	definition(x(8) 133744 pid('OccursInVArgs' 3 pos('./compiler/CodeEmitter.oz' 53 3) nil 4) <Q: 956> nil)
		match(x(0) ht(133729 [onScalar(nil 133633) onRecord('|' 2 133637)]))
lbl(133633)	getLiteral(false x(2))
		return
lbl(133637)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testRecord(y(0) value 1 133667)
lbl(133654)	getVariable(x(3))
		shallowGuard(133667)
		unify(y(1) x(3))
lbl(133661)	shallowThen
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(133667)	testRecord(y(0) record 3 133717)
lbl(133672)	getVoid(2)
		getVariable(x(0))
		move(y(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 956> 6)
		testBool(y(0) 133694 133706)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(133694)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 956> 7)
lbl(133706)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133717)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 956> 7)
lbl(133729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(61)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(133624)
lbl(133744)	definition(x(8) 133770 pid('IsStep' 2 pos('./compiler/CodeEmitter.oz' 64 3) nil 3) <Q: 957> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(133764 [onScalar('pos' 133756) onScalar(unit 133760)]))
lbl(133756)	getLiteral(false x(1))
		return
lbl(133760)	getLiteral(false x(1))
		return
lbl(133764)	getLiteral(true x(1))
		return
		endDefinition(133744)
lbl(133770)	putRecord('attr' [<M: AdjDict> <M: Arity> <M: CodeHd> <M: CodeTl> <M: CurrentID> <M: DelayedInitsDict> <M: DoneDict> <M: GRegRef> <M: HighestEverX> <M: HighestEverY> <M: HighestUsedG> <M: LastAliveRS> <M: LocalEnvSize> <M: LocalEnvsInhibited> <M: LocalVarnames> <M: LowestFreeX> <M: LowestFreeY> <M: Permanents> <M: ShortLivedTemps> <M: Stack> <M: Temporaries> <M: UsedX> <M: UsedY> contLabels continuations] x(8))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(133824)	definition(x(9) 133873 pid('Emitter,init/fast' 0 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) <Q: 958> nil)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: GRegRef> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: LocalVarnames> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DelayedInitsDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: AdjDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DoneDict> x(0) cache)
		return
		endDefinition(133824)
lbl(133873)	definition(x(10) 133887 pid('Emitter,init/slow' 1 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 958> 1)
		endDefinition(133873)
lbl(133887)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(0))
		createVariable(y(1))
lbl(133901)	definition(x(9) 134563 pid('Emitter,doEmit/fast' 6 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) <Q: 959> [y(0) g(3) g(4) y(1) g(5) g(2) g(6)])
		allocateL7
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Temporaries> x(6) cache)
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Permanents> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(6) x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
lbl(133953)	definition(x(1) 133968 pid('' 1 pos('./compiler/CodeEmitter.oz' 106 21) nil 2) unit [g(1) y(6)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(133953)
lbl(133968)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		putConstant(nil x(2))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedX> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeX> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverX> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedY> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestUsedG> x(2) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: LocalEnvSize> x(2) cache)
		putRecord('allocateL' 1 x(0))
		setValue(x(2))
		putList(x(3))
		setValue(x(0))
		setVariable(x(4))
		inlineAssign(<M: CodeHd> x(3) cache)
		inlineAssign(<M: CodeTl> x(4) cache)
		putConstant(false x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(continuations x(2) cache)
		putConstant(nil x(2))
		inlineAssign(contLabels x(2) cache)
		getSelf(x(2))
lbl(134098)	definition(x(1) 134122 pid('' 2 pos('./compiler/CodeEmitter.oz' 122 3) nil 4) unit [x(2) g(3)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		createVariable(x(2))
		genCall(gci(g(1) true <M: AllocateThisTemp> true 3) 0)
		endDefinition(134098)
lbl(134122)	move(y(0) x(0))
		genFastCall(<P: 86> 4)
		getSelf(x(2))
lbl(134130)	definition(x(1) 134148 pid('' 1 pos('./compiler/CodeEmitter.oz' 124 3) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(x(1))
		genCall(gci(g(1) true <M: GetPerm> true 2) 0)
		endDefinition(134130)
lbl(134148)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		genCall(gci(g(3) true <M: EmitAddr> false 1) 0)
		inlineAt(<M: HighestUsedG> x(0) cache)
		getSelf(x(6))
lbl(134167)	definition(x(3) 134198 pid('' 3 pos('./compiler/CodeEmitter.oz' 127 4) nil 5) unit [x(6) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(134167)
lbl(134198)	move(y(4) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(nil x(0))
		inlineAt(<M: CodeTl> x(1) cache)
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		testBool(x(0) 134423 134441)
		inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 134295)
lbl(134261)	testLiteral(y(4) nil 134295)
lbl(134265)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('localVarname' 1 x(2))
		unifyLiteral('')
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(134452)
lbl(134295)	getRecord('#' 2 y(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: CodeHd> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: HighestEverY> x(0) cache)
		getSelf(x(3))
lbl(134318)	definition(x(1) 134352 pid('' 3 pos('./compiler/CodeEmitter.oz' 140 2) nil 6) unit [x(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: LocalVarnames> x(4) cache)
		callBI('Dictionary.get' [x(4) x(1)]#[x(5)])
		getList(x(2))
		unifyVariable(x(1))
		unifyValue(x(0))
		getRecord('localVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(134318)
lbl(134352)	getSelf(x(3))
lbl(134354)	definition(x(4) 134385 pid('' 2 pos('./compiler/CodeEmitter.oz' 145 3) nil 6) unit [x(3) g(5)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		putConstant('' x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getRecord('globalVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(134354)
lbl(134385)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(0) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(134452)
lbl(134423)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(134452)
lbl(134441)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134452)	inlineAt(<M: HighestEverX> x(0) cache)
		inlinePlus1(x(0) x(1))
		unify(x(1) y(5))
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Temporaries> x(0) cache)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Permanents> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: CodeHd> x(0) cache)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedX> x(0) cache)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: LocalVarnames> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL7
		return
		endDefinition(133901)
lbl(134563)	definition(x(10) 134622 pid('Emitter,doEmit/slow' 1 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 959> 13)
		endDefinition(134563)
lbl(134622)	putRecord('#' [1 2 fast] x(12))
		setConstant(doEmit)
		setValue(x(10))
		setValue(x(9))
lbl(134632)	definition(x(9) 134657 pid('Emitter,newLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 2) <Q: 960> nil)
		inlineAt(nextLabel x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(nextLabel x(1) cache)
		return
		endDefinition(134632)
lbl(134657)	definition(x(10) 134683 pid('Emitter,newLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 960> 3)
		endDefinition(134657)
lbl(134683)	putRecord('#' [1 2 fast] x(13))
		setConstant(newLabel)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(2))
lbl(134695)	definition(x(9) 134957 pid('Emitter,EmitAddr/fast' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 5) <Q: 961> [y(1) g(1) g(7) y(2)])
		match(x(0) ht(134859 [onScalar(nil 134704) onRecord(vShared 4 134739)]))
lbl(134704)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(134726 [onScalar(nil 134712) onRecord('|' 2 134715)]))
lbl(134712)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(134715)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134726)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(134739)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(2) nil 134785)
lbl(134750)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(134772 [onScalar(nil 134758) onRecord('|' 2 134761)]))
lbl(134758)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(134761)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134772)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(134785)	inlineAt(sharedDone x(3) cache)
		testBI('Dictionary.member' [x(3) x(0)]#[x(4)] 134806)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134806)	allocateL2
		inlineAt(sharedDone x(3) cache)
		putConstant(true x(4))
		callBI('Dictionary.put' [x(3) x(0) x(4)]#nil)
		putRecord('lbl' 1 x(3))
		setValue(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putConstant(1 x(2))
		testLT(x(2) x(1) x(0) 134852)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
lbl(134852)	move(y(1) x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(134859)	allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(3) x(2))
		callBI('.' [x(2) x(1)]#[x(3)])
		callBI('.' [x(0) x(3)]#[x(1)])
		testLiteral(x(1) nil 134910)
lbl(134900)	genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		putConstant(nil x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(134910)	inlineAt(continuations x(3) cache)
		putList(x(4))
		setValue(x(1))
		setValue(x(3))
		inlineAssign(continuations x(4) cache)
		move(x(3) y(1))
		genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		inlineAt(continuations x(1) cache)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineAssign(continuations x(1) cache)
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(134695)
lbl(134957)	definition(x(10) 134983 pid('Emitter,EmitAddr/slow' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 961> 3)
		endDefinition(134957)
lbl(134983)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: EmitAddr>)
		setValue(x(10))
		setValue(x(9))
lbl(134993)	definition(x(9) 135042 pid('Emitter,FlushShortLivedTemps/fast' 0 pos('./compiler/CodeEmitter.oz' 239 6) nil 2) <Q: 962> [y(1)])
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		match(x(0) ht(135027 [onScalar(nil 135007) onRecord('|' 2 135008)]))
lbl(135007)	return
lbl(135008)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL1
		genCall(gci(g(0) true <M: FlushShortLivedTemps> true 0) 0)
lbl(135027)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(134993)
lbl(135042)	definition(x(10) 135056 pid('Emitter,FlushShortLivedTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 239 6) nil 1) unit nil)
		getLiteral(<M: FlushShortLivedTemps> x(0))
		genFastCall(<Q: 962> 1)
		endDefinition(135042)
lbl(135056)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(10))
		setValue(x(9))
lbl(135066)	definition(x(9) 135098 pid('Emitter,LetDie/fast' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) <Q: 963> [g(8) g(9) y(1)])
		inlineAt(<M: LastAliveRS> x(1) cache)
		testBI('\\=' [x(1) x(0)]#[x(2)] 135095)
		inlineAssign(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.nimpl' [x(1) x(0)]#nil)
		callBI('BitArray.toList' [x(1)]#[x(0)])
		genCall(gci(g(2) true <M: LetDieSub> true 1) 0)
lbl(135095)	return
		endDefinition(135066)
lbl(135098)	definition(x(10) 135124 pid('Emitter,LetDie/slow' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 963> 3)
		endDefinition(135098)
lbl(135124)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: LetDie>)
		setValue(x(10))
		setValue(x(9))
lbl(135134)	definition(x(9) 135243 pid('Emitter,LetDieSub/fast' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 4) <Q: 964> [g(2) y(1) g(10)])
		match(x(0) ht(135228 [onScalar(nil 135143) onRecord('|' 2 135144)]))
lbl(135143)	return
lbl(135144)	allocateL2
		getVarVar(x(0) y(0))
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(1))
		testRecord(x(3) x 1 135186)
lbl(135167)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(135186)	inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 135221)
lbl(135205)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(135221)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true <M: LetDieSub> true 1) 0)
lbl(135228)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(269)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(135134)
lbl(135243)	definition(x(10) 135269 pid('Emitter,LetDieSub/slow' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 964> 3)
		endDefinition(135243)
lbl(135269)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: LetDieSub>)
		setValue(x(10))
		setValue(x(9))
lbl(135279)	definition(x(9) 140499 pid('Emitter,EmitVInstr/fast' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 9) <Q: 965> [y(1) g(1) g(5) g(7) x(7) g(11) g(2) g(12) g(10) g(13)])
		match(x(0) ht(140484 [onRecord(vStepPoint 5 135288) onRecord(vMakePermanent 3 135332) onRecord(vClear 3 135528) onRecord(vUnify 4 135658) onRecord(vFailure 2 135841) onRecord(vEquateNumber 4 135847) onRecord(vEquateLiteral 4 135929) onRecord(vEquateRecord 6 136096) onRecord(vGetVariable 3 136290) onRecord(vCallBuiltin 5 136371) onRecord(vGenCall 8 137085) onRecord(vCall 5 137292) onRecord(vFastCall 5 137367) onRecord(vApplMeth 7 137464) onRecord(vInlineDot 7 137547) onRecord(vInlineAt 4 137758) onRecord(vInlineAssign 4 137831) onRecord(vGetSelf 3 137857) onRecord(vSetSelf 3 137953) onRecord(vDefinition 7 137974) onRecord(vDefinitionCopy 8 138271) onRecord(vExHandler 7 138548) onRecord(vPopEx 3 138681) onRecord(vCreateCond 7 138697) onRecord(vCreateOr 6 138986) onRecord(vCreateEnumOr 6 139006) onRecord(vCreateChoice 6 139026) onRecord(vAsk 2 139046) onRecord(vWait 2 139065) onRecord(vWaitTop 2 139084) onRecord(vShallowGuard 8 139103) onRecord(vTestBool 8 139260) onRecord(vTestBuiltin 7 139553) onRecord(vTestNumber 8 139752) onRecord(vTestLiteral 8 139774) onRecord(vMatch 7 139796) onRecord(vThread 5 140123) onRecord(vLockThread 5 140291) onRecord(vLockEnd 4 140394)]))
lbl(135288)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135332)	getVoid(1)
		getVariable(x(0))
		getSelf(x(2))
lbl(135338)	definition(x(1) 135525 pid('' 1 pos('./compiler/CodeEmitter.oz' 282 6) nil 4) unit [x(2) g(1) g(0) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(regNames x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 135522)
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 135520)
lbl(135372)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 135508)
lbl(135394)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoNameVarsSwitch x(0) cache)
		testBool(x(0) 135495 135497)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		createVariableMove(y(3) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putList(x(3))
		setValue(y(3))
		setConstant(nil)
		putList(x(2))
		setValue(y(2))
		setValue(x(3))
		putRecord('#' 2 x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord('callBI' 2 x(0))
		setConstant(nameVariable)
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(135495)	deAllocateL4
		return
lbl(135497)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(288)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(135508)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(135520)	deAllocateL4
		return
lbl(135522)	return
		endDefinition(135338)
lbl(135525)	genFastCall(<P: 34> 5)
lbl(135528)	getVoid(1)
		getVariable(x(0))
		inlineAt(continuations x(1) cache)
		testLiteral(x(1) nil 135542)
		return
lbl(135542)	getSelf(x(2))
lbl(135544)	definition(x(1) 135655 pid('' 1 pos('./compiler/CodeEmitter.oz' 306 2) nil 2) unit [x(2) g(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 135571)
lbl(135569)	deAllocateL3
		return
lbl(135571)	testRecord(y(1) y 1 135640)
lbl(135576)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: IsLast> false 2) 0)
		testBool(y(2) 135591 135619)
		branch(135630)
lbl(135591)	move(y(0) x(0))
		genCall(gci(g(1) true <M: FreeReg> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocateUnnamedPerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(135630)
lbl(135619)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(309)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(135630)	putRecord(clear 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(135640)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(316)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(135544)
lbl(135655)	genFastCall(<P: 34> 5)
lbl(135658)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 135710)
lbl(135686)	testLiteral(y(3) none 135724)
lbl(135690)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(135724)
lbl(135710)	match(y(3) ht(135713 [onScalar(none 135724)]))
lbl(135713)	putRecord('unify' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
lbl(135724)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 135759)
lbl(135737)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		match(y(2) ht(135749 [onScalar(none 135780)]))
lbl(135749)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
		branch(135780)
lbl(135759)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(3) none 135780)
lbl(135772)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
lbl(135780)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 135817)
lbl(135793)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 135808)
lbl(135806)	deAllocateL4
		return
lbl(135808)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(135817)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(0) none 135839)
lbl(135830)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(135839)	deAllocateL4
		return
lbl(135841)	putConstant('failure' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(135847)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(3) none 135917)
lbl(135868)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(0) 135883 135906)
		deAllocateL4
		return
lbl(135883)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(135906)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(135917)	putRecord('getNumber' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(135929)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 136084)
lbl(135952)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 135985 136073)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(135985)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 136000 136062)
		deAllocateL5
		return
lbl(136000)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(5))
		putConstant(0 x(3))
		putConstant(nil x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 136028 136051)
		deAllocateL5
		return
lbl(136028)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL5
		return
lbl(136051)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136062)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136073)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136084)	putRecord('getLiteral' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136096)	allocateL6
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(x(5))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(3) x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 136129 136279)
		deAllocateL6
		return
lbl(136129)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(3) x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 136205)
lbl(136156)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 136171 136194)
		deAllocateL6
		return
lbl(136171)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordWrite> true 4) 0)
lbl(136194)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136205)	move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 136265 136254)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 956> 6)
		testBool(y(5) 136235 136243)
		branch(136265)
lbl(136235)	move(y(2) x(0))
		genCall(gci(g(0) true <M: FreeReg> false 1) 0)
		branch(136265)
lbl(136243)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(398)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136254)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136265)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordRead> true 4) 0)
lbl(136279)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136290)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 136361)
lbl(136308)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(1) 136331 136350)
		putRecord('getVoid' 1 x(0))
		setConstant(1)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136331)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136350)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136361)	putRecord('unifyValue' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136371)	allocateL(14)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(5) x(0))
		putConstant(test x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(6))
		testBool(x(3) 136901 136906)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(4) vTestBool 8 136896)
lbl(136431)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		getVoid(1)
		getVarVar(x(3) x(4))
		getVariable(x(5))
		createVariable(y(4))
		shallowGuard(136896)
		unify(y(7) x(0))
lbl(136452)	shallowThen
		getSelf(x(6))
		inlineDot(x(6) debugInfoControlSwitch x(6) cache)
		testBI('Not' [x(6)]#[x(7)] 136880)
lbl(136465)	moveMoveXYXY(x(1) y(8) x(2) y(9))
		moveMoveXYXY(x(3) y(10) x(4) y(11))
		move(x(5) y(12))
		createVariableMove(y(13) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(13) 136880 136885)
lbl(136488)	moveMoveYXYX(y(7) x(0) y(8) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 136880 136885)
lbl(136503)	moveMoveYXYX(y(7) x(0) y(9) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 136880 136885)
lbl(136518)	moveMoveYXYX(y(7) x(0) y(11) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 136880 136885)
lbl(136533)	createVariable(y(7))
		match(y(1) ht(136848 [onScalar('==' 136538) onScalar('\\=' 136693)]))
lbl(136538)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(136622 [onRecord(vEquateNumber 4 136570) onRecord(vEquateLiteral 4 136596)]))
lbl(136570)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136596)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136622)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(136688 [onRecord(vEquateNumber 4 136636) onRecord(vEquateLiteral 4 136662)]))
lbl(136636)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136662)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136688)	getNumber(~1 y(7))
		branch(136851)
lbl(136693)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(136777 [onRecord(vEquateNumber 4 136725) onRecord(vEquateLiteral 4 136751)]))
lbl(136725)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136751)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136777)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(136843 [onRecord(vEquateNumber 4 136791) onRecord(vEquateLiteral 4 136817)]))
lbl(136791)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136817)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136851)
lbl(136843)	getNumber(~1 y(7))
		branch(136851)
lbl(136848)	getNumber(~1 y(7))
lbl(136851)	testNumber(y(7) ~1 136875)
lbl(136855)	getRecord(vTestBuiltin 7 y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(136917)
lbl(136875)	unify(y(6) y(7))
		branch(136917)
lbl(136880)	getNumber(~1 y(6))
		branch(136917)
lbl(136885)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(426)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136896)	getNumber(~1 y(6))
		branch(136917)
lbl(136901)	getNumber(~1 y(6))
		branch(136917)
lbl(136906)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(421)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(136917)	testNumber(y(6) ~1 137061)
lbl(136921)	testLiteral(y(1) 'getReturn' 136990)
lbl(136925)	getList(y(2))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 136963)
lbl(136944)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(1))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136963)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136990)	move(y(5) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(2) x(0))
		move(g(7) x(3))
		createVariableMove(y(0) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('#' 2 x(1))
		setValue(y(0))
		setValue(y(4))
		putRecord('callBI' 2 x(0))
		setValue(y(1))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: EmitUnifies> false 1) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(137061)	inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		putList(x(1))
		setValue(y(6))
		setValue(x(0))
		inlineAssign(continuations x(1) cache)
		deAllocateL
		return
lbl(137085)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testRecord(y(6) g 1 137153)
lbl(137111)	putRecord('gci' 5 x(0))
		setVariable(x(4))
		setValue(y(1))
		setValue(y(2))
		setConstant(false)
		setValue(y(3))
		putRecord('genCall' 2 x(3))
		setValue(x(0))
		setConstant(0)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(5) x(6))
		putConstant(any x(0))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137153)	testBool(y(1) 137221 137281)
		putRecord('ami' 2 x(1))
		setValue(y(2))
		setValue(y(3))
		putRecord('applMeth' 2 x(0))
		setValue(x(1))
		setVariable(x(2))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariable(y(3))
		testLiteral(x(1) nil 137194)
lbl(137189)	getLiteral(non_y y(3))
		branch(137197)
lbl(137194)	getLiteral(any y(3))
lbl(137197)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137221)	putRecord('call' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		inlineAt(continuations x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariable(y(6))
		testLiteral(x(3) nil 137253)
lbl(137248)	getLiteral(non_y y(6))
		branch(137256)
lbl(137253)	getLiteral(any y(6))
lbl(137256)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(5) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137281)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137292)	allocateL7
		getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putRecord('call' 2 x(3))
		setVariable(x(4))
		setVariable(x(5))
		inlineAt(continuations x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariable(y(6))
		testLiteral(x(6) nil 137339)
lbl(137334)	getLiteral(non_y y(6))
		branch(137342)
lbl(137339)	getLiteral(any y(6))
lbl(137342)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		move(y(2) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137367)	allocateL5
		getVoid(1)
		getVarVar(x(0) y(0))
		getVariable(y(1))
		createVariable(y(2))
		testBI('IsProcedure' [x(0)]#[x(1)] 137411)
		getRecord('marshalledFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
		branch(137439)
lbl(137411)	getRecord('genFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
lbl(137439)	moveMoveYXYX(y(0) x(2) y(2) x(3))
		move(y(1) x(6))
		putConstant(none x(0))
		putConstant(~1 x(1))
		createVariable(x(4))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL5
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137464)	allocateL6
		getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord('ami' 2 x(6))
		setValue(x(1))
		setValue(x(2))
		putRecord('applMeth' 2 x(5))
		setValue(x(6))
		setVariable(x(7))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) y(4))
		createVariable(y(5))
		testLiteral(x(1) nil 137520)
lbl(137515)	getLiteral(non_y y(5))
		branch(137523)
lbl(137520)	getLiteral(any y(5))
lbl(137523)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(2) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL6
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(137547)	allocateL6
		getVoid(1)
		getVarVar(y(0) x(0))
		getVarVar(x(1) x(2))
		getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testBool(y(3) 137572 137628)
		branch(137639)
lbl(137572)	moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 137639 137617)
		getSelf(x(3))
		inlineDot(x(3) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('dot access on undetermined variable suspends ')
		setConstant(forever)
		move(y(4) x(0))
		putConstant('code generation warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(137639)
lbl(137617)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137628)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(137639)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 137716)
lbl(137652)	testBool(y(3) 137671 137705)
lbl(137656)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(3) 137671 137705)
		deAllocateL6
		return
lbl(137671)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(552)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137716)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(2))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137758)	allocateL3
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 137800)
lbl(137777)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(2))
		setConstant(cache)
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137800)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137831)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('inlineAssign' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137857)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 137926)
lbl(137877)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(2) 137892 137915)
		deAllocateL3
		return
lbl(137892)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(137915)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137926)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getSelf' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137953)	allocateL1
		getVoid(1)
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('setSelf' 1 x(0))
		setValue(y(0))
		deAllocateL1
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(137974)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 138017 138260)
lbl(137998)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 138017 138260)
lbl(138011)	testLiteral(y(2) unit 138017)
		deAllocateL9
		return
lbl(138017)	getSelf(x(3))
lbl(138019)	definition(x(1) 138071 pid('' 2 pos('./compiler/CodeEmitter.oz' 597 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 138064)
lbl(138046)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(138064)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(138019)
lbl(138071)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		createVariable(y(6))
		createVariable(y(7))
		testBool(y(3) 138110 138121)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		getLiteral(false y(7))
		branch(138132)
lbl(138110)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getLiteral(true y(7))
		branch(138132)
lbl(138121)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138132)	createVariableMove(y(3) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(1))
		unifyVariable(y(4))
		putRecord('definition' 6 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(1))
		setValue(y(2))
		setValue(y(5))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(138191)	definition(x(1) 138207 pid('' 1 pos('./compiler/CodeEmitter.oz' 618 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(138191)
lbl(138207)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		testBool(y(7) 138247 138249)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		putRecord('unify' 2 x(0))
		setValue(y(6))
		setValue(y(1))
		deAllocateL9
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(138247)	deAllocateL9
		return
lbl(138249)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(620)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138260)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(592)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138271)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 138315 138537)
lbl(138296)	move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(6) 138315 138537)
lbl(138309)	testLiteral(y(3) unit 138315)
		deAllocateL10
		return
lbl(138315)	getSelf(x(3))
lbl(138317)	definition(x(1) 138369 pid('' 2 pos('./compiler/CodeEmitter.oz' 631 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 138362)
lbl(138344)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(138362)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(138317)
lbl(138369)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(4))
		getRecord(x 1 y(4))
		unifyVariable(y(7))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(9) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(y(5))
		putRecord('definitionCopy' 6 x(0))
		setValue(y(4))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(6))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(138453)	definition(x(1) 138469 pid('' 1 pos('./compiler/CodeEmitter.oz' 646 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(138453)
lbl(138469)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(0) none 138525)
lbl(138514)	moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariable(x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(138525)	putRecord('unify' 2 x(0))
		setValue(y(4))
		setValue(y(0))
		deAllocateL10
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(138537)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(626)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138548)	allocateL8
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(x(2) y(4))
		move(x(0) y(5))
		move(x(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putRecord('exHandler' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		move(y(1) x(1))
		putConstant(0 x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: AllocateThisTemp> false 3) 0)
		inlineAt(<M: LocalEnvsInhibited> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYYX(x(0) y(1) y(2) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(3) x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(6) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(138681)	getVoid(1)
		getVariable(x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugExit> false 2) 0)
		putConstant('popEx' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(138697)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVoid(1)
		getVariable(x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('createCond' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(138771)	definition(x(0) 138921 pid('' 3 pos('./compiler/CodeEmitter.oz' 689 6) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(138908)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(138800)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(138855 [onScalar(nil 138830) onRecord('|' 2 138838)]))
lbl(138830)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(138868)
lbl(138838)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(138868)
lbl(138855)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(696)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138868)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(138908)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(138771)
lbl(138921)	move(x(0) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(138986)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(139006)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createEnumOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(139026)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createChoice' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(139046)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('ask' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(139065)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('wait' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(139084)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('waitTop' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(139103)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		getVoid(1)
		getVariable(x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('shallowGuard' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitGuard> false 1) 0)
		putConstant('shallowThen' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(139260)	allocateL(11)
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		getVariable(x(0))
		move(y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		callBI('And' [x(0) x(1)]#[x(2)])
		move(y(8) x(0))
		callBI('And' [x(2) x(0)]#[x(1)])
		move(y(5) x(0))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(8))
		testLiteral(y(7) none 139401)
lbl(139346)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(139404)
lbl(139401)	unify(y(8) y(7))
lbl(139404)	move(y(5) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('testBool' 3 x(0))
		setValue(y(8))
		setValue(y(7))
		setValue(y(10))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(139553)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(y(8) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(1) x(0))
		move(g(9) x(3))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		putRecord('#' 2 x(1))
		setValue(y(8))
		setValue(y(9))
		putRecord('testBI' 3 x(0))
		setValue(y(0))
		setValue(x(1))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(6) x(0))
		deAllocateL10
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(139752)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testNumber' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(139774)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testLiteral' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(139796)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(7))
		testLiteral(y(5) none 139904)
lbl(139849)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as pattern case arbiter')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(3) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(139907)
lbl(139904)	unify(y(7) y(5))
lbl(139907)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('ht' 2 x(1))
		setValue(y(5))
		setVariable(y(8))
		putRecord('match' 2 x(0))
		setValue(y(7))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(3))
lbl(139958)	definition(x(1) 140070 pid('' 2 pos('./compiler/CodeEmitter.oz' 844 6) nil 5) unit [x(3) g(0) y(6)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		createVariable(y(0))
		createVariable(y(1))
		match(x(0) ht(140013 [onRecord('onScalar' 2 139977) onRecord('onRecord' 3 139993)]))
lbl(139977)	getVarVar(x(0) x(3))
		unify(y(0) x(3))
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(y(1))
		branch(140026)
lbl(139993)	getVarVar(x(0) x(3))
		getVariable(x(4))
		unify(y(0) x(4))
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		branch(140026)
lbl(140013)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(851)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(140026)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: Dereference> false 3) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(1) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		deAllocateL3
		genCall(gci(g(1) true <M: RestoreAllRegisterMappings> true 1) 0)
		endDefinition(139958)
lbl(140070)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(140123)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		move(g(9) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('thread' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(contLabels x(0) cache)
		putConstant(nil x(1))
		inlineAssign(contLabels x(1) cache)
		inlineAt(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYXY(x(0) y(5) x(1) y(6))
		testBool(y(3) 140221 140231)
		branch(140242)
lbl(140221)	putConstant(true x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		branch(140242)
lbl(140231)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(878)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(140242)	moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(6) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(5) x(0))
		inlineAssign(contLabels x(0) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(140291)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVoid(1)
		getVariable(y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(3) 140364 140353)
		getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setConstant('undetermined variable used as lock')
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('code generation warning' x(2))
		putConstant('lock suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		branch(140364)
lbl(140353)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(889)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140364)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(1) x(0))
		putConstant('lock' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('lockThread' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(140394)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 140431 140436)
		unify(y(2) y(3))
		branch(140447)
lbl(140431)	unify(y(2) y(4))
		branch(140447)
lbl(140436)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140447)	move(y(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		putConstant('lock' x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(140484)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(135279)
lbl(140499)	definition(x(7) 140525 pid('Emitter,EmitVInstr/slow' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 965> 3)
		endDefinition(140499)
lbl(140525)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: EmitVInstr>)
		setValue(x(7))
		setValue(x(9))
lbl(140535)	definition(x(7) 140704 pid('Emitter,DebugEntry/fast' 2 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) <Q: 966> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 957> 4)
		testBool(y(2) 140689 140691)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(140644 [onRecord(fineStep 3 140568) onRecord(fineStep 6 140587) onRecord(coarseStep 3 140606) onRecord(coarseStep 6 140625)]))
lbl(140568)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(140657)
lbl(140587)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(140657)
lbl(140606)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(140657)
lbl(140625)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(140657)
lbl(140644)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(926)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140657)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugEntry' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(140689)	deAllocateL6
		return
lbl(140691)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140535)
lbl(140704)	definition(x(9) 140739 pid('Emitter,DebugEntry/slow' 1 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 966> 5)
		endDefinition(140704)
lbl(140739)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: DebugEntry>)
		setValue(x(9))
		setValue(x(7))
lbl(140749)	definition(x(7) 140922 pid('Emitter,DebugExit/fast' 2 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) <Q: 967> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 957> 4)
		testBool(y(2) 140907 140909)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(140862 [onRecord(fineStep 3 140782) onRecord(fineStep 6 140801) onRecord(coarseStep 3 140822) onRecord(coarseStep 6 140841)]))
lbl(140782)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(140875)
lbl(140801)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(140875)
lbl(140822)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(140875)
lbl(140841)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(140875)
lbl(140862)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(942)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140875)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugExit' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(140907)	deAllocateL6
		return
lbl(140909)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(933)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140749)
lbl(140922)	definition(x(9) 140957 pid('Emitter,DebugExit/slow' 1 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 967> 5)
		endDefinition(140922)
lbl(140957)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: DebugExit>)
		setValue(x(9))
		setValue(x(7))
lbl(140967)	definition(x(7) 141378 pid('Emitter,TryToUseAsSendMsg/fast' 7 pos('./compiler/CodeEmitter.oz' 949 6) nil 7) <Q: 968> [y(1)])
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 140989 141365)
		getLiteral(false x(6))
		return
lbl(140989)	allocateL(11)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 141349 141354)
		testRecord(y(4) vCall 5 141103)
lbl(141024)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(141103)
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(141040)	shallowThen
		moveMoveXYXY(x(0) y(4) x(2) y(6))
		moveMoveXYYX(x(3) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 141087 141092)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(141087)	getLiteral(false y(5))
		deAllocateL
		return
lbl(141092)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(957)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141103)	testRecord(y(4) vGenCall 8 141194)
lbl(141108)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(141194)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(141131)	shallowThen
		moveMoveXYXY(x(0) y(4) x(3) y(6))
		moveMoveXYYX(x(4) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 141178 141183)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(141178)	getLiteral(false y(5))
		deAllocateL
		return
lbl(141183)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(964)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141194)	testRecord(y(4) vCallBuiltin 5 141344)
lbl(141199)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		createVariable(y(4))
		shallowGuard(141344)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getListValVar(x(1) y(0) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(141230)	shallowThen
		moveMoveXYXY(x(0) y(6) x(4) y(7))
		moveMoveXYXY(x(2) y(8) x(3) y(9))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(10) 141328 141333)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putList(x(3))
		setValue(y(6))
		setConstant(nil)
		putRecord('#' 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord('callBI' 2 x(0))
		setConstant(newObject)
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(141328)	getLiteral(false y(5))
		deAllocateL
		return
lbl(141333)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(972)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141344)	getLiteral(false y(5))
		deAllocateL
		return
lbl(141349)	getLiteral(false y(5))
		deAllocateL
		return
lbl(141354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(955)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141365)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(954)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140967)
lbl(141378)	definition(x(9) 141443 pid('Emitter,TryToUseAsSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 949 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 968> 15)
		endDefinition(141378)
lbl(141443)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(141453)	definition(x(7) 142003 pid('Emitter,EmitSendMsg/fast' 6 pos('./compiler/CodeEmitter.oz' 989 6) nil 8) <Q: 969> [y(1) g(15) g(1)])
		allocateL9
		putRecord('sendMsg' 4 x(6))
		setValue(x(1))
		setVariable(x(7))
		setValue(x(2))
		setConstant(cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		createVariable(y(6))
		testBI('IsInt' [x(2)]#[x(1)] 141498)
		unify(y(6) x(2))
		branch(141507)
lbl(141498)	move(x(2) x(0))
		move(y(6) x(1))
		genFastCall(<P: 24> 4)
lbl(141507)	move(y(6) x(0))
		inlinePlus1(x(0) x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: ReserveTemps> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setVariable(y(7))
		getSelf(x(4))
lbl(141529)	definition(x(1) 141912 pid('' 4 pos('./compiler/CodeEmitter.oz' 999 3) nil 13) unit [x(4) g(2) g(0)])
		move(g(0) x(4))
		setSelf(x(4))
		shallowGuard(141899)
		getRecord('#' 2 x(2))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(141550)	shallowThen
		match(x(1) ht(141886 [onRecord(number 1 141554) onRecord(literal 1 141616) onRecord(value 1 141678) onRecord(record 3 141695)]))
lbl(141554)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(141616)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(141678)	getVariable(x(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyValue(x(6))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(141695)	allocateL8
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(0) x(2))
		testBI('Dictionary.member' [x(1) x(2)]#[x(7)] 141806)
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('move' 2 x(5))
		unifyValVar(y(7) x(6))
		getRecord(x 1 x(6))
		unifyVariable(x(7))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(7))
		deAllocateL8
		return
lbl(141806)	inlineMinus1(x(0) x(2))
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(2) true <M: AllocateThisShortLivedTemp> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyLiteral('skip')
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		deAllocateL8
		return
lbl(141886)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1016)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141899)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(999)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(141529)
lbl(141912)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 83> 8)
		inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(x(0) y(1))
		createVariable(y(8))
		testLiteral(y(3) nil 141951)
lbl(141946)	unify(y(8) y(1))
		branch(141957)
lbl(141951)	getList(y(8))
		unifyValue(y(3))
		unifyValue(y(1))
lbl(141957)	move(y(8) x(0))
		inlineAssign(continuations x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		moveMoveYXYX(y(2) x(6) y(7) x(7))
		putConstant(any x(0))
		createVariable(x(5))
		genCall(gci(g(0) true <M: GenericEmitCall> false 8) 0)
		putList(x(0))
		setValue(y(3))
		setValue(y(1))
		inlineAssign(continuations x(0) cache)
		deAllocateL9
		return
		endDefinition(141453)
lbl(142003)	definition(x(9) 142062 pid('Emitter,EmitSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 989 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 969> 13)
		endDefinition(142003)
lbl(142062)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: EmitSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(142072)	definition(x(7) 142834 pid('Emitter,GenericEmitCall/fast' 8 pos('./compiler/CodeEmitter.oz' 1026 6) nil 11) <Q: 970> [g(9) g(2) y(1)])
		allocateL(11)
		inlineAt(continuations x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		match(x(8) ht(142274 [onScalar(nil 142287) onRecord('|' 2 142108)]))
lbl(142108)	getVariable(x(8))
		inlineDot(x(8) 1 x(8) cache)
		callBI('BitArray.toList' [x(8)]#[x(9)])
		getSelf(x(8))
lbl(142121)	definition(x(10) 142263 pid('' 1 pos('./compiler/CodeEmitter.oz' 1061 6) nil 5) unit [x(8) g(1) g(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(142186 [onScalar(none 142146) onRecord(x 1 142147)]))
lbl(142146)	return
lbl(142147)	allocateL3
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 142184)
lbl(142163)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(142184)	deAllocateL3
		return
lbl(142186)	allocateL3
		move(x(0) y(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 142248 142250)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 142246)
lbl(142216)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(142246)	deAllocateL3
		return
lbl(142248)	deAllocateL3
		return
lbl(142250)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1073)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142121)
lbl(142263)	move(x(9) x(0))
		move(x(10) x(1))
		genFastCall(<P: 34> 4)
		branch(142287)
lbl(142274)	putRecord(kernel 3 x(9))
		setConstant(noElse)
		setConstant(1088)
		setValue(x(8))
		callBI('Exception.raiseError' [x(9)]#nil)
lbl(142287)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		createVariable(y(8))
		testLiteral(y(0) none 142312)
lbl(142307)	getLiteral(none y(8))
		branch(142718)
lbl(142312)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testLiteral(y(9) none 142431)
lbl(142325)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable called ')
		setConstant('as procedure')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(6) x(0))
		putConstant('code generation warning' x(2))
		putConstant('application suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 142393 142409)
lbl(142383)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		branch(142420)
lbl(142393)	testLiteral(y(0) non_y 142399)
		branch(142383)
lbl(142399)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		branch(142420)
lbl(142409)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1114)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(142420)	putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142634)
lbl(142431)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 142579 142623)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 142517)
lbl(142457)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(9) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(y(5) x(2))
		testLT(x(1) x(2) x(3) 142634)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142634)
lbl(142517)	testLiteral(y(0) non_y 142634)
lbl(142521)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testRecord(y(9) x 1 142634)
lbl(142535)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(0) x(1) x(2) 142634)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142634)
lbl(142579)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 142634)
lbl(142592)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142634)
lbl(142623)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(142634)	match(y(0) ht(142705 [onScalar(non_y 142637) onScalar(any 142695)]))
lbl(142637)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testRecord(y(0) y 1 142690)
lbl(142651)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(9) none 142685)
lbl(142664)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142718)
lbl(142685)	unify(y(8) y(9))
		branch(142718)
lbl(142690)	unify(y(8) y(0))
		branch(142718)
lbl(142695)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		branch(142718)
lbl(142705)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1177)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(142718)	moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(2) x(2))
		genCall(gci(g(2) true <M: SetArguments> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 142791 142796)
		testRecord(y(8) x 1 142786)
lbl(142746)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(1) x(0) x(2) 142775)
		getRecord(x 1 y(4))
		unifyValue(y(5))
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(4))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(142778)
lbl(142775)	unify(y(4) y(8))
lbl(142778)	move(y(5) x(0))
		inlinePlus1(x(0) x(2))
		branch(142807)
lbl(142786)	unify(y(4) y(8))
		branch(142807)
lbl(142791)	unify(y(4) y(8))
		branch(142807)
lbl(142796)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(142807)	move(y(6) x(0))
		putConstant('call' x(1))
		genCall(gci(g(2) true <M: DebugEntry> false 2) 0)
		move(y(3) x(0))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		move(y(6) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(2) true <M: DebugExit> true 2) 0)
		endDefinition(142072)
lbl(142834)	definition(x(9) 142905 pid('Emitter,GenericEmitCall/slow' 1 pos('./compiler/CodeEmitter.oz' 1026 6) nil 9) unit nil)
		putConstant(8 x(8))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(8))
		inlineDot(x(0) 1 x(8) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		move(x(8) x(0))
		genFastCall(<Q: 970> 17)
		endDefinition(142834)
lbl(142905)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: GenericEmitCall>)
		setValue(x(9))
		setValue(x(7))
lbl(142915)	definition(x(7) 143670 pid('Emitter,SetArguments/fast' 3 pos('./compiler/CodeEmitter.oz' 1207 6) nil 5) <Q: 971> [y(1) g(16) g(1) g(3) g(2) g(10) g(7) g(5) g(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: EnterDelayedInits> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: Arity> x(0) cache)
		getSelf(x(2))
lbl(142943)	definition(x(1) 143497 pid('' 2 pos('./compiler/CodeEmitter.oz' 1233 3) nil 7) unit [x(2) g(2) g(3) g(4) g(5) g(6) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(143484)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(142962)	shallowThen
		inlineMinus1(x(0) x(1))
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(5)] 142992)
		putConstant(0 x(0))
		testLE(x(0) x(3) x(1) 142991)
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.set' [x(0) x(3)]#nil)
lbl(142991)	return
lbl(142992)	inlineAt(<M: Temporaries> x(0) cache)
		putConstant(none x(5))
		callBI('Dictionary.condGet' [x(0) x(3) x(5)]#[x(6)])
		match(x(6) ht(143129 [onRecord(vEquateNumber 4 143006) onRecord(vEquateLiteral 4 143049) onRecord(vGetSelf 3 143092)]))
lbl(143006)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(143049)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(143092)	inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		putRecord(x 1 x(4))
		setValue(x(1))
		putRecord('getSelf' 1 x(3))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		return
lbl(143129)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(6) true <M: GetTemp> false 2) 0)
		putRecord(x 1 x(0))
		setValue(y(2))
		createVariable(y(4))
		move(y(3) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 143166)
		getLiteral('skip' y(4))
		branch(143469)
lbl(143166)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(6) true <M: GetPerm> false 2) 0)
		testLiteral(y(5) none 143456)
lbl(143179)	match(y(3) ht(143443 [onScalar(none 143182) onRecord(x 1 143401)]))
lbl(143182)	inlineAt(<M: LastAliveRS> x(0) cache)
		move(y(0) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 143337 143390)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 143284)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		getRecord(x 1 y(1))
		unifyVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(1) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(143469)
lbl(143284)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(6) true <M: AllocateThisTemp> false 3) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		inlineAt(<M: AdjDict> x(0) cache)
		inlineAt(<M: AdjDict> x(1) cache)
		move(y(2) x(2))
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		putList(x(1))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
		getLiteral('skip' y(4))
		branch(143469)
lbl(143337)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: IsLast> false 2) 0)
		testBool(y(1) 143364 143379)
		getRecord('createVariable' 1 y(4))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(143469)
lbl(143364)	getRecord(delayedCreateVariableMove 2 y(4))
		unifyValVar(y(0) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(143469)
lbl(143379)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1281)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143390)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1265)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143401)	getVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(3) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(143469)
lbl(143443)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1290)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143456)	getRecord('move' 2 y(4))
		unifyValVar(y(5) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
lbl(143469)	inlineAt(<M: DelayedInitsDict> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(143484)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1233)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142943)
lbl(143497)	move(y(1) x(0))
		genFastCall(<P: 89> 4)
		putConstant(0 x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		putConstant(nil x(4))
		inlineAssign(<M: Stack> x(4) cache)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(143529)	definition(x(3) 143557 pid('' 1 pos('./compiler/CodeEmitter.oz' 1305 3) nil 4) unit [x(4) g(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DoneDict> x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 143550)
		return
lbl(143550)	createVariable(x(1))
		genCall(gci(g(2) true <M: OrderMoves> true 2) 0)
		endDefinition(143529)
lbl(143557)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(143579)	definition(x(3) 143633 pid('' 1 pos('./compiler/CodeEmitter.oz' 1313 3) nil 4) unit [x(4) g(7) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DelayedInitsDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		match(x(3) ht(143625 [onScalar('skip' 143601) onRecord('move' 2 143602) onRecord(delayedCreateVariableMove 2 143603)]))
lbl(143601)	return
lbl(143602)	return
lbl(143603)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariableMove' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL2
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(143625)	move(x(3) x(0))
		genCall(gci(g(2) true <M: Emit> true 1) 0)
		endDefinition(143579)
lbl(143633)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: AdjDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: DoneDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL2
		return
		endDefinition(142915)
lbl(143670)	definition(x(9) 143711 pid('Emitter,SetArguments/slow' 1 pos('./compiler/CodeEmitter.oz' 1207 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 971> 7)
		endDefinition(143670)
lbl(143711)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: SetArguments>)
		setValue(x(9))
		setValue(x(7))
lbl(143721)	definition(x(7) 143780 pid('Emitter,EnterDelayedInits/fast' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 5) <Q: 972> [g(7) y(1)])
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(143765 [onScalar(nil 143734) onRecord('|' 2 143736)]))
lbl(143734)	deAllocateL1
		return
lbl(143736)	getVarVar(x(1) x(2))
		shallowGuard(143765)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(143749)	shallowThen
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.put' [x(0) x(3) x(4)]#nil)
		move(x(2) x(0))
		deAllocateL1
		genCall(gci(g(1) true <M: EnterDelayedInits> true 1) 0)
lbl(143765)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1331)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143721)
lbl(143780)	definition(x(9) 143806 pid('Emitter,EnterDelayedInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 972> 3)
		endDefinition(143780)
lbl(143806)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(9))
		setValue(x(7))
lbl(143816)	definition(x(7) 144146 pid('Emitter,OrderMoves/fast' 2 pos('./compiler/CodeEmitter.oz' 1333 6) nil 7) <Q: 973> [g(7) g(2) y(1) g(5)])
		allocateL4
		inlineAt(<M: CurrentID> x(2) cache)
		inlineAt(<M: DoneDict> x(3) cache)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
		inlinePlus1(x(2) x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		inlineAt(<M: Stack> x(4) cache)
		putList(x(5))
		setValue(x(0))
		setValue(x(4))
		inlineAssign(<M: Stack> x(5) cache)
		inlineAt(<M: AdjDict> x(3) cache)
		putConstant(nil x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getSelf(x(4))
lbl(143873)	definition(x(6) 143936 pid('' 3 pos('./compiler/CodeEmitter.oz' 1338 4) nil 7) unit [x(4) g(1) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		putConstant(~1 x(5))
		callBI('Dictionary.condGet' [x(4) x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testNumber(x(6) ~1 143918)
lbl(143907)	move(x(1) x(0))
		move(y(2) x(1))
		genCall(gci(g(2) true <M: OrderMoves> false 2) 0)
		branch(143921)
lbl(143918)	unify(y(2) x(6))
lbl(143921)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Min' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(143873)
lbl(143936)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(6) x(1))
		move(y(1) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 144142)
		inlineAt(<M: Stack> x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(2) true <M: GetCycle> false 3) 0)
		testList(y(1) 144011)
lbl(143982)	getVarVar(x(0) x(1))
		testLiteral(x(1) nil 144011)
		inlineAt(<M: DelayedInitsDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) 'move' 2 144009)
lbl(144002)	move(x(2) x(0))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(144009)	deAllocateL4
		return
lbl(144011)	testList(y(1) 144129)
lbl(144014)	getVarVar(y(0) y(1))
		putRecord(x 1 y(2))
		setVariable(x(1))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(1))
		putRecord(x 1 x(1))
		setValue(y(0))
		putRecord('move' 2 x(0))
		setValue(x(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(4))
lbl(144050)	definition(x(1) 144100 pid('' 3 pos('./compiler/CodeEmitter.oz' 1358 7) nil 7) unit [x(4) g(2)])
		allocateL2
		move(g(0) x(3))
		setSelf(x(3))
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord(x 1 x(6))
		setValue(x(0))
		putRecord('move' 2 x(4))
		setValue(x(5))
		setValue(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(144050)
lbl(144100)	moveMoveYXYX(y(1) x(0) y(0) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		putRecord(x 1 x(1))
		setValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(144129)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1360)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(144142)	deAllocateL4
		return
		endDefinition(143816)
lbl(144146)	definition(x(9) 144181 pid('Emitter,OrderMoves/slow' 1 pos('./compiler/CodeEmitter.oz' 1333 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 973> 5)
		endDefinition(144146)
lbl(144181)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: OrderMoves>)
		setValue(x(9))
		setValue(x(7))
lbl(144191)	definition(x(7) 144244 pid('Emitter,GetCycle/fast' 3 pos('./compiler/CodeEmitter.oz' 1363 6) nil 6) <Q: 974> [g(7) y(1)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		inlineAt(<M: Arity> x(5) cache)
		callBI('Dictionary.put' [x(4) x(1) x(5)]#nil)
		testBI('==' [x(0) x(1)]#[x(4)] 144232)
		getList(x(2))
		unifyValue(x(1))
		unifyLiteral(nil)
		inlineAssign(<M: Stack> x(3) cache)
		return
lbl(144232)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(1) true <M: GetCycle> true 3) 0)
		endDefinition(144191)
lbl(144244)	definition(x(9) 144285 pid('Emitter,GetCycle/slow' 1 pos('./compiler/CodeEmitter.oz' 1363 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 974> 7)
		endDefinition(144244)
lbl(144285)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: GetCycle>)
		setValue(x(9))
		setValue(x(7))
lbl(144295)	definition(x(7) 144468 pid('Emitter,CreateNonlinearRegs/fast' 3 pos('./compiler/CodeEmitter.oz' 1374 6) nil 3) <Q: 975> [y(1)])
		match(x(0) ht(144453 [onScalar(nil 144304) onRecord('|' 2 144308)]))
lbl(144304)	unify(x(2) x(1))
		return
lbl(144308)	allocateL5
		getVarVar(x(0) y(0))
		match(x(0) ht(144446 [onRecord(value 1 144315) onRecord(record 3 144421)]))
lbl(144315)	getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 144406)
lbl(144335)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 144380 144395)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(144380)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(144395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(144406)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(144421)	getVoid(2)
		getVariable(x(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(144446)	move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(144453)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(144295)
lbl(144468)	definition(x(9) 144509 pid('Emitter,CreateNonlinearRegs/slow' 1 pos('./compiler/CodeEmitter.oz' 1374 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 975> 7)
		endDefinition(144468)
lbl(144509)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(9))
		setValue(x(7))
lbl(144519)	definition(x(7) 144570 pid('Emitter,EmitRecordWrite/fast' 4 pos('./compiler/CodeEmitter.oz' 1397 6) nil 4) <Q: 976> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: EmitVArgsWrite> false 3) 0)
		putRecord('putRecord' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: EmitMultiple> true 2) 0)
		endDefinition(144519)
lbl(144570)	definition(x(9) 144617 pid('Emitter,EmitRecordWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1397 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 976> 9)
		endDefinition(144570)
lbl(144617)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(144627)	definition(x(7) 144875 pid('Emitter,EmitVArgsWrite/fast' 3 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) <Q: 977> [y(1)])
		match(x(0) ht(144860 [onScalar(nil 144636) onRecord('|' 2 144640)]))
lbl(144636)	unify(x(1) x(2))
		return
lbl(144640)	allocateL8
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(144835 [onRecord(number 1 144654) onRecord(literal 1 144670) onRecord(predicateRef 1 144686) onRecord(value 1 144702) onRecord(record 3 144794)]))
lbl(144654)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(144848)
lbl(144670)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(144848)
lbl(144686)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setPredicateRef' 1 x(1))
		unifyValue(x(0))
		branch(144848)
lbl(144702)	getVariable(y(3))
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(5) none 144780)
lbl(144719)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 144746 144769)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVoid' 1 x(0))
		unifyNumber(1)
		branch(144848)
lbl(144746)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVariable' 1 x(0))
		unifyValue(y(5))
		branch(144848)
lbl(144769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(144780)	getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(5))
		branch(144848)
lbl(144794)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(x(1) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(7) x(2) y(5) x(3))
		genCall(gci(g(0) true <M: EmitRecordWrite> false 4) 0)
		getList(y(6))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(7))
		branch(144848)
lbl(144835)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1428)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(144848)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL8
		genCall(gci(g(0) true <M: EmitVArgsWrite> true 3) 0)
lbl(144860)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(144627)
lbl(144875)	definition(x(9) 144916 pid('Emitter,EmitVArgsWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 977> 7)
		endDefinition(144875)
lbl(144916)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(144926)	definition(x(7) 145032 pid('Emitter,EmitRecordRead/fast' 4 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) <Q: 978> [y(1)])
		allocateL2
		putRecord('getRecord' 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(3) y(0))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		genCall(gci(g(0) true <M: EmitVArgsRead> false 3) 0)
		getSelf(x(2))
lbl(144966)	definition(x(1) 145023 pid('' 1 pos('./compiler/CodeEmitter.oz' 1441 3) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(145010)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(record 3 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(144997)	shallowThen
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(6) x(3))
		genCall(gci(g(1) true <M: EmitRecordRead> true 4) 0)
lbl(145010)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(144966)
lbl(145023)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(144926)
lbl(145032)	definition(x(9) 145079 pid('Emitter,EmitRecordRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 978> 9)
		endDefinition(145032)
lbl(145079)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: EmitRecordRead>)
		setValue(x(9))
		setValue(x(7))
lbl(145089)	definition(x(7) 145306 pid('Emitter,EmitVArgsRead/fast' 3 pos('./compiler/CodeEmitter.oz' 1445 6) nil 5) <Q: 979> [y(1)])
		match(x(0) ht(145291 [onScalar(nil 145098) onRecord('|' 2 145102)]))
lbl(145098)	unify(x(1) x(2))
		return
lbl(145102)	allocateL6
		getVarVar(y(0) x(3))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariable(y(3))
		match(y(0) ht(145266 [onRecord(number 1 145116) onRecord(literal 1 145132) onRecord(value 1 145148) onRecord(record 3 145232)]))
lbl(145116)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyNumber' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145279)
lbl(145132)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyLiteral' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145279)
lbl(145148)	getVariable(y(0))
		unify(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 145221)
lbl(145166)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 145190 145210)
		putRecord('unifyVoid' 1 x(0))
		setConstant(1)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145279)
lbl(145190)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145279)
lbl(145210)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145221)	putRecord('unifyValue' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145279)
lbl(145232)	move(x(1) y(4))
		createVariableMove(y(5) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		branch(145279)
lbl(145266)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1469)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145279)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitVArgsRead> true 3) 0)
lbl(145291)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1473)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(145089)
lbl(145306)	definition(x(9) 145347 pid('Emitter,EmitVArgsRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1445 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 979> 7)
		endDefinition(145306)
lbl(145347)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(9))
		setValue(x(7))
lbl(145357)	definition(x(7) 145514 pid('Emitter,AllocateBuiltinArgs/fast' 6 pos('./compiler/CodeEmitter.oz' 1475 6) nil 6) <Q: 980> [y(1)])
		testList(x(1) 145497)
lbl(145366)	allocateL9
		getVarVar(x(1) y(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		getList(x(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		testBool(x(1) 145457 145467)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(8) none 145444)
lbl(145413)	move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145478)
lbl(145444)	putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(145478)
lbl(145457)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(145478)
lbl(145467)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1480)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145478)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		deAllocateL9
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> true 6) 0)
lbl(145497)	getLiteral(nil x(2))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
		endDefinition(145357)
lbl(145514)	definition(x(9) 145573 pid('Emitter,AllocateBuiltinArgs/slow' 1 pos('./compiler/CodeEmitter.oz' 1475 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 980> 13)
		endDefinition(145514)
lbl(145573)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(9))
		setValue(x(7))
lbl(145583)	definition(x(7) 145725 pid('Emitter,AllocateBuiltinOutputs/fast' 4 pos('./compiler/CodeEmitter.oz' 1499 6) nil 4) <Q: 981> [y(1)])
		match(x(0) ht(145710 [onScalar(nil 145592) onRecord('|' 2 145599)]))
lbl(145592)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(145599)	allocateL8
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		createVariable(y(3))
		testBool(y(2) 145632 145685)
		move(x(3) y(4))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		unify(y(4) y(3))
		branch(145696)
lbl(145632)	moveMoveXYXY(x(3) y(4) x(0) y(5))
		move(x(2) y(6))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(7) none 145663)
lbl(145650)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		unify(y(4) y(3))
		branch(145696)
lbl(145663)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		branch(145696)
lbl(145685)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1501)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145696)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
lbl(145710)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(145583)
lbl(145725)	definition(x(9) 145772 pid('Emitter,AllocateBuiltinOutputs/slow' 1 pos('./compiler/CodeEmitter.oz' 1499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 981> 9)
		endDefinition(145725)
lbl(145772)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(9))
		setValue(x(7))
lbl(145782)	definition(x(7) 145837 pid('Emitter,EmitUnifies/fast' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) <Q: 982> [y(1)])
		match(x(0) ht(145822 [onScalar(nil 145791) onRecord('|' 2 145792)]))
lbl(145791)	return
lbl(145792)	allocateL1
		getVarVar(x(1) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		putRecord('unify' 2 x(0))
		setValue(x(1))
		setValue(x(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitUnifies> true 1) 0)
lbl(145822)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1525)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(145782)
lbl(145837)	definition(x(9) 145863 pid('Emitter,EmitUnifies/slow' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 982> 3)
		endDefinition(145837)
lbl(145863)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: EmitUnifies>)
		setValue(x(9))
		setValue(x(7))
lbl(145873)	definition(x(7) 145963 pid('Emitter,EmitGuard/fast' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 6) <Q: 983> [g(17) y(1)])
		allocateL4
		inlineAt(continuations x(1) cache)
		putRecord(vDummy 1 x(2))
		setVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testLiteral(y(0) nil 145908)
lbl(145903)	getLiteral(nil x(3))
		branch(145920)
lbl(145908)	inlineDot(x(0) 1 x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(3))
lbl(145920)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: PushContLabel> false 2) 0)
		putList(x(1))
		setValue(y(2))
		setValue(y(1))
		inlineAssign(continuations x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(continuations x(0) cache)
		move(y(3) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: PopContLabel> true 1) 0)
		endDefinition(145873)
lbl(145963)	definition(x(9) 145989 pid('Emitter,EmitGuard/slow' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 983> 3)
		endDefinition(145963)
lbl(145989)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: EmitGuard>)
		setValue(x(9))
		setValue(x(7))
lbl(145999)	definition(x(7) 146244 pid('Emitter,EmitDisjunction/fast' 6 pos('./compiler/CodeEmitter.oz' 1541 6) nil 6) <Q: 984> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(146054)	definition(x(0) 146204 pid('' 3 pos('./compiler/CodeEmitter.oz' 1550 3) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(146191)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(146083)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(146138 [onScalar(nil 146113) onRecord('|' 2 146121)]))
lbl(146113)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(146151)
lbl(146121)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(146151)
lbl(146138)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1557)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(146151)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(146191)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146054)
lbl(146204)	move(x(0) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(145999)
lbl(146244)	definition(x(9) 146303 pid('Emitter,EmitDisjunction/slow' 1 pos('./compiler/CodeEmitter.oz' 1541 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 984> 13)
		endDefinition(146244)
lbl(146303)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: EmitDisjunction>)
		setValue(x(9))
		setValue(x(7))
lbl(146313)	definition(x(7) 146620 pid('Emitter,EmitTestConstant/fast' 9 pos('./compiler/CodeEmitter.oz' 1568 6) nil 9) <Q: 985> [y(1)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(7) x(0))
		move(y(6) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(7) x(0) y(8) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(6) x(0))
		move(x(3) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(9))
		testLiteral(y(8) none 146455)
lbl(146400)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(5) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(1) x(0) y(9) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(146458)
lbl(146455)	unify(y(9) y(8))
lbl(146458)	move(y(6) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariable(x(3))
		marshalledFastCall(<R: tuple> 8)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: tuple> 8)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(146313)
lbl(146620)	definition(x(9) 146697 pid('Emitter,EmitTestConstant/slow' 1 pos('./compiler/CodeEmitter.oz' 1568 6) nil 10) unit nil)
		putConstant(9 x(9))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(9))
		inlineDot(x(0) 1 x(9) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		inlineDot(x(0) 9 x(8) cache)
		move(x(9) x(0))
		genFastCall(<Q: 985> 19)
		endDefinition(146620)
lbl(146697)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: EmitTestConstant>)
		setValue(x(9))
		setValue(x(7))
lbl(146707)	definition(x(7) 146932 pid('Emitter,DoInits/fast' 2 pos('./compiler/CodeEmitter.oz' 1603 6) nil 4) <Q: 986> [g(9) y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(1) nil 146765)
lbl(146723)	inlineAt(continuations x(1) cache)
		match(x(1) ht(146752 [onScalar(nil 146731) onRecord('|' 2 146736)]))
lbl(146731)	getLiteral(nil y(1))
		branch(146777)
lbl(146736)	getVariable(x(1))
		inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(146777)
lbl(146752)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1610)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(146765)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(146777)	getSelf(x(2))
lbl(146779)	definition(x(1) 146844 pid('' 1 pos('./compiler/CodeEmitter.oz' 1614 3) nil 2) unit [x(2) g(1)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 146840)
lbl(146804)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetTemp> false 2) 0)
		testLiteral(y(1) none 146819)
lbl(146817)	deAllocateL3
		return
lbl(146819)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(146840)	deAllocateL3
		return
		endDefinition(146779)
lbl(146844)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(0) nil 146856)
lbl(146854)	deAllocateL2
		return
lbl(146856)	move(y(0) x(0))
		callBI('BitArray.toList' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(146864)	definition(x(1) 146923 pid('' 1 pos('./compiler/CodeEmitter.oz' 1628 6) nil 2) unit [x(3) g(1)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: IsFirst> false 2) 0)
		testBool(y(1) 146908 146910)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(146908)	deAllocateL2
		return
lbl(146910)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1629)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146864)
lbl(146923)	move(x(2) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(146707)
lbl(146932)	definition(x(9) 146967 pid('Emitter,DoInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1603 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 986> 5)
		endDefinition(146932)
lbl(146967)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: DoInits>)
		setValue(x(9))
		setValue(x(7))
lbl(146977)	definition(x(7) 147028 pid('Emitter,PrepareShared/fast' 2 pos('./compiler/CodeEmitter.oz' 1636 6) nil 6) <Q: 987> [y(1)])
		testRecord(x(0) vShared 4 147022)
lbl(146988)	getVoid(2)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		putConstant(1 x(2))
		testLT(x(2) x(4) x(5) 147016)
		getLiteral(false x(1))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> true 2) 0)
lbl(147016)	move(x(3) x(0))
		genCall(gci(g(0) true <M: PrepareShared> true 2) 0)
lbl(147022)	getLiteral(true x(1))
		return
		endDefinition(146977)
lbl(147028)	definition(x(9) 147063 pid('Emitter,PrepareShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1636 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 987> 5)
		endDefinition(147028)
lbl(147063)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: PrepareShared>)
		setValue(x(9))
		setValue(x(7))
lbl(147073)	definition(x(7) 147141 pid('Emitter,PushContLabel/fast' 2 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) <Q: 988> [y(1)])
		allocateL2
		inlineAt(contLabels x(2) cache)
		unify(x(2) x(1))
		move(x(1) y(0))
		testLiteral(x(0) nil 147107)
lbl(147095)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 147126 147128)
lbl(147107)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putList(x(0))
		setValue(y(1))
		setValue(y(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL2
		return
lbl(147126)	deAllocateL2
		return
lbl(147128)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147073)
lbl(147141)	definition(x(9) 147176 pid('Emitter,PushContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 988> 5)
		endDefinition(147141)
lbl(147176)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: PushContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(147186)	definition(x(7) 147254 pid('Emitter,PopContLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) <Q: 989> [y(1)])
		allocateL1
		inlineAt(contLabels x(1) cache)
		move(x(0) y(0))
		testBI('\\=' [x(1) x(0)]#[x(2)] 147242)
lbl(147205)	inlineAt(contLabels x(1) cache)
		testList(x(1) 147229)
lbl(147213)	getVariable(x(1))
		putRecord('lbl' 1 x(2))
		setValue(x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(147242)
lbl(147229)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1659)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(147242)	move(y(0) x(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL1
		return
		endDefinition(147186)
lbl(147254)	definition(x(9) 147280 pid('Emitter,PopContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 989> 3)
		endDefinition(147254)
lbl(147280)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: PopContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(147290)	definition(x(7) 147324 pid('Emitter,Dereference/fast' 3 pos('./compiler/CodeEmitter.oz' 1663 6) nil 3) <Q: 990> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
		endDefinition(147290)
lbl(147324)	definition(x(9) 147365 pid('Emitter,Dereference/slow' 1 pos('./compiler/CodeEmitter.oz' 1663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 990> 7)
		endDefinition(147324)
lbl(147365)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: Dereference>)
		setValue(x(9))
		setValue(x(7))
lbl(147375)	definition(x(7) 147468 pid('Emitter,DereferenceSub/fast' 3 pos('./compiler/CodeEmitter.oz' 1667 6) nil 5) <Q: 991> [y(1)])
		match(x(0) ht(147462 [onScalar(nil 147384) onRecord(vShared 4 147415)]))
lbl(147384)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(147402 [onScalar(nil 147392) onRecord('|' 2 147396)]))
lbl(147392)	unify(x(2) x(1))
		return
lbl(147396)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(147402)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1673)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(147415)	allocateL3
		getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(0) y(1))
		move(x(3) y(2))
		testLiteral(y(2) nil 147450)
lbl(147436)	inlineAt(contLabels x(4) cache)
		testLiteral(x(4) nil 147450)
lbl(147445)	unify(y(0) x(1))
		deAllocateL3
		return
lbl(147450)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
lbl(147462)	unify(x(2) x(1))
		return
		endDefinition(147375)
lbl(147468)	definition(x(9) 147509 pid('Emitter,DereferenceSub/slow' 1 pos('./compiler/CodeEmitter.oz' 1667 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 991> 7)
		endDefinition(147468)
lbl(147509)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: DereferenceSub>)
		setValue(x(9))
		setValue(x(7))
lbl(147519)	definition(x(7) 147547 pid('Emitter,DeallocateAndReturn/fast' 0 pos('./compiler/CodeEmitter.oz' 1684 6) nil 2) <Q: 992> [y(1)])
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('deAllocateL' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
		endDefinition(147519)
lbl(147547)	definition(x(9) 147561 pid('Emitter,DeallocateAndReturn/slow' 1 pos('./compiler/CodeEmitter.oz' 1684 6) nil 1) unit nil)
		getLiteral(<M: DeallocateAndReturn> x(0))
		genFastCall(<Q: 992> 1)
		endDefinition(147547)
lbl(147561)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(9))
		setValue(x(7))
lbl(147571)	definition(x(7) 147684 pid('Emitter,MayAllocateEnvLocally/fast' 3 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) <Q: 993> nil)
		inlineAt(<M: LocalEnvsInhibited> x(3) cache)
		testBool(x(3) 147590 147671)
		getLiteral(false x(2))
		return
lbl(147590)	allocateL1
		move(x(2) y(0))
		testBool(x(1) 147655 147660)
lbl(147598)	testLiteral(x(0) nil 147655)
lbl(147602)	inlineAt(contLabels x(0) cache)
		testLiteral(x(0) nil 147655)
lbl(147611)	inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 147655)
lbl(147620)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 147655)
lbl(147632)	putConstant(0 x(0))
		inlineAt(<M: LocalEnvSize> x(1) cache)
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		getLiteral(true y(0))
		deAllocateL1
		return
lbl(147655)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(147660)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(147671)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147571)
lbl(147684)	definition(x(9) 147725 pid('Emitter,MayAllocateEnvLocally/slow' 1 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 993> 7)
		endDefinition(147684)
lbl(147725)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(9))
		setValue(x(7))
lbl(147735)	definition(x(7) 147831 pid('Emitter,EmitAddrInLocalEnv/fast' 2 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) <Q: 994> [y(1)])
		testBool(x(1) 147815 147818)
		allocateL1
		testRecord(x(0) vShared 4 147756)
lbl(147751)	genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> false 1) 0)
		branch(147782)
lbl(147756)	inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
lbl(147782)	inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(~1 x(0))
		inlineAssign(<M: HighestEverY> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		deAllocateL1
		return
lbl(147815)	genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(147818)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1707)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147735)
lbl(147831)	definition(x(9) 147866 pid('Emitter,EmitAddrInLocalEnv/slow' 1 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 994> 5)
		endDefinition(147831)
lbl(147866)	putRecord('#' [1 2 fast] x(46))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(9))
		setValue(x(7))
lbl(147876)	definition(x(7) 148019 pid('Emitter,EmitAddrInLocalEnvShared/fast' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 4) <Q: 995> [y(1) g(1) g(7)])
		testRecord(x(0) vShared 4 147989)
lbl(147887)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(1) nil 147934)
lbl(147899)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(147921 [onScalar(nil 147907) onRecord('|' 2 147910)]))
lbl(147907)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(147910)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(147921)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1728)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(147934)	inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 147955)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(147955)	allocateL1
		inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		putRecord('lbl' 1 x(2))
		setValue(x(0))
		move(x(1) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> true 1) 0)
lbl(147989)	allocateL1
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(147876)
lbl(148019)	definition(x(9) 148045 pid('Emitter,EmitAddrInLocalEnvShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 995> 3)
		endDefinition(148019)
lbl(148045)	putRecord('#' [1 2 fast] x(47))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(9))
		setValue(x(7))
lbl(148055)	definition(x(7) 148087 pid('Emitter,IsFirst/fast' 2 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) <Q: 996> [y(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		putConstant(none x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(148055)
lbl(148087)	definition(x(9) 148122 pid('Emitter,IsFirst/slow' 1 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 996> 5)
		endDefinition(148087)
lbl(148122)	putRecord('#' [1 2 fast] x(48))
		setConstant(<M: IsFirst>)
		setValue(x(9))
		setValue(x(7))
lbl(148132)	definition(x(7) 148184 pid('Emitter,IsLast/fast' 2 pos('./compiler/CodeEmitter.oz' 1751 6) nil 4) <Q: 997> [g(18)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 148152)
		getLiteral(false x(1))
		return
lbl(148152)	inlineAt(continuations x(2) cache)
		testList(x(2) 148178)
lbl(148160)	getVariable(x(2))
		inlineDot(x(2) 1 x(2) cache)
		callBI('BitArray.test' [x(2) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(148178)	getLiteral(true x(1))
		return
		endDefinition(148132)
lbl(148184)	definition(x(9) 148219 pid('Emitter,IsLast/slow' 1 pos('./compiler/CodeEmitter.oz' 1751 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 997> 5)
		endDefinition(148184)
lbl(148219)	putRecord('#' [1 2 fast] x(49))
		setConstant(<M: IsLast>)
		setValue(x(9))
		setValue(x(7))
lbl(148229)	definition(x(7) 148275 pid('Emitter,DoesNotOccurIn/fast' 3 pos('./compiler/CodeEmitter.oz' 1760 6) nil 5) <Q: 998> [g(18)])
		inlineAt(minReg x(3) cache)
		testLT(x(0) x(3) x(4) 148249)
		getLiteral(false x(2))
		return
lbl(148249)	testLiteral(x(1) nil 148257)
lbl(148253)	getLiteral(true x(2))
		return
lbl(148257)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.test' [x(1) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(148229)
lbl(148275)	definition(x(9) 148316 pid('Emitter,DoesNotOccurIn/slow' 1 pos('./compiler/CodeEmitter.oz' 1760 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 998> 7)
		endDefinition(148275)
lbl(148316)	putRecord('#' [1 2 fast] x(50))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(9))
		setValue(x(7))
lbl(148326)	definition(x(7) 148395 pid('Emitter,EmitInitialization/fast' 2 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) <Q: 999> [y(1)])
		match(x(0) ht(148380 [onRecord(vEquateNumber 4 148335) onRecord(vEquateLiteral 4 148350) onRecord(vGetSelf 3 148365)]))
lbl(148335)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(148350)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(148365)	getRecord(x 1 x(1))
		unifyVoid(1)
		putRecord('getSelf' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(148380)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(148326)
lbl(148395)	definition(x(9) 148430 pid('Emitter,EmitInitialization/slow' 1 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 999> 5)
		endDefinition(148395)
lbl(148430)	putRecord('#' [1 2 fast] x(51))
		setConstant(<M: EmitInitialization>)
		setValue(x(9))
		setValue(x(7))
lbl(148440)	definition(x(7) 148575 pid('Emitter,GetReg/fast' 2 pos('./compiler/CodeEmitter.oz' 1779 6) nil 5) <Q: 1000> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(148529 [onScalar(none 148460) onRecord(y 1 148521) onRecord(g 1 148525)]))
lbl(148460)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 148506)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(148506)	inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
lbl(148521)	unify(x(1) x(4))
		return
lbl(148525)	unify(x(1) x(4))
		return
lbl(148529)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		testRecord(y(1) vGetSelf 3 148561)
lbl(148556)	genCall(gci(g(3) true <M: PredictTemp> false 2) 0)
		branch(148564)
lbl(148561)	genCall(gci(g(3) true <M: PredictReg> false 2) 0)
lbl(148564)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(148440)
lbl(148575)	definition(x(9) 148610 pid('Emitter,GetReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1000> 5)
		endDefinition(148575)
lbl(148610)	putRecord('#' [1 2 fast] x(52))
		setConstant(<M: GetReg>)
		setValue(x(9))
		setValue(x(7))
lbl(148620)	definition(x(7) 148743 pid('Emitter,GetPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1806 6) nil 5) <Q: 1001> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(148698 [onScalar(none 148640) onRecord(y 1 148690) onRecord(g 1 148694)]))
lbl(148640)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 148686)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(148686)	getLiteral(none x(1))
		return
lbl(148690)	unify(x(1) x(4))
		return
lbl(148694)	unify(x(1) x(4))
		return
lbl(148698)	testRecord(x(4) vGetSelf 3 148707)
lbl(148703)	getLiteral(none x(1))
		return
lbl(148707)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(3) true <M: AllocatePerm> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(148620)
lbl(148743)	definition(x(9) 148778 pid('Emitter,GetPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1806 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1001> 5)
		endDefinition(148743)
lbl(148778)	putRecord('#' [1 2 fast] x(53))
		setConstant(<M: GetPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(148788)	definition(x(7) 148852 pid('Emitter,GetTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1829 6) nil 5) <Q: 1002> [g(2) g(10) y(1)])
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(148816 [onScalar(none 148808) onRecord(x 1 148812)]))
lbl(148808)	getLiteral(none x(1))
		return
lbl(148812)	unify(x(1) x(4))
		return
lbl(148816)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(2) true <M: PredictTemp> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(2) true <M: EmitInitialization> true 2) 0)
		endDefinition(148788)
lbl(148852)	definition(x(9) 148887 pid('Emitter,GetTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1829 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1002> 5)
		endDefinition(148852)
lbl(148887)	putRecord('#' [1 2 fast] x(54))
		setConstant(<M: GetTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(148897)	definition(x(7) 148968 pid('Emitter,ReserveTemps/fast' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 4) <Q: 1003> nil)
		inlineAt(<M: HighestEverX> x(1) cache)
		testLE(x(0) x(1) x(2) 148952)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(1) x(0) x(2) 148951)
		allocateL1
		inlineAt(<M: UsedX> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 952> 6)
		move(y(0) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		deAllocateL1
		return
lbl(148951)	return
lbl(148952)	inlineMinus1(x(0) x(1))
		inlineAssign(<M: HighestEverX> x(1) cache)
		inlineAssign(<M: LowestFreeX> x(0) cache)
		return
		endDefinition(148897)
lbl(148968)	definition(x(9) 148994 pid('Emitter,ReserveTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1003> 3)
		endDefinition(148968)
lbl(148994)	putRecord('#' [1 2 fast] x(55))
		setConstant(<M: ReserveTemps>)
		setValue(x(9))
		setValue(x(7))
lbl(149004)	definition(x(7) 149119 pid('Emitter,AllocateAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1855 6) nil 4) <Q: 1004> [y(1) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 149112)
lbl(149026)	inlineAt(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(1))
		move(x(0) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 952> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: HighestEverX> x(0) cache)
		move(y(2) x(1))
		testLT(x(0) x(1) x(2) 149077)
lbl(149072)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(149077)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(149112)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(149004)
lbl(149119)	definition(x(9) 149154 pid('Emitter,AllocateAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1855 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1004> 5)
		endDefinition(149119)
lbl(149154)	putRecord('#' [1 2 fast] x(56))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(149164)	definition(x(7) 149271 pid('Emitter,AllocateThisTemp/fast' 3 pos('./compiler/CodeEmitter.oz' 1867 6) nil 5) <Q: 1005> [g(7)])
		allocateL4
		inlineAt(<M: LowestFreeX> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('==' [x(3) x(0)]#[x(4)] 149216)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 952> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(149216)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		testLT(x(0) x(1) x(2) 149234)
lbl(149229)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(149234)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(2))
		unifyValue(y(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(149164)
lbl(149271)	definition(x(9) 149312 pid('Emitter,AllocateThisTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1867 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1005> 7)
		endDefinition(149271)
lbl(149312)	putRecord('#' [1 2 fast] x(57))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(149322)	definition(x(7) 149344 pid('Emitter,AllocateShortLivedTemp/fast' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) <Q: 1006> [y(1)])
		inlineAt(<M: LowestFreeX> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateThisShortLivedTemp> true 2) 0)
		endDefinition(149322)
lbl(149344)	definition(x(9) 149370 pid('Emitter,AllocateShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1006> 3)
		endDefinition(149344)
lbl(149370)	putRecord('#' [1 2 fast] x(58))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(149380)	definition(x(7) 149502 pid('Emitter,AllocateThisShortLivedTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1881 6) nil 5) <Q: 1007> [g(7)])
		allocateL3
		inlineAt(<M: LowestFreeX> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('==' [x(2) x(0)]#[x(3)] 149429)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 952> 6)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(149429)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 149462 149451)
		inlineAssign(<M: HighestEverX> x(1) cache)
		branch(149462)
lbl(149451)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(149462)	inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(x 1 y(1))
		unifyValue(y(0))
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		deAllocateL3
		return
		endDefinition(149380)
lbl(149502)	definition(x(9) 149537 pid('Emitter,AllocateThisShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1881 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1007> 5)
		endDefinition(149502)
lbl(149537)	putRecord('#' [1 2 fast] x(59))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(149547)	definition(x(7) 149619 pid('Emitter,AllocateAndInitializeAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1893 6) nil 2) <Q: 1008> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 149612)
lbl(149569)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 149600)
lbl(149590)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(149600)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(149612)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(149547)
lbl(149619)	definition(x(9) 149654 pid('Emitter,AllocateAndInitializeAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1893 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1008> 5)
		endDefinition(149619)
lbl(149654)	putRecord('#' [1 2 fast] x(60))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(149664)	definition(x(7) 149778 pid('Emitter,AllocateUnnamedPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1904 6) nil 4) <Q: 1009> [y(1) g(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 149771)
lbl(149686)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(1) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 954> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: HighestEverY> x(0) cache)
		testLT(x(0) x(1) x(2) 149736)
		inlineAssign(<M: HighestEverY> x(1) cache)
lbl(149736)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(149771)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(149664)
lbl(149778)	definition(x(9) 149813 pid('Emitter,AllocateUnnamedPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1904 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1009> 5)
		endDefinition(149778)
lbl(149813)	putRecord('#' [1 2 fast] x(61))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(149823)	definition(x(7) 150120 pid('Emitter,AllocatePerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1917 6) nil 5) <Q: 1010> [y(1) g(2) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 150113)
lbl(149845)	getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		createVariable(y(2))
		testBool(x(0) 149996 150034)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		putConstant('' x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) '' 149917)
lbl(149877)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 954> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		branch(149957)
lbl(149917)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(3) y(3))
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 953> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(149957)	inlineAt(<M: LowestFreeY> x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 150045)
		inlineAt(<M: UsedY> x(0) cache)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 952> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(150045)
lbl(149996)	inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) y(2))
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 952> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(150045)
lbl(150034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1919)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(150045)	inlineAt(<M: HighestEverY> x(0) cache)
		move(y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 150078 150067)
		inlineAssign(<M: HighestEverY> x(1) cache)
		branch(150078)
lbl(150067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1936)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(150078)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(150113)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(149823)
lbl(150120)	definition(x(9) 150155 pid('Emitter,AllocatePerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1917 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1010> 5)
		endDefinition(150120)
lbl(150155)	putRecord('#' [1 2 fast] x(62))
		setConstant(<M: AllocatePerm>)
		setValue(x(9))
		setValue(x(7))
lbl(150165)	definition(x(7) 150207 pid('Emitter,CopyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1944 6) nil 6) <Q: 1011> [g(7) g(5)])
		getRecord(x 1 x(0))
		unifyVariable(x(2))
		inlineAt(<M: UsedX> x(3) cache)
		inlineAt(<M: UsedX> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.put' [x(2) x(1) x(0)]#nil)
		return
		endDefinition(150165)
lbl(150207)	definition(x(9) 150242 pid('Emitter,CopyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1944 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1011> 5)
		endDefinition(150207)
lbl(150242)	putRecord('#' [1 2 fast] x(63))
		setConstant(<M: CopyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(150252)	definition(x(7) 150322 pid('Emitter,CopyPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1948 6) nil 6) <Q: 1012> [g(7) g(5)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(150292 [onRecord(y 1 150267) onRecord(g 1 150290)]))
lbl(150267)	getVariable(x(2))
		inlineAt(<M: UsedY> x(3) cache)
		inlineAt(<M: UsedY> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		branch(150305)
lbl(150290)	branch(150305)
lbl(150292)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1952)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(150305)	inlineAt(<M: Permanents> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
		endDefinition(150252)
lbl(150322)	definition(x(9) 150357 pid('Emitter,CopyPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1948 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1012> 5)
		endDefinition(150322)
lbl(150357)	putRecord('#' [1 2 fast] x(64))
		setConstant(<M: CopyPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(150367)	definition(x(7) 150451 pid('Emitter,FreeReg/fast' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 4) <Q: 1013> [g(2) y(1) g(10)])
		allocateL1
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(0))
		testRecord(x(3) x 1 150412)
lbl(150393)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(150412)	inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 150447)
lbl(150431)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(150447)	deAllocateL1
		return
		endDefinition(150367)
lbl(150451)	definition(x(9) 150477 pid('Emitter,FreeReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1013> 3)
		endDefinition(150451)
lbl(150477)	putRecord('#' [1 2 fast] x(65))
		setConstant(<M: FreeReg>)
		setValue(x(9))
		setValue(x(7))
lbl(150487)	definition(x(7) 150546 pid('Emitter,FreeX/fast' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 4) <Q: 1014> [g(2) g(10) g(7)])
		inlineAt(<M: UsedX> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(150532 [onScalar(0 150507) onScalar(1 150508)]))
lbl(150507)	return
lbl(150508)	inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(0) x(1) x(2) 150531)
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(150531)	return
lbl(150532)	inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(150487)
lbl(150546)	definition(x(9) 150572 pid('Emitter,FreeX/slow' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1014> 3)
		endDefinition(150546)
lbl(150572)	putRecord('#' [1 2 fast] x(66))
		setConstant(<M: FreeX>)
		setValue(x(9))
		setValue(x(7))
lbl(150582)	definition(x(7) 150641 pid('Emitter,FreeY/fast' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 4) <Q: 1015> [g(2) g(10) g(7)])
		inlineAt(<M: UsedY> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(150627 [onScalar(0 150602) onScalar(1 150603)]))
lbl(150602)	return
lbl(150603)	inlineAt(<M: UsedY> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeY> x(1) cache)
		testLT(x(0) x(1) x(2) 150626)
		inlineAssign(<M: LowestFreeY> x(0) cache)
lbl(150626)	return
lbl(150627)	inlineAt(<M: UsedY> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(150582)
lbl(150641)	definition(x(9) 150667 pid('Emitter,FreeY/slow' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1015> 3)
		endDefinition(150641)
lbl(150667)	putRecord('#' [1 2 fast] x(67))
		setConstant(<M: FreeY>)
		setValue(x(9))
		setValue(x(7))
lbl(150677)	definition(x(7) 150759 pid('Emitter,PredictBuiltinOutput/fast' 2 pos('./compiler/CodeEmitter.oz' 1990 6) nil 4) <Q: 1016> [y(1) g(3)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(150744 [onScalar(nil 150691) onRecord('|' 2 150697)]))
lbl(150691)	move(x(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> true 1) 0)
lbl(150697)	allocateL3
		getVariable(y(0))
		move(y(0) x(2))
		inlineDot(x(2) 1 x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictTemp> true 2) 0)
lbl(150744)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2001)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150677)
lbl(150759)	definition(x(9) 150794 pid('Emitter,PredictBuiltinOutput/slow' 1 pos('./compiler/CodeEmitter.oz' 1990 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1016> 5)
		endDefinition(150759)
lbl(150794)	putRecord('#' [1 2 fast] x(68))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(9))
		setValue(x(7))
lbl(150804)	definition(x(7) 150871 pid('Emitter,PredictTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 2003 6) nil 4) <Q: 1017> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(150856 [onScalar(nil 150818) onRecord('|' 2 150821)]))
lbl(150818)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(150821)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 150851)
lbl(150842)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(150851)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(150856)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2014)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150804)
lbl(150871)	definition(x(9) 150906 pid('Emitter,PredictTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 2003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1017> 5)
		endDefinition(150871)
lbl(150906)	putRecord('#' [1 2 fast] x(69))
		setConstant(<M: PredictTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(150916)	definition(x(7) 150983 pid('Emitter,PredictReg/fast' 2 pos('./compiler/CodeEmitter.oz' 2016 6) nil 4) <Q: 1018> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(150968 [onScalar(nil 150930) onRecord('|' 2 150933)]))
lbl(150930)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(150933)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 150963)
lbl(150954)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocatePerm> true 2) 0)
lbl(150963)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(150968)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2025)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150916)
lbl(150983)	definition(x(9) 151018 pid('Emitter,PredictReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2016 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1018> 5)
		endDefinition(150983)
lbl(151018)	putRecord('#' [1 2 fast] x(70))
		setConstant(<M: PredictReg>)
		setValue(x(9))
		setValue(x(7))
lbl(151028)	definition(x(7) 151966 pid('Emitter,PredictRegSub/fast' 3 pos('./compiler/CodeEmitter.oz' 2027 6) nil 11) <Q: 1019> [y(1) y(2)])
		match(x(1) ht(151946 [onScalar(nil 151037) onRecord(vMakePermanent 3 151043) onRecord(vEquateLiteral 4 151092) onRecord(vEquateRecord 6 151254) onRecord(vCallBuiltin 5 151419) onRecord(vGenCall 8 151475) onRecord(vCall 5 151495) onRecord(vFastCall 5 151513) onRecord(vApplMeth 7 151533) onRecord(vShared 4 151553) onRecord(vExHandler 7 151559) onRecord(vCreateCond 7 151589) onRecord(vCreateOr 6 151592) onRecord(vCreateEnumOr 6 151595) onRecord(vCreateChoice 6 151598) onRecord(vAsk 2 151601) onRecord(vWait 2 151608) onRecord(vWaitTop 2 151615) onRecord(vShallowGuard 8 151622) onRecord(vTestBool 8 151670) onRecord(vTestNumber 8 151715) onRecord(vTestLiteral 8 151752) onRecord(vMatch 7 151789) onRecord(vThread 5 151889) onRecord(vLockThread 5 151909) onRecord(vLockEnd 4 151933) onRecord(vDummy 1 151940)]))
lbl(151037)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(151043)	allocateL4
		getVoid(1)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 151069 151081)
		getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(151069)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(151081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2032)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(151092)	allocateL4
		getVoid(2)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) vCall 5 151145)
lbl(151111)	getVoid(1)
		getVarVar(x(3) x(4))
		getVoid(1)
		getVariable(x(5))
		shallowGuard(151145)
		getList(x(4))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(151128)	shallowThen
		move(x(3) x(1))
		move(x(5) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151145)	testRecord(y(0) vGenCall 8 151190)
lbl(151150)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(151190)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(151174)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151190)	testRecord(y(0) vCallBuiltin 5 151242)
lbl(151195)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(151242)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(151225)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151242)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(151254)	allocateL5
		getVoid(3)
		getVarVar(x(1) x(3))
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testRecord(y(0) vCall 5 151311)
lbl(151277)	getVoid(1)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVariable(x(6))
		shallowGuard(151311)
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(151294)	shallowThen
		move(x(4) x(1))
		move(y(4) x(2))
		move(x(6) x(3))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151311)	testRecord(y(0) vGenCall 8 151356)
lbl(151316)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(151356)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(151340)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151356)	testRecord(y(0) vCallBuiltin 5 151407)
lbl(151361)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(151407)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(151391)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		moveMoveYXYX(y(4) x(2) y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151407)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(151419)	allocateL4
		getVoid(2)
		getVariable(x(1))
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 151452 151464)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(151452)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(151464)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2058)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(151475)	getVoid(5)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151495)	getVoid(1)
		getVarVar(x(1) x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151513)	getVoid(2)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151533)	getVoid(4)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(151553)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(151559)	getVoid(1)
		getVariable(x(4))
		getVoid(3)
		getVarVar(x(5) x(1))
		putList(x(3))
		setValue(x(5))
		setConstant(nil)
		putList(x(6))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(6) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151589)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151592)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151595)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151598)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151601)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151608)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151615)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151622)	getVoid(1)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVariable(x(7))
		getVoid(1)
		getVariable(x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151670)	getVoid(2)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVarVar(x(7) x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151715)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151752)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151789)	allocateL4
		getVoid(2)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) y(0))
lbl(151800)	definition(x(1) 151846 pid('' 3 pos('./compiler/CodeEmitter.oz' 2103 7) nil 3) unit nil)
		match(x(0) ht(151831 [onRecord('onScalar' 2 151809) onRecord('onRecord' 3 151820)]))
lbl(151809)	getVoid(1)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(151820)	getVoid(2)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(151831)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(151800)
lbl(151846)	putList(x(3))
		setValue(x(6))
		setConstant(nil)
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(5) x(0))
		move(x(7) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151889)	getVoid(3)
		getVarVar(x(4) x(1))
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(2) x(3))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(151909)	getVoid(1)
		getVariable(x(1))
		getVoid(1)
		getVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 151927)
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(151927)	move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(151933)	getVoid(2)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(151940)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(151946)	callBI('Label' [x(1)]#[x(3)])
		move(g(1) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		callBI('.' [x(1) x(5)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
		endDefinition(151028)
lbl(151966)	definition(x(9) 152007 pid('Emitter,PredictRegSub/slow' 1 pos('./compiler/CodeEmitter.oz' 2027 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1019> 7)
		endDefinition(151966)
lbl(152007)	putRecord('#' [1 2 fast] x(71))
		setConstant(<M: PredictRegSub>)
		setValue(x(9))
		setValue(x(7))
lbl(152017)	definition(x(7) 152180 pid('Emitter,PredictArgReg/fast' 5 pos('./compiler/CodeEmitter.oz' 2127 6) nil 8) <Q: 1020> [y(1) g(18) g(1)])
		match(x(1) ht(152165 [onScalar(nil 152026) onRecord('|' 2 152080)]))
lbl(152026)	allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		testLiteral(x(3) nil 152065)
lbl(152039)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 952> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(152065)	inlineDot(x(3) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 152039)
lbl(152075)	getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(152080)	allocateL5
		getVarVar(x(1) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('==' [x(1) x(0)]#[x(6)] 152142)
lbl(152101)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 152130)
		inlinePlus1(x(1) x(2))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(152130)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(152142)	putRecord(value 1 x(6))
		setValue(y(0))
		testBI('\\=' [x(1) x(6)]#[x(7)] 152101)
lbl(152152)	inlinePlus1(x(2) x(6))
		move(y(4) x(1))
		move(x(6) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(152165)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2145)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152017)
lbl(152180)	definition(x(9) 152233 pid('Emitter,PredictArgReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2127 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1020> 11)
		endDefinition(152180)
lbl(152233)	putRecord('#' [1 2 fast] x(72))
		setConstant(<M: PredictArgReg>)
		setValue(x(9))
		setValue(x(7))
lbl(152243)	definition(x(7) 152347 pid('Emitter,PredictRegForCall/fast' 5 pos('./compiler/CodeEmitter.oz' 2147 6) nil 7) <Q: 1021> [y(1) g(18)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testLiteral(y(3) nil 152330)
lbl(152267)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 152315)
		inlineAt(<M: UsedX> x(1) cache)
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 952> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(152315)	moveMoveYXYX(y(2) x(1) y(3) x(3))
		move(y(4) x(4))
		putConstant(0 x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(152330)	inlineDot(x(3) 1 x(5) cache)
		testBI('BitArray.test' [x(5) x(0)]#[x(6)] 152267)
lbl(152340)	getLiteral(anyperm y(4))
		deAllocateL5
		return
		endDefinition(152243)
lbl(152347)	definition(x(9) 152400 pid('Emitter,PredictRegForCall/slow' 1 pos('./compiler/CodeEmitter.oz' 2147 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1021> 11)
		endDefinition(152347)
lbl(152400)	putRecord('#' [1 2 fast] x(73))
		setConstant(<M: PredictRegForCall>)
		setValue(x(9))
		setValue(x(7))
lbl(152410)	definition(x(7) 152438 pid('Emitter,PredictRegForInits/fast' 4 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) <Q: 1022> [g(18) y(1)])
		testBI('BitArray.test' [x(1) x(0)]#[x(4)] 152424)
		getLiteral(anyperm x(3))
		return
lbl(152424)	move(x(0) x(1))
		move(x(2) x(0))
		move(x(3) x(2))
		genCall(gci(g(1) true <M: PredictRegForBranches> true 3) 0)
		endDefinition(152410)
lbl(152438)	definition(x(9) 152485 pid('Emitter,PredictRegForInits/slow' 1 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1022> 9)
		endDefinition(152438)
lbl(152485)	putRecord('#' [1 2 fast] x(74))
		setConstant(<M: PredictRegForInits>)
		setValue(x(9))
		setValue(x(7))
lbl(152495)	definition(x(7) 152576 pid('Emitter,PredictRegForBranches/fast' 3 pos('./compiler/CodeEmitter.oz' 2164 6) nil 6) <Q: 1023> [y(1) g(18)])
		match(x(0) ht(152561 [onScalar(nil 152504) onRecord('|' 2 152513)]))
lbl(152504)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(152513)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) nil 152541)
lbl(152529)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegForBranches> true 3) 0)
lbl(152541)	inlineDot(x(0) 1 x(4) cache)
		testBI('BitArray.test' [x(4) x(1)]#[x(5)] 152529)
lbl(152551)	move(x(0) x(1))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(152561)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152495)
lbl(152576)	definition(x(9) 152617 pid('Emitter,PredictRegForBranches/slow' 1 pos('./compiler/CodeEmitter.oz' 2164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1023> 7)
		endDefinition(152576)
lbl(152617)	putRecord('#' [1 2 fast] x(75))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(9))
		setValue(x(7))
lbl(152627)	definition(x(7) 152669 pid('Emitter,PredictPermReg/fast' 3 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) <Q: 1024> [y(1) g(18)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) nil 152652)
lbl(152643)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(152652)	inlineDot(x(1) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 152643)
lbl(152662)	getLiteral(anyperm y(1))
		deAllocateL2
		return
		endDefinition(152627)
lbl(152669)	definition(x(9) 152710 pid('Emitter,PredictPermReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1024> 7)
		endDefinition(152669)
lbl(152710)	putRecord('#' [1 2 fast] x(76))
		setConstant(<M: PredictPermReg>)
		setValue(x(9))
		setValue(x(7))
lbl(152720)	definition(x(7) 152800 pid('Emitter,SaveRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 7) <Q: 1025> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 5 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		inlineAt(<M: Permanents> x(5) cache)
		callBI('Dictionary.clone' [x(5)]#[x(6)])
		unify(x(6) x(0))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(5)])
		unify(x(5) x(1))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(4))
		deAllocateL1
		return
		endDefinition(152720)
lbl(152800)	definition(x(9) 152826 pid('Emitter,SaveRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1025> 3)
		endDefinition(152800)
lbl(152826)	putRecord('#' [1 2 fast] x(77))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(152836)	definition(x(7) 152944 pid('Emitter,RestoreRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 6) <Q: 1026> [g(7) g(5) y(1)])
		allocateL2
		getRecord('#' 5 x(0))
		unifyVariable(x(4))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(x(5))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(5) cache)
		inlineAssign(<M: Permanents> x(4) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(152877)	definition(x(3) 152913 pid('' 1 pos('./compiler/CodeEmitter.oz' 2195 3) nil 5) unit [x(5) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(152877)
lbl(152913)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		deAllocateL2
		genCall(gci(g(2) true <M: KillAllTemporaries> true 0) 0)
		endDefinition(152836)
lbl(152944)	definition(x(9) 152970 pid('Emitter,RestoreRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1026> 3)
		endDefinition(152944)
lbl(152970)	putRecord('#' [1 2 fast] x(78))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(152980)	definition(x(7) 153096 pid('Emitter,SaveAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 10) <Q: 1027> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 8 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		inlineAt(<M: Temporaries> x(8) cache)
		callBI('Dictionary.clone' [x(8)]#[x(9)])
		unify(x(9) x(0))
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(8)])
		unify(x(8) x(1))
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(7))
		deAllocateL1
		return
		endDefinition(152980)
lbl(153096)	definition(x(9) 153122 pid('Emitter,SaveAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1027> 3)
		endDefinition(153096)
lbl(153122)	putRecord('#' [1 2 fast] x(79))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(153132)	definition(x(7) 153302 pid('Emitter,RestoreAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 8) <Q: 1028> [g(6) g(7) g(5)])
		allocateL3
		getRecord('#' 8 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(x(7))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(7) cache)
		inlineAt(<M: Temporaries> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Temporaries> x(4) cache)
		inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: UsedX> x(5) cache)
		inlineAt(<M: Permanents> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Permanents> x(6) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(153213)	definition(x(3) 153249 pid('' 1 pos('./compiler/CodeEmitter.oz' 2221 3) nil 5) unit [x(5) g(1) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(153213)
lbl(153249)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL3
		return
		endDefinition(153132)
lbl(153302)	definition(x(9) 153328 pid('Emitter,RestoreAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1028> 3)
		endDefinition(153302)
lbl(153328)	putRecord('#' [1 2 fast] x(80))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(153338)	definition(x(7) 153408 pid('Emitter,KillAllTemporaries/fast' 0 pos('./compiler/CodeEmitter.oz' 2230 6) nil 3) <Q: 1029> [g(20) g(5) g(10) g(6)])
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(2)])
lbl(153352)	definition(x(1) 153375 pid('' 1 pos('./compiler/CodeEmitter.oz' 2232 3) nil 3) unit [g(1) x(0) g(2)])
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) x 1 153372)
lbl(153369)	callBI('Dictionary.remove' [x(1) x(0)]#nil)
lbl(153372)	return
		endDefinition(153352)
lbl(153375)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(0 x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		return
		endDefinition(153338)
lbl(153408)	definition(x(9) 153422 pid('Emitter,KillAllTemporaries/slow' 1 pos('./compiler/CodeEmitter.oz' 2230 6) nil 1) unit nil)
		getLiteral(<M: KillAllTemporaries> x(0))
		genFastCall(<Q: 1029> 1)
		endDefinition(153408)
lbl(153422)	putRecord('#' [1 2 fast] x(81))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(9))
		setValue(x(7))
lbl(153432)	definition(x(7) 153460 pid('Emitter,Emit/fast' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) <Q: 1030> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		inlineAt(<M: CodeTl> x(0) cache)
		unify(x(0) x(1))
		inlineAssign(<M: CodeTl> x(2) cache)
		return
		endDefinition(153432)
lbl(153460)	definition(x(9) 153486 pid('Emitter,Emit/slow' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1030> 3)
		endDefinition(153460)
lbl(153486)	putRecord('#' [1 2 fast] x(82))
		setConstant(<M: Emit>)
		setValue(x(9))
		setValue(x(7))
lbl(153496)	definition(x(7) 153518 pid('Emitter,EmitMultiple/fast' 2 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) <Q: 1031> nil)
		inlineAt(<M: CodeTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: CodeTl> x(1) cache)
		return
		endDefinition(153496)
lbl(153518)	definition(x(9) 153553 pid('Emitter,EmitMultiple/slow' 1 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1031> 5)
		endDefinition(153518)
lbl(153553)	putRecord('#' [1 2 fast] x(83))
		setConstant(<M: EmitMultiple>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 74 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(10))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		setValue(x(71))
		setValue(x(72))
		setValue(x(73))
		setValue(x(74))
		setValue(x(75))
		setValue(x(76))
		setValue(x(77))
		setValue(x(78))
		setValue(x(79))
		setValue(x(80))
		setValue(x(81))
		setValue(x(82))
		setValue(x(83))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		move(x(7) x(1))
		move(x(8) x(2))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Emitter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		getRecord(c [vApplMeth vAsk vBranch vCall vCallBuiltin vClear vCreateChoice vCreateCond vCreateEnumOr vCreateOr vDefinition vDefinitionCopy vEquateLiteral vEquateNumber vEquateRecord vExHandler vFailure vFastCall vGenCall vGetSelf vGetVariable vInlineAssign vInlineAt vInlineDot vLockEnd vLockThread vMakePermanent vMatch vPopEx vSetSelf vShallowGuard vShared vStepPoint vTestBool vTestBuiltin vTestLiteral vTestNumber vThread vUnify vWait vWaitTop] y(2))
		unifyNumber(7)
		unifyNumber(2)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(5)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(7)
		unifyNumber(8)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(6)
		unifyNumber(6)
		unifyNumber(2)
		unifyNumber(5)
		unifyNumber(8)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(7)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(7)
		unifyNumber(6)
		unifyNumber(7)
		unifyNumber(7)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(2)
		unifyNumber(2)
		putList(x(0))
		setValue(y(1))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: EmptyRS> <M: NextReg> <M: Saved> minReg nextLabel regNames sharedDone] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [debugInfoControlSwitch debugInfoNameVarsSwitch debugInfoVarnamesSwitch reporter switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(153882)	definition(x(7) 154014 pid('CodeStore,init/fast' 2 pos('./compiler/CodeStore.oz' 77 3) nil 3) <Q: 1032> [y(1)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(regNames x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Saved> x(2) cache)
		putConstant(1 x(2))
		inlineAssign(nextLabel x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(sharedDone x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoControlSwitch x(1) cache)
		putConstant(debuginfocontrol x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoVarnamesSwitch x(1) cache)
		putConstant(debuginfovarnames x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoNameVarsSwitch x(1) cache)
		putConstant(debuginfonamevars x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) switches x(1) cache)
		unify(x(1) y(0))
		getSelf(x(0))
		inlineDot(x(0) reporter x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(153882)
lbl(154014)	definition(x(8) 154049 pid('CodeStore,init/slow' 1 pos('./compiler/CodeStore.oz' 77 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1032> 5)
		endDefinition(154014)
lbl(154049)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(154059)	definition(x(7) 154099 pid('CodeStore,makeRegSet/fast' 1 pos('./compiler/CodeStore.oz' 94 3) nil 4) <Q: 1033> [g(21)])
		inlineAt(minReg x(1) cache)
		inlineAt(<M: NextReg> x(2) cache)
		inlineMinus1(x(2) x(3))
		testLE(x(1) x(3) x(2) 154090)
		callBI('BitArray.new' [x(1) x(3)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(154090)	callBI('BitArray.new' [x(1) x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(154059)
lbl(154099)	definition(x(8) 154125 pid('CodeStore,makeRegSet/slow' 1 pos('./compiler/CodeStore.oz' 94 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1033> 3)
		endDefinition(154099)
lbl(154125)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRegSet)
		setValue(x(8))
		setValue(x(7))
lbl(154135)	definition(x(7) 154204 pid('CodeStore,enterVs/fast' 2 pos('./compiler/CodeStore.oz' 104 3) nil 3) <Q: 1034> [g(3) y(0)])
		match(x(0) ht(154189 [onScalar(nil 154144) onRecord('|' 2 154145)]))
lbl(154144)	return
lbl(154145)	allocateL3
		getVarVar(x(2) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(reg x(2) 1 cache)
		inlineAt(minReg x(0) cache)
		move(y(2) x(1))
		testLE(x(0) x(1) x(2) 154180)
		move(y(1) x(0))
		callBI('BitArray.set' [x(0) x(1)]#nil)
lbl(154180)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(1) true enterVs true 2) 0)
lbl(154189)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154135)
lbl(154204)	definition(x(8) 154239 pid('CodeStore,enterVs/slow' 1 pos('./compiler/CodeStore.oz' 104 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1034> 5)
		endDefinition(154204)
lbl(154239)	putRecord('#' [1 2 fast] x(11))
		setConstant(enterVs)
		setValue(x(8))
		setValue(x(7))
lbl(154249)	definition(x(7) 154289 pid('CodeStore,startDefinition/fast' 0 pos('./compiler/CodeStore.oz' 113 3) nil 3) <Q: 1035> nil)
		inlineAt(minReg x(0) cache)
		inlineAt(<M: Saved> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<M: Saved> x(2) cache)
		inlineAt(<M: NextReg> x(0) cache)
		inlineAssign(minReg x(0) cache)
		return
		endDefinition(154249)
lbl(154289)	definition(x(8) 154303 pid('CodeStore,startDefinition/slow' 1 pos('./compiler/CodeStore.oz' 113 3) nil 1) unit nil)
		getLiteral(startDefinition x(0))
		genFastCall(<Q: 1035> 1)
		endDefinition(154289)
lbl(154303)	putRecord('#' [1 2 fast] x(12))
		setConstant(startDefinition)
		setValue(x(8))
		setValue(x(7))
lbl(154313)	definition(x(7) 154338 pid('CodeStore,newReg/fast' 1 pos('./compiler/CodeStore.oz' 117 3) nil 2) <Q: 1036> nil)
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		return
		endDefinition(154313)
lbl(154338)	definition(x(8) 154364 pid('CodeStore,newReg/slow' 1 pos('./compiler/CodeStore.oz' 117 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1036> 3)
		endDefinition(154338)
lbl(154364)	putRecord('#' [1 2 fast] x(13))
		setConstant(newReg)
		setValue(x(8))
		setValue(x(7))
lbl(154374)	definition(x(7) 154410 pid('CodeStore,newSelfReg/fast' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) <Q: 1037> [g(7)])
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		inlineAt(regNames x(1) cache)
		putConstant('self' x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(154374)
lbl(154410)	definition(x(8) 154436 pid('CodeStore,newSelfReg/slow' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1037> 3)
		endDefinition(154410)
lbl(154436)	putRecord('#' [1 2 fast] x(14))
		setConstant(newSelfReg)
		setValue(x(8))
		setValue(x(7))
lbl(154446)	definition(x(7) 154532 pid('CodeStore,newVariableReg/fast' 2 pos('./compiler/CodeStore.oz' 126 3) nil 3) <Q: 1038> [g(10) g(7)])
		allocateL4
		inlineAt(<M: NextReg> x(2) cache)
		unify(x(2) x(1))
		inlinePlus1(x(1) x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(2) generated 154500)
lbl(154487)	inlineAt(regNames x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL4
		return
lbl(154500)	inlineAt(regNames x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(154446)
lbl(154532)	definition(x(8) 154567 pid('CodeStore,newVariableReg/slow' 1 pos('./compiler/CodeStore.oz' 126 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1038> 5)
		endDefinition(154532)
lbl(154567)	putRecord('#' [1 2 fast] x(15))
		setConstant(newVariableReg)
		setValue(x(8))
		setValue(x(7))
lbl(154577)	definition(x(7) 154707 pid('CodeStore,endDefinition/fast' 6 pos('./compiler/CodeStore.oz' 135 3) nil 7) <Q: 1039> [y(0) g(6) y(1)])
		allocateL9
		inlineAt(<M: Saved> x(6) cache)
		getList(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(8) x(0))
		inlineAssign(<M: EmptyRS> x(0) cache)
		move(y(2) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		inlineAt(<M: EmptyRS> x(1) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: AddRegOccs> false 2) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		moveMoveYXYX(y(5) x(4) y(7) x(5))
		genCall(gci(g(2) true doEmit false 6) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(minReg x(0) cache)
		inlineAssign(<M: NextReg> x(0) cache)
		move(y(0) x(0))
		inlineAssign(minReg x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: Saved> x(0) cache)
		deAllocateL9
		return
		endDefinition(154577)
lbl(154707)	definition(x(8) 154766 pid('CodeStore,endDefinition/slow' 1 pos('./compiler/CodeStore.oz' 135 3) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1039> 13)
		endDefinition(154707)
lbl(154766)	putRecord('#' [1 2 fast] x(16))
		setConstant('endDefinition')
		setValue(x(8))
		setValue(x(7))
lbl(154776)	definition(x(7) 154820 pid('CodeStore,getRegNames/fast' 2 pos('./compiler/CodeStore.oz' 150 3) nil 5) <Q: 1040> [g(5)])
		getSelf(x(3))
lbl(154784)	definition(x(4) 154809 pid('' 2 pos('./compiler/CodeStore.oz' 151 24) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(154784)
lbl(154809)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(154776)
lbl(154820)	definition(x(8) 154855 pid('CodeStore,getRegNames/slow' 1 pos('./compiler/CodeStore.oz' 150 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1040> 5)
		endDefinition(154820)
lbl(154855)	putRecord('#' [1 2 fast] x(17))
		setConstant(getRegNames)
		setValue(x(8))
		setValue(x(7))
lbl(154865)	definition(x(7) 154896 pid('CodeStore,GetOccs/fast' 2 pos('./compiler/CodeStore.oz' 154 3) nil 3) <Q: 1041> nil)
		testLiteral(x(0) nil 154884)
lbl(154875)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(154884)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(154865)
lbl(154896)	definition(x(8) 154931 pid('CodeStore,GetOccs/slow' 1 pos('./compiler/CodeStore.oz' 154 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1041> 5)
		endDefinition(154896)
lbl(154931)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: GetOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(154941)	definition(x(7) 156262 pid('CodeStore,ComputeOccs/fast' 2 pos('./compiler/CodeStore.oz' 157 3) nil 7) <Q: 1042> [y(0) y(2) g(17) g(22) g(23) g(9) g(3)])
		match(x(0) ht(155001 [onScalar(nil 154950) onRecord(vShared 4 154959)]))
lbl(154950)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(154959)	allocateL2
		getVariable(x(0))
		getVoid(1)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		inlinePlus1(x(4) x(5))
		callBI('Assign' [x(2) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 154987)
		branch(154996)
lbl(154987)	move(x(3) x(0))
		move(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
lbl(154996)	unify(y(0) y(1))
		deAllocateL2
		return
lbl(155001)	allocateL7
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		callBI('.' [x(0) x(4)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testLiteral(x(2) nil 155040)
lbl(155032)	move(y(0) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		branch(155058)
lbl(155040)	move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(0))
lbl(155058)	match(y(1) ht(156247 [onRecord(vStepPoint 5 155061) onRecord(vMakePermanent 3 155081) onRecord(vClear 3 155092) onRecord(vUnify 4 155103) onRecord(vFailure 2 155123) onRecord(vEquateNumber 4 155125) onRecord(vEquateLiteral 4 155136) onRecord(vEquateRecord 6 155147) onRecord(vGetVariable 3 155167) onRecord(vCallBuiltin 5 155178) onRecord(vGenCall 8 155189) onRecord(vCall 5 155212) onRecord(vFastCall 5 155232) onRecord(vApplMeth 7 155243) onRecord(vInlineDot 7 155266) onRecord(vInlineAt 4 155289) onRecord(vInlineAssign 4 155300) onRecord(vGetSelf 3 155311) onRecord(vSetSelf 3 155322) onRecord(vDefinition 7 155333) onRecord(vDefinitionCopy 8 155356) onRecord(vExHandler 7 155388) onRecord(vPopEx 3 155462) onRecord(vCreateCond 7 155464) onRecord(vCreateOr 6 155724) onRecord(vCreateEnumOr 6 155740) onRecord(vCreateChoice 6 155756) onRecord(vAsk 2 155772) onRecord(vWait 2 155774) onRecord(vWaitTop 2 155776) onRecord(vShallowGuard 8 155778) onRecord(vTestBool 8 155898) onRecord(vMatch 7 155993) onRecord(vThread 5 156198) onRecord(vLockThread 5 156234) onRecord(vLockEnd 4 156245)]))
lbl(155061)	getVoid(1)
		getVariable(x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(155081)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155092)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155103)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155123)	deAllocateL7
		return
lbl(155125)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155136)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155147)	getVoid(3)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(155167)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155178)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155189)	getVoid(1)
		getVariable(x(0))
		getVoid(3)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155212)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155232)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155243)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155266)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155289)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155300)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155311)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155322)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(155333)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155356)	getVoid(1)
		getVarVar(x(0) y(1))
		getVoid(2)
		getVariable(y(2))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(155388)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		moveMoveYXYX(y(3) x(1) y(5) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(0) x(3))
		callBI('BitArray.and' [x(1) x(3)]#nil)
		callBI('BitArray.clone' [x(0)]#[x(4)])
		callBI('BitArray.and' [x(4) x(2)]#nil)
		callBI('BitArray.or' [x(1) x(4)]#nil)
		callBI('BitArray.or' [x(3) x(0)]#nil)
		callBI('BitArray.or' [x(3) x(2)]#nil)
		deAllocateL7
		return
lbl(155462)	deAllocateL7
		return
lbl(155464)	getVoid(1)
		getVarVar(y(1) x(0))
		getVoid(2)
		getVarVar(y(2) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(155491)	definition(x(1) 155581 pid('' 1 pos('./compiler/CodeStore.oz' 245 6) nil 5) unit [x(2) g(0) g(3) y(3) g(2) g(4)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(155568)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(155514)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(155568)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(245)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(155491)
lbl(155581)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(2) ht(155598 [onScalar(nil 155628)]))
lbl(155598)	move(y(2) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(155604)	definition(x(2) 155619 pid('' 1 pos('./compiler/CodeStore.oz' 259 2) nil 2) unit [g(6) y(3)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(155604)
lbl(155619)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(155628)	moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(155638)	definition(x(1) 155717 pid('' 1 pos('./compiler/CodeStore.oz' 263 6) nil 5) unit [x(2) g(3) g(0) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(155704)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(155661)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(155704)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(263)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(155638)
lbl(155717)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(155724)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(155740)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(155756)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(155772)	deAllocateL7
		return
lbl(155774)	deAllocateL7
		return
lbl(155776)	deAllocateL7
		return
lbl(155778)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVarVar(y(3) y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(1) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		match(y(3) ht(155846 [onScalar(nil 155876)]))
lbl(155846)	move(y(3) x(5))
		callBI('BitArray.toList' [x(5)]#[x(6)])
lbl(155852)	definition(x(5) 155867 pid('' 1 pos('./compiler/CodeStore.oz' 294 2) nil 2) unit [g(6) y(4)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(155852)
lbl(155867)	move(x(6) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
lbl(155876)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(155898)	getVoid(1)
		getVarVar(y(1) x(0))
		getVarVar(y(2) y(3))
		getVoid(2)
		getVariable(y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(2) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(155993)	getVoid(1)
		getVarVar(y(1) x(0))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(156021)	definition(x(1) 156091 pid('' 1 pos('./compiler/CodeStore.oz' 317 6) nil 3) unit [x(2) g(3) g(0) y(3)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(156056 [onRecord('onScalar' 2 156038) onRecord('onRecord' 3 156047)]))
lbl(156038)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(156069)
lbl(156047)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(156069)
lbl(156056)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(320)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(156069)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(156021)
lbl(156091)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(156121)	definition(x(1) 156191 pid('' 1 pos('./compiler/CodeStore.oz' 327 6) nil 3) unit [x(2) g(3) g(0) y(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(156156 [onRecord('onScalar' 2 156138) onRecord('onRecord' 3 156147)]))
lbl(156138)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(156169)
lbl(156147)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(156169)
lbl(156156)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(330)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(156169)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(156121)
lbl(156191)	move(y(2) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(156198)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(1))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		callBI('BitArray.or' [x(2) x(0)]#nil)
		deAllocateL7
		return
lbl(156234)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(156245)	deAllocateL7
		return
lbl(156247)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(342)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(154941)
lbl(156262)	definition(x(8) 156297 pid('CodeStore,ComputeOccs/slow' 1 pos('./compiler/CodeStore.oz' 157 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1042> 5)
		endDefinition(156262)
lbl(156297)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ComputeOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(156307)	definition(x(7) 156564 pid('CodeStore,ComputeDisjunctionOccs/fast' 4 pos('./compiler/CodeStore.oz' 345 3) nil 6) <Q: 1043> [g(17) y(0) g(22) g(23) g(9) g(3)])
		allocateL4
		inlineAt(<M: EmptyRS> x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(2))
		getSelf(x(4))
lbl(156327)	definition(x(5) 156417 pid('' 1 pos('./compiler/CodeStore.oz' 348 7) nil 5) unit [x(4) g(1) g(2) x(2) g(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(156404)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(156350)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(156404)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(348)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156327)
lbl(156417)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(1) ht(156444 [onScalar(nil 156474)]))
lbl(156444)	move(y(1) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(156450)	definition(x(2) 156465 pid('' 1 pos('./compiler/CodeStore.oz' 360 3) nil 2) unit [g(5) y(2)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(156450)
lbl(156465)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(156474)	getSelf(x(2))
lbl(156476)	definition(x(1) 156555 pid('' 1 pos('./compiler/CodeStore.oz' 363 7) nil 5) unit [x(2) g(2) g(1) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(156542)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(156499)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(156542)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(363)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156476)
lbl(156555)	move(y(0) x(0))
		deAllocateL4
		genFastCall(<P: 34> 5)
		endDefinition(156307)
lbl(156564)	definition(x(8) 156611 pid('CodeStore,ComputeDisjunctionOccs/slow' 1 pos('./compiler/CodeStore.oz' 345 3) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1043> 9)
		endDefinition(156564)
lbl(156611)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(156621)	definition(x(7) 156644 pid('CodeStore,RegOcc/fast' 2 pos('./compiler/CodeStore.oz' 368 3) nil 4) <Q: 1044> [g(3)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 156638)
		return
lbl(156638)	callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(156621)
lbl(156644)	definition(x(8) 156679 pid('CodeStore,RegOcc/slow' 1 pos('./compiler/CodeStore.oz' 368 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1044> 5)
		endDefinition(156644)
lbl(156679)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RegOcc>)
		setValue(x(8))
		setValue(x(7))
lbl(156689)	definition(x(7) 156745 pid('CodeStore,RegOccs/fast' 2 pos('./compiler/CodeStore.oz' 373 3) nil 5) <Q: 1045> [g(3) y(0)])
		match(x(0) ht(156730 [onScalar(nil 156698) onRecord('|' 2 156699)]))
lbl(156698)	return
lbl(156699)	allocateL2
		getVarVar(x(0) x(2))
		inlineAt(minReg x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testLE(x(3) x(0) x(4) 156721)
lbl(156718)	callBI('BitArray.set' [x(1) x(0)]#nil)
lbl(156721)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: RegOccs> true 2) 0)
lbl(156730)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(380)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156689)
lbl(156745)	definition(x(8) 156780 pid('CodeStore,RegOccs/slow' 1 pos('./compiler/CodeStore.oz' 373 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1045> 5)
		endDefinition(156745)
lbl(156780)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: RegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(156790)	definition(x(7) 156850 pid('CodeStore,RegOccVArgs/fast' 2 pos('./compiler/CodeStore.oz' 382 3) nil 3) <Q: 1046> [y(0)])
		match(x(0) ht(156835 [onScalar(nil 156799) onRecord('|' 2 156800)]))
lbl(156799)	return
lbl(156800)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		match(x(0) ht(156826 [onRecord(value 1 156812) onRecord(record 3 156819)]))
lbl(156812)	getVariable(x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		branch(156826)
lbl(156819)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(0) true <M: RegOccVArgs> false 2) 0)
lbl(156826)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(156835)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156790)
lbl(156850)	definition(x(8) 156885 pid('CodeStore,RegOccVArgs/slow' 1 pos('./compiler/CodeStore.oz' 382 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1046> 5)
		endDefinition(156850)
lbl(156885)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: RegOccVArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(156895)	definition(x(7) 157406 pid('CodeStore,AddRegOccs/fast' 2 pos('./compiler/CodeStore.oz' 393 3) nil 5) <Q: 1047> [g(22) y(2) y(0) g(1) g(7) g(17)])
		testLiteral(x(0) nil 156906)
lbl(156905)	return
lbl(156906)	allocateL6
		inlineDot(x(0) 1 x(2) cache)
		callBI('BitArray.or' [x(2) x(1)]#nil)
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testNumber(x(4) ~1 156939)
lbl(156934)	unify(y(1) x(1))
		branch(156967)
lbl(156939)	callBI('.' [x(0) x(4)]#[x(2)])
		testLiteral(x(2) nil 156951)
lbl(156946)	unify(y(1) x(1))
		branch(156967)
lbl(156951)	moveMoveXYYX(x(2) y(2) y(2) x(0))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
lbl(156967)	match(y(0) ht(157391 [onRecord(vStepPoint 5 156970) onRecord(vMakePermanent 3 156981) onRecord(vClear 3 156983) onRecord(vUnify 4 156985) onRecord(vFailure 2 156987) onRecord(vEquateNumber 4 156989) onRecord(vEquateLiteral 4 156991) onRecord(vEquateRecord 6 156993) onRecord(vGetVariable 3 156995) onRecord(vCallBuiltin 5 156997) onRecord(vGenCall 8 156999) onRecord(vCall 5 157001) onRecord(vFastCall 5 157003) onRecord(vApplMeth 7 157005) onRecord(vInlineDot 7 157007) onRecord(vInlineAt 4 157009) onRecord(vInlineAssign 4 157011) onRecord(vGetSelf 3 157013) onRecord(vSetSelf 3 157015) onRecord(vDefinition 7 157017) onRecord(vDefinitionCopy 8 157019) onRecord(vShared 4 157021) onRecord(vExHandler 7 157061) onRecord(vPopEx 3 157111) onRecord(vCreateCond 7 157113) onRecord(vCreateOr 6 157147) onRecord(vCreateEnumOr 6 157160) onRecord(vCreateChoice 6 157173) onRecord(vAsk 2 157186) onRecord(vWait 2 157188) onRecord(vWaitTop 2 157190) onRecord(vShallowGuard 8 157192) onRecord(vTestBool 8 157266) onRecord(vMatch 7 157296) onRecord(vThread 5 157376) onRecord(vLockThread 5 157387) onRecord(vLockEnd 4 157389)]))
lbl(156970)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(156981)	deAllocateL6
		return
lbl(156983)	deAllocateL6
		return
lbl(156985)	deAllocateL6
		return
lbl(156987)	deAllocateL6
		return
lbl(156989)	deAllocateL6
		return
lbl(156991)	deAllocateL6
		return
lbl(156993)	deAllocateL6
		return
lbl(156995)	deAllocateL6
		return
lbl(156997)	deAllocateL6
		return
lbl(156999)	deAllocateL6
		return
lbl(157001)	deAllocateL6
		return
lbl(157003)	deAllocateL6
		return
lbl(157005)	deAllocateL6
		return
lbl(157007)	deAllocateL6
		return
lbl(157009)	deAllocateL6
		return
lbl(157011)	deAllocateL6
		return
lbl(157013)	deAllocateL6
		return
lbl(157015)	deAllocateL6
		return
lbl(157017)	deAllocateL6
		return
lbl(157019)	deAllocateL6
		return
lbl(157021)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 157040)
		deAllocateL6
		return
lbl(157040)	inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		move(x(1) x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(157061)	getVoid(1)
		getVariable(y(0))
		getVoid(1)
		getVariable(y(2))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(157111)	deAllocateL6
		return
lbl(157113)	getVoid(1)
		getVarVar(y(0) y(2))
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(157147)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(157160)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(157173)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(157186)	deAllocateL6
		return
lbl(157188)	deAllocateL6
		return
lbl(157190)	deAllocateL6
		return
lbl(157192)	getVoid(1)
		getVarVar(y(0) y(2))
		getVariable(y(3))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(157266)	getVoid(2)
		getVarVar(x(0) y(0))
		getVariable(y(2))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(157296)	getVoid(2)
		getVarVar(x(0) y(0))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		getSelf(x(2))
lbl(157309)	definition(x(1) 157369 pid('' 1 pos('./compiler/CodeStore.oz' 469 6) nil 3) unit [x(2) y(1) g(2)])
		allocateL1
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(157344 [onRecord('onScalar' 2 157326) onRecord('onRecord' 3 157335)]))
lbl(157326)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(157357)
lbl(157335)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(157357)
lbl(157344)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(157357)	move(y(0) x(0))
		move(g(1) x(1))
		deAllocateL1
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
		endDefinition(157309)
lbl(157369)	move(y(0) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(157376)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(157387)	deAllocateL6
		return
lbl(157389)	deAllocateL6
		return
lbl(157391)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(481)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156895)
lbl(157406)	definition(x(8) 157441 pid('CodeStore,AddRegOccs/slow' 1 pos('./compiler/CodeStore.oz' 393 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1047> 5)
		endDefinition(157406)
lbl(157441)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AddRegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(157451)	definition(x(7) 157613 pid('CodeStore,AddRegOccsClauses/fast' 3 pos('./compiler/CodeStore.oz' 484 3) nil 5) <Q: 1048> [g(17) y(0) g(22)])
		allocateL2
		callBI('BitArray.clone' [x(1)]#[x(3)])
		getSelf(x(4))
lbl(157463)	definition(x(1) 157532 pid('' 1 pos('./compiler/CodeStore.oz' 487 7) nil 5) unit [x(4) x(2) g(1) g(2) x(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(157519)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(157486)	shallowThen
		allocateL2
		moveMoveXYYX(x(4) y(0) y(0) x(0))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(4) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(157519)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157463)
lbl(157532)	moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<P: 34> 4)
		getSelf(x(4))
lbl(157542)	definition(x(1) 157600 pid('' 3 pos('./compiler/CodeStore.oz' 492 7) nil 7) unit [x(4) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(157587)
		getRecord('#' 3 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(157565)	shallowThen
		allocateL2
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(y(1) x(0))
		genCall(gci(g(1) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: GetOccs> true 2) 0)
lbl(157587)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(492)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157542)
lbl(157600)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariable(x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(157451)
lbl(157613)	definition(x(8) 157654 pid('CodeStore,AddRegOccsClauses/slow' 1 pos('./compiler/CodeStore.oz' 484 3) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1048> 7)
		endDefinition(157613)
lbl(157654)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 17 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		move(y(0) x(6))
		putConstant('CodeStore' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(157711)	definition(x(7) 157777 pid('CodeGenList' 4 pos('./compiler/CodeGen.oz' 36 3) nil 5) <Q: 1049> nil)
		match(x(0) ht(157762 [onScalar(nil 157720) onRecord('|' 2 157724)]))
lbl(157720)	unify(x(2) x(3))
		return
lbl(157724)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(codeGen x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1049> 9)
lbl(157762)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(42)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157711)
lbl(157777)	definition(x(7) 157806 pid('CoordNoDebug' 2 pos('./compiler/CodeGen.oz' 45 3) nil 4) <Q: 1050> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 157794)
lbl(157790)	unify(x(1) x(0))
		return
lbl(157794)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(157777)
lbl(157806)	definition(x(7) 157878 pid('StepPoint' 6 pos('./compiler/CodeGen.oz' 51 3) nil 6) <Q: 1051> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 957> 4)
		testBool(y(6) 157857 157865)
		getLiteral(nil y(5))
		getRecord(vStepPoint 5 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(3))
		deAllocateL7
		return
lbl(157857)	unify(y(2) y(4))
		unify(y(5) y(3))
		deAllocateL7
		return
lbl(157865)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(52)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157806)
lbl(157878)	definition(x(7) 157907 pid('MakeUnify' 4 pos('./compiler/CodeGen.oz' 61 3) nil 5) <Q: 1052> nil)
		testBI('==' [x(0) x(1)]#[x(4)] 157892)
		unify(x(2) x(3))
		return
lbl(157892)	getRecord(vUnify 4 x(2))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(3))
		return
		endDefinition(157878)
lbl(157907)	definition(x(7) 158008 pid('MakePermanent' 4 pos('./compiler/CodeGen.oz' 70 3) nil 5) <Q: 1053> nil)
		allocateL3
lbl(157914)	definition(x(4) 157965 pid('' 3 pos('./compiler/CodeGen.oz' 72 7) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(3) generated 157947)
lbl(157942)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(157947)	getList(y(2))
		unifyVariable(x(0))
		unifyValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(157914)
lbl(157965)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		move(y(0) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 8)
		testLiteral(y(0) nil 157994)
lbl(157989)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(157994)	getRecord(vMakePermanent 3 y(1))
		unifyVoid(1)
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL3
		return
		endDefinition(157907)
lbl(158008)	definition(x(7) 158035 pid('Clear' 3 pos('./compiler/CodeGen.oz' 84 3) nil 3) <Q: 1054> nil)
		testLiteral(x(0) nil 158022)
lbl(158018)	unify(x(1) x(2))
		return
lbl(158022)	getRecord(vClear 3 x(1))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(2))
		return
		endDefinition(158008)
lbl(158035)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [coord reg value] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(158051)	definition(x(7) 158071 pid('PseudoVariableOccurrence,init/fast' 1 pos('./compiler/CodeGen.oz' 102 6) nil 3) <Q: 1055> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(158051)
lbl(158071)	definition(x(8) 158097 pid('PseudoVariableOccurrence,init/slow' 1 pos('./compiler/CodeGen.oz' 102 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1055> 3)
		endDefinition(158071)
lbl(158097)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(158107)	definition(x(7) 158135 pid('PseudoVariableOccurrence,getCoord/fast' 1 pos('./compiler/CodeGen.oz' 105 6) nil 3) <Q: 1056> nil)
		getSelf(x(1))
		inlineDot(x(1) coord x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 158129)
		unify(x(0) x(1))
		return
lbl(158129)	getLiteral(unit x(0))
		return
		endDefinition(158107)
lbl(158135)	definition(x(8) 158161 pid('PseudoVariableOccurrence,getCoord/slow' 1 pos('./compiler/CodeGen.oz' 105 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1056> 3)
		endDefinition(158135)
lbl(158161)	putRecord('#' [1 2 fast] x(10))
		setConstant(getCoord)
		setValue(x(8))
		setValue(x(7))
lbl(158171)	definition(x(7) 158185 pid('PseudoVariableOccurrence,getVariable/fast' 1 pos('./compiler/CodeGen.oz' 108 6) nil 2) <Q: 1057> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(158171)
lbl(158185)	definition(x(8) 158211 pid('PseudoVariableOccurrence,getVariable/slow' 1 pos('./compiler/CodeGen.oz' 108 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1057> 3)
		endDefinition(158185)
lbl(158211)	putRecord('#' [1 2 fast] x(11))
		setConstant('getVariable')
		setValue(x(8))
		setValue(x(7))
lbl(158221)	definition(x(7) 158233 pid('PseudoVariableOccurrence,isToplevel/fast' 1 pos('./compiler/CodeGen.oz' 111 6) nil 1) <Q: 1058> nil)
		getLiteral(false x(0))
		return
		endDefinition(158221)
lbl(158233)	definition(x(8) 158259 pid('PseudoVariableOccurrence,isToplevel/slow' 1 pos('./compiler/CodeGen.oz' 111 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1058> 3)
		endDefinition(158233)
lbl(158259)	putRecord('#' [1 2 fast] x(12))
		setConstant(isToplevel)
		setValue(x(8))
		setValue(x(7))
lbl(158269)	definition(x(7) 158278 pid('PseudoVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 114 6) nil 1) <Q: 1059> nil)
		return
		endDefinition(158269)
lbl(158278)	definition(x(8) 158304 pid('PseudoVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 114 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1059> 3)
		endDefinition(158278)
lbl(158304)	putRecord('#' [1 2 fast] x(13))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(158314)	definition(x(7) 158334 pid('PseudoVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 117 6) nil 3) <Q: 1060> nil)
		getSelf(x(1))
		inlineDot(x(1) value x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(158314)
lbl(158334)	definition(x(8) 158360 pid('PseudoVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 117 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1060> 3)
		endDefinition(158334)
lbl(158360)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(158370)	definition(x(7) 158390 pid('PseudoVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 120 6) nil 3) <Q: 1061> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(158370)
lbl(158390)	definition(x(8) 158416 pid('PseudoVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 120 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1061> 3)
		endDefinition(158390)
lbl(158416)	putRecord('#' [1 2 fast] x(15))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(158426)	definition(x(7) 158574 pid('PseudoVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 123 6) nil 5) <Q: 1062> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		testBI('IsDet' [x(0)]#[x(4)] 158532)
		testBI('IsNumber' [x(0)]#[x(4)] 158468)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(158468)	testBI('IsLiteral' [x(0)]#[x(4)] 158492)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(158492)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1052> 9)
lbl(158532)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1052> 9)
		endDefinition(158426)
lbl(158574)	definition(x(8) 158621 pid('PseudoVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 123 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1062> 9)
		endDefinition(158574)
lbl(158621)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(158631)	definition(x(7) 158712 pid('PseudoVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 136 6) nil 4) <Q: 1063> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		unify(x(1) x(2))
		testBI('IsDet' [x(0)]#[x(1)] 158692)
		testBI('IsNumber' [x(0)]#[x(1)] 158663)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(158663)	testBI('IsLiteral' [x(0)]#[x(1)] 158674)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(158674)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
lbl(158692)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(158631)
lbl(158712)	definition(x(8) 158759 pid('PseudoVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 136 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1063> 9)
		endDefinition(158712)
lbl(158759)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(158769)	definition(x(7) 158786 pid('PseudoVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 150 6) nil 4) <Q: 1064> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(158769)
lbl(158786)	definition(x(8) 158833 pid('PseudoVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 150 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1064> 9)
		endDefinition(158786)
lbl(158833)	putRecord('#' [1 2 fast] x(18))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('PseudoVariableOccurrence' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(158882)	definition(x(7) 158928 pid('NewPseudoVariableOccurrence' 2 pos('./compiler/CodeGen.oz' 156 3) nil 3) <Q: 1065> [y(1)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(newReg x(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(158882)
lbl(158928)	definition(x(7) 159016 pid('MakeMessageArgs' 5 pos('./compiler/CodeGen.oz' 160 3) nil 6) <Q: 1066> nil)
		match(x(0) ht(159001 [onScalar(nil 158937) onRecord('|' 2 158944)]))
lbl(158937)	getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(158944)	allocateL7
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(4) y(3) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		sendMsg(makeVO x(5) 4 cache)
		createVariableMove(y(6) x(0))
		sendMsg(reg y(5) 1 cache)
		getList(y(2))
		unifyValVar(y(6) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(3) y(3) x(4))
		deAllocateL7
		genFastCall(<Q: 1066> 11)
lbl(159001)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(158928)
lbl(159016)	definition(x(7) 159160 pid('LoadActualArgs' 5 pos('./compiler/CodeGen.oz' 173 6) nil 5) <Q: 1067> nil)
		match(x(0) ht(159145 [onScalar(nil 159025) onRecord('|' 2 159032)]))
lbl(159025)	unify(x(2) x(3))
		getLiteral(nil x(4))
		return
lbl(159032)	allocateL9
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 159119)
lbl(159066)	testBI('IsName' [x(0)]#[x(1)] 159119)
lbl(159070)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(0) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(6))
		getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(7))
		move(x(1) x(0))
		sendMsg(reg y(0) 1 cache)
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
		branch(159128)
lbl(159119)	unify(y(3) y(7))
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
lbl(159128)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(4) x(3))
		move(y(8) x(4))
		deAllocateL9
		genFastCall(<Q: 1067> 11)
lbl(159145)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(189)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(159016)
lbl(159160)	definition(x(7) 159213 pid('GetRegs' 2 pos('./compiler/CodeGen.oz' 192 6) nil 3) <Q: 1068> nil)
		match(x(0) ht(159198 [onScalar(nil 159169) onRecord('|' 2 159173)]))
lbl(159169)	getLiteral(nil x(1))
		return
lbl(159173)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(reg x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1068> 5)
lbl(159198)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(195)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(159160)
lbl(159213)	definition(x(7) 159417 pid('MakeApplication' 6 pos('./compiler/CodeGen.oz' 198 6) nil 7) <Q: 1069> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(4) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1067> 10)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 159297)
lbl(159268)	testBI('IsProcedure' [x(0)]#[x(1)] 159297)
lbl(159272)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(8) x(2) y(3) x(3))
		moveMoveYXYX(y(7) x(4) y(5) x(5))
		move(y(0) x(6))
		deAllocateL9
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(159297)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(4) 159375 159404)
lbl(159319)	move(y(3) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 159375)
lbl(159332)	getRecord(vGenCall 8 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(false)
		unifyLiteral('')
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(8) x(0) y(3) x(1))
		deAllocateL9
		genFastCall(<Q: 1068> 5)
lbl(159375)	getRecord(vCall 5 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL9
		genFastCall(<Q: 1068> 5)
lbl(159404)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159213)
lbl(159417)	definition(x(7) 159608 pid('MakeRunTimeProcApplication' 6 pos('./compiler/CodeGen.oz' 218 6) nil 9) <Q: 1070> [y(7) y(4) y(6)])
		allocateL8
		move(g(0) x(6))
		inlineDot(x(6) procs x(7) cache)
		callBI('.' [x(7) x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getLastValue x(8) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(5) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1067> 10)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 159555 159595)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(6) x(0))
		sendMsg(init y(1) 1 cache)
		moveMoveYXYX(y(0) x(1) y(7) x(2))
		moveMoveYXYX(y(2) x(3) y(5) x(4))
		move(y(4) x(5))
		putConstant(unit x(0))
		move(y(1) x(6))
		deAllocateL8
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(159555)	getRecord(vFastCall 5 y(5))
		unifyVoid(1)
		unifyValVar(y(6) x(2))
		unifyValue(y(0))
		unifyValue(y(4))
lbl(159568)	definition(x(1) 159588 pid('' 2 pos('./compiler/CodeGen.oz' 228 26) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(159568)
lbl(159588)	move(y(1) x(0))
		deAllocateL8
		genFastCall(<P: 29> 7)
lbl(159595)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(223)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159417)
lbl(159608)	definition(x(7) 159795 pid('MakeException' 6 pos('./compiler/CodeGen.oz' 234 3) nil 6) <Q: 1071> [y(1)])
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(3) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		putRecord(literal 1 x(1))
		setValue(y(0))
		putRecord(number 1 x(3))
		setVariable(x(4))
		putList(x(2))
		setValue(x(3))
		setVariable(x(5))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(0) x(5) y(8))
		testLiteral(y(1) unit 159694)
lbl(159689)	getNumber(~1 x(4))
		branch(159706)
lbl(159694)	move(y(1) x(1))
		inlineDot(x(1) 2 x(2) cache)
		unify(x(2) x(4))
lbl(159706)	definition(x(1) 159732 pid('' 2 pos('./compiler/CodeGen.oz' 239 15) nil 3) unit nil)
		getRecord(value 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(159706)
lbl(159732)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral(kernel)
		unifyVariable(x(1))
		unifyValue(y(6))
		unifyValVar(y(0) y(2))
		move(y(0) x(0))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(2))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(0) x(1) y(3) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		putConstant('RaiseError' x(0))
		deAllocateL9
		genFastCall(<Q: 1070> 13)
		endDefinition(159608)
lbl(159795)	definition(x(7) 159857 pid('GuardNeedsThread' 2 pos('./compiler/CodeGen.oz' 245 3) nil 3) <Q: 1072> nil)
		testBI('IsFree' [x(0)]#[x(2)] 159809)
		getLiteral(false x(1))
		return
lbl(159809)	match(x(0) ht(159851 [onScalar(nil 159812) onRecord(vEquateNumber 4 159816) onRecord(vEquateLiteral 4 159823) onRecord(vEquateRecord 6 159830) onRecord(vUnify 4 159837) onRecord(vFailure 2 159844)]))
lbl(159812)	getLiteral(false x(1))
		return
lbl(159816)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1072> 5)
lbl(159823)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1072> 5)
lbl(159830)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1072> 5)
lbl(159837)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1072> 5)
lbl(159844)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1072> 5)
lbl(159851)	getLiteral(true x(1))
		return
		endDefinition(159795)
lbl(159857)	definition(x(7) 159912 pid('GuardIsShallow' 2 pos('./compiler/CodeGen.oz' 259 3) nil 3) <Q: 1073> nil)
		testBI('IsFree' [x(0)]#[x(2)] 159871)
		getLiteral(true x(1))
		return
lbl(159871)	match(x(0) ht(159906 [onScalar(nil 159874) onRecord(vEquateNumber 4 159878) onRecord(vEquateLiteral 4 159885) onRecord(vEquateRecord 6 159892) onRecord(vUnify 4 159899)]))
lbl(159874)	getLiteral(true x(1))
		return
lbl(159878)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1073> 5)
lbl(159885)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1073> 5)
lbl(159892)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1073> 5)
lbl(159899)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1073> 5)
lbl(159906)	getLiteral(false x(1))
		return
		endDefinition(159857)
lbl(159912)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: AltNode> <M: Arbiter> <M: Records> <M: Scalars> <M: WarnedCatchAll> coord] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		setConstant(unit)
		putRecord('feat' [<M: Reg> cs] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(159942)	definition(x(7) 159988 pid('SwitchHashTable,init/fast' 5 pos('./compiler/CodeGen.oz' 278 6) nil 5) <Q: 1074> nil)
		inlineAssign(coord x(0) cache)
		inlineAssign(<M: AltNode> x(2) cache)
		inlineAssign(<M: Arbiter> x(3) cache)
		getSelf(x(0))
		inlineDot(x(0) <M: Reg> x(2) cache)
		unify(x(2) x(1))
		getSelf(x(0))
		inlineDot(x(0) cs x(1) cache)
		unify(x(1) x(4))
		return
		endDefinition(159942)
lbl(159988)	definition(x(8) 160041 pid('SwitchHashTable,init/slow' 1 pos('./compiler/CodeGen.oz' 278 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1074> 11)
		endDefinition(159988)
lbl(160041)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(160051)	definition(x(7) 160086 pid('SwitchHashTable,addScalar/fast' 3 pos('./compiler/CodeGen.oz' 285 6) nil 6) <Q: 1075> nil)
		inlineAt(<M: Scalars> x(3) cache)
		putRecord('#' 3 x(5))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(3))
		inlineAssign(<M: Scalars> x(4) cache)
		return
		endDefinition(160051)
lbl(160086)	definition(x(8) 160127 pid('SwitchHashTable,addScalar/slow' 1 pos('./compiler/CodeGen.oz' 285 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1075> 7)
		endDefinition(160086)
lbl(160127)	putRecord('#' [1 2 fast] x(10))
		setConstant(addScalar)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(160139)	definition(x(7) 160178 pid('SwitchHashTable,addRecord/fast' 2 pos('./compiler/CodeGen.oz' 288 6) nil 5) <Q: 1076> [y(2)])
		allocateL1
		inlineAt(<M: Records> x(4) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(0) x(3))
		genCall(gci(g(0) true <M: AddRecord> false 4) 0)
		move(y(0) x(0))
		inlineAssign(<M: Records> x(0) cache)
		deAllocateL1
		return
		endDefinition(160139)
lbl(160178)	definition(x(8) 160213 pid('SwitchHashTable,addRecord/slow' 1 pos('./compiler/CodeGen.oz' 288 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1076> 5)
		endDefinition(160178)
lbl(160213)	putRecord('#' [1 2 fast] x(11))
		setConstant(addRecord)
		setValue(x(8))
		setValue(x(7))
lbl(160223)	definition(x(7) 160312 pid('SwitchHashTable,AddRecord/fast' 4 pos('./compiler/CodeGen.oz' 291 6) nil 8) <Q: 1077> [y(2)])
		match(x(0) ht(160297 [onScalar(nil 160232) onRecord('|' 2 160252)]))
lbl(160232)	getList(x(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(160252)	getVarVar(x(0) x(4))
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		testBI('==' [x(5) x(1)]#[x(7)] 160287)
		getList(x(3))
		unifyVariable(x(0))
		unifyValue(x(4))
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
		return
lbl(160287)	getListValVar(x(3) x(0) x(3))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: AddRecord> true 4) 0)
lbl(160297)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(298)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(160223)
lbl(160312)	definition(x(8) 160359 pid('SwitchHashTable,AddRecord/slow' 1 pos('./compiler/CodeGen.oz' 291 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1077> 9)
		endDefinition(160312)
lbl(160359)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AddRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(160369)	definition(x(7) 160743 pid('SwitchHashTable,codeGen/fast' 2 pos('./compiler/CodeGen.oz' 301 6) nil 5) <Q: 1078> [y(2)])
		allocateL7
		getSelf(x(2))
		inlineDot(x(2) cs x(2) cache)
		inlineAt(<M: Scalars> x(3) cache)
		inlineDot(x(2) debugInfoVarnamesSwitch x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariable(y(4))
		testBool(x(4) 160516 160593)
lbl(160411)	definition(x(4) 160511 pid('' 3 pos('./compiler/CodeGen.oz' 306 6) nil 6) unit [y(2)])
		shallowGuard(160498)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(160429)	shallowThen
		allocateL8
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1053> 8)
		move(y(3) x(0))
		move(g(0) x(1))
		move(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL8
		return
lbl(160498)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(306)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160411)
lbl(160511)	unify(x(4) y(4))
		branch(160604)
lbl(160516)	definition(x(4) 160588 pid('' 3 pos('./compiler/CodeGen.oz' 314 6) nil 6) unit [y(2)])
		shallowGuard(160575)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(160534)	shallowThen
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(160575)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(314)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160516)
lbl(160588)	unify(x(4) y(4))
		branch(160604)
lbl(160593)	putRecord(kernel 2 x(4))
		setConstant(boolCaseType)
		setConstant(305)
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(160604)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: Records> x(0) cache)
		getSelf(x(3))
lbl(160625)	definition(x(1) 160672 pid('' 2 pos('./compiler/CodeGen.oz' 321 3) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(160659)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(160646)	shallowThen
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genCall(gci(g(1) true <M: CodeGenRecord> true 3) 0)
lbl(160659)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160625)
lbl(160672)	move(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vMatch 7 y(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValVar(y(6) x(1))
		unifyValue(y(1))
		unifyVoid(1)
		getSelf(x(2))
		inlineDot(x(2) <M: Reg> x(3) cache)
		unify(x(3) x(0))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL7
		return
		endDefinition(160369)
lbl(160743)	definition(x(8) 160778 pid('SwitchHashTable,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 301 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1078> 5)
		endDefinition(160743)
lbl(160778)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
lbl(160788)	definition(x(7) 161842 pid('SwitchHashTable,CodeGenRecord/fast' 3 pos('./compiler/CodeGen.oz' 327 6) nil 10) <Q: 1079> nil)
		allocateL(13)
		getSelf(x(3))
		inlineDot(x(3) cs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testList(y(3) 161291)
lbl(160819)	getVarVar(x(4) x(5))
		shallowGuard(161291)
		getRecord('#' 4 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getLiteral(nil x(5))
lbl(160839)	shallowThen
		createVariable(x(9))
lbl(160842)	definition(x(1) 160928 pid('MakeGuard' 6 pos('./compiler/CodeGen.oz' 335 5) nil 8) unit [y(4) x(9)])
		match(x(0) ht(160913 [onScalar(nil 160851) onRecord('|' 2 160858)]))
lbl(160851)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(160858)	allocateL6
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(g(0) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		move(x(3) x(4))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(5))
		createVariableMove(y(5) x(6))
		sendMsg(makeGetArg x(7) 7 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		deAllocateL6
		tailCall(g(1) 6)
lbl(160913)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(347)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(160842)
lbl(160928)	unify(x(1) x(9))
		moveMoveXYXY(x(4) y(3) x(7) y(5))
		move(x(8) y(6))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		call(x(9) 6)
		move(y(4) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(10))
		testBool(x(1) 161016 161032)
		moveMoveYXYX(y(3) x(0) y(10) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1053> 8)
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(12) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(11) x(0) y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(161043)
lbl(161016)	moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(10) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(161043)
lbl(161032)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(353)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(161043)	move(y(8) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 161055)
		unify(y(7) y(10))
		branch(161785)
lbl(161055)	createVariableMove(y(3) x(1))
		genFastCall(<Q: 1073> 4)
		testBool(y(3) 161144 161280)
		getLiteral(nil y(9))
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeRegSet y(4) 1 cache)
		inlineAt(<M: Arbiter> x(2) cache)
		putList(x(0))
		setValue(x(2))
		setConstant(nil)
		move(y(5) x(1))
		sendMsg(enterVs y(4) 2 cache)
		getRecord(vShallowGuard 8 y(7))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(3))
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyValue(y(5))
		unifyVoid(1)
		branch(161785)
lbl(161144)	move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 161211 161200)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating deep pattern as ')
		setConstant('general conditional')
		move(y(5) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(161211)
lbl(161200)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(372)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(161211)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord('#' 3 x(1))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		branch(161785)
lbl(161280)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(364)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(161291)	createVariable(y(5))
lbl(161293)	definition(x(0) 161360 pid('MakeGuard' 4 pos('./compiler/CodeGen.oz' 384 5) nil 5) unit [y(4) y(5)])
		match(x(0) ht(161345 [onScalar(nil 161302) onRecord('|' 2 161306)]))
lbl(161302)	unify(x(2) x(3))
		return
lbl(161306)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(3) y(2))
		move(g(0) x(0))
		createVariableMove(y(3) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		tailCall(g(1) 4)
lbl(161345)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(161293)
lbl(161360)	unify(x(0) y(5))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(3)])
lbl(161369)	definition(x(1) 161383 pid('' 2 pos('./compiler/CodeGen.oz' 395 5) nil 2) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1065> 5)
		endDefinition(161369)
lbl(161383)	move(x(3) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(161392)	definition(x(1) 161416 pid('' 3 pos('./compiler/CodeGen.oz' 397 6) nil 3) unit nil)
		getRecord(vGetVariable 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(161392)
lbl(161416)	moveMoveYXYX(y(6) x(0) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
lbl(161427)	definition(x(1) 161656 pid('' 3 pos('./compiler/CodeGen.oz' 402 6) nil 7) unit [y(5) y(6) y(4)])
		shallowGuard(161643)
		getRecord('#' 4 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(161447)	shallowThen
		allocateL10
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		call(g(0) 4)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1072> 4)
		createVariable(y(8))
		createVariable(y(9))
		testBool(y(7) 161513 161521)
		getLiteral(nil y(6))
		getRecord(vThread 5 y(8))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(3))
		unifyValue(y(9))
		unifyVoid(1)
		branch(161532)
lbl(161513)	unify(y(6) y(9))
		unify(y(8) y(5))
		branch(161532)
lbl(161521)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(406)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(161532)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		move(g(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(3))
		testBool(x(1) 161597 161614)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1053> 8)
		move(y(4) x(0))
		move(g(2) x(1))
		move(y(6) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(161625)
lbl(161597)	move(y(4) x(0))
		move(g(2) x(1))
		move(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(161625)
lbl(161614)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(161625)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		deAllocateL10
		return
lbl(161643)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(402)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(161427)
lbl(161656)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 161767 161756)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(3) x(0))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 3 x(0) cache)
		putConstant('optimization warning' x(1))
		putConstant('translating deep pattern as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(161767)
lbl(161756)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(424)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(161767)	getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
lbl(161785)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 161816)
		getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
lbl(161816)	getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
		endDefinition(160788)
lbl(161842)	definition(x(8) 161883 pid('SwitchHashTable,CodeGenRecord/slow' 1 pos('./compiler/CodeGen.oz' 327 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1079> 7)
		endDefinition(161842)
lbl(161883)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CodeGenRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('SwitchHashTable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(161921)	definition(x(7) 162036 pid('MakeFromPropSub' 5 pos('./compiler/CodeGen.oz' 440 6) nil 5) <Q: 1080> nil)
		match(x(0) ht(162021 [onScalar(nil 161930) onRecord('|' 2 161940)]))
lbl(161930)	unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyLiteral(nil)
		return
lbl(161940)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1080> 10)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeRecordArgument y(0) 4 cache)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(7) x(1))
		getList(x(1))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(3))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(162021)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(450)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(161921)
lbl(162036)	definition(x(7) 162130 pid('MakeFromProp' 5 pos('./compiler/CodeGen.oz' 453 6) nil 6) <Q: 1081> [y(1)])
		allocateL4
		move(x(4) y(0))
		createVariable(y(1))
		match(x(0) ht(162093 [onScalar(nil 162051) onRecord('|' 2 162079)]))
lbl(162051)	moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(newReg x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(1))
		unifyValue(y(3))
		branch(162106)
lbl(162079)	putRecord(value 1 x(5))
		setValue(y(1))
		move(x(5) x(4))
		genFastCall(<Q: 1080> 10)
		branch(162106)
lbl(162093)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(459)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(162106)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL4
		return
		endDefinition(162036)
lbl(162130)	definition(x(7) 162247 pid('MakeAttrFeatSub' 3 pos('./compiler/CodeGen.oz' 465 6) nil 5) <Q: 1082> [y(7)])
		match(x(0) ht(162232 [onScalar(nil 162139) onRecord('|' 2 162143)]))
lbl(162139)	getLiteral(nil x(2))
		return
lbl(162143)	allocateL6
		getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(4) y(2))
		testRecord(x(0) '#' 2 162171)
lbl(162166)	unify(x(2) x(0))
		branch(162220)
lbl(162171)	moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(5) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(0) x(2))
		inlineDot(x(2) literals x(3) cache)
		inlineDot(x(3) ooFreeFlag x(4) cache)
		unify(x(4) x(1))
		getRecord('#' 2 y(4))
		unifyValue(y(3))
		unifyValue(y(5))
lbl(162220)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1082> 7)
lbl(162232)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(162130)
lbl(162247)	definition(x(7) 162360 pid('MakeAttrFeat' 6 pos('./compiler/CodeGen.oz' 478 6) nil 9) <Q: 1083> [y(6)])
		allocateL7
		move(g(0) x(6))
		inlineDot(x(6) atomNode x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(8) y(5))
		putConstant(unit x(1))
		sendMsg(init y(5) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1082> 6)
		move(g(0) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		move(y(6) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1065> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(162247)
lbl(162360)	definition(x(7) 162476 pid('CodeGenRecord,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 489 6) nil 3) <Q: 1084> nil)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 162472)
lbl(162391)	inlineAt(args x(0) cache)
lbl(162396)	definition(x(1) 162439 pid('' 2 pos('./compiler/CodeGen.oz' 492 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 162433)
lbl(162407)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(162433)	getLiteral(true x(1))
		return
		endDefinition(162396)
lbl(162439)	createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 162459 162461)
lbl(162449)	inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(162459)	deAllocateL2
		return
lbl(162461)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(162472)	deAllocateL2
		return
		endDefinition(162360)
lbl(162476)	definition(x(8) 162502 pid('CodeGenRecord,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 489 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1084> 3)
		endDefinition(162476)
lbl(162502)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(4))
lbl(162514)	definition(x(7) 163163 pid('CodeGenRecord,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 501 6) nil 6) <Q: 1085> [y(4) g(24) g(25) g(26) g(27) g(28)])
		allocateL8
		inlineAt(args x(4) cache)
lbl(162526)	definition(x(5) 162564 pid('' 1 pos('./compiler/CodeGen.oz' 505 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 162550)
lbl(162537)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
lbl(162550)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
		endDefinition(162526)
lbl(162564)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 162623 163150)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: MakeConstructionOpen> false 4) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(162623)	inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(162642)	definition(x(1) 162670 pid('' 3 pos('./compiler/CodeGen.oz' 519 7) nil 3) unit nil)
		testRecord(x(1) '#' 2 162664)
lbl(162653)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(162664)	unify(x(2) x(0))
		return
		endDefinition(162642)
lbl(162670)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		move(y(4) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		move(g(2) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 162740 163139)
lbl(162700)	testBool(y(7) 162740 163139)
lbl(162704)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		move(y(2) x(4))
		createVariableMove(y(6) x(5))
		genCall(gci(g(0) true <M: MakeConstructionBasic> false 6) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(162740)	testBool(y(7) 163007 163128)
		inlineAt(args x(1) cache)
lbl(162749)	definition(x(2) 162784 pid('' 3 pos('./compiler/CodeGen.oz' 532 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 162773)
lbl(162760)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(162773)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(162749)
lbl(162784)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(162915)
		move(x(0) y(6))
		createCond(162909)
lbl(162802)	lastClause
		clause
		thread(162820)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(162820)	ask
lbl(162821)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(162859)	definition(x(1) 162896 pid('' 3 pos('./compiler/CodeGen.oz' 541 26) nil 5) unit nil)
		shallowGuard(162883)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(162875)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(162883)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(541)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(162859)
lbl(162896)	moveMoveYXYX(y(4) x(0) y(5) x(3))
		putConstant(someLabel x(2))
		genFastCall(<P: 30> 8)
		branch(162928)
lbl(162909)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(162915)	putConstant(someLabel x(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(162928)	move(y(5) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 162968)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		createVariableMove(y(4) x(4))
		genCall(gci(g(0) true <M: MakeConstructionTuple> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(162968)	createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(163007)	inlineAt(args x(1) cache)
lbl(163012)	definition(x(2) 163086 pid('' 3 pos('./compiler/CodeGen.oz' 554 9) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(1) '#' 2 163044)
lbl(163033)	getVarVar(x(1) x(3))
		unify(y(2) x(1))
		unify(y(3) x(3))
		branch(163047)
lbl(163044)	unify(y(3) x(1))
lbl(163047)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(3))
		moveMoveXYYX(x(0) y(1) y(0) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 163079)
lbl(163064)	testBI('IsInt' [x(1)]#[x(2)] 163073)
lbl(163068)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(163073)	testBI('IsLiteral' [x(1)]#[x(2)] 163079)
		branch(163068)
lbl(163079)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(163012)
lbl(163086)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(163128)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(530)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(163139)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(163150)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(513)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(162514)
lbl(163163)	definition(x(8) 163210 pid('CodeGenRecord,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 501 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1085> 9)
		endDefinition(163163)
lbl(163210)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(163220)	definition(x(7) 163728 pid('CodeGenRecord,MakeConstructionBasic/fast' 6 pos('./compiler/CodeGen.oz' 568 6) nil 8) <Q: 1086> [g(26) g(27)])
		testLiteral(x(3) nil 163247)
lbl(163230)	getRecord(vEquateLiteral 4 x(4))
		unifyVoid(1)
		unifyValVar(x(2) x(0))
		unifyValue(x(5))
		tailSendMsg(reg x(1) 1 cache)
lbl(163247)	allocateL9
		inlineAt(args x(6) cache)
lbl(163253)	definition(x(7) 163288 pid('' 3 pos('./compiler/CodeGen.oz' 573 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 163277)
lbl(163264)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(163277)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(163253)
lbl(163288)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(3) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(6))
		exHandler(163457)
		move(x(0) y(7))
		createCond(163451)
lbl(163325)	lastClause
		clause
		thread(163343)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(163343)	ask
lbl(163344)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(163382)	definition(x(0) 163419 pid('' 3 pos('./compiler/CodeGen.oz' 582 30) nil 5) unit nil)
		shallowGuard(163406)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163398)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(163406)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(582)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163382)
lbl(163419)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(163469)
lbl(163451)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(163457)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(163469)	createVariable(y(5))
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 163594)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(8))
lbl(163496)	definition(x(3) 163572 pid('' 3 pos('./compiler/CodeGen.oz' 588 10) nil 6) unit [y(6) y(0)])
		shallowGuard(163559)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163512)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(163559)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163496)
lbl(163572)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(163701)
lbl(163594)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(8))
lbl(163608)	definition(x(4) 163684 pid('' 3 pos('./compiler/CodeGen.oz' 595 10) nil 6) unit [y(6) y(0)])
		shallowGuard(163671)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163624)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(163671)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(595)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163608)
lbl(163684)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(163701)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValVar(y(5) x(0))
		unifyValue(y(7))
		unifyValue(y(8))
		move(y(1) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(163220)
lbl(163728)	definition(x(8) 163787 pid('CodeGenRecord,MakeConstructionBasic/slow' 1 pos('./compiler/CodeGen.oz' 568 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1086> 13)
		endDefinition(163728)
lbl(163787)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(8))
		setValue(x(7))
lbl(163797)	definition(x(7) 164217 pid('CodeGenRecord,MakeConstructionOpen/fast' 4 pos('./compiler/CodeGen.oz' 603 6) nil 7) <Q: 1087> [y(1) g(29)])
		allocateL10
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(4) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1050> 4)
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyValVar(y(4) y(2))
		inlineAt(args x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		createVariable(y(7))
		testBool(y(4) 163943 164028)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1070> 12)
		branch(164039)
lbl(163943)	createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(4) x(0))
		sendMsg(init y(8) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(9))
		unifyValVar(y(4) x(4))
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(y(8))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1070> 12)
		branch(164039)
lbl(164028)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(614)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164039)	inlineAt(args x(0) cache)
lbl(164044)	definition(x(1) 164206 pid('' 4 pos('./compiler/CodeGen.oz' 626 3) nil 6) unit [y(0) y(1) y(5)])
		allocateL7
		move(x(3) y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(2) '#' 2 164102)
lbl(164065)	getVarVar(x(4) y(4))
		move(g(0) x(0))
		move(y(1) x(3))
		createVariableMove(y(5) x(2))
		sendMsg(makeVO x(4) 4 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(4) 4 cache)
		branch(164168)
lbl(164102)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(2) y(6))
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(4))
		getRecord(vEquateNumber 4 y(5))
		unifyVoid(1)
		unifyValVar(y(4) x(1))
		unifyVariable(y(5))
		move(x(1) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(6) 4 cache)
lbl(164168)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putList(x(0))
		setValue(y(1))
		setValue(x(1))
		putList(x(2))
		setValue(g(1))
		setValue(x(0))
		move(g(2) x(1))
		move(g(0) x(3))
		moveMoveYXYX(y(3) x(4) y(0) x(5))
		putConstant('^' x(0))
		deAllocateL7
		genFastCall(<Q: 1070> 13)
		endDefinition(164044)
lbl(164206)	moveMoveYXYX(y(7) x(2) y(3) x(3))
		deAllocateL10
		genFastCall(<P: 82> 9)
		endDefinition(163797)
lbl(164217)	definition(x(8) 164264 pid('CodeGenRecord,MakeConstructionOpen/slow' 1 pos('./compiler/CodeGen.oz' 603 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1087> 9)
		endDefinition(164217)
lbl(164264)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(8))
		setValue(x(7))
lbl(164274)	definition(x(7) 164778 pid('CodeGenRecord,MakeConstructionTuple/fast' 5 pos('./compiler/CodeGen.oz' 640 6) nil 7) <Q: 1088> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(x(1) y(8))
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(9) x(0))
		sendMsg(init y(10) 1 cache)
		createVariable(y(11))
		testNumber(y(8) 0 164390)
lbl(164376)	getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(6))
		unifyValue(y(11))
		branch(164580)
lbl(164390)	createVariable(x(4))
lbl(164392)	definition(x(0) 164511 pid('MakeList' 4 pos('./compiler/CodeGen.oz' 655 5) nil 6) unit [y(8) x(4) y(0) y(2)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 164499)
		allocateL7
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(1) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(2) 1 cache)
		move(g(3) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(g(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(164499)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
		endDefinition(164392)
lbl(164511)	unify(x(0) x(4))
		move(y(3) x(1))
		putConstant(2 x(0))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(4) 4)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(4) cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(11))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(13))
		unifyLiteral(nil)
lbl(164580)	getRecord(vEquateNumber 4 y(11))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(9) y(2))
		inlineAt(label x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(3) 164664 164765)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1050> 4)
		inlineAt(label x(6) cache)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1070> 13)
lbl(164664)	createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(3) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(3) y(2))
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1070> 13)
lbl(164765)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(676)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164274)
lbl(164778)	definition(x(8) 164831 pid('CodeGenRecord,MakeConstructionTuple/slow' 1 pos('./compiler/CodeGen.oz' 640 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1088> 11)
		endDefinition(164778)
lbl(164831)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(8))
		setValue(x(7))
lbl(164841)	definition(x(7) 165485 pid('CodeGenRecord,MakeConstructionRecord/fast' 5 pos('./compiler/CodeGen.oz' 688 6) nil 7) <Q: 1089> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		createVariable(y(8))
		testList(y(2) 165297)
lbl(164907)	getVarVar(x(0) x(1))
		shallowGuard(165297)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(164920)	shallowThen
		createVariable(x(4))
lbl(164923)	definition(x(0) 165144 pid('MakePairList' 4 pos('./compiler/CodeGen.oz' 697 5) nil 8) unit [x(4) y(0)])
		allocateL10
		move(x(0) y(0))
		match(y(0) ht(165129 [onScalar(nil 164936) onRecord('|' 2 164947)]))
lbl(164936)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		deAllocateL10
		return
lbl(164947)	getVarVar(x(4) x(5))
		shallowGuard(165129)
		getRecord('#' 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(164960)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(g(0) 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(8))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 165018)
		getRecord(number 1 y(8))
		unifyValue(y(2))
		branch(165045)
lbl(165018)	testBI('IsLiteral' [x(0)]#[x(1)] 165030)
		getRecord(literal 1 y(8))
		unifyValue(y(2))
		branch(165045)
lbl(165030)	getRecord(value 1 y(8))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(165045)	move(g(1) x(0))
		move(y(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeRecordArgument y(3) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(8) x(2))
		getList(x(2))
		unifyValue(y(9))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(6))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(1))
		unifyValue(y(7))
		deAllocateL10
		return
lbl(165129)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(718)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164923)
lbl(165144)	unify(x(0) x(4))
		moveMoveXYXY(x(2) y(2) x(3) y(9))
		move(x(1) x(0))
		move(y(3) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		call(x(4) 4)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		createVariable(y(12))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 165193)
		getRecord(number 1 y(12))
		unifyValue(y(2))
		branch(165220)
lbl(165193)	testBI('IsLiteral' [x(0)]#[x(1)] 165205)
		getRecord(literal 1 y(12))
		unifyValue(y(2))
		branch(165220)
lbl(165205)	getRecord(value 1 y(12))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(165220)	moveMoveYXYX(y(0) x(0) y(10) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(13) x(3))
		sendMsg(makeRecordArgument y(9) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(3) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(12) x(2))
		getList(x(2))
		unifyValue(y(13))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(11))
		unifyLiteral(nil)
		branch(165310)
lbl(165297)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(733)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(165310)	inlineAt(label x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 165377 165472)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1050> 4)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1070> 13)
lbl(165377)	createVariableMove(y(2) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValVar(y(2) y(8))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(3))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1070> 13)
lbl(165472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(734)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(164841)
lbl(165485)	definition(x(8) 165538 pid('CodeGenRecord,MakeConstructionRecord/slow' 1 pos('./compiler/CodeGen.oz' 688 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1089> 11)
		endDefinition(165485)
lbl(165538)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(4) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenRecord' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(165585)	definition(x(7) 165668 pid('OzValueToVArg' 5 pos('./compiler/CodeGen.oz' 749 6) nil 6) <Q: 1090> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 165605)
		unify(x(2) x(3))
		getRecord(number 1 x(4))
		unifyValue(x(0))
		return
lbl(165605)	testBI('IsLiteral' [x(0)]#[x(5)] 165619)
		unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyValue(x(0))
		return
lbl(165619)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		genFastCall(<Q: 1091> 10)
		getRecord(value 1 y(4))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(165585)
lbl(165668)	definition(x(7) 166006 pid('OzValueToVInstr' 5 pos('./compiler/CodeGen.oz' 763 6) nil 8) <Q: 1091> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 165691)
		getRecord(vEquateNumber 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(165691)	testBI('IsLiteral' [x(0)]#[x(5)] 165708)
		getRecord(vEquateLiteral 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(165708)	testBI('IsTuple' [x(0)]#[x(5)] 165857)
		allocateL6
		createVariable(x(5))
		createVariable(x(6))
lbl(165717)	definition(x(7) 165796 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 769 5) nil 7) unit [x(5) x(0) x(2) x(6)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 165787)
		allocateL5
		move(g(1) x(5))
		callBI('.' [x(5) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1090> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		tailCall(g(3) 4)
lbl(165787)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
		endDefinition(165717)
lbl(165796)	unify(x(7) x(6))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(1))
		putConstant(1 x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(6) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(165857)	testBI('IsRecord' [x(0)]#[x(5)] 166003)
		allocateL6
		createVariable(x(5))
lbl(165864)	definition(x(6) 165945 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 784 5) nil 6) unit [x(0) x(2) x(5)])
		match(x(0) ht(165930 [onScalar(nil 165873) onRecord('|' 2 165880)]))
lbl(165873)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(165880)	allocateL5
		getVarVar(x(0) y(0))
		move(g(0) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1090> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(g(2) 4)
lbl(165930)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(791)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(165864)
lbl(165945)	unify(x(6) x(5))
		callBI('Arity' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(2) y(3))
		move(y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(166003)	return
		endDefinition(165668)
lbl(166006)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [<M: Val> reg] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(166020)	definition(x(7) 166040 pid('CodeGenOzValue,init/fast' 1 pos('./compiler/CodeGen.oz' 808 2) nil 3) <Q: 1092> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(166020)
lbl(166040)	definition(x(8) 166066 pid('CodeGenOzValue,init/slow' 1 pos('./compiler/CodeGen.oz' 808 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1092> 3)
		endDefinition(166040)
lbl(166066)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(166076)	definition(x(7) 166096 pid('CodeGenOzValue,reg/fast' 1 pos('./compiler/CodeGen.oz' 811 2) nil 3) <Q: 1093> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(166076)
lbl(166096)	definition(x(8) 166122 pid('CodeGenOzValue,reg/slow' 1 pos('./compiler/CodeGen.oz' 811 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1093> 3)
		endDefinition(166096)
lbl(166122)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(166132)	definition(x(7) 166185 pid('CodeGenOzValue,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 814 2) nil 5) <Q: 1094> nil)
		allocateL5
		getSelf(x(4))
		inlineDot(x(4) <M: Val> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<Q: 1091> 11)
		endDefinition(166132)
lbl(166185)	definition(x(8) 166232 pid('CodeGenOzValue,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 814 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1094> 9)
		endDefinition(166185)
lbl(166232)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(166242)	definition(x(7) 166270 pid('CodeGenOzValue,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 817 2) nil 3) <Q: 1095> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(166242)
lbl(166270)	definition(x(8) 166296 pid('CodeGenOzValue,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 817 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1095> 3)
		endDefinition(166270)
lbl(166296)	putRecord('#' [1 2 fast] x(12))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(166306)	definition(x(7) 166365 pid('CodeGenOzValue,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 820 2) nil 4) <Q: 1096> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Val> x(0) cache)
		unify(x(1) x(2))
		testBI('IsNumber' [x(0)]#[x(1)] 166334)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(166334)	testBI('IsLiteral' [x(0)]#[x(1)] 166345)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(166345)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(166306)
lbl(166365)	definition(x(8) 166412 pid('CodeGenOzValue,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 820 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1096> 9)
		endDefinition(166365)
lbl(166412)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(166422)	definition(x(7) 166456 pid('CodeGenOzValue,isConstruction/fast' 1 pos('./compiler/CodeGen.oz' 827 2) nil 3) <Q: 1097> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(1) cache)
		testBI('IsRecord' [x(1)]#[x(2)] 166450)
		callBI('IsLiteral' [x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(1)])
		unify(x(1) x(0))
		return
lbl(166450)	getLiteral(false x(0))
		return
		endDefinition(166422)
lbl(166456)	definition(x(8) 166482 pid('CodeGenOzValue,isConstruction/slow' 1 pos('./compiler/CodeGen.oz' 827 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1097> 3)
		endDefinition(166456)
lbl(166482)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('CodeGenOzValue' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166523)	definition(x(7) 166843 pid('CodeGenStatement,startCodeGen/fast' 7 pos('./compiler/CodeGen.oz' 834 6) nil 12) <Q: 1098> [y(0) g(24)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		move(x(2) x(1))
		sendMsg(init y(5) 2 cache)
lbl(166563)	definition(x(1) 166583 pid('' 1 pos('./compiler/CodeGen.oz' 839 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(166563)
lbl(166583)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(166589)	definition(x(1) 166609 pid('' 1 pos('./compiler/CodeGen.oz' 840 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(166589)
lbl(166609)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		sendMsg(startDefinition y(5) 0 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		move(y(1) x(0))
		putConstant(nil x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		createVariableMove(y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg('endDefinition' y(5) 6 cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(y(3) x(1))
		sendMsg(getRegNames y(5) 2 cache)
		callBI('NewName' nil#[x(3)])
		callBI('NewName' nil#[x(0)])
		getList(y(4))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
		getList(x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('definition' 6 x(4))
		unifyVariable(x(6))
		unifyValVar(x(0) x(7))
		unifyLiteral(unit)
		unifyVariable(x(8))
		unifyValue(y(2))
		getRecord(x 1 x(6))
		unifyNumber(0)
		getRecord('pid' 5 x(7))
		unifyLiteral('Toplevel abstraction')
		unifyNumber(0)
		unifyVariable(x(9))
		unifyVariable(x(10))
		unifyValue(y(6))
		getRecord('pos' 3 x(9))
		unifyLiteral('')
		unifyNumber(0)
		unifyNumber(0)
		getList(x(10))
		unifyLiteral(native)
		unifyLiteral(nil)
		getList(x(5))
		unifyVariable(x(11))
		unifyVariable(y(3))
		getRecord('endDefinition' 1 x(11))
		unifyValue(x(3))
lbl(166768)	definition(x(1) 166789 pid('' 3 pos('./compiler/CodeGen.oz' 854 30) nil 3) unit nil)
		getRecord(g 1 x(2))
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		unify(x(2) x(1))
		return
		endDefinition(166768)
lbl(166789)	moveMoveXYYX(x(0) y(2) y(0) x(0))
		move(x(8) x(2))
		genFastCall(<P: 81> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		putRecord(x 1 x(4))
		setConstant(0)
		putRecord('tailCall' 2 x(3))
		setValue(x(4))
		setConstant(0)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putList(x(1))
		setValue(x(0))
		setValue(x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL7
		genFastCall(<P: 21> 7)
		endDefinition(166523)
lbl(166843)	definition(x(8) 166908 pid('CodeGenStatement,startCodeGen/slow' 1 pos('./compiler/CodeGen.oz' 834 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1098> 15)
		endDefinition(166843)
lbl(166908)	putRecord('#' [1 2 fast] x(9))
		setConstant(startCodeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStatement' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166945)	definition(x(7) 167007 pid('CodeGenTypeOf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 862 6) nil 6) <Q: 1099> [y(8)])
		allocateL4
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		move(x(3) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(res x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(3) x(4))
		deAllocateL4
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(166945)
lbl(167007)	definition(x(8) 167048 pid('CodeGenTypeOf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 862 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1099> 7)
		endDefinition(167007)
lbl(167048)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(167085)	definition(x(7) 167143 pid('CodeGenStepPoint,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 868 6) nil 6) <Q: 1100> nil)
		allocateL4
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1049> 8)
		inlineAt(coord x(0) cache)
		inlineAt(kind x(1) cache)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		deAllocateL4
		genFastCall(<Q: 1051> 13)
		endDefinition(167085)
lbl(167143)	definition(x(8) 167184 pid('CodeGenStepPoint,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 868 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1100> 7)
		endDefinition(167143)
lbl(167184)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(167221)	definition(x(7) 167364 pid('CodeGenDeclaration,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 875 6) nil 5) <Q: 1101> nil)
		allocateL5
		inlineAt(localVars x(3) cache)
lbl(167233)	definition(x(4) 167253 pid('' 1 pos('./compiler/CodeGen.oz' 876 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(167233)
lbl(167253)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 167331 167351)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1054> 7)
lbl(167331)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1049> 9)
lbl(167351)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(877)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(167221)
lbl(167364)	definition(x(8) 167405 pid('CodeGenDeclaration,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 875 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1101> 7)
		endDefinition(167364)
lbl(167405)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDeclaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(167442)	definition(x(7) 167472 pid('CodeGenSkipNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 888 6) nil 6) <Q: 1102> nil)
		inlineAt(coord x(0) cache)
		createVariable(x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(5))
		putConstant('skip' x(1))
		genFastCall(<Q: 1051> 13)
		endDefinition(167442)
lbl(167472)	definition(x(8) 167513 pid('CodeGenSkipNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 888 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1102> 7)
		endDefinition(167472)
lbl(167513)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenSkipNode' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(167550)	definition(x(7) 167583 pid('CodeGenEquation,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 894 6) nil 6) <Q: 1103> nil)
		inlineAt(right x(4) cache)
		inlineAt(left x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(167550)
lbl(167583)	definition(x(8) 167624 pid('CodeGenEquation,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 894 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1103> 7)
		endDefinition(167583)
lbl(167624)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquation' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(4))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(167673)	definition(x(7) 167682 pid('CodeGenConstruction,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 901 6) nil 1) <Q: 1104> nil)
		return
		endDefinition(167673)
lbl(167682)	definition(x(8) 167708 pid('CodeGenConstruction,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 901 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1104> 3)
		endDefinition(167682)
lbl(167708)	putRecord('#' [1 2 fast] x(9))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(167718)	definition(x(7) 167730 pid('CodeGenConstruction,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 904 6) nil 3) <Q: 1105> nil)
		unify(x(1) x(2))
		return
		endDefinition(167718)
lbl(167730)	definition(x(8) 167771 pid('CodeGenConstruction,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 904 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1105> 7)
		endDefinition(167730)
lbl(167771)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(167781)	definition(x(7) 167820 pid('CodeGenConstruction,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 907 6) nil 4) <Q: 1106> [y(4)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(1))
		genFastCall(<Q: 1065> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true makeEquation true 4) 0)
		endDefinition(167781)
lbl(167820)	definition(x(8) 167867 pid('CodeGenConstruction,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 907 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1106> 9)
		endDefinition(167820)
lbl(167867)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(167877)	definition(x(7) 168489 pid('CodeGenConstruction,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 911 6) nil 6) <Q: 1107> [g(24) g(25) g(26) g(27) y(4)])
		allocateL9
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(4) 1 cache)
		inlineAt(args x(0) cache)
lbl(167913)	definition(x(1) 167941 pid('' 3 pos('./compiler/CodeGen.oz' 914 4) nil 3) unit nil)
		testRecord(x(1) '#' 2 167935)
lbl(167924)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(167935)	unify(x(2) x(0))
		return
		endDefinition(167913)
lbl(167941)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 168438)
lbl(167956)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 168438)
lbl(167963)	move(y(5) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 168438 168476)
lbl(167979)	testLiteral(y(5) nil 167994)
lbl(167983)	unify(y(1) y(2))
		getRecord(literal 1 y(3))
		unifyValue(y(4))
		deAllocateL9
		return
lbl(167994)	inlineAt(args x(1) cache)
lbl(167999)	definition(x(2) 168034 pid('' 3 pos('./compiler/CodeGen.oz' 923 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 168023)
lbl(168010)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(168023)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(167999)
lbl(168034)	move(y(5) x(0))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(168184)
		move(x(0) y(7))
		createCond(168178)
lbl(168052)	lastClause
		clause
		thread(168070)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(168070)	ask
lbl(168071)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(168109)	definition(x(0) 168146 pid('' 3 pos('./compiler/CodeGen.oz' 932 26) nil 5) unit nil)
		shallowGuard(168133)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(168125)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(168133)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(932)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168109)
lbl(168146)	moveMoveXYYX(x(0) y(7) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		genFastCall(<P: 30> 8)
		branch(168196)
lbl(168178)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(168184)	moveMoveYXYX(y(4) x(0) y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(168196)	createVariable(y(6))
		createVariable(y(7))
		move(y(5) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 168319)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(1))
lbl(168221)	definition(x(3) 168297 pid('' 3 pos('./compiler/CodeGen.oz' 938 10) nil 6) unit [y(5) y(0)])
		shallowGuard(168284)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(168237)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(168284)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(938)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168221)
lbl(168297)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(168426)
lbl(168319)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(1))
lbl(168333)	definition(x(4) 168409 pid('' 3 pos('./compiler/CodeGen.oz' 945 10) nil 6) unit [y(5) y(0)])
		shallowGuard(168396)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(168349)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(168396)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(945)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168333)
lbl(168409)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(168426)	getRecord(record 3 y(3))
		unifyValue(y(4))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL9
		return
lbl(168438)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1065> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		genCall(gci(g(4) true makeEquation false 4) 0)
		getRecord(value 1 y(3))
		unifyVariable(x(0))
		move(y(4) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
lbl(168476)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(167877)
lbl(168489)	definition(x(8) 168536 pid('CodeGenConstruction,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 911 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1107> 9)
		endDefinition(168489)
lbl(168536)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenConstruction' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(168573)	definition(x(7) 169749 pid('CodeGenDefinition,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 961 6) nil 7) <Q: 1108> [g(14) g(30) g(31)])
		allocateL(20)
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' x(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariable(y(4))
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 168629)
lbl(168618)	getLiteral('' y(4))
		getNumber(1 y(5))
		getNumber(0 y(6))
		branch(168656)
lbl(168629)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(4))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(6))
lbl(168656)	createVariableMove(y(7) x(0))
		sendMsg(getOrigin y(3) 1 cache)
		createVariable(y(8))
		testLiteral(y(7) generated 168681)
lbl(168671)	inlineAt(printName x(0) cache)
		unify(x(0) y(8))
		branch(168690)
lbl(168681)	move(y(8) x(0))
		sendMsg(getPrintName y(3) 1 cache)
lbl(168690)	putRecord('pos' 3 x(0))
		setValue(y(4))
		setValue(y(5))
		setValue(y(6))
		putRecord('pid' 5 y(7))
		setValue(y(8))
		setVariable(x(1))
		setValue(x(0))
		setVariable(y(9))
		setVariable(y(10))
		inlineAt(formalArgs x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(procFlags x(1) cache)
		putConstant(native x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 168748 168753)
		getList(y(9))
		unifyLiteral(native)
		unifyLiteral(nil)
		branch(168764)
lbl(168748)	getLiteral(nil y(9))
		branch(168764)
lbl(168753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(973)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(168764)	getSelf(x(0))
		inlineDot(x(0) predicateRef x(0) cache)
		createVariable(y(4))
		testBI('IsDet' [x(0)]#[x(1)] 168791)
		getSelf(x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(4))
		branch(168794)
lbl(168791)	getLiteral(unit y(4))
lbl(168794)	inlineAt(isStateUsing x(0) cache)
		createVariable(y(5))
		testBool(x(0) 168851 168856)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 168829 168840)
		move(y(5) x(0))
		sendMsg(newSelfReg y(0) 1 cache)
		branch(168867)
lbl(168829)	move(y(5) x(0))
		sendMsg(newReg y(0) 1 cache)
		branch(168867)
lbl(168840)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(984)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(168851)	getLiteral(none y(5))
		branch(168867)
lbl(168856)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(983)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(168867)	inlineAt(toCopy x(0) cache)
		createVariable(y(6))
		createVariable(y(9))
		testLiteral(x(0) unit 169160)
lbl(168880)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(168891)	definition(x(1) 168927 pid('' 2 pos('./compiler/CodeGen.oz' 997 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(168891)
lbl(168927)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(11))
		testBool(x(1) 168997 169018)
		inlineAt(formalArgs x(4) cache)
		move(x(4) x(0))
		move(y(11) x(2))
		createVariableMove(y(12) x(1))
		createVariableMove(y(13) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(13) x(2))
		createVariableMove(y(14) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(12) x(0) y(14) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(169029)
lbl(168997)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(11) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(169029)
lbl(169018)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1001)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(169029)	inlineAt(allVariables x(0) cache)
		createVariable(y(12))
		testLiteral(x(0) nil 169045)
lbl(169040)	getLiteral(nil y(12))
		branch(169076)
lbl(169045)	inlineAt(allVariables x(0) cache)
lbl(169050)	definition(x(1) 169070 pid('' 2 pos('./compiler/CodeGen.oz' 1009 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(169050)
lbl(169070)	move(y(12) x(2))
		genFastCall(<P: 29> 6)
lbl(169076)	createVariable(y(13))
		createVariable(y(14))
		testLiteral(y(5) none 169092)
lbl(169084)	unify(y(13) y(11))
		unify(y(6) y(14))
		branch(169112)
lbl(169092)	getRecord(vSetSelf 3 y(13))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(11))
		getRecord(vGetSelf 3 y(6))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(14))
lbl(169112)	moveMoveYXYX(y(13) x(0) y(8) x(1))
		moveMoveYXYX(y(12) x(2) y(10) x(5))
		createVariableMove(y(5) x(3))
		createVariableMove(y(11) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(14))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(7))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValue(y(11))
		unifyValue(y(9))
		sendMsg(reg y(3) 1 cache)
		branch(169716)
lbl(169160)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(169171)	definition(x(1) 169207 pid('' 2 pos('./compiler/CodeGen.oz' 1030 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(169171)
lbl(169207)	createVariableMove(y(11) x(2))
		genFastCall(<P: 29> 6)
		sendMsg(startDefinition y(0) 0 cache)
		inlineAt(statements x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(12) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		inlineAt(allVariables x(0) cache)
		createVariable(y(13))
		testLiteral(x(0) nil 169252)
lbl(169247)	getLiteral(nil y(13))
		branch(169283)
lbl(169252)	inlineAt(allVariables x(0) cache)
lbl(169257)	definition(x(1) 169277 pid('' 2 pos('./compiler/CodeGen.oz' 1037 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(169257)
lbl(169277)	move(y(13) x(2))
		genFastCall(<P: 29> 6)
lbl(169283)	createVariable(y(14))
		createVariable(y(15))
		testLiteral(y(5) none 169299)
lbl(169291)	unify(y(15) y(12))
		unify(y(6) y(14))
		branch(169319)
lbl(169299)	getRecord(vSetSelf 3 y(15))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(12))
		getRecord(vGetSelf 3 y(6))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(14))
lbl(169319)	moveMoveYXYX(y(15) x(0) y(13) x(2))
		putConstant(nil x(1))
		createVariableMove(y(5) x(3))
		createVariableMove(y(12) x(4))
		createVariableMove(y(16) x(5))
		sendMsg('endDefinition' y(0) 6 cache)
		createVariableMove(y(15) x(0))
		sendMsg(newReg y(0) 1 cache)
		putRecord('#' 2 x(0))
		setValue(y(8))
		setConstant('/body')
		createVariableMove(y(8) x(1))
		genFastCall(<P: 195> 4)
		inlineAt(procFlags x(0) cache)
lbl(169370)	definition(x(1) 169396 pid('' 2 pos('./compiler/CodeGen.oz' 1052 7) nil 4) unit nil)
		testLiteral(x(0) once 169384)
		getLiteral(true x(1))
		return
lbl(169384)	putConstant(native x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(169370)
lbl(169396)	createVariableMove(y(17) x(2))
		genFastCall(<P: 39> 6)
		putRecord('pid' [1 2 4 5] x(0))
		setValue(y(8))
		setConstant(0)
		setValue(y(17))
		setValue(y(16))
		move(y(7) x(1))
		callBI('Adjoin' [x(1) x(0)]#[x(2)])
		inlineAt(toCopy x(0) cache)
		createVariable(y(8))
		createVariable(y(16))
		testLiteral(x(0) nil 169478)
lbl(169433)	move(x(2) y(17))
		createVariableMove(y(18) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValVar(y(18) x(0))
		getRecord(vDefinitionCopy 8 x(0))
		unifyVoid(1)
		unifyValue(y(18))
		unifyValue(y(15))
		unifyValue(y(17))
		unifyLiteral(unit)
		unifyValue(y(5))
		unifyValue(y(12))
		unifyValue(y(16))
		branch(169656)
lbl(169478)	createVariable(x(4))
lbl(169480)	definition(x(3) 169616 pid('MakeCopyList' 4 pos('./compiler/CodeGen.oz' 1062 8) nil 4) unit [x(4) y(0) g(1) g(2)])
		match(x(0) ht(169601 [onScalar(nil 169489) onRecord('|' 2 169499)]))
lbl(169489)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
lbl(169499)	allocateL7
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(0) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(6))
		move(y(0) x(0))
		testBI('IsForeignPointer' [x(0)]#[x(1)] 169543)
		getRecord(predicateRef 1 y(6))
		unifyValue(y(0))
		branch(169568)
lbl(169543)	testBI('IsName' [x(0)]#[x(1)] 169555)
		getRecord(literal 1 y(6))
		unifyValue(y(0))
		branch(169568)
lbl(169555)	putRecord(compiler 3 x(1))
		setConstant(internalTypeError)
		setValue(y(0))
		setConstant('ForeignPointerOrName')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(169568)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(169601)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1082)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(169480)
lbl(169616)	unify(x(3) x(4))
		putRecord(value 1 x(3))
		setVariable(y(17))
		moveMoveXYYX(x(2) y(18) y(8) x(1))
		createVariableMove(y(19) x(2))
		call(x(4) 4)
		getRecord(vDefinitionCopy 8 y(19))
		unifyVoid(1)
		unifyValue(y(17))
		unifyValue(y(15))
		unifyValue(y(18))
		unifyLiteral(unit)
		unifyValue(y(5))
		unifyValue(y(12))
		unifyValue(y(16))
lbl(169656)	getRecord(vCall 5 y(16))
		unifyVoid(1)
		unifyValue(y(15))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		moveMoveYXYX(y(8) x(0) y(11) x(1))
		moveMoveYXYX(y(13) x(2) y(10) x(5))
		createVariableMove(y(5) x(3))
		createVariableMove(y(12) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(14))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(7))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValue(y(12))
		unifyValue(y(9))
		sendMsg(reg y(3) 1 cache)
lbl(169716)	inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(6) x(4) y(9) x(5))
		putConstant('definition' x(1))
		genFastCall(<Q: 1051> 12)
		putConstant(unit x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL
		return
		endDefinition(168573)
lbl(169749)	definition(x(8) 169790 pid('CodeGenDefinition,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 961 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1108> 7)
		endDefinition(169749)
lbl(169790)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFunctionDefinition' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(169851)	definition(x(7) 169863 pid('CodeGenClauseBody,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1105 6) nil 3) <Q: 1109> nil)
		unify(x(1) x(2))
		return
		endDefinition(169851)
lbl(169863)	definition(x(8) 169904 pid('CodeGenClauseBody,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1105 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1109> 7)
		endDefinition(169863)
lbl(169904)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBody' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(169941)	definition(x(7) 170068 pid('CodeGenApplication,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1113 6) nil 9) <Q: 1110> [g(11)])
		getSelf(x(3))
		inlineDot(x(3) codeGenMakeEquateLiteral x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 170030)
		allocateL6
		putRecord(vEquateLiteral 4 y(0))
		setVoid(1)
		setVariable(x(3))
		setVariable(y(1))
		setVariable(y(2))
		getSelf(x(4))
		inlineDot(x(4) codeGenMakeEquateLiteral x(0) cache)
		unify(x(0) x(3))
		inlineAt(actualArgs x(0) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 79> 4)
		move(y(1) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(0) x(4) y(2) x(5))
		putConstant('name generation' x(1))
		deAllocateL6
		genFastCall(<Q: 1051> 13)
lbl(170030)	inlineAt(designator x(6) cache)
		inlineAt(coord x(7) cache)
		inlineAt(actualArgs x(8) cache)
		move(x(0) x(3))
		move(x(6) x(0))
		move(x(1) x(4))
		move(x(7) x(1))
		move(x(2) x(5))
		move(x(8) x(2))
		genFastCall(<Q: 1069> 13)
		endDefinition(169941)
lbl(170068)	definition(x(8) 170109 pid('CodeGenApplication,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1113 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1110> 7)
		endDefinition(170068)
lbl(170109)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenApplication' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170146)	definition(x(7) 170385 pid('CodeGenBoolCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1127 6) nil 7) <Q: 1111> nil)
		allocateL6
		getSelf(x(3))
		inlineDot(x(3) noBoolShared x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsFree' [x(3)]#[x(4)] 170227)
		getRecord(vShared 4 y(3))
		unifyVoid(1)
		unifyVariable(x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		move(x(4) x(0))
		sendMsg(newLabel y(0) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(4))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(0) x(3) y(5) x(4))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		genFastCall(<Q: 1071> 12)
lbl(170227)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 170272)
lbl(170248)	testLiteral(y(4) true 170272)
lbl(170252)	inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGen x(3) 3 cache)
lbl(170272)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 170303)
lbl(170279)	testLiteral(y(4) false 170303)
lbl(170283)	inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGenNoShared x(3) 3 cache)
lbl(170303)	inlineAt(consequent x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		sendMsg(codeGen x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenShared x(3) 3 cache)
		getRecord(vTestBool 8 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValVar(y(3) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(arbiter x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL6
		return
		endDefinition(170146)
lbl(170385)	definition(x(8) 170426 pid('CodeGenBoolCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1127 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1111> 7)
		endDefinition(170385)
lbl(170426)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolCase' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170463)	definition(x(7) 170491 pid('CodeGenBoolClause,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1150 6) nil 5) <Q: 1112> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1049> 9)
		endDefinition(170463)
lbl(170491)	definition(x(8) 170532 pid('CodeGenBoolClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1150 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1112> 7)
		endDefinition(170491)
lbl(170532)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170569)	definition(x(7) 170938 pid('CodeGenPatternCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1156 6) nil 6) <Q: 1113> [y(2)])
		allocateL5
		inlineAt(clauses x(3) cache)
lbl(170581)	definition(x(4) 170601 pid('' 2 pos('./compiler/CodeGen.oz' 1157 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(isSwitchable x(2) 1 cache)
		endDefinition(170581)
lbl(170601)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 170723 170925)
		inlineAt(arbiter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(3) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(4)])
		moveMoveXYYX(x(4) y(4) y(3) x(1))
		move(y(0) x(4))
		sendMsg(init y(4) 5 cache)
		inlineAt(clauses x(0) cache)
lbl(170679)	definition(x(1) 170705 pid('' 1 pos('./compiler/CodeGen.oz' 1164 6) nil 4) unit [y(3) y(0) y(4)])
		move(x(0) x(3))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(2))
		tailSendMsg(makeSwitchable x(3) 3 cache)
		endDefinition(170679)
lbl(170705)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(codeGen x(2) 2 cache)
lbl(170723)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 170790 170779)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		inlineAt(coord x(4) cache)
		move(x(4) x(0))
		putConstant('optimization warning' x(1))
		putConstant('translating `case\' as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(170790)
lbl(170779)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1167)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(170790)	createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(3))
lbl(170806)	definition(x(1) 170867 pid('' 2 pos('./compiler/CodeGen.oz' 1174 3) nil 4) unit [x(3) y(0) y(3)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPatternGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(2) x(1))
		sendMsg(enterVs g(1) 2 cache)
		inlineAt(arbiter x(1) cache)
		move(g(1) x(0))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(makeCondClause x(3) 3 cache)
		endDefinition(170806)
lbl(170867)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(4) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterNoShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(4))
		unifyValVar(y(2) x(0))
		unifyLiteral(nil)
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL5
		return
lbl(170925)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1157)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(170569)
lbl(170938)	definition(x(8) 170979 pid('CodeGenPatternCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1156 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1113> 7)
		endDefinition(170938)
lbl(170979)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternCase' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171016)	definition(x(7) 171035 pid('CodeGenPatternClause,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1187 6) nil 2) <Q: 1114> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(171016)
lbl(171035)	definition(x(8) 171061 pid('CodeGenPatternClause,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1187 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1114> 3)
		endDefinition(171035)
lbl(171061)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(171071)	definition(x(7) 171177 pid('CodeGenPatternClause,makeSwitchable/fast' 3 pos('./compiler/CodeGen.oz' 1190 6) nil 8) <Q: 1115> nil)
		allocateL3
		inlineAt(pattern x(5) cache)
		inlineAt(localVars x(6) cache)
		inlineAt(statements x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(2) x(4))
		sendMsg(makeSwitchable x(5) 5 cache)
		inlineAt(localVars x(0) cache)
lbl(171121)	definition(x(1) 171163 pid('' 1 pos('./compiler/CodeGen.oz' 1194 3) nil 3) unit [y(0)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(reg y(0) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 171149)
		deAllocateL2
		return
lbl(171149)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(newVariableReg g(0) 2 cache)
		endDefinition(171121)
lbl(171163)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(1) y(2) x(0))
		deAllocateL3
		tailCall(x(1) 1)
		endDefinition(171071)
lbl(171177)	definition(x(8) 171218 pid('CodeGenPatternClause,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1190 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1115> 7)
		endDefinition(171177)
lbl(171218)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(171228)	definition(x(7) 171486 pid('CodeGenPatternClause,makeCondClause/fast' 3 pos('./compiler/CodeGen.oz' 1201 6) nil 5) <Q: 1116> nil)
		allocateL7
		inlineAt(localVars x(3) cache)
lbl(171240)	definition(x(4) 171260 pid('' 1 pos('./compiler/CodeGen.oz' 1204 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(171240)
lbl(171260)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1072> 4)
		createVariable(y(5))
		createVariable(y(6))
		testBool(y(1) 171349 171357)
		inlineAt(pattern x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		getLiteral(nil y(4))
		getRecord(vThread 5 y(5))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(6))
		unifyVoid(1)
		branch(171368)
lbl(171349)	unify(y(4) y(6))
		unify(y(5) y(3))
		branch(171368)
lbl(171357)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1206)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(171368)	getRecord(vAsk 2 y(6))
		unifyVoid(1)
		unifyLiteral(nil)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(1))
		testBool(x(1) 171440 171461)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(171472)
lbl(171440)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(171472)
lbl(171461)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1215)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(171472)	getRecord('#' 3 y(2))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(1))
		deAllocateL7
		return
		endDefinition(171228)
lbl(171486)	definition(x(8) 171527 pid('CodeGenPatternClause,makeCondClause/slow' 1 pos('./compiler/CodeGen.oz' 1201 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1116> 7)
		endDefinition(171486)
lbl(171527)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeCondClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternClause' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(4))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(171580)	definition(x(7) 171600 pid('CodeGenRecordPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1228 6) nil 3) <Q: 1117> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(171580)
lbl(171600)	definition(x(8) 171626 pid('CodeGenRecordPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1228 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1117> 3)
		endDefinition(171600)
lbl(171626)	putRecord('#' [1 2 fast] x(9))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(171636)	definition(x(7) 171742 pid('CodeGenRecordPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1231 6) nil 3) <Q: 1118> nil)
		inlineAt(isOpen x(1) cache)
		testBI('Not' [x(1)]#[x(2)] 171736)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 171731)
		inlineAt(args x(0) cache)
lbl(171681)	definition(x(1) 171724 pid('' 2 pos('./compiler/CodeGen.oz' 1235 4) nil 3) unit nil)
		testRecord(x(0) '#' 2 171718)
lbl(171692)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(171718)	getLiteral(true x(1))
		return
		endDefinition(171681)
lbl(171724)	move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 35> 7)
lbl(171731)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(171736)	getLiteral(false x(0))
		return
		endDefinition(171636)
lbl(171742)	definition(x(8) 171768 pid('CodeGenRecordPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1231 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1118> 3)
		endDefinition(171742)
lbl(171768)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(171778)	definition(x(7) 172090 pid('CodeGenRecordPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1241 6) nil 6) <Q: 1119> [g(24) g(27) g(32) g(33)])
		allocateL8
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(5) 1 cache)
		inlineAt(args x(0) cache)
lbl(171814)	definition(x(1) 171853 pid('' 3 pos('./compiler/CodeGen.oz' 1244 7) nil 4) unit nil)
		testRecord(x(1) '#' 2 171842)
lbl(171825)	getVarVar(x(1) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(171842)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(171814)
lbl(171853)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		createVariable(y(6))
		exHandler(172000)
		move(x(0) y(7))
		createCond(171994)
lbl(171868)	lastClause
		clause
		thread(171886)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(171886)	ask
lbl(171887)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(171925)	definition(x(0) 171962 pid('' 3 pos('./compiler/CodeGen.oz' 1255 27) nil 5) unit nil)
		shallowGuard(171949)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(171941)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(171949)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1255)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(171925)
lbl(171962)	moveMoveXYYX(x(0) y(2) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(7) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(172012)
lbl(171994)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(172000)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(172012)	move(y(6) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 172031)
		getRecord(addScalar 3 y(3))
		unifyValue(y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL8
		return
lbl(172031)	getRecord(addRecord 2 y(3))
		unifyVariable(x(2))
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyValVar(y(0) y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
lbl(172050)	definition(x(1) 172062 pid('' 2 pos('./compiler/CodeGen.oz' 1261 31) nil 2) unit nil)
		getLiteral('' x(1))
		return
		endDefinition(172050)
lbl(172062)	genFastCall(<P: 161> 6)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		genFastCall(<P: 159> 4)
		inlineAt(label x(1) cache)
		move(y(3) x(0))
		deAllocateL8
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(171778)
lbl(172090)	definition(x(8) 172143 pid('CodeGenRecordPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1241 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1119> 11)
		endDefinition(172090)
lbl(172143)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(4))
lbl(172155)	definition(x(7) 172240 pid('CodeGenRecordPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1265 6) nil 7) <Q: 1120> [y(1) y(4)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		genCall(gci(g(1) true makeEquation false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		deAllocateL8
		genCall(gci(g(1) true addPatternVs true 2) 0)
		endDefinition(172155)
lbl(172240)	definition(x(8) 172305 pid('CodeGenRecordPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1265 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1120> 15)
		endDefinition(172240)
lbl(172305)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(172315)	definition(x(7) 172381 pid('CodeGenRecordPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1272 6) nil 6) <Q: 1121> nil)
		inlineAt(args x(4) cache)
lbl(172326)	definition(x(5) 172364 pid('' 3 pos('./compiler/CodeGen.oz' 1274 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 172350)
lbl(172337)	getVoid(1)
		getVariable(x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
lbl(172350)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
		endDefinition(172326)
lbl(172364)	move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(172315)
lbl(172381)	definition(x(8) 172416 pid('CodeGenRecordPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1272 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1121> 5)
		endDefinition(172381)
lbl(172416)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(172426)	definition(x(7) 172454 pid('CodeGenRecordPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1280 6) nil 3) <Q: 1122> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(172426)
lbl(172454)	definition(x(8) 172480 pid('CodeGenRecordPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1122> 3)
		endDefinition(172454)
lbl(172480)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(172490)	definition(x(7) 172627 pid('CodeGenRecordPattern,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 1283 6) nil 6) <Q: 1123> [y(1)])
		inlineAt(args x(4) cache)
lbl(172501)	definition(x(5) 172610 pid('' 3 pos('./compiler/CodeGen.oz' 1285 3) nil 5) unit [g(0) x(0)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(1) '#' 2 172529)
lbl(172520)	getVoid(1)
		getVariable(x(1))
		unify(y(2) x(1))
		branch(172532)
lbl(172529)	unify(y(2) x(1))
lbl(172532)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 172592 172597)
		createVariableMove(y(3) x(0))
		sendMsg(reg y(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		move(g(1) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		move(y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(172592)	unify(y(0) y(1))
		deAllocateL5
		return
lbl(172597)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1287)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(172501)
lbl(172610)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(172490)
lbl(172627)	definition(x(8) 172668 pid('CodeGenRecordPattern,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 1283 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1123> 7)
		endDefinition(172627)
lbl(172668)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(172678)	definition(x(7) 172720 pid('CodeGenRecordPattern,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1295 6) nil 4) <Q: 1124> [y(1)])
		allocateL2
		unify(x(1) x(2))
		getSelf(x(1))
		inlineDot(x(1) reg x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(3) y(0) x(2) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(172678)
lbl(172720)	definition(x(8) 172767 pid('CodeGenRecordPattern,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1295 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1124> 9)
		endDefinition(172720)
lbl(172767)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(172777)	definition(x(7) 172806 pid('CodeGenRecordPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1299 6) nil 4) <Q: 1125> nil)
		unify(x(1) x(2))
		getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(172777)
lbl(172806)	definition(x(8) 172853 pid('CodeGenRecordPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1299 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1125> 9)
		endDefinition(172806)
lbl(172853)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(y(4) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenRecordPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(172900)	definition(x(7) 172919 pid('CodeGenEquationPattern,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1306 6) nil 2) <Q: 1126> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(172900)
lbl(172919)	definition(x(8) 172945 pid('CodeGenEquationPattern,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1306 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1126> 3)
		endDefinition(172919)
lbl(172945)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(172955)	definition(x(7) 172974 pid('CodeGenEquationPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1309 6) nil 2) <Q: 1127> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172955)
lbl(172974)	definition(x(8) 173000 pid('CodeGenEquationPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1127> 3)
		endDefinition(172974)
lbl(173000)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(173010)	definition(x(7) 173029 pid('CodeGenEquationPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1312 6) nil 2) <Q: 1128> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(173010)
lbl(173029)	definition(x(8) 173055 pid('CodeGenEquationPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1312 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1128> 3)
		endDefinition(173029)
lbl(173055)	putRecord('#' [1 2 fast] x(11))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(173065)	definition(x(7) 173135 pid('CodeGenEquationPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1315 6) nil 6) <Q: 1129> nil)
		allocateL6
		inlineAt(left x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg('getVariable' x(5) 1 cache)
		move(y(0) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(right x(5) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		tailSendMsg(makeSwitchable x(5) 5 cache)
		endDefinition(173065)
lbl(173135)	definition(x(8) 173188 pid('CodeGenEquationPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1315 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1129> 11)
		endDefinition(173135)
lbl(173188)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(173198)	definition(x(7) 173368 pid('CodeGenEquationPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1319 6) nil 8) <Q: 1130> [y(1)])
		allocateL9
		inlineAt(left x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' x(7) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(reg x(1) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 173294 173316)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(173327)
lbl(173294)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(7))
		setValue(y(1))
		move(y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(173327)
lbl(173316)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1325)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(173327)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(8) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		deAllocateL9
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(173198)
lbl(173368)	definition(x(8) 173433 pid('CodeGenEquationPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1319 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1130> 15)
		endDefinition(173368)
lbl(173433)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(173443)	definition(x(7) 173535 pid('CodeGenEquationPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1333 6) nil 3) <Q: 1131> nil)
		allocateL4
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 173501 173522)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(173501)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(2))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(173522)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1335)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173443)
lbl(173535)	definition(x(8) 173570 pid('CodeGenEquationPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1333 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1131> 5)
		endDefinition(173535)
lbl(173570)	putRecord('#' [1 2 fast] x(14))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(173580)	definition(x(7) 173658 pid('CodeGenEquationPattern,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1341 6) nil 5) <Q: 1132> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg y(1) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1052> 8)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(3) x(3))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(173580)
lbl(173658)	definition(x(8) 173705 pid('CodeGenEquationPattern,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1341 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1132> 9)
		endDefinition(173658)
lbl(173705)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(173715)	definition(x(7) 173765 pid('CodeGenEquationPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1345 6) nil 2) <Q: 1133> nil)
		allocateL2
		inlineAt(right x(1) cache)
		inlineDot(x(1) reg x(0) cache)
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(173715)
lbl(173765)	definition(x(8) 173791 pid('CodeGenEquationPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1345 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1133> 3)
		endDefinition(173765)
lbl(173791)	putRecord('#' [1 2 fast] x(16))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(173801)	definition(x(7) 173820 pid('CodeGenEquationPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1348 6) nil 5) <Q: 1134> nil)
		inlineAt(left x(4) cache)
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(173801)
lbl(173820)	definition(x(8) 173867 pid('CodeGenEquationPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1348 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1134> 9)
		endDefinition(173820)
lbl(173867)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquationPattern' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [shared] x(3))
		setConstant(<U: ooFreeFlag>)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenAbstractElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [localVars] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(173953)	definition(x(7) 173972 pid('CodeGenElseNode,codeGenInit/fast' 2 pos('./compiler/CodeGen.oz' 1358 6) nil 2) <Q: 1135> nil)
		inlineAssign(localVars x(0) cache)
		inlineAssign(statements x(1) cache)
		return
		endDefinition(173953)
lbl(173972)	definition(x(8) 174007 pid('CodeGenElseNode,codeGenInit/slow' 1 pos('./compiler/CodeGen.oz' 1358 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1135> 5)
		endDefinition(173972)
lbl(174007)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenInit)
		setValue(x(8))
		setValue(x(7))
lbl(174017)	definition(x(7) 174176 pid('CodeGenElseNode,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1362 6) nil 5) <Q: 1136> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 174173)
		allocateL4
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(0))
		callBI('NewCell' [x(0)]#[x(1)])
		unify(x(1) y(0))
		move(y(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 174145 174162)
lbl(174088)	inlineAt(localVars x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 174145)
lbl(174097)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(0) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<Q: 1054> 7)
lbl(174145)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<Q: 1049> 9)
lbl(174162)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174173)	return
		endDefinition(174017)
lbl(174176)	definition(x(8) 174217 pid('CodeGenElseNode,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1362 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1136> 7)
		endDefinition(174176)
lbl(174217)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(24))
lbl(174229)	definition(x(7) 174246 pid('CodeGenElseNode,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1380 6) nil 4) <Q: 1137> [y(24)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenShared true 3) 0)
		endDefinition(174229)
lbl(174246)	definition(x(8) 174293 pid('CodeGenElseNode,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1380 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1137> 9)
		endDefinition(174246)
lbl(174293)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(174303)	definition(x(7) 174415 pid('CodeGenElseNode,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1383 6) nil 5) <Q: 1138> nil)
		allocateL5
		inlineDot(x(0) debugInfoVarnamesSwitch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBool(x(3) 174385 174402)
lbl(174328)	inlineAt(localVars x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 174385)
lbl(174337)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1054> 7)
lbl(174385)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1049> 9)
lbl(174402)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1384)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(174303)
lbl(174415)	definition(x(8) 174456 pid('CodeGenElseNode,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1383 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1138> 7)
		endDefinition(174415)
lbl(174456)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(174466)	definition(x(7) 174483 pid('CodeGenElseNode,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1393 6) nil 4) <Q: 1139> [y(24)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenNoShared true 3) 0)
		endDefinition(174466)
lbl(174483)	definition(x(8) 174530 pid('CodeGenElseNode,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1393 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1139> 9)
		endDefinition(174483)
lbl(174530)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(24) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenElseNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(174572)	definition(x(7) 174656 pid('CodeGenNoElse,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1398 6) nil 7) <Q: 1140> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 174653)
		allocateL3
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		deAllocateL3
		genFastCall(<Q: 1071> 13)
lbl(174653)	return
		endDefinition(174572)
lbl(174656)	definition(x(8) 174697 pid('CodeGenNoElse,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1398 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1140> 7)
		endDefinition(174656)
lbl(174697)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
lbl(174707)	definition(x(7) 174796 pid('CodeGenNoElse,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1408 6) nil 7) <Q: 1141> nil)
		getSelf(x(4))
		inlineDot(x(4) shared x(5) cache)
		unify(x(5) x(2))
		getLiteral(nil x(3))
		testBI('IsFree' [x(2)]#[x(3)] 174793)
		allocateL4
		getRecord(vShared 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(2) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(5))
		deAllocateL4
		genFastCall(<Q: 1071> 13)
lbl(174793)	return
		endDefinition(174707)
lbl(174796)	definition(x(8) 174843 pid('CodeGenNoElse,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1408 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1141> 9)
		endDefinition(174796)
lbl(174843)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(174853)	definition(x(7) 174887 pid('CodeGenNoElse,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1418 6) nil 7) <Q: 1142> nil)
		inlineAt(coord x(6) cache)
		move(x(0) x(3))
		move(x(1) x(4))
		move(x(6) x(1))
		move(x(2) x(5))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		genFastCall(<Q: 1071> 13)
		endDefinition(174853)
lbl(174887)	definition(x(8) 174928 pid('CodeGenNoElse,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1418 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1142> 7)
		endDefinition(174887)
lbl(174928)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(174938)	definition(x(7) 174978 pid('CodeGenNoElse,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1421 6) nil 8) <Q: 1143> nil)
		inlineAt(coord x(6) cache)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		move(x(3) x(5))
		move(x(0) x(3))
		move(x(6) x(1))
		move(x(2) x(4))
		move(x(7) x(2))
		putConstant(noElse x(0))
		genFastCall(<Q: 1071> 13)
		endDefinition(174938)
lbl(174978)	definition(x(8) 175025 pid('CodeGenNoElse,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1421 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1143> 9)
		endDefinition(174978)
lbl(175025)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNoElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175068)	definition(x(7) 175125 pid('CodeGenThreadNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1427 6) nil 5) <Q: 1144> nil)
		allocateL3
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		getRecord(vThread 5 y(0))
		unifyVoid(1)
		unifyValVar(y(2) x(0))
		unifyValue(y(1))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
		endDefinition(175068)
lbl(175125)	definition(x(8) 175166 pid('CodeGenThreadNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1427 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1144> 7)
		endDefinition(175125)
lbl(175166)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenThreadNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175203)	definition(x(7) 175405 pid('CodeGenTryNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1434 6) nil 6) <Q: 1145> nil)
		allocateL8
		inlineAt(tryStatements x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(vPopEx 3 x(3))
		setVoid(1)
		setValue(x(5))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1049> 8)
		inlineAt(exception x(1) cache)
		move(y(0) x(0))
		sendMsg(setReg x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(4))
		testBool(x(1) 175334 175355)
		inlineAt(exception x(4) cache)
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(5) x(0))
		move(y(4) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(175366)
lbl(175334)	inlineAt(catchStatements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(175366)
lbl(175355)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1437)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(175366)	getRecord(vExHandler 7 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(0))
		unifyValVar(y(4) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(exception x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL8
		return
		endDefinition(175203)
lbl(175405)	definition(x(8) 175446 pid('CodeGenTryNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1434 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1145> 7)
		endDefinition(175405)
lbl(175446)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTryNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175483)	definition(x(7) 175564 pid('CodeGenLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1450 6) nil 5) <Q: 1146> nil)
		allocateL5
		getRecord(vLockThread 5 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(x(1) x(0))
		sendMsg(reg x(3) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1049> 9)
		endDefinition(175483)
lbl(175564)	definition(x(8) 175605 pid('CodeGenLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1450 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1146> 7)
		endDefinition(175564)
lbl(175605)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenLockNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175642)	definition(x(7) 176149 pid('CodeGenClassNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1457 6) nil 8) <Q: 1147> [y(1)])
		allocateL(14)
		inlineAt(parents x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1081> 10)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1081> 10)
		inlineAt(attributes x(1) cache)
		moveMoveYXYX(y(0) x(2) y(6) x(3))
		putConstant('attr' x(0))
		createVariableMove(y(4) x(4))
		createVariableMove(y(8) x(5))
		genFastCall(<Q: 1083> 12)
		inlineAt(features x(1) cache)
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		putConstant('feat' x(0))
		createVariableMove(y(6) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1083> 12)
		inlineAt(printName x(0) cache)
		createVariable(y(4))
		testLiteral(x(0) '' 175780)
lbl(175755)	inlineAt(designator x(1) cache)
		createVariableMove(y(10) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getPrintName y(10) 1 cache)
		branch(175788)
lbl(175780)	inlineAt(printName x(0) cache)
		unify(x(0) y(4))
lbl(175788)	move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1065> 4)
		inlineAt(methods x(0) cache)
		createVariable(y(11))
		match(x(0) ht(175992 [onScalar(nil 175807) onRecord('|' 2 175827)]))
lbl(175807)	getRecord(vEquateLiteral 4 y(6))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValue(y(11))
		sendMsg(reg y(10) 1 cache)
		branch(176005)
lbl(175827)	getSelf(x(4))
		createVariable(x(5))
lbl(175831)	definition(x(0) 175937 pid('MakeMethods' 4 pos('./compiler/CodeGen.oz' 1474 5) nil 7) unit [x(4) y(0) y(4) x(5)])
		move(g(0) x(4))
		setSelf(x(4))
		match(x(0) ht(175922 [onScalar(nil 175845) onRecord('|' 2 175852)]))
lbl(175845)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(175852)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		inlineAt(isToplevel x(3) cache)
		move(g(2) x(0))
		move(g(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg(makeQuadruple y(0) 6 cache)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(value 1 x(0))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailCall(g(3) 4)
lbl(175922)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1482)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(175831)
lbl(175937)	unify(x(0) x(5))
		inlineAt(methods x(0) cache)
		move(y(6) x(1))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(12))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(1))
		unifyVariable(y(6))
		unifyValue(y(13))
		unifyValue(y(11))
		inlineAt(methods x(0) cache)
		genFastCall(<P: 24> 4)
		move(y(6) x(0))
		sendMsg(reg y(10) 1 cache)
		branch(176005)
lbl(175992)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1491)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(176005)	putConstant(unit x(1))
		inlineAssign(methods x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(11))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(6) y(11))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(6) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1050> 4)
		inlineAt(designator x(6) cache)
		putList(x(7))
		setValue(x(6))
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(3))
		setValue(y(9))
		setValue(x(4))
		putList(x(1))
		setValue(y(8))
		setValue(x(3))
		putList(x(0))
		setValue(y(10))
		setValue(x(1))
		putList(x(2))
		setValue(y(5))
		setValue(x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(11) x(4))
		putConstant('class' x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1070> 12)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		putConstant('definition' x(1))
		deAllocateL
		genFastCall(<Q: 1051> 13)
		endDefinition(175642)
lbl(176149)	definition(x(8) 176190 pid('CodeGenClassNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1457 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1147> 7)
		endDefinition(176149)
lbl(176190)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClassNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: MessagePatternVO> hasDefaults] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(30))
lbl(176237)	definition(x(7) 177704 pid('CodeGenMethod,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1506 6) nil 12) <Q: 1148> [g(27) g(33) g(34) g(35) y(30) y(1) y(6)])
		allocateL(19)
		inlineAt(formalArgs x(6) cache)
lbl(176250)	definition(x(7) 176292 pid('' 2 pos('./compiler/CodeGen.oz' 1514 3) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(0) x(1))
		createVariableMove(y(1) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(176250)
lbl(176292)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(7))
		exHandler(176404)
		move(x(0) y(6))
		createCond(176398)
lbl(176328)	lastClause
		clause
		thread(176346)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL
		return
lbl(176346)	ask
lbl(176347)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(formalArgs x(0) cache)
		move(y(7) x(1))
		genFastCall(<P: 24> 4)
		branch(176452)
lbl(176398)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(176404)	putConstant(someLabel x(0))
		move(y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBI('IsTuple' [x(2)]#[x(0)] 176428)
		callBI('Width' [x(2)]#[x(0)])
		unify(x(0) y(7))
		branch(176434)
lbl(176428)	callBI('Arity' [x(2)]#[x(0)])
		unify(x(0) y(7))
lbl(176434)	move(y(6) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 159> 4)
		move(y(8) x(0))
		inlineAssign(formalArgs x(0) cache)
		popEx
lbl(176452)	getSelf(x(3))
		inlineDot(x(3) hasDefaults x(2) cache)
		inlineAt(formalArgs x(0) cache)
lbl(176465)	definition(x(1) 176485 pid('' 2 pos('./compiler/CodeGen.oz' 1531 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(176465)
lbl(176485)	genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(6))
		createVariable(y(8))
		createVariable(y(9))
		testLiteral(x(0) unit 176514)
lbl(176503)	getLiteral('' y(6))
		getNumber(1 y(8))
		getNumber(0 y(9))
		branch(176541)
lbl(176514)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(8))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(9))
lbl(176541)	putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setValue(y(7))
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(7))
		setConstant('/fast')
		createVariableMove(y(7) x(1))
		genFastCall(<P: 194> 4)
		move(y(7) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		sendMsg(startDefinition y(1) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(176617)	definition(x(1) 176663 pid('' 2 pos('./compiler/CodeGen.oz' 1545 5) nil 3) unit [y(1)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(g(0) x(0))
		sendMsg(setFreshReg y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(176617)
lbl(176663)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 176685)
lbl(176680)	getLiteral(nil y(11))
		branch(176716)
lbl(176685)	inlineAt(allVariables x(0) cache)
lbl(176690)	definition(x(1) 176710 pid('' 2 pos('./compiler/CodeGen.oz' 1550 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(176690)
lbl(176710)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(176716)	move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(13))
		testBool(x(1) 176854 176875)
		createVariableMove(y(14) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(14))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(14) y(15))
		inlineAt(formalArgs x(0) cache)
lbl(176770)	definition(x(1) 176790 pid('' 2 pos('./compiler/CodeGen.oz' 1558 30) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(176770)
lbl(176790)	createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(16) x(0) y(15) x(2))
		createVariableMove(y(17) x(1))
		createVariableMove(y(18) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(18) x(2))
		createVariableMove(y(15) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(17) x(0) y(15) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<Q: 1054> 6)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
		move(y(16) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(176886)
lbl(176854)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(13) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1049> 8)
		branch(176886)
lbl(176875)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1552)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(176886)	putConstant(unit x(6))
		inlineAssign(statements x(6) cache)
		moveMoveYXYX(y(13) x(0) y(7) x(1))
		moveMoveYXYX(y(11) x(2) y(12) x(5))
		createVariableMove(y(14) x(3))
		createVariableMove(y(15) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(4))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValVar(y(10) x(1))
		unifyValue(y(14))
		unifyValVar(y(15) y(4))
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(1))
		putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(6))
		setConstant('/slow')
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		createVariableMove(y(0) x(2))
		genCall(gci(g(4) true makeArityCheckInit false 3) 0)
		sendMsg(startDefinition y(1) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1065> 4)
		putList(y(6))
		setVariable(x(4))
		setConstant(nil)
		move(y(4) x(0))
		inlineDot(x(0) reg x(1) cache)
		unify(x(1) x(4))
		move(y(1) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(4) true makeArityCheck false 4) 0)
		inlineAt(formalArgs x(0) cache)
lbl(177075)	definition(x(1) 177104 pid('' 3 pos('./compiler/CodeGen.oz' 1590 6) nil 5) unit [y(4) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(177075)
lbl(177104)	move(y(9) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 177186 177301)
		getRecord(vFastCall 5 y(4))
		unifyVoid(1)
		unifyVariable(x(3))
		unifyVariable(x(2))
		unifyLiteral(unit)
		unifyLiteral(nil)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(177144)	definition(x(1) 177181 pid('' 2 pos('./compiler/CodeGen.oz' 1596 6) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(177144)
lbl(177181)	genFastCall(<P: 29> 6)
		branch(177312)
lbl(177186)	move(g(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1050> 4)
		inlineAt(formalArgs x(0) cache)
lbl(177219)	definition(x(1) 177274 pid('' 2 pos('./compiler/CodeGen.oz' 1604 3) nil 3) unit [g(5)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(177219)
lbl(177274)	createVariableMove(y(11) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(9) x(1))
		moveMoveYXYX(y(11) x(2) y(1) x(3))
		move(y(4) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1069> 12)
		branch(177312)
lbl(177301)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1593)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177312)	moveMoveYXYX(y(8) x(0) y(6) x(1))
		move(y(12) x(5))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyValVar(y(4) y(0))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 177604 177691)
		inlineAt(formalArgs x(0) cache)
lbl(177378)	definition(x(1) 177420 pid('' 2 pos('./compiler/CodeGen.oz' 1616 6) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(0))
		move(x(0) y(1))
		move(x(1) x(0))
		sendMsg(getFeature y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getDefault x(1) 1 cache)
		endDefinition(177378)
lbl(177420)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(6) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		inlineAt(label x(4) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(4))
		move(x(4) x(0))
		move(y(3) x(1))
		putConstant(false x(2))
		sendMsg(init y(4) 3 cache)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1065> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		createVariableMove(y(8) x(3))
		sendMsg(makeEquation y(4) 4 cache)
		getRecord(vEquateRecord 6 y(8))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(default)
		unifyVariable(x(4))
		getList(x(4))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(value 1 x(7))
		unifyValue(y(6))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(value 1 x(9))
		unifyVariable(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(value 1 x(11))
		unifyValue(y(7))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		move(x(5) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		sendMsg(makeRecordArgument x(4) 4 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(reg x(1) 1 cache)
lbl(177604)	getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(value 1 x(6))
		unifyValue(y(6))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(value 1 x(8))
		unifyValue(y(7))
		inlineAt(label x(5) cache)
		move(y(1) x(0))
		move(x(4) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(5) 4 cache)
lbl(177691)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1614)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(176237)
lbl(177704)	definition(x(8) 177763 pid('CodeGenMethod,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1506 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1148> 13)
		endDefinition(177704)
lbl(177763)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
lbl(177773)	definition(x(7) 178017 pid('CodeGenMethod,makeArityCheck/fast' 4 pos('./compiler/CodeGen.oz' 1632 6) nil 7) <Q: 1149> [y(1)])
		getSelf(x(4))
		inlineDot(x(4) hasDefaults x(4) cache)
		testBool(x(4) 177853 178004)
		allocateL5
		inlineAt(coord x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1050> 4)
		getSelf(x(6))
		inlineDot(x(6) <M: MessagePatternVO> x(6) cache)
		putList(x(0))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(aritySublist x(0))
		deAllocateL5
		genFastCall(<Q: 1070> 13)
lbl(177853)	allocateL7
		inlineAt(formalArgs x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		testNumber(y(4) 0 177927)
lbl(177896)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 177927)
lbl(177903)	getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValVar(y(5) x(1))
		unifyValue(y(3))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(reg x(1) 1 cache)
lbl(177927)	createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(5) y(2))
		inlineAt(coord x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(0))
		setValue(y(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(width x(0))
		deAllocateL7
		genFastCall(<Q: 1070> 13)
lbl(178004)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1633)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(177773)
lbl(178017)	definition(x(8) 178064 pid('CodeGenMethod,makeArityCheck/slow' 1 pos('./compiler/CodeGen.oz' 1632 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1149> 9)
		endDefinition(178017)
lbl(178064)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeArityCheck)
		setValue(x(8))
		setValue(x(7))
lbl(178074)	definition(x(7) 178336 pid('CodeGenMethod,makeArityCheckInit/fast' 3 pos('./compiler/CodeGen.oz' 1650 6) nil 5) <Q: 1150> [y(1) y(6)])
		allocateL7
		getSelf(x(3))
		inlineDot(x(3) <M: MessagePatternVO> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		unify(y(5) y(3))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 178318 178323)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		putConstant(messagePattern x(3))
		move(y(4) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(3))
		move(g(1) x(1))
		inlineDot(x(1) construction x(2) cache)
		inlineAt(formalArgs x(3) cache)
lbl(178195)	definition(x(4) 178254 pid('' 2 pos('./compiler/CodeGen.oz' 1660 7) nil 3) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1065> 4)
		putConstant(unit x(1))
		move(y(2) x(0))
		inlineDot(x(0) value x(2) cache)
		unify(x(2) x(1))
		getRecord('#' 2 y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getFeature x(1) 1 cache)
		endDefinition(178195)
lbl(178254)	move(x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(6) 3 cache)
		getSelf(x(4))
		inlineDot(x(4) <M: MessagePatternVO> x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(178318)	unify(y(1) y(2))
		deAllocateL7
		return
lbl(178323)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1653)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(178074)
lbl(178336)	definition(x(8) 178377 pid('CodeGenMethod,makeArityCheckInit/slow' 1 pos('./compiler/CodeGen.oz' 1650 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1150> 7)
		endDefinition(178336)
lbl(178377)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeArityCheckInit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(30) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenMethod' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(178415)	definition(x(7) 179106 pid('CodeGenMethodWithDesignator,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1672 6) nil 8) <Q: 1151> [g(34) g(35) y(30) y(1)])
		allocateL(15)
		getSelf(x(3))
		inlineDot(x(3) hasDefaults x(3) cache)
		inlineAt(formalArgs x(6) cache)
lbl(178436)	definition(x(7) 178456 pid('' 2 pos('./compiler/CodeGen.oz' 1676 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(178436)
lbl(178456)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(6) x(0))
		move(x(7) x(1))
		move(x(3) x(2))
		genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		createVariable(y(7))
		testLiteral(x(0) unit 178507)
lbl(178496)	getLiteral('' y(5))
		getNumber(1 y(6))
		getNumber(0 y(7))
		branch(178534)
lbl(178507)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(7))
lbl(178534)	putRecord('pos' 3 x(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(7))
		putRecord('pid' 5 y(8))
		setVariable(y(9))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(10))
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 3 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(9))
		inlineAt(isOpen x(0) cache)
		createVariable(y(0))
		testBool(x(0) 178613 178626)
		unify(y(3) y(0))
		branch(178637)
lbl(178613)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		genCall(gci(g(2) true makeArityCheckInit false 3) 0)
		branch(178637)
lbl(178626)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1691)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(178637)	sendMsg(startDefinition y(1) 0 cache)
		inlineAt(messageDesignator x(1) cache)
		move(y(1) x(0))
		sendMsg(setReg x(1) 1 cache)
		inlineAt(messageDesignator x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(3) x(0))
		sendMsg(init y(5) 1 cache)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		inlineAt(allVariables x(1) cache)
		move(x(0) y(3))
		createVariable(y(6))
		testLiteral(x(1) nil 178713)
lbl(178708)	getLiteral(nil y(6))
		branch(178747)
lbl(178713)	inlineAt(allVariables x(3) cache)
lbl(178718)	definition(x(1) 178738 pid('' 2 pos('./compiler/CodeGen.oz' 1702 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(178718)
lbl(178738)	move(x(3) x(0))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(178747)	inlineAt(isOpen x(0) cache)
		createVariable(y(7))
		createVariable(y(9))
		testBool(x(0) 178765 178780)
		unify(y(7) y(9))
		branch(178791)
lbl(178765)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(9) x(3))
		genCall(gci(g(2) true makeArityCheck false 4) 0)
		branch(178791)
lbl(178780)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1704)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(178791)	inlineAt(formalArgs x(0) cache)
lbl(178796)	definition(x(1) 178825 pid('' 3 pos('./compiler/CodeGen.oz' 1710 6) nil 5) unit [y(5) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(178796)
lbl(178825)	move(y(9) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(5) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1049> 8)
		move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(5))
		testBool(x(1) 178983 178991)
		createVariableMove(y(11) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(5))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(11))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(11) y(12))
		putList(y(13))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(178918)	definition(x(1) 178938 pid('' 2 pos('./compiler/CodeGen.oz' 1721 5) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(178918)
lbl(178938)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(13) x(0) y(12) x(2))
		move(y(7) x(3))
		createVariableMove(y(14) x(1))
		genFastCall(<Q: 1053> 8)
		putList(x(0))
		setValue(y(11))
		setConstant(nil)
		move(y(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1054> 6)
		moveMoveYXYX(y(14) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1054> 6)
		branch(179002)
lbl(178983)	unify(y(5) y(7))
		getLiteral(nil y(9))
		branch(179002)
lbl(178991)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1714)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(179002)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		moveMoveYXYX(y(6) x(2) y(10) x(5))
		createVariableMove(y(7) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(8))
		unifyLiteral(unit)
		unifyValue(y(7))
		unifyValVar(y(9) x(4))
		getRecord(vEquateRecord 6 x(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(value 1 x(2))
		unifyValue(y(3))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(178415)
lbl(179106)	definition(x(8) 179165 pid('CodeGenMethodWithDesignator,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1672 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1151> 13)
		endDefinition(179106)
lbl(179165)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethodWithDesignator' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179202)	definition(x(7) 179251 pid('CodeGenMethFormal,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1741 6) nil 5) <Q: 1152> [y(7) y(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooRequiredArg x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(179202)
lbl(179251)	definition(x(8) 179277 pid('CodeGenMethFormal,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1741 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1152> 3)
		endDefinition(179251)
lbl(179277)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(179287)	definition(x(7) 179431 pid('CodeGenMethFormal,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1744 6) nil 6) <Q: 1153> [y(1)])
		allocateL8
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(feature x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeVO x(4) 4 cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(1))
		setValue(y(6))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		putConstant('.' x(0))
		deAllocateL8
		genFastCall(<Q: 1070> 13)
		endDefinition(179287)
lbl(179431)	definition(x(8) 179478 pid('CodeGenMethFormal,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1744 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1153> 9)
		endDefinition(179431)
lbl(179478)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormal' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179517)	definition(x(7) 179566 pid('CodeGenMethFormalOptional,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1754 6) nil 5) <Q: 1154> [y(7) y(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooDefaultVar x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(179517)
lbl(179566)	definition(x(8) 179592 pid('CodeGenMethFormalOptional,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1754 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1154> 3)
		endDefinition(179566)
lbl(179592)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(179602)	definition(x(7) 179875 pid('CodeGenMethFormalOptional,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1757 6) nil 6) <Q: 1155> [y(1)])
		allocateL(11)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(isInitialized x(0) cache)
		testBool(x(0) 179648 179862)
		unify(y(2) y(3))
		deAllocateL
		return
lbl(179648)	inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1050> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1070> 12)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1071> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1070> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyLiteral(nil)
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
lbl(179862)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1759)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(179602)
lbl(179875)	definition(x(8) 179922 pid('CodeGenMethFormalOptional,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1757 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1155> 9)
		endDefinition(179875)
lbl(179922)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalOptional' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179961)	definition(x(7) 180000 pid('CodeGenMethFormalWithDefault,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1783 6) nil 4) <Q: 1156> [y(8)])
		allocateL2
		inlineAt(default x(1) cache)
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(1) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(179961)
lbl(180000)	definition(x(8) 180026 pid('CodeGenMethFormalWithDefault,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1783 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1156> 3)
		endDefinition(180000)
lbl(180026)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(180036)	definition(x(7) 180321 pid('CodeGenMethFormalWithDefault,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1786 6) nil 6) <Q: 1157> [y(1) y(8)])
		allocateL(13)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1050> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1070> 12)
		inlineAt(default x(0) cache)
		move(g(1) x(1))
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(11))
		sendMsg(init y(11) 1 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(12) x(2))
		putConstant(nil x(3))
		sendMsg(makeEquation y(11) 4 cache)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1071> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1070> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyValue(y(12))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
		endDefinition(180036)
lbl(180321)	definition(x(8) 180368 pid('CodeGenMethFormalWithDefault,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1786 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1157> 9)
		endDefinition(180321)
lbl(180368)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalWithDefault' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(180407)	definition(x(7) 180534 pid('CodeGenObjectLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1810 6) nil 6) <Q: 1158> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1050> 4)
		putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(1) x(4))
		putConstant(ooGetLock x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1070> 12)
		getRecord(vLockThread 5 y(4))
		unifyVoid(1)
		unifyValVar(y(3) x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		inlineAt(coord x(0) cache)
		unify(x(0) x(4))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(2))
		setValue(x(5))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1049> 9)
		endDefinition(180407)
lbl(180534)	definition(x(8) 180575 pid('CodeGenObjectLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1810 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1158> 7)
		endDefinition(180534)
lbl(180575)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(180612)	definition(x(7) 180641 pid('CodeGenGetSelf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1821 6) nil 3) <Q: 1159> nil)
		getRecord(vGetSelf 3 x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		inlineAt(destination x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(180612)
lbl(180641)	definition(x(8) 180682 pid('CodeGenGetSelf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1821 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1159> 7)
		endDefinition(180641)
lbl(180682)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenGetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(180719)	definition(x(7) 180752 pid('CodeGenFailNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1827 6) nil 6) <Q: 1160> nil)
		inlineAt(coord x(0) cache)
		putRecord(vFailure 2 x(4))
		setVoid(1)
		setVariable(x(5))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant('fail' x(1))
		genFastCall(<Q: 1051> 13)
		endDefinition(180719)
lbl(180752)	definition(x(8) 180793 pid('CodeGenFailNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1827 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1160> 7)
		endDefinition(180752)
lbl(180793)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(180830)	definition(x(7) 181168 pid('CodeGenIfNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1833 6) nil 6) <Q: 1161> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		testList(x(0) 181037)
lbl(180862)	getVarVar(x(0) x(1))
		createVariable(y(4))
		testLiteral(x(1) nil 181037)
		move(x(0) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getGuardGlobalVars y(5) 1 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		sendMsg(enterVs y(0) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		sendMsg(codeGen y(5) 5 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1073> 4)
		testBool(y(0) 180980 181026)
		getLiteral(nil y(7))
		getRecord(vShallowGuard 8 y(1))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValVar(y(5) x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
lbl(180980)	unify(y(7) y(8))
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(5))
		unifyValVar(y(2) x(1))
		unifyValue(y(3))
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL10
		return
lbl(181026)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1841)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(181037)	inlineAt(clauses x(0) cache)
lbl(181042)	definition(x(1) 181113 pid('' 2 pos('./compiler/CodeGen.oz' 1852 3) nil 6) unit [y(0) y(3)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(181042)
lbl(181113)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyValVar(y(2) x(0))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
		endDefinition(180830)
lbl(181168)	definition(x(8) 181209 pid('CodeGenIfNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1833 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1161> 7)
		endDefinition(181168)
lbl(181209)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181246)	definition(x(7) 181413 pid('CodeGenChoicesAndDisjunctions,codeGen/fast' 4 pos('./compiler/CodeGen.oz' 1867 6) nil 6) <Q: 1162> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(makeRegSet y(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(181277)	definition(x(1) 181348 pid('' 2 pos('./compiler/CodeGen.oz' 1870 7) nil 6) unit [y(1) y(4)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(181277)
lbl(181348)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(4))
		setVoid(1)
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(4))
		putList(x(4))
		setVariable(y(4))
		setValue(x(5))
		putList(x(5))
		setValue(y(3))
		setValue(x(4))
		putList(x(4))
		setValue(y(1))
		setValue(x(5))
		putList(x(1))
		setVoid(1)
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		putConstant(6 x(2))
		marshalledFastCall(<R: tuple> 8)
		inlineAt(coord x(0) cache)
		unify(x(0) y(4))
		deAllocateL5
		return
		endDefinition(181246)
lbl(181413)	definition(x(8) 181460 pid('CodeGenChoicesAndDisjunctions,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1867 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1162> 9)
		endDefinition(181413)
lbl(181460)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181497)	definition(x(7) 181520 pid('CodeGenOrNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1882 6) nil 4) <Q: 1163> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(181497)
lbl(181520)	definition(x(8) 181561 pid('CodeGenOrNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1882 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1163> 7)
		endDefinition(181520)
lbl(181561)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenOrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181598)	definition(x(7) 181621 pid('CodeGenDisNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1887 6) nil 4) <Q: 1164> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateEnumOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(181598)
lbl(181621)	definition(x(8) 181662 pid('CodeGenDisNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1887 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1164> 7)
		endDefinition(181621)
lbl(181662)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181699)	definition(x(7) 181722 pid('CodeGenChoiceNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1892 6) nil 4) <Q: 1165> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateChoice x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(181699)
lbl(181722)	definition(x(8) 181763 pid('CodeGenChoiceNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1892 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1165> 7)
		endDefinition(181722)
lbl(181763)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181800)	definition(x(7) 182154 pid('CodeGenClause,codeGen/fast' 5 pos('./compiler/CodeGen.oz' 1898 6) nil 7) <Q: 1166> nil)
		allocateL9
		inlineAt(localVars x(5) cache)
lbl(181812)	definition(x(6) 181832 pid('' 1 pos('./compiler/CodeGen.oz' 1899 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(181812)
lbl(181832)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1049> 8)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1072> 4)
		testBool(y(7) 181990 181998)
		inlineAt(guard x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 181971 181960)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating `cond\', `or\', `dis\' or `choice\' ')
		setConstant('clause with thread')
		move(y(7) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(181971)
lbl(181960)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1903)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(181971)	getLiteral(nil y(6))
		getRecord(vThread 5 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(2))
		unifyVoid(1)
		branch(182009)
lbl(181990)	unify(y(6) y(2))
		unify(y(1) y(5))
		branch(182009)
lbl(181998)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182009)	inlineAt(kind x(0) cache)
		match(x(0) ht(182047 [onScalar('ask' 182017) onScalar('wait' 182027) onScalar('waitTop' 182037)]))
lbl(182017)	getRecord(vAsk 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(182060)
lbl(182027)	getRecord(vWait 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(182060)
lbl(182037)	getRecord(vWaitTop 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(182060)
lbl(182047)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1918)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(182060)	move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 182121 182141)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(4) x(2))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1053> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1049> 8)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		putConstant(nil x(2))
		deAllocateL9
		genFastCall(<Q: 1054> 7)
lbl(182121)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<Q: 1049> 9)
lbl(182141)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1919)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181800)
lbl(182154)	definition(x(8) 182207 pid('CodeGenClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1898 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1166> 11)
		endDefinition(182154)
lbl(182207)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(182244)	definition(x(7) 182261 pid('CodeGenValueNode,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1930 6) nil 2) <Q: 1167> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(182244)
lbl(182261)	definition(x(8) 182287 pid('CodeGenValueNode,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1930 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1167> 3)
		endDefinition(182261)
lbl(182287)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(182297)	definition(x(7) 182309 pid('CodeGenValueNode,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1933 6) nil 1) <Q: 1168> nil)
		getLiteral(true x(0))
		return
		endDefinition(182297)
lbl(182309)	definition(x(8) 182335 pid('CodeGenValueNode,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1933 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1168> 3)
		endDefinition(182309)
lbl(182335)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(182345)	definition(x(7) 182371 pid('CodeGenValueNode,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1936 6) nil 5) <Q: 1169> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(182345)
lbl(182371)	definition(x(8) 182424 pid('CodeGenValueNode,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1936 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1169> 11)
		endDefinition(182371)
lbl(182424)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(182434)	definition(x(7) 182520 pid('CodeGenValueNode,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1939 6) nil 7) <Q: 1170> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(182434)
lbl(182520)	definition(x(8) 182585 pid('CodeGenValueNode,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1939 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1170> 15)
		endDefinition(182520)
lbl(182585)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(182595)	definition(x(7) 182607 pid('CodeGenValueNode,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1946 6) nil 2) <Q: 1171> nil)
		unify(x(1) x(0))
		return
		endDefinition(182595)
lbl(182607)	definition(x(8) 182642 pid('CodeGenValueNode,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1946 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1171> 5)
		endDefinition(182607)
lbl(182642)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(182652)	definition(x(7) 182661 pid('CodeGenValueNode,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1949 6) nil 1) <Q: 1172> nil)
		return
		endDefinition(182652)
lbl(182661)	definition(x(8) 182687 pid('CodeGenValueNode,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1949 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1172> 3)
		endDefinition(182661)
lbl(182687)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(182734)	definition(x(7) 182768 pid('CodeGenAtomNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1955 6) nil 4) <Q: 1173> nil)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(182734)
lbl(182768)	definition(x(8) 182815 pid('CodeGenAtomNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1955 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1173> 9)
		endDefinition(182768)
lbl(182815)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(182825)	definition(x(7) 182851 pid('CodeGenAtomNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1958 6) nil 4) <Q: 1174> nil)
		unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(182825)
lbl(182851)	definition(x(8) 182898 pid('CodeGenAtomNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1958 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1174> 9)
		endDefinition(182851)
lbl(182898)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(182908)	definition(x(7) 182980 pid('CodeGenAtomNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1962 6) nil 4) <Q: 1175> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateLiteral 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(182908)
lbl(182980)	definition(x(8) 183027 pid('CodeGenAtomNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1962 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1175> 9)
		endDefinition(182980)
lbl(183027)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(183037)	definition(x(7) 183054 pid('CodeGenAtomNode,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 1967 6) nil 2) <Q: 1176> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(183037)
lbl(183054)	definition(x(8) 183080 pid('CodeGenAtomNode,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 1967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1176> 3)
		endDefinition(183054)
lbl(183080)	putRecord('#' [1 2 fast] x(12))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenAtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(183123)	definition(x(7) 183157 pid('CodeGenIntNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1973 6) nil 4) <Q: 1177> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(183123)
lbl(183157)	definition(x(8) 183204 pid('CodeGenIntNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1973 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1177> 9)
		endDefinition(183157)
lbl(183204)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(183214)	definition(x(7) 183240 pid('CodeGenIntNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1976 6) nil 4) <Q: 1178> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(183214)
lbl(183240)	definition(x(8) 183287 pid('CodeGenIntNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1976 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1178> 9)
		endDefinition(183240)
lbl(183287)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(183297)	definition(x(7) 183369 pid('CodeGenIntNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1980 6) nil 4) <Q: 1179> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(183297)
lbl(183369)	definition(x(8) 183416 pid('CodeGenIntNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1980 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1179> 9)
		endDefinition(183369)
lbl(183416)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(183457)	definition(x(7) 183491 pid('CodeGenFloatNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1988 6) nil 4) <Q: 1180> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(183457)
lbl(183491)	definition(x(8) 183538 pid('CodeGenFloatNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1988 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1180> 9)
		endDefinition(183491)
lbl(183538)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(183548)	definition(x(7) 183574 pid('CodeGenFloatNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1991 6) nil 4) <Q: 1181> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(183548)
lbl(183574)	definition(x(8) 183621 pid('CodeGenFloatNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1991 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1181> 9)
		endDefinition(183574)
lbl(183621)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(183631)	definition(x(7) 183703 pid('CodeGenFloatNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1995 6) nil 4) <Q: 1182> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1065> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(183631)
lbl(183703)	definition(x(8) 183750 pid('CodeGenFloatNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1995 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(183703)
lbl(183750)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFloatNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [reg] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(183797)	definition(x(7) 183821 pid('CodeGenVariable,setReg/fast' 1 pos('./compiler/CodeGen.oz' 2004 6) nil 3) <Q: 1183> nil)
		inlineAt(reg x(1) cache)
		move(x(0) x(2))
		getSelf(x(0))
		tailSendMsg(newVariableReg x(2) 2 cache)
		endDefinition(183797)
lbl(183821)	definition(x(8) 183847 pid('CodeGenVariable,setReg/slow' 1 pos('./compiler/CodeGen.oz' 2004 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1183> 3)
		endDefinition(183821)
lbl(183847)	putRecord('#' [1 2 fast] x(9))
		setConstant(setReg)
		setValue(x(8))
		setValue(x(7))
lbl(183857)	definition(x(7) 183890 pid('CodeGenVariable,setFreshReg/fast' 1 pos('./compiler/CodeGen.oz' 2007 6) nil 3) <Q: 1184> nil)
		allocateL1
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(0) x(1))
		sendMsg(newVariableReg x(2) 2 cache)
		move(y(0) x(0))
		inlineAssign(reg x(0) cache)
		deAllocateL1
		return
		endDefinition(183857)
lbl(183890)	definition(x(8) 183916 pid('CodeGenVariable,setFreshReg/slow' 1 pos('./compiler/CodeGen.oz' 2007 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1184> 3)
		endDefinition(183890)
lbl(183916)	putRecord('#' [1 2 fast] x(10))
		setConstant(setFreshReg)
		setValue(x(8))
		setValue(x(7))
lbl(183926)	definition(x(7) 183943 pid('CodeGenVariable,reg/fast' 1 pos('./compiler/CodeGen.oz' 2010 6) nil 2) <Q: 1185> nil)
		inlineAt(reg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(183926)
lbl(183943)	definition(x(8) 183969 pid('CodeGenVariable,reg/slow' 1 pos('./compiler/CodeGen.oz' 2010 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1185> 3)
		endDefinition(183943)
lbl(183969)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(184007)	definition(x(7) 184048 pid('CodeGenVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2016 6) nil 4) <Q: 1186> nil)
		inlineAt(value x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 184045)
		inlineAt(value x(1) cache)
		getSelf(x(2))
		testBI('==' [x(1) x(2)]#[x(3)] 184034)
		return
lbl(184034)	inlineAt(value x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(184045)	return
		endDefinition(184007)
lbl(184048)	definition(x(8) 184074 pid('CodeGenVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1186> 3)
		endDefinition(184048)
lbl(184074)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(184084)	definition(x(7) 184103 pid('CodeGenVariableOccurrence,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2024 6) nil 7) <Q: 1187> nil)
		inlineAt(value x(6) cache)
		tailSendMsg(codeGenApplication x(6) 6 cache)
		endDefinition(184084)
lbl(184103)	definition(x(8) 184162 pid('CodeGenVariableOccurrence,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2024 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1187> 13)
		endDefinition(184103)
lbl(184162)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
lbl(184172)	definition(x(7) 184264 pid('CodeGenVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 4) <Q: 1188> [y(5)])
		allocateL3
		inlineAt(value x(1) cache)
		move(x(0) y(0))
		testBI('IsDet' [x(1)]#[x(2)] 184247)
lbl(184191)	testBI('IsObject' [x(1)]#[x(2)] 184247)
lbl(184195)	move(g(0) x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 184247)
lbl(184202)	createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184232)
		unify(y(0) y(2))
		deAllocateL3
		return
lbl(184232)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
lbl(184247)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(184172)
lbl(184264)	definition(x(8) 184290 pid('CodeGenVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1188> 3)
		endDefinition(184264)
lbl(184290)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(184302)	definition(x(7) 184577 pid('CodeGenVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2042 6) nil 4) <Q: 1189> [y(46)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184398)
		testBI('IsNumber' [x(0)]#[x(1)] 184365)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
		branch(184398)
lbl(184365)	testBI('IsLiteral' [x(0)]#[x(1)] 184398)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
lbl(184398)	move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184407)
		deAllocateL5
		return
lbl(184407)	createVariableMove(y(3) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184529)
		testBI('IsNumber' [x(0)]#[x(1)] 184453)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(184453)	testBI('IsLiteral' [x(0)]#[x(1)] 184483)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(184483)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1052> 9)
lbl(184529)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1052> 9)
		endDefinition(184302)
lbl(184577)	definition(x(8) 184624 pid('CodeGenVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2042 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1189> 9)
		endDefinition(184577)
lbl(184624)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(184634)	definition(x(7) 184722 pid('CodeGenVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2073 6) nil 4) <Q: 1190> [y(46)])
		allocateL2
		unify(x(1) x(2))
		move(x(3) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184702)
		testBI('IsNumber' [x(0)]#[x(1)] 184672)
		getRecord(number 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(184672)	testBI('IsLiteral' [x(0)]#[x(1)] 184684)
		getRecord(literal 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(184684)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
lbl(184702)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(184634)
lbl(184722)	definition(x(8) 184769 pid('CodeGenVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2073 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1190> 9)
		endDefinition(184722)
lbl(184769)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(184779)	definition(x(7) 184796 pid('CodeGenVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2088 6) nil 4) <Q: 1191> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(184779)
lbl(184796)	definition(x(8) 184843 pid('CodeGenVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2088 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1191> 9)
		endDefinition(184796)
lbl(184843)	putRecord('#' [1 2 fast] x(14))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(184853)	definition(x(7) 184900 pid('CodeGenVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2092 6) nil 2) <Q: 1192> [y(46)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 184893)
		testBI('IsNumber' [x(0)]#[x(1)] 184885)
		getLiteral(true y(0))
		deAllocateL2
		return
lbl(184885)	callBI('IsLiteral' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(184893)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(184853)
lbl(184900)	definition(x(8) 184926 pid('CodeGenVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2092 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1192> 3)
		endDefinition(184900)
lbl(184926)	putRecord('#' [1 2 fast] x(15))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(184936)	definition(x(7) 184962 pid('CodeGenVariableOccurrence,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 2096 6) nil 5) <Q: 1193> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(184936)
lbl(184962)	definition(x(8) 185015 pid('CodeGenVariableOccurrence,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2096 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1193> 11)
		endDefinition(184962)
lbl(185015)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(185025)	definition(x(7) 185111 pid('CodeGenVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2099 6) nil 7) <Q: 1194> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(185025)
lbl(185111)	definition(x(8) 185176 pid('CodeGenVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2099 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1194> 15)
		endDefinition(185111)
lbl(185176)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(185186)	definition(x(7) 185205 pid('CodeGenVariableOccurrence,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2106 6) nil 2) <Q: 1195> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(185186)
lbl(185205)	definition(x(8) 185231 pid('CodeGenVariableOccurrence,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1195> 3)
		endDefinition(185205)
lbl(185231)	putRecord('#' [1 2 fast] x(18))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(185241)	definition(x(7) 185253 pid('CodeGenVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2109 6) nil 2) <Q: 1196> nil)
		unify(x(1) x(0))
		return
		endDefinition(185241)
lbl(185253)	definition(x(8) 185288 pid('CodeGenVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2109 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1196> 5)
		endDefinition(185253)
lbl(185288)	putRecord('#' [1 2 fast] x(19))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(185298)	definition(x(7) 185307 pid('CodeGenVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2112 6) nil 1) <Q: 1197> nil)
		return
		endDefinition(185298)
lbl(185307)	definition(x(8) 185333 pid('CodeGenVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1197> 3)
		endDefinition(185307)
lbl(185333)	putRecord('#' [1 2 fast] x(20))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(185392)	definition(x(7) 185404 pid('CodeGenPatternVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2118 6) nil 1) <Q: 1198> nil)
		getLiteral(false x(0))
		return
		endDefinition(185392)
lbl(185404)	definition(x(8) 185430 pid('CodeGenPatternVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1198> 3)
		endDefinition(185404)
lbl(185430)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(185442)	definition(x(7) 185491 pid('CodeGenPatternVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2121 6) nil 7) <Q: 1199> [y(1)])
		allocateL4
		getRecord(vGetVariable 3 x(2))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(3))
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		getSelf(x(2))
		sendMsg(reg x(2) 1 cache)
		unify(y(1) y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true addPatternVs true 2) 0)
		endDefinition(185442)
lbl(185491)	definition(x(8) 185556 pid('CodeGenPatternVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2121 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1199> 15)
		endDefinition(185491)
lbl(185556)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(185566)	definition(x(7) 185633 pid('CodeGenPatternVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2127 6) nil 4) <Q: 1200> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 185604 185620)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(185604)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
lbl(185620)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2128)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(185566)
lbl(185633)	definition(x(8) 185668 pid('CodeGenPatternVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2127 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1200> 5)
		endDefinition(185633)
lbl(185668)	putRecord('#' [1 2 fast] x(11))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(185678)	definition(x(7) 185732 pid('CodeGenPatternVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2134 6) nil 5) <Q: 1201> nil)
		allocateL5
		inlineAt(variable x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(4) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1052> 9)
		endDefinition(185678)
lbl(185732)	definition(x(8) 185779 pid('CodeGenPatternVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2134 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1201> 9)
		endDefinition(185732)
lbl(185779)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(185822)	definition(x(7) 185839 pid('CodeGenToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2140 6) nil 2) <Q: 1202> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(185822)
lbl(185839)	definition(x(8) 185865 pid('CodeGenToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2140 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1202> 3)
		endDefinition(185839)
lbl(185865)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenToken' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(185902)	definition(x(7) 185939 pid('CodeGenNameToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2146 6) nil 2) <Q: 1203> nil)
		inlineAt(isToplevel x(1) cache)
		testBool(x(1) 185925 185926)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
lbl(185925)	return
lbl(185926)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2147)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(185902)
lbl(185939)	definition(x(8) 185965 pid('CodeGenNameToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2146 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1203> 3)
		endDefinition(185939)
lbl(185965)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186002)	definition(x(7) 187181 pid('CodeGenBuiltinToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2152 6) nil 8) <Q: 1204> [y(3) y(5)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) printName x(6) cache)
		inlineAt(value x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(7) x(0))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(5) ht(186534 [onScalar('New' 186049) onScalar('+' 186144) onScalar('-' 186405)]))
lbl(186049)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(7))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(8))
		unifyLiteral(nil)
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(2) 1 cache)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('New')
		unifyVariable(x(0))
		unifyValVar(y(0) y(2))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(10))
		unifyVariable(x(3))
		getList(x(3))
		unifyValue(y(9))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(10) x(0))
		sendMsg(reg y(7) 1 cache)
		getRecord(vUnify 4 y(2))
		unifyVoid(1)
		unifyValVar(y(9) x(0))
		unifyValue(y(4))
		sendMsg(reg y(8) 1 cache)
		branch(187125)
lbl(186144)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 186271)
		match(y(8) ht(186271 [onScalar(1 186181) onScalar(~1 186227)]))
lbl(186181)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(186271)
lbl(186227)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
lbl(186271)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 186280)
		branch(187125)
lbl(186280)	createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		move(y(8) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 187125 186394)
		match(y(8) ht(187125 [onScalar(1 186302) onScalar(~1 186348)]))
lbl(186302)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(187125)
lbl(186348)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(187125)
lbl(186394)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(186405)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187125)
		match(y(7) ht(187125 [onScalar(1 186442) onScalar(~1 186488)]))
lbl(186442)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(187125)
lbl(186488)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(187125)
lbl(186534)	move(y(2) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(1) cache)
		testBool(x(1) 186549 187114)
		branch(187125)
lbl(186549)	match(y(5) ht(187125 [onScalar('.' 186552) onScalar('@' 186763) onScalar('<-' 186817) onScalar(',' 186871)]))
lbl(186552)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187125)
lbl(186586)	testBI('IsLiteral' [x(0)]#[x(1)] 186757)
lbl(186590)	createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		createVariable(y(10))
		move(y(9) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 186628)
		testBI('IsRecord' [x(0)]#[x(1)] 186623)
		move(y(8) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		unify(x(2) y(10))
		branch(186631)
lbl(186623)	getLiteral(false y(10))
		branch(186631)
lbl(186628)	getLiteral(false y(10))
lbl(186631)	testBool(y(10) 186703 186746)
lbl(186635)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBI('IsObject' [x(2)]#[x(3)] 186703)
lbl(186647)	callBI('.' [x(0) x(1)]#[x(2)])
		move(g(1) x(3))
		testBI('HasFeature' [x(2) x(3)]#[x(4)] 186703)
lbl(186657)	callBI('.' [x(0) x(1)]#[x(2)])
		createVariableMove(y(11) x(0))
		sendMsg(reg x(2) 1 cache)
		move(y(11) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 186703)
lbl(186676)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(y(2) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		sendMsg(makeEquation y(7) 4 cache)
		branch(187125)
lbl(186703)	getRecord(vInlineDot 7 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(8) y(2))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		move(y(2) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(187125)
lbl(186746)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2219)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(186757)	testBI('IsInt' [x(0)]#[x(1)] 187125)
		branch(186590)
lbl(186763)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187125)
lbl(186791)	testBI('IsLiteral' [x(0)]#[x(1)] 187125)
lbl(186795)	getRecord(vInlineAt 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(187125)
lbl(186817)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187125)
lbl(186845)	testBI('IsLiteral' [x(0)]#[x(1)] 187125)
lbl(186849)	getRecord(vInlineAssign 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(187125)
lbl(186871)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187125)
lbl(186899)	testBI('IsRecord' [x(0)]#[x(1)] 187125)
lbl(186903)	createVariable(y(8))
		createVariable(y(9))
		testBI('IsTuple' [x(0)]#[x(1)] 186960)
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(186917)	definition(x(3) 186941 pid('' 3 pos('./compiler/CodeGen.oz' 2256 10) nil 4) unit [y(7)])
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(186917)
lbl(186941)	moveMoveYXYX(y(8) x(0) y(9) x(5))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		branch(186992)
lbl(186960)	callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(186966)	definition(x(1) 186984 pid('' 2 pos('./compiler/CodeGen.oz' 2259 33) nil 4) unit [y(7)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(186966)
lbl(186984)	moveMoveYXYX(y(8) x(0) y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(186992)	moveMoveYXYX(y(9) x(0) y(2) x(1))
		move(y(3) x(3))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(4))
		genFastCall(<Q: 1066> 10)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(6) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(9) 187068 187103)
		getRecord(vGenCall 8 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(true)
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(187125)
lbl(187068)	getRecord(vApplMeth 7 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(187125)
lbl(187103)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2262)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(187114)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2207)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(187125)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 187134)
		deAllocateL
		return
lbl(187134)	definition(x(1) 187154 pid('' 2 pos('./compiler/CodeGen.oz' 2278 28) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(187134)
lbl(187154)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(4))
		deAllocateL
		return
		endDefinition(186002)
lbl(187181)	definition(x(8) 187240 pid('CodeGenBuiltinToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2152 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1204> 13)
		endDefinition(187181)
lbl(187240)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBuiltinToken' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: ClauseBodyShared>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(187283)	definition(x(7) 187497 pid('CodeGenProcedureToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2286 6) nil 8) <Q: 1205> nil)
		allocateL6
		getSelf(x(6))
		inlineDot(x(6) predicateRef x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		testBI('IsDet' [x(6)]#[x(7)] 187321)
lbl(187317)	testLiteral(x(6) unit 187452)
lbl(187321)	getSelf(x(0))
		inlineDot(x(0) clauseBodyStatements x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 187403)
		getSelf(x(0))
		inlineDot(x(0) <M: ClauseBodyShared> x(1) cache)
		unify(x(1) y(4))
		getLiteral(nil y(5))
		move(y(4) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 187401)
		getRecord(vShared 4 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		sendMsg(newLabel y(3) 1 cache)
		putConstant(0 x(4))
		callBI('NewCell' [x(4)]#[x(0)])
		unify(x(0) y(0))
		getSelf(x(4))
		inlineDot(x(4) clauseBodyStatements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL6
		genFastCall(<Q: 1049> 9)
lbl(187401)	deAllocateL6
		return
lbl(187403)	getRecord(vCall 5 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
lbl(187423)	definition(x(1) 187443 pid('' 2 pos('./compiler/CodeGen.oz' 2305 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(187423)
lbl(187443)	moveMoveYXYX(y(2) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 29> 7)
lbl(187452)	getRecord(vFastCall 5 y(4))
		unifyVoid(1)
		unifyValVar(x(6) x(3))
		unifyValue(y(1))
		unifyValue(y(5))
lbl(187465)	definition(x(1) 187485 pid('' 2 pos('./compiler/CodeGen.oz' 2290 42) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(187465)
lbl(187485)	move(y(2) x(0))
		move(x(3) x(2))
		deAllocateL6
		genFastCall(<P: 29> 7)
		endDefinition(187283)
lbl(187497)	definition(x(8) 187556 pid('CodeGenProcedureToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2286 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1205> 13)
		endDefinition(187497)
lbl(187556)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenProcedureToken' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(36))
		unifyValue(y(23))
		unifyValue(y(18))
		unifyValue(y(42))
		unifyValue(y(19))
		unifyValue(y(20))
		unifyValue(y(3))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(29))
		unifyValue(y(40))
		unifyValue(y(17))
		unifyValue(y(14))
		unifyValue(y(11))
		unifyValue(y(15))
		unifyValue(y(38))
		unifyValue(y(24))
		unifyValue(y(13))
		unifyValue(y(22))
		unifyValue(y(34))
		unifyValue(y(44))
		unifyValue(y(16))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(43))
		unifyValue(y(28))
		unifyValue(y(31))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(30))
		unifyValue(y(6))
		unifyValue(y(48))
		unifyValue(y(25))
		unifyValue(y(32))
		unifyValue(y(37))
		unifyValue(y(2))
		unifyValue(y(21))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(4))
		unifyValue(y(12))
		unifyValue(y(0))
		unifyValue(y(10))
		unifyValue(y(26))
		unifyValue(y(47))
		unifyValue(y(27))
		unifyValue(y(9))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(133407)
lbl(187696)	tailCall(x(3) 0)
		endDefinition(131157)
lbl(187701)	putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(21))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(22))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(23))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(24))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(25))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(26))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(27))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(39))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(40))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(41))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(42))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(43))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(44))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(45))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(46))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(47))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(48))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(49))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(50))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(51))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(52))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(53))
		setValue(x(4))
		putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(54))
		setConstant(nil)
		putList(x(56))
		setConstant(isBuiltin)
		setConstant(nil)
		putRecord(info [type] x(55))
		setValue(x(56))
		putList(x(59))
		setConstant(literals)
		setConstant(nil)
		putList(x(58))
		setConstant(procs)
		setValue(x(59))
		putRecord(info [type] x(57))
		setValue(x(58))
		putList(x(61))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(60))
		setValue(x(61))
		putRecord('import' ['Builtins' 'Core' 'ImAVariableOccurrence' 'Misc' 'RunTime' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(54))
		setValue(x(55))
		setValue(x(57))
		setValue(x(60))
		putRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(22))
		setValue(x(15))
		setValue(x(44))
		setValue(x(16))
		setValue(x(17))
		setValue(x(52))
		setValue(x(41))
		setValue(x(38))
		setValue(x(28))
		setValue(x(42))
		setValue(x(14))
		setValue(x(11))
		setValue(x(8))
		setValue(x(12))
		setValue(x(40))
		setValue(x(23))
		setValue(x(10))
		setValue(x(21))
		setValue(x(36))
		setValue(x(46))
		setValue(x(13))
		setValue(x(35))
		setValue(x(37))
		setValue(x(45))
		setValue(x(27))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(29))
		setValue(x(30))
		setValue(x(51))
		setValue(x(24))
		setValue(x(34))
		setValue(x(39))
		setValue(x(18))
		setValue(x(19))
		setValue(x(49))
		setValue(x(53))
		setValue(x(20))
		setValue(x(9))
		setValue(x(5))
		setValue(x(7))
		setValue(x(25))
		setValue(x(50))
		setValue(x(26))
		setValue(x(6))
		setValue(x(43))
		setValue(x(47))
		setValue(x(48))
		createVariableMove(y(95) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(188479)	definition(x(2) 222901 pid('' 2 pos('./compiler/FunCore.oz' 1 0) nil 4) <P: 1206> [y(144) y(128)])
		putList(x(2))
		setPredicateRef(<Q: 1207>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1208>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1209>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1210>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1211>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1212>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1213>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1214>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1215>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1216>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1217>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1218>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1219>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1220>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1221>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1222>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1223>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1224>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1225>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1226>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1227>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1228>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1229>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1230>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1231>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1232>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1233>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1234>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1235>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1236>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1237>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1238>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1239>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1240>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1241>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1242>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1243>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1244>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1245>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1246>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1247>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1248>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1249>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1250>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1251>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1252>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1253>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1254>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1255>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1256>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1257>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1258>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1259>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1260>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1261>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1262>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1263>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1264>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1265>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1266>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1267>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1268>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1269>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1270>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1271>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1272>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1273>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1274>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1275>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1276>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1277>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1278>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1279>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1280>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CheckUse>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1281>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1282>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1283>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1284>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1285>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1286>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1287>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1288>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1289>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1290>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1291>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1292>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1294>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1320>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputApplication>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1327>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1328>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1329>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1330>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1331>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1332>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1341>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1342>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1343>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1344>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1345>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1346>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1347>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1348>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1349>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1350>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1351>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1352>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1353>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1354>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1355>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1356>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1357>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1358>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1359>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1360>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1361>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1362>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1363>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1364>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1365>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1366>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1367>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1368>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1369>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1370>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1371>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1372>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1373>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1374>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1375>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1376>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1377>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1378>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1379>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1380>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1381>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1391>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1392>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1393>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1394>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1395>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1403>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1404>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1405>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1406>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1407>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1408>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1409>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1410>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1411>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1412>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1413>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1414>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1415>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1416>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1417>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsDenied>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1418>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1419>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1420>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1421>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputValue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1422>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1423>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1424>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1425>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1426>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1427>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1428>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1429>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1430>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1431>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1432>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1433>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1434>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1435>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1436>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1437>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1438>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1439>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1440>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1441>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1442>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1443>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1444>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1445>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1446>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1447>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1448>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1449>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1450>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1451>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1452>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1453>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1454>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1455>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1456>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1457>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1458>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1459>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1460>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1461>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1462>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1463>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1464>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1465>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1466>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1467>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1468>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1469>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1470>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1471>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1472>)
		setValue(x(3))
lbl(190135)	definitionCopy(x(2) 222896 pid('/body' 0 pos('./compiler/FunCore.oz' 1 0) [once] 23) unit [x(0) g(0) g(1) x(1)])
		allocateL(62)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'SA' x(2) cache)
		inlineDot(x(0) 'CodeGen' x(3) cache)
		inlineDot(x(0) 'ImAConstruction' x(4) cache)
		inlineDot(x(0) 'ImAValueNode' x(5) cache)
		inlineDot(x(0) 'ImAVariableOccurrence' x(6) cache)
		inlineDot(x(0) 'ImAToken' x(7) cache)
lbl(190188)	definition(x(8) 190276 pid('VariableUnion' 3 pos('./compiler/Annotate.oz' 46 3) nil 3) <Q: 1207> nil)
		match(x(0) ht(190261 [onScalar(nil 190197) onRecord('|' 2 190201)]))
lbl(190197)	unify(x(2) x(1))
		return
lbl(190201)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 190235 190250)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1207> 7)
lbl(190235)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1207> 7)
lbl(190250)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(50)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(190261)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(54)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(190188)
lbl(190276)	definition(x(8) 190342 pid('AnnotateGlobalVarsList' 4 pos('./compiler/Annotate.oz' 57 3) nil 5) <Q: 1208> nil)
		match(x(0) ht(190327 [onScalar(nil 190285) onRecord('|' 2 190289)]))
lbl(190285)	unify(x(2) x(3))
		return
lbl(190289)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1208> 9)
lbl(190327)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(63)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(190276)
lbl(190342)	definition(x(8) 190399 pid('MarkFirstList' 3 pos('./compiler/Annotate.oz' 66 3) nil 4) <Q: 1209> nil)
		match(x(0) ht(190384 [onScalar(nil 190351) onRecord('|' 2 190352)]))
lbl(190351)	return
lbl(190352)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(markFirst x(3) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1209> 7)
lbl(190384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(71)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(190342)
lbl(190399)	createVariable(x(8))
lbl(190401)	definition(x(9) 190510 pid('MarkFirstClauses' 6 pos('./compiler/Annotate.oz' 74 3) nil 7) <Q: 1210> [x(8)])
		allocateL7
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYYX(x(5) y(5) y(1) x(0))
		moveMoveYXYX(y(2) x(1) y(4) x(3))
		move(y(5) x(4))
		createVariableMove(y(6) x(2))
		sendMsg(markFirstClause x(6) 5 cache)
lbl(190446)	definition(x(1) 190496 pid('' 3 pos('./compiler/Annotate.oz' 78 3) nil 6) unit [y(1) y(2) y(4) y(5) g(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(3))
		move(g(3) x(4))
		createVariableMove(y(2) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(4) false '' true 3) 0)
		endDefinition(190446)
lbl(190496)	moveMoveYXYX(y(0) x(0) y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		genFastCall(<P: 30> 9)
		endDefinition(190401)
lbl(190510)	definition(x(9) 190561 pid('SetUninitVars' 1 pos('./compiler/Annotate.oz' 85 3) nil 2) <Q: 1211> nil)
lbl(190516)	definition(x(1) 190556 pid('' 1 pos('./compiler/Annotate.oz' 87 7) nil 2) unit nil)
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getUse y(0) 1 cache)
		testLiteral(y(1) unused 190552)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setUse x(1) 1 cache)
lbl(190552)	deAllocateL2
		return
		endDefinition(190516)
lbl(190556)	genFastCall(<P: 34> 5)
		endDefinition(190510)
lbl(190561)	definition(x(9) 190598 pid('GetUses' 2 pos('./compiler/Annotate.oz' 92 3) nil 4) <Q: 1212> nil)
lbl(190567)	definition(x(3) 190587 pid('' 2 pos('./compiler/Annotate.oz' 93 14) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getUse x(2) 1 cache)
		endDefinition(190567)
lbl(190587)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(190561)
lbl(190598)	definition(x(9) 190651 pid('SetUses' 2 pos('./compiler/Annotate.oz' 96 3) nil 3) <Q: 1213> nil)
		match(x(0) ht(190636 [onScalar(nil 190607) onRecord('|' 2 190611)]))
lbl(190607)	getLiteral(nil x(1))
		return
lbl(190611)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(setUse x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1213> 5)
lbl(190636)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(102)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(190598)
lbl(190651)	putRecord(use [linear multiple unused wildcard] x(10))
		setConstant(linear)
		setConstant(multiple)
		setConstant(linear)
		setConstant(linear)
		putRecord(use [linear multiple unused wildcard] x(11))
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		putRecord(use [linear multiple unused wildcard] x(12))
		setConstant(linear)
		setConstant(multiple)
		setConstant(unused)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(13))
		setConstant(linear)
		setConstant(multiple)
		setConstant(wildcard)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
lbl(190711)	definition(x(10) 190749 pid('UsesMax' 3 pos('./compiler/Annotate.oz' 115 6) nil 5) <Q: 1214> [g(1) x(9)])
lbl(190717)	definition(x(4) 190738 pid('' 3 pos('./compiler/Annotate.oz' 117 24) nil 5) unit [g(1)])
		move(g(0) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(4) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(190717)
lbl(190738)	move(x(2) x(3))
		move(x(4) x(2))
		genFastCall(<P: 73> 9)
		endDefinition(190711)
lbl(190749)	unify(x(10) x(8))
lbl(190752)	definition(x(8) 190789 pid('CheckUses' 3 pos('./compiler/Annotate.oz' 121 3) nil 4) <Q: 1215> nil)
lbl(190758)	definition(x(3) 190781 pid('' 1 pos('./compiler/Annotate.oz' 122 17) nil 3) unit [x(1) x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(190758)
lbl(190781)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(190752)
lbl(190789)	definition(x(8) 190801 pid('AnnotateDefaults,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 126 6) nil 3) <Q: 1216> nil)
		unify(x(1) x(2))
		return
		endDefinition(190789)
lbl(190801)	definition(x(9) 190842 pid('AnnotateDefaults,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 126 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1216> 7)
		endDefinition(190801)
lbl(190842)	putRecord('#' [1 2 fast] x(10))
		setConstant(annotateGlobalVars)
		setValue(x(9))
		setValue(x(8))
lbl(190852)	definition(x(8) 190861 pid('AnnotateDefaults,markFirst/fast' 2 pos('./compiler/Annotate.oz' 129 6) nil 2) <Q: 1217> nil)
		return
		endDefinition(190852)
lbl(190861)	definition(x(9) 190896 pid('AnnotateDefaults,markFirst/slow' 1 pos('./compiler/Annotate.oz' 129 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1217> 5)
		endDefinition(190861)
lbl(190896)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirst)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefaults' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStatement' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(190980)	definition(x(7) 190999 pid('AnnotateTypeOf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 138 6) nil 4) <Q: 1218> nil)
		inlineAt(res x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(190980)
lbl(190999)	definition(x(8) 191040 pid('AnnotateTypeOf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 138 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1218> 7)
		endDefinition(190999)
lbl(191040)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191050)	definition(x(7) 191069 pid('AnnotateTypeOf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 141 6) nil 3) <Q: 1219> nil)
		inlineAt(res x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(191050)
lbl(191069)	definition(x(8) 191104 pid('AnnotateTypeOf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1219> 5)
		endDefinition(191069)
lbl(191104)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191143)	definition(x(7) 191171 pid('AnnotateStepPoint,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 147 6) nil 5) <Q: 1220> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1208> 9)
		endDefinition(191143)
lbl(191171)	definition(x(8) 191212 pid('AnnotateStepPoint,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 147 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1220> 7)
		endDefinition(191171)
lbl(191212)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191222)	definition(x(7) 191247 pid('AnnotateStepPoint,markFirst/fast' 2 pos('./compiler/Annotate.oz' 150 6) nil 4) <Q: 1221> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1209> 7)
		endDefinition(191222)
lbl(191247)	definition(x(8) 191282 pid('AnnotateStepPoint,markFirst/slow' 1 pos('./compiler/Annotate.oz' 150 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1221> 5)
		endDefinition(191247)
lbl(191282)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191321)	definition(x(7) 191374 pid('AnnotateDeclaration,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 156 6) nil 5) <Q: 1222> nil)
		allocateL4
		inlineAt(statements x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1208> 9)
		endDefinition(191321)
lbl(191374)	definition(x(8) 191415 pid('AnnotateDeclaration,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 156 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1222> 7)
		endDefinition(191374)
lbl(191415)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191425)	definition(x(7) 191501 pid('AnnotateDeclaration,markFirst/fast' 2 pos('./compiler/Annotate.oz' 159 6) nil 4) <Q: 1223> nil)
		allocateL2
		inlineAt(localVars x(2) cache)
lbl(191437)	definition(x(3) 191457 pid('' 1 pos('./compiler/Annotate.oz' 160 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(191437)
lbl(191457)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(localVars x(0) cache)
		move(y(1) x(2))
		putConstant('local variable' x(1))
		deAllocateL2
		genFastCall(<Q: 1215> 7)
		endDefinition(191425)
lbl(191501)	definition(x(8) 191536 pid('AnnotateDeclaration,markFirst/slow' 1 pos('./compiler/Annotate.oz' 159 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1223> 5)
		endDefinition(191501)
lbl(191536)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDeclaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateSkipNode' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191602)	definition(x(7) 191650 pid('AnnotateEquation,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 170 6) nil 4) <Q: 1224> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191602)
lbl(191650)	definition(x(8) 191691 pid('AnnotateEquation,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 170 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1224> 7)
		endDefinition(191650)
lbl(191691)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191701)	definition(x(7) 191743 pid('AnnotateEquation,markFirst/fast' 2 pos('./compiler/Annotate.oz' 174 6) nil 3) <Q: 1225> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(191701)
lbl(191743)	definition(x(8) 191778 pid('AnnotateEquation,markFirst/slow' 1 pos('./compiler/Annotate.oz' 174 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1225> 5)
		endDefinition(191743)
lbl(191778)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquation' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191817)	definition(x(7) 191927 pid('AnnotateConstruction,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 181 6) nil 4) <Q: 1226> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(191848)	definition(x(1) 191916 pid('' 3 pos('./compiler/Annotate.oz' 184 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191899)
lbl(191859)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191899)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191848)
lbl(191916)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(191817)
lbl(191927)	definition(x(8) 191968 pid('AnnotateConstruction,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 181 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1226> 7)
		endDefinition(191927)
lbl(191968)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191978)	definition(x(7) 192072 pid('AnnotateConstruction,markFirst/fast' 2 pos('./compiler/Annotate.oz' 193 6) nil 3) <Q: 1227> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(192006)	definition(x(1) 192066 pid('' 1 pos('./compiler/Annotate.oz' 196 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192049)
lbl(192017)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192049)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192006)
lbl(192066)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(191978)
lbl(192072)	definition(x(8) 192107 pid('AnnotateConstruction,markFirst/slow' 1 pos('./compiler/Annotate.oz' 193 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1227> 5)
		endDefinition(192072)
lbl(192107)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateConstruction' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(192152)	definition(x(7) 192287 pid('AnnotateDefinition,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 209 6) nil 4) <Q: 1228> nil)
		allocateL5
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		inlineAt(formalArgs x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192217)	definition(x(1) 192273 pid('' 3 pos('./compiler/Annotate.oz' 214 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192252 192260)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192252)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192260)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(215)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192217)
lbl(192273)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(192152)
lbl(192287)	definition(x(8) 192328 pid('AnnotateDefinition,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1228> 7)
		endDefinition(192287)
lbl(192328)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192338)	definition(x(7) 192452 pid('AnnotateDefinition,markFirst/fast' 2 pos('./compiler/Annotate.oz' 220 6) nil 3) <Q: 1229> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1211> 2)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192382)	definition(x(1) 192402 pid('' 1 pos('./compiler/Annotate.oz' 223 22) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(192382)
lbl(192402)	genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		testBool(y(0) 192437 192439)
		inlineAt(formalArgs x(0) cache)
		move(y(1) x(2))
		putConstant('formal parameter' x(1))
		deAllocateL2
		genFastCall(<Q: 1215> 7)
lbl(192437)	deAllocateL2
		return
lbl(192439)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(225)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192338)
lbl(192452)	definition(x(8) 192487 pid('AnnotateDefinition,markFirst/slow' 1 pos('./compiler/Annotate.oz' 220 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1229> 5)
		endDefinition(192452)
lbl(192487)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFunctionDefinition' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClauseBody' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(192571)	definition(x(7) 192616 pid('AnnotateApplication,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 236 6) nil 4) <Q: 1230> nil)
		allocateL3
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1208> 9)
		endDefinition(192571)
lbl(192616)	definition(x(8) 192657 pid('AnnotateApplication,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 236 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1230> 7)
		endDefinition(192616)
lbl(192657)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192667)	definition(x(7) 192706 pid('AnnotateApplication,markFirst/fast' 2 pos('./compiler/Annotate.oz' 240 6) nil 3) <Q: 1231> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1209> 7)
		endDefinition(192667)
lbl(192706)	definition(x(8) 192741 pid('AnnotateApplication,markFirst/slow' 1 pos('./compiler/Annotate.oz' 240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1231> 5)
		endDefinition(192706)
lbl(192741)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateApplication' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(192786)	definition(x(7) 192901 pid('AnnotateBoolCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 248 6) nil 4) <Q: 1232> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		inlineAt(alternative x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(2) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(192786)
lbl(192901)	definition(x(8) 192942 pid('AnnotateBoolCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 248 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1232> 7)
		endDefinition(192901)
lbl(192942)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192952)	definition(x(7) 193086 pid('AnnotateBoolCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 256 6) nil 6) <Q: 1233> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1211> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1212> 4)
		inlineAt(consequent x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(3) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(alternative x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(globalVars x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1214> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1213> 5)
		endDefinition(192952)
lbl(193086)	definition(x(8) 193121 pid('AnnotateBoolCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 256 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1233> 5)
		endDefinition(193086)
lbl(193121)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolCase' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(193163)	definition(x(7) 193288 pid('AnnotateBoolClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 270 6) nil 5) <Q: 1234> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(193218)	definition(x(1) 193274 pid('' 3 pos('./compiler/Annotate.oz' 274 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 193253 193261)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(193253)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(193261)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(275)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(193218)
lbl(193274)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(193163)
lbl(193288)	definition(x(8) 193329 pid('AnnotateBoolClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 270 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1234> 7)
		endDefinition(193288)
lbl(193329)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193339)	definition(x(7) 193356 pid('AnnotateBoolClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 280 6) nil 2) <Q: 1235> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(193339)
lbl(193356)	definition(x(8) 193382 pid('AnnotateBoolClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1235> 3)
		endDefinition(193356)
lbl(193382)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193392)	definition(x(7) 193443 pid('AnnotateBoolClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 283 6) nil 6) <Q: 1236> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1209> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1212> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1213> 5)
		endDefinition(193392)
lbl(193443)	definition(x(8) 193496 pid('AnnotateBoolClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 283 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1236> 11)
		endDefinition(193443)
lbl(193496)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(193540)	definition(x(7) 193707 pid('AnnotatePatternCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 292 6) nil 4) <Q: 1237> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(193571)	definition(x(1) 193594 pid('' 3 pos('./compiler/Annotate.oz' 295 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193571)
lbl(193594)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(193627)	definition(x(1) 193662 pid('' 3 pos('./compiler/Annotate.oz' 300 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1207> 7)
		endDefinition(193627)
lbl(193662)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(193540)
lbl(193707)	definition(x(8) 193748 pid('AnnotatePatternCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 292 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1237> 7)
		endDefinition(193707)
lbl(193748)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193758)	definition(x(7) 193875 pid('AnnotatePatternCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 304 6) nil 6) <Q: 1238> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1211> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1212> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1210> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1214> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1213> 5)
		endDefinition(193758)
lbl(193875)	definition(x(8) 193910 pid('AnnotatePatternCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1238> 5)
		endDefinition(193875)
lbl(193910)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternCase' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars patternGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(193954)	definition(x(7) 194122 pid('AnnotatePatternClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 319 6) nil 5) <Q: 1239> nil)
		allocateL6
		inlineAt(pattern x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(patternGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(5) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(194052)	definition(x(1) 194108 pid('' 3 pos('./compiler/Annotate.oz' 325 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 194087 194095)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(194087)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(194095)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(326)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(194052)
lbl(194108)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(193954)
lbl(194122)	definition(x(8) 194163 pid('AnnotatePatternClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 319 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1239> 7)
		endDefinition(194122)
lbl(194163)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194173)	definition(x(7) 194190 pid('AnnotatePatternClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 331 6) nil 2) <Q: 1240> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194173)
lbl(194190)	definition(x(8) 194216 pid('AnnotatePatternClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 331 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1240> 3)
		endDefinition(194190)
lbl(194216)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194226)	definition(x(7) 194243 pid('AnnotatePatternClause,getPatternGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 334 6) nil 2) <Q: 1241> nil)
		inlineAt(patternGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194226)
lbl(194243)	definition(x(8) 194269 pid('AnnotatePatternClause,getPatternGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 334 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1241> 3)
		endDefinition(194243)
lbl(194269)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPatternGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194279)	definition(x(7) 194395 pid('AnnotatePatternClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 337 6) nil 7) <Q: 1242> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(194291)	definition(x(6) 194311 pid('' 1 pos('./compiler/Annotate.oz' 338 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(194291)
lbl(194311)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local variable' x(1))
		genFastCall(<Q: 1215> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1212> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1213> 5)
		endDefinition(194279)
lbl(194395)	definition(x(8) 194448 pid('AnnotatePatternClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 337 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1242> 11)
		endDefinition(194395)
lbl(194448)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternClause' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(194488)	definition(x(7) 194598 pid('AnnotateRecordPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 348 6) nil 4) <Q: 1243> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(194519)	definition(x(1) 194587 pid('' 3 pos('./compiler/Annotate.oz' 351 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 194570)
lbl(194530)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(194570)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(194519)
lbl(194587)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(194488)
lbl(194598)	definition(x(8) 194639 pid('AnnotateRecordPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 348 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1243> 7)
		endDefinition(194598)
lbl(194639)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194649)	definition(x(7) 194743 pid('AnnotateRecordPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 360 6) nil 3) <Q: 1244> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(194677)	definition(x(1) 194737 pid('' 1 pos('./compiler/Annotate.oz' 363 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 194720)
lbl(194688)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(194720)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(194677)
lbl(194737)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(194649)
lbl(194743)	definition(x(8) 194778 pid('AnnotateRecordPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 360 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1244> 5)
		endDefinition(194743)
lbl(194778)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRecordPattern' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(194817)	definition(x(7) 194865 pid('AnnotateEquationPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 375 6) nil 4) <Q: 1245> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(194817)
lbl(194865)	definition(x(8) 194906 pid('AnnotateEquationPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 375 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1245> 7)
		endDefinition(194865)
lbl(194906)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194916)	definition(x(7) 194958 pid('AnnotateEquationPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 379 6) nil 3) <Q: 1246> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(194916)
lbl(194958)	definition(x(8) 194993 pid('AnnotateEquationPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 379 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1246> 5)
		endDefinition(194958)
lbl(194993)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquationPattern' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAbstractElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(195062)	definition(x(7) 195187 pid('AnnotateElseNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 389 6) nil 5) <Q: 1247> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(195117)	definition(x(1) 195173 pid('' 3 pos('./compiler/Annotate.oz' 393 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 195152 195160)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(195152)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(195160)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(195117)
lbl(195173)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(195062)
lbl(195187)	definition(x(8) 195228 pid('AnnotateElseNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 389 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1247> 7)
		endDefinition(195187)
lbl(195228)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195238)	definition(x(7) 195255 pid('AnnotateElseNode,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 399 6) nil 2) <Q: 1248> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(195238)
lbl(195255)	definition(x(8) 195281 pid('AnnotateElseNode,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 399 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1248> 3)
		endDefinition(195255)
lbl(195281)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195291)	definition(x(7) 195342 pid('AnnotateElseNode,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 402 6) nil 6) <Q: 1249> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1209> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1212> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1213> 5)
		endDefinition(195291)
lbl(195342)	definition(x(8) 195395 pid('AnnotateElseNode,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 402 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1249> 11)
		endDefinition(195342)
lbl(195395)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateElseNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(195433)	definition(x(7) 195445 pid('AnnotateNoElse,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 409 6) nil 3) <Q: 1250> nil)
		unify(x(1) x(2))
		return
		endDefinition(195433)
lbl(195445)	definition(x(8) 195486 pid('AnnotateNoElse,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 409 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1250> 7)
		endDefinition(195445)
lbl(195486)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195496)	definition(x(7) 195508 pid('AnnotateNoElse,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 412 6) nil 1) <Q: 1251> nil)
		getLiteral(nil x(0))
		return
		endDefinition(195496)
lbl(195508)	definition(x(8) 195534 pid('AnnotateNoElse,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 412 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1251> 3)
		endDefinition(195508)
lbl(195534)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195544)	definition(x(7) 195573 pid('AnnotateNoElse,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 415 6) nil 5) <Q: 1252> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genFastCall(<Q: 1212> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1213> 5)
		endDefinition(195544)
lbl(195573)	definition(x(8) 195626 pid('AnnotateNoElse,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 415 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1252> 11)
		endDefinition(195573)
lbl(195626)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateNoElse' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(195673)	definition(x(7) 195798 pid('AnnotateThreadNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 423 6) nil 5) <Q: 1253> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(195728)	definition(x(1) 195784 pid('' 3 pos('./compiler/Annotate.oz' 427 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 195763 195771)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(195763)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(195771)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(195728)
lbl(195784)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(195673)
lbl(195798)	definition(x(8) 195839 pid('AnnotateThreadNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 423 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1253> 7)
		endDefinition(195798)
lbl(195839)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195849)	definition(x(7) 195888 pid('AnnotateThreadNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 433 6) nil 3) <Q: 1254> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1211> 2)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1209> 7)
		endDefinition(195849)
lbl(195888)	definition(x(8) 195923 pid('AnnotateThreadNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 433 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1254> 5)
		endDefinition(195888)
lbl(195923)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateThreadNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(195965)	definition(x(7) 196115 pid('AnnotateTryNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 441 6) nil 5) <Q: 1255> nil)
		allocateL5
		inlineAt(tryStatements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1208> 8)
		inlineAt(catchStatements x(0) cache)
		inlineAt(exception x(4) cache)
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		move(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(196045)	definition(x(1) 196101 pid('' 3 pos('./compiler/Annotate.oz' 446 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 196080 196088)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(196080)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(196088)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196045)
lbl(196101)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(195965)
lbl(196115)	definition(x(8) 196156 pid('AnnotateTryNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 441 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1255> 7)
		endDefinition(196115)
lbl(196156)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(196166)	definition(x(7) 196249 pid('AnnotateTryNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 452 6) nil 3) <Q: 1256> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1211> 2)
		inlineAt(tryStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(exception x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(exception x(2) cache)
		move(y(1) x(1))
		putConstant('exception variable' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(196166)
lbl(196249)	definition(x(8) 196284 pid('AnnotateTryNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1256> 5)
		endDefinition(196249)
lbl(196284)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTryNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(196320)	definition(x(7) 196365 pid('AnnotateLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 462 6) nil 4) <Q: 1257> nil)
		allocateL3
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1208> 9)
		endDefinition(196320)
lbl(196365)	definition(x(8) 196406 pid('AnnotateLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 462 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1257> 7)
		endDefinition(196365)
lbl(196406)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(196416)	definition(x(7) 196455 pid('AnnotateLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 466 6) nil 3) <Q: 1258> nil)
		allocateL2
		inlineAt(lockVar x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1209> 7)
		endDefinition(196416)
lbl(196455)	definition(x(8) 196490 pid('AnnotateLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 466 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1258> 5)
		endDefinition(196455)
lbl(196490)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateLockNode' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(196529)	definition(x(7) 196832 pid('AnnotateClassNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 473 6) nil 4) <Q: 1259> nil)
		allocateL4
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(parents x(0) cache)
lbl(196560)	definition(x(1) 196583 pid('' 3 pos('./compiler/Annotate.oz' 477 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(196560)
lbl(196583)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(properties x(0) cache)
lbl(196597)	definition(x(1) 196620 pid('' 3 pos('./compiler/Annotate.oz' 481 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(196597)
lbl(196620)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(attributes x(0) cache)
lbl(196634)	definition(x(1) 196702 pid('' 3 pos('./compiler/Annotate.oz' 485 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 196685)
lbl(196645)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(196685)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(196634)
lbl(196702)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(features x(0) cache)
lbl(196716)	definition(x(1) 196784 pid('' 3 pos('./compiler/Annotate.oz' 494 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 196767)
lbl(196727)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(196767)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(196716)
lbl(196784)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(methods x(0) cache)
lbl(196798)	definition(x(1) 196821 pid('' 3 pos('./compiler/Annotate.oz' 503 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(196798)
lbl(196821)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(196529)
lbl(196832)	definition(x(8) 196873 pid('AnnotateClassNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 473 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1259> 7)
		endDefinition(196832)
lbl(196873)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(196883)	definition(x(7) 197084 pid('AnnotateClassNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 507 6) nil 3) <Q: 1260> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(parents x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(attributes x(0) cache)
lbl(196937)	definition(x(1) 196997 pid('' 1 pos('./compiler/Annotate.oz' 512 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 196980)
lbl(196948)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(196980)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(196937)
lbl(196997)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(197005)	definition(x(1) 197065 pid('' 1 pos('./compiler/Annotate.oz' 521 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 197048)
lbl(197016)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(197048)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(197005)
lbl(197065)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1209> 7)
		endDefinition(196883)
lbl(197084)	definition(x(8) 197119 pid('AnnotateClassNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 507 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1260> 5)
		endDefinition(197084)
lbl(197119)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClassNode' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(197164)	definition(x(7) 197385 pid('AnnotateMethod,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 535 6) nil 4) <Q: 1261> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(197201)	definition(x(1) 197242 pid('' 3 pos('./compiler/Annotate.oz' 538 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(197201)
lbl(197242)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(formalArgs x(0) cache)
lbl(197256)	definition(x(1) 197276 pid('' 2 pos('./compiler/Annotate.oz' 541 27) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(197256)
lbl(197276)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(197318)	definition(x(1) 197374 pid('' 3 pos('./compiler/Annotate.oz' 546 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 197353 197361)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(197353)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(197361)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(547)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(197318)
lbl(197374)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(197164)
lbl(197385)	definition(x(8) 197426 pid('AnnotateMethod,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 535 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1261> 7)
		endDefinition(197385)
lbl(197426)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(197436)	definition(x(7) 197549 pid('AnnotateMethod,markFirst/fast' 2 pos('./compiler/Annotate.oz' 552 6) nil 4) <Q: 1262> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(197448)	definition(x(3) 197482 pid('' 1 pos('./compiler/Annotate.oz' 554 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(197448)
lbl(197482)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1211> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1209> 7)
		endDefinition(197436)
lbl(197549)	definition(x(8) 197584 pid('AnnotateMethod,markFirst/slow' 1 pos('./compiler/Annotate.oz' 552 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1262> 5)
		endDefinition(197549)
lbl(197584)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethod' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(197620)	definition(x(7) 197852 pid('AnnotateMethodWithDesignator,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 562 6) nil 4) <Q: 1263> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(197657)	definition(x(1) 197698 pid('' 3 pos('./compiler/Annotate.oz' 565 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(197657)
lbl(197698)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		putList(y(4))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(197726)	definition(x(1) 197746 pid('' 2 pos('./compiler/Annotate.oz' 569 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(197726)
lbl(197746)	genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(197785)	definition(x(1) 197841 pid('' 3 pos('./compiler/Annotate.oz' 574 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 197820 197828)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(197820)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(197828)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(575)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(197785)
lbl(197841)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(197620)
lbl(197852)	definition(x(8) 197893 pid('AnnotateMethodWithDesignator,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 562 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1263> 7)
		endDefinition(197852)
lbl(197893)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(197903)	definition(x(7) 198064 pid('AnnotateMethodWithDesignator,markFirst/fast' 2 pos('./compiler/Annotate.oz' 580 6) nil 4) <Q: 1264> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(197915)	definition(x(3) 197949 pid('' 1 pos('./compiler/Annotate.oz' 582 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(197915)
lbl(197949)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(messageDesignator x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1211> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1209> 6)
		testBool(y(0) 198049 198051)
		inlineAt(messageDesignator x(2) cache)
		move(y(1) x(1))
		putConstant('message designator' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
lbl(198049)	deAllocateL2
		return
lbl(198051)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(197903)
lbl(198064)	definition(x(8) 198099 pid('AnnotateMethodWithDesignator,markFirst/slow' 1 pos('./compiler/Annotate.oz' 580 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1264> 5)
		endDefinition(198064)
lbl(198099)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethodWithDesignator' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(198138)	definition(x(7) 198157 pid('AnnotateMethFormal,markFirst/fast' 2 pos('./compiler/Annotate.oz' 595 6) nil 3) <Q: 1265> nil)
		inlineAt(feature x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(198138)
lbl(198157)	definition(x(8) 198192 pid('AnnotateMethFormal,markFirst/slow' 1 pos('./compiler/Annotate.oz' 595 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1265> 5)
		endDefinition(198157)
lbl(198192)	putRecord('#' [1 2 fast] x(9))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormal' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalOptional' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalWithDefault' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(198277)	definition(x(7) 198305 pid('AnnotateObjectLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 605 6) nil 5) <Q: 1266> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1208> 9)
		endDefinition(198277)
lbl(198305)	definition(x(8) 198346 pid('AnnotateObjectLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 605 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1266> 7)
		endDefinition(198305)
lbl(198346)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(198356)	definition(x(7) 198381 pid('AnnotateObjectLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 608 6) nil 4) <Q: 1267> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1209> 7)
		endDefinition(198356)
lbl(198381)	definition(x(8) 198416 pid('AnnotateObjectLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 608 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1267> 5)
		endDefinition(198381)
lbl(198416)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateObjectLockNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(198455)	definition(x(7) 198474 pid('AnnotateGetSelf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 614 6) nil 4) <Q: 1268> nil)
		inlineAt(destination x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(198455)
lbl(198474)	definition(x(8) 198515 pid('AnnotateGetSelf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 614 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1268> 7)
		endDefinition(198474)
lbl(198515)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(198525)	definition(x(7) 198544 pid('AnnotateGetSelf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 617 6) nil 3) <Q: 1269> nil)
		inlineAt(destination x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(198525)
lbl(198544)	definition(x(8) 198579 pid('AnnotateGetSelf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 617 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1269> 5)
		endDefinition(198544)
lbl(198579)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateGetSelf' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFailNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(198651)	definition(x(7) 198810 pid('AnnotateIfNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 627 6) nil 6) <Q: 1270> nil)
		allocateL4
		inlineAt(clauses x(4) cache)
lbl(198663)	definition(x(5) 198686 pid('' 3 pos('./compiler/Annotate.oz' 629 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(198663)
lbl(198686)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(198730)	definition(x(1) 198765 pid('' 3 pos('./compiler/Annotate.oz' 634 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1207> 7)
		endDefinition(198730)
lbl(198765)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(198651)
lbl(198810)	definition(x(8) 198851 pid('AnnotateIfNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 627 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1270> 7)
		endDefinition(198810)
lbl(198851)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(198861)	definition(x(7) 198962 pid('AnnotateIfNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 638 6) nil 6) <Q: 1271> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1211> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1212> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1210> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1214> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1213> 5)
		endDefinition(198861)
lbl(198962)	definition(x(8) 198997 pid('AnnotateIfNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 638 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1271> 5)
		endDefinition(198962)
lbl(198997)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIfNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(199039)	definition(x(7) 199150 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 652 6) nil 6) <Q: 1272> nil)
		allocateL1
		inlineAt(clauses x(4) cache)
lbl(199051)	definition(x(5) 199074 pid('' 3 pos('./compiler/Annotate.oz' 654 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(199051)
lbl(199074)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 8)
		inlineAt(clauses x(0) cache)
lbl(199094)	definition(x(1) 199129 pid('' 3 pos('./compiler/Annotate.oz' 658 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1207> 7)
		endDefinition(199094)
lbl(199129)	putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL1
		return
		endDefinition(199039)
lbl(199150)	definition(x(8) 199191 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 652 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1272> 7)
		endDefinition(199150)
lbl(199191)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(199201)	definition(x(7) 199267 pid('AnnotateChoicesAndDisjunctions,markFirst/fast' 2 pos('./compiler/Annotate.oz' 662 6) nil 6) <Q: 1273> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1211> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1212> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1210> 12)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		deAllocateL5
		genFastCall(<Q: 1213> 5)
		endDefinition(199201)
lbl(199267)	definition(x(8) 199302 pid('AnnotateChoicesAndDisjunctions,markFirst/slow' 1 pos('./compiler/Annotate.oz' 662 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1273> 5)
		endDefinition(199267)
lbl(199302)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoicesAndDisjunctions' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateOrNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDisNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoiceNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars guardGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(199418)	definition(x(7) 199589 pid('AnnotateClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 680 6) nil 6) <Q: 1274> nil)
		allocateL5
		inlineAt(guard x(4) cache)
		inlineAt(localVars x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(guardGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1208> 8)
		inlineAt(guardGlobalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1207> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(199519)	definition(x(1) 199575 pid('' 3 pos('./compiler/Annotate.oz' 686 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 199554 199562)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(199554)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(199562)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(687)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(199519)
lbl(199575)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(199418)
lbl(199589)	definition(x(8) 199630 pid('AnnotateClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 680 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1274> 7)
		endDefinition(199589)
lbl(199630)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(199640)	definition(x(7) 199657 pid('AnnotateClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 692 6) nil 2) <Q: 1275> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(199640)
lbl(199657)	definition(x(8) 199683 pid('AnnotateClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 692 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1275> 3)
		endDefinition(199657)
lbl(199683)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(199693)	definition(x(7) 199710 pid('AnnotateClause,getGuardGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 695 6) nil 2) <Q: 1276> nil)
		inlineAt(guardGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(199693)
lbl(199710)	definition(x(8) 199736 pid('AnnotateClause,getGuardGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 695 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1276> 3)
		endDefinition(199710)
lbl(199736)	putRecord('#' [1 2 fast] x(11))
		setConstant(getGuardGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(199746)	definition(x(7) 199859 pid('AnnotateClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 698 6) nil 7) <Q: 1277> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(199758)	definition(x(6) 199778 pid('' 1 pos('./compiler/Annotate.oz' 699 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(199758)
lbl(199778)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1209> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local clause variable' x(1))
		genFastCall(<Q: 1215> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1212> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1213> 5)
		endDefinition(199746)
lbl(199859)	definition(x(8) 199912 pid('AnnotateClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 698 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1277> 11)
		endDefinition(199859)
lbl(199912)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClause' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateValueNode' x(5))
		createVariableMove(y(46) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAtomNode' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIntNode' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(7))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFloatNode' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [use] x(2))
		setConstant(unit)
lbl(200066)	definition(x(7) 200080 pid('AnnotateVariable,setUse/fast' 1 pos('./compiler/Annotate.oz' 722 6) nil 1) <Q: 1278> nil)
		inlineAssign(use x(0) cache)
		return
		endDefinition(200066)
lbl(200080)	definition(x(8) 200106 pid('AnnotateVariable,setUse/slow' 1 pos('./compiler/Annotate.oz' 722 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1278> 3)
		endDefinition(200080)
lbl(200106)	putRecord('#' [1 2 fast] x(9))
		setConstant(setUse)
		setValue(x(8))
		setValue(x(7))
lbl(200116)	definition(x(7) 200133 pid('AnnotateVariable,getUse/fast' 1 pos('./compiler/Annotate.oz' 725 6) nil 2) <Q: 1279> nil)
		inlineAt(use x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(200116)
lbl(200133)	definition(x(8) 200159 pid('AnnotateVariable,getUse/slow' 1 pos('./compiler/Annotate.oz' 725 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1279> 3)
		endDefinition(200133)
lbl(200159)	putRecord('#' [1 2 fast] x(10))
		setConstant(getUse)
		setValue(x(8))
		setValue(x(7))
lbl(200169)	definition(x(7) 200282 pid('AnnotateVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 728 6) nil 7) <Q: 1280> nil)
		inlineAt(origin x(2) cache)
		testLiteral(x(2) user 200279)
		inlineAt(use x(2) cache)
		match(x(2) ht(200278 [onScalar(unused 200192) onScalar(wildcard 200235)]))
lbl(200192)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(200235)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(200278)	return
lbl(200279)	return
		endDefinition(200169)
lbl(200282)	definition(x(8) 200317 pid('AnnotateVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1280> 5)
		endDefinition(200282)
lbl(200317)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariable' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(50))
lbl(200357)	definition(x(7) 200467 pid('AnnotateRestrictedVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 743 6) nil 7) <Q: 1281> [y(50)])
		inlineAt(use x(2) cache)
		match(x(2) ht(200457 [onScalar(unused 200371) onScalar(wildcard 200414)]))
lbl(200371)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(200414)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(200457)	inlineAt(features x(0) cache)
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
		endDefinition(200357)
lbl(200467)	definition(x(8) 200502 pid('AnnotateRestrictedVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 743 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1281> 5)
		endDefinition(200467)
lbl(200502)	putRecord('#' [1 2 fast] x(9))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
lbl(200512)	definition(x(7) 200624 pid('AnnotateRestrictedVariable,CheckUse/fast' 2 pos('./compiler/Annotate.oz' 754 6) nil 8) <Q: 1282> [y(50)])
		match(x(0) ht(200609 [onScalar(nil 200521) onRecord('|' 2 200522)]))
lbl(200521)	return
lbl(200522)	allocateL2
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(200587 [onRecord('#' 3 200534) onRecord('#' 4 200585)]))
lbl(200534)	getVarVar(x(4) x(0))
		getVariable(x(2))
		testBI('IsFree' [x(2)]#[x(5)] 200600)
		inlineAt(printName x(5) cache)
		putRecord(pn 1 x(6))
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(x(4))
		putRecord('#' 5 x(2))
		setConstant('feature ')
		setValue(x(6))
		setConstant('.')
		setValue(x(7))
		setConstant(' imported but never used')
		putConstant('binding analysis warning' x(1))
		sendMsg(warn y(0) [coord kind msg] cache)
		branch(200600)
lbl(200585)	branch(200600)
lbl(200587)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(763)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(200600)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
lbl(200609)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(766)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(200512)
lbl(200624)	definition(x(8) 200659 pid('AnnotateRestrictedVariable,CheckUse/slow' 1 pos('./compiler/Annotate.oz' 754 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1282> 5)
		endDefinition(200624)
lbl(200659)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: CheckUse>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		move(y(50) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(200698)	definition(x(7) 200760 pid('AnnotateVariableOccurrence,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 771 6) nil 4) <Q: 1283> nil)
		allocateL4
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 200739 200747)
		unify(y(0) y(1))
		deAllocateL4
		return
lbl(200739)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(200747)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(772)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(200698)
lbl(200760)	definition(x(8) 200801 pid('AnnotateVariableOccurrence,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 771 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1283> 7)
		endDefinition(200760)
lbl(200801)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(200811)	definition(x(7) 200882 pid('AnnotateVariableOccurrence,markFirst/fast' 2 pos('./compiler/Annotate.oz' 776 6) nil 2) <Q: 1284> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getUse x(1) 1 cache)
		match(y(0) ht(200865 [onScalar(unused 200835) onScalar(wildcard 200850)]))
lbl(200835)	inlineAt(variable x(1) cache)
		putConstant(wildcard x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(200850)	inlineAt(variable x(1) cache)
		putConstant(linear x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(200865)	inlineAt(variable x(1) cache)
		putConstant(multiple x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(200811)
lbl(200882)	definition(x(8) 200917 pid('AnnotateVariableOccurrence,markFirst/slow' 1 pos('./compiler/Annotate.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1284> 5)
		endDefinition(200882)
lbl(200917)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariableOccurrence' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternVariableOccurrence' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(format 1 y(53))
		setConstant(indent)
		putRecord(format 1 y(54))
		setConstant(exdent)
		putRecord(format 1 y(55))
		setConstant(push)
		putRecord(format 1 y(56))
		setConstant(pop)
		putList(x(1))
		setConstant(32)
		setConstant(nil)
		putRecord(glue 1 x(0))
		setValue(x(1))
		putRecord(format 1 y(57))
		setValue(x(0))
		putRecord(format 1 y(58))
		setConstant(break)
lbl(201028)	definition(x(7) 201070 pid('LI' 4 pos('./compiler/CoreLanguage.oz' 50 3) nil 4) <Q: 1285> nil)
		getRecord(list 2 x(3))
		unifyVariable(x(3))
		unifyValue(x(1))
lbl(201042)	definition(x(1) 201062 pid('' 2 pos('./compiler/CoreLanguage.oz' 51 19) nil 3) unit [x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(201042)
lbl(201062)	move(x(3) x(2))
		genFastCall(<P: 29> 7)
		endDefinition(201028)
lbl(201070)	definition(x(7) 201254 pid('LI2' 5 pos('./compiler/CoreLanguage.oz' 53 3) nil 6) <Q: 1286> nil)
		match(x(0) ht(201239 [onScalar(nil 201079) onRecord('|' 2 201086)]))
lbl(201079)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(201086)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(output2 x(5) 3 cache)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(3))
lbl(201123)	definition(x(1) 201204 pid('' 3 pos('./compiler/CoreLanguage.oz' 57 5) nil 6) unit [y(2)])
		shallowGuard(201191)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(201139)	shallowThen
		allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(201191)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(201123)
lbl(201204)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(6))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(y(1))
		move(y(7) x(0))
		deAllocateL8
		genFastCall(<P: 28> 5)
lbl(201239)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(65)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(201070)
lbl(201254)	definition(x(7) 201272 pid('CheckOutput' 3 pos('./compiler/CoreLanguage.oz' 68 3) nil 5) <Q: 1287> nil)
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(201254)
lbl(201272)	definition(x(7) 201354 pid('OutputAttrFeat' 4 pos('./compiler/CoreLanguage.oz' 72 3) nil 5) <Q: 1288> nil)
		testRecord(x(0) '#' 2 201337)
lbl(201283)	allocateL4
		getVarVar(x(4) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		getRecord('#' 3 x(3))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(outputEscaped2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
lbl(201337)	move(x(0) x(4))
		move(x(1) x(0))
		move(x(3) x(1))
		tailSendMsg(outputEscaped2 x(4) 3 cache)
		endDefinition(201272)
lbl(201354)	definition(x(7) 201408 pid('FilterUnitsToVS' 2 pos('./compiler/CoreLanguage.oz' 81 3) nil 3) <Q: 1289> nil)
		match(x(0) ht(201393 [onScalar(nil 201363) onRecord('|' 2 201367)]))
lbl(201363)	getLiteral(nil x(1))
		return
lbl(201367)	getVarVar(x(0) x(2))
		testLiteral(x(0) unit 201380)
lbl(201374)	move(x(2) x(0))
		genFastCall(<Q: 1289> 5)
lbl(201380)	getRecord('#' 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1289> 5)
lbl(201393)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(87)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(201354)
lbl(201408)	definition(x(7) 201494 pid('FlattenSequenceSub' 3 pos('./compiler/CoreLanguage.oz' 91 6) nil 3) <Q: 1290> nil)
		match(x(0) ht(201446 [onScalar(nil 201417) onRecord('|' 2 201421)]))
lbl(201417)	unify(x(1) x(2))
		return
lbl(201421)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1290> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1290> 7)
lbl(201446)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isRedundant y(0) 1 cache)
		testBool(y(3) 201473 201481)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(201473)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(201481)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(201408)
lbl(201494)	definition(x(7) 201544 pid('GetFirst' 2 pos('./compiler/CoreLanguage.oz' 109 6) nil 2) <Q: 1291> nil)
		match(x(0) ht(201538 [onScalar(nil 201503) onRecord('|' 2 201507)]))
lbl(201503)	getLiteral(nil x(1))
		return
lbl(201507)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1291> 4)
		testLiteral(y(2) nil 201533)
lbl(201524)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1291> 5)
lbl(201533)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(201538)	unify(x(1) x(0))
		return
		endDefinition(201494)
lbl(201544)	definition(x(7) 201575 pid('SetPointers' 3 pos('./compiler/CoreLanguage.oz' 120 6) nil 4) <Q: 1292> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		move(y(0) x(0))
		sendMsg(setNext x(3) 1 cache)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(201544)
lbl(201575)	definition(x(8) 201632 pid('LinkList' 1 pos('./compiler/CoreLanguage.oz' 125 6) nil 4) <Q: 1293> [x(7)])
		shallowGuard(201619)
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(201589)	shallowThen
		allocateL1
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setNext x(1) 1 cache)
lbl(201619)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(201575)
lbl(201632)	createVariable(y(59))
lbl(201634)	definition(x(0) 201721 pid('FlattenSequence' 2 pos('./compiler/CoreLanguage.oz' 130 6) nil 3) <Q: 1294> [y(59)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1290> 6)
		testLiteral(y(2) nil 201709)
lbl(201659)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1291> 4)
		testLiteral(y(2) nil 201701)
lbl(201672)	getList(y(1))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		putConstant(unit x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		branch(201712)
lbl(201701)	getList(y(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		branch(201712)
lbl(201709)	unify(y(1) y(2))
lbl(201712)	move(y(1) x(0))
		deAllocateL3
		genFastCall(<Q: 1293> 3)
		endDefinition(201634)
lbl(201721)	move(y(1) x(1))
		inlineDot(x(1) statement x(7) cache)
		move(y(2) x(2))
		inlineDot(x(2) statement x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(8))
		setValue(x(8))
		putRecord('attr' [coord next] x(8))
		setConstant(unit)
		setConstant(unit)
lbl(201765)	definition(x(9) 201774 pid('Statement,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 146 6) nil 1) <Q: 1295> nil)
		return
		endDefinition(201765)
lbl(201774)	definition(x(10) 201800 pid('Statement,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 146 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1295> 3)
		endDefinition(201774)
lbl(201800)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(10))
		setValue(x(9))
lbl(201810)	definition(x(9) 201822 pid('Statement,isRedundant/fast' 1 pos('./compiler/CoreLanguage.oz' 149 6) nil 1) <Q: 1296> nil)
		getLiteral(false x(0))
		return
		endDefinition(201810)
lbl(201822)	definition(x(10) 201848 pid('Statement,isRedundant/slow' 1 pos('./compiler/CoreLanguage.oz' 149 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1296> 3)
		endDefinition(201822)
lbl(201848)	putRecord('#' [1 2 fast] x(12))
		setConstant(isRedundant)
		setValue(x(10))
		setValue(x(9))
lbl(201858)	definition(x(9) 201872 pid('Statement,setNext/fast' 1 pos('./compiler/CoreLanguage.oz' 152 6) nil 1) <Q: 1297> nil)
		inlineAssign(next x(0) cache)
		return
		endDefinition(201858)
lbl(201872)	definition(x(10) 201898 pid('Statement,setNext/slow' 1 pos('./compiler/CoreLanguage.oz' 152 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1297> 3)
		endDefinition(201872)
lbl(201898)	putRecord('#' [1 2 fast] x(13))
		setConstant(setNext)
		setValue(x(10))
		setValue(x(9))
lbl(201908)	definition(x(9) 201925 pid('Statement,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 155 6) nil 2) <Q: 1298> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(201908)
lbl(201925)	definition(x(10) 201951 pid('Statement,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 155 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1298> 3)
		endDefinition(201925)
lbl(201951)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 4 x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(0) y(8))
		move(x(7) x(0))
		move(x(9) x(1))
		move(x(8) x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Statement' x(5))
		createVariableMove(y(60) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) typeOf x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) typeOf x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(9))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [arg res value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202052)	definition(x(7) 202088 pid('TypeOf,init/fast' 2 pos('./compiler/CoreLanguage.oz' 163 6) nil 2) <Q: 1299> nil)
		inlineAssign(arg x(0) cache)
		inlineAssign(res x(1) cache)
		putList(x(1))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(0))
		setValue(x(1))
		inlineAssign(value x(0) cache)
		return
		endDefinition(202052)
lbl(202088)	definition(x(9) 202123 pid('TypeOf,init/slow' 1 pos('./compiler/CoreLanguage.oz' 163 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1299> 5)
		endDefinition(202088)
lbl(202123)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202133)	definition(x(7) 202218 pid('TypeOf,output/fast' 2 pos('./compiler/CoreLanguage.oz' 168 6) nil 6) <Q: 1300> [y(0)])
		allocateL3
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyLiteral('   % typeof ')
		unifyVariable(y(1))
		unifyVariable(x(2))
		inlineAt(res x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		call(x(4) 4)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(202133)
lbl(202218)	definition(x(9) 202253 pid('TypeOf,output/slow' 1 pos('./compiler/CoreLanguage.oz' 168 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1300> 5)
		endDefinition(202218)
lbl(202253)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('TypeOf' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) stepPoint x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) stepPoint x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(10))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [kind statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(202348)	definition(x(7) 202394 pid('StepPoint,init/fast' 3 pos('./compiler/CoreLanguage.oz' 179 6) nil 3) <Q: 1301> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(2) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL3
		return
		endDefinition(202348)
lbl(202394)	definition(x(9) 202435 pid('StepPoint,init/slow' 1 pos('./compiler/CoreLanguage.oz' 179 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1301> 7)
		endDefinition(202394)
lbl(202435)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202445)	definition(x(7) 202473 pid('StepPoint,output/fast' 2 pos('./compiler/CoreLanguage.oz' 184 6) nil 5) <Q: 1302> [y(58)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1285> 9)
		endDefinition(202445)
lbl(202473)	definition(x(9) 202508 pid('StepPoint,output/slow' 1 pos('./compiler/CoreLanguage.oz' 184 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1302> 5)
		endDefinition(202473)
lbl(202508)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('StepPoint' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) declaration x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) declaration x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(11))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(202600)	definition(x(7) 202644 pid('Declaration,init/fast' 3 pos('./compiler/CoreLanguage.oz' 193 6) nil 3) <Q: 1303> nil)
		allocateL2
		inlineAssign(localVars x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(202600)
lbl(202644)	definition(x(9) 202685 pid('Declaration,init/slow' 1 pos('./compiler/CoreLanguage.oz' 193 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1303> 7)
		endDefinition(202644)
lbl(202685)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202695)	definition(x(7) 202769 pid('Declaration,output/fast' 2 pos('./compiler/CoreLanguage.oz' 198 6) nil 5) <Q: 1304> [y(57) y(53) y(54) y(58)])
		allocateL2
		getRecord('#' 13 x(1))
		unifyLiteral('local')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(0))
		unifyLiteral('in')
		unifyValue(g(1))
		unifyValVar(g(3) y(0))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(localVars x(4) cache)
		move(x(0) y(1))
		move(x(4) x(0))
		move(g(0) x(1))
		putConstant(true x(2))
		genFastCall(<Q: 1285> 8)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1285> 9)
		endDefinition(202695)
lbl(202769)	definition(x(9) 202804 pid('Declaration,output/slow' 1 pos('./compiler/CoreLanguage.oz' 198 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1304> 5)
		endDefinition(202769)
lbl(202804)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Declaration' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) skipNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) skipNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(12))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(202888)	definition(x(7) 202902 pid('SkipNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 207 6) nil 1) <Q: 1305> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(202888)
lbl(202902)	definition(x(9) 202928 pid('SkipNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 207 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1305> 3)
		endDefinition(202902)
lbl(202928)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202938)	definition(x(7) 202950 pid('SkipNode,isRedundant/fast' 1 pos('./compiler/CoreLanguage.oz' 210 6) nil 1) <Q: 1306> nil)
		getLiteral(true x(0))
		return
		endDefinition(202938)
lbl(202950)	definition(x(9) 202976 pid('SkipNode,isRedundant/slow' 1 pos('./compiler/CoreLanguage.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1306> 3)
		endDefinition(202950)
lbl(202976)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRedundant)
		setValue(x(9))
		setValue(x(7))
lbl(202986)	definition(x(7) 202998 pid('SkipNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 213 6) nil 2) <Q: 1307> nil)
		getLiteral('skip skip' x(1))
		return
		endDefinition(202986)
lbl(202998)	definition(x(9) 203033 pid('SkipNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 213 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1307> 5)
		endDefinition(202998)
lbl(203033)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		move(y(59) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('SkipNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equation x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equation x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(13))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [left right] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(203130)	definition(x(7) 203154 pid('Equation,init/fast' 3 pos('./compiler/CoreLanguage.oz' 222 6) nil 3) <Q: 1308> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(203130)
lbl(203154)	definition(x(9) 203195 pid('Equation,init/slow' 1 pos('./compiler/CoreLanguage.oz' 222 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1308> 7)
		endDefinition(203154)
lbl(203195)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(203205)	definition(x(7) 203262 pid('Equation,output/fast' 2 pos('./compiler/CoreLanguage.oz' 227 6) nil 4) <Q: 1309> nil)
		allocateL3
		getRecord('#' 5 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(203205)
lbl(203262)	definition(x(9) 203297 pid('Equation,output/slow' 1 pos('./compiler/CoreLanguage.oz' 227 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1309> 5)
		endDefinition(203262)
lbl(203297)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Equation' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) construction x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) construction x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(14))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(<U: ooFreeFlag>)
		putRecord('#' 2 x(8))
		setValue(y(3))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(203407)	definition(x(8) 203442 pid('Construction,init/fast' 3 pos('./compiler/CoreLanguage.oz' 237 6) nil 3) <Q: 1310> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) construction x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(203407)
lbl(203442)	definition(x(10) 203483 pid('Construction,init/slow' 1 pos('./compiler/CoreLanguage.oz' 237 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1310> 7)
		endDefinition(203442)
lbl(203483)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(203493)	definition(x(8) 203512 pid('Construction,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 243 6) nil 2) <Q: 1311> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(203493)
lbl(203512)	definition(x(10) 203538 pid('Construction,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 243 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1311> 3)
		endDefinition(203512)
lbl(203538)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(203548)	definition(x(8) 203560 pid('Construction,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 246 6) nil 1) <Q: 1312> nil)
		getLiteral(false x(0))
		return
		endDefinition(203548)
lbl(203560)	definition(x(10) 203586 pid('Construction,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1312> 3)
		endDefinition(203560)
lbl(203586)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(203596)	definition(x(8) 203608 pid('Construction,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 249 6) nil 1) <Q: 1313> nil)
		getLiteral(true x(0))
		return
		endDefinition(203596)
lbl(203608)	definition(x(10) 203634 pid('Construction,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 249 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1313> 3)
		endDefinition(203608)
lbl(203634)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(203644)	definition(x(8) 204061 pid('Construction,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 252 6) nil 4) <Q: 1314> [y(55) y(56) y(57)])
		allocateL(11)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 7 x(1))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(1))
		unifyVariable(y(2))
		unifyLiteral(')')
		unifyValue(g(1))
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(args x(0) cache)
		testList(x(0) 204004)
lbl(203699)	getVarVar(x(0) y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 203776)
lbl(203709)	getVarVar(x(3) y(6))
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 y(6) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(7))
		unifyLiteral(': ')
		unifyValue(y(9))
		getRecord('#' 2 x(1))
		unifyValue(y(8))
		unifyValue(y(10))
		branch(203808)
lbl(203776)	move(x(0) x(3))
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyValue(y(6))
		unifyLiteral(nil)
lbl(203808)	putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(0))
lbl(203816)	definition(x(1) 203980 pid('' 3 pos('./compiler/CoreLanguage.oz' 265 9) nil 6) unit [y(3)])
		shallowGuard(203967)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203832)	shallowThen
		testRecord(x(1) '#' 2 203916)
lbl(203838)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203916)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203967)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(265)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203816)
lbl(203980)	moveMoveYXYX(y(4) x(0) y(5) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(1))
		unifyVariable(x(1))
		unifyValue(g(2))
		move(y(6) x(0))
		genFastCall(<P: 28> 4)
		branch(204010)
lbl(204004)	getLiteral(nil y(0))
		getLiteral(nil y(1))
lbl(204010)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 204043 204048)
		inlineAt(args x(0) cache)
		testLiteral(x(0) nil 204033)
lbl(204028)	getLiteral('...' y(2))
		deAllocateL
		return
lbl(204033)	getRecord('#' 2 y(2))
		unifyValue(g(2))
		unifyLiteral('...')
		deAllocateL
		return
lbl(204043)	getLiteral(nil y(2))
		deAllocateL
		return
lbl(204048)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(280)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203644)
lbl(204061)	definition(x(10) 204102 pid('Construction,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 252 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1314> 7)
		endDefinition(204061)
lbl(204102)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('Construction' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'definition' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'definition' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(15))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [allVariables designator formalArgs isStateUsing printName procFlags statements toCopy] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [predicateRef] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(204212)	definition(x(7) 204282 pid('Definition,init/fast' 6 pos('./compiler/CoreLanguage.oz' 294 6) nil 6) <Q: 1315> nil)
		allocateL4
		inlineAssign(designator x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(3) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(isStateUsing x(0) cache)
		move(y(1) x(0))
		inlineAssign(procFlags x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(204212)
lbl(204282)	definition(x(9) 204341 pid('Definition,init/slow' 1 pos('./compiler/CoreLanguage.oz' 294 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1315> 13)
		endDefinition(204282)
lbl(204341)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204351)	definition(x(7) 204365 pid('Definition,setAllVariables/fast' 1 pos('./compiler/CoreLanguage.oz' 303 6) nil 1) <Q: 1316> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(204351)
lbl(204365)	definition(x(9) 204391 pid('Definition,setAllVariables/slow' 1 pos('./compiler/CoreLanguage.oz' 303 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1316> 3)
		endDefinition(204365)
lbl(204391)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(7))
lbl(204401)	definition(x(7) 204415 pid('Definition,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 306 6) nil 1) <Q: 1317> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(204401)
lbl(204415)	definition(x(9) 204441 pid('Definition,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 306 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1317> 3)
		endDefinition(204415)
lbl(204441)	putRecord('#' [1 2 fast] x(12))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(204451)	definition(x(7) 204667 pid('Definition,output/fast' 2 pos('./compiler/CoreLanguage.oz' 309 6) nil 5) <Q: 1318> [y(55) y(56) y(53) y(58) y(54) y(0) y(57)])
		allocateL6
		getRecord('#' 15 x(1))
		unifyVariable(x(3))
		unifyLiteral('{')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral('}')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(procFlags x(4) cache)
lbl(204494)	definition(x(1) 204532 pid('' 3 pos('./compiler/CoreLanguage.oz' 311 3) nil 5) unit [g(5)])
		getRecord('#' 3 x(2))
		unifyValVar(x(0) x(3))
		unifyLiteral(' ')
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(204494)
lbl(204532)	move(x(0) y(5))
		move(x(4) x(0))
		putConstant('proc ' x(2))
		genFastCall(<P: 30> 8)
		inlineAt(designator x(3) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(3) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		match(x(0) ht(204599 [onScalar(nil 204571) onRecord('|' 2 204576)]))
lbl(204571)	getLiteral(nil y(1))
		branch(204612)
lbl(204576)	getRecord('#' 2 y(1))
		unifyValVar(g(6) x(3))
		inlineAt(formalArgs x(0) cache)
		move(g(6) x(1))
		move(y(5) x(2))
		genFastCall(<Q: 1285> 8)
		branch(204612)
lbl(204599)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(316)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(204612)	getSelf(x(2))
		createVariableMove(y(0) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		testBool(y(0) 204632 204637)
		getLiteral('   % clause body' y(2))
		branch(204648)
lbl(204632)	getLiteral(nil y(2))
		branch(204648)
lbl(204637)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(317)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(204648)	inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1285> 9)
		endDefinition(204451)
lbl(204667)	definition(x(9) 204702 pid('Definition,output/slow' 1 pos('./compiler/CoreLanguage.oz' 309 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1318> 5)
		endDefinition(204667)
lbl(204702)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(204712)	definition(x(7) 204724 pid('Definition,isClauseBody/fast' 1 pos('./compiler/CoreLanguage.oz' 321 6) nil 1) <Q: 1319> nil)
		getLiteral(false x(0))
		return
		endDefinition(204712)
lbl(204724)	definition(x(9) 204750 pid('Definition,isClauseBody/slow' 1 pos('./compiler/CoreLanguage.oz' 321 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1319> 3)
		endDefinition(204724)
lbl(204750)	putRecord('#' [1 2 fast] x(14))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant(nil x(4))
		putConstant('Definition' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) functionDefinition x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) functionDefinition x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(16))
		setValue(x(8))
		putList(x(8))
		setValue(y(14))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FunctionDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) clauseBody x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) clauseBody x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(17))
		setValue(x(8))
		putList(x(8))
		setValue(y(14))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(204909)	definition(x(7) 204921 pid('ClauseBody,isClauseBody/fast' 1 pos('./compiler/CoreLanguage.oz' 333 6) nil 1) <Q: 1320> nil)
		getLiteral(true x(0))
		return
		endDefinition(204909)
lbl(204921)	definition(x(9) 204947 pid('ClauseBody,isClauseBody/slow' 1 pos('./compiler/CoreLanguage.oz' 333 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1320> 3)
		endDefinition(204921)
lbl(204947)	putRecord('#' [1 2 fast] x(10))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ClauseBody' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) application x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) application x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(18))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [actualArgs designator] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [codeGenMakeEquateLiteral] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(205046)	definition(x(7) 205070 pid('Application,init/fast' 3 pos('./compiler/CoreLanguage.oz' 343 6) nil 3) <Q: 1321> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(actualArgs x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(205046)
lbl(205070)	definition(x(9) 205111 pid('Application,init/slow' 1 pos('./compiler/CoreLanguage.oz' 343 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1321> 7)
		endDefinition(205070)
lbl(205111)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		createVariable(y(17))
lbl(205123)	definition(x(7) 205592 pid('Application,output/fast' 2 pos('./compiler/CoreLanguage.oz' 348 6) nil 5) <Q: 1322> [y(17)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1287> 6)
		testBool(y(2) 205157 205579)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(205157)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		match(y(3) ht(205570 [onScalar('`ooExch`' 205183) onScalar('`@`' 205270) onScalar('`~`' 205282) onScalar('`<-`' 205294) onScalar('`,`' 205306) onScalar('`==`' 205318) onScalar('`<`' 205330) onScalar('`>`' 205342) onScalar('`=<`' 205354) onScalar('`>=`' 205366) onScalar('`\\=`' 205378) onScalar('`div`' 205390) onScalar('`mod`' 205402) onScalar('`+`' 205414) onScalar('`-`' 205426) onScalar('`*`' 205438) onScalar('`/`' 205450) onScalar('`.`' 205462) onScalar('`^`' 205474) onScalar('`::`' 205486) onScalar('`:::`' 205498) onScalar('`::R`' 205510) onScalar('`:::R`' 205522) onScalar('`Raise`' 205534)]))
lbl(205183)	putList(x(1))
		setVariable(x(4))
		setConstant(nil)
		putList(x(0))
		setVariable(y(3))
		setValue(x(1))
		putList(x(3))
		setVariable(y(2))
		setValue(x(0))
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 8 y(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(1))
		unifyLiteral(' <- ')
		unifyVariable(y(4))
		unifyVariable(x(2))
		unifyVariable(y(5))
		unifyVariable(y(6))
		move(y(0) x(0))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(5) x(2))
		sendMsg(output2 y(2) 3 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
lbl(205270)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('@' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(205282)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('~' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(205294)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' <- ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(205306)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(', ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(205318)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' == ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205330)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' < ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205342)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' > ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205354)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' =< ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205366)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' >= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205378)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' \\= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205390)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' div ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205402)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' mod ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205414)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' + ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205426)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' - ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205438)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' * ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205450)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' / ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205462)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('.' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205474)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('^' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(205486)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(205498)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(205510)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(205522)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(205534)	putList(x(3))
		setVariable(x(4))
		setConstant(nil)
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 4 y(1))
		unifyLiteral('raise ')
		unifyVariable(x(1))
		unifyLiteral(' end')
		unifyVariable(x(2))
		move(y(0) x(0))
		deAllocateL7
		tailSendMsg(output2 x(4) 3 cache)
lbl(205570)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(205579)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(349)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(205123)
lbl(205592)	definition(x(9) 205627 pid('Application,output/slow' 1 pos('./compiler/CoreLanguage.oz' 348 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1322> 5)
		endDefinition(205592)
lbl(205627)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(205637)	definition(x(7) 205731 pid('Application,OutputApplication/fast' 2 pos('./compiler/CoreLanguage.oz' 387 6) nil 5) <Q: 1323> [y(55) y(56) y(57)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('{')
		unifyValVar(g(0) x(1))
		unifyVariable(y(0))
		unifyLiteral('}')
		unifyValVar(g(1) x(2))
		unifyVariable(y(1))
		inlineAt(designator x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		match(x(0) ht(205716 [onScalar(nil 205684) onRecord('|' 2 205692)]))
lbl(205684)	getLiteral(nil y(1))
		getLiteral(nil y(0))
		deAllocateL3
		return
lbl(205692)	getRecord('#' 2 y(0))
		unifyValVar(g(2) x(4))
		inlineAt(actualArgs x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1286> 11)
lbl(205716)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(391)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(205637)
lbl(205731)	definition(x(9) 205766 pid('Application,OutputApplication/slow' 1 pos('./compiler/CoreLanguage.oz' 387 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1323> 5)
		endDefinition(205731)
lbl(205766)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: OutputApplication>)
		setValue(x(9))
		setValue(x(7))
lbl(205776)	definition(x(7) 205852 pid('Application,OutputPrefixExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 393 6) nil 6) <Q: 1324> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 6 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(205776)
lbl(205852)	definition(x(9) 205893 pid('Application,OutputPrefixExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 393 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1324> 7)
		endDefinition(205852)
lbl(205893)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(205903)	definition(x(7) 205977 pid('Application,OutputInfixStatement/fast' 3 pos('./compiler/CoreLanguage.oz' 397 6) nil 6) <Q: 1325> nil)
		allocateL4
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		putList(x(3))
		setVariable(x(4))
		setValue(x(5))
		inlineAt(actualArgs x(5) cache)
		unify(x(5) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(205903)
lbl(205977)	definition(x(9) 206018 pid('Application,OutputInfixStatement/slow' 1 pos('./compiler/CoreLanguage.oz' 397 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1325> 7)
		endDefinition(205977)
lbl(206018)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(206028)	definition(x(7) 206128 pid('Application,OutputInfixExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 401 6) nil 7) <Q: 1326> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(0) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(1) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(206028)
lbl(206128)	definition(x(9) 206169 pid('Application,OutputInfixExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 401 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1326> 7)
		endDefinition(206128)
lbl(206169)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(206179)	definition(x(7) 206253 pid('Application,OutputFdInStatement/fast' 3 pos('./compiler/CoreLanguage.oz' 406 6) nil 6) <Q: 1327> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(206179)
lbl(206253)	definition(x(9) 206294 pid('Application,OutputFdInStatement/slow' 1 pos('./compiler/CoreLanguage.oz' 406 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1327> 7)
		endDefinition(206253)
lbl(206294)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(206304)	definition(x(7) 206404 pid('Application,OutputFdInExpression/fast' 3 pos('./compiler/CoreLanguage.oz' 410 6) nil 7) <Q: 1328> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(1) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(206304)
lbl(206404)	definition(x(9) 206445 pid('Application,OutputFdInExpression/slow' 1 pos('./compiler/CoreLanguage.oz' 410 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1328> 7)
		endDefinition(206404)
lbl(206445)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 8 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(x(8) x(0))
		move(x(7) x(1))
		move(y(17) x(6))
		putConstant('Application' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(19))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter consequent] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [noBoolShared] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(206554)	definition(x(7) 206583 pid('BoolCase,init/fast' 4 pos('./compiler/CoreLanguage.oz' 422 6) nil 4) <Q: 1329> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(consequent x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(206554)
lbl(206583)	definition(x(9) 206630 pid('BoolCase,init/slow' 1 pos('./compiler/CoreLanguage.oz' 422 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1329> 9)
		endDefinition(206583)
lbl(206630)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(206640)	definition(x(7) 206720 pid('BoolCase,output/fast' 2 pos('./compiler/CoreLanguage.oz' 428 6) nil 4) <Q: 1330> [y(53) y(58) y(54)])
		allocateL3
		getRecord('#' 11 x(1))
		unifyLiteral('if ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValVar(g(1) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(consequent x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(206640)
lbl(206720)	definition(x(9) 206755 pid('BoolCase,output/slow' 1 pos('./compiler/CoreLanguage.oz' 428 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1330> 5)
		endDefinition(206720)
lbl(206755)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('BoolCase' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(20))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(206836)	definition(x(8) 206861 pid('BoolClause,init/fast' 1 pos('./compiler/CoreLanguage.oz' 438 6) nil 2) <Q: 1331> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(206836)
lbl(206861)	definition(x(9) 206887 pid('BoolClause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 438 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1331> 3)
		endDefinition(206861)
lbl(206887)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(206897)	definition(x(8) 206925 pid('BoolClause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 441 6) nil 5) <Q: 1332> [y(58)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1285> 9)
		endDefinition(206897)
lbl(206925)	definition(x(9) 206960 pid('BoolClause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 441 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1332> 5)
		endDefinition(206925)
lbl(206960)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('BoolClause' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(21))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter clauses] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(207054)	definition(x(7) 207083 pid('PatternCase,init/fast' 4 pos('./compiler/CoreLanguage.oz' 450 6) nil 4) <Q: 1333> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(clauses x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(207054)
lbl(207083)	definition(x(9) 207130 pid('PatternCase,init/slow' 1 pos('./compiler/CoreLanguage.oz' 450 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1333> 9)
		endDefinition(207083)
lbl(207130)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(207140)	definition(x(7) 207220 pid('PatternCase,output/fast' 2 pos('./compiler/CoreLanguage.oz' 456 6) nil 4) <Q: 1334> [y(58)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('case ')
		unifyVariable(x(1))
		unifyLiteral(' of ')
		unifyVariable(y(0))
		unifyValVar(g(0) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(clauses x(0) cache)
		putRecord('#' 2 x(1))
		setValue(g(0))
		setConstant('[] ')
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1285> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(207140)
lbl(207220)	definition(x(9) 207255 pid('PatternCase,output/slow' 1 pos('./compiler/CoreLanguage.oz' 456 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1334> 5)
		endDefinition(207220)
lbl(207255)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('PatternCase' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(22))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars pattern statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(207343)	definition(x(8) 207381 pid('PatternClause,init/fast' 3 pos('./compiler/CoreLanguage.oz' 467 6) nil 3) <Q: 1335> nil)
		allocateL1
		inlineAssign(localVars x(0) cache)
		inlineAssign(pattern x(1) cache)
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(207343)
lbl(207381)	definition(x(9) 207422 pid('PatternClause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 467 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1335> 7)
		endDefinition(207381)
lbl(207422)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207432)	definition(x(8) 207498 pid('PatternClause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 472 6) nil 5) <Q: 1336> [y(55) y(56) y(57) y(53) y(58) y(54)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyValVar(g(0) x(2))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('then')
		unifyValVar(g(3) x(3))
		unifyValVar(g(4) y(0))
		unifyValue(g(5))
		inlineAt(pattern x(4) cache)
		inlineAt(localVars x(1) cache)
		move(x(0) y(1))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(statements x(0) cache)
		move(g(4) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1285> 9)
		endDefinition(207432)
lbl(207498)	definition(x(9) 207533 pid('PatternClause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 472 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1336> 5)
		endDefinition(207498)
lbl(207533)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('PatternClause' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) recordPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) recordPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(23))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(<U: ooFreeFlag>)
		putRecord('#' 2 x(8))
		setValue(y(3))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(207643)	definition(x(8) 207678 pid('RecordPattern,init/fast' 3 pos('./compiler/CoreLanguage.oz' 483 6) nil 3) <Q: 1337> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) recordPattern x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(207643)
lbl(207678)	definition(x(10) 207719 pid('RecordPattern,init/slow' 1 pos('./compiler/CoreLanguage.oz' 483 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1337> 7)
		endDefinition(207678)
lbl(207719)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(207729)	definition(x(8) 207748 pid('RecordPattern,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 489 6) nil 2) <Q: 1338> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(207729)
lbl(207748)	definition(x(10) 207774 pid('RecordPattern,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 489 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1338> 3)
		endDefinition(207748)
lbl(207774)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(207784)	definition(x(8) 207796 pid('RecordPattern,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 492 6) nil 1) <Q: 1339> nil)
		getLiteral(false x(0))
		return
		endDefinition(207784)
lbl(207796)	definition(x(10) 207822 pid('RecordPattern,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 492 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1339> 3)
		endDefinition(207796)
lbl(207822)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(207832)	definition(x(8) 207844 pid('RecordPattern,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 495 6) nil 1) <Q: 1340> nil)
		getLiteral(true x(0))
		return
		endDefinition(207832)
lbl(207844)	definition(x(10) 207870 pid('RecordPattern,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 495 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1340> 3)
		endDefinition(207844)
lbl(207870)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(207880)	definition(x(8) 208295 pid('RecordPattern,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 498 6) nil 4) <Q: 1341> [y(57) y(55) y(56)])
		allocateL(12)
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(2) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariable(y(4))
		testList(x(2) 208210)
lbl(207911)	getVarVar(x(2) y(5))
		createVariable(y(6))
		testRecord(x(2) '#' 2 207985)
lbl(207921)	getVarVar(x(3) y(7))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(2) x(0))
		createVariableMove(y(10) x(1))
		createVariableMove(y(11) x(2))
		sendMsg(output2 y(7) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(8))
		unifyLiteral(': ')
		unifyValue(y(10))
		getRecord('#' 2 x(1))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(208014)
lbl(207985)	move(x(2) x(3))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyValue(y(7))
		unifyLiteral(nil)
lbl(208014)	putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(1))
lbl(208022)	definition(x(1) 208186 pid('' 3 pos('./compiler/CoreLanguage.oz' 510 9) nil 6) unit [y(2)])
		shallowGuard(208173)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(208038)	shallowThen
		testRecord(x(1) '#' 2 208122)
lbl(208044)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(208122)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(208173)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(510)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(208022)
lbl(208186)	moveMoveYXYX(y(5) x(0) y(6) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		branch(208216)
lbl(208210)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(208216)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 208277 208282)
		testLiteral(y(4) nil 208267)
lbl(208262)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(208267)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(208277)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(208282)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(207880)
lbl(208295)	definition(x(10) 208336 pid('RecordPattern,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 498 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1341> 7)
		endDefinition(208295)
lbl(208336)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(208346)	definition(x(8) 208772 pid('RecordPattern,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 531 6) nil 5) <Q: 1342> [y(57) y(55) y(56)])
		allocateL(13)
		getRecord('#' 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(3) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariable(y(4))
		testList(x(3) 208687)
lbl(208377)	getVarVar(x(3) y(5))
		move(x(1) y(6))
		createVariable(y(7))
		testRecord(x(3) '#' 2 208456)
lbl(208390)	getVarVar(x(3) y(8))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 x(3) 3 cache)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		createVariableMove(y(11) x(2))
		createVariableMove(y(12) x(3))
		sendMsg(outputPattern2 y(8) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(9))
		unifyLiteral(': ')
		unifyValue(y(11))
		getRecord('#' 2 x(1))
		unifyValue(y(10))
		unifyValue(y(12))
		branch(208485)
lbl(208456)	move(x(3) x(4))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(9))
		getList(x(0))
		unifyValue(y(8))
		unifyLiteral(nil)
lbl(208485)	putRecord('#' 2 x(3))
		setVariable(y(8))
		setValue(y(1))
lbl(208493)	definition(x(1) 208663 pid('' 3 pos('./compiler/CoreLanguage.oz' 543 9) nil 6) unit [y(2) y(6)])
		shallowGuard(208650)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(208509)	shallowThen
		testRecord(x(1) '#' 2 208596)
lbl(208515)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(outputPattern2 y(0) 4 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(208596)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(outputPattern2 x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(208650)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(208493)
lbl(208663)	moveMoveYXYX(y(5) x(0) y(7) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(8) x(0))
		genFastCall(<P: 28> 4)
		branch(208693)
lbl(208687)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(208693)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 208754 208759)
		testLiteral(y(4) nil 208744)
lbl(208739)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(208744)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(208754)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(208759)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(208346)
lbl(208772)	definition(x(10) 208819 pid('RecordPattern,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 531 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1342> 9)
		endDefinition(208772)
lbl(208819)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('RecordPattern' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equationPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equationPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(24))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord left right] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(208915)	definition(x(8) 208939 pid('EquationPattern,init/fast' 3 pos('./compiler/CoreLanguage.oz' 571 6) nil 3) <Q: 1343> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(208915)
lbl(208939)	definition(x(9) 208980 pid('EquationPattern,init/slow' 1 pos('./compiler/CoreLanguage.oz' 571 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1343> 7)
		endDefinition(208939)
lbl(208980)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(208990)	definition(x(8) 209007 pid('EquationPattern,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 576 6) nil 2) <Q: 1344> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(208990)
lbl(209007)	definition(x(9) 209033 pid('EquationPattern,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 576 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1344> 3)
		endDefinition(209007)
lbl(209033)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(209043)	definition(x(8) 209062 pid('EquationPattern,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 579 6) nil 2) <Q: 1345> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isConstruction x(1) 1 cache)
		endDefinition(209043)
lbl(209062)	definition(x(9) 209088 pid('EquationPattern,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 579 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1345> 3)
		endDefinition(209062)
lbl(209088)	putRecord('#' [1 2 fast] x(12))
		setConstant(isConstruction)
		setValue(x(9))
		setValue(x(8))
lbl(209098)	definition(x(8) 209117 pid('EquationPattern,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 582 6) nil 2) <Q: 1346> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isVariableOccurrence x(1) 1 cache)
		endDefinition(209098)
lbl(209117)	definition(x(9) 209143 pid('EquationPattern,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 582 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1346> 3)
		endDefinition(209117)
lbl(209143)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(9))
		setValue(x(8))
lbl(209153)	definition(x(8) 209214 pid('EquationPattern,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 585 6) nil 4) <Q: 1347> nil)
		allocateL3
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(209153)
lbl(209214)	definition(x(9) 209255 pid('EquationPattern,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 585 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1347> 7)
		endDefinition(209214)
lbl(209255)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
lbl(209265)	definition(x(8) 209330 pid('EquationPattern,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 589 6) nil 5) <Q: 1348> nil)
		allocateL4
		getRecord('#' 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(4) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL4
		tailSendMsg(outputPattern2 x(4) 4 cache)
		endDefinition(209265)
lbl(209330)	definition(x(9) 209377 pid('EquationPattern,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 589 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1348> 9)
		endDefinition(209330)
lbl(209377)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('EquationPattern' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) abstractElse x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) abstractElse x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(25))
		setValue(x(8))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AbstractElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) elseNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) elseNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(26))
		setValue(x(8))
		putList(x(8))
		setValue(y(23))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(209535)	definition(x(7) 209560 pid('ElseNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 603 6) nil 2) <Q: 1349> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(209535)
lbl(209560)	definition(x(9) 209586 pid('ElseNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 603 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1349> 3)
		endDefinition(209560)
lbl(209586)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209596)	definition(x(7) 209636 pid('ElseNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 606 6) nil 5) <Q: 1350> [y(53) y(58) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('else')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1285> 9)
		endDefinition(209596)
lbl(209636)	definition(x(9) 209671 pid('ElseNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 606 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1350> 5)
		endDefinition(209636)
lbl(209671)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ElseNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) noElse x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) noElse x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(27))
		setValue(x(8))
		putList(x(8))
		setValue(y(23))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord] x(2))
		setConstant(unit)
lbl(209761)	definition(x(7) 209775 pid('NoElse,init/fast' 1 pos('./compiler/CoreLanguage.oz' 615 6) nil 1) <Q: 1351> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(209761)
lbl(209775)	definition(x(9) 209801 pid('NoElse,init/slow' 1 pos('./compiler/CoreLanguage.oz' 615 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1351> 3)
		endDefinition(209775)
lbl(209801)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209811)	definition(x(7) 209828 pid('NoElse,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 618 6) nil 2) <Q: 1352> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(209811)
lbl(209828)	definition(x(9) 209854 pid('NoElse,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 618 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1352> 3)
		endDefinition(209828)
lbl(209854)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(7))
lbl(209864)	definition(x(7) 209876 pid('NoElse,output/fast' 2 pos('./compiler/CoreLanguage.oz' 621 6) nil 2) <Q: 1353> nil)
		getLiteral(nil x(1))
		return
		endDefinition(209864)
lbl(209876)	definition(x(9) 209911 pid('NoElse,output/slow' 1 pos('./compiler/CoreLanguage.oz' 621 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1353> 5)
		endDefinition(209876)
lbl(209911)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('NoElse' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) threadNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) threadNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(28))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(210003)	definition(x(7) 210039 pid('ThreadNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 630 6) nil 2) <Q: 1354> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(210003)
lbl(210039)	definition(x(9) 210074 pid('ThreadNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 630 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1354> 5)
		endDefinition(210039)
lbl(210074)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(210084)	definition(x(7) 210126 pid('ThreadNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 634 6) nil 5) <Q: 1355> [y(53) y(58) y(54)])
		getRecord('#' 7 x(1))
		unifyLiteral('thread')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1285> 9)
		endDefinition(210084)
lbl(210126)	definition(x(9) 210161 pid('ThreadNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 634 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1355> 5)
		endDefinition(210126)
lbl(210161)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ThreadNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) tryNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) tryNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(29))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [catchStatements exception tryStatements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(210255)	definition(x(7) 210321 pid('TryNode,init/fast' 4 pos('./compiler/CoreLanguage.oz' 644 6) nil 4) <Q: 1356> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(3) x(0))
		inlineAssign(tryStatements x(0) cache)
		move(y(0) x(0))
		inlineAssign(exception x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(0) x(0))
		inlineAssign(catchStatements x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(210255)
lbl(210321)	definition(x(9) 210368 pid('TryNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 644 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1356> 9)
		endDefinition(210321)
lbl(210368)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(210378)	definition(x(7) 210472 pid('TryNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 650 6) nil 5) <Q: 1357> [y(53) y(58) y(54)])
		allocateL3
		getRecord('#' 15 x(1))
		unifyLiteral('try')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('catch ')
		unifyVariable(y(0))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(1))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(tryStatements x(4) cache)
		move(x(0) y(2))
		move(x(4) x(0))
		move(g(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1285> 8)
		inlineAt(exception x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(catchStatements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1285> 9)
		endDefinition(210378)
lbl(210472)	definition(x(9) 210507 pid('TryNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 650 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1357> 5)
		endDefinition(210472)
lbl(210507)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('TryNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) lockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) lockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(30))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [lockVar statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(210599)	definition(x(7) 210643 pid('LockNode,init/fast' 3 pos('./compiler/CoreLanguage.oz' 662 6) nil 3) <Q: 1358> nil)
		allocateL2
		inlineAssign(lockVar x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(210599)
lbl(210643)	definition(x(9) 210684 pid('LockNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 662 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1358> 7)
		endDefinition(210643)
lbl(210684)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(210694)	definition(x(7) 210757 pid('LockNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 667 6) nil 4) <Q: 1359> [y(53) y(58) y(54)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyLiteral('lock ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(lockVar x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1285> 9)
		endDefinition(210694)
lbl(210757)	definition(x(9) 210792 pid('LockNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 667 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1359> 5)
		endDefinition(210757)
lbl(210792)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('LockNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) classNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(31))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attributes designator features isToplevel methods parents printName properties] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
lbl(210896)	definition(x(7) 210940 pid('ClassNode,init/fast' 7 pos('./compiler/CoreLanguage.oz' 680 6) nil 7) <Q: 1360> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(parents x(1) cache)
		inlineAssign(properties x(2) cache)
		inlineAssign(attributes x(3) cache)
		inlineAssign(features x(4) cache)
		inlineAssign(methods x(5) cache)
		inlineAssign(coord x(6) cache)
		return
		endDefinition(210896)
lbl(210940)	definition(x(9) 211005 pid('ClassNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 680 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1360> 15)
		endDefinition(210940)
lbl(211005)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(211015)	definition(x(7) 211029 pid('ClassNode,setPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 689 6) nil 1) <Q: 1361> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(211015)
lbl(211029)	definition(x(9) 211055 pid('ClassNode,setPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 689 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1361> 3)
		endDefinition(211029)
lbl(211055)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(211065)	definition(x(7) 211699 pid('ClassNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 692 6) nil 5) <Q: 1362> [y(53) y(54) y(58) y(55) y(57) y(56)])
		allocateL9
		getRecord('#' 13 x(1))
		unifyLiteral('class ')
		unifyVariable(x(1))
		unifyValVar(g(0) x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(designator x(3) cache)
		move(x(0) y(6))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(parents x(0) cache)
		testLiteral(x(0) nil 211165)
lbl(211124)	inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 211165)
lbl(211133)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 211165)
lbl(211142)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 211165)
lbl(211151)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 211165)
lbl(211160)	getLiteral(nil y(0))
		branch(211168)
lbl(211165)	unify(y(0) g(2))
lbl(211168)	inlineAt(parents x(0) cache)
		testList(x(0) 211252)
lbl(211176)	getRecord('#' 7 y(1))
		unifyValue(g(3))
		unifyLiteral('from')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(parents x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1286> 10)
		inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 211247)
lbl(211215)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 211247)
lbl(211224)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 211247)
lbl(211233)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 211247)
lbl(211242)	getLiteral(nil y(0))
		branch(211255)
lbl(211247)	unify(y(0) g(2))
		branch(211255)
lbl(211252)	getLiteral(nil y(1))
lbl(211255)	inlineAt(properties x(0) cache)
		testList(x(0) 211330)
lbl(211263)	getRecord('#' 7 y(2))
		unifyValue(g(3))
		unifyLiteral('prop')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(properties x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1286> 10)
		inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 211325)
lbl(211302)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 211325)
lbl(211311)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 211325)
lbl(211320)	getLiteral(nil y(0))
		branch(211333)
lbl(211325)	unify(y(0) g(2))
		branch(211333)
lbl(211330)	getLiteral(nil y(2))
lbl(211333)	inlineAt(attributes x(0) cache)
		testList(x(0) 211508)
lbl(211341)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1288> 8)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setVariable(y(8))
lbl(211364)	definition(x(1) 211430 pid('' 3 pos('./compiler/CoreLanguage.oz' 726 9) nil 7) unit [y(6)])
		shallowGuard(211417)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(211380)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1288> 9)
lbl(211417)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(726)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(211364)
lbl(211430)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(3))
		unifyValue(g(3))
		unifyLiteral('attr')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(8) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(features x(0) cache)
		testLiteral(x(0) nil 211503)
lbl(211489)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 211503)
lbl(211498)	getLiteral(nil y(0))
		branch(211511)
lbl(211503)	unify(y(0) g(2))
		branch(211511)
lbl(211508)	getLiteral(nil y(3))
lbl(211511)	inlineAt(features x(0) cache)
		testList(x(0) 211677)
lbl(211519)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1288> 8)
		putRecord('#' 2 x(3))
		setVariable(y(3))
		setVariable(y(7))
lbl(211542)	definition(x(1) 211608 pid('' 3 pos('./compiler/CoreLanguage.oz' 736 9) nil 7) unit [y(6)])
		shallowGuard(211595)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(211558)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1288> 9)
lbl(211595)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(736)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(211542)
lbl(211608)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(4))
		unifyValue(g(3))
		unifyLiteral('feat')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(7) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(3) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 211672)
lbl(211667)	getLiteral(nil y(0))
		branch(211680)
lbl(211672)	unify(y(0) g(2))
		branch(211680)
lbl(211677)	getLiteral(nil y(4))
lbl(211680)	inlineAt(methods x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(6) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1285> 9)
		endDefinition(211065)
lbl(211699)	definition(x(9) 211734 pid('ClassNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 692 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1362> 5)
		endDefinition(211699)
lbl(211734)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ClassNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) method x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) method x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(32))
		setValue(x(8))
		putRecord('attr' [allVariables coord formalArgs label predicateRef statements] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(211824)	definition(x(8) 211873 pid('Method,init/fast' 4 pos('./compiler/CoreLanguage.oz' 751 6) nil 4) <Q: 1363> nil)
		allocateL2
		inlineAssign(label x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		move(x(3) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(211824)
lbl(211873)	definition(x(9) 211920 pid('Method,init/slow' 1 pos('./compiler/CoreLanguage.oz' 751 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1363> 9)
		endDefinition(211873)
lbl(211920)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(211930)	definition(x(8) 211944 pid('Method,setAllVariables/fast' 1 pos('./compiler/CoreLanguage.oz' 757 6) nil 1) <Q: 1364> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(211930)
lbl(211944)	definition(x(9) 211970 pid('Method,setAllVariables/slow' 1 pos('./compiler/CoreLanguage.oz' 757 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1364> 3)
		endDefinition(211944)
lbl(211970)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(8))
lbl(211980)	definition(x(8) 211997 pid('Method,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 760 6) nil 2) <Q: 1365> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(211980)
lbl(211997)	definition(x(9) 212023 pid('Method,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 760 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1365> 3)
		endDefinition(211997)
lbl(212023)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(212033)	definition(x(8) 212123 pid('Method,output/fast' 2 pos('./compiler/CoreLanguage.oz' 763 6) nil 5) <Q: 1366> [y(55) y(56) y(53) y(58) y(54) y(57)])
		allocateL4
		getRecord('#' 15 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyLiteral(')')
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(1))
		unifyValVar(g(3) y(2))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1286> 10)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1285> 9)
		endDefinition(212033)
lbl(212123)	definition(x(9) 212158 pid('Method,output/slow' 1 pos('./compiler/CoreLanguage.oz' 763 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1366> 5)
		endDefinition(212123)
lbl(212158)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 4 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Method' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methodWithDesignator x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methodWithDesignator x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(33))
		setValue(x(8))
		putList(x(8))
		setValue(y(30))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isOpen messageDesignator] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(212257)	definition(x(7) 212298 pid('MethodWithDesignator,init/fast' 6 pos('./compiler/CoreLanguage.oz' 774 6) nil 6) <Q: 1367> [y(30)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true init false 4) 0)
		move(y(0) x(0))
		inlineAssign(isOpen x(0) cache)
		move(y(1) x(0))
		inlineAssign(messageDesignator x(0) cache)
		deAllocateL2
		return
		endDefinition(212257)
lbl(212298)	definition(x(9) 212357 pid('MethodWithDesignator,init/slow' 1 pos('./compiler/CoreLanguage.oz' 774 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1367> 13)
		endDefinition(212298)
lbl(212357)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(212367)	definition(x(7) 212526 pid('MethodWithDesignator,output/fast' 2 pos('./compiler/CoreLanguage.oz' 779 6) nil 5) <Q: 1368> [y(55) y(56) y(53) y(58) y(54) y(57)])
		allocateL6
		getRecord('#' 17 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral(') = ')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(5))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1286> 10)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 212475 212480)
		inlineAt(formalArgs x(0) cache)
		testLiteral(x(0) nil 212465)
lbl(212460)	getLiteral('...' y(1))
		branch(212491)
lbl(212465)	getRecord('#' 2 y(1))
		unifyValue(g(5))
		unifyLiteral('...')
		branch(212491)
lbl(212475)	getLiteral(nil y(1))
		branch(212491)
lbl(212480)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(782)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(212491)	inlineAt(messageDesignator x(2) cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1285> 9)
		endDefinition(212367)
lbl(212526)	definition(x(9) 212561 pid('MethodWithDesignator,output/slow' 1 pos('./compiler/CoreLanguage.oz' 779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1368> 5)
		endDefinition(212526)
lbl(212561)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethodWithDesignator' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormal x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormal x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(34))
		setValue(x(8))
		putRecord('attr' [arg feature] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(212641)	definition(x(8) 212660 pid('MethFormal,init/fast' 2 pos('./compiler/CoreLanguage.oz' 793 6) nil 2) <Q: 1369> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		return
		endDefinition(212641)
lbl(212660)	definition(x(9) 212695 pid('MethFormal,init/slow' 1 pos('./compiler/CoreLanguage.oz' 793 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1369> 5)
		endDefinition(212660)
lbl(212695)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(212705)	definition(x(8) 212722 pid('MethFormal,getFeature/fast' 1 pos('./compiler/CoreLanguage.oz' 797 6) nil 2) <Q: 1370> nil)
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212705)
lbl(212722)	definition(x(9) 212748 pid('MethFormal,getFeature/slow' 1 pos('./compiler/CoreLanguage.oz' 797 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1370> 3)
		endDefinition(212722)
lbl(212748)	putRecord('#' [1 2 fast] x(11))
		setConstant(getFeature)
		setValue(x(9))
		setValue(x(8))
lbl(212758)	definition(x(8) 212775 pid('MethFormal,getVariable/fast' 1 pos('./compiler/CoreLanguage.oz' 800 6) nil 2) <Q: 1371> nil)
		inlineAt(arg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212758)
lbl(212775)	definition(x(9) 212801 pid('MethFormal,getVariable/slow' 1 pos('./compiler/CoreLanguage.oz' 800 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1371> 3)
		endDefinition(212775)
lbl(212801)	putRecord('#' [1 2 fast] x(12))
		setConstant('getVariable')
		setValue(x(9))
		setValue(x(8))
lbl(212811)	definition(x(8) 212823 pid('MethFormal,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 803 6) nil 1) <Q: 1372> nil)
		getLiteral(false x(0))
		return
		endDefinition(212811)
lbl(212823)	definition(x(9) 212849 pid('MethFormal,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 803 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1372> 3)
		endDefinition(212823)
lbl(212849)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(8))
lbl(212859)	definition(x(8) 212909 pid('MethFormal,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 806 6) nil 4) <Q: 1373> nil)
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(': ')
		unifyVariable(y(0))
		inlineAt(feature x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(212859)
lbl(212909)	definition(x(9) 212950 pid('MethFormal,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 806 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1373> 7)
		endDefinition(212909)
lbl(212950)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MethFormal' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalOptional x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalOptional x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(35))
		setValue(x(8))
		putList(x(8))
		setValue(y(32))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isInitialized] x(2))
		setConstant(unit)
lbl(213049)	definition(x(7) 213073 pid('MethFormalOptional,init/fast' 3 pos('./compiler/CoreLanguage.oz' 815 6) nil 3) <Q: 1374> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		inlineAssign(isInitialized x(2) cache)
		return
		endDefinition(213049)
lbl(213073)	definition(x(9) 213114 pid('MethFormalOptional,init/slow' 1 pos('./compiler/CoreLanguage.oz' 815 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1374> 7)
		endDefinition(213073)
lbl(213114)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(213124)	definition(x(7) 213136 pid('MethFormalOptional,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 820 6) nil 1) <Q: 1375> nil)
		getLiteral(true x(0))
		return
		endDefinition(213124)
lbl(213136)	definition(x(9) 213162 pid('MethFormalOptional,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 820 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1375> 3)
		endDefinition(213136)
lbl(213162)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(213172)	definition(x(7) 213191 pid('MethFormalOptional,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 823 6) nil 3) <Q: 1376> [y(32)])
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= _')
		genCall(gci(g(0) true output2 true 3) 0)
		endDefinition(213172)
lbl(213191)	definition(x(9) 213232 pid('MethFormalOptional,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 823 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1376> 7)
		endDefinition(213191)
lbl(213232)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalOptional' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalWithDefault x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(36))
		setValue(x(8))
		putList(x(8))
		setValue(y(32))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [default] x(2))
		setConstant(unit)
lbl(213324)	definition(x(7) 213349 pid('MethFormalWithDefault,init/fast' 3 pos('./compiler/CoreLanguage.oz' 832 6) nil 3) <Q: 1377> [y(32)])
		allocateL1
		move(x(2) y(0))
		genCall(gci(g(0) true init false 2) 0)
		move(y(0) x(0))
		inlineAssign(default x(0) cache)
		deAllocateL1
		return
		endDefinition(213324)
lbl(213349)	definition(x(9) 213390 pid('MethFormalWithDefault,init/slow' 1 pos('./compiler/CoreLanguage.oz' 832 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1377> 7)
		endDefinition(213349)
lbl(213390)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(213400)	definition(x(7) 213412 pid('MethFormalWithDefault,hasDefault/fast' 1 pos('./compiler/CoreLanguage.oz' 836 6) nil 1) <Q: 1378> nil)
		getLiteral(true x(0))
		return
		endDefinition(213400)
lbl(213412)	definition(x(9) 213438 pid('MethFormalWithDefault,hasDefault/slow' 1 pos('./compiler/CoreLanguage.oz' 836 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1378> 3)
		endDefinition(213412)
lbl(213438)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(213448)	definition(x(7) 213500 pid('MethFormalWithDefault,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 839 6) nil 6) <Q: 1379> [y(32) y(0)])
		allocateL1
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= ')
		unifyVariable(y(0))
		genCall(gci(g(0) true output2 false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(default x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		deAllocateL1
		tailCall(x(4) 4)
		endDefinition(213448)
lbl(213500)	definition(x(9) 213541 pid('MethFormalWithDefault,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 839 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1379> 7)
		endDefinition(213500)
lbl(213541)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalWithDefault' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) objectLockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) objectLockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(37))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(213633)	definition(x(7) 213669 pid('ObjectLockNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 850 6) nil 2) <Q: 1380> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(213633)
lbl(213669)	definition(x(9) 213704 pid('ObjectLockNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 850 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1380> 5)
		endDefinition(213669)
lbl(213704)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(213714)	definition(x(7) 213756 pid('ObjectLockNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 854 6) nil 5) <Q: 1381> [y(53) y(58) y(54)])
		getRecord('#' 7 x(1))
		unifyLiteral('lock')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1285> 9)
		endDefinition(213714)
lbl(213756)	definition(x(9) 213791 pid('ObjectLockNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 854 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1381> 5)
		endDefinition(213756)
lbl(213791)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ObjectLockNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'getSelf' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'getSelf' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(38))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [destination] x(2))
		setConstant(unit)
lbl(213881)	definition(x(7) 213900 pid('GetSelf,init/fast' 2 pos('./compiler/CoreLanguage.oz' 863 6) nil 2) <Q: 1382> nil)
		inlineAssign(destination x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(213881)
lbl(213900)	definition(x(9) 213935 pid('GetSelf,init/slow' 1 pos('./compiler/CoreLanguage.oz' 863 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1382> 5)
		endDefinition(213900)
lbl(213935)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(213945)	definition(x(7) 213974 pid('GetSelf,output/fast' 2 pos('./compiler/CoreLanguage.oz' 867 6) nil 4) <Q: 1383> nil)
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = self')
		unifyVariable(x(2))
		inlineAt(destination x(3) cache)
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(213945)
lbl(213974)	definition(x(9) 214009 pid('GetSelf,output/slow' 1 pos('./compiler/CoreLanguage.oz' 867 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1383> 5)
		endDefinition(213974)
lbl(214009)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('GetSelf' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) failNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) failNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(39))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(214093)	definition(x(7) 214107 pid('FailNode,init/fast' 1 pos('./compiler/CoreLanguage.oz' 875 6) nil 1) <Q: 1384> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(214093)
lbl(214107)	definition(x(9) 214133 pid('FailNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 875 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1384> 3)
		endDefinition(214107)
lbl(214133)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(214143)	definition(x(7) 214155 pid('FailNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 878 6) nil 2) <Q: 1385> nil)
		getLiteral('fail' x(1))
		return
		endDefinition(214143)
lbl(214155)	definition(x(9) 214190 pid('FailNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 878 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1385> 5)
		endDefinition(214155)
lbl(214190)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FailNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) ifNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) ifNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(40))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative clauses] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(214285)	definition(x(7) 214309 pid('IfNode,init/fast' 3 pos('./compiler/CoreLanguage.oz' 887 6) nil 3) <Q: 1386> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(alternative x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(214285)
lbl(214309)	definition(x(9) 214350 pid('IfNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 887 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1386> 7)
		endDefinition(214309)
lbl(214350)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(214360)	definition(x(7) 214431 pid('IfNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 892 6) nil 5) <Q: 1387> [y(53) y(54) y(58)])
		allocateL2
		getRecord('#' 7 x(1))
		unifyLiteral('cond ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValVar(g(2) y(0))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<Q: 1285> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(214360)
lbl(214431)	definition(x(9) 214466 pid('IfNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 892 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1387> 5)
		endDefinition(214431)
lbl(214466)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('IfNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) choicesAndDisjunctions x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) choicesAndDisjunctions x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(41))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [clauses] x(2))
		setConstant(unit)
lbl(214550)	definition(x(7) 214569 pid('ChoicesAndDisjunctions,init/fast' 2 pos('./compiler/CoreLanguage.oz' 902 6) nil 2) <Q: 1388> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(214550)
lbl(214569)	definition(x(9) 214604 pid('ChoicesAndDisjunctions,init/slow' 1 pos('./compiler/CoreLanguage.oz' 902 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1388> 5)
		endDefinition(214569)
lbl(214604)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('ChoicesAndDisjunctions' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) orNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) orNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(42))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(214689)	definition(x(7) 214738 pid('OrNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 910 6) nil 5) <Q: 1389> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('or ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1285> 9)
		endDefinition(214689)
lbl(214738)	definition(x(9) 214773 pid('OrNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 910 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1389> 5)
		endDefinition(214738)
lbl(214773)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('OrNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) disNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) disNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(43))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(214858)	definition(x(7) 214907 pid('DisNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 918 6) nil 5) <Q: 1390> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('dis ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1285> 9)
		endDefinition(214858)
lbl(214907)	definition(x(9) 214942 pid('DisNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 918 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1390> 5)
		endDefinition(214907)
lbl(214942)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('DisNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) choiceNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) choiceNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(44))
		setValue(x(8))
		putList(x(8))
		setValue(y(39))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(215027)	definition(x(7) 215076 pid('ChoiceNode,output/fast' 2 pos('./compiler/CoreLanguage.oz' 926 6) nil 5) <Q: 1391> [y(53) y(54) y(58)])
		getRecord('#' 6 x(1))
		unifyLiteral('choice ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1285> 9)
		endDefinition(215027)
lbl(215076)	definition(x(9) 215111 pid('ChoiceNode,output/slow' 1 pos('./compiler/CoreLanguage.oz' 926 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1391> 5)
		endDefinition(215076)
lbl(215111)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ChoiceNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'clause' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'clause' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(45))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [guard kind localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(215202)	definition(x(8) 215265 pid('Clause,init/fast' 4 pos('./compiler/CoreLanguage.oz' 935 6) nil 4) <Q: 1392> nil)
		allocateL3
		inlineAssign(localVars x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(2) x(0))
		inlineAssign(guard x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1294> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL3
		return
		endDefinition(215202)
lbl(215265)	definition(x(9) 215312 pid('Clause,init/slow' 1 pos('./compiler/CoreLanguage.oz' 935 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1392> 9)
		endDefinition(215265)
lbl(215312)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(215322)	definition(x(8) 215469 pid('Clause,output/fast' 2 pos('./compiler/CoreLanguage.oz' 941 6) nil 6) <Q: 1393> [y(54) y(58) y(53) y(57)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(g(0))
		unifyValue(g(1))
		unifyLiteral('then')
		unifyValue(g(2))
		unifyValVar(g(1) x(3))
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		match(x(4) ht(215407 [onScalar(nil 215364) onRecord('|' 2 215369)]))
lbl(215364)	getLiteral(nil x(1))
		branch(215420)
lbl(215369)	getRecord('#' 6 x(1))
		unifyVariable(x(4))
		unifyValue(g(0))
		unifyValue(g(3))
		unifyLiteral('in')
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(localVars x(5) cache)
		move(x(5) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1285> 8)
		branch(215420)
lbl(215407)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(945)
		setValue(x(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(215420)	inlineAt(guard x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<Q: 1285> 8)
		inlineAt(kind x(0) cache)
		testLiteral(x(0) 'waitTop' 215450)
lbl(215445)	getLiteral('skip   % top commit' y(2))
		deAllocateL3
		return
lbl(215450)	inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		deAllocateL3
		genFastCall(<Q: 1285> 9)
		endDefinition(215322)
lbl(215469)	definition(x(9) 215504 pid('Clause,output/slow' 1 pos('./compiler/CoreLanguage.oz' 941 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1393> 5)
		endDefinition(215469)
lbl(215504)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('Clause' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) valueNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) valueNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(46))
		setValue(x(8))
		putRecord('attr' [coord value] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(4))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(215604)	definition(x(8) 215634 pid('ValueNode,init/fast' 2 pos('./compiler/CoreLanguage.oz' 956 6) nil 2) <Q: 1394> [y(1)])
		inlineAssign(value x(0) cache)
		inlineAssign(coord x(1) cache)
		move(g(0) x(0))
		inlineDot(x(0) valueNode x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(215604)
lbl(215634)	definition(x(10) 215669 pid('ValueNode,init/slow' 1 pos('./compiler/CoreLanguage.oz' 956 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1394> 5)
		endDefinition(215634)
lbl(215669)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(215679)	definition(x(8) 215691 pid('ValueNode,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 961 6) nil 1) <Q: 1395> nil)
		getLiteral(false x(0))
		return
		endDefinition(215679)
lbl(215691)	definition(x(10) 215717 pid('ValueNode,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 961 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1395> 3)
		endDefinition(215691)
lbl(215717)	putRecord('#' [1 2 fast] x(12))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(215727)	definition(x(8) 215739 pid('ValueNode,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 964 6) nil 1) <Q: 1396> nil)
		getLiteral(false x(0))
		return
		endDefinition(215727)
lbl(215739)	definition(x(10) 215765 pid('ValueNode,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 964 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1396> 3)
		endDefinition(215739)
lbl(215765)	putRecord('#' [1 2 fast] x(13))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(215775)	definition(x(8) 215792 pid('ValueNode,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 967 6) nil 2) <Q: 1397> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215775)
lbl(215792)	definition(x(10) 215818 pid('ValueNode,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1397> 3)
		endDefinition(215792)
lbl(215818)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(215828)	definition(x(8) 215845 pid('ValueNode,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 970 6) nil 2) <Q: 1398> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215828)
lbl(215845)	definition(x(10) 215871 pid('ValueNode,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 970 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1398> 3)
		endDefinition(215845)
lbl(215871)	putRecord('#' [1 2 fast] x(15))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(215881)	definition(x(8) 215897 pid('ValueNode,outputEscaped2/fast' 3 pos('./compiler/CoreLanguage.oz' 973 6) nil 5) <Q: 1399> nil)
		getSelf(x(4))
		tailSendMsg(output2 x(4) 3 cache)
		endDefinition(215881)
lbl(215897)	definition(x(10) 215938 pid('ValueNode,outputEscaped2/slow' 1 pos('./compiler/CoreLanguage.oz' 973 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1399> 7)
		endDefinition(215897)
lbl(215938)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('ValueNode' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) atomNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) atomNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(47))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(216033)	definition(x(7) 216073 pid('AtomNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 981 6) nil 6) <Q: 1400> [y(0)])
		getLiteral(nil x(2))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(216033)
lbl(216073)	definition(x(9) 216114 pid('AtomNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 981 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1400> 7)
		endDefinition(216073)
lbl(216114)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(216124)	definition(x(7) 216164 pid('AtomNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 985 6) nil 6) <Q: 1401> [y(0)])
		getLiteral(nil x(3))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(216124)
lbl(216164)	definition(x(9) 216211 pid('AtomNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 985 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1401> 9)
		endDefinition(216164)
lbl(216211)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('AtomNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) intNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) intNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(48))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(216298)	definition(x(7) 216351 pid('IntNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 994 6) nil 4) <Q: 1402> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 216340)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(216340)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(216298)
lbl(216351)	definition(x(9) 216392 pid('IntNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 994 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1402> 7)
		endDefinition(216351)
lbl(216392)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(216402)	definition(x(7) 216455 pid('IntNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 998 6) nil 4) <Q: 1403> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0 x(1))
		testLT(x(0) x(1) x(3) 216444)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(216444)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(216402)
lbl(216455)	definition(x(9) 216502 pid('IntNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 998 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1403> 9)
		endDefinition(216455)
lbl(216502)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('IntNode' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) floatNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) floatNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(8))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(216589)	definition(x(7) 216642 pid('FloatNode,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1007 6) nil 4) <Q: 1404> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(2))
		testLT(x(0) x(2) x(3) 216631)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(216631)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(216589)
lbl(216642)	definition(x(9) 216683 pid('FloatNode,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1007 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1404> 7)
		endDefinition(216642)
lbl(216683)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(216693)	definition(x(7) 216746 pid('FloatNode,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 1011 6) nil 4) <Q: 1405> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(1))
		testLT(x(0) x(1) x(3) 216735)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(216735)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(216693)
lbl(216746)	definition(x(9) 216793 pid('FloatNode,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 1011 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1405> 9)
		endDefinition(216746)
lbl(216793)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FloatNode' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variable x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variable x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(49))
		setValue(x(8))
		putRecord('attr' [coord isToplevel origin printName] x(2))
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
lbl(216880)	definition(x(8) 216915 pid('Variable,init/fast' 3 pos('./compiler/CoreLanguage.oz' 1020 6) nil 3) <Q: 1406> [y(1)])
		inlineAssign(printName x(0) cache)
		inlineAssign(origin x(1) cache)
		inlineAssign(coord x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) variable x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(216880)
lbl(216915)	definition(x(9) 216956 pid('Variable,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1020 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1406> 7)
		endDefinition(216915)
lbl(216956)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(216966)	definition(x(8) 216978 pid('Variable,isRestricted/fast' 1 pos('./compiler/CoreLanguage.oz' 1026 6) nil 1) <Q: 1407> nil)
		getLiteral(false x(0))
		return
		endDefinition(216966)
lbl(216978)	definition(x(9) 217004 pid('Variable,isRestricted/slow' 1 pos('./compiler/CoreLanguage.oz' 1026 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1407> 3)
		endDefinition(216978)
lbl(217004)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRestricted)
		setValue(x(9))
		setValue(x(8))
lbl(217014)	definition(x(8) 217029 pid('Variable,isDenied/fast' 3 pos('./compiler/CoreLanguage.oz' 1029 6) nil 3) <Q: 1408> nil)
		getLiteral(unit x(1))
		getLiteral(false x(2))
		return
		endDefinition(217014)
lbl(217029)	definition(x(9) 217070 pid('Variable,isDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1029 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1408> 7)
		endDefinition(217029)
lbl(217070)	putRecord('#' [1 2 fast] x(12))
		setConstant(isDenied)
		setValue(x(9))
		setValue(x(8))
lbl(217080)	definition(x(8) 217097 pid('Variable,getPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 1033 6) nil 2) <Q: 1409> nil)
		inlineAt(printName x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(217080)
lbl(217097)	definition(x(9) 217123 pid('Variable,getPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 1033 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1409> 3)
		endDefinition(217097)
lbl(217123)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPrintName)
		setValue(x(9))
		setValue(x(8))
lbl(217133)	definition(x(8) 217150 pid('Variable,getOrigin/fast' 1 pos('./compiler/CoreLanguage.oz' 1036 6) nil 2) <Q: 1410> nil)
		inlineAt(origin x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(217133)
lbl(217150)	definition(x(9) 217176 pid('Variable,getOrigin/slow' 1 pos('./compiler/CoreLanguage.oz' 1036 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1410> 3)
		endDefinition(217150)
lbl(217176)	putRecord('#' [1 2 fast] x(14))
		setConstant(getOrigin)
		setValue(x(9))
		setValue(x(8))
lbl(217186)	definition(x(8) 217203 pid('Variable,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 1039 6) nil 2) <Q: 1411> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(217186)
lbl(217203)	definition(x(9) 217229 pid('Variable,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 1039 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1411> 3)
		endDefinition(217203)
lbl(217229)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(217239)	definition(x(8) 217253 pid('Variable,setToplevel/fast' 1 pos('./compiler/CoreLanguage.oz' 1042 6) nil 1) <Q: 1412> nil)
		inlineAssign(isToplevel x(0) cache)
		return
		endDefinition(217239)
lbl(217253)	definition(x(9) 217279 pid('Variable,setToplevel/slow' 1 pos('./compiler/CoreLanguage.oz' 1042 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1412> 3)
		endDefinition(217253)
lbl(217279)	putRecord('#' [1 2 fast] x(16))
		setConstant(setToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(217289)	definition(x(8) 217306 pid('Variable,isToplevel/fast' 1 pos('./compiler/CoreLanguage.oz' 1045 6) nil 2) <Q: 1413> nil)
		inlineAt(isToplevel x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(217289)
lbl(217306)	definition(x(9) 217332 pid('Variable,isToplevel/slow' 1 pos('./compiler/CoreLanguage.oz' 1045 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1413> 3)
		endDefinition(217306)
lbl(217332)	putRecord('#' [1 2 fast] x(17))
		setConstant(isToplevel)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(46))
lbl(217344)	definition(x(8) 217380 pid('Variable,occ/fast' 2 pos('./compiler/CoreLanguage.oz' 1048 6) nil 4) <Q: 1414> [y(46)])
		allocateL2
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(217344)
lbl(217380)	definition(x(9) 217415 pid('Variable,occ/slow' 1 pos('./compiler/CoreLanguage.oz' 1048 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1414> 5)
		endDefinition(217380)
lbl(217415)	putRecord('#' [1 2 fast] x(18))
		setConstant(occ)
		setValue(x(9))
		setValue(x(8))
lbl(217425)	definition(x(8) 217502 pid('Variable,output/fast' 2 pos('./compiler/CoreLanguage.oz' 1051 6) nil 3) <Q: 1415> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1287> 6)
		testBool(y(2) 217463 217489)
		getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(217463)	match(y(1) ht(217481 [onScalar('`unit`' 217466) onScalar('`true`' 217471) onScalar('`false`' 217476)]))
lbl(217466)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(217471)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(217476)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(217481)	getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(217489)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1052)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(217425)
lbl(217502)	definition(x(9) 217537 pid('Variable,output/slow' 1 pos('./compiler/CoreLanguage.oz' 1051 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1415> 5)
		endDefinition(217502)
lbl(217537)	putRecord('#' [1 2 fast] x(19))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
lbl(217547)	definition(x(8) 217640 pid('Variable,outputEscaped/fast' 2 pos('./compiler/CoreLanguage.oz' 1061 6) nil 3) <Q: 1416> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1287> 6)
		testBool(y(2) 217593 217627)
		getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(217593)	match(y(1) ht(217611 [onScalar('`unit`' 217596) onScalar('`true`' 217601) onScalar('`false`' 217606)]))
lbl(217596)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(217601)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(217606)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(217611)	getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(217627)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1062)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(217547)
lbl(217640)	definition(x(9) 217675 pid('Variable,outputEscaped/slow' 1 pos('./compiler/CoreLanguage.oz' 1061 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1416> 5)
		endDefinition(217640)
lbl(217675)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(47))
lbl(217687)	definition(x(8) 217789 pid('Variable,outputPattern/fast' 3 pos('./compiler/CoreLanguage.oz' 1071 6) nil 5) <Q: 1417> [y(47)])
		allocateL3
		inlineAt(printName x(3) cache)
lbl(217699)	definition(x(4) 217737 pid('' 2 pos('./compiler/CoreLanguage.oz' 1072 14) nil 3) unit [x(3)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(2) 1 cache)
		move(y(1) x(0))
		move(g(0) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(217699)
lbl(217737)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(2) 217767 217776)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true output true 2) 0)
lbl(217767)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true outputEscaped true 2) 0)
lbl(217776)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1072)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(217687)
lbl(217789)	definition(x(9) 217830 pid('Variable,outputPattern/slow' 1 pos('./compiler/CoreLanguage.oz' 1071 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1417> 7)
		endDefinition(217789)
lbl(217830)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(x(7) x(0))
		move(x(8) x(1))
		move(y(47) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Variable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(7))
		setValue(y(50))
		setConstant(nil)
		putList(x(0))
		setValue(y(47))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [features] x(2))
		setConstant(unit)
lbl(217913)	definition(x(7) 217941 pid('RestrictedVariable,init/fast' 3 pos('./compiler/CoreLanguage.oz' 1084 6) nil 3) <Q: 1418> [y(47)])
		allocateL1
		move(x(1) y(0))
		putConstant(user x(1))
		genCall(gci(g(0) true init false 3) 0)
		move(y(0) x(0))
		inlineAssign(features x(0) cache)
		deAllocateL1
		return
		endDefinition(217913)
lbl(217941)	definition(x(8) 217982 pid('RestrictedVariable,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1084 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1418> 7)
		endDefinition(217941)
lbl(217982)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(217992)	definition(x(7) 218015 pid('RestrictedVariable,isRestricted/fast' 1 pos('./compiler/CoreLanguage.oz' 1088 6) nil 4) <Q: 1419> nil)
		inlineAt(features x(1) cache)
		putConstant(nil x(2))
		callBI('\\=' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(217992)
lbl(218015)	definition(x(8) 218041 pid('RestrictedVariable,isRestricted/slow' 1 pos('./compiler/CoreLanguage.oz' 1088 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1419> 3)
		endDefinition(218015)
lbl(218041)	putRecord('#' [1 2 fast] x(10))
		setConstant(isRestricted)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(48))
lbl(218053)	definition(x(7) 218095 pid('RestrictedVariable,isDenied/fast' 3 pos('./compiler/CoreLanguage.oz' 1091 6) nil 4) <Q: 1420> [y(48)])
		inlineAt(features x(3) cache)
		testLiteral(x(3) nil 218075)
lbl(218068)	getLiteral(unit x(1))
		getLiteral(false x(2))
		return
lbl(218075)	move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
		endDefinition(218053)
lbl(218095)	definition(x(8) 218136 pid('RestrictedVariable,isDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1091 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1420> 7)
		endDefinition(218095)
lbl(218136)	putRecord('#' [1 2 fast] x(11))
		setConstant(isDenied)
		setValue(x(8))
		setValue(x(7))
lbl(218146)	definition(x(7) 218234 pid('RestrictedVariable,IsDenied/fast' 4 pos('./compiler/CoreLanguage.oz' 1099 6) nil 7) <Q: 1421> [y(48)])
		match(x(0) ht(218219 [onScalar(nil 218155) onRecord('|' 2 218162)]))
lbl(218155)	getLiteral(unit x(2))
		getLiteral(true x(3))
		return
lbl(218162)	getVarVar(x(0) x(4))
		inlineDot(x(0) 1 x(5) cache)
		testBI('==' [x(1) x(5)]#[x(6)] 218213)
		allocateL1
		putConstant(true x(1))
		inlineDot(x(0) 3 x(4) cache)
		unify(x(4) x(1))
		move(x(3) y(0))
		testRecord(x(0) '#' 4 218205)
lbl(218196)	getVoid(3)
		getVariable(x(0))
		unify(x(2) x(0))
		branch(218208)
lbl(218205)	getLiteral(unit x(2))
lbl(218208)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(218213)	move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
lbl(218219)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1113)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(218146)
lbl(218234)	definition(x(8) 218281 pid('RestrictedVariable,IsDenied/slow' 1 pos('./compiler/CoreLanguage.oz' 1099 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1421> 9)
		endDefinition(218234)
lbl(218281)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: IsDenied>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(48) x(6))
		putConstant('feat' x(3))
		putConstant('RestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variableOccurrence x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variableOccurrence x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(51))
		setValue(x(8))
		putRecord('attr' [coord value variable] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(5))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(218381)	definition(x(8) 218407 pid('VariableOccurrence,init/fast' 2 pos('./compiler/CoreLanguage.oz' 1122 6) nil 2) <Q: 1422> nil)
		inlineAssign(variable x(0) cache)
		inlineAssign(coord x(1) cache)
		getSelf(x(0))
		inlineAssign(value x(0) cache)
		return
		endDefinition(218381)
lbl(218407)	definition(x(10) 218442 pid('VariableOccurrence,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1122 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1422> 5)
		endDefinition(218407)
lbl(218442)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(218452)	definition(x(8) 218469 pid('VariableOccurrence,getCoord/fast' 1 pos('./compiler/CoreLanguage.oz' 1127 6) nil 2) <Q: 1423> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(218452)
lbl(218469)	definition(x(10) 218495 pid('VariableOccurrence,getCoord/slow' 1 pos('./compiler/CoreLanguage.oz' 1127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1423> 3)
		endDefinition(218469)
lbl(218495)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(218505)	definition(x(8) 218522 pid('VariableOccurrence,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1130 6) nil 2) <Q: 1424> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(218505)
lbl(218522)	definition(x(10) 218548 pid('VariableOccurrence,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1424> 3)
		endDefinition(218522)
lbl(218548)	putRecord('#' [1 2 fast] x(13))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(218558)	definition(x(8) 218572 pid('VariableOccurrence,setValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1133 6) nil 1) <Q: 1425> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(218558)
lbl(218572)	definition(x(10) 218598 pid('VariableOccurrence,setValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1133 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1425> 3)
		endDefinition(218572)
lbl(218598)	putRecord('#' [1 2 fast] x(14))
		setConstant('setValue')
		setValue(x(10))
		setValue(x(8))
lbl(218608)	definition(x(8) 218620 pid('VariableOccurrence,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1136 6) nil 1) <Q: 1426> nil)
		getLiteral(true x(0))
		return
		endDefinition(218608)
lbl(218620)	definition(x(10) 218646 pid('VariableOccurrence,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1136 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1426> 3)
		endDefinition(218620)
lbl(218646)	putRecord('#' [1 2 fast] x(15))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(218656)	definition(x(8) 218668 pid('VariableOccurrence,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 1139 6) nil 1) <Q: 1427> nil)
		getLiteral(false x(0))
		return
		endDefinition(218656)
lbl(218668)	definition(x(10) 218694 pid('VariableOccurrence,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 1139 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1427> 3)
		endDefinition(218668)
lbl(218694)	putRecord('#' [1 2 fast] x(16))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(5))
lbl(218706)	definition(x(8) 218750 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1142 6) nil 5) <Q: 1428> [y(5)])
		allocateL2
		inlineAt(variable x(2) cache)
		inlineAt(coord x(1) cache)
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(218706)
lbl(218750)	definition(x(10) 218776 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1142 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1428> 3)
		endDefinition(218750)
lbl(218776)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeIntoPatternVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(218786)	definition(x(8) 218803 pid('VariableOccurrence,getVariable/fast' 1 pos('./compiler/CoreLanguage.oz' 1145 6) nil 2) <Q: 1429> nil)
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(218786)
lbl(218803)	definition(x(10) 218829 pid('VariableOccurrence,getVariable/slow' 1 pos('./compiler/CoreLanguage.oz' 1145 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1429> 3)
		endDefinition(218803)
lbl(218829)	putRecord('#' [1 2 fast] x(18))
		setConstant('getVariable')
		setValue(x(10))
		setValue(x(8))
lbl(218839)	definition(x(8) 218876 pid('VariableOccurrence,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1148 6) nil 3) <Q: 1430> [y(46)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(218839)
lbl(218876)	definition(x(10) 218917 pid('VariableOccurrence,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1148 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1430> 7)
		endDefinition(218876)
lbl(218917)	putRecord('#' [1 2 fast] x(19))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(218927)	definition(x(8) 218964 pid('VariableOccurrence,outputEscaped2/fast' 3 pos('./compiler/CoreLanguage.oz' 1152 6) nil 3) <Q: 1431> [y(46)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(outputEscaped x(2) 2 cache)
		endDefinition(218927)
lbl(218964)	definition(x(10) 219005 pid('VariableOccurrence,outputEscaped2/slow' 1 pos('./compiler/CoreLanguage.oz' 1152 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1431> 7)
		endDefinition(218964)
lbl(219005)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
lbl(219015)	definition(x(8) 219058 pid('VariableOccurrence,outputPattern2/fast' 4 pos('./compiler/CoreLanguage.oz' 1156 6) nil 4) <Q: 1432> [y(46)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(outputPattern x(3) 3 cache)
		endDefinition(219015)
lbl(219058)	definition(x(10) 219105 pid('VariableOccurrence,outputPattern2/slow' 1 pos('./compiler/CoreLanguage.oz' 1156 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1432> 9)
		endDefinition(219058)
lbl(219105)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
lbl(219115)	definition(x(8) 219543 pid('VariableOccurrence,OutputValue/fast' 2 pos('./compiler/CoreLanguage.oz' 1160 6) nil 6) <Q: 1433> [y(58) y(1) y(0)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(debugValue x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1287> 6)
		createVariable(y(3))
		testBool(y(2) 219166 219171)
		getRecord('#' 3 y(3))
		unifyValue(g(0))
		unifyLiteral('%    value: ')
		unifyVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) variableOccurrence x(2) cache)
		applMeth(ami(outputDebugValue 1) x(2))
		branch(219182)
lbl(219166)	getLiteral(unit y(3))
		branch(219182)
lbl(219171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1163)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(219182)	move(y(0) x(0))
		putConstant(debugType x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1287> 6)
		createVariable(y(0))
		testBool(y(2) 219472 219477)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(g(0))
		unifyLiteral('%    type: ')
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(y(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(4))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(5))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(6))
		unifyLiteral(nil)
		inlineAt(variable x(1) cache)
		move(x(2) x(0))
		sendMsg(outputDebugType x(1) 1 cache)
		inlineAt(variable x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(outputDebugProps x(1) 1 cache)
		testLiteral(y(7) unit 219277)
lbl(219272)	getLiteral(unit y(2))
		branch(219308)
lbl(219277)	getRecord('#' 3 y(2))
		unifyValue(g(0))
		unifyLiteral('%    prop: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(7) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(219308)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugAttrs x(1) 1 cache)
		testLiteral(y(2) unit 219331)
lbl(219326)	getLiteral(unit y(4))
		branch(219362)
lbl(219331)	getRecord('#' 3 y(4))
		unifyValue(g(0))
		unifyLiteral('%    attr: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(219362)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugFeats x(1) 1 cache)
		testLiteral(y(2) unit 219385)
lbl(219380)	getLiteral(unit y(5))
		branch(219416)
lbl(219385)	getRecord('#' 3 y(5))
		unifyValue(g(0))
		unifyLiteral('%    feat: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(219416)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugMeths x(1) 1 cache)
		testLiteral(y(2) unit 219439)
lbl(219434)	getLiteral(unit y(6))
		branch(219488)
lbl(219439)	getRecord('#' 3 y(6))
		unifyValue(g(0))
		unifyLiteral('%    meth: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
		branch(219488)
lbl(219472)	getLiteral(nil y(0))
		branch(219488)
lbl(219477)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1167)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(219488)	putList(x(0))
		setValue(y(3))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1289> 4)
		testLiteral(y(0) nil 219509)
lbl(219504)	getLiteral(nil y(1))
		deAllocateL8
		return
lbl(219509)	getRecord('#' 5 y(1))
		unifyValue(g(0))
		unifyLiteral('% ')
		unifyVariable(x(1))
		unifyLiteral(':')
		unifyValue(y(0))
		inlineAt(variable x(2) cache)
		putRecord(debug [realcore] x(0))
		setConstant(true)
		deAllocateL8
		tailSendMsg(output x(2) 2 cache)
		endDefinition(219115)
lbl(219543)	definition(x(10) 219578 pid('VariableOccurrence,OutputValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1160 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1433> 5)
		endDefinition(219543)
lbl(219578)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: OutputValue>)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		move(y(46) x(6))
		putConstant(nil x(4))
		putConstant('VariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) patternVariableOccurrence x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(52))
		setValue(x(8))
		putList(x(8))
		setValue(y(46))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		move(y(5) x(6))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('PatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) token x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) token x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putRecord('attr' [value] x(2))
		setConstant(unit)
		putRecord('#' 2 x(7))
		setConstant(kind)
		setConstant(token)
		putList(x(9))
		setValue(x(7))
		setConstant(nil)
		putRecord('#' 2 x(7))
		setValue(y(6))
		setConstant(unit)
		putList(x(3))
		setValue(x(7))
		setValue(x(9))
		putConstant('feat' x(7))
		callBI(record [x(7) x(3)]#[x(9)])
lbl(219761)	definition(x(7) 219778 pid('Token,getValue/fast' 1 pos('./compiler/CoreLanguage.oz' 1205 6) nil 2) <Q: 1434> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(219761)
lbl(219778)	definition(x(10) 219804 pid('Token,getValue/slow' 1 pos('./compiler/CoreLanguage.oz' 1205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1434> 3)
		endDefinition(219778)
lbl(219804)	putRecord('#' [1 2 fast] x(11))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(7))
lbl(219814)	definition(x(7) 219826 pid('Token,isVariableOccurrence/fast' 1 pos('./compiler/CoreLanguage.oz' 1208 6) nil 1) <Q: 1435> nil)
		getLiteral(false x(0))
		return
		endDefinition(219814)
lbl(219826)	definition(x(10) 219852 pid('Token,isVariableOccurrence/slow' 1 pos('./compiler/CoreLanguage.oz' 1208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1435> 3)
		endDefinition(219826)
lbl(219852)	putRecord('#' [1 2 fast] x(12))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(7))
lbl(219862)	definition(x(7) 219874 pid('Token,isConstruction/fast' 1 pos('./compiler/CoreLanguage.oz' 1211 6) nil 1) <Q: 1436> nil)
		getLiteral(false x(0))
		return
		endDefinition(219862)
lbl(219874)	definition(x(10) 219900 pid('Token,isConstruction/slow' 1 pos('./compiler/CoreLanguage.oz' 1211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1436> 3)
		endDefinition(219874)
lbl(219900)	putRecord('#' [1 2 fast] x(13))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(7))
lbl(219910)	definition(x(7) 219922 pid('Token,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1214 6) nil 1) <Q: 1437> nil)
		getLiteral(false x(0))
		return
		endDefinition(219910)
lbl(219922)	definition(x(10) 219948 pid('Token,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1214 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1437> 3)
		endDefinition(219922)
lbl(219948)	putRecord('#' [1 2 fast] x(14))
		setConstant(isChunk)
		setValue(x(10))
		setValue(x(7))
lbl(219958)	definition(x(7) 219991 pid('Token,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1217 6) nil 3) <Q: 1438> nil)
		getLiteral(nil x(2))
		getRecord('#' 3 x(1))
		unifyLiteral('<')
		unifyVariable(x(0))
		unifyLiteral('>')
		getSelf(x(1))
		inlineDot(x(1) kind x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(219958)
lbl(219991)	definition(x(10) 220032 pid('Token,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1217 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1438> 7)
		endDefinition(219991)
lbl(220032)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(8) x(0))
		move(x(7) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('Token' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) nameToken x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) nameToken x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isToplevel printName] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(name)
lbl(220133)	definition(x(8) 220168 pid('NameToken,init/fast' 3 pos('./compiler/CoreLanguage.oz' 1227 6) nil 3) <Q: 1439> [y(1)])
		inlineAssign(printName x(0) cache)
		inlineAssign(value x(1) cache)
		inlineAssign(isToplevel x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(220133)
lbl(220168)	definition(x(9) 220209 pid('NameToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1227 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1439> 7)
		endDefinition(220168)
lbl(220209)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(220219)	definition(x(8) 220236 pid('NameToken,getPrintName/fast' 1 pos('./compiler/CoreLanguage.oz' 1233 6) nil 2) <Q: 1440> nil)
		inlineAt(printName x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(220219)
lbl(220236)	definition(x(9) 220262 pid('NameToken,getPrintName/slow' 1 pos('./compiler/CoreLanguage.oz' 1233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1440> 3)
		endDefinition(220236)
lbl(220262)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPrintName)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('NameToken' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) builtinToken x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) builtinToken x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(builtin)
lbl(220343)	definition(x(8) 220368 pid('BuiltinToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1241 6) nil 2) <Q: 1441> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(220343)
lbl(220368)	definition(x(9) 220394 pid('BuiltinToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1241 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1441> 3)
		endDefinition(220368)
lbl(220394)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(220404)	definition(x(8) 220452 pid('BuiltinToken,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1245 6) nil 4) <Q: 1442> [g(2)])
		getLiteral(nil x(2))
		getRecord('#' 5 x(1))
		unifyLiteral('<')
		unifyVariable(x(0))
		unifyLiteral('/')
		unifyVariable(x(1))
		unifyLiteral('>')
		getSelf(x(2))
		inlineDot(x(2) kind x(3) cache)
		unify(x(3) x(0))
		inlineAt(value x(0) cache)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(220404)
lbl(220452)	definition(x(9) 220493 pid('BuiltinToken,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1245 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1442> 7)
		endDefinition(220452)
lbl(220493)	putRecord('#' [1 2 fast] x(11))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('attr' x(2))
		putConstant('BuiltinToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) procedureToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [clauseBodyStatements kind predicateRef] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(procedure)
		setConstant(<U: ooFreeFlag>)
lbl(220566)	definition(x(7) 220591 pid('ProcedureToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1254 6) nil 2) <Q: 1443> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(220566)
lbl(220591)	definition(x(8) 220617 pid('ProcedureToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1254 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1443> 3)
		endDefinition(220591)
lbl(220617)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(220627)	definition(x(7) 220675 pid('ProcedureToken,output2/fast' 3 pos('./compiler/CoreLanguage.oz' 1258 6) nil 4) <Q: 1444> [g(2)])
		getLiteral(nil x(2))
		getRecord('#' 5 x(1))
		unifyLiteral('<')
		unifyVariable(x(0))
		unifyLiteral('/')
		unifyVariable(x(1))
		unifyLiteral('>')
		getSelf(x(2))
		inlineDot(x(2) kind x(3) cache)
		unify(x(3) x(0))
		inlineAt(value x(0) cache)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(220627)
lbl(220675)	definition(x(8) 220716 pid('ProcedureToken,output2/slow' 1 pos('./compiler/CoreLanguage.oz' 1258 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1444> 7)
		endDefinition(220675)
lbl(220716)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('ProcedureToken' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(cell)
lbl(220764)	definition(x(7) 220789 pid('CellToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1267 6) nil 2) <Q: 1445> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(220764)
lbl(220789)	definition(x(8) 220815 pid('CellToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1267 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1445> 3)
		endDefinition(220789)
lbl(220815)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('CellToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(chunk)
lbl(220861)	definition(x(7) 220886 pid('ChunkToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1276 6) nil 2) <Q: 1446> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(220861)
lbl(220886)	definition(x(8) 220912 pid('ChunkToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1276 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1446> 3)
		endDefinition(220886)
lbl(220912)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(220922)	definition(x(7) 220934 pid('ChunkToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1280 6) nil 1) <Q: 1447> nil)
		getLiteral(true x(0))
		return
		endDefinition(220922)
lbl(220934)	definition(x(8) 220960 pid('ChunkToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1447> 3)
		endDefinition(220934)
lbl(220960)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('ChunkToken' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(array)
lbl(221008)	definition(x(7) 221033 pid('ArrayToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1288 6) nil 2) <Q: 1448> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(221008)
lbl(221033)	definition(x(8) 221059 pid('ArrayToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1288 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1448> 3)
		endDefinition(221033)
lbl(221059)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(221069)	definition(x(7) 221081 pid('ArrayToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1292 6) nil 1) <Q: 1449> nil)
		getLiteral(true x(0))
		return
		endDefinition(221069)
lbl(221081)	definition(x(8) 221107 pid('ArrayToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1292 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1449> 3)
		endDefinition(221081)
lbl(221107)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('ArrayToken' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(dictionary)
lbl(221155)	definition(x(7) 221180 pid('DictionaryToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1300 6) nil 2) <Q: 1450> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(221155)
lbl(221180)	definition(x(8) 221206 pid('DictionaryToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1300 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1450> 3)
		endDefinition(221180)
lbl(221206)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(221216)	definition(x(7) 221228 pid('DictionaryToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1304 6) nil 1) <Q: 1451> nil)
		getLiteral(true x(0))
		return
		endDefinition(221216)
lbl(221228)	definition(x(8) 221254 pid('DictionaryToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1304 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1451> 3)
		endDefinition(221228)
lbl(221254)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('DictionaryToken' x(5))
		createVariableMove(y(53) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attrs feats meths props] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant('class')
lbl(221314)	definition(x(7) 221372 pid('ClassToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1313 6) nil 2) <Q: 1452> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		applMeth(ami(init 0) x(1))
		putConstant(unit x(0))
		inlineAssign(props x(0) cache)
		putConstant(unit x(0))
		inlineAssign(attrs x(0) cache)
		putConstant(unit x(0))
		inlineAssign(feats x(0) cache)
		putConstant(unit x(0))
		inlineAssign(meths x(0) cache)
		return
		endDefinition(221314)
lbl(221372)	definition(x(8) 221398 pid('ClassToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1313 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1452> 3)
		endDefinition(221372)
lbl(221398)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(221408)	definition(x(7) 221420 pid('ClassToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1321 6) nil 1) <Q: 1453> nil)
		getLiteral(true x(0))
		return
		endDefinition(221408)
lbl(221420)	definition(x(8) 221446 pid('ClassToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1321 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1453> 3)
		endDefinition(221420)
lbl(221446)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
lbl(221456)	definition(x(7) 221470 pid('ClassToken,setProperties/fast' 1 pos('./compiler/CoreLanguage.oz' 1324 6) nil 1) <Q: 1454> nil)
		inlineAssign(props x(0) cache)
		return
		endDefinition(221456)
lbl(221470)	definition(x(8) 221496 pid('ClassToken,setProperties/slow' 1 pos('./compiler/CoreLanguage.oz' 1324 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1454> 3)
		endDefinition(221470)
lbl(221496)	putRecord('#' [1 2 fast] x(11))
		setConstant(setProperties)
		setValue(x(8))
		setValue(x(7))
lbl(221506)	definition(x(7) 221523 pid('ClassToken,getProperties/fast' 1 pos('./compiler/CoreLanguage.oz' 1327 6) nil 2) <Q: 1455> nil)
		inlineAt(props x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(221506)
lbl(221523)	definition(x(8) 221549 pid('ClassToken,getProperties/slow' 1 pos('./compiler/CoreLanguage.oz' 1327 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1455> 3)
		endDefinition(221523)
lbl(221549)	putRecord('#' [1 2 fast] x(12))
		setConstant(getProperties)
		setValue(x(8))
		setValue(x(7))
lbl(221559)	definition(x(7) 221573 pid('ClassToken,setAttributes/fast' 1 pos('./compiler/CoreLanguage.oz' 1330 6) nil 1) <Q: 1456> nil)
		inlineAssign(attrs x(0) cache)
		return
		endDefinition(221559)
lbl(221573)	definition(x(8) 221599 pid('ClassToken,setAttributes/slow' 1 pos('./compiler/CoreLanguage.oz' 1330 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1456> 3)
		endDefinition(221573)
lbl(221599)	putRecord('#' [1 2 fast] x(13))
		setConstant(setAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(221609)	definition(x(7) 221626 pid('ClassToken,getAttributes/fast' 1 pos('./compiler/CoreLanguage.oz' 1333 6) nil 2) <Q: 1457> nil)
		inlineAt(attrs x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(221609)
lbl(221626)	definition(x(8) 221652 pid('ClassToken,getAttributes/slow' 1 pos('./compiler/CoreLanguage.oz' 1333 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1457> 3)
		endDefinition(221626)
lbl(221652)	putRecord('#' [1 2 fast] x(14))
		setConstant(getAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(221662)	definition(x(7) 221676 pid('ClassToken,setFeatures/fast' 1 pos('./compiler/CoreLanguage.oz' 1336 6) nil 1) <Q: 1458> nil)
		inlineAssign(feats x(0) cache)
		return
		endDefinition(221662)
lbl(221676)	definition(x(8) 221702 pid('ClassToken,setFeatures/slow' 1 pos('./compiler/CoreLanguage.oz' 1336 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1458> 3)
		endDefinition(221676)
lbl(221702)	putRecord('#' [1 2 fast] x(15))
		setConstant(setFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(221712)	definition(x(7) 221729 pid('ClassToken,getFeatures/fast' 1 pos('./compiler/CoreLanguage.oz' 1339 6) nil 2) <Q: 1459> nil)
		inlineAt(feats x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(221712)
lbl(221729)	definition(x(8) 221755 pid('ClassToken,getFeatures/slow' 1 pos('./compiler/CoreLanguage.oz' 1339 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1459> 3)
		endDefinition(221729)
lbl(221755)	putRecord('#' [1 2 fast] x(16))
		setConstant(getFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(221765)	definition(x(7) 221779 pid('ClassToken,setMethods/fast' 1 pos('./compiler/CoreLanguage.oz' 1342 6) nil 1) <Q: 1460> nil)
		inlineAssign(meths x(0) cache)
		return
		endDefinition(221765)
lbl(221779)	definition(x(8) 221805 pid('ClassToken,setMethods/slow' 1 pos('./compiler/CoreLanguage.oz' 1342 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1460> 3)
		endDefinition(221779)
lbl(221805)	putRecord('#' [1 2 fast] x(17))
		setConstant(setMethods)
		setValue(x(8))
		setValue(x(7))
lbl(221815)	definition(x(7) 221832 pid('ClassToken,getMethods/fast' 1 pos('./compiler/CoreLanguage.oz' 1345 6) nil 2) <Q: 1461> nil)
		inlineAt(meths x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(221815)
lbl(221832)	definition(x(8) 221858 pid('ClassToken,getMethods/slow' 1 pos('./compiler/CoreLanguage.oz' 1345 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1461> 3)
		endDefinition(221832)
lbl(221858)	putRecord('#' [1 2 fast] x(18))
		setConstant(getMethods)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putConstant('ClassToken' x(5))
		createVariableMove(y(54) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [classNode] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(object)
lbl(221925)	definition(x(7) 221964 pid('ObjectToken,init/fast' 2 pos('./compiler/CoreLanguage.oz' 1354 6) nil 3) <Q: 1462> [y(1)])
		allocateL1
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(2) cache)
		move(x(1) y(0))
		applMeth(ami(init 0) x(2))
		move(y(0) x(0))
		inlineAssign(classNode x(0) cache)
		deAllocateL1
		return
		endDefinition(221925)
lbl(221964)	definition(x(8) 221999 pid('ObjectToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1354 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1462> 5)
		endDefinition(221964)
lbl(221999)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(222009)	definition(x(7) 222021 pid('ObjectToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1359 6) nil 1) <Q: 1463> nil)
		getLiteral(true x(0))
		return
		endDefinition(222009)
lbl(222021)	definition(x(8) 222047 pid('ObjectToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1359 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1463> 3)
		endDefinition(222021)
lbl(222047)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
lbl(222057)	definition(x(7) 222074 pid('ObjectToken,getClassNode/fast' 1 pos('./compiler/CoreLanguage.oz' 1362 6) nil 2) <Q: 1464> nil)
		inlineAt(classNode x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(222057)
lbl(222074)	definition(x(8) 222100 pid('ObjectToken,getClassNode/slow' 1 pos('./compiler/CoreLanguage.oz' 1362 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1464> 3)
		endDefinition(222074)
lbl(222100)	putRecord('#' [1 2 fast] x(11))
		setConstant(getClassNode)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('ObjectToken' x(5))
		createVariableMove(y(55) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('lock')
lbl(222147)	definition(x(7) 222172 pid('LockToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1370 6) nil 2) <Q: 1465> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(222147)
lbl(222172)	definition(x(8) 222198 pid('LockToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1370 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1465> 3)
		endDefinition(222172)
lbl(222198)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(222208)	definition(x(7) 222220 pid('LockToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1374 6) nil 1) <Q: 1466> nil)
		getLiteral(true x(0))
		return
		endDefinition(222208)
lbl(222220)	definition(x(8) 222246 pid('LockToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1374 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1466> 3)
		endDefinition(222220)
lbl(222246)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('LockToken' x(5))
		createVariableMove(y(56) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(port)
lbl(222294)	definition(x(7) 222319 pid('PortToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1382 6) nil 2) <Q: 1467> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(222294)
lbl(222319)	definition(x(8) 222345 pid('PortToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1382 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1467> 3)
		endDefinition(222319)
lbl(222345)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(222355)	definition(x(7) 222367 pid('PortToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1386 6) nil 1) <Q: 1468> nil)
		getLiteral(true x(0))
		return
		endDefinition(222355)
lbl(222367)	definition(x(8) 222393 pid('PortToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1386 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1468> 3)
		endDefinition(222367)
lbl(222393)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('PortToken' x(5))
		createVariableMove(y(57) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('thread')
lbl(222441)	definition(x(7) 222466 pid('ThreadToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1394 6) nil 2) <Q: 1469> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(222441)
lbl(222466)	definition(x(8) 222492 pid('ThreadToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1394 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1469> 3)
		endDefinition(222466)
lbl(222492)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('ThreadToken' x(5))
		createVariableMove(y(58) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(space)
lbl(222538)	definition(x(7) 222563 pid('SpaceToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1403 6) nil 2) <Q: 1470> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(222538)
lbl(222563)	definition(x(8) 222589 pid('SpaceToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1403 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1470> 3)
		endDefinition(222563)
lbl(222589)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('SpaceToken' x(5))
		createVariableMove(y(61) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(bitArray)
lbl(222635)	definition(x(7) 222660 pid('BitArrayToken,init/fast' 1 pos('./compiler/CoreLanguage.oz' 1412 6) nil 2) <Q: 1471> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(222635)
lbl(222660)	definition(x(8) 222686 pid('BitArrayToken,init/slow' 1 pos('./compiler/CoreLanguage.oz' 1412 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1471> 3)
		endDefinition(222660)
lbl(222686)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(222696)	definition(x(7) 222708 pid('BitArrayToken,isChunk/fast' 1 pos('./compiler/CoreLanguage.oz' 1416 6) nil 1) <Q: 1472> nil)
		getLiteral(true x(0))
		return
		endDefinition(222696)
lbl(222708)	definition(x(8) 222734 pid('BitArrayToken,isChunk/slow' 1 pos('./compiler/CoreLanguage.oz' 1416 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1472> 3)
		endDefinition(222708)
lbl(222734)	putRecord('#' [1 2 fast] x(10))
		setConstant(isChunk)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant('BitArrayToken' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] g(3))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(52))
		unifyValue(y(44))
		unifyValue(y(1))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(49))
		unifyValue(y(50))
		unifyValue(y(42))
		unifyValue(y(39))
		unifyValue(y(51))
		unifyValue(y(29))
		unifyValue(y(54))
		unifyValue(y(43))
		unifyValue(y(16))
		unifyValue(y(13))
		unifyValue(y(11))
		unifyValue(y(14))
		unifyValue(y(53))
		unifyValue(y(41))
		unifyValue(y(24))
		unifyValue(y(12))
		unifyValue(y(22))
		unifyValue(y(37))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(15))
		unifyValue(y(36))
		unifyValue(y(38))
		unifyValue(y(45))
		unifyValue(y(28))
		unifyValue(y(56))
		unifyValue(y(32))
		unifyValue(y(33))
		unifyValue(y(34))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyValue(y(6))
		unifyValue(y(25))
		unifyValue(y(35))
		unifyValue(y(55))
		unifyValue(y(40))
		unifyValue(y(20))
		unifyValue(y(21))
		unifyValue(y(5))
		unifyValue(y(57))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(48))
		unifyValue(y(59))
		unifyValue(y(61))
		unifyValue(y(60))
		unifyValue(y(10))
		unifyValue(y(26))
		unifyValue(y(58))
		unifyValue(y(0))
		unifyValue(y(27))
		unifyValue(y(9))
		unifyValue(y(4))
		unifyValue(y(47))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(190135)
lbl(222896)	tailCall(x(2) 0)
		endDefinition(188479)
lbl(222901)	putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(13))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(14))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(15))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(16))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(17))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(18))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(19))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(20))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(21))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(22))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(23))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(24))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(25))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(26))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(27))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(28))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(29))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(30))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(31))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(32))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(33))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(34))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(35))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(36))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(37))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(38))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(39))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(40))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(41))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(42))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(43))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(44))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(45))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(46))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(47))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(48))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(49))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(50))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(51))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(52))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(53))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(54))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(55))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(56))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(57))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(58))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(59))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(60))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(61))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(62))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(63))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(64))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(65))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(66))
		setValue(x(4))
		putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(67))
		setConstant(nil)
		putRecord(info [type] x(68))
		setConstant(nil)
		putRecord(info [type] x(69))
		setConstant(nil)
		putList(x(71))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putRecord(info [type] x(70))
		setValue(x(71))
		putRecord('import' ['CodeGen' 'ImAConstruction' 'ImAToken' 'ImAValueNode' 'ImAVariableOccurrence' 'SA' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		putRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(23))
		setValue(x(16))
		setValue(x(58))
		setValue(x(45))
		setValue(x(66))
		setValue(x(17))
		setValue(x(18))
		setValue(x(54))
		setValue(x(56))
		setValue(x(42))
		setValue(x(39))
		setValue(x(57))
		setValue(x(29))
		setValue(x(60))
		setValue(x(43))
		setValue(x(15))
		setValue(x(12))
		setValue(x(9))
		setValue(x(13))
		setValue(x(59))
		setValue(x(41))
		setValue(x(24))
		setValue(x(11))
		setValue(x(22))
		setValue(x(37))
		setValue(x(5))
		setValue(x(47))
		setValue(x(14))
		setValue(x(36))
		setValue(x(38))
		setValue(x(46))
		setValue(x(28))
		setValue(x(62))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(30))
		setValue(x(31))
		setValue(x(53))
		setValue(x(25))
		setValue(x(35))
		setValue(x(61))
		setValue(x(40))
		setValue(x(19))
		setValue(x(20))
		setValue(x(51))
		setValue(x(63))
		setValue(x(55))
		setValue(x(21))
		setValue(x(49))
		setValue(x(10))
		setValue(x(65))
		setValue(x(6))
		setValue(x(8))
		setValue(x(26))
		setValue(x(64))
		setValue(x(52))
		setValue(x(27))
		setValue(x(7))
		setValue(x(44))
		setValue(x(48))
		setValue(x(50))
		createVariableMove(y(96) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant('NewUniqueName' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(false)
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setConstant(true)
		setConstant(unit)
		getLiteral(<U: ooDefaultVar> x(5))
		getLiteral(<U: ooFreeFlag> x(6))
		getLiteral(<U: ooRequiredArg> x(7))
		putRecord(env ['false' 'true'] x(5))
		setConstant(false)
		setConstant(true)
lbl(223887)	definition(x(2) 224230 pid('' 2 pos('./compiler/FunRT.oz' 4 3) nil 4) <P: 1473> [x(4) y(164) x(5) y(169)])
		putList(x(2))
		setPredicateRef(<Q: 1474>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1475>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1476>)
		setValue(x(3))
lbl(223911)	definitionCopy(x(2) 224225 pid('/body' 0 pos('./compiler/FunRT.oz' 4 3) [once] 6) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL4
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(3) cache)
		inlineDot(x(0) 'Core' x(1) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(2) cache)
		inlineDot(x(0) 'Module' x(4) cache)
lbl(223945)	definition(x(5) 224000 pid('ApplyFunctor' 3 pos('./compiler/FunRT.oz' 15 6) nil 6) <Q: 1474> [x(4)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) manager x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		sendMsg(init y(3) 0 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		move(y(3) x(3))
		deAllocateL4
		tailSendMsg(apply x(3) [1 2 url] cache)
		endDefinition(223945)
lbl(224000)	definition(x(4) 224071 pid('' 3 pos('./compiler/FunRT.oz' 23 2) nil 6) <Q: 1475> [x(1) x(3)])
		allocateL5
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(3) cache)
		move(g(1) x(4))
		inlineDot(x(4) printName x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		move(y(0) x(1))
		putConstant(true x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(1))
		deAllocateL5
		return
		endDefinition(224000)
lbl(224071)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(5) y(2))
		move(g(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
		putConstant('ApplyFunctor' x(3))
		move(y(2) x(1))
		callBI('AdjoinAt' [x(0) x(3) x(1)]#[x(4)])
lbl(224106)	definition(x(1) 224202 pid('' 3 pos('./compiler/FunRT.oz' 31 8) nil 4) <Q: 1476> [g(4) y(0)])
		allocateL4
		putRecord('#' 3 x(3))
		setConstant('`')
		setValue(x(0))
		setConstant('`')
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		putConstant(runTimeLibrary x(1))
		putConstant(unit x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(1))
		move(y(0) x(0))
		sendMsg(valToSubst y(1) 1 cache)
		putConstant(multiple x(0))
		sendMsg(setUse y(1) 1 cache)
		putConstant(~1 x(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(224106)
lbl(224202)	move(x(4) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		getRecord('export' [literals procs tokens] g(5))
		unifyValue(g(1))
		unifyValue(y(0))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(223911)
lbl(224225)	tailCall(x(2) 0)
		endDefinition(223887)
lbl(224230)	putRecord(value 1 x(4))
		setConstant(false)
		putRecord(value 1 x(5))
		setConstant(<U: ooDefaultVar>)
		putRecord(value 1 x(6))
		setConstant(<U: ooFreeFlag>)
		putRecord(value 1 x(7))
		setConstant(<U: ooRequiredArg>)
		putRecord(value 1 x(8))
		setConstant(true)
		putRecord(value 1 x(9))
		setConstant(unit)
		putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(10))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		putRecord(record 1 x(4))
		setValue(x(10))
		putList(x(5))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(5))
		putList(x(5))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(5))
		putList(x(5))
		setConstant(variable)
		setConstant(nil)
		putList(x(3))
		setConstant(nameToken)
		setValue(x(5))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(9))
		setConstant(manager)
		setConstant(nil)
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord(info [type] x(10))
		setConstant(nil)
		putList(x(12))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(11))
		setValue(x(12))
		putRecord('import' ['Core' 'Module' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(8))
		setValue(x(10))
		setValue(x(11))
		putRecord('export' [literals procs tokens] x(1))
		setValue(x(4))
		setValue(x(7))
		setValue(x(6))
		createVariableMove(y(97) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(224388)	definition(x(2) 266061 pid('' 2 pos('./compiler/FunUnnest.oz' 1 0) nil 4) <P: 1477> [y(156) y(148) y(155) y(160) y(104) y(150) y(152) y(149) y(2) y(142) y(184) y(185) y(114) y(169) y(143)])
		putList(x(2))
		setPredicateRef(<Q: 1478>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1479>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1480>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1481>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1482>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1483>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1484>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1485>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1486>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1487>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MyTopLevel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MyReporter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Refer>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1488>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1489>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1490>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1491>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1492>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1493>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1494>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1495>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1496>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1497>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1498>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1499>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1500>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1501>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1502>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1503>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1504>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1505>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1506>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1507>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1508>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1509>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1510>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1511>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1512>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1513>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1514>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1515>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1516>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1517>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1518>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1519>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1520>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1521>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1522>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1523>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1524>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1525>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1526>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1527>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1528>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1529>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1530>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1531>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1532>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1533>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1534>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1535>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1536>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1537>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1538>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1539>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1540>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1541>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1542>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1543>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1544>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1545>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1546>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: BA>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stateful>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StateUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ArgCounter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestToTerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestToVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GenerateNewVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestStatement>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestConstraint>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProc>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseImports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseExports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFromProp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMeth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethHead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeClauseBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestCase>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TranslatePattern>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestTry>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestFDList>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1547>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1548>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1549>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1550>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1551>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1552>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1553>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1554>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1555>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1556>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1557>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1558>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1559>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1560>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1561>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1562>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1563>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1564>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1565>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1566>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1567>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1568>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1569>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1570>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1571>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1572>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1573>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1574>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1575>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1576>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1577>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1578>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1579>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1580>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1581>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1582>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1583>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1584>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1585>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1586>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1587>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1588>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1589>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1590>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1591>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1592>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1593>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1594>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1595>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1596>)
		setValue(x(3))
lbl(225360)	definitionCopy(x(2) 266056 pid('/body' 0 pos('./compiler/FunUnnest.oz' 1 0) [once] 46) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) x(1)])
		allocateL7
		move(g(0) x(0))
		inlineDot(x(0) 'FD' x(1) cache)
		inlineDot(x(0) 'Misc' x(2) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'CompilerSupport' x(7) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(225400)	definition(x(8) 225561 pid('CoordinatesOf' 2 pos('./compiler/TupleSyntax.oz' 27 0) nil 4) <Q: 1478> nil)
		match(x(0) ht(225549 [onRecord(fAnd 2 225409) onRecord(fEq 3 225414) onRecord(fAssign 3 225419) onRecord(fOrElse 3 225424) onRecord(fAndThen 3 225429) onRecord(fOpApplyStatement 3 225434) onRecord(fOpApply 3 225475) onRecord(fUnoptimizedDot 2 225516) onRecord(fFdCompare 4 225520) onRecord(fFdIn 4 225527) onRecord(fObjApply 3 225534) onRecord(fRecord 2 225539) onRecord(fOpenRecord 2 225544)]))
lbl(225409)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225414)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225419)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225424)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225429)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225434)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 225459)
lbl(225446)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 225459)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(225459)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1478> 5)
lbl(225475)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 225500)
lbl(225487)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 225500)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(225500)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1478> 5)
lbl(225516)	getLiteral(unit x(1))
		return
lbl(225520)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225527)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225534)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225539)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225544)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(225549)	callBI('Width' [x(0)]#[x(2)])
		callBI('.' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(225400)
lbl(225561)	definition(x(8) 225699 pid('VarListSub' 4 pos('./compiler/TupleSyntax.oz' 54 0) nil 5) <Q: 1479> nil)
		match(x(1) ht(225684 [onScalar(nil 225570) onRecord('|' 2 225574)]))
lbl(225570)	unify(x(2) x(3))
		return
lbl(225574)	allocateL7
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(4))
		unifyVoid(1)
lbl(225586)	definition(x(1) 225626 pid('' 2 pos('./compiler/TupleSyntax.oz' 58 19) nil 4) unit [x(4)])
		shallowGuard(225613)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(225602)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(225613)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225586)
lbl(225626)	moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(6))
		testBool(y(5) 225651 225659)
		unify(y(3) y(6))
		branch(225670)
lbl(225651)	getList(y(3))
		unifyValue(y(0))
		unifyValue(y(6))
		branch(225670)
lbl(225659)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225670)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 1479> 9)
lbl(225684)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225561)
lbl(225699)	definition(x(8) 225904 pid('GetPatternVariablesStatement' 3 pos('./compiler/TupleSyntax.oz' 80 0) nil 5) <Q: 1480> nil)
		match(x(0) ht(225898 [onRecord(fVar 2 225708) onRecord(fEq 3 225715) onRecord(fProc 5 225720) onRecord(fFun 5 225725) onRecord(fFunctor 3 225730) onRecord(fClass 4 225735) onRecord(fScanner 6 225740) onRecord(fParser 7 225745) onRecord(fLocal 3 225750) onRecord(fAnd 2 225794) onRecord(fRecord 2 225819) onRecord(fOpenRecord 2 225855) onRecord(fColon 2 225891)]))
lbl(225708)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		return
lbl(225715)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225720)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225725)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225730)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225735)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225740)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225745)	getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225750)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1480> 6)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1480> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1479> 9)
lbl(225794)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1480> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1480> 7)
lbl(225819)	getVoid(1)
		getVariable(x(0))
lbl(225823)	definition(x(4) 225843 pid('' 3 pos('./compiler/TupleSyntax.oz' 107 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
		endDefinition(225823)
lbl(225843)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(225855)	getVoid(1)
		getVariable(x(0))
lbl(225859)	definition(x(4) 225879 pid('' 3 pos('./compiler/TupleSyntax.oz' 111 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
		endDefinition(225859)
lbl(225879)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(225891)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1481> 7)
lbl(225898)	unify(x(1) x(2))
		return
		endDefinition(225699)
lbl(225904)	definition(x(8) 225951 pid('GetPatternVariablesExpression' 3 pos('./compiler/TupleSyntax.oz' 121 0) nil 3) <Q: 1481> nil)
		match(x(0) ht(225946 [onRecord(fEq 3 225913) onRecord(fLocal 3 225938) onRecord(fAnd 2 225942)]))
lbl(225913)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1481> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1481> 7)
lbl(225938)	unify(x(1) x(2))
		return
lbl(225942)	unify(x(1) x(2))
		return
lbl(225946)	genFastCall(<Q: 1480> 7)
		endDefinition(225904)
lbl(225951)	definition(x(8) 225989 pid('Contains' 3 pos('./compiler/TupleSyntax.oz' 135 3) nil 5) <Q: 1482> nil)
		testList(x(0) 225983)
lbl(225960)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('==' [x(1) x(0)]#[x(4)] 225977)
		getLiteral(true x(2))
		return
lbl(225977)	move(x(3) x(0))
		genFastCall(<Q: 1482> 7)
lbl(225983)	getLiteral(false x(2))
		return
		endDefinition(225951)
lbl(225989)	definition(x(8) 226079 pid('UniqueVariables' 2 pos('./compiler/TupleSyntax.oz' 142 3) nil 4) <Q: 1483> nil)
		match(x(0) ht(226064 [onScalar(nil 225998) onRecord('|' 2 226002)]))
lbl(225998)	getLiteral(nil x(1))
		return
lbl(226002)	allocateL4
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(3))
		unifyVoid(1)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1482> 6)
		testBool(y(3) 226041 226053)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1483> 5)
lbl(226041)	getList(y(2))
		unifyValVar(y(0) x(1))
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 1483> 5)
lbl(226053)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(144)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226064)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(148)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(225989)
lbl(226079)	definition(x(5) 226128 pid('PrivateAttrFeat' 3 pos('./compiler/TupleSyntax.oz' 152 0) nil 3) <Q: 1484> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(0) '#' 2 226105)
lbl(226098)	getVariable(x(0))
		unify(y(2) x(0))
		branch(226108)
lbl(226105)	unify(y(2) x(0))
lbl(226108)	testRecord(y(2) fVar 2 226121)
lbl(226113)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(226121)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(226079)
lbl(226128)	definition(x(6) 226239 pid('PrivateMeth' 3 pos('./compiler/TupleSyntax.oz' 161 0) nil 6) <Q: 1485> nil)
		shallowGuard(226226)
		getRecord(fMeth 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(226146)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(3) fEq 3 226167)
lbl(226160)	getVariable(x(0))
		unify(y(2) x(0))
		branch(226170)
lbl(226167)	unify(y(2) x(3))
lbl(226170)	match(y(2) ht(226221 [onRecord(fVar 2 226173) onRecord(fRecord 2 226181) onRecord(fOpenRecord 2 226201)]))
lbl(226173)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(226181)	getVariable(x(0))
		testRecord(x(0) fVar 2 226196)
lbl(226188)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(226196)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(226201)	getVariable(x(0))
		testRecord(x(0) fVar 2 226216)
lbl(226208)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(226216)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(226221)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(226226)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(161)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(226128)
lbl(226239)	definition(x(8) 226290 pid('IsDeclared' 3 pos('./compiler/BindingAnalysis.oz' 25 3) nil 5) <Q: 1486> [g(1)])
		match(x(0) ht(226275 [onScalar(nil 226248) onRecord('|' 2 226252)]))
lbl(226248)	getLiteral(false x(2))
		return
lbl(226252)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(4)] 226269)
		getLiteral(true x(2))
		return
lbl(226269)	move(x(3) x(0))
		genFastCall(<Q: 1486> 7)
lbl(226275)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(29)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226239)
lbl(226290)	inlineDot(x(7) concatenateAtomAndInt x(7) cache)
lbl(226296)	definition(x(8) 226423 pid('Generate' 5 pos('./compiler/BindingAnalysis.oz' 34 3) nil 5) <Q: 1487> [x(7) g(2)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1486> 6)
		testBool(y(6) 226362 226410)
lbl(226342)	move(y(3) x(0))
		inlinePlus1(x(0) x(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1487> 11)
lbl(226362)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(lookupVariableInEnv y(1) 2 cache)
		testLiteral(y(6) undeclared 226342)
lbl(226378)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(y(3) x(1))
		inlinePlus1(x(1) x(2))
		move(y(2) x(1))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(5) y(4))
		deAllocateL7
		return
lbl(226410)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(36)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(226296)
lbl(226423)	putList(x(7))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [env freeVariablesOfQuery] x(8))
		setConstant(nil)
		setConstant(unit)
		putRecord('feat' [<M: MyReporter> <M: MyTopLevel>] x(9))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(226445)	definition(x(10) 226492 pid('BindingAnalysis,init/fast' 2 pos('./compiler/BindingAnalysis.oz' 50 6) nil 4) <Q: 1488> nil)
		putConstant(nil x(2))
		inlineAssign(env x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(freeVariablesOfQuery x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: MyReporter> x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(226445)
lbl(226492)	definition(x(11) 226527 pid('BindingAnalysis,init/slow' 1 pos('./compiler/BindingAnalysis.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1488> 5)
		endDefinition(226492)
lbl(226527)	putRecord('#' [1 2 fast] x(12))
		setConstant(init)
		setValue(x(11))
		setValue(x(10))
lbl(226537)	definition(x(10) 226625 pid('BindingAnalysis,openScope/fast' 0 pos('./compiler/BindingAnalysis.oz' 56 6) nil 6) <Q: 1489> [g(3)])
		inlineAt(env x(0) cache)
		testList(x(0) 226591)
lbl(226551)	getVariable(x(1))
		callBI('NewDictionary' nil#[x(2)])
		inlineDot(x(1) 2 x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(3)])
		createVariable(x(1))
		putRecord('#' 4 x(5))
		setValue(x(2))
		setValue(x(3))
		setValue(x(1))
		setValue(x(1))
		putList(x(4))
		setValue(x(5))
		setValue(x(0))
		inlineAssign(env x(4) cache)
		return
lbl(226591)	callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		createVariable(x(2))
		putRecord('#' 4 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		setValue(x(2))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		inlineAssign(env x(3) cache)
		return
		endDefinition(226537)
lbl(226625)	definition(x(11) 226639 pid('BindingAnalysis,openScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 56 6) nil 1) unit nil)
		getLiteral(openScope x(0))
		genFastCall(<Q: 1489> 1)
		endDefinition(226625)
lbl(226639)	putRecord('#' [1 2 fast] x(13))
		setConstant(openScope)
		setValue(x(11))
		setValue(x(10))
lbl(226649)	definition(x(10) 226679 pid('BindingAnalysis,getVars/fast' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 2) <Q: 1490> nil)
		inlineAt(env x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		return
		endDefinition(226649)
lbl(226679)	definition(x(11) 226705 pid('BindingAnalysis,getVars/slow' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1490> 3)
		endDefinition(226679)
lbl(226705)	putRecord('#' [1 2 fast] x(14))
		setConstant(getVars)
		setValue(x(11))
		setValue(x(10))
lbl(226715)	definition(x(10) 226836 pid('BindingAnalysis,getAllVariables/fast' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 5) <Q: 1491> [g(4) g(5)])
		allocateL2
		inlineAt(env x(4) cache)
lbl(226727)	definition(x(1) 226792 pid('' 3 pos('./compiler/BindingAnalysis.oz' 69 4) nil 7) unit [g(1)])
		shallowGuard(226779)
		getRecord('#' 4 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(226747)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		putConstant(x x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(226779)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(69)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(226727)
lbl(226792)	move(x(0) y(0))
		move(x(4) x(0))
		putConstant(x x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
lbl(226807)	definition(x(1) 226822 pid('' 3 pos('./compiler/BindingAnalysis.oz' 72 3) nil 3) unit nil)
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(226807)
lbl(226822)	moveMoveYXYX(y(1) x(0) y(0) x(3))
		putConstant(nil x(2))
		deAllocateL2
		genFastCall(<P: 163> 9)
		endDefinition(226715)
lbl(226836)	definition(x(11) 226862 pid('BindingAnalysis,getAllVariables/slow' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1491> 3)
		endDefinition(226836)
lbl(226862)	putRecord('#' [1 2 fast] x(15))
		setConstant(getAllVariables)
		setValue(x(11))
		setValue(x(10))
lbl(226872)	definition(x(10) 226907 pid('BindingAnalysis,closeScope/fast' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) <Q: 1492> nil)
		inlineAt(env x(1) cache)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		inlineAssign(env x(2) cache)
		return
		endDefinition(226872)
lbl(226907)	definition(x(11) 226933 pid('BindingAnalysis,closeScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1492> 3)
		endDefinition(226907)
lbl(226933)	putRecord('#' [1 2 fast] x(16))
		setConstant(closeScope)
		setValue(x(11))
		setValue(x(10))
lbl(226943)	definition(x(10) 227068 pid('BindingAnalysis,bind/fast' 3 pos('./compiler/BindingAnalysis.oz' 80 6) nil 7) <Q: 1493> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 227061)
lbl(226983)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(227061)	unify(x(2) x(5))
		deAllocateL8
		return
		endDefinition(226943)
lbl(227068)	definition(x(11) 227109 pid('BindingAnalysis,bind/slow' 1 pos('./compiler/BindingAnalysis.oz' 80 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1493> 7)
		endDefinition(227068)
lbl(227109)	putRecord('#' [1 2 fast] x(17))
		setConstant(bind)
		setValue(x(11))
		setValue(x(10))
lbl(227119)	definition(x(10) 227288 pid('BindingAnalysis,bindImport/fast' 4 pos('./compiler/BindingAnalysis.oz' 91 6) nil 8) <Q: 1494> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(4) cache)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		getRecord('#' 4 x(4))
		unifyVariable(x(5))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(4))
		callBI('Dictionary.condGet' [x(5) x(0) x(4)]#[x(6)])
		testLiteral(x(6) undeclared 227240)
lbl(227159)	move(g(1) x(4))
		inlineDot(x(4) restrictedVariable x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(0) y(4) x(3) y(5))
		moveMoveXYXY(x(5) y(6) x(7) y(7))
		move(x(2) x(8))
		move(x(1) x(2))
		move(x(8) x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(227240)	getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(5))
		setConstant(' imported more than once')
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		move(x(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(4) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(227119)
lbl(227288)	definition(x(11) 227335 pid('BindingAnalysis,bindImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 91 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1494> 9)
		endDefinition(227288)
lbl(227335)	putRecord('#' [1 2 fast] x(18))
		setConstant(bindImport)
		setValue(x(11))
		setValue(x(10))
lbl(227345)	definition(x(10) 227514 pid('BindingAnalysis,bindExport/fast' 3 pos('./compiler/BindingAnalysis.oz' 107 6) nil 7) <Q: 1495> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 227463)
lbl(227385)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(227463)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(6))
		setValue(x(0))
		putRecord('#' 3 x(4))
		setConstant('variable ')
		setValue(x(6))
		setConstant(' declared more than once')
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(0))
		move(x(4) x(2))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(227345)
lbl(227514)	definition(x(11) 227555 pid('BindingAnalysis,bindExport/slow' 1 pos('./compiler/BindingAnalysis.oz' 107 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1495> 7)
		endDefinition(227514)
lbl(227555)	putRecord('#' [1 2 fast] x(19))
		setConstant(bindExport)
		setValue(x(11))
		setValue(x(10))
		createVariable(y(0))
lbl(227567)	definition(x(10) 227739 pid('BindingAnalysis,refer/fast' 3 pos('./compiler/BindingAnalysis.oz' 123 6) nil 5) <Q: 1496> [y(0)])
		allocateL5
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(3) undeclared 227662)
lbl(227600)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
lbl(227662)	createVariableMove(y(4) x(0))
		sendMsg(isRestricted y(3) 1 cache)
		testBool(y(4) 227722 227711)
		getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 2 x(2))
		setConstant('illegal use of imported variable ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(227722)
lbl(227711)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227722)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(227567)
lbl(227739)	definition(x(11) 227780 pid('BindingAnalysis,refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 123 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1496> 7)
		endDefinition(227739)
lbl(227780)	putRecord('#' [1 2 fast] x(20))
		setConstant(refer)
		setValue(x(11))
		setValue(x(10))
lbl(227790)	definition(x(10) 228024 pid('BindingAnalysis,referImport/fast' 5 pos('./compiler/BindingAnalysis.oz' 139 6) nil 8) <Q: 1497> [y(0)])
		allocateL7
		inlineAt(env x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(5) undeclared 227893)
lbl(227828)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		getLiteral(false y(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(2) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(227893)	move(y(3) x(0))
		sendMsg(isRestricted y(5) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(isDenied y(5) 3 cache)
		testBool(y(6) 227988 227977)
		getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(y(0))
		putRecord('#' 2 x(3))
		setConstant('illegal use of imported variable ')
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(y(2))
		putRecord(hint [l m] x(6))
		setConstant('Unknown feature')
		setValue(x(7))
		putList(x(1))
		setValue(x(6))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('binding analysis error' x(2))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(227988)
lbl(227977)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(149)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227988)	testLiteral(y(3) unit 228007)
lbl(227992)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(228007)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(227790)
lbl(228024)	definition(x(11) 228077 pid('BindingAnalysis,referImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 139 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1497> 11)
		endDefinition(228024)
lbl(228077)	putRecord('#' [1 2 fast] x(21))
		setConstant(referImport)
		setValue(x(11))
		setValue(x(10))
lbl(228087)	definition(x(10) 228130 pid('BindingAnalysis,referUnchecked/fast' 3 pos('./compiler/BindingAnalysis.oz' 162 6) nil 5) <Q: 1498> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(228087)
lbl(228130)	definition(x(11) 228171 pid('BindingAnalysis,referUnchecked/slow' 1 pos('./compiler/BindingAnalysis.oz' 162 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1498> 7)
		endDefinition(228130)
lbl(228171)	putRecord('#' [1 2 fast] x(22))
		setConstant(referUnchecked)
		setValue(x(11))
		setValue(x(10))
lbl(228181)	definition(x(10) 228233 pid('BindingAnalysis,referExpansionOcc/fast' 3 pos('./compiler/BindingAnalysis.oz' 166 6) nil 5) <Q: 1499> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(2) undeclared 228216)
lbl(228211)	getLiteral(undeclared y(1))
		deAllocateL3
		return
lbl(228216)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(228181)
lbl(228233)	definition(x(11) 228274 pid('BindingAnalysis,referExpansionOcc/slow' 1 pos('./compiler/BindingAnalysis.oz' 166 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1499> 7)
		endDefinition(228233)
lbl(228274)	putRecord('#' [1 2 fast] x(23))
		setConstant(referExpansionOcc)
		setValue(x(11))
		setValue(x(10))
lbl(228284)	definition(x(10) 228383 pid('BindingAnalysis,Refer/fast' 4 pos('./compiler/BindingAnalysis.oz' 174 6) nil 7) <Q: 1500> [g(2) g(6) y(0)])
		match(x(2) ht(228368 [onScalar(nil 228293) onRecord('|' 2 228337)]))
lbl(228293)	allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(y(1) x(1))
		sendMsg(lookupVariableInEnv x(2) 2 cache)
		testLiteral(y(1) undeclared 228322)
lbl(228320)	deAllocateL2
		return
lbl(228322)	inlineAt(freeVariablesOfQuery x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(228337)	getVarVar(x(2) x(4))
		getRecord('#' 4 x(2))
		unifyVariable(x(2))
		unifyVoid(3)
		putConstant(undeclared x(5))
		callBI('Dictionary.condGet' [x(2) x(0) x(5)]#[x(6)])
		testLiteral(x(6) undeclared 228364)
lbl(228358)	move(x(4) x(2))
		genCall(gci(g(2) true <M: Refer> true 4) 0)
lbl(228364)	unify(x(3) x(6))
		return
lbl(228368)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(187)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228284)
lbl(228383)	definition(x(11) 228430 pid('BindingAnalysis,Refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 174 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1500> 9)
		endDefinition(228383)
lbl(228430)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: Refer>)
		setValue(x(11))
		setValue(x(10))
lbl(228440)	definition(x(10) 228582 pid('BindingAnalysis,generate/fast' 3 pos('./compiler/BindingAnalysis.oz' 189 6) nil 7) <Q: 1501> [g(6) x(3) g(2)])
		allocateL9
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(y(1))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(1 x(6))
		callBI('Dictionary.condGet' [x(4) x(0) x(6)]#[x(3)])
		getSelf(x(6))
		inlineDot(x(6) <M: MyTopLevel> x(6) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(x(4) y(6))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1487> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		move(y(4) x(2))
		putConstant(generated x(1))
		sendMsg(init y(8) 3 cache)
		unify(y(8) y(5))
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(1))
		setValue(y(6))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL9
		return
		endDefinition(228440)
lbl(228582)	definition(x(11) 228623 pid('BindingAnalysis,generate/slow' 1 pos('./compiler/BindingAnalysis.oz' 189 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1501> 7)
		endDefinition(228582)
lbl(228623)	putRecord('#' [1 2 fast] x(25))
		setConstant(generate)
		setValue(x(11))
		setValue(x(10))
lbl(228633)	definition(x(10) 228787 pid('BindingAnalysis,generateForOuterScope/fast' 3 pos('./compiler/BindingAnalysis.oz' 198 6) nil 8) <Q: 1502> [g(6) x(3) g(2)])
		allocateL10
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(y(0))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 4 x(4))
		unifyVariable(y(2))
		unifyVariable(x(6))
		unifyVariable(y(3))
		unifyVariable(y(4))
		putConstant(1 x(7))
		callBI('Dictionary.condGet' [x(6) x(0) x(7)]#[x(3)])
		getSelf(x(7))
		inlineDot(x(7) <M: MyTopLevel> x(7) cache)
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(x(6) y(7))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(7) x(1))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1487> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(2))
		putConstant(generated x(1))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(4))
		unifyValVar(y(6) x(1))
		putRecord('#' 4 x(4))
		setValue(y(2))
		setValue(y(7))
		setValue(y(3))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(y(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(3))
		inlineAssign(env x(2) cache)
		deAllocateL10
		return
		endDefinition(228633)
lbl(228787)	definition(x(11) 228828 pid('BindingAnalysis,generateForOuterScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 198 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1502> 7)
		endDefinition(228787)
lbl(228828)	putRecord('#' [1 2 fast] x(26))
		setConstant(generateForOuterScope)
		setValue(x(11))
		setValue(x(10))
lbl(228838)	definition(x(10) 228866 pid('BindingAnalysis,getFreeVariablesOfQuery/fast' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) <Q: 1503> [g(7)])
		inlineAt(freeVariablesOfQuery x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(freeVariablesOfQuery x(0) cache)
		return
		endDefinition(228838)
lbl(228866)	definition(x(11) 228892 pid('BindingAnalysis,getFreeVariablesOfQuery/slow' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1503> 3)
		endDefinition(228866)
lbl(228892)	putRecord('#' [1 2 fast] x(27))
		setConstant(getFreeVariablesOfQuery)
		setValue(x(11))
		setValue(x(10))
		putRecord('#' 16 x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(10) x(1))
		move(x(8) x(2))
		move(x(9) x(3))
		move(x(7) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('BindingAnalysis' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(228977)	definition(x(7) 229130 pid('NormalizeFdCompare' 6 pos('./compiler/UnnestFD.oz' 33 3) nil 9) <Q: 1504> nil)
		putList(x(8))
		setValue(x(2))
		setConstant(nil)
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		putRecord(fOpApply 3 x(6))
		setConstant('-')
		setValue(x(7))
		setValue(x(3))
		match(x(0) ht(229115 [onScalar('=:' 229008) onScalar('<:' 229015) onScalar('>:' 229047) onScalar('=<:' 229081) onScalar('>=:' 229088) onScalar('\\=:' 229108)]))
lbl(229008)	getLiteral('=:' x(4))
		unify(x(5) x(6))
		return
lbl(229015)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(3))
		getListValVar(x(0) x(6) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(3))
		return
lbl(229047)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('-')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(1)
		unifyValue(x(3))
		getList(x(2))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(229081)	getLiteral('=<:' x(4))
		unify(x(5) x(6))
		return
lbl(229088)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(229108)	getLiteral('\\=:' x(4))
		unify(x(5) x(6))
		return
lbl(229115)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(55)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228977)
lbl(229130)	definition(x(7) 229265 pid('AreLinearConstraints' 2 pos('./compiler/UnnestFD.oz' 58 3) nil 5) <Q: 1505> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 229209)
lbl(229147)	getVarVar(x(2) x(3))
		shallowGuard(229209)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(229167)	shallowThen
		move(x(4) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1505> 4)
		testBool(y(2) 229193 229198)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1505> 5)
lbl(229193)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(229198)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(62)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(229209)	testRecord(y(0) fOpApply 3 229250)
lbl(229214)	getVarVar(x(0) x(1))
		shallowGuard(229250)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(229234)	shallowThen
		testRecord(x(1) fVar 2 229245)
lbl(229240)	getLiteral(true y(1))
		deAllocateL3
		return
lbl(229245)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(229250)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(69)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229130)
lbl(229265)	definition(x(7) 229398 pid('MakeTuples' 5 pos('./compiler/UnnestFD.oz' 72 3) nil 8) <Q: 1506> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 229343)
lbl(229290)	getVarVar(x(5) x(6))
		shallowGuard(229343)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(229310)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1506> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1506> 11)
lbl(229343)	testRecord(y(0) fOpApply 3 229383)
lbl(229348)	getVarVar(x(0) x(1))
		shallowGuard(229383)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(229368)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyValue(x(2))
		unifyValue(y(4))
		deAllocateL7
		return
lbl(229383)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229265)
lbl(229398)	definition(x(7) 229466 pid('ProductToVariableList' 2 pos('./compiler/UnnestFD.oz' 89 6) nil 5) <Q: 1507> nil)
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(229443 [onRecord(fOpApply 3 229411) onRecord(fVar 2 229456)]))
lbl(229411)	getVarVar(x(2) x(3))
		shallowGuard(229443)
		getLiteral('*' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(229431)	shallowThen
		getListValVar(x(1) x(2) x(1))
		move(x(4) x(0))
		deAllocateL1
		genFastCall(<Q: 1507> 5)
lbl(229443)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(98)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(229456)	getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL1
		return
		endDefinition(229398)
lbl(229466)	definition(x(7) 229632 pid('MakeTupleTuples' 5 pos('./compiler/UnnestFD.oz' 101 6) nil 8) <Q: 1508> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 229544)
lbl(229491)	getVarVar(x(5) x(6))
		shallowGuard(229544)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(229511)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1508> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1508> 11)
lbl(229544)	testRecord(y(0) fOpApply 3 229617)
lbl(229549)	getVarVar(x(0) x(1))
		shallowGuard(229617)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(229569)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyVariable(x(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(5))
		move(x(2) x(0))
		move(x(4) x(1))
		deAllocateL7
		genFastCall(<Q: 1507> 5)
lbl(229617)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(113)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229466)
lbl(229632)	definition(x(7) 229842 pid('NegDNF' 3 pos('./compiler/UnnestFD.oz' 121 6) nil 7) <Q: 1509> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 229718)
lbl(229652)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(229718)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(229674)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1509> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1509> 7)
lbl(229718)	match(y(0) ht(229776 [onRecord(fOpApply 3 229721) onRecord(fInt 2 229789) onRecord(fVar 2 229808)]))
lbl(229721)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(229776)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(229743)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyValue(x(3))
		unifyLiteral(nil)
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<Q: 1509> 7)
lbl(229776)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(135)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(229789)	getVarVar(x(0) x(1))
		getRecord(fInt 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL3
		return
lbl(229808)	getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(~1)
		unifyValue(y(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL3
		return
		endDefinition(229632)
lbl(229842)	definition(x(7) 230037 pid('MulDNF' 4 pos('./compiler/UnnestFD.oz' 138 6) nil 8) <Q: 1510> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 229932)
lbl(229864)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(229932)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(229886)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(6))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(7) y(3))
		move(x(4) x(0))
		genFastCall(<Q: 1510> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<Q: 1510> 9)
lbl(229932)	testRecord(y(1) fOpApply 3 230013)
lbl(229937)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(230013)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(229959)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(1))
		unifyLiteral(nil)
		move(x(3) y(3))
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1510> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1510> 9)
lbl(230013)	getRecord(fOpApply 3 y(3))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
		endDefinition(229842)
lbl(230037)	definition(x(7) 230329 pid('MakeDNF' 2 pos('./compiler/UnnestFD.oz' 153 6) nil 6) <Q: 1511> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 230117)
lbl(230054)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(230117)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(230076)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(5) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1511> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1511> 5)
lbl(230117)	testRecord(y(0) fOpApply 3 230201)
lbl(230122)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(230201)
		getLiteral('-' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(230144)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYXY(x(3) y(1) x(2) y(2))
		move(x(4) x(1))
		genFastCall(<Q: 1511> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApply 3 x(0))
		setConstant('~')
		setValue(x(1))
		setValue(y(2))
		move(y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1511> 5)
lbl(230201)	testRecord(y(0) fOpApply 3 230244)
lbl(230206)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(230244)
		getLiteral('~' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyLiteral(nil)
lbl(230222)	shallowThen
		move(x(2) y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1511> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1509> 7)
lbl(230244)	match(y(0) ht(230304 [onRecord(fOpApply 3 230247) onRecord(fInt 2 230317) onRecord(fVar 2 230322)]))
lbl(230247)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(230304)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(230269)	shallowThen
		moveMoveXYXY(x(3) y(0) x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1511> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1511> 4)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL5
		genFastCall(<Q: 1510> 9)
lbl(230304)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(169)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(230317)	unify(y(1) y(0))
		deAllocateL5
		return
lbl(230322)	unify(y(1) y(0))
		deAllocateL5
		return
		endDefinition(230037)
lbl(230329)	definition(x(7) 230563 pid('NormalizeProduct' 3 pos('./compiler/UnnestFD.oz' 174 6) nil 13) <Q: 1512> nil)
		allocateL4
		move(x(0) y(0))
		match(y(0) ht(230530 [onRecord(fOpApply 3 230342) onRecord(fInt 2 230543) onRecord(fVar 2 230553)]))
lbl(230342)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(230530)
		getLiteral('*' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(230364)	shallowThen
		move(x(3) y(0))
		match(y(0) ht(230445 [onRecord(fOpApply 3 230371) onRecord(fInt 2 230458) onRecord(fVar 2 230485)]))
lbl(230371)	getVarVar(x(0) x(4))
		getVariable(x(7))
		shallowGuard(230445)
		getLiteral('*' x(0))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(230393)	shallowThen
		putList(x(12))
		setValue(x(6))
		setConstant(nil)
		putList(x(11))
		setValue(x(8))
		setValue(x(12))
		putRecord(fOpApply 3 x(10))
		setConstant('*')
		setValue(x(11))
		setValue(x(5))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(4))
		setValue(x(0))
		setValue(x(9))
		putRecord(fOpApply 3 x(3))
		setConstant('*')
		setValue(x(4))
		setValue(x(7))
		move(x(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1512> 7)
lbl(230445)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(197)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(230458)	getVariable(y(0))
		move(x(1) y(1))
		move(x(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1512> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('*' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
lbl(230485)	moveMoveXYXY(x(2) y(1) x(5) y(2))
		move(x(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1512> 6)
		testLiteral(y(3) fOne 230508)
lbl(230503)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(230508)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(3))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(230530)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(204)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(230543)	getVariable(x(0))
		unify(x(1) x(0))
		getLiteral(fOne x(2))
		deAllocateL4
		return
lbl(230553)	getNumber(1 x(1))
		unify(x(2) y(0))
		deAllocateL4
		return
		endDefinition(230329)
lbl(230563)	definition(x(7) 230897 pid('Normalize' 3 pos('./compiler/UnnestFD.oz' 207 6) nil 8) <Q: 1513> nil)
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 230752)
lbl(230583)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(230752)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(230605)	shallowThen
		moveMoveXYXY(x(6) y(0) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1513> 6)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1513> 6)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(1))
		testRecord(y(7) fZero 1 230657)
lbl(230652)	unify(y(2) y(5))
		deAllocateL8
		return
lbl(230657)	match(y(5) ht(230730 [onRecord(fZero 1 230660) onRecord(fOpApply 3 230665)]))
lbl(230660)	unify(y(2) y(7))
		deAllocateL8
		return
lbl(230665)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(230730)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(230687)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(y(3))
		getListValVar(x(1) x(0) x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(6))
		unifyValue(x(2))
		getListValVar(x(6) x(3) x(7))
		getList(x(7))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(230730)	getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(230752)	match(y(0) ht(230829 [onRecord(fOpApply 3 230755) onRecord(fInt 2 230842) onRecord(fVar 2 230856)]))
lbl(230755)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) '*' 230829)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1512> 6)
		testLiteral(y(5) fOne 230794)
lbl(230783)	unify(y(1) y(4))
		getRecord(fZero 1 y(2))
		unifyValue(y(3))
		deAllocateL8
		return
lbl(230794)	getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(230829)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(245)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(230842)	getVarVar(x(0) x(1))
		unify(y(1) x(0))
		getRecord(fZero 1 y(2))
		unifyValue(x(1))
		deAllocateL8
		return
lbl(230856)	getVoid(1)
		getVariable(x(0))
		getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(0))
		getList(x(3))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(230563)
lbl(230897)	definition(x(7) 231126 pid('SimplifyRest' 4 pos('./compiler/UnnestFD.oz' 250 6) nil 9) <Q: 1514> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 231062)
lbl(230919)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(231062)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(230941)	shallowThen
		moveMoveXYXY(x(4) y(0) x(7) y(4))
		move(x(6) y(5))
		testRecord(y(0) fOpApply 3 231016)
lbl(230955)	getVarVar(x(0) x(5))
		shallowGuard(231016)
		getLiteral('*' x(0))
		getList(x(5))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fVar 2 x(5))
		unifyValVar(y(1) x(8))
lbl(230990)	shallowThen
		moveMoveXYYX(x(0) y(0) y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1514> 8)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL7
		return
lbl(231016)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1514> 8)
		testRecord(y(6) fZero 1 231040)
lbl(231035)	unify(y(3) y(0))
		deAllocateL7
		return
lbl(231040)	getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(5))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyLiteral(nil)
		deAllocateL7
		return
lbl(231062)	testRecord(y(0) fOpApply 3 231116)
lbl(231067)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(231116)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fVar 2 x(1))
		unifyValVar(y(1) x(3))
lbl(231104)	shallowThen
		unify(y(2) x(0))
		getRecord(fZero 1 y(3))
		unifyValue(x(2))
		deAllocateL7
		return
lbl(231116)	getNumber(0 y(2))
		unify(y(3) y(0))
		deAllocateL7
		return
		endDefinition(230897)
lbl(231126)	definition(x(7) 231421 pid('Simplify' 2 pos('./compiler/UnnestFD.oz' 274 6) nil 10) <Q: 1515> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 231414)
lbl(231143)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(231414)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(231165)	shallowThen
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		move(x(4) y(3))
		testRecord(y(0) fOpApply 3 231384)
lbl(231179)	getVarVar(x(0) x(3))
		getVariable(x(6))
		shallowGuard(231384)
		getLiteral('*' x(0))
		getList(x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(7))
		getList(x(3))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fVar 2 x(3))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(231217)	shallowThen
		moveMoveXYXY(x(0) y(0) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYYX(x(6) y(7) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1514> 8)
		testRecord(y(9) fZero 1 231302)
lbl(231250)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(fVar 2 x(4))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(3))
		deAllocateL10
		return
lbl(231302)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('*')
		unifyVariable(x(3))
		unifyValue(y(7))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fVar 2 x(7))
		unifyValue(y(5))
		unifyValue(y(6))
		getList(x(2))
		unifyVariable(x(8))
		unifyLiteral(nil)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(6))
		move(y(9) x(0))
		move(x(8) x(1))
		deAllocateL10
		genFastCall(<Q: 1515> 5)
lbl(231384)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		move(y(2) x(0))
		move(x(2) x(1))
		deAllocateL10
		genFastCall(<Q: 1515> 5)
lbl(231414)	unify(y(1) y(0))
		deAllocateL10
		return
		endDefinition(231126)
lbl(231421)	definition(x(7) 232428 pid('MakeFdCompareStatement' 5 pos('./compiler/UnnestFD.oz' 301 3) nil 13) <Q: 1516> [y(1)])
		allocateL(11)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<Q: 1504> 12)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1511> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1513> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1515> 4)
		testRecord(y(4) fZero 1 231656)
lbl(231478)	getVariable(x(0))
		match(y(2) ht(231643 [onScalar('=:' 231483) onScalar('=<:' 231511) onScalar('\\=:' 231577)]))
lbl(231483)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fInt 2 x(1))
		unifyValue(y(3))
		unifyValue(x(0))
		getRecord(fInt 2 x(2))
		unifyNumber(0)
		unifyValue(y(0))
		deAllocateL
		return
lbl(231511)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`true`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(231577)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`false`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(231643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(319)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231656)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1505> 4)
		testBool(y(5) 232123 232415)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1506> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 231968 232112)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setValue(y(6))
		putRecord(fAtom 2 y(6))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 y(2))
		setVariable(x(0))
		setValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(231756)	definition(x(1) 231796 pid('' 2 pos('./compiler/UnnestFD.oz' 327 19) nil 4) unit nil)
		shallowGuard(231783)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(231772)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(231783)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(231756)
lbl(231796)	move(y(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 231873 231957)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(4) x(6))
		getListValVar(x(6) y(6) x(7))
		getList(x(7))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(231873)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(5))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fVar 2 x(4))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(6))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(7))
		getListValVar(x(7) y(4) x(8))
		getListValVar(x(8) y(6) x(9))
		getList(x(9))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(231957)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231968)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(3))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(5))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(6))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(10))
		getListValVar(x(10) x(1) x(11))
		getListValVar(x(11) x(2) x(12))
		getList(x(12))
		unifyValue(x(3))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(232112)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(232123)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1508> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		testBool(y(4) 232236 232336)
		getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(232347)
lbl(232236)	getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(5))
		getRecord(fInt 2 x(2))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyNumber(0)
		unifyValue(y(0))
		branch(232347)
lbl(232336)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(345)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(232347)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(7) x(6))
		getListValVar(x(6) y(8) x(7))
		getListValVar(x(7) y(9) x(8))
		getList(x(8))
		unifyValue(y(10))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(232415)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(231421)
lbl(232428)	definition(x(7) 233542 pid('MakeFdCompareExpression' 6 pos('./compiler/UnnestFD.oz' 362 3) nil 18) <Q: 1517> [y(1)])
		allocateL(12)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariableMove(y(3) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1504> 12)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1511> 4)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1513> 6)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1515> 4)
		testRecord(y(5) fZero 1 232634)
lbl(232488)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(x(0))
		putRecord(fInt 2 x(4))
		setValue(y(4))
		setValue(x(0))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fOpApply 3 x(6))
		unifyLiteral('.')
		unifyVariable(x(8))
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(fVar 2 x(9))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(4) x(1) x(13))
		getListValVar(x(13) x(2) x(14))
		getListValVar(x(14) x(3) x(15))
		getList(x(15))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(232634)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1505> 4)
		testBool(y(6) 233203 233529)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1506> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 233014 233192)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 y(3))
		setVariable(x(0))
		setValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(232734)	definition(x(1) 232774 pid('' 2 pos('./compiler/UnnestFD.oz' 385 19) nil 4) unit nil)
		shallowGuard(232761)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(232750)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(232761)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(232734)
lbl(232774)	move(y(6) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(4) 232885 233003)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(3) x(12))
		getList(x(12))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(232885)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(3) x(14))
		getList(x(14))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(233003)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233014)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(4))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(0))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(233192)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233203)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1508> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 233316 233416)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(233427)
lbl(233316)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyValue(y(4))
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(0))
		branch(233427)
lbl(233416)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233427)	getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(233529)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(232428)
lbl(233542)	definition(x(7) 233687 pid('GetVarsFromFdCompare' 3 pos('./compiler/UnnestFD.oz' 433 2) nil 6) <Q: 1518> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 233607)
lbl(233562)	getVarVar(x(3) x(4))
		shallowGuard(233607)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(233582)	shallowThen
		move(x(5) y(0))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1518> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1518> 7)
lbl(233607)	match(y(0) ht(233654 [onRecord(fOpApply 3 233610) onRecord(fInt 2 233667) onRecord(fVar 2 233672) onRecord(fZero 1 233680)]))
lbl(233610)	getVarVar(x(0) x(1))
		shallowGuard(233654)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(233630)	shallowThen
		moveMoveXYYX(x(2) y(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1518> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1518> 7)
lbl(233654)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(446)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233667)	unify(y(1) y(2))
		deAllocateL4
		return
lbl(233672)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(233680)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(233542)
lbl(233687)	definition(x(7) 233751 pid('GetVarsFromFdIn' 4 pos('./compiler/UnnestFD.oz' 449 2) nil 6) <Q: 1519> nil)
		testRecord(x(0) fRecord 2 233742)
lbl(233698)	allocateL2
		getVoid(1)
		getVariable(x(4))
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getListValVar(x(1) x(4) x(1))
		move(x(3) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1519> 8)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(233742)	unify(x(1) x(2))
		getNumber(0 x(3))
		return
		endDefinition(233687)
lbl(233751)	definition(x(7) 233933 pid('NormalizeCondisExpression' 5 pos('./compiler/UnnestFD.oz' 460 2) nil 8) <Q: 1520> nil)
		match(x(0) ht(233918 [onRecord(fFdCompare 4 233760) onRecord(fFdIn 4 233869)]))
lbl(233760)	allocateL9
		getVarVar(x(0) x(6))
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		genFastCall(<Q: 1504> 12)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1511> 4)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1513> 6)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1515> 4)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1518> 6)
		getNumber(1 y(3))
		getRecord(fFdCompare 4 y(4))
		unifyValue(y(5))
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getRecord(fInt 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(y(6) x(0))
		callBI('~' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL9
		return
lbl(233869)	allocateL2
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		match(x(5) ht(233900 [onScalar('::' 233881) onScalar(':::' 233892)]))
lbl(233881)	getList(x(1))
		unifyValue(x(6))
		unifyValue(x(2))
		getNumber(1 x(3))
		branch(233913)
lbl(233892)	move(x(6) x(0))
		genFastCall(<Q: 1519> 8)
		branch(233913)
lbl(233900)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(473)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(233913)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(233918)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(233751)
lbl(233933)	definition(x(7) 234028 pid('NormalizeCondisClause' 5 pos('./compiler/UnnestFD.oz' 478 2) nil 5) <Q: 1521> nil)
		match(x(0) ht(234013 [onScalar(nil 233942) onRecord('|' 2 233952)]))
lbl(233942)	unify(x(1) x(2))
		getNumber(0 x(3))
		getLiteral(nil x(4))
		return
lbl(233952)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1520> 10)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1521> 10)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		getList(y(3))
		unifyValue(y(6))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(234013)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(233933)
lbl(234028)	definition(x(7) 234232 pid('RenameFdCompare' 3 pos('./compiler/UnnestFD.oz' 498 2) nil 7) <Q: 1522> [g(8)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 234114)
lbl(234048)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(234114)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(234070)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1522> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1522> 7)
lbl(234114)	match(y(0) ht(234185 [onRecord(fOpApply 3 234117) onRecord(fInt 2 234198) onRecord(fVar 2 234203) onRecord(fZero 1 234225)]))
lbl(234117)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(234185)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(234139)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYYX(x(3) y(2) y(1) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1522> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1522> 7)
lbl(234185)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(514)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234198)	unify(y(2) y(0))
		deAllocateL3
		return
lbl(234203)	getVarVar(x(0) x(1))
		getRecord(fVar 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		move(y(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL3
		return
lbl(234225)	unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(234028)
lbl(234232)	definition(x(7) 234314 pid('RenameFdIn' 3 pos('./compiler/UnnestFD.oz' 517 2) nil 10) <Q: 1523> [g(8)])
		testRecord(x(0) fRecord 2 234308)
lbl(234243)	getVarVar(x(3) x(4))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord(fVar 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(0))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord(fVar 2 x(2))
		unifyVariable(x(8))
		unifyValue(x(6))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		callBI('Dictionary.get' [x(1) x(5)]#[x(0)])
		unify(x(0) x(8))
		move(x(7) x(0))
		move(x(9) x(2))
		genFastCall(<Q: 1523> 7)
lbl(234308)	unify(x(2) x(0))
		return
		endDefinition(234232)
lbl(234314)	definition(x(7) 235719 pid('GenerateCondisExpression' 4 pos('./compiler/UnnestFD.oz' 528 2) nil 18) <Q: 1524> [y(1) g(8)])
		allocateL(12)
		move(x(0) y(0))
		match(y(0) ht(235455 [onRecord(fFdCompare 4 234328) onRecord(fFdIn 4 235468)]))
lbl(234328)	getVarVar(x(4) x(5))
		getVarVar(x(6) x(7))
		shallowGuard(235455)
		getRecord(fInt 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(234344)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(8) y(3))
		move(x(7) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1522> 6)
		testRecord(y(5) fZero 1 234561)
lbl(234372)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setVariable(x(5))
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		move(y(3) x(2))
		callBI('~' [x(2)]#[x(3)])
		unify(x(3) x(5))
		putRecord(fAtom 2 x(3))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(5))
		setConstant(1)
		setValue(y(4))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fAtom 2 x(3))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(1) x(14))
		getListValVar(x(14) x(2) x(15))
		getListValVar(x(15) x(3) x(16))
		getListValVar(x(16) x(4) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(234561)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1505> 4)
		testBool(y(6) 235124 235444)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1506> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 234926 235113)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 y(2))
		setValue(y(3))
		setValue(y(4))
lbl(234646)	definition(x(1) 234686 pid('' 2 pos('./compiler/UnnestFD.oz' 550 14) nil 4) unit nil)
		shallowGuard(234673)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234662)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(234673)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234646)
lbl(234686)	move(y(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 234797 234915)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(4))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(2) x(12))
		getList(x(12))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(234797)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(2) x(14))
		getList(x(14))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(234915)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234926)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setVariable(x(4))
		setValue(y(4))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(4))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(4))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(235113)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235124)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1508> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 235222 235331)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyValue(y(3))
		unifyValue(y(4))
		branch(235342)
lbl(235222)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyVariable(x(3))
		unifyValue(y(4))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(3))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(4))
		branch(235342)
lbl(235331)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(574)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235342)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(4))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(235444)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235455)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(606)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235468)	getVarVar(x(0) x(4))
		getVarVar(x(5) y(0))
		match(x(0) ht(235704 [onScalar('::' 235477) onScalar(':::' 235593)]))
lbl(235477)	getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		putRecord(fVar 2 x(6))
		setVariable(x(7))
		setValue(x(4))
		callBI('Dictionary.get' [x(1) x(0)]#[x(8)])
		unify(x(8) x(7))
		getRecord(fApply 3 x(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(x(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(x(4))
		getList(x(3))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(x(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(x(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(x(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(int)
		unifyValue(x(4))
		getListValVar(x(1) x(5) x(14))
		getListValVar(x(14) x(6) x(15))
		getList(x(15))
		unifyValue(x(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(235593)	moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1523> 6)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(dom)
		unifyValue(y(0))
		getListValVar(x(1) y(3) x(10))
		getListValVar(x(10) y(4) x(11))
		getList(x(11))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(235704)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(605)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(234314)
lbl(235719)	definition(x(7) 235777 pid('OccursVar' 3 pos('./compiler/UnnestFD.oz' 609 2) nil 5) <Q: 1525> nil)
		match(x(0) ht(235762 [onScalar(nil 235728) onRecord('|' 2 235732)]))
lbl(235728)	getLiteral(false x(2))
		return
lbl(235732)	getVarVar(x(0) x(3))
		testRecord(x(0) fVar 2 235756)
lbl(235740)	getVariable(x(0))
		testBI('==' [x(0) x(1)]#[x(4)] 235750)
		getLiteral(true x(2))
		return
lbl(235750)	move(x(3) x(0))
		genFastCall(<Q: 1525> 7)
lbl(235756)	move(x(3) x(0))
		genFastCall(<Q: 1525> 7)
lbl(235762)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(617)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(235719)
lbl(235777)	definition(x(7) 235942 pid('GenerateCondisClause' 7 pos('./compiler/UnnestFD.oz' 620 2) nil 9) <Q: 1526> [g(2)])
		allocateL4
		callBI('NewDictionary' nil#[x(7)])
lbl(235787)	definition(x(8) 235889 pid('' 2 pos('./compiler/UnnestFD.oz' 632 3) nil 4) unit [x(3) x(1) g(0) x(7)])
		allocateL5
		getRecord(fVar 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1525> 6)
		testBool(y(3) 235866 235876)
		move(y(1) x(1))
		putConstant('CDVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(1) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(fVar 2 y(2))
		unifyValue(y(4))
		unifyValue(y(1))
		deAllocateL5
		return
lbl(235866)	getRecord(fAtom 2 y(2))
		unifyLiteral(void)
		unifyValue(y(1))
		deAllocateL5
		return
lbl(235876)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(633)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(235787)
lbl(235889)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(2) x(0))
		move(x(8) x(1))
		move(x(5) x(2))
		genFastCall(<P: 29> 6)
lbl(235911)	definition(x(1) 235931 pid('' 2 pos('./compiler/UnnestFD.oz' 642 21) nil 4) unit [y(3) y(1)])
		move(x(1) x(3))
		move(g(0) x(1))
		move(g(1) x(2))
		genFastCall(<Q: 1524> 9)
		endDefinition(235911)
lbl(235931)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
		endDefinition(235777)
lbl(235942)	definition(x(7) 235980 pid('OccursIn' 3 pos('./compiler/UnnestFD.oz' 647 2) nil 5) <Q: 1527> nil)
		testList(x(1) 235974)
lbl(235951)	getVarVar(x(1) x(3))
		inlineDot(x(1) 1 x(1) cache)
		testBI('==' [x(0) x(1)]#[x(4)] 235968)
		getLiteral(true x(2))
		return
lbl(235968)	move(x(3) x(1))
		genFastCall(<Q: 1527> 7)
lbl(235974)	getLiteral(false x(2))
		return
		endDefinition(235942)
lbl(235980)	definition(x(7) 236073 pid('VariableUnion' 3 pos('./compiler/UnnestFD.oz' 654 2) nil 3) <Q: 1528> nil)
		match(x(0) ht(236058 [onScalar(nil 235989) onRecord('|' 2 235993)]))
lbl(235989)	unify(x(2) x(1))
		return
lbl(235993)	allocateL5
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVoid(1)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1527> 6)
		testBool(y(4) 236032 236047)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1528> 7)
lbl(236032)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1528> 7)
lbl(236047)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(236058)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(663)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(235980)
lbl(236073)	definition(x(7) 236803 pid('MakeCondis' 4 pos('./compiler/UnnestFD.oz' 667 6) nil 28) <Q: 1529> nil)
		allocateL8
lbl(236080)	definition(x(4) 236119 pid('' 2 pos('./compiler/UnnestFD.oz' 684 9) nil 5) unit nil)
		allocateL4
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 1521> 10)
		getRecord('#' 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(236080)
lbl(236119)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(236136)	definition(x(1) 236177 pid('' 3 pos('./compiler/UnnestFD.oz' 689 6) nil 6) unit nil)
		shallowGuard(236164)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(236154)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1528> 7)
lbl(236164)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236136)
lbl(236177)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 28> 4)
lbl(236198)	definition(x(1) 236303 pid('' 2 pos('./compiler/UnnestFD.oz' 691 2) nil 7) unit [y(0) y(1) y(5)])
		shallowGuard(236290)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236216)	shallowThen
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(1) x(1))
		putConstant('CDControlVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(0) 3 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(g(1))
		sendMsg(getPrintName y(3) 1 cache)
		move(y(2) x(0))
		move(g(0) x(1))
		move(g(2) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		createVariableMove(y(3) x(5))
		createVariableMove(y(5) x(6))
		genFastCall(<Q: 1526> 14)
		getRecord('#' 3 y(0))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		deAllocateL6
		return
lbl(236290)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236198)
lbl(236303)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setVariable(x(2))
lbl(236328)	definition(x(1) 236369 pid('' 2 pos('./compiler/UnnestFD.oz' 698 19) nil 5) unit [y(1)])
		shallowGuard(236356)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236346)	shallowThen
		getRecord(fInt 2 x(1))
		unifyValue(x(3))
		unifyValue(g(0))
		return
lbl(236356)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(698)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236328)
lbl(236369)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(3))
		setValue(x(0))
		setVariable(x(2))
lbl(236391)	definition(x(1) 236427 pid('' 2 pos('./compiler/UnnestFD.oz' 699 39) nil 5) unit nil)
		shallowGuard(236414)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236409)	shallowThen
		unify(x(1) x(2))
		return
lbl(236414)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236391)
lbl(236427)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(6))
		setValue(x(0))
		setValue(y(5))
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setVariable(x(2))
lbl(236465)	definition(x(1) 236514 pid('' 2 pos('./compiler/UnnestFD.oz' 703 5) nil 5) unit [y(1)])
		shallowGuard(236501)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236483)	shallowThen
		getRecord(fRecord 2 x(1))
		unifyVariable(x(0))
		unifyValue(x(3))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(g(0))
		return
lbl(236501)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(703)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236465)
lbl(236514)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
lbl(236520)	definition(x(1) 236581 pid('' 3 pos('./compiler/UnnestFD.oz' 705 8) nil 6) unit nil)
		shallowGuard(236568)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(236538)	shallowThen
lbl(236539)	definition(x(1) 236556 pid('' 3 pos('./compiler/UnnestFD.oz' 706 14) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(236539)
lbl(236556)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(5) x(0))
		genFastCall(<P: 30> 9)
lbl(236568)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(705)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236520)
lbl(236581)	putRecord(fSkip 1 x(2))
		setValue(y(1))
		move(y(0) x(0))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fApply 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(2))
		unifyLiteral('.')
		unifyVariable(x(4))
		unifyValue(y(1))
		getList(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('.')
		unifyVariable(x(7))
		unifyValue(y(1))
		getList(x(7))
		unifyVariable(x(8))
		unifyVariable(x(9))
		getRecord(fVar 2 x(8))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(9))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(6))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(header)
		unifyValue(y(1))
		getListValVar(x(3) y(4) x(12))
		getListValVar(x(12) y(3) x(13))
		getListValVar(x(13) y(6) x(14))
		getList(x(14))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(fAnd 2 x(1))
		unifyValVar(y(7) x(15))
		getRecord(fApply 3 x(15))
		unifyVariable(x(16))
		unifyVariable(x(17))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(16))
		unifyLiteral('.')
		unifyVariable(x(18))
		unifyValue(y(1))
		getList(x(18))
		unifyVariable(x(19))
		unifyVariable(x(20))
		getRecord(fOpApply 3 x(19))
		unifyLiteral('.')
		unifyVariable(x(21))
		unifyValue(y(1))
		getList(x(21))
		unifyVariable(x(22))
		unifyVariable(x(23))
		getRecord(fVar 2 x(22))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(23))
		unifyVariable(x(24))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(24))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(20))
		unifyVariable(x(25))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(25))
		unifyLiteral('body')
		unifyValue(y(1))
		getListValVar(x(17) y(3) x(26))
		getListValVar(x(26) y(6) x(27))
		getList(x(27))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(236073)
lbl(236803)	definition(x(7) 236829 pid('IsStep' 2 pos('./compiler/Unnester.oz' 52 3) nil 3) <Q: 1530> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(236823 [onScalar('pos' 236815) onScalar(unit 236819)]))
lbl(236815)	getLiteral(false x(1))
		return
lbl(236819)	getLiteral(false x(1))
		return
lbl(236823)	getLiteral(true x(1))
		return
		endDefinition(236803)
lbl(236829)	definition(x(7) 236858 pid('CoordNoDebug' 2 pos('./compiler/Unnester.oz' 59 3) nil 4) <Q: 1531> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 236846)
lbl(236842)	unify(x(1) x(0))
		return
lbl(236846)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(236829)
lbl(236858)	definition(x(7) 236955 pid('LastCoordinatesOf' 2 pos('./compiler/Unnester.oz' 65 3) nil 2) <Q: 1532> nil)
		match(x(0) ht(236949 [onRecord(fAnd 2 236867) onRecord(fAtom 2 236874) onRecord(fVar 2 236882) onRecord(fWildcard 1 236890) onRecord(fEscape 2 236896) onRecord(fSelf 1 236904) onRecord(fDollar 1 236910) onRecord(fInt 2 236916) onRecord(fFloat 2 236924) onRecord(fRecord 2 236932) onRecord(fOpenRecord 2 236937) onRecord(fLocal 3 236942)]))
lbl(236867)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1532> 5)
lbl(236874)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236882)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236890)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236896)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236904)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236910)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236916)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236924)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(236932)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(236937)	getVariable(x(0))
		genFastCall(<Q: 1478> 5)
lbl(236942)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1532> 5)
lbl(236949)	getLiteral(unit x(1))
		return
		endDefinition(236858)
lbl(236955)	definition(x(7) 237005 pid('GetLast' 2 pos('./compiler/Unnester.oz' 82 3) nil 2) <Q: 1533> nil)
		match(x(0) ht(236999 [onScalar(nil 236964) onRecord('|' 2 236968)]))
lbl(236964)	getLiteral(nil x(1))
		return
lbl(236968)	allocateL3
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1533> 4)
		testLiteral(y(2) nil 236994)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1533> 5)
lbl(236994)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(236999)	unify(x(1) x(0))
		return
		endDefinition(236955)
lbl(237005)	definition(x(7) 237110 pid('DollarsInScope' 3 pos('./compiler/Unnester.oz' 112 3) nil 3) <Q: 1534> nil)
		match(x(0) ht(237104 [onRecord(fEq 3 237014) onRecord(fDollar 1 237039) onRecord(fRecord 2 237046) onRecord(fOpenRecord 2 237053) onRecord(fColon 2 237060) onRecord(fMethArg 2 237067) onRecord(fMethColonArg 3 237072) onRecord('|' 2 237079)]))
lbl(237014)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1534> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1534> 7)
lbl(237039)	inlinePlus1(x(1) x(0))
		unify(x(0) x(2))
		return
lbl(237046)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1534> 7)
lbl(237053)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1534> 7)
lbl(237060)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1534> 7)
lbl(237067)	getVariable(x(0))
		genFastCall(<Q: 1534> 7)
lbl(237072)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1534> 7)
lbl(237079)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1534> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1534> 7)
lbl(237104)	unify(x(2) x(1))
		return
		endDefinition(237005)
lbl(237110)	definition(x(7) 237300 pid('DollarCoord' 2 pos('./compiler/Unnester.oz' 135 3) nil 5) <Q: 1535> nil)
		match(x(0) ht(237294 [onRecord(fEq 3 237119) onRecord(fDollar 1 237150) onRecord(fRecord 2 237156) onRecord(fOpenRecord 2 237197) onRecord(fColon 2 237238) onRecord(fMethArg 2 237245) onRecord(fMethColonArg 3 237250) onRecord('|' 2 237257)]))
lbl(237119)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1535> 4)
		testLiteral(y(2) unit 237145)
lbl(237136)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1535> 5)
lbl(237145)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(237150)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(237156)	getVoid(1)
		getVariable(x(0))
lbl(237160)	definition(x(4) 237185 pid('' 3 pos('./compiler/Unnester.oz' 146 12) nil 3) unit nil)
		testLiteral(x(0) unit 237179)
lbl(237170)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1535> 5)
lbl(237179)	unify(x(2) x(0))
		return
		endDefinition(237160)
lbl(237185)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(237197)	getVoid(1)
		getVariable(x(0))
lbl(237201)	definition(x(4) 237226 pid('' 3 pos('./compiler/Unnester.oz' 152 12) nil 3) unit nil)
		testLiteral(x(0) unit 237220)
lbl(237211)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1535> 5)
lbl(237220)	unify(x(2) x(0))
		return
		endDefinition(237201)
lbl(237226)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(237238)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1535> 5)
lbl(237245)	getVariable(x(0))
		genFastCall(<Q: 1535> 5)
lbl(237250)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1535> 5)
lbl(237257)	definition(x(4) 237282 pid('' 3 pos('./compiler/Unnester.oz' 164 12) nil 3) unit nil)
		testLiteral(x(0) unit 237276)
lbl(237267)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1535> 5)
lbl(237276)	unify(x(2) x(0))
		return
		endDefinition(237257)
lbl(237282)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(237294)	getLiteral(unit x(1))
		return
		endDefinition(237110)
lbl(237300)	definition(x(7) 237486 pid('ReplaceDollar' 3 pos('./compiler/Unnester.oz' 173 3) nil 5) <Q: 1536> nil)
		match(x(0) ht(237480 [onRecord(fEq 3 237309) onRecord(fDollar 1 237343) onRecord(fRecord 2 237347) onRecord(fOpenRecord 2 237380) onRecord(fColon 2 237413) onRecord(fMethArg 2 237426) onRecord(fMethColonArg 3 237440) onRecord('|' 2 237457)]))
lbl(237309)	allocateL3
		getVarVar(x(0) y(0))
		getVariable(x(3))
		getRecord(fEq 3 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		unifyValue(x(3))
		move(x(1) y(2))
		genFastCall(<Q: 1536> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1536> 7)
lbl(237343)	unify(x(2) x(1))
		return
lbl(237347)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(237357)	definition(x(3) 237374 pid('' 2 pos('./compiler/Unnester.oz' 182 20) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1536> 7)
		endDefinition(237357)
lbl(237374)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(237380)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(237390)	definition(x(3) 237407 pid('' 2 pos('./compiler/Unnester.oz' 184 24) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1536> 7)
		endDefinition(237390)
lbl(237407)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(237413)	getVarVar(x(3) x(0))
		getRecord(fColon 2 x(2))
		unifyValVar(x(3) x(2))
		genFastCall(<Q: 1536> 7)
lbl(237426)	getVarVar(x(0) x(3))
		getRecord(fMethArg 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(3))
		genFastCall(<Q: 1536> 7)
lbl(237440)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fMethColonArg 3 x(2))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		genFastCall(<Q: 1536> 7)
lbl(237457)	definition(x(3) 237474 pid('' 2 pos('./compiler/Unnester.oz' 192 10) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1536> 7)
		endDefinition(237457)
lbl(237474)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(237480)	unify(x(2) x(0))
		return
		endDefinition(237300)
lbl(237486)	definition(x(7) 237579 pid('MakeTrivialLocalPrefix' 4 pos('./compiler/Unnester.oz' 198 3) nil 4) <Q: 1537> nil)
		match(x(0) ht(237563 [onRecord(fAnd 2 237495) onRecord(fVar 2 237530) onRecord(fWildcard 1 237543) onRecord(fDoImport 3 237553)]))
lbl(237495)	allocateL4
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1537> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1537> 9)
lbl(237530)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(237543)	unify(x(1) x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(237553)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unify(x(0) x(3))
		return
lbl(237563)	allocateL2
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<Q: 1480> 6)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(237486)
lbl(237579)	definition(x(7) 237623 pid('MakeDeclaration' 4 pos('./compiler/Unnester.oz' 221 3) nil 7) <Q: 1538> [y(3)])
		testList(x(0) 237617)
lbl(237588)	allocateL2
		move(g(0) x(4))
		inlineDot(x(4) declaration x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(237617)	unify(x(3) x(1))
		return
		endDefinition(237579)
lbl(237623)	definition(x(7) 237777 pid('MakeBoolCase' 7 pos('./compiler/Unnester.oz' 229 3) nil 9) <Q: 1539> [y(3)])
		allocateL8
		move(g(0) x(5))
		inlineDot(x(5) boolClause x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		sendMsg(init y(5) 1 cache)
		createVariable(y(6))
		testRecord(y(1) noElse 1 237701)
lbl(237673)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(6))
		branch(237727)
lbl(237701)	move(g(0) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(1) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
lbl(237727)	move(g(0) x(0))
		inlineDot(x(0) boolCase x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(4))
		move(y(4) x(0))
		inlineDot(x(0) noBoolShared x(1) cache)
		unify(x(1) y(3))
		deAllocateL8
		return
		endDefinition(237623)
lbl(237777)	definition(x(7) 237866 pid('SortNoColonsToFront' 5 pos('./compiler/Unnester.oz' 241 3) nil 6) <Q: 1540> nil)
		match(x(0) ht(237851 [onScalar(nil 237786) onRecord('|' 2 237793)]))
lbl(237786)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(237793)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariable(y(3))
		createVariable(y(4))
		testRecord(x(0) '#' 2 237825)
lbl(237814)	unify(x(1) y(3))
		getList(x(3))
		unifyValue(x(0))
		unifyValue(y(4))
		branch(237834)
lbl(237825)	getList(x(1))
		unifyValue(x(0))
		unifyValue(y(3))
		unify(x(3) y(4))
lbl(237834)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<Q: 1540> 11)
lbl(237851)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(254)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(237777)
lbl(237866)	createVariable(x(7))
lbl(237868)	definition(x(0) 237941 pid('IsGround' 2 pos('./compiler/Unnester.oz' 257 3) nil 4) <Q: 1541> [x(7)])
		match(x(0) ht(237935 [onRecord(fAtom 2 237877) onRecord(fInt 2 237881) onRecord(fFloat 2 237885) onRecord(fRecord 2 237889) onRecord(fColon 2 237913)]))
lbl(237877)	getLiteral(true x(1))
		return
lbl(237881)	getLiteral(true x(1))
		return
lbl(237885)	getLiteral(true x(1))
		return
lbl(237889)	getVarVar(x(0) x(3))
		testRecord(x(0) fAtom 2 237909)
lbl(237897)	move(x(3) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(237909)	getLiteral(false x(1))
		return
lbl(237913)	getVarVar(x(0) x(2))
		match(x(0) ht(237931 [onRecord(fAtom 2 237919) onRecord(fInt 2 237925)]))
lbl(237919)	move(x(2) x(0))
		genFastCall(<Q: 1541> 5)
lbl(237925)	move(x(2) x(0))
		genFastCall(<Q: 1541> 5)
lbl(237931)	getLiteral(false x(1))
		return
lbl(237935)	getLiteral(false x(1))
		return
		endDefinition(237868)
lbl(237941)	unify(x(0) x(7))
lbl(237944)	definition(x(7) 238177 pid('GroundToOzValue' 3 pos('./compiler/Unnester.oz' 275 3) nil 5) <Q: 1542> [g(9)])
		match(x(0) ht(238162 [onRecord(fAtom 2 237953) onRecord(fInt 2 237959) onRecord(fFloat 2 237965) onRecord(fRecord 2 237971)]))
lbl(237953)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(237959)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(237965)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(237971)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		exHandler(238043)
		move(x(0) y(3))
		createCond(238037)
lbl(237990)	lastClause
		clause
		thread(238008)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(3) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(238008)	ask
lbl(238009)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(3))
		setConstant('expansion error')
		setConstant('duplicate feature in record')
		moveMoveYXYX(y(1) x(2) y(2) x(1))
		deAllocateL6
		tailCall(x(2) 2)
lbl(238037)	move(y(3) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(238043)	putConstant(1 x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(238058)	definition(x(3) 238134 pid('' 2 pos('./compiler/Unnester.oz' 284 7) nil 6) unit [y(1) x(4)])
		testRecord(x(0) fColon 2 238100)
lbl(238069)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<Q: 1542> 6)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1542> 7)
lbl(238100)	move(g(1) x(2))
		createVariable(x(3))
		createVariable(x(4))
		callBI('Exchange' [x(2) x(3) x(4)]#nil)
		inlinePlus1(x(3) x(5))
		unify(x(5) x(4))
		getRecord('#' 2 x(1))
		unifyValVar(x(3) x(4))
		move(g(0) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1542> 7)
		endDefinition(238058)
lbl(238134)	moveMoveXYYX(x(1) y(4) y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(y(2) x(2))
		popEx
		deAllocateL6
		return
lbl(238162)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(297)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(237944)
lbl(238177)	createVariable(x(7))
lbl(238179)	definition(x(0) 238282 pid('IsPattern' 2 pos('./compiler/Unnester.oz' 300 3) nil 3) <Q: 1543> [x(7)])
		match(x(0) ht(238276 [onRecord(fEq 3 238188) onRecord(fAtom 2 238219) onRecord(fVar 2 238223) onRecord(fWildcard 1 238227) onRecord(fEscape 2 238231) onRecord(fInt 2 238235) onRecord(fFloat 2 238239) onRecord(fRecord 2 238243) onRecord(fOpenRecord 2 238256) onRecord(fColon 2 238269)]))
lbl(238188)	getVarVar(x(0) x(2))
		match(x(0) ht(238206 [onRecord(fVar 2 238194) onRecord(fWildcard 1 238200)]))
lbl(238194)	move(x(2) x(0))
		genFastCall(<Q: 1543> 5)
lbl(238200)	move(x(2) x(0))
		genFastCall(<Q: 1543> 5)
lbl(238206)	match(x(2) ht(238215 [onRecord(fVar 2 238209) onRecord(fWildcard 1 238212)]))
lbl(238209)	genFastCall(<Q: 1543> 5)
lbl(238212)	genFastCall(<Q: 1543> 5)
lbl(238215)	getLiteral(false x(1))
		return
lbl(238219)	getLiteral(true x(1))
		return
lbl(238223)	getLiteral(true x(1))
		return
lbl(238227)	getLiteral(true x(1))
		return
lbl(238231)	getLiteral(true x(1))
		return
lbl(238235)	getLiteral(true x(1))
		return
lbl(238239)	getLiteral(true x(1))
		return
lbl(238243)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(238256)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(238269)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1543> 5)
lbl(238276)	getLiteral(false x(1))
		return
		endDefinition(238179)
lbl(238282)	unify(x(0) x(7))
lbl(238285)	definition(x(7) 238336 pid('IsConstraint' 2 pos('./compiler/Unnester.oz' 327 3) nil 2) <Q: 1544> nil)
		match(x(0) ht(238330 [onRecord(fEq 3 238294) onRecord(fAtom 2 238298) onRecord(fVar 2 238302) onRecord(fWildcard 1 238306) onRecord(fEscape 2 238310) onRecord(fInt 2 238314) onRecord(fFloat 2 238318) onRecord(fRecord 2 238322) onRecord(fOpenRecord 2 238326)]))
lbl(238294)	getLiteral(true x(1))
		return
lbl(238298)	getLiteral(true x(1))
		return
lbl(238302)	getLiteral(true x(1))
		return
lbl(238306)	getLiteral(true x(1))
		return
lbl(238310)	getLiteral(true x(1))
		return
lbl(238314)	getLiteral(true x(1))
		return
lbl(238318)	getLiteral(true x(1))
		return
lbl(238322)	getLiteral(true x(1))
		return
lbl(238326)	getLiteral(true x(1))
		return
lbl(238330)	getLiteral(false x(1))
		return
		endDefinition(238285)
lbl(238336)	definition(x(7) 238820 pid('SortFunctorDescriptors' 9 pos('./compiler/Unnester.oz' 341 3) nil 13) <Q: 1545> nil)
		match(x(0) ht(238805 [onScalar(nil 238345) onRecord('|' 2 238507)]))
lbl(238345)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		testBI('IsFree' [x(2)]#[x(0)] 238368)
		getLiteral(unit x(2))
lbl(238368)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238394 238383)
		getLiteral(unit y(0))
		branch(238394)
lbl(238383)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238394)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238420 238409)
		getLiteral(nil y(1))
		branch(238420)
lbl(238409)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238420)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238446 238435)
		getLiteral(nil y(2))
		branch(238446)
lbl(238435)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(393)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238446)	move(y(3) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238472 238461)
		getLiteral(nil y(3))
		branch(238472)
lbl(238461)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238472)	move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238494 238496)
		getRecord(fSkip 1 y(4))
		unifyLiteral(unit)
		getRecord(fSkip 1 y(5))
		unifyLiteral(unit)
lbl(238494)	deAllocateL6
		return
lbl(238496)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(395)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238507)	allocateL9
		getVarVar(x(0) x(9))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(9) y(8))
		match(x(0) ht(238765 [onRecord(fRequire 2 238537) onRecord(fPrepare 3 238574) onRecord(fImport 2 238612) onRecord(fExport 2 238649) onRecord(fProp 2 238686) onRecord(fDefine 3 238723)]))
lbl(238537)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(2)]#[x(11)] 238549)
		unify(y(1) x(0))
		branch(238778)
lbl(238549)	putRecord('#' 2 x(11))
		setConstant('more than one `require\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238574)	getVoid(2)
		getVariable(x(10))
		testBI('IsFree' [x(3)]#[x(11)] 238587)
		unify(y(2) x(0))
		branch(238778)
lbl(238587)	putRecord('#' 2 x(11))
		setConstant('more than one `prepare\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238612)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(4)]#[x(11)] 238624)
		unify(y(3) x(0))
		branch(238778)
lbl(238624)	putRecord('#' 2 x(11))
		setConstant('more than one `import\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238649)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(5)]#[x(11)] 238661)
		unify(y(4) x(0))
		branch(238778)
lbl(238661)	putRecord('#' 2 x(11))
		setConstant('more than one `export\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238686)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(6)]#[x(11)] 238698)
		unify(y(5) x(0))
		branch(238778)
lbl(238698)	putRecord('#' 2 x(11))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238723)	getVarVar(x(0) x(10))
		getVariable(x(11))
		testBI('IsFree' [x(7)]#[x(12)] 238740)
		unify(y(6) x(0))
		unify(y(7) x(10))
		branch(238778)
lbl(238740)	putRecord('#' 2 x(10))
		setConstant('more than one `define\' descriptor ')
		setConstant('in functor definition')
		move(x(11) x(0))
		move(x(10) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(238778)
lbl(238765)	putRecord(kernel 3 x(10))
		setConstant(noElse)
		setConstant(386)
		setValue(x(0))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(238778)	moveMoveYXYX(y(8) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		move(y(7) x(8))
		deAllocateL9
		genFastCall(<Q: 1545> 19)
lbl(238805)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(399)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(238336)
lbl(238820)	definition(x(7) 239140 pid('SortClassDescriptors' 6 pos('./compiler/Unnester.oz' 402 3) nil 9) <Q: 1546> nil)
		match(x(0) ht(239125 [onScalar(nil 238829) onRecord('|' 2 238923)]))
lbl(238829)	allocateL3
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		testBI('IsFree' [x(2)]#[x(0)] 238845)
		getLiteral(nil x(2))
lbl(238845)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238871 238860)
		getLiteral(nil y(0))
		branch(238871)
lbl(238860)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(436)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238871)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238897 238886)
		getLiteral(nil y(1))
		branch(238897)
lbl(238886)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(437)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238897)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 238910 238912)
		getLiteral(nil y(2))
lbl(238910)	deAllocateL3
		return
lbl(238912)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(438)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238923)	allocateL6
		getVarVar(x(0) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		match(x(0) ht(239093 [onRecord(fFrom 2 238945) onRecord(fProp 2 238982) onRecord(fAttr 2 239019) onRecord(fFeat 2 239056)]))
lbl(238945)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(2)]#[x(8)] 238957)
		unify(y(1) x(0))
		branch(239106)
lbl(238957)	putRecord('#' 2 x(8))
		setConstant('more than one `from\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(239106)
lbl(238982)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(3)]#[x(8)] 238994)
		unify(y(2) x(0))
		branch(239106)
lbl(238994)	putRecord('#' 2 x(8))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(239106)
lbl(239019)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(4)]#[x(8)] 239031)
		unify(y(3) x(0))
		branch(239106)
lbl(239031)	putRecord('#' 2 x(8))
		setConstant('more than one `attr\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(239106)
lbl(239056)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(5)]#[x(8)] 239068)
		unify(y(4) x(0))
		branch(239106)
lbl(239068)	putRecord('#' 2 x(8))
		setConstant('more than one `feat\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(239106)
lbl(239093)	putRecord(kernel 3 x(7))
		setConstant(noElse)
		setConstant(432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(7)]#nil)
lbl(239106)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 1546> 13)
lbl(239125)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(238820)
lbl(239140)	putRecord('attr' [<M: ArgCounter> <M: BA> <M: StateUsed> <M: Stateful> reporter switches] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(239156)	definition(x(7) 239211 pid('Unnester,init/fast' 3 pos('./compiler/Unnester.oz' 451 6) nil 5) <Q: 1547> [y(0)])
		allocateL3
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		sendMsg(init y(2) 2 cache)
		move(y(2) x(0))
		inlineAssign(<M: BA> x(0) cache)
		move(y(0) x(0))
		inlineAssign(reporter x(0) cache)
		move(y(1) x(0))
		inlineAssign(switches x(0) cache)
		deAllocateL3
		return
		endDefinition(239156)
lbl(239211)	definition(x(8) 239252 pid('Unnester,init/slow' 1 pos('./compiler/Unnester.oz' 451 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1547> 7)
		endDefinition(239211)
lbl(239252)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(239264)	definition(x(7) 239618 pid('Unnester,unnestQuery/fast' 4 pos('./compiler/Unnester.oz' 457 6) nil 5) <Q: 1548> [y(0) y(3)])
		allocateL8
		putConstant(false x(4))
		inlineAssign(<M: Stateful> x(4) cache)
		move(x(3) y(0))
		testRecord(x(0) fDeclare 3 239516)
lbl(239287)	getVarVar(x(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1537> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		getSelf(x(2))
lbl(239322)	definition(x(1) 239376 pid('' 1 pos('./compiler/Unnester.oz' 463 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(239363)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(239343)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(239363)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(463)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(239322)
lbl(239376)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		putList(y(5))
		setVariable(x(1))
		setVariable(y(7))
		move(y(6) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		moveMoveXYYX(x(1) y(6) y(1) x(0))
		moveMoveYXYX(y(5) x(1) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1538> 8)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		call(y(6) 2)
		inlineAt(<M: BA> x(1) cache)
		move(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
lbl(239474)	definition(x(1) 239508 pid('' 1 pos('./compiler/Unnester.oz' 471 6) nil 2) unit nil)
		allocateL1
		move(x(0) y(0))
		putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(239474)
lbl(239508)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(239601)
lbl(239516)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		getLiteral(nil y(2))
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(1))
		createVariableMove(y(5) x(0))
		sendMsg(closeScope x(2) 1 cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1538> 8)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		call(y(1) 2)
lbl(239601)	inlineAt(<M: BA> x(1) cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(getFreeVariablesOfQuery x(1) 1 cache)
		endDefinition(239264)
lbl(239618)	definition(x(8) 239665 pid('Unnester,unnestQuery/slow' 1 pos('./compiler/Unnester.oz' 457 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1548> 9)
		endDefinition(239618)
lbl(239665)	putRecord('#' [1 2 fast] x(10))
		setConstant(unnestQuery)
		setValue(x(8))
		setValue(x(7))
lbl(239675)	definition(x(7) 239794 pid('Unnester,UnnestToTerm/fast' 4 pos('./compiler/Unnester.oz' 485 6) nil 6) <Q: 1549> [y(3) y(0)])
		match(x(0) ht(239789 [onRecord(fAtom 2 239684) onRecord(fInt 2 239719) onRecord(fFloat 2 239754)]))
lbl(239684)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(239719)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(239754)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(239789)	genCall(gci(g(1) true <M: UnnestToVar> true 4) 0)
		endDefinition(239675)
lbl(239794)	definition(x(8) 239841 pid('Unnester,UnnestToTerm/slow' 1 pos('./compiler/Unnester.oz' 485 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1549> 9)
		endDefinition(239794)
lbl(239841)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: UnnestToTerm>)
		setValue(x(8))
		setValue(x(7))
lbl(239851)	definition(x(7) 240115 pid('Unnester,UnnestToVar/fast' 4 pos('./compiler/Unnester.oz' 499 6) nil 5) <Q: 1550> [y(0)])
		match(x(0) ht(239994 [onRecord(fVar 2 239860) onRecord(fWildcard 1 239880) onRecord(fEscape 2 239923) onRecord(fGetBinder 2 239950)]))
lbl(239860)	getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(239880)	allocateL3
		getVariable(y(0))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
lbl(239923)	getVariable(x(4))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(239950)	allocateL2
		getVarVar(x(4) y(0))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(1) x(2))
		sendMsg(refer x(4) 3 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg('getVariable' x(1) 1 cache)
lbl(239994)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		createVariable(y(5))
		match(y(0) ht(240051 [onRecord(fSelf 1 240016) onRecord(fProc 5 240021) onRecord(fFun 5 240026) onRecord(fFunctor 3 240031) onRecord(fClass 4 240036) onRecord(fScanner 6 240041) onRecord(fParser 7 240046)]))
lbl(240016)	getLiteral('Self' y(5))
		branch(240054)
lbl(240021)	getLiteral('Proc' y(5))
		branch(240054)
lbl(240026)	getLiteral('Fun' y(5))
		branch(240054)
lbl(240031)	getLiteral('Functor' y(5))
		branch(240054)
lbl(240036)	getLiteral('Class' y(5))
		branch(240054)
lbl(240041)	getLiteral('Scanner' y(5))
		branch(240054)
lbl(240046)	getLiteral('Parser' y(5))
		branch(240054)
lbl(240051)	unify(y(5) y(1))
lbl(240054)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(239851)
lbl(240115)	definition(x(8) 240162 pid('Unnester,UnnestToVar/slow' 1 pos('./compiler/Unnester.oz' 499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1550> 9)
		endDefinition(240115)
lbl(240162)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: UnnestToVar>)
		setValue(x(8))
		setValue(x(7))
lbl(240172)	definition(x(7) 240291 pid('Unnester,MakeLabelOrFeature/fast' 2 pos('./compiler/Unnester.oz' 530 6) nil 6) <Q: 1551> [y(3) y(0)])
		match(x(0) ht(240276 [onRecord(fAtom 2 240181) onRecord(fVar 2 240216) onRecord(fInt 2 240236) onRecord(fEscape 2 240271)]))
lbl(240181)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(240216)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(1) x(2))
		move(x(3) x(1))
		tailSendMsg(refer x(4) 3 cache)
lbl(240236)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(240271)	getVariable(x(0))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> true 2) 0)
lbl(240276)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(539)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(240172)
lbl(240291)	definition(x(8) 240326 pid('Unnester,MakeLabelOrFeature/slow' 1 pos('./compiler/Unnester.oz' 530 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1551> 5)
		endDefinition(240291)
lbl(240326)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(240336)	definition(x(7) 240461 pid('Unnester,GenerateNewVar/fast' 4 pos('./compiler/Unnester.oz' 541 6) nil 5) <Q: 1552> nil)
		allocateL4
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		sendMsg(openScope x(4) 0 cache)
		getSelf(x(2))
lbl(240366)	definition(x(1) 240420 pid('' 1 pos('./compiler/Unnester.oz' 543 14) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(240407)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(240387)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(240407)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(240366)
lbl(240420)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		deAllocateL4
		tailSendMsg(closeScope x(1) 1 cache)
		endDefinition(240336)
lbl(240461)	definition(x(8) 240508 pid('Unnester,GenerateNewVar/slow' 1 pos('./compiler/Unnester.oz' 541 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1552> 9)
		endDefinition(240461)
lbl(240508)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: GenerateNewVar>)
		setValue(x(8))
		setValue(x(7))
lbl(240518)	definition(x(7) 245997 pid('Unnester,UnnestStatement/fast' 2 pos('./compiler/Unnester.oz' 548 6) nil 20) <Q: 1553> [y(0) y(3) y(4) g(10) y(6) y(5)])
		match(x(0) ht(245917 [onRecord(fStepPoint 3 240527) onRecord(fAnd 2 240625) onRecord(fEq 3 240647) onRecord(fAssign 3 241022) onRecord(fOpApplyStatement 3 241117) onRecord(fFdCompare 4 241205) onRecord(fFdIn 4 241268) onRecord(fObjApply 3 241389) onRecord(fDollar 1 241530) onRecord(fApply 3 241583) onRecord(fProc 5 241664) onRecord(fFun 5 242064) onRecord(fFunctor 3 242439) onRecord(fDoImport 3 243231) onRecord(fClass 4 243391) onRecord(fScanner 6 243831) onRecord(fParser 7 243891) onRecord(fLocal 3 243951) onRecord(fBoolCase 4 244190) onRecord(fCase 4 244711) onRecord(fLockThen 3 244764) onRecord(fLock 2 244832) onRecord(fThread 2 244933) onRecord(fTry 4 245019) onRecord(fRaise 2 245022) onRecord(fRaiseWith 3 245044) onRecord(fSkip 1 245175) onRecord(fFail 1 245206) onRecord(fNot 2 245237) onRecord(fCond 3 245295) onRecord(fOr 3 245416) onRecord(fCondis 2 245542)]))
lbl(240527)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(4) 240609 240614)
lbl(240563)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1530> 4)
		testBool(y(4) 240609 240614)
lbl(240576)	move(g(1) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(2))
		deAllocateL5
		return
lbl(240609)	unify(y(2) y(3))
		deAllocateL5
		return
lbl(240614)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(551)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(240625)	allocateL2
		getVarVar(x(0) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(240647)	allocateL9
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1530> 4)
		testBool(y(5) 240842 241011)
lbl(240671)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1544> 4)
		testBool(y(5) 240842 241011)
lbl(240684)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1544> 4)
		testBool(y(5) 240842 241011)
lbl(240697)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('=')
		setValue(x(1))
		setValue(y(2))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(4))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(0) x(1))
		getListValVar(x(1) y(1) x(2))
		getList(x(2))
		unifyValue(y(7))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(240842)	createVariable(y(5))
		createVariable(y(6))
		testRecord(y(1) fVar 2 240866)
lbl(240851)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(241003)
lbl(240866)	testRecord(y(1) fEscape 2 240900)
lbl(240871)	getVariable(x(0))
		shallowGuard(240900)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(240883)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(241003)
lbl(240900)	testRecord(y(0) fVar 2 240920)
lbl(240905)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(241003)
lbl(240920)	testRecord(y(0) fEscape 2 240956)
lbl(240925)	getVariable(x(0))
		createVariable(y(0))
		shallowGuard(240956)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(240939)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(241003)
lbl(240956)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
lbl(241003)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(6))
		deAllocateL9
		return
lbl(241011)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(241022)	allocateL4
		getVarVar(x(0) x(2))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(3) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(x(2) y(3))
		testBool(x(3) 241055 241077)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(241088)
lbl(241055)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute assignment used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(241088)
lbl(241077)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(241088)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(2))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('<-')
		setValue(x(1))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(241117)	allocateL7
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(2) x(2))
		inlineDot(x(2) procs x(3) cache)
		callBI('.' [x(3) x(0)]#[x(4)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(4) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(6) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		deAllocateL7
		return
lbl(241205)	allocateL8
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 1516> 10)
		getList(y(3))
		unifyValVar(y(4) x(0))
		getListValVar(x(0) y(6) x(1))
		move(y(1) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(241268)	allocateL6
		getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		match(x(0) ht(241300 [onScalar('::' 241290) onScalar(':::' 241295)]))
lbl(241290)	getLiteral(int y(4))
		branch(241313)
lbl(241295)	getLiteral(dom y(4))
		branch(241313)
lbl(241300)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(613)
		setValue(x(0))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(241313)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1531> 4)
		putRecord(fVar 2 x(3))
		setConstant('FD')
		setValue(y(3))
		putRecord(fAtom 2 x(5))
		setValue(y(4))
		setValue(y(3))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(5))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(y(2))
		setValue(x(7))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(241389)	allocateL4
		getVarVar(y(0) x(4))
		getVariable(y(1))
		inlineAt(<M: Stateful> x(0) cache)
		moveMoveXYXY(x(1) y(2) x(4) y(3))
		testBool(x(0) 241468 241490)
		putConstant(true x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		testRecord(y(0) fSelf 1 241501)
lbl(241422)	getVariable(x(0))
		inlineAt(reporter x(5) cache)
		putRecord('#' 2 x(8))
		setConstant('use a class in front of "," ')
		setConstant('or use "{self message}"')
		putRecord(hint [l m] x(7))
		setConstant('Hint')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(5) [coord items kind msg] cache)
		branch(241501)
lbl(241468)	inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(241501)
lbl(241490)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(619)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(241501)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(1))
		move(y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(241530)	allocateL3
		getVariable(y(0))
		inlineAt(reporter x(3) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(241583)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('UnnestApply' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyValue(y(0))
		deAllocateL8
		return
lbl(241664)	allocateL(12)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYYX(x(1) y(5) y(0) x(0))
		putConstant('Proc' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(241700)	definition(x(1) 241734 pid('' 2 pos('./compiler/Unnester.oz' 651 36) nil 4) unit nil)
		shallowGuard(241721)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(241716)	shallowThen
		unify(x(1) x(2))
		return
lbl(241721)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(651)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(241700)
lbl(241734)	moveMoveXYYX(x(0) y(8) y(3) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(241745)	definition(x(1) 241763 pid('' 2 pos('./compiler/Unnester.oz' 652 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(241745)
lbl(241763)	move(y(9) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		putConstant(0 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<Q: 1534> 6)
		testNumber(y(9) 1 241846)
lbl(241802)	move(y(9) x(0))
		putConstant(1 x(5))
		testLT(x(5) x(0) x(1) 241883)
lbl(241813)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(0) y(1) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1535> 4)
		move(y(9) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in procedure head allowed' x(2))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(241883)
lbl(241846)	testLiteral(y(3) nil 241852)
lbl(241850)	branch(241802)
lbl(241852)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(9) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('exactly one $ in head of lazy procedure required' x(2))
		sendMsg(error y(9) [coord kind msg] cache)
lbl(241883)	move(y(3) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(3))
		testBool(y(2) 241939 241944)
		getLiteral(true y(3))
		branch(241955)
lbl(241939)	unify(y(3) y(8))
		branch(241955)
lbl(241944)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(669)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(241955)	move(y(3) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) 'definition' x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(10) x(4))
		move(y(4) x(5))
		sendMsg(init y(3) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 242056 242045)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(3) 1 cache)
		branch(242056)
lbl(242045)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(672)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(242056)	getList(y(5))
		unifyValue(y(6))
		unifyValue(y(3))
		deAllocateL
		return
lbl(242064)	allocateL(12)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		move(x(1) y(4))
		putConstant('Fun' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(242098)	definition(x(1) 242132 pid('' 2 pos('./compiler/Unnester.oz' 682 36) nil 4) unit nil)
		shallowGuard(242119)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242114)	shallowThen
		unify(x(1) x(2))
		return
lbl(242119)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(682)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242098)
lbl(242132)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
lbl(242143)	definition(x(1) 242161 pid('' 2 pos('./compiler/Unnester.oz' 683 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(242143)
lbl(242161)	move(y(8) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1534> 6)
		createVariable(y(10))
		testNumber(y(8) 0 242224)
		putRecord(fDollar 1 x(0))
		setValue(y(3))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(10) x(2))
		genFastCall(<P: 21> 6)
		branch(242258)
lbl(242224)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(8) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1535> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('no $ in function head allowed' x(2))
		sendMsg(error y(8) [coord kind msg] cache)
		unify(y(10) y(0))
lbl(242258)	move(y(2) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(10) x(0) y(1) x(1))
		move(y(3) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(8))
		testBool(y(2) 242314 242319)
		getLiteral(true y(8))
		branch(242330)
lbl(242314)	unify(y(8) y(7))
		branch(242330)
lbl(242319)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(696)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(242330)	move(y(8) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) functionDefinition x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(9) x(4))
		move(y(3) x(5))
		sendMsg(init y(7) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 242431 242420)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(7) 1 cache)
		branch(242431)
lbl(242420)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(242431)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL
		return
lbl(242439)	allocateL(14)
		getVarVar(y(0) x(0))
		getVariable(y(1))
		inlineAt(reporter x(9) cache)
		move(x(1) y(2))
		move(x(9) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		createVariableMove(y(7) x(6))
		createVariableMove(y(8) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<Q: 1545> 18)
		testLiteral(y(3) unit 242840)
lbl(242485)	testLiteral(y(4) unit 242840)
lbl(242489)	move(y(0) x(0))
		putConstant('Functor' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(10))
		setVariable(y(11))
		setVariable(y(12))
		createVariableMove(y(13) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(11) x(0))
		sendMsg(getPrintName y(13) 1 cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(5) x(0))
		createVariableMove(y(0) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImports> false 4) 0)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(12) x(2))
		genCall(gci(g(0) true <M: AnalyseExports> false 3) 0)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('IMPORT' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(1))
		sendMsg(getPrintName y(6) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1531> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(11))
		setValue(y(8))
		putRecord(fAtom 2 x(3))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(y(12))
		putRecord(fAnd 2 x(1))
		setValue(y(9))
		setValue(x(2))
		putRecord(fLocal 3 y(13))
		setValue(x(0))
		setValue(x(1))
		setValue(y(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Body' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(8) 1 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(fAtom 2 x(3))
		setConstant(instantiate)
		setValue(y(1))
		putList(x(1))
		setValue(x(3))
		setValue(y(7))
		putRecord(fFun 5 x(2))
		setValue(y(9))
		setValue(x(0))
		setValue(y(13))
		setValue(x(1))
		setValue(y(6))
		putRecord(fAtom 2 x(0))
		setConstant('import')
		setValue(y(6))
		putRecord(fRecord 2 x(3))
		setValue(x(0))
		setValue(y(4))
		putRecord(fAtom 2 x(0))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(4))
		setValue(x(0))
		setValue(y(5))
		putList(x(7))
		setValue(y(10))
		setConstant(nil)
		putList(x(6))
		setValue(y(9))
		setValue(x(7))
		putList(x(1))
		setValue(x(4))
		setValue(x(6))
		putList(x(0))
		setValue(x(3))
		setValue(x(1))
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('NewFunctor')
		setValue(x(0))
		setValue(y(6))
		putRecord(fAnd 2 x(1))
		setValue(x(2))
		setValue(x(5))
		putRecord(fStepPoint 3 x(0))
		setValue(x(1))
		setConstant('definition')
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL
		return
lbl(242840)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('OuterFunctor' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('InnerFunctor' x(0))
		createVariableMove(y(10) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		putRecord(fVar 2 y(11))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(10) 1 cache)
		putRecord(fImport 2 x(1))
		setValue(y(3))
		setConstant(unit)
		putRecord(fAtom 2 x(7))
		setConstant(inner)
		setConstant(unit)
		putRecord(fColon 2 x(6))
		setValue(x(7))
		setValue(y(7))
		putRecord(fExportItem 1 x(5))
		setValue(x(6))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fExport 2 x(3))
		setValue(x(4))
		setConstant(unit)
		putRecord(fImport 2 x(14))
		setValue(y(5))
		setConstant(unit)
		putRecord(fExport 2 x(16))
		setValue(y(6))
		setConstant(unit)
		putRecord(fDefine 3 x(18))
		setValue(y(8))
		setValue(y(9))
		setConstant(unit)
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putRecord(fFunctor 3 x(12))
		setValue(y(7))
		setValue(x(13))
		setValue(y(1))
		putRecord(fAnd 2 x(10))
		setVariable(x(11))
		setValue(x(12))
		putRecord(fDefine 3 x(9))
		setValue(x(10))
		setVariable(x(19))
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fFunctor 3 y(10))
		setValue(y(11))
		setValue(x(0))
		setValue(y(1))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		move(y(4) x(1))
		putConstant(1 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(11))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		putConstant(2 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(19))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1531> 4)
		putRecord(fAtom 2 x(5))
		setVariable(x(6))
		setConstant(unit)
		putList(x(7))
		setValue(y(11))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putRecord(fOpApply 3 x(3))
		setConstant('ApplyFunctor')
		setValue(x(4))
		setValue(y(3))
		putRecord(fAtom 2 x(9))
		setConstant(inner)
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(0))
		setConstant('.')
		setValue(x(1))
		setValue(y(3))
		putRecord(fEq 3 x(2))
		setValue(y(0))
		setValue(x(0))
		setValue(y(3))
		move(y(1) x(0))
		putConstant(1 x(3))
		putConstant('' x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(6))
		putRecord(fAnd 2 x(1))
		setValue(y(10))
		setValue(x(2))
		putRecord(fLocal 3 x(3))
		setValue(y(11))
		setValue(x(1))
		setValue(y(1))
		move(x(3) x(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(243231)	allocateL8
		getVoid(1)
		getVarVar(y(0) x(2))
		getRecord(fVar 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		putRecord(fAtom 2 x(0))
		setValue(y(1))
		setValue(y(2))
		putConstant('Feature' x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(0) 2 cache)
		getList(y(3))
		unifyValVar(y(1) y(0))
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putList(x(5))
		setValue(y(6))
		setValue(x(6))
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(4) x(1))
		move(y(2) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL8
		return
lbl(243391)	allocateL(17)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Class' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1546> 12)
		move(y(1) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(9) x(0))
		move(g(5) x(1))
		move(y(0) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 32> 8)
		move(y(8) x(0))
		move(g(5) x(1))
		move(y(10) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1483> 4)
		getSelf(x(3))
lbl(243504)	definition(x(1) 243573 pid('' 2 pos('./compiler/Unnester.oz' 796 6) nil 5) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooPrivate)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(243504)
lbl(243573)	move(y(10) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		putConstant('Parent' x(1))
		createVariableMove(y(10) x(2))
		putConstant(nil x(3))
		createVariableMove(y(11) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(7) x(0))
		putConstant('Property' x(1))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		createVariableMove(y(12) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(8) x(0))
		putConstant('Attribute' x(1))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		createVariableMove(y(13) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		move(y(9) x(0))
		putConstant('Feature' x(1))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		createVariableMove(y(14) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		putConstant(<M: Stateful> x(3))
		putConstant(true x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(1)])
		getSelf(x(3))
lbl(243686)	definition(x(4) 243702 pid('' 2 pos('./compiler/Unnester.oz' 810 8) nil 3) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: UnnestMeth> true 2) 0)
		endDefinition(243686)
lbl(243702)	moveMoveXYXY(x(0) y(9) x(1) y(15))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		move(y(9) x(0))
		inlineAssign(<M: Stateful> x(0) cache)
		move(y(15) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		callBI(newObject [x(7)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		moveMoveYXYX(y(11) x(1) y(12) x(2))
		moveMoveYXYX(y(13) x(3) y(14) x(4))
		moveMoveYXYX(y(16) x(5) y(2) x(6))
		sendMsg(init y(9) 7 cache)
		getList(y(3))
		unifyValVar(y(4) x(3))
		putList(x(5))
		setValue(y(8))
		setValue(y(9))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(2))
		setValue(y(6))
		setValue(x(4))
		putList(x(0))
		setValue(y(10))
		setValue(x(2))
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL
		genFastCall(<Q: 1538> 9)
lbl(243831)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(243891)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(243951)	allocateL6
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 1537> 8)
		getSelf(x(2))
lbl(243988)	definition(x(1) 244136 pid('' 1 pos('./compiler/Unnester.oz' 869 6) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		testRecord(x(0) fVar 2 244023)
lbl(244004)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(244023)	testRecord(x(0) fDoImport 3 244079)
lbl(244028)	allocateL2
		getVarVar(x(4) x(3))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: UnnestImportFeatures> true 2) 0)
lbl(244079)	allocateL1
		move(x(0) y(0))
		testRecord(y(0) fExportItem 1 244121)
lbl(244088)	getVariable(x(2))
		shallowGuard(244121)
		getRecord(fVar 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(244100)	shallowThen
		inlineAt(<M: BA> x(5) cache)
		move(x(3) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bindExport x(5) 3 cache)
lbl(244121)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(879)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243988)
lbl(244136)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putList(y(0))
		setVariable(x(1))
		setVariable(y(4))
		move(y(5) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genFastCall(<Q: 1538> 9)
lbl(244190)	allocateL(11)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		callBI('Label' [x(0)]#[x(2)])
		inlineAt(switches x(3) cache)
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(x(2) y(5))
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(3) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 244521)
lbl(244233)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 244521)
lbl(244257)	inlineAt(switches x(2) cache)
		putConstant(staticanalysis x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(6) 244674 244700)
lbl(244278)	testLiteral(y(5) fOrElse 244515)
lbl(244282)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1538> 8)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1478> 4)
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(0) x(3))
		createVariableMove(y(6) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		createVariable(y(5))
		createVariable(y(7))
		testRecord(y(1) fNoElse 1 244413)
lbl(244365)	getVariable(y(1))
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(5))
lbl(244393)	definition(x(0) 244408 pid('ApplyFalseProc' 1 pos('./compiler/Unnester.oz' 906 4) nil 1) unit [y(1)])
		getRecord(noElse 1 x(0))
		unifyValue(g(0))
		return
		endDefinition(244393)
lbl(244408)	unify(x(0) y(7))
		branch(244486)
lbl(244413)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(2) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 1538> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1478> 4)
		moveMoveYXYX(y(10) x(1) y(2) x(2))
		moveMoveYXYX(y(5) x(3) y(7) x(4))
		putConstant('FalseCase' x(0))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
lbl(244486)	getList(y(3))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariable(x(3))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(244515)	testLiteral(y(5) fAndThen 244521)
		branch(244282)
lbl(244521)	move(y(4) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1538> 8)
		createVariable(y(0))
		testRecord(y(1) fNoElse 1 244601)
lbl(244591)	getVariable(x(0))
		getRecord(noElse 1 y(0))
		unifyValue(x(0))
		branch(244648)
lbl(244601)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1538> 8)
lbl(244648)	getList(y(3))
		unifyValVar(y(5) x(6))
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		createVariable(x(4))
		deAllocateL
		genFastCall(<Q: 1539> 15)
lbl(244674)	inlineAt(switches x(2) cache)
		putConstant(codegen x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 244521)
		branch(244278)
lbl(244700)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(885)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(244711)	allocateL7
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Arbiter' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(3))
		unifyValVar(y(4) y(6))
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		genCall(gci(g(0) true <M: UnnestCase> true 5) 0)
lbl(244764)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Lock' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValVar(y(3) y(0))
		move(g(1) x(0))
		inlineDot(x(0) lockNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(4) x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL6
		return
lbl(244832)	allocateL4
		getVarVar(x(0) y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		testBool(x(2) 244860 244882)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(244893)
lbl(244860)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(244893)
lbl(244882)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(940)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(244893)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) objectLockNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		move(y(0) x(1))
		sendMsg(init y(2) 2 cache)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(244933)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1538> 8)
		move(g(1) x(0))
		inlineDot(x(0) threadNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(245019)	genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(245022)	getVarVar(x(2) x(3))
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('Raise')
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(245044)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Exception' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(5))
		setVariable(y(6))
		setValue(y(1))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(6) x(0))
		sendMsg(getPrintName y(7) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1531> 4)
		putList(x(2))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApply 3 x(1))
		setConstant('RaiseDebugCheck')
		setValue(x(2))
		setValue(y(4))
		putList(x(5))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		putRecord(fOpApplyStatement 3 x(3))
		setConstant('RaiseDebugExtend')
		setValue(x(4))
		setValue(y(1))
		putList(x(7))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(6))
		setConstant('Raise')
		setValue(x(7))
		setValue(y(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(6))
		setValue(y(4))
		getList(y(2))
		unifyValVar(y(3) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(245175)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) skipNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(245206)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) failNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(245237)	getVarVar(x(2) x(3))
		putRecord(fSkip 1 x(7))
		setValue(x(3))
		putRecord(fFail 1 x(8))
		setValue(x(3))
		putRecord(fClause 3 x(6))
		setValue(x(7))
		setValue(x(2))
		setValue(x(8))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putRecord(fSkip 1 x(9))
		setValue(x(3))
		putRecord(fCond 3 x(4))
		setValue(x(5))
		setValue(x(9))
		setValue(x(3))
		putRecord(fThread 2 x(0))
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(245295)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant(fif x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		createVariable(y(4))
		testRecord(y(0) fNoElse 1 245348)
lbl(245320)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
		branch(245383)
lbl(245348)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(5) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
lbl(245383)	move(g(1) x(0))
		inlineDot(x(0) ifNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL6
		return
lbl(245416)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		match(y(0) ht(245529 [onScalar(for 245436) onScalar(fdis 245467) onScalar(fchoice 245498)]))
lbl(245436)	move(g(1) x(0))
		inlineDot(x(0) orNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(245467)	move(g(1) x(0))
		inlineDot(x(0) disNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(245498)	move(g(1) x(0))
		inlineDot(x(0) choiceNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(245529)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(990)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245542)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		getSelf(x(3))
lbl(245568)	definition(x(1) 245843 pid('' 2 pos('./compiler/Unnester.oz' 995 6) nil 5) unit [x(3) g(0) x(0)])
		move(g(0) x(2))
		setSelf(x(2))
		getSelf(x(3))
lbl(245581)	definition(x(4) 245832 pid('' 2 pos('./compiler/Unnester.oz' 997 3) nil 4) unit [x(3) g(1) g(2)])
		allocateL(11)
		move(g(0) x(2))
		setSelf(x(2))
		move(x(1) y(0))
		createVariable(y(1))
		createVariable(y(2))
		match(x(0) ht(245800 [onRecord(fFdCompare 4 245604) onRecord(fFdIn 4 245651)]))
lbl(245604)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdCompare 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(245813)
lbl(245651)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariable(y(6))
		createVariable(y(7))
		match(y(3) ht(245720 [onScalar('::' 245664) onScalar(':::' 245710)]))
lbl(245664)	move(y(6) x(2))
		putConstant('UnnestFDIn' x(1))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		getRecord(fVar 2 y(7))
		unifyVariable(x(0))
		unifyVariable(y(8))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(8) x(0))
		sendMsg(getCoord y(9) 1 cache)
		branch(245733)
lbl(245710)	moveMoveYXYX(y(6) x(1) y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDList> false 3) 0)
		branch(245733)
lbl(245720)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1013)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245733)	move(y(4) x(0))
		putConstant('UnnestDomain' x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(9) 1 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(4) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(4) 1 cache)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdIn 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(245813)
lbl(245800)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(1019)
		setValue(x(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(245813)	putList(x(0))
		setVariable(x(1))
		setValue(y(1))
		move(g(2) x(2))
		callBI('Exchange' [x(2) x(1) x(0)]#nil)
		unify(y(2) y(0))
		deAllocateL
		return
		endDefinition(245581)
lbl(245832)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(245568)
lbl(245843)	moveMoveXYYX(x(0) y(3) y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: BA> x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<Q: 1529> 8)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(3) x(0))
		callBI('Access' [x(0)]#[x(4)])
		putList(x(1))
		setValue(x(4))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1538> 9)
lbl(245917)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(reporter x(3) cache)
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		putConstant('expression at statement position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Error' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fVar 2 x(1))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(240518)
lbl(245997)	definition(x(8) 246032 pid('Unnester,UnnestStatement/slow' 1 pos('./compiler/Unnester.oz' 548 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1553> 5)
		endDefinition(245997)
lbl(246032)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: UnnestStatement>)
		setValue(x(8))
		setValue(x(7))
lbl(246042)	definition(x(7) 251181 pid('Unnester,UnnestExpression/fast' 3 pos('./compiler/Unnester.oz' 1034 6) nil 13) <Q: 1554> [y(3) y(0) y(4) g(11) g(12)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1478> 4)
		match(y(0) ht(251150 [onRecord(fTypeOf 1 246067) onRecord(fStepPoint 3 246122) onRecord(fAnd 2 246219) onRecord(fEq 3 246243) onRecord(fAssign 3 246265) onRecord(fOrElse 3 246362) onRecord(fAndThen 3 246414) onRecord(fOpApply 3 246466) onRecord(fUnoptimizedDot 2 246778) onRecord(fFdCompare 4 246907) onRecord(fFdIn 4 246969) onRecord(fObjApply 3 247123) onRecord(fAt 2 247309) onRecord(fAtom 2 247396) onRecord(fVar 2 247482) onRecord(fWildcard 1 247559) onRecord(fEscape 2 247587) onRecord(fSelf 1 247598) onRecord(fDollar 1 247721) onRecord(fInt 2 247771) onRecord(fFloat 2 247857) onRecord(fRecord 2 247943) onRecord(fOpenRecord 2 248064) onRecord(fApply 3 248185) onRecord(fProc 5 248393) onRecord(fFun 5 248470) onRecord(fFunctor 3 248547) onRecord(fClass 4 248614) onRecord(fScanner 6 248682) onRecord(fParser 7 248752) onRecord(fLocal 3 248826) onRecord(fBoolCase 4 249328) onRecord(fCase 4 249399) onRecord(fLockThen 3 249889) onRecord(fLock 2 249921) onRecord(fThread 2 250004) onRecord(fTry 4 250041) onRecord(fRaise 2 250440) onRecord(fRaiseWith 3 250473) onRecord(fNot 2 250506) onRecord(fCond 3 250534) onRecord(fOr 3 250821)]))
lbl(246067)	getVariable(y(0))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(1) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) typeOf x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		move(y(1) x(1))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(246122)	getVarVar(x(0) y(0))
		getVariable(y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 246203 246208)
lbl(246157)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1530> 4)
		testBool(y(1) 246203 246208)
lbl(246170)	move(g(0) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(3) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL
		return
lbl(246203)	unify(y(2) y(4))
		deAllocateL
		return
lbl(246208)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1040)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246219)	getVarVar(x(0) y(0))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(246243)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(4))
		deAllocateL
		return
lbl(246265)	getVarVar(x(0) x(1))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		testBool(x(2) 246294 246316)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(246327)
lbl(246294)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute exchange used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(246327)
lbl(246316)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1051)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(246327)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(y(4))
		setValue(x(3))
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooExch)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(246362)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fVar 2 x(5))
		setConstant('`true`')
		setValue(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(5))
		setValue(x(4))
		putRecord(fEq 3 x(6))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(6))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(246414)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fVar 2 x(6))
		setConstant('`false`')
		setValue(x(4))
		putRecord(fEq 3 x(5))
		setValue(y(1))
		setValue(x(6))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(5))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(246466)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1534> 6)
		testNumber(y(6) 0 246489)
		branch(246546)
lbl(246489)	createVariable(y(6))
		testList(y(4) 246507)
lbl(246494)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 246507)
		getLiteral(prefix y(6))
		branch(246510)
lbl(246507)	getLiteral(infix y(6))
lbl(246510)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(7) y(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1535> 4)
		putRecord('#' 2 x(2))
		setValue(y(6))
		setConstant(' operator cannot take $ as argument')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
lbl(246546)	testRecord(y(0) fOpApply 3 246612)
lbl(246551)	getVarVar(x(0) x(1))
		shallowGuard(246612)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(246587)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(246612)	testRecord(y(0) fOpApply 3 246680)
lbl(246617)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(246680)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(246655)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(246680)	move(g(2) x(0))
		inlineDot(x(0) procs x(1) cache)
		move(y(3) x(2))
		callBI('.' [x(1) x(2)]#[x(3)])
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(3) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 21> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(3) x(0))
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		sendMsg(init y(1) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(6))
		unifyValue(y(1))
		deAllocateL
		return
lbl(246778)	getVarVar(x(3) y(3))
		getRecord(fVar 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(4))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(referUnchecked x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(3))
		setValue(x(1))
		createVariableMove(y(3) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValVar(y(7) y(9))
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(8))
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		move(x(4) x(1))
		move(y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(9))
		deAllocateL
		return
lbl(246907)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(9) x(2) y(5) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1517> 12)
		getList(y(2))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(246969)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		match(x(0) ht(246998 [onScalar('::' 246988) onScalar(':::' 246993)]))
lbl(246988)	getLiteral(int y(6))
		branch(247011)
lbl(246993)	getLiteral(dom y(6))
		branch(247011)
lbl(246998)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(247011)	move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1531> 4)
		putRecord(fVar 2 x(5))
		setConstant('FD')
		setValue(y(5))
		putRecord(fAtom 2 x(7))
		setConstant(reified)
		setValue(y(5))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putRecord(fOpApply 3 x(3))
		setConstant('.')
		setValue(x(4))
		setValue(y(5))
		putRecord(fAtom 2 x(9))
		setValue(y(6))
		setValue(y(5))
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(7))
		putList(x(12))
		setValue(y(1))
		setConstant(nil)
		putList(x(11))
		setValue(y(3))
		setValue(x(12))
		putList(x(10))
		setValue(y(4))
		setValue(x(11))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(10))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(247123)	getVarVar(y(3) y(4))
		getVariable(y(5))
		inlineAt(<M: Stateful> x(0) cache)
		testBool(x(0) 247236 247258)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1534> 6)
		testNumber(y(6) 1 247209)
		testRecord(y(3) fSelf 1 247269)
lbl(247166)	getVariable(x(0))
		inlineAt(reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('use a class in front of "," ')
		setConstant('or use {self message}')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(247269)
lbl(247209)	inlineAt(reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('message of nested object application ')
		setConstant('must contain exactly one nesting marker')
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(247269)
lbl(247236)	inlineAt(reporter x(3) cache)
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(247269)
lbl(247258)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1112)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247269)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1536> 6)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(247309)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 247334 247356)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(247367)
lbl(247334)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute access used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(247367)
lbl(247356)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1138)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(247367)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(4))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('@')
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(247396)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(247482)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(6) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(247559)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(247587)	getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(247598)	getVariable(y(3))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(4) x(1) y(5))
		testBool(x(2) 247632 247654)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(247665)
lbl(247632)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('self used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(247665)
lbl(247654)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1158)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(247665)	move(g(0) x(0))
		inlineDot(x(0) 'getSelf' x(1) cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(247721)	getVariable(y(3))
		inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(0) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(247771)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(247857)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(247943)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 248002)
lbl(247997)	getLiteral('' y(8))
		branch(248005)
lbl(248002)	unify(y(8) y(5))
lbl(248005)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(3) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(248064)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 248123)
lbl(248118)	getLiteral('' y(8))
		branch(248126)
lbl(248123)	unify(y(8) y(5))
lbl(248126)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(248185)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(3) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1534> 6)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1534> 6)
		testNumber(y(6) 0 248254)
lbl(248218)	testNumber(y(7) 0 248254)
lbl(248222)	putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248254)	testNumber(y(6) 0 248290)
lbl(248258)	testNumber(y(7) 1 248290)
lbl(248262)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1536> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248290)	testNumber(y(6) 1 248341)
lbl(248294)	testNumber(y(7) 0 248341)
lbl(248298)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1536> 6)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(6))
		setValue(y(3))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248341)	inlineAt(reporter x(0) cache)
		putList(x(2))
		setValue(y(3))
		setValue(y(4))
		move(x(0) y(3))
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1535> 4)
		putRecord('#' 2 x(2))
		setConstant('at most one nesting marker allowed ')
		setConstant('in nested application')
		move(y(4) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248393)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 248427)
lbl(248406)	putRecord(fProc 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248427)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested procedure')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248470)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 248504)
lbl(248483)	putRecord(fFun 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248504)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested function')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248547)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testRecord(x(0) fDollar 1 248574)
lbl(248557)	putRecord(fFunctor 3 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248574)	inlineAt(reporter x(1) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(5) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested functor' x(2))
		sendMsg(error y(4) [coord kind msg] cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248614)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		testRecord(x(0) fDollar 1 248644)
lbl(248625)	putRecord(fClass 4 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248644)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested class' x(2))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248682)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		testRecord(x(0) fDollar 1 248719)
lbl(248696)	putRecord(fScanner 6 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248719)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested scanner class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(248752)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		testRecord(x(0) fDollar 1 248793)
lbl(248768)	putRecord(fParser 7 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(248793)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested parser class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(248826)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(0))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1537> 8)
		getSelf(x(4))
lbl(248884)	definition(x(1) 249111 pid('' 3 pos('./compiler/Unnester.oz' 1276 19) nil 7) unit [x(4) y(6) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		testRecord(x(1) fVar 2 248945)
lbl(248900)	allocateL3
		getVarVar(y(0) x(1))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(y(0) x(0))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		move(y(0) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL3
		return
lbl(248945)	testRecord(x(1) fDoImport 3 249028)
lbl(248950)	allocateL5
		getVarVar(x(4) x(5))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(1))
		unifyVariable(y(1))
		unifyVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		move(x(5) x(3))
		createVariableMove(y(4) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: UnnestImportFeatures> false 2) 0)
		move(y(1) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(2) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(3))
		deAllocateL5
		return
lbl(249028)	allocateL3
		move(x(1) y(0))
		testRecord(y(0) fExportItem 1 249096)
lbl(249037)	getVariable(x(4))
		shallowGuard(249096)
		getRecord(fVar 2 x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(249049)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYYX(x(5) y(2) y(2) x(0))
		move(x(6) x(1))
		createVariable(x(2))
		sendMsg(bindExport x(4) 3 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
		deAllocateL3
		return
lbl(249096)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1289)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(248884)
lbl(249111)	move(y(8) x(0))
		putConstant(false x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 249266 249317)
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('AntiNameClash' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putList(y(8))
		setVariable(x(1))
		setVariable(y(10))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(10) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		getList(y(2))
		unifyVariable(y(4))
		unifyVariable(y(6))
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		createVariableMove(y(10) x(1))
		sendMsg(occ y(3) 2 cache)
		move(y(9) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(10) x(1) y(5) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(4))
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		deAllocateL
		genFastCall(<Q: 1538> 9)
lbl(249266)	putList(y(3))
		setVariable(x(1))
		setVariable(y(6))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL
		genFastCall(<Q: 1538> 9)
lbl(249317)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249328)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1532> 4)
		createVariable(y(8))
		testRecord(y(5) fNoElse 1 249355)
lbl(249350)	unify(y(8) y(5))
		branch(249370)
lbl(249355)	getRecord(fEq 3 y(8))
		unifyValue(y(1))
		unifyValVar(y(5) x(1))
		move(y(5) x(0))
		genFastCall(<Q: 1532> 4)
lbl(249370)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(y(3))
		setValue(x(1))
		setValue(y(8))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(249399)	getVarVar(x(0) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(1))
		inlineDot(x(1) 1 x(2) cache)
		move(x(2) y(6))
		putConstant('Arbiter' x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(9) 1 cache)
		getSelf(x(0))
lbl(249463)	definition(x(1) 249830 pid('' 3 pos('./compiler/Unnester.oz' 1315 4) nil 5) unit [x(0) y(6) y(5) g(1) y(1) y(8)])
		allocateL5
		move(g(0) x(3))
		setSelf(x(3))
lbl(249475)	definition(x(4) 249514 pid('' 3 pos('./compiler/Unnester.oz' 1317 8) nil 5) unit nil)
		shallowGuard(249501)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(249491)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
lbl(249501)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1317)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249475)
lbl(249514)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
lbl(249534)	definition(x(1) 249574 pid('' 2 pos('./compiler/Unnester.oz' 1320 20) nil 4) unit [g(1)])
		shallowGuard(249561)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(249550)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(249561)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1320)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249534)
lbl(249574)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(4) 249727 249817)
		move(g(1) x(0))
		move(y(3) x(1))
		move(g(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setValue(g(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(3))
		unifyValue(g(4))
		unifyValue(g(2))
		getRecord(fCase 4 x(1))
		unifyValVar(g(5) x(2))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(249651)	definition(x(1) 249717 pid('' 2 pos('./compiler/Unnester.oz' 1327 6) nil 4) unit [y(3)])
		shallowGuard(249704)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(249667)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1532> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(249704)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249651)
lbl(249717)	move(y(0) x(0))
		move(x(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(249727)	getRecord(fCase 4 y(2))
		unifyValVar(g(5) x(0))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(249744)	definition(x(1) 249810 pid('' 2 pos('./compiler/Unnester.oz' 1333 8) nil 4) unit [g(4)])
		shallowGuard(249797)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(249760)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1532> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(249797)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1333)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249744)
lbl(249810)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(249817)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1320)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249463)
lbl(249830)	move(x(1) y(5))
		createVariable(y(6))
		testRecord(y(4) fNoElse 1 249845)
lbl(249840)	unify(y(6) y(4))
		branch(249863)
lbl(249845)	getRecord(fEq 3 y(6))
		unifyValue(y(1))
		unifyValVar(y(4) x(2))
		move(y(4) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1532> 4)
lbl(249863)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 32> 8)
		getList(y(2))
		unifyValVar(y(7) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(249889)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fLockThen 3 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(249921)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 249946 249968)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(249979)
lbl(249946)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(249979)
lbl(249968)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1346)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(249979)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(3))
		putRecord(fLock 2 x(0))
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250004)	getVarVar(y(3) y(4))
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1532> 4)
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(3))
		setValue(y(5))
		putRecord(fThread 2 x(0))
		setValue(x(1))
		setValue(y(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250041)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('TryResult' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setValue(y(6))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fEq 3 x(0))
		setValue(y(8))
		setValue(y(3))
		setValue(y(6))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(8))
		setValue(y(6))
		putRecord(fAnd 2 x(2))
		setValue(x(0))
		setValue(x(1))
		match(y(4) ht(250427 [onScalar(fNoCatch 250112) onRecord(fCatch 2 250131)]))
lbl(250112)	putRecord(fTry 4 x(0))
		setValue(x(2))
		setConstant(fNoCatch)
		setValue(y(5))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250131)	getVarVar(y(3) y(4))
lbl(250134)	definition(x(1) 250173 pid('' 3 pos('./compiler/Unnester.oz' 1364 2) nil 5) unit nil)
		shallowGuard(250160)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(250150)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
lbl(250160)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1364)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250134)
lbl(250173)	moveMoveXYYX(x(2) y(7) y(3) x(0))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(250196)	definition(x(3) 250236 pid('' 2 pos('./compiler/Unnester.oz' 1368 21) nil 4) unit [x(1)])
		shallowGuard(250223)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(250212)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(250223)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250196)
lbl(250236)	moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(x(3) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(11))
		createVariable(y(12))
		createVariable(y(13))
		testBool(y(10) 250327 250351)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(6) x(2))
		createVariableMove(y(10) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		getRecord(fVar 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(6))
		sendMsg(getPrintName y(10) 1 cache)
		getRecord(fAnd 2 y(12))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(1))
		unifyValue(y(11))
		unifyValue(y(6))
		getRecord(fTry 4 x(1))
		unifyValVar(y(7) x(2))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(2))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(250362)
lbl(250327)	unify(y(11) y(1))
		getRecord(fTry 4 y(12))
		unifyValVar(y(7) x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(0))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(250362)
lbl(250351)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(250362)	definition(x(1) 250410 pid('' 2 pos('./compiler/Unnester.oz' 1379 7) nil 4) unit [y(11) y(6)])
		shallowGuard(250397)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(250378)	shallowThen
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(3))
		unifyValue(g(1))
		return
lbl(250397)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250362)
lbl(250410)	moveMoveYXYX(y(3) x(0) y(13) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(12) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250427)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1383)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(250440)	getVoid(1)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(250473)	getVoid(2)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(250506)	getVarVar(x(2) x(3))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fNot 2 x(0))
		setValue(x(1))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250534)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(250547)	definition(x(1) 250588 pid('' 3 pos('./compiler/Unnester.oz' 1394 6) nil 6) unit nil)
		shallowGuard(250575)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250565)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
lbl(250575)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250547)
lbl(250588)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fCond 3 y(8))
		setVariable(x(2))
		setVariable(y(9))
		setValue(y(5))
		createVariable(y(10))
lbl(250612)	definition(x(1) 250664 pid('' 2 pos('./compiler/Unnester.oz' 1398 3) nil 5) unit [y(10) y(5)])
		shallowGuard(250651)
		getRecord(fClause 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(250630)	shallowThen
		getRecord(fClause 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(4))
		unifyValue(g(1))
		return
lbl(250651)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1398)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250612)
lbl(250664)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		testRecord(y(4) fNoElse 1 250680)
lbl(250675)	unify(y(9) y(4))
		branch(250690)
lbl(250680)	getRecord(fEq 3 y(9))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(5))
lbl(250690)	definition(x(1) 250730 pid('' 2 pos('./compiler/Unnester.oz' 1404 18) nil 4) unit [y(6)])
		shallowGuard(250717)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(250706)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(250717)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1404)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250690)
lbl(250730)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 250798 250810)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250798)	unify(y(10) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(250810)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(250821)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(250834)	definition(x(1) 250875 pid('' 3 pos('./compiler/Unnester.oz' 1416 6) nil 6) unit nil)
		shallowGuard(250862)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250852)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
lbl(250862)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1416)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250834)
lbl(250875)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fOr 3 y(8))
		setVariable(x(2))
		setValue(y(4))
		setValue(y(5))
		getSelf(x(3))
		createVariable(y(4))
lbl(250901)	definition(x(1) 251013 pid('' 2 pos('./compiler/Unnester.oz' 1420 8) nil 8) unit [x(3) y(4) y(5)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(251000)
		getRecord(fClause 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250924)	shallowThen
		testRecord(x(5) fNoThen 1 250980)
lbl(250930)	allocateL4
		getVariable(x(0))
		inlineAt(reporter x(6) cache)
		putRecord('#' 2 x(7))
		setConstant('`then\' part in nested `or\' ')
		setConstant('not optional')
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error x(6) [coord kind msg] cache)
		getRecord(fClause 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(250980)	getRecord(fClause 3 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(1))
		unifyValue(x(5))
		unifyValue(g(2))
		return
lbl(251000)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1420)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250901)
lbl(251013)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
lbl(251019)	definition(x(1) 251059 pid('' 2 pos('./compiler/Unnester.oz' 1431 18) nil 4) unit [y(6)])
		shallowGuard(251046)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(251035)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(251046)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1431)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(251019)
lbl(251059)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 251127 251139)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(251127)	unify(y(4) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(251139)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1431)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251150)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('syntax error' x(1))
		putConstant('statement at expression position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(246042)
lbl(251181)	definition(x(8) 251222 pid('Unnester,UnnestExpression/slow' 1 pos('./compiler/Unnester.oz' 1034 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1554> 7)
		endDefinition(251181)
lbl(251222)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: UnnestExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(251232)	definition(x(7) 251456 pid('Unnester,UnnestApplyArgs/fast' 4 pos('./compiler/Unnester.oz' 1448 6) nil 6) <Q: 1555> [y(0) g(11) y(3)])
		match(x(0) ht(251441 [onScalar(nil 251241) onRecord('|' 2 251251)]))
lbl(251241)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(251251)	allocateL10
		getVarVar(x(0) y(0))
		testRecord(x(0) fRecord 2 251403)
lbl(251260)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(3) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('UnnestApply' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(g(1) x(3))
		putConstant('' x(0))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		getList(y(3))
		unifyValVar(y(9) y(1))
		move(g(2) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(2) y(6) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(7) 2 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(3) x(0))
		moveMoveYXYX(y(8) x(1) y(6) x(2))
		sendMsg(init y(9) 3 cache)
		getList(y(4))
		unifyValVar(y(9) y(2))
		getList(y(5))
		unifyVariable(x(1))
		unifyVariable(y(3))
		move(y(6) x(0))
		sendMsg(occ y(7) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(251403)	getList(x(1))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(4) x(2))
		putConstant('UnnestApply' x(1))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(251441)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1474)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251232)
lbl(251456)	definition(x(8) 251503 pid('Unnester,UnnestApplyArgs/slow' 1 pos('./compiler/Unnester.oz' 1448 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1555> 9)
		endDefinition(251456)
lbl(251503)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(251513)	definition(x(7) 251795 pid('Unnester,UnnestConstraint/fast' 4 pos('./compiler/Unnester.oz' 1476 6) nil 8) <Q: 1556> [y(0) g(11) y(3) g(12)])
		match(x(0) ht(251784 [onRecord(fEq 3 251522) onRecord(fRecord 2 251571) onRecord(fOpenRecord 2 251658) onRecord(fVar 2 251745) onRecord(fWildcard 1 251751) onRecord(fEscape 2 251758) onRecord(fAtom 2 251766) onRecord(fInt 2 251772) onRecord(fFloat 2 251778)]))
lbl(251522)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(4))
		unifyValue(y(6))
		getList(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(251571)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(1) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(251658)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(3) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(251745)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(251751)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(251758)	getVariable(x(0))
		getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(251766)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(251772)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(251778)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(251784)	getLiteral(nil x(2))
		move(x(3) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(251513)
lbl(251795)	definition(x(8) 251842 pid('Unnester,UnnestConstraint/slow' 1 pos('./compiler/Unnester.oz' 1476 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1556> 9)
		endDefinition(251795)
lbl(251842)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: UnnestConstraint>)
		setValue(x(8))
		setValue(x(7))
lbl(251852)	definition(x(7) 252403 pid('Unnester,UnnestRecord/fast' 6 pos('./compiler/Unnester.oz' 1517 6) nil 6) <Q: 1557> [y(0) g(13) g(11) g(12) g(14) y(3)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		putConstant(1 x(4))
		callBI('NewCell' [x(4)]#[x(5)])
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(4))
		getSelf(x(4))
lbl(251897)	definition(x(1) 252328 pid('' 3 pos('./compiler/Unnester.oz' 1524 3) nil 7) unit [x(4) g(0) x(5) y(0) g(2) g(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(252315)
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(251918)	shallowThen
		allocateL10
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(1) fColon 2 252006)
lbl(251938)	getVarVar(y(6) y(7))
		moveMoveXYYX(x(4) y(8) y(6) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(2) y(7))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(8))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(4))
		match(y(6) ht(251993 [onRecord(fAtom 2 251972) onRecord(fVar 2 251979) onRecord(fInt 2 251986)]))
lbl(251972)	getVariable(x(0))
		unify(y(5) x(0))
		branch(252033)
lbl(251979)	getVariable(x(0))
		unify(y(5) x(0))
		branch(252033)
lbl(251986)	getVariable(x(0))
		unify(y(5) x(0))
		branch(252033)
lbl(251993)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1532)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252006)	unify(y(2) x(1))
		getList(y(3))
		unifyValue(y(4))
		unifyValue(x(4))
		move(g(2) x(0))
		callBI('Access' [x(0)]#[x(4)])
		unify(x(4) y(5))
		callBI('Access' [x(0)]#[x(4)])
		inlinePlus1(x(4) x(6))
		callBI('Assign' [x(0) x(6)]#nil)
lbl(252033)	match(y(2) ht(252246 [onRecord(fEq 3 252036) onRecord(fRecord 2 252118) onRecord(fOpenRecord 2 252182)]))
lbl(252036)	getVoid(2)
		getVariable(y(5))
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(occ y(6) 2 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(6) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(252118)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 252137)
lbl(252132)	getLiteral('' y(7))
		branch(252147)
lbl(252137)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(252147)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(4) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(252182)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 252201)
lbl(252196)	getLiteral('' y(7))
		branch(252211)
lbl(252201)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(252211)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(5) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(252246)	moveMoveYXYX(y(2) x(0) y(4) x(3))
		putConstant('RecordArg' x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestToTerm> false 4) 0)
		match(g(3) ht(252263 [onScalar('' 252300)]))
lbl(252263)	move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1533> 4)
		match(y(2) ht(252275 [onScalar(nil 252300)]))
lbl(252275)	putRecord('#' 3 x(0))
		setValue(g(3))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 195> 4)
		move(y(4) x(0))
		sendMsg(setPrintName y(2) 1 cache)
lbl(252300)	getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(252315)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1524)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(251897)
lbl(252328)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 30> 8)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		createVariable(x(2))
		move(y(0) x(0))
		move(x(2) x(3))
		createVariableMove(y(1) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1540> 10)
		move(g(5) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
		endDefinition(251852)
lbl(252403)	definition(x(8) 252462 pid('Unnester,UnnestRecord/slow' 1 pos('./compiler/Unnester.oz' 1517 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1557> 13)
		endDefinition(252403)
lbl(252462)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: UnnestRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(252472)	definition(x(7) 252916 pid('Unnester,UnnestProc/fast' 5 pos('./compiler/Unnester.oz' 1578 6) nil 6) <Q: 1558> [y(0)])
		allocateL(11)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(nil x(1))
		createVariableMove(y(5) x(2))
		putConstant(nil x(3))
		createVariableMove(y(6) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestProcFormals> false 6) 0)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1532> 4)
		createVariable(y(8))
		testList(y(5) 252764)
lbl(252525)	getVarVar(x(2) x(0))
lbl(252528)	definition(x(1) 252545 pid('' 3 pos('./compiler/Unnester.oz' 1586 25) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(252528)
lbl(252545)	createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getVars x(1) 1 cache)
lbl(252565)	definition(x(1) 252593 pid('' 2 pos('./compiler/Unnester.oz' 1591 7) nil 3) unit nil)
		getRecord(fVar 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(unit)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(252565)
lbl(252593)	move(y(9) x(0))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 29> 6)
lbl(252602)	definition(x(1) 252622 pid('' 3 pos('./compiler/Unnester.oz' 1592 17) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1481> 7)
		endDefinition(252602)
lbl(252622)	move(y(0) x(0))
		createVariableMove(y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(10) x(0) y(9) x(1))
		createVariableMove(y(0) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1479> 8)
		match(y(0) ht(252751 [onScalar(nil 252651) onRecord('|' 2 252691)]))
lbl(252651)	getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyVariable(x(3))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fSkip 1 x(3))
		unifyValue(y(3))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(252767)
lbl(252691)	getVarVar(x(2) x(0))
lbl(252694)	definition(x(1) 252711 pid('' 3 pos('./compiler/Unnester.oz' 1597 29) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(252694)
lbl(252711)	createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyValue(y(0))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(252767)
lbl(252751)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1601)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252764)	unify(y(8) y(1))
lbl(252767)	createVariable(y(0))
		testBool(y(2) 252820 252825)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1531> 4)
		getRecord(fOpApply 3 y(0))
		unifyLiteral(byNeed)
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fFun 5 x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		unifyValue(y(8))
		unifyLiteral(nil)
		unifyValue(y(1))
		getRecord(fDollar 1 x(2))
		unifyValue(y(3))
		branch(252836)
lbl(252820)	unify(y(0) y(8))
		branch(252836)
lbl(252825)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1605)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252836)	definition(x(1) 252855 pid('' 3 pos('./compiler/Unnester.oz' 1611 29) nil 3) unit [y(7)])
		getRecord(fEq 3 x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(g(0))
		return
		endDefinition(252836)
lbl(252855)	moveMoveYXYX(y(6) x(0) y(0) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		genFastCall(<Q: 1538> 9)
		endDefinition(252472)
lbl(252916)	definition(x(8) 252969 pid('Unnester,UnnestProc/slow' 1 pos('./compiler/Unnester.oz' 1578 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1558> 11)
		endDefinition(252916)
lbl(252969)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: UnnestProc>)
		setValue(x(8))
		setValue(x(7))
lbl(252979)	definition(x(7) 253056 pid('Unnester,UnnestProcFormals/fast' 6 pos('./compiler/Unnester.oz' 1616 6) nil 7) <Q: 1559> [y(0)])
		match(x(0) ht(253041 [onScalar(nil 252988) onRecord('|' 2 252995)]))
lbl(252988)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(252995)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(5) y(2))
		move(x(2) x(3))
		move(x(4) x(5))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(6))
		genCall(gci(g(0) true <M: UnnestProcFormal> false 7) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(2) x(5))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestProcFormals> true 6) 0)
lbl(253041)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1623)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(252979)
lbl(253056)	definition(x(8) 253115 pid('Unnester,UnnestProcFormals/slow' 1 pos('./compiler/Unnester.oz' 1616 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1559> 13)
		endDefinition(253056)
lbl(253115)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(8))
		setValue(x(7))
lbl(253125)	definition(x(7) 253527 pid('Unnester,UnnestProcFormal/fast' 7 pos('./compiler/Unnester.oz' 1625 6) nil 9) <Q: 1560> nil)
		match(x(0) ht(253391 [onRecord(fVar 2 253134) onRecord(fWildcard 1 253272) onRecord(fDollar 1 253320)]))
lbl(253134)	allocateL10
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		moveMoveXYYX(x(6) y(8) y(0) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 253229 253261)
		unify(y(4) y(3))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(1))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		move(x(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(253229)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariable(x(2))
		sendMsg(bind x(3) 3 cache)
		getList(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unify(y(5) y(6))
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(253261)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1627)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(253272)	allocateL6
		getVariable(x(7))
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(1))
		putConstant('Wildcard' x(0))
		createVariable(x(2))
		sendMsg(generate x(8) 3 cache)
		unify(y(1) y(0))
		unify(y(2) y(3))
		unify(y(4) y(5))
		deAllocateL6
		return
lbl(253320)	allocateL8
		getVariable(y(0))
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(y(0) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(7) 3 cache)
		unify(y(2) y(1))
		unify(y(3) y(4))
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(x(1) x(0))
		move(y(7) x(1))
		deAllocateL8
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(253391)	allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1543> 4)
		testBool(y(8) 253431 253453)
		branch(253464)
lbl(253431)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('syntax error' x(1))
		putConstant('only patterns in proc/fun head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(253464)
lbl(253453)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(253464)	inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		unify(y(2) y(1))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyValue(y(7))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		move(x(2) x(0))
		sendMsg(getPrintName y(8) 1 cache)
		unify(y(5) y(6))
		deAllocateL9
		return
		endDefinition(253125)
lbl(253527)	definition(x(8) 253592 pid('Unnester,UnnestProcFormal/slow' 1 pos('./compiler/Unnester.oz' 1625 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1560> 15)
		endDefinition(253527)
lbl(253592)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(253602)	definition(x(7) 253851 pid('Unnester,AnalyseImports/fast' 4 pos('./compiler/Unnester.oz' 1662 6) nil 7) <Q: 1561> [y(0)])
		match(x(0) ht(253836 [onScalar(nil 253611) onRecord('|' 2 253621)]))
lbl(253611)	getLiteral(nil x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(253621)	allocateL(12)
		getVarVar(y(0) y(1))
		getRecord(fImportItem 3 y(0))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		getRecord(fVar 2 x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		moveMoveXYXY(x(3) y(8) x(4) y(9))
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		moveMoveYXYX(y(2) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImportFeatures> false 4) 0)
		getRecord(fAnd 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAnd 2 x(0))
		unifyVariable(x(2))
		unifyValue(y(11))
		getRecord(fDoImport 3 x(2))
		unifyValue(y(0))
		unifyVoid(1)
		unifyValue(y(6))
		putRecord(fAtom 2 x(2))
		setConstant(info)
		setValue(y(5))
		putRecord(fAtom 2 x(5))
		setConstant(type)
		setValue(y(5))
		putRecord(fColon 2 x(4))
		setValue(x(5))
		setValue(y(10))
		putList(x(3))
		setValue(x(4))
		setVariable(x(6))
		putRecord(fRecord 2 x(0))
		setValue(x(2))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(0) y(2))
		match(y(3) ht(253789 [onScalar(fNoImportAt 253758) onRecord(fImportAt 1 253763)]))
lbl(253758)	getLiteral(nil x(6))
		branch(253802)
lbl(253763)	getVariable(x(2))
		getList(x(6))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fColon 2 x(3))
		unifyVariable(x(4))
		unifyValue(x(2))
		getRecord(fAtom 2 x(4))
		unifyLiteral('from')
		unifyValue(y(5))
		branch(253802)
lbl(253789)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1677)
		setValue(y(3))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(253802)	getList(y(7))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord(fAtom 2 x(1))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(0) x(3))
		deAllocateL
		genCall(gci(g(0) true <M: AnalyseImports> true 4) 0)
lbl(253836)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1683)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(253602)
lbl(253851)	definition(x(8) 253898 pid('Unnester,AnalyseImports/slow' 1 pos('./compiler/Unnester.oz' 1662 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1561> 9)
		endDefinition(253851)
lbl(253898)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AnalyseImports>)
		setValue(x(8))
		setValue(x(7))
lbl(253908)	definition(x(7) 254086 pid('Unnester,AnalyseImportFeatures/fast' 4 pos('./compiler/Unnester.oz' 1685 6) nil 9) <Q: 1562> [y(0)])
		match(x(0) ht(254071 [onScalar(nil 253917) onRecord('|' 2 253932)]))
lbl(253917)	getRecord(fAtom 2 x(2))
		unifyLiteral(nil)
		unifyLiteral(unit)
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(253932)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		createVariable(y(4))
		createVariable(y(5))
		move(x(3) y(6))
		testRecord(y(0) '#' 2 254024)
lbl(253956)	getVarVar(x(4) x(5))
		shallowGuard(254024)
		getRecord(fVar 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(253969)	shallowThen
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(4) y(0) x(5) y(7))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariable(x(2))
		sendMsg(bind x(8) 3 cache)
		unify(y(4) y(7))
		getRecord(fAnd 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fEq 3 x(0))
		unifyValVar(y(0) x(1))
		unifyLiteral(unit)
		getRecord(fUnoptimizedDot 2 x(1))
		unifyValue(y(1))
		unifyValue(y(7))
		branch(254030)
lbl(254024)	unify(y(4) y(0))
		unify(y(6) y(5))
lbl(254030)	getRecord(fRecord 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('|')
		unifyLiteral(unit)
		getListValVar(x(1) y(4) x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(x(4) x(2))
		move(y(5) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AnalyseImportFeatures> true 4) 0)
lbl(254071)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1700)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(253908)
lbl(254086)	definition(x(8) 254133 pid('Unnester,AnalyseImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1685 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1562> 9)
		endDefinition(254086)
lbl(254133)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(254143)	definition(x(7) 254336 pid('Unnester,UnnestImportFeatures/fast' 2 pos('./compiler/Unnester.oz' 1702 6) nil 7) <Q: 1563> [y(0)])
		match(x(0) ht(254321 [onScalar(nil 254152) onRecord('|' 2 254156)]))
lbl(254152)	getLiteral(nil x(1))
		return
lbl(254156)	allocateL5
		getVarVar(y(0) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) '#' 2 254266)
lbl(254179)	getVarVar(x(3) x(4))
		shallowGuard(254266)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254192)	shallowThen
		inlineAt(<M: BA> x(3) cache)
		move(x(4) y(0))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		match(y(0) ht(254253 [onRecord(fAtom 2 254219) onRecord(fInt 2 254236)]))
lbl(254219)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(254312)
lbl(254236)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(254312)
lbl(254253)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1708)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254266)	match(y(0) ht(254299 [onRecord(fAtom 2 254269) onRecord(fInt 2 254284)]))
lbl(254269)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(254312)
lbl(254284)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(254312)
lbl(254299)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1711)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254312)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestImportFeatures> true 2) 0)
lbl(254321)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1713)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(254143)
lbl(254336)	definition(x(8) 254371 pid('Unnester,UnnestImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1563> 5)
		endDefinition(254336)
lbl(254371)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(254381)	definition(x(7) 254624 pid('Unnester,OptimizeImportFeature/fast' 7 pos('./compiler/Unnester.oz' 1715 6) nil 8) <Q: 1564> [y(4) y(0) y(3)])
		allocateL7
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(referImport x(7) 5 cache)
		move(y(4) x(0))
		testBI('Not' [x(0)]#[x(1)] 254532)
lbl(254431)	move(g(0) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putList(x(0))
		setValue(y(2))
		setValue(x(1))
		createVariableMove(y(0) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(3))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValVar(y(2) y(3))
		move(g(2) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(6))
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(x(4) x(1))
		move(y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
lbl(254532)	createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(isRestricted y(4) 1 cache)
		testBool(y(6) 254556 254611)
		branch(254431)
lbl(254556)	getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(0) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL7
		return
lbl(254611)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1717)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254381)
lbl(254624)	definition(x(8) 254689 pid('Unnester,OptimizeImportFeature/slow' 1 pos('./compiler/Unnester.oz' 1715 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1564> 15)
		endDefinition(254624)
lbl(254689)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(254699)	definition(x(7) 254857 pid('Unnester,AnalyseExports/fast' 3 pos('./compiler/Unnester.oz' 1729 6) nil 7) <Q: 1565> [y(2) y(0)])
		match(x(0) ht(254842 [onScalar(nil 254708) onRecord('|' 2 254715)]))
lbl(254708)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(254715)	allocateL6
		getVarVar(x(0) x(3))
		getRecord(fExportItem 1 x(0))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(254782 [onRecord(fColon 2 254740) onRecord(fVar 2 254751)]))
lbl(254740)	getVarVar(x(0) x(4))
		unify(y(4) x(0))
		unify(y(5) x(4))
		branch(254795)
lbl(254751)	getVarVar(x(0) x(4))
		getRecord(fAtom 2 y(4))
		unifyVariable(x(5))
		unifyValue(x(4))
		move(g(0) x(4))
		inlineDot(x(4) downcasePrintName x(6) cache)
		move(x(5) x(1))
		call(x(6) 2)
		unify(y(5) y(0))
		branch(254795)
lbl(254782)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1739)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254795)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(2))
		getRecord(fTypeOf 1 x(2))
		unifyVariable(x(3))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(4))
		getRecord(fGetBinder 2 x(4))
		unifyValue(y(5))
		unifyValue(x(3))
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: AnalyseExports> true 3) 0)
lbl(254842)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1746)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(254699)
lbl(254857)	definition(x(8) 254898 pid('Unnester,AnalyseExports/slow' 1 pos('./compiler/Unnester.oz' 1729 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1565> 7)
		endDefinition(254857)
lbl(254898)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: AnalyseExports>)
		setValue(x(8))
		setValue(x(7))
lbl(254908)	definition(x(7) 254989 pid('Unnester,UnnestFromProp/fast' 6 pos('./compiler/Unnester.oz' 1749 6) nil 6) <Q: 1566> [y(0)])
		match(x(0) ht(254974 [onScalar(nil 254917) onRecord('|' 2 254924)]))
lbl(254917)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(254924)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(5) y(5))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(2))
		unifyValVar(y(6) x(2))
		getList(y(4))
		unifyValVar(y(7) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestFromProp> true 6) 0)
lbl(254974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1758)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(254908)
lbl(254989)	definition(x(8) 255048 pid('Unnester,UnnestFromProp/slow' 1 pos('./compiler/Unnester.oz' 1749 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1566> 13)
		endDefinition(254989)
lbl(255048)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: UnnestFromProp>)
		setValue(x(8))
		setValue(x(7))
lbl(255058)	definition(x(7) 255200 pid('Unnester,UnnestAttrFeat/fast' 6 pos('./compiler/Unnester.oz' 1760 6) nil 6) <Q: 1567> [y(0)])
		match(x(0) ht(255185 [onScalar(nil 255067) onRecord('|' 2 255074)]))
lbl(255067)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(255074)	allocateL(12)
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(5) y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 255146)
lbl(255096)	getVarVar(x(0) y(6))
		moveMoveXYXY(x(2) y(7) x(4) y(8))
		createVariableMove(y(9) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(7))
		unifyValue(y(10))
		unifyValue(y(4))
		getList(y(8))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(255166)
lbl(255146)	moveMoveXYXY(x(2) y(6) x(4) y(7))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(6) y(4))
		getList(y(7))
		unifyValue(y(8))
		unifyValue(y(5))
lbl(255166)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestAttrFeat> true 6) 0)
lbl(255185)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255058)
lbl(255200)	definition(x(8) 255259 pid('Unnester,UnnestAttrFeat/slow' 1 pos('./compiler/Unnester.oz' 1760 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1567> 13)
		endDefinition(255200)
lbl(255259)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(255269)	definition(x(7) 255868 pid('Unnester,UnnestMeth/fast' 2 pos('./compiler/Unnester.oz' 1779 6) nil 7) <Q: 1568> [y(0) y(3)])
		allocateL(11)
		getRecord(fMeth 3 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		createVariable(y(4))
		createVariable(y(5))
		testRecord(y(0) fEq 3 255349)
lbl(255310)	getVarVar(x(0) x(1))
		shallowGuard(255349)
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(255323)	shallowThen
		unify(y(4) x(0))
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		move(y(5) x(2))
		sendMsg(bind x(4) 3 cache)
		branch(255352)
lbl(255349)	unify(y(4) y(0))
lbl(255352)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genCall(gci(g(0) true <M: UnnestMethHead> false 5) 0)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: UnnestMethFormals1> false 2) 0)
		move(y(6) x(0))
		putConstant(0 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1534> 6)
		putConstant(1 x(0))
		inlineAssign(<M: ArgCounter> x(0) cache)
		createVariable(y(8))
		createVariable(y(9))
		testNumber(y(4) 0 255482)
		move(y(6) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		moveMoveYXYX(y(6) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1538> 8)
		branch(255644)
lbl(255482)	move(y(6) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1535> 4)
		move(y(4) x(0))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(1) 255522)
		inlineAt(reporter x(3) cache)
		move(y(10) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in method head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(255522)	inlineAt(<M: BA> x(3) cache)
		move(y(10) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(10))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(6) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1536> 6)
		move(y(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(4) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1538> 8)
lbl(255644)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 255710 255699)
lbl(255665)	move(y(5) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		move(x(1) y(1))
		testBool(y(1) 255710 255699)
lbl(255678)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(2) x(1) y(5) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(255710)
lbl(255699)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255710)	inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(5) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 255766)
		move(g(1) x(0))
		inlineDot(x(0) method x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(9) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(3))
		branch(255805)
lbl(255766)	move(g(1) x(1))
		inlineDot(x(1) methodWithDesignator x(6) cache)
		callBI(newObject [x(6)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(7) x(2))
		moveMoveYXYX(y(5) x(3) y(9) x(4))
		move(y(2) x(5))
		sendMsg(init y(1) 6 cache)
		unify(y(1) y(3))
lbl(255805)	inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 255853 255855)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(setAllVariables x(1) 1 cache)
lbl(255853)	deAllocateL
		return
lbl(255855)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1826)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(255269)
lbl(255868)	definition(x(8) 255903 pid('Unnester,UnnestMeth/slow' 1 pos('./compiler/Unnester.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1568> 5)
		endDefinition(255868)
lbl(255903)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: UnnestMeth>)
		setValue(x(8))
		setValue(x(7))
lbl(255913)	definition(x(7) 256139 pid('Unnester,UnnestMethHead/fast' 5 pos('./compiler/Unnester.oz' 1830 6) nil 8) <Q: 1569> [y(3) y(0)])
		match(x(0) ht(256124 [onRecord(fAtom 2 255922) onRecord(fVar 2 255965) onRecord(fEscape 2 255993) onRecord(fRecord 2 256028) onRecord(fOpenRecord 2 256052)]))
lbl(255922)	allocateL4
		getVarVar(x(0) x(1))
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(7) y(3))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(0))
		getLiteral(nil y(1))
		getLiteral(false y(2))
		deAllocateL4
		return
lbl(255965)	allocateL2
		getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(255993)	allocateL2
		getVariable(x(5))
		getRecord(fVar 2 x(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(256028)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(4) y(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(1) y(0))
		getLiteral(false y(2))
		deAllocateL3
		return
lbl(256052)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 256101)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(6) x(1) y(2) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
lbl(256101)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(4) y(1))
		getLiteral(true y(5))
		deAllocateL7
		return
lbl(256124)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1855)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255913)
lbl(256139)	definition(x(8) 256192 pid('Unnester,UnnestMethHead/slow' 1 pos('./compiler/Unnester.oz' 1830 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1569> 11)
		endDefinition(256139)
lbl(256192)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: UnnestMethHead>)
		setValue(x(8))
		setValue(x(7))
lbl(256202)	definition(x(7) 256366 pid('Unnester,UnnestMethFormals1/fast' 2 pos('./compiler/Unnester.oz' 1857 6) nil 4) <Q: 1570> nil)
		getSelf(x(2))
lbl(256210)	definition(x(3) 256358 pid('' 1 pos('./compiler/Unnester.oz' 1861 3) nil 6) unit [x(2) x(1)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(256343 [onRecord(fMethArg 2 256224) onRecord(fMethColonArg 3 256263)]))
lbl(256224)	getVariable(x(0))
		match(x(0) ht(256250 [onRecord(fVar 2 256229) onRecord(fWildcard 1 256248) onRecord(fDollar 1 256249)]))
lbl(256229)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(256248)	return
lbl(256249)	return
lbl(256250)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1867)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(256263)	allocateL1
		getVarVar(x(0) x(3))
		move(x(3) y(0))
		testRecord(x(0) fVar 2 256306)
lbl(256275)	getVoid(1)
		getVariable(x(4))
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(2)] 256306)
		inlineAt(<M: BA> x(5) cache)
		move(x(4) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(5) 3 cache)
lbl(256306)	match(y(0) ht(256330 [onRecord(fVar 2 256309) onRecord(fWildcard 1 256326) onRecord(fDollar 1 256328)]))
lbl(256309)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bind x(3) 3 cache)
lbl(256326)	deAllocateL1
		return
lbl(256328)	deAllocateL1
		return
lbl(256330)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1879)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(256343)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1880)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(256210)
lbl(256358)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(256202)
lbl(256366)	definition(x(8) 256401 pid('Unnester,UnnestMethFormals1/slow' 1 pos('./compiler/Unnester.oz' 1857 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1570> 5)
		endDefinition(256366)
lbl(256401)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(8))
		setValue(x(7))
lbl(256411)	definition(x(7) 256469 pid('Unnester,UnnestMethFormals2/fast' 3 pos('./compiler/Unnester.oz' 1883 6) nil 4) <Q: 1571> [y(0)])
		match(x(0) ht(256454 [onScalar(nil 256420) onRecord('|' 2 256424)]))
lbl(256420)	getLiteral(nil x(2))
		return
lbl(256424)	allocateL4
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: UnnestMethFormal> false 4) 0)
		getList(y(1))
		unifyValVar(y(2) x(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestMethFormals2> true 3) 0)
lbl(256454)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1890)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(256411)
lbl(256469)	definition(x(8) 256510 pid('Unnester,UnnestMethFormals2/slow' 1 pos('./compiler/Unnester.oz' 1883 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1571> 7)
		endDefinition(256469)
lbl(256510)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(8))
		setValue(x(7))
lbl(256520)	definition(x(7) 257060 pid('Unnester,UnnestMethFormal/fast' 4 pos('./compiler/Unnester.oz' 1892 6) nil 8) <Q: 1572> [y(0) y(3)])
		allocateL9
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(x(0) ht(256723 [onRecord(fMethArg 2 256544) onRecord(fMethColonArg 3 256642)]))
lbl(256544)	getVarVar(y(6) y(7))
		inlineAt(<M: ArgCounter> x(0) cache)
		getRecord(fInt 2 y(3))
		unifyValVar(x(0) x(4))
		moveMoveXYYX(x(0) y(8) y(6) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1478> 4)
		move(y(8) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ArgCounter> x(1) cache)
		match(y(6) ht(256624 [onRecord(fVar 2 256584) onRecord(fWildcard 1 256603)]))
lbl(256584)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		branch(256637)
lbl(256603)	getVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(256637)
lbl(256624)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1901)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(256637)	unify(y(5) y(7))
		branch(256736)
lbl(256642)	getVarVar(x(0) x(4))
		getVariable(x(5))
		unify(y(3) x(0))
		move(x(5) y(6))
		match(x(4) ht(256705 [onRecord(fVar 2 256656) onRecord(fWildcard 1 256681)]))
lbl(256656)	getVarVar(x(4) x(6))
		inlineAt(<M: BA> x(7) cache)
		move(x(4) x(0))
		move(x(6) x(1))
		move(y(4) x(2))
		sendMsg(bind x(7) 3 cache)
		branch(256718)
lbl(256681)	getVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(1))
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(6) 3 cache)
		branch(256718)
lbl(256705)	putRecord(kernel 3 x(6))
		setConstant(noElse)
		setConstant(1909)
		setValue(x(4))
		callBI('Exception.raiseError' [x(6)]#nil)
lbl(256718)	unify(y(5) y(6))
		branch(256736)
lbl(256723)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1911)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(256736)	move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		createVariableMove(y(7) x(0))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(8) 256811 256819)
		inlineAt(reporter x(0) cache)
		move(x(0) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getCoord y(4) 1 cache)
		putRecord('#' 2 x(2))
		setConstant('argument variables in method head ')
		setConstant('must be distinct')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
		unify(y(2) y(0))
		branch(256830)
lbl(256811)	getList(y(2))
		unifyValue(y(7))
		unifyValue(y(0))
		branch(256830)
lbl(256819)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1914)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(256830)	match(y(5) ht(257045 [onScalar(fNoDefault 256833) onRecord(fDefault 2 256864)]))
lbl(256833)	move(g(1) x(0))
		inlineDot(x(0) methFormal x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(256864)	getVarVar(x(0) x(1))
		testRecord(x(0) fWildcard 1 256906)
lbl(256872)	move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(256906)	moveMoveXYXY(x(0) y(0) x(1) y(2))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1541> 4)
		testBool(y(5) 256965 257034)
		move(y(0) x(0))
		getSelf(x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1542> 6)
		move(g(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(256965)	putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord('#' 4 y(1))
		unifyVariable(y(1))
		unifyValue(y(3))
		unifyValVar(y(5) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		unifyValue(y(2))
		move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(true x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(257034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1928)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(257045)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1937)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(256520)
lbl(257060)	definition(x(8) 257107 pid('Unnester,UnnestMethFormal/slow' 1 pos('./compiler/Unnester.oz' 1892 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1572> 9)
		endDefinition(257060)
lbl(257107)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(257117)	definition(x(7) 257409 pid('Unnester,UnnestMethBody/fast' 5 pos('./compiler/Unnester.oz' 1939 6) nil 6) <Q: 1573> [y(0)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariable(y(5))
		testBI('IsDet' [x(0)]#[x(5)] 257169)
		getRecord(fVar 2 y(5))
		unifyVariable(x(5))
		unifyVariable(y(6))
		move(x(5) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(6) x(0))
		sendMsg(getCoord y(0) 1 cache)
lbl(257169)	putRecord('#' 2 x(3))
		setValue(y(3))
		setValue(y(4))
		getSelf(x(4))
lbl(257179)	definition(x(1) 257392 pid('' 3 pos('./compiler/Unnester.oz' 1945 3) nil 8) unit [x(4) y(0) y(5) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(257379)
		getRecord('#' 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(257200)	shallowThen
		testRecord(x(0) '#' 4 257364)
lbl(257206)	allocateL8
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(2) y(4) x(4) y(5))
		moveMoveXYYX(x(5) y(6) y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1478> 4)
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 257270)
		inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generateForOuterScope x(3) 3 cache)
		getRecord(fVar 2 g(2))
		unifyVariable(x(0))
		unifyValue(y(7))
		sendMsg(getPrintName g(1) 1 cache)
lbl(257270)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(g(2))
		setValue(x(3))
		putRecord(fOpApply 3 x(1))
		setConstant(hasFeature)
		setValue(x(2))
		setValue(y(7))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(g(2))
		setValue(x(7))
		putRecord(fOpApply 3 x(5))
		setConstant('.')
		setValue(x(6))
		setValue(y(7))
		putRecord(fEq 3 x(4))
		setValue(y(2))
		setValue(x(5))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(y(3))
		setValue(y(7))
		createVariableMove(y(1) x(1))
		genCall(gci(g(3) true <M: UnnestStatement> false 2) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(0))
		unifyValue(y(5))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(257364)	getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(5))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(257379)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1945)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(257179)
lbl(257392)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 32> 9)
		endDefinition(257117)
lbl(257409)	definition(x(8) 257462 pid('Unnester,UnnestMethBody/slow' 1 pos('./compiler/Unnester.oz' 1939 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1573> 11)
		endDefinition(257409)
lbl(257462)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: UnnestMethBody>)
		setValue(x(8))
		setValue(x(7))
lbl(257472)	definition(x(7) 257742 pid('Unnester,UnnestBoolGuard/fast' 6 pos('./compiler/Unnester.oz' 1962 6) nil 7) <Q: 1574> [y(0)])
		match(x(0) ht(257617 [onRecord(fOrElse 3 257481) onRecord(fAndThen 3 257549)]))
lbl(257481)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('FalseCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(9) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(257549)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(257617)	allocateL9
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		sendMsg(openScope x(6) 0 cache)
		move(y(0) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1478> 4)
		getLiteral(nil y(4))
		putList(y(0))
		setValue(y(6))
		setVariable(y(4))
		createVariableMove(y(6) x(0))
		call(y(1) 1)
		createVariableMove(y(1) x(0))
		call(y(2) 1)
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(7) x(0) y(6) x(1))
		moveMoveYXYX(y(1) x(2) y(8) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(6))
		genFastCall(<Q: 1539> 14)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1538> 9)
		endDefinition(257472)
lbl(257742)	definition(x(8) 257801 pid('Unnester,UnnestBoolGuard/slow' 1 pos('./compiler/Unnester.oz' 1962 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1574> 13)
		endDefinition(257742)
lbl(257801)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(8))
		setValue(x(7))
lbl(257811)	definition(x(7) 257972 pid('Unnester,MakeClauseBody/fast' 5 pos('./compiler/Unnester.oz' 1996 6) nil 7) <Q: 1575> [y(3)])
		allocateL8
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(5) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) clauseBody x(1) cache)
		moveMoveXYYX(x(1) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ y(4) 2 cache)
		move(y(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(5))
		putConstant(nil x(1))
		putConstant(unit x(3))
		putConstant(nil x(4))
		sendMsg(init y(7) 6 cache)
		unify(y(7) y(2))
lbl(257902)	definition(x(0) 257965 pid('ApplyProc' 1 pos('./compiler/Unnester.oz' 1999 2) nil 4) unit [g(0) y(4) y(1)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) application x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(g(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(occ g(1) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		move(g(2) x(2))
		putConstant(nil x(1))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(257902)
lbl(257965)	unify(x(0) y(3))
		deAllocateL8
		return
		endDefinition(257811)
lbl(257972)	definition(x(8) 258025 pid('Unnester,MakeClauseBody/slow' 1 pos('./compiler/Unnester.oz' 1996 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1575> 11)
		endDefinition(257972)
lbl(258025)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: MakeClauseBody>)
		setValue(x(8))
		setValue(x(7))
lbl(258035)	definition(x(7) 258470 pid('Unnester,UnnestCase/fast' 5 pos('./compiler/Unnester.oz' 2004 6) nil 9) <Q: 1576> [y(0) y(3)])
		allocateL10
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(1))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(1) y(5))
		testList(y(0) 258221)
lbl(258064)	getVarVar(x(5) x(6))
		shallowGuard(258221)
		getRecord(fCaseClause 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord(fVar 2 x(5))
		unifyVoid(1)
		unifyVariable(x(8))
		getLiteral(nil x(6))
lbl(258088)	shallowThen
		moveMoveXYXY(x(5) y(6) x(8) y(7))
		move(x(7) y(8))
		testLiteral(y(5) nil 258132)
lbl(258101)	callBI('Label' [x(2)]#[x(1)])
		testLiteral(x(1) fNoElse 258110)
		branch(258152)
lbl(258110)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring else clause following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(258152)
lbl(258132)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring clauses following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
lbl(258152)	putRecord(fVar 2 y(0))
		setVariable(x(0))
		setVariable(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(getCoord y(1) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(6))
		setValue(y(0))
		setVariable(x(2))
		putRecord(fAnd 2 x(0))
		setValue(x(1))
		setValue(y(8))
		putRecord(fLocal 3 y(1))
		setValue(y(6))
		setValue(x(0))
		setValue(y(7))
		move(y(7) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1531> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(258221)	move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestCaseClauses> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) patternCase x(1) cache)
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(1) 2 cache)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		moveMoveYXYX(y(6) x(1) y(3) x(3))
		createVariableMove(y(9) x(2))
		sendMsg(init y(8) 4 cache)
		unify(y(8) y(4))
		match(y(5) ht(258455 [onScalar(nil 258284) onRecord('|' 2 258402)]))
lbl(258284)	testRecord(y(2) fNoElse 1 258317)
lbl(258289)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(258317)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1478> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1538> 8)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(2) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(258402)	move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1531> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestCase> false 5) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(3) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(258455)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2038)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(258035)
lbl(258470)	definition(x(8) 258523 pid('Unnester,UnnestCase/slow' 1 pos('./compiler/Unnester.oz' 2004 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1576> 11)
		endDefinition(258470)
lbl(258523)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: UnnestCase>)
		setValue(x(8))
		setValue(x(7))
lbl(258533)	definition(x(7) 258893 pid('Unnester,UnnestCaseClauses/fast' 2 pos('./compiler/Unnester.oz' 2041 6) nil 7) <Q: 1577> [y(0) y(3)])
		match(x(0) ht(258878 [onScalar(nil 258542) onRecord('|' 2 258546)]))
lbl(258542)	getLiteral(nil x(1))
		return
lbl(258546)	allocateL8
		getVarVar(x(2) y(0))
		getRecord(fCaseClause 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1543> 4)
		createVariable(y(5))
		testBool(y(4) 258795 258858)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1481> 6)
		getSelf(x(3))
lbl(258600)	definition(x(1) 258665 pid('' 2 pos('./compiler/Unnester.oz' 2046 8) nil 6) unit [x(3)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(258652)
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(258621)	shallowThen
		allocateL2
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(258652)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2046)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(258600)
lbl(258665)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1478> 4)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1538> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		getList(y(3))
		unifyVariable(y(3))
		unifyValue(y(5))
		move(g(1) x(0))
		inlineDot(x(0) patternClause x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(6) 3 cache)
		unify(y(6) y(3))
		branch(258869)
lbl(258795)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord('#' 2 x(3))
		setConstant('only simple patterns in `case\' conditional ')
		setConstant(allowed)
		putRecord('#' 2 x(6))
		setConstant('to create a deep guard, use the ')
		setConstant('`cond\' conditional)')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('syntax error' x(2))
		sendMsg(error y(2) [coord items kind msg] cache)
		unify(y(3) y(5))
		branch(258869)
lbl(258858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2043)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(258869)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestCaseClauses> true 2) 0)
lbl(258878)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2070)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(258533)
lbl(258893)	definition(x(8) 258928 pid('Unnester,UnnestCaseClauses/slow' 1 pos('./compiler/Unnester.oz' 2041 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1577> 5)
		endDefinition(258893)
lbl(258928)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(258938)	definition(x(7) 259511 pid('Unnester,TranslatePattern/fast' 3 pos('./compiler/Unnester.oz' 2072 6) nil 6) <Q: 1578> [y(0) y(3) g(11) g(12)])
		match(x(0) ht(259496 [onRecord(fEq 3 258947) onRecord(fAtom 2 259143) onRecord(fVar 2 259175) onRecord(fWildcard 1 259257) onRecord(fEscape 2 259307) onRecord(fInt 2 259396) onRecord(fFloat 2 259428) onRecord(fRecord 2 259460) onRecord(fOpenRecord 2 259478)]))
lbl(258947)	allocateL6
		getVarVar(x(0) y(0))
		match(x(0) ht(259039 [onRecord(fVar 2 258954) onRecord(fWildcard 1 259032)]))
lbl(258954)	getVarVar(x(0) y(1))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL6
		return
lbl(259032)	move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(259039)	match(y(0) ht(259130 [onRecord(fVar 2 259042) onRecord(fWildcard 1 259126)]))
lbl(259042)	getVarVar(x(3) y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(4) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL6
		return
lbl(259126)	deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(259130)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2089)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(259143)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(259175)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 259226 259246)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(259226)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(259246)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2093)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(259257)	allocateL4
		getVariable(y(0))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(2) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(3) 3 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(2) 2 cache)
		move(y(1) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(259307)	allocateL4
		getVariable(x(3))
		getRecord(fVar 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 259365 259385)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(259365)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(259385)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2103)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(259396)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(259428)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(259460)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(2) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(259478)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(3) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(259496)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2117)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(258938)
lbl(259511)	definition(x(8) 259552 pid('Unnester,TranslatePattern/slow' 1 pos('./compiler/Unnester.oz' 2072 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1578> 7)
		endDefinition(259511)
lbl(259552)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: TranslatePattern>)
		setValue(x(8))
		setValue(x(7))
lbl(259562)	definition(x(7) 259712 pid('Unnester,TranslateRecord/fast' 5 pos('./compiler/Unnester.oz' 2119 6) nil 5) <Q: 1579> [y(0) y(3)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		getSelf(x(3))
lbl(259590)	definition(x(1) 259651 pid('' 2 pos('./compiler/Unnester.oz' 2124 4) nil 4) unit [x(3) y(2) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		testRecord(x(0) fColon 2 259640)
lbl(259606)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(g(1) x(1))
		move(x(3) x(2))
		genCall(gci(g(2) true <M: TranslatePattern> false 3) 0)
		move(y(0) x(0))
		move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
lbl(259640)	move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
		endDefinition(259590)
lbl(259651)	move(y(0) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		createVariable(x(2))
		move(y(2) x(0))
		move(x(2) x(3))
		createVariableMove(y(0) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1540> 10)
		move(g(1) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL5
		return
		endDefinition(259562)
lbl(259712)	definition(x(8) 259765 pid('Unnester,TranslateRecord/slow' 1 pos('./compiler/Unnester.oz' 2119 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1579> 11)
		endDefinition(259712)
lbl(259765)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: TranslateRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(259775)	definition(x(7) 260519 pid('Unnester,UnnestTry/fast' 2 pos('./compiler/Unnester.oz' 2136 6) nil 9) <Q: 1580> [y(0) y(3)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fTry 4 259860)
lbl(259792)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		shallowGuard(259860)
		getLiteral(fNoCatch x(3))
		getLiteral(fNoFinally x(4))
lbl(259806)	shallowThen
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL10
		genFastCall(<Q: 1538> 9)
lbl(259860)	testRecord(y(0) fTry 4 260137)
lbl(259865)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(1) fNoCatch 260137)
		moveMoveXYXY(x(0) y(0) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1531> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('ReRaise' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		putRecord(fAtom 2 x(0))
		setConstant(ex)
		setValue(y(3))
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(0))
		setValue(x(1))
		putRecord(fVar 2 x(4))
		setConstant('`unit`')
		setValue(y(3))
		putRecord(fEq 3 x(3))
		setValue(y(6))
		setValue(x(4))
		setValue(y(4))
		putRecord(fAnd 2 x(1))
		setValue(y(0))
		setValue(x(3))
		putRecord(fEq 3 x(8))
		setValue(y(6))
		setValue(x(2))
		setValue(y(4))
		putRecord(fCaseClause 2 x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putRecord(fCatch 2 x(5))
		setValue(x(6))
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setValue(x(5))
		setConstant(fNoFinally)
		setValue(y(3))
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('Raise')
		setValue(x(6))
		setValue(y(4))
		putRecord(fCaseClause 2 x(4))
		setValue(x(2))
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setConstant(nil)
		putRecord(fSkip 1 x(7))
		setValue(y(4))
		putRecord(fCase 4 y(0))
		setValue(y(6))
		setValue(x(1))
		setValue(x(7))
		setValue(y(4))
		getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(1))
		unifyVariable(y(3))
		genCall(gci(g(0) true <M: UnnestTry> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(260137)	testRecord(y(0) fTry 4 260453)
lbl(260142)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(260453)
		getRecord(fCatch 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getLiteral(fNoFinally x(2))
lbl(260161)	shallowThen
		inlineAt(<M: BA> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		moveMoveXYXY(x(4) y(3) x(3) y(4))
		sendMsg(openScope x(2) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1538> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		createVariable(y(7))
		testList(y(2) 260298)
lbl(260270)	getVarVar(x(0) x(1))
		shallowGuard(260298)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVoid(2)
		getLiteral(nil x(1))
lbl(260292)	shallowThen
		getLiteral(fNoElse y(7))
		branch(260314)
lbl(260298)	getRecord(fOpApplyStatement 3 y(7))
		unifyLiteral('Raise')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyValue(y(5))
		unifyLiteral(nil)
lbl(260314)	putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(3))
		createVariable(y(8))
		testRecord(x(0) '#' 2 260377)
lbl(260329)	getVarVar(x(0) x(1))
		createVariable(y(9))
		shallowGuard(260377)
		getRecord('pos' 6 x(0))
		unifyVoid(3)
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(260358)	shallowThen
		getRecord('pos' 6 y(8))
		unifyValue(x(4))
		unifyValue(x(5))
		unifyValue(x(6))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		branch(260380)
lbl(260377)	unify(y(8) y(3))
lbl(260380)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putRecord(fCase 4 x(0))
		setValue(y(5))
		setValue(x(1))
		setValue(y(7))
		setValue(y(8))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) tryNode x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(4) x(3))
		sendMsg(init y(3) 4 cache)
		unify(y(3) y(1))
		deAllocateL10
		return
lbl(260453)	testRecord(y(0) fTry 4 260504)
lbl(260458)	getVarVar(y(0) y(2))
		getVarVar(y(3) y(4))
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1531> 4)
		putRecord(fTry 4 x(1))
		setValue(y(0))
		setValue(y(2))
		setConstant(fNoFinally)
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setConstant(fNoCatch)
		setValue(y(3))
		setValue(y(5))
		move(y(1) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(260504)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2187)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259775)
lbl(260519)	definition(x(8) 260554 pid('Unnester,UnnestTry/slow' 1 pos('./compiler/Unnester.oz' 2136 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1580> 5)
		endDefinition(260519)
lbl(260554)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: UnnestTry>)
		setValue(x(8))
		setValue(x(7))
lbl(260564)	definition(x(7) 260966 pid('Unnester,UnnestClauses/fast' 3 pos('./compiler/Unnester.oz' 2190 6) nil 5) <Q: 1581> [y(0) y(3)])
		match(x(0) ht(260951 [onScalar(nil 260573) onRecord('|' 2 260577)]))
lbl(260573)	getLiteral(nil x(2))
		return
lbl(260577)	allocateL10
		getVarVar(x(0) y(0))
		getRecord(fClause 3 x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1537> 8)
		getSelf(x(2))
lbl(260624)	definition(x(1) 260678 pid('' 1 pos('./compiler/Unnester.oz' 2197 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(260665)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(260645)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(260665)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2197)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(260624)
lbl(260678)	move(y(6) x(0))
		genFastCall(<P: 34> 4)
		putList(y(1))
		setVariable(x(1))
		setVariable(y(6))
		move(y(7) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		createVariable(y(2))
		createVariable(y(6))
		match(y(3) ht(260811 [onRecord(fSkip 1 260711) onRecord(fNoThen 1 260780)]))
lbl(260711)	getVariable(x(0))
		move(x(0) y(3))
		match(y(4) ht(260739 [onScalar(fif 260719) onScalar(for 260724) onScalar(fdis 260729) onScalar(fchoice 260734)]))
lbl(260719)	getLiteral('ask' y(2))
		branch(260752)
lbl(260724)	getLiteral('waitTop' y(2))
		branch(260752)
lbl(260729)	getLiteral('waitTop' y(2))
		branch(260752)
lbl(260734)	getLiteral('wait' y(2))
		branch(260752)
lbl(260739)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2205)
		setValue(y(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(260752)	move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(3) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
		branch(260879)
lbl(260780)	getVariable(x(0))
		getLiteral('waitTop' y(2))
		move(g(1) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(6))
		branch(260879)
lbl(260811)	move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1478> 4)
		testLiteral(y(4) fif 260829)
lbl(260824)	getLiteral('ask' y(2))
		branch(260832)
lbl(260829)	getLiteral('wait' y(2))
lbl(260832)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<Q: 1538> 8)
lbl(260879)	getList(y(5))
		unifyVariable(y(3))
		unifyVariable(y(5))
		move(g(1) x(0))
		inlineDot(x(0) 'clause' x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(closeScope x(2) 1 cache)
		move(y(7) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(6) x(3))
		sendMsg(init y(9) 4 cache)
		unify(y(9) y(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestClauses> true 3) 0)
lbl(260951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2221)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(260564)
lbl(260966)	definition(x(8) 261007 pid('Unnester,UnnestClauses/slow' 1 pos('./compiler/Unnester.oz' 2190 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1581> 7)
		endDefinition(260966)
lbl(261007)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: UnnestClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(261017)	definition(x(7) 261280 pid('Unnester,UnnestFDExpression/fast' 3 pos('./compiler/Unnester.oz' 2224 6) nil 6) <Q: 1582> [y(0)])
		match(x(0) ht(261217 [onRecord(fOpApply 3 261026) onRecord(fVar 2 261203) onRecord(fInt 2 261210)]))
lbl(261026)	allocateL9
		getVarVar(x(3) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(y(2) '+' 261109)
lbl(261049)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(3))
		unifyLiteral(nil)
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getList(y(0))
		unifyValue(y(5))
		unifyValue(y(7))
		getRecord(fOpApply 3 y(1))
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(8))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(261109)	testLiteral(y(2) '-' 261115)
		branch(261049)
lbl(261115)	testLiteral(y(2) '*' 261121)
		branch(261049)
lbl(261121)	testLiteral(y(2) '~' 261155)
		getList(y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getRecord(fOpApply 3 y(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(261155)	inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(0) y(2) y(4) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(4))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL9
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(261203)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(261210)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(261217)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1478> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(261017)
lbl(261280)	definition(x(8) 261321 pid('Unnester,UnnestFDExpression/slow' 1 pos('./compiler/Unnester.oz' 2224 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1582> 7)
		endDefinition(261280)
lbl(261321)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(261331)	definition(x(7) 261520 pid('Unnester,UnnestFDList/fast' 3 pos('./compiler/Unnester.oz' 2255 6) nil 7) <Q: 1583> [y(0)])
		allocateL8
		move(x(0) y(0))
		match(y(0) ht(261464 [onRecord(fRecord 2 261344) onRecord(fAtom 2 261504)]))
lbl(261344)	getVarVar(x(3) x(4))
		shallowGuard(261464)
		getRecord(fAtom 2 x(3))
		unifyLiteral('|')
		unifyVoid(1)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(261369)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		move(x(4) x(0))
		putConstant('UnnestFDList' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDList> false 3) 0)
		getList(y(0))
		unifyValue(y(4))
		unifyValue(y(6))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setVariable(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(getCoord y(0) 1 cache)
		getRecord(fRecord 2 y(1))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(261464)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1478> 4)
		putRecord('#' 2 x(2))
		setConstant('explicitly given list of variables expected')
		setConstant('as first argument to `:::\' in a condis clause')
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		move(y(1) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(261504)	getVariable(x(3))
		testLiteral(x(3) nil 261464)
		getLiteral(nil x(1))
		unify(x(2) y(0))
		deAllocateL8
		return
		endDefinition(261331)
lbl(261520)	definition(x(8) 261561 pid('Unnester,UnnestFDList/slow' 1 pos('./compiler/Unnester.oz' 2255 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1583> 7)
		endDefinition(261520)
lbl(261561)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: UnnestFDList>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 37 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Unnester' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(261667)	definition(x(0) 261698 pid('IsDirective' 2 pos('./compiler/Unnester.oz' 2277 3) nil 2) <Q: 1584> nil)
		match(x(0) ht(261692 [onScalar(dirLocalSwitches 261676) onScalar(dirPushSwitches 261680) onScalar(dirPopSwitches 261684) onRecord(dirSwitch 1 261688)]))
lbl(261676)	getLiteral(true x(1))
		return
lbl(261680)	getLiteral(true x(1))
		return
lbl(261684)	getLiteral(true x(1))
		return
lbl(261688)	getLiteral(true x(1))
		return
lbl(261692)	getLiteral(false x(1))
		return
		endDefinition(261667)
lbl(261698)	definition(x(1) 261761 pid('VariableMember' 3 pos('./compiler/Unnester.oz' 2287 6) nil 7) <Q: 1585> nil)
		allocateL1
		move(x(1) y(0))
		match(y(0) ht(261746 [onScalar(nil 261711) onRecord('|' 2 261716)]))
lbl(261711)	getLiteral(false x(2))
		deAllocateL1
		return
lbl(261716)	getVarVar(x(3) x(4))
		shallowGuard(261746)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(261729)	shallowThen
		testBI('==' [x(0) x(5)]#[x(1)] 261739)
		getLiteral(true x(2))
		deAllocateL1
		return
lbl(261739)	move(x(4) x(1))
		deAllocateL1
		genFastCall(<Q: 1585> 7)
lbl(261746)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2291)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(261698)
lbl(261761)	definition(x(1) 261860 pid('AreDisjointVariableLists' 3 pos('./compiler/Unnester.oz' 2294 6) nil 7) <Q: 1586> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testList(y(0) 261836)
lbl(261776)	getVarVar(x(3) x(4))
		shallowGuard(261836)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(261789)	shallowThen
		moveMoveXYXY(x(1) y(0) x(4) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1585> 6)
		testBool(y(3) 261813 261825)
		getLiteral(false y(1))
		deAllocateL4
		return
lbl(261813)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 1586> 7)
lbl(261825)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(261836)	testLiteral(y(0) nil 261845)
lbl(261840)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(261845)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2300)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(261761)
lbl(261860)	definition(x(1) 262159 pid('JoinQueriesSub' 2 pos('./compiler/Unnester.oz' 2303 6) nil 6) <Q: 1587> nil)
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 262152)
lbl(261876)	getVarVar(x(2) x(3))
		shallowGuard(262152)
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(261887)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(2))
		moveMoveXYXY(x(4) y(3) x(5) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1584> 4)
		testBool(y(5) 261923 262141)
		getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1587> 5)
lbl(261923)	testRecord(y(0) fDeclare 3 262129)
lbl(261928)	getVarVar(x(0) y(5))
		getVariable(y(6))
		testRecord(y(3) fDeclare 3 262095)
lbl(261938)	getVarVar(y(3) y(7))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1537> 8)
		move(y(3) x(0))
		createVariableMove(y(10) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<Q: 1537> 8)
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1586> 6)
		testBool(y(3) 262072 262084)
		putRecord(fAnd 2 x(2))
		setValue(y(11))
		setValue(y(7))
		putRecord(fAnd 2 x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fAnd 2 x(0))
		setValue(y(9))
		setValue(x(1))
		putRecord(fDeclare 3 y(0))
		setVariable(y(2))
		setValue(x(0))
		setValue(y(6))
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(262028)	definition(x(1) 262045 pid('' 3 pos('./compiler/Unnester.oz' 2314 6) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(262028)
lbl(262045)	putRecord(fSkip 1 x(2))
		setValue(y(6))
		moveMoveYXYX(y(3) x(0) y(2) x(3))
		genFastCall(<P: 32> 8)
		putList(x(0))
		setValue(y(0))
		setValue(y(4))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1587> 5)
lbl(262072)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1587> 5)
lbl(262084)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2312)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(262095)	putRecord(fAnd 2 x(3))
		setValue(y(5))
		setValue(y(3))
		putRecord(fDeclare 3 x(1))
		setValue(x(0))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(1))
		setValue(y(4))
		move(x(2) x(0))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1587> 5)
lbl(262129)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1587> 5)
lbl(262141)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(262152)	unify(y(1) y(0))
		deAllocateL
		return
		endDefinition(261860)
lbl(262159)	definition(x(1) 262291 pid('JoinQueries' 3 pos('./compiler/Unnester.oz' 2334 6) nil 5) <Q: 1588> [g(15) x(0)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1587> 4)
		testList(y(4) 262239)
lbl(262195)	getVarVar(x(0) x(1))
		shallowGuard(262239)
		getRecord(fDeclare 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(262213)	shallowThen
		putRecord(fLocal 3 x(4))
		setValue(x(0))
		setValue(x(2))
		setValue(x(3))
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(262239)	match(y(4) ht(262267 [onScalar(nil 262242) onRecord('|' 2 262247)]))
lbl(262242)	unify(y(1) y(2))
		deAllocateL5
		return
lbl(262247)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 262267)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(262267)	putRecord('#' 2 x(1))
		setConstant('Ozma only supports at most one query ')
		setConstant('per input')
		putConstant('expansion error' x(0))
		sendMsg(error y(0) [kind msg] cache)
		unify(y(2) y(1))
		deAllocateL5
		return
		endDefinition(262159)
lbl(262291)	definition(x(0) 262480 pid('MakeExpressionQuerySub' 3 pos('./compiler/Unnester.oz' 2353 6) nil 6) <Q: 1589> nil)
		match(x(0) ht(262465 [onScalar(nil 262300) onRecord('|' 2 262307)]))
lbl(262300)	getLiteral(nil x(1))
		getLiteral(false x(2))
		return
lbl(262307)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYYX(x(2) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1589> 6)
		testBool(y(6) 262345 262454)
		getList(y(3))
		unifyValue(y(0))
		unifyValue(y(5))
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(262345)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1584> 4)
		testBool(y(5) 262366 262443)
		unify(y(3) y(2))
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(262366)	testRecord(y(0) fDeclare 3 262414)
lbl(262371)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getList(y(3))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fDeclare 3 x(3))
		unifyValVar(x(0) x(4))
		unifyValue(x(2))
		getRecord(fEq 3 x(4))
		unifyVariable(x(5))
		unifyValue(x(1))
		unifyLiteral(unit)
		getRecord(fVar 2 x(5))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(262414)	getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(1))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyLiteral(unit)
		getRecord(fVar 2 x(1))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(262443)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(262454)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(262465)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(262291)
lbl(262480)	definition(x(0) 262493 pid('MakeExpressionQuery' 2 pos('./compiler/Unnester.oz' 2379 6) nil 3) <Q: 1590> nil)
		createVariable(x(2))
		genFastCall(<Q: 1589> 7)
		endDefinition(262480)
lbl(262493)	definition(x(2) 262548 pid('VsToFAnd' 2 pos('./compiler/Unnester.oz' 2385 6) nil 3) <Q: 1591> nil)
		match(x(0) ht(262533 [onScalar(nil 262502) onRecord('|' 2 262509)]))
lbl(262502)	getRecord(fSkip 1 x(1))
		unifyLiteral(unit)
		return
lbl(262509)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 262520)
lbl(262516)	unify(x(1) x(0))
		return
lbl(262520)	getRecord(fAnd 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1591> 5)
lbl(262533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2391)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(262493)
lbl(262548)	definition(x(2) 262574 pid('FS' 2 pos('./compiler/Unnester.oz' 2394 6) nil 4) <Q: 1592> nil)
		testLiteral(x(0) unit 262562)
lbl(262558)	getLiteral(unit x(1))
		return
lbl(262562)	putConstant(fineStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(262548)
lbl(262574)	definition(x(2) 262600 pid('CS' 2 pos('./compiler/Unnester.oz' 2398 6) nil 4) <Q: 1593> nil)
		testLiteral(x(0) unit 262588)
lbl(262584)	getLiteral(unit x(1))
		return
lbl(262588)	putConstant(coarseStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(262574)
lbl(262600)	createVariable(x(2))
		createVariable(x(3))
lbl(262604)	definition(x(4) 264166 pid('NP' 2 pos('./compiler/Unnester.oz' 2402 6) nil 4) <Q: 1594> [x(2) x(3)])
		match(x(0) ht(264151 [onScalar(fNoCatch 262613) onRecord(fDeclare 3 262617) onRecord(fAnd 2 262645) onRecord(fEq 3 262669) onRecord(fAssign 3 262697) onRecord(fOrElse 3 262733) onRecord(fAndThen 3 262761) onRecord(fOpApply 3 262789) onRecord(fOpApplyStatement 3 262819) onRecord(fFdCompare 4 262849) onRecord(fFdIn 4 262887) onRecord(fObjApply 3 262925) onRecord(fAt 2 262961) onRecord(fAtom 2 262985) onRecord(fVar 2 262989) onRecord(fEscape 2 262993) onRecord(fWildcard 1 262997) onRecord(fSelf 1 263001) onRecord(fDollar 1 263005) onRecord(fInt 2 263009) onRecord(fFloat 2 263013) onRecord(fRecord 2 263017) onRecord(fOpenRecord 2 263033) onRecord(fColon 2 263049) onRecord(fApply 3 263062) onRecord(fProc 5 263102) onRecord(fFun 5 263143) onRecord(fFunctor 3 263184) onRecord(fRequire 2 263224) onRecord(fPrepare 3 263228) onRecord(fImport 2 263256) onRecord(fExport 2 263260) onRecord(fBody 3 263264) onRecord(fClass 4 263292) onRecord(fFrom 2 263347) onRecord(fProp 2 263364) onRecord(fAttr 2 263381) onRecord(fFeat 2 263398) onRecord('#' 2 263415) onRecord(fLocal 3 263439) onRecord(fBoolCase 4 263467) onRecord(fNoElse 1 263514) onRecord(fCase 4 263525) onRecord(fCaseClause 2 263589) onRecord(fLockThen 3 263602) onRecord(fLock 2 263638) onRecord(fThread 2 263662) onRecord(fTry 4 263686) onRecord(fCatch 2 263733) onRecord(fRaise 2 263760) onRecord(fRaiseWith 3 263784) onRecord(fSkip 1 263820) onRecord(fFail 1 263824) onRecord(fNot 2 263828) onRecord(fCond 3 263852) onRecord(fClause 3 263891) onRecord(fNoThen 1 263927) onRecord(fOr 3 263931) onRecord(fCondis 2 263961) onRecord(fScanner 6 264002) onRecord(fParser 7 264075)]))
lbl(262613)	getLiteral(fNoCatch x(1))
		return
lbl(262617)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDeclare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(262645)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(262669)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(262697)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(262733)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(262761)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(262789)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(262819)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(262849)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(262887)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(262925)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(262961)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(262985)	unify(x(1) x(0))
		return
lbl(262989)	unify(x(1) x(0))
		return
lbl(262993)	unify(x(1) x(0))
		return
lbl(262997)	unify(x(1) x(0))
		return
lbl(263001)	unify(x(1) x(0))
		return
lbl(263005)	unify(x(1) x(0))
		return
lbl(263009)	unify(x(1) x(0))
		return
lbl(263013)	unify(x(1) x(0))
		return
lbl(263017)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263033)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263049)	getVarVar(x(2) x(0))
		getRecord(fColon 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1594> 5)
lbl(263062)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263102)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263143)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263184)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263224)	unify(x(1) x(0))
		return
lbl(263228)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fPrepare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1595> 5)
lbl(263256)	unify(x(1) x(0))
		return
lbl(263260)	unify(x(1) x(0))
		return
lbl(263264)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fBody 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1595> 5)
lbl(263292)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1592> 5)
lbl(263347)	getVarVar(x(0) x(3))
		getRecord(fFrom 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263364)	getVarVar(x(0) x(3))
		getRecord(fProp 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263381)	getVarVar(x(0) x(3))
		getRecord(fAttr 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263398)	getVarVar(x(0) x(3))
		getRecord(fFeat 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(263415)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(263439)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fLocal 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(263467)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1592> 5)
lbl(263514)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1592> 5)
lbl(263525)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
lbl(263547)	definition(x(1) 263564 pid('' 2 pos('./compiler/Unnester.oz' 2449 28) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(263547)
lbl(263564)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1592> 5)
lbl(263589)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1594> 5)
lbl(263602)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263638)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263662)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263686)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1592> 5)
lbl(263733)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263760)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263784)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263820)	unify(x(1) x(0))
		return
lbl(263824)	unify(x(1) x(0))
		return
lbl(263828)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263852)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1592> 5)
lbl(263891)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fClause 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1594> 5)
lbl(263927)	unify(x(1) x(0))
		return
lbl(263931)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(263961)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(263973)	definition(x(1) 263990 pid('' 2 pos('./compiler/Unnester.oz' 2467 22) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(263973)
lbl(263990)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1592> 5)
lbl(264002)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1592> 5)
lbl(264075)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1592> 5)
lbl(264151)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(262604)
lbl(264166)	unify(x(4) x(2))
lbl(264169)	definition(x(4) 265939 pid('SP' 2 pos('./compiler/Unnester.oz' 2475 6) nil 6) <Q: 1595> [x(2) x(3)])
		match(x(0) ht(265924 [onScalar(fNoCatch 264178) onScalar(fNoFinally 264182) onRecord(fDeclare 3 264186) onRecord(fAnd 2 264238) onRecord(fEq 3 264262) onRecord(fAssign 3 264298) onRecord(fOrElse 3 264334) onRecord(fAndThen 3 264362) onRecord(fOpApply 3 264390) onRecord(fOpApplyStatement 3 264420) onRecord(fFdCompare 4 264450) onRecord(fFdIn 4 264488) onRecord(fObjApply 3 264526) onRecord(fAt 2 264562) onRecord(fAtom 2 264586) onRecord(fVar 2 264599) onRecord(fEscape 2 264612) onRecord(fWildcard 1 264625) onRecord(fSelf 1 264636) onRecord(fDollar 1 264647) onRecord(fInt 2 264658) onRecord(fFloat 2 264671) onRecord(fRecord 2 264684) onRecord(fOpenRecord 2 264712) onRecord(fApply 3 264740) onRecord(fProc 5 264780) onRecord(fFun 5 264821) onRecord(fFunctor 3 264862) onRecord(fClass 4 264902) onRecord(fMeth 3 264957) onRecord(fLocal 3 264974) onRecord(fBoolCase 4 265026) onRecord(fNoElse 1 265073) onRecord(fCase 4 265084) onRecord(fCaseClause 2 265148) onRecord(fLockThen 3 265161) onRecord(fLock 2 265197) onRecord(fThread 2 265221) onRecord(fTry 4 265245) onRecord(fCatch 2 265292) onRecord(fRaise 2 265319) onRecord(fRaiseWith 3 265343) onRecord(fSkip 1 265379) onRecord(fFail 1 265390) onRecord(fNot 2 265401) onRecord(fCond 3 265425) onRecord(fClause 3 265464) onRecord(fNoThen 1 265524) onRecord(fOr 3 265535) onRecord(fCondis 2 265565) onRecord(fScanner 6 265606) onRecord(fMode 2 265679) onRecord(fInheritedModes 1 265695) onRecord(fLexicalAbbreviation 2 265699) onRecord(fLexicalRule 2 265703) onRecord(fParser 7 265716) onRecord(fProductionTemplate 5 265792) onRecord(fSyntaxRule 3 265829) onRecord(fSynApplication 2 265846) onRecord(fSynAction 1 265850) onRecord(fSynSequence 2 265861) onRecord(fSynAlternative 1 265877) onRecord(fSynAssignment 2 265891) onRecord(fSynTemplateInstantiation 3 265904)]))
lbl(264178)	getLiteral(fNoCatch x(1))
		return
lbl(264182)	getLiteral(fNoFinally x(1))
		return
lbl(264186)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1537> 8)
		getRecord(fDeclare 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1591> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1595> 5)
lbl(264238)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1595> 5)
lbl(264262)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264298)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264334)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(264362)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1594> 5)
lbl(264390)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(264420)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(264450)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264488)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264526)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264562)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(264586)	getVarVar(x(2) x(0))
		getRecord(fAtom 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1593> 5)
lbl(264599)	getVarVar(x(2) x(0))
		getRecord(fVar 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1593> 5)
lbl(264612)	getVarVar(x(2) x(0))
		getRecord(fEscape 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1593> 5)
lbl(264625)	getVariable(x(0))
		getRecord(fWildcard 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(264636)	getVariable(x(0))
		getRecord(fSelf 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(264647)	getVariable(x(0))
		getRecord(fDollar 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(264658)	getVarVar(x(2) x(0))
		getRecord(fInt 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1593> 5)
lbl(264671)	getVarVar(x(2) x(0))
		getRecord(fFloat 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1593> 5)
lbl(264684)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(264712)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fOpenRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(264740)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264780)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264821)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264862)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(264902)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1593> 5)
lbl(264957)	getVarVar(x(2) x(0))
		getVariable(x(3))
		getRecord(fMeth 3 x(1))
		unifyValVar(x(2) x(1))
		unifyValue(x(3))
		genFastCall(<Q: 1595> 5)
lbl(264974)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1537> 8)
		getRecord(fLocal 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1591> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1595> 5)
lbl(265026)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1593> 5)
lbl(265073)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(265084)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1594> 4)
lbl(265106)	definition(x(1) 265123 pid('' 2 pos('./compiler/Unnester.oz' 2516 28) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(265106)
lbl(265123)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1593> 5)
lbl(265148)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1595> 5)
lbl(265161)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(265197)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265221)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265245)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1593> 5)
lbl(265292)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265319)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265343)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1594> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(265379)	getVariable(x(0))
		getRecord(fSkip 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(265390)	getVariable(x(0))
		getRecord(fFail 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(265401)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265425)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1593> 5)
lbl(265464)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1537> 8)
		getRecord(fClause 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(5))
		move(y(3) x(0))
		genFastCall(<Q: 1591> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		genFastCall(<Q: 1595> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1595> 5)
lbl(265524)	getVariable(x(0))
		getRecord(fNoThen 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1593> 5)
lbl(265535)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265565)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(265577)	definition(x(1) 265594 pid('' 2 pos('./compiler/Unnester.oz' 2537 22) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(265577)
lbl(265594)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1593> 5)
lbl(265606)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1593> 5)
lbl(265679)	getVarVar(x(3) x(0))
		getRecord(fMode 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(265695)	unify(x(1) x(0))
		return
lbl(265699)	unify(x(1) x(0))
		return
lbl(265703)	getVarVar(x(2) x(0))
		getRecord(fLexicalRule 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1595> 5)
lbl(265716)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1594> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1593> 5)
lbl(265792)	allocateL2
		getVarVar(x(3) x(4))
		getVarVar(x(0) y(0))
		getVariable(x(5))
		getRecord(fProductionTemplate 5 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(2))
		unifyVariable(y(1))
		unifyValue(x(5))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1595> 5)
lbl(265829)	getVarVar(x(2) x(3))
		getVariable(x(0))
		getRecord(fSyntaxRule 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(1))
		genFastCall(<Q: 1595> 5)
lbl(265846)	unify(x(1) x(0))
		return
lbl(265850)	getVariable(x(0))
		getRecord(fSynAction 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1595> 5)
lbl(265861)	getVarVar(x(3) x(0))
		getRecord(fSynSequence 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(265877)	getVariable(x(0))
		getRecord(fSynAlternative 1 x(1))
		unifyVariable(x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(265891)	getVarVar(x(2) x(0))
		getRecord(fSynAssignment 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1595> 5)
lbl(265904)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fSynTemplateInstantiation 3 x(1))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(265924)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2556)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(264169)
lbl(265939)	unify(x(4) x(3))
lbl(265942)	definition(x(2) 266042 pid('UnnestQuery' 7 pos('./compiler/Unnester.oz' 2559 6) nil 9) <Q: 1596> [y(0)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		sendMsg(init y(5) 3 cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch y(0) 2 cache)
		createVariable(y(0))
		testBool(y(6) 266004 266009)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1595> 4)
		branch(266020)
lbl(266004)	unify(y(0) y(1))
		branch(266020)
lbl(266009)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2561)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(266020)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL7
		tailSendMsg(unnestQuery x(4) 4 cache)
		endDefinition(265942)
lbl(266042)	getRecord('export' [joinQueries makeExpressionQuery unnestQuery] g(16))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		deAllocateL7
		return
		endDefinition(225360)
lbl(266056)	tailCall(x(2) 0)
		endDefinition(224388)
lbl(266061)	putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/>6')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(8))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(4))
		setValue(x(8))
		putList(x(10))
		setConstant(downcasePrintName)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putList(x(12))
		setConstant(procs)
		setConstant(nil)
		putRecord(info [type] x(11))
		setValue(x(12))
		putRecord('import' ['CompilerSupport' 'Core' 'FD' 'Misc' 'RunTime'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(9))
		setValue(x(11))
		putRecord('export' [joinQueries makeExpressionQuery unnestQuery] x(1))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(266175)	definition(x(2) 282944 pid('' 2 pos('./compiler/FunAssembler.oz' 1 0) nil 4) <P: 1597> [y(149) y(203) y(217) y(150) y(148) y(156) y(147) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 1598>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1599>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1600>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1601>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1602>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1603>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1604>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1605>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1606>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1607>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1608>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1609>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1610>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1611>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1612>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1613>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1614>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InstrsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InstrsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LabelDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Size>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Profile>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MarkEnd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1615>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1616>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1617>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1618>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1619>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1620>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1621>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1622>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1623>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1624>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1625>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1626>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1627>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1628>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1629>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1630>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1631>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1632>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1633>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1634>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1635>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1636>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1637>)
		setValue(x(2))
lbl(266469)	definitionCopy(x(3) 282939 pid('/body' 0 pos('./compiler/FunAssembler.oz' 1 0) [once] 45) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(228)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'CompilerSupport' x(2) cache)
		inlineDot(x(0) 'Builtins' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(4) cache)
		inlineDot(x(2) getInstructionSize x(5) cache)
		inlineDot(x(2) getOpcode x(6) cache)
		inlineDot(x(2) newCodeBlock x(7) cache)
		inlineDot(x(2) makeProc x(8) cache)
		inlineDot(x(2) addDebugInfo x(9) cache)
		inlineDot(x(2) storeOpcode x(10) cache)
		inlineDot(x(2) storeNumber x(11) cache)
		inlineDot(x(2) storeLiteral x(12) cache)
		inlineDot(x(2) storeFeature x(13) cache)
		inlineDot(x(2) storeConstant x(14) cache)
		inlineDot(x(2) storeInt x(15) cache)
		inlineDot(x(2) storeRegisterIndex x(16) cache)
		inlineDot(x(2) storePredicateRef x(17) cache)
		inlineDot(x(2) storeRecordArity x(18) cache)
		inlineDot(x(2) storeGRegRef x(19) cache)
		inlineDot(x(2) storeLocation x(20) cache)
		inlineDot(x(2) storeCache x(21) cache)
		inlineDot(x(2) storeBuiltinname x(22) cache)
lbl(266612)	definition(x(23) 266632 pid('StoreBuiltinname' 2 pos('./compiler/Assembler.oz' 62 2) nil 4) <Q: 1598> [x(22)])
		putConstant(~1 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(266612)
lbl(266632)	definition(x(22) 266649 pid('StoreRegister' 2 pos('./compiler/Assembler.oz' 67 6) nil 2) <Q: 1599> [x(16)])
		inlineDot(x(1) 1 x(1) cache)
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(266632)
lbl(266649)	definition(x(22) 266683 pid('StoreXRegisterIndex' 2 pos('./compiler/Assembler.oz' 71 6) nil 3) <Q: 1600> [x(16)])
		shallowGuard(266670)
		getRecord(x 1 x(1))
		unifyVariable(x(2))
lbl(266663)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(266670)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(266649)
lbl(266683)	definition(x(22) 266717 pid('StoreYRegisterIndex' 2 pos('./compiler/Assembler.oz' 75 6) nil 3) <Q: 1601> [x(16)])
		shallowGuard(266704)
		getRecord(y 1 x(1))
		unifyVariable(x(2))
lbl(266697)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(266704)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(75)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(266683)
lbl(266717)	inlineDot(x(2) storeLabel x(16) cache)
lbl(266723)	definition(x(22) 266740 pid('StoreLabel' 3 pos('./compiler/Assembler.oz' 82 2) nil 4) <Q: 1602> [g(1) x(16)])
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(266723)
lbl(266740)	inlineDot(x(2) storePredId x(16) cache)
lbl(266746)	definition(x(22) 266800 pid('StorePredId' 2 pos('./compiler/Assembler.oz' 90 2) nil 7) <Q: 1603> [x(16)])
		shallowGuard(266787)
		getRecord('pid' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(266768)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(266787)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(90)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(266746)
lbl(266800)	inlineDot(x(2) newHashTable x(16) cache)
		inlineDot(x(2) storeHTScalar x(22) cache)
		inlineDot(x(2) storeHTRecord x(23) cache)
lbl(266818)	definition(x(24) 266954 pid('StoreHashTableRef' 3 pos('./compiler/Assembler.oz' 100 2) nil 5) <Q: 1604> [g(1) x(16) x(22) x(23)])
		shallowGuard(266941)
		getRecord('ht' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(266834)	shallowThen
		allocateL6
		callBI('Dictionary.get' [x(2) x(3)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(1) false '' false 4) 0)
lbl(266872)	definition(x(1) 266934 pid('' 1 pos('./compiler/Assembler.oz' 105 6) nil 5) unit [g(0) y(1) g(2) y(0) y(5) g(3)])
		match(x(0) ht(266919 [onRecord('onScalar' 2 266881) onRecord('onRecord' 3 266899)]))
lbl(266881)	getVarVar(x(2) x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) false '' true 4) 0)
lbl(266899)	getVarVar(x(2) x(3))
		getVariable(x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(4)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(5) false '' true 5) 0)
lbl(266919)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(112)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(266872)
lbl(266934)	move(y(2) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(266941)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(100)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(266818)
lbl(266954)	inlineDot(x(2) storeGenCallInfo x(16) cache)
lbl(266960)	definition(x(22) 267020 pid('StoreGenCallInfo' 2 pos('./compiler/Assembler.oz' 120 2) nil 8) <Q: 1605> [x(16)])
		shallowGuard(267007)
		getRecord('gci' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(g 1 x(2))
		unifyVariable(x(7))
lbl(266988)	shallowThen
		move(x(7) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(267007)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(120)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(266960)
lbl(267020)	inlineDot(x(2) storeApplMethInfo x(16) cache)
lbl(267026)	definition(x(22) 267065 pid('StoreApplMethInfo' 2 pos('./compiler/Assembler.oz' 130 2) nil 4) <Q: 1606> [x(16)])
		shallowGuard(267052)
		getRecord('ami' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(267042)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) false '' true 3) 0)
lbl(267052)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(267026)
lbl(267065)	putRecord(instructionSizes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(x(16))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		setVariable(y(59))
		setVariable(y(60))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		setVariable(y(79))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(94))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		moveMoveXYXY(x(1) y(116) x(2) y(117))
		moveMoveXYXY(x(3) y(118) x(4) y(119))
		moveMoveXYXY(x(5) y(120) x(6) y(121))
		moveMoveXYXY(x(7) y(122) x(8) y(123))
		moveMoveXYXY(x(9) y(124) x(10) y(125))
		moveMoveXYXY(x(11) y(126) x(12) y(127))
		moveMoveXYXY(x(13) y(128) x(14) y(129))
		moveMoveXYXY(x(15) y(130) x(17) y(131))
		moveMoveXYXY(x(18) y(132) x(19) y(133))
		moveMoveXYXY(x(20) y(134) x(21) y(135))
		move(x(16) x(1))
		putConstant('endOfFile' x(0))
		call(y(120) 2)
		move(y(94) x(1))
		putConstant('skip' x(0))
		call(y(120) 2)
		move(y(43) x(1))
		putConstant('failure' x(0))
		call(y(120) 2)
		move(y(38) x(1))
		putConstant('definition' x(0))
		call(y(120) 2)
		move(y(39) x(1))
		putConstant('definitionCopy' x(0))
		call(y(120) 2)
		move(y(41) x(1))
		putConstant('endDefinition' x(0))
		call(y(120) 2)
		move(y(73) x(1))
		putConstant(moveXX x(0))
		call(y(120) 2)
		move(y(74) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(120) 2)
		move(y(77) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(120) 2)
		move(y(75) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(120) 2)
		move(y(76) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(120) 2)
		move(y(23) x(1))
		putConstant(createVariableX x(0))
		call(y(120) 2)
		move(y(24) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(120) 2)
		move(y(107) x(1))
		putConstant(unifyXX x(0))
		call(y(120) 2)
		move(y(83) x(1))
		putConstant(putRecordX x(0))
		call(y(120) 2)
		move(y(82) x(1))
		putConstant(putListX x(0))
		call(y(120) 2)
		move(y(81) x(1))
		putConstant(putConstantX x(0))
		call(y(120) 2)
		move(y(90) x(1))
		putConstant(setVariableX x(0))
		call(y(120) 2)
		move(y(89) x(1))
		putConstant(setValueX x(0))
		call(y(120) 2)
		move(y(86) x(1))
		putConstant('setConstant' x(0))
		call(y(120) 2)
		move(y(87) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(120) 2)
		move(y(91) x(1))
		putConstant('setVoid' x(0))
		call(y(120) 2)
		move(y(53) x(1))
		putConstant(getRecordX x(0))
		call(y(120) 2)
		move(y(49) x(1))
		putConstant(getListX x(0))
		call(y(120) 2)
		move(y(50) x(1))
		putConstant(getListValVarX x(0))
		call(y(120) 2)
		move(y(112) x(1))
		putConstant(unifyVariableX x(0))
		call(y(120) 2)
		move(y(111) x(1))
		putConstant(unifyValueX x(0))
		call(y(120) 2)
		move(y(110) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(120) 2)
		move(y(109) x(1))
		putConstant('unifyNumber' x(0))
		call(y(120) 2)
		move(y(108) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(120) 2)
		move(y(113) x(1))
		putConstant('unifyVoid' x(0))
		call(y(120) 2)
		move(y(51) x(1))
		putConstant(getLiteralX x(0))
		call(y(120) 2)
		move(y(52) x(1))
		putConstant(getNumberX x(0))
		call(y(120) 2)
		move(y(1) x(1))
		putConstant('allocateL' x(0))
		call(y(120) 2)
		move(y(2) x(1))
		putConstant('allocateL1' x(0))
		call(y(120) 2)
		move(y(4) x(1))
		putConstant('allocateL2' x(0))
		call(y(120) 2)
		move(y(5) x(1))
		putConstant('allocateL3' x(0))
		call(y(120) 2)
		move(y(6) x(1))
		putConstant('allocateL4' x(0))
		call(y(120) 2)
		move(y(7) x(1))
		putConstant('allocateL5' x(0))
		call(y(120) 2)
		move(y(8) x(1))
		putConstant('allocateL6' x(0))
		call(y(120) 2)
		move(y(9) x(1))
		putConstant('allocateL7' x(0))
		call(y(120) 2)
		move(y(10) x(1))
		putConstant('allocateL8' x(0))
		call(y(120) 2)
		move(y(11) x(1))
		putConstant('allocateL9' x(0))
		call(y(120) 2)
		move(y(3) x(1))
		putConstant('allocateL10' x(0))
		call(y(120) 2)
		move(y(25) x(1))
		putConstant('deAllocateL' x(0))
		call(y(120) 2)
		move(y(26) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(120) 2)
		move(y(28) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(120) 2)
		move(y(29) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(120) 2)
		move(y(30) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(120) 2)
		move(y(31) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(120) 2)
		move(y(32) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(120) 2)
		move(y(33) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(120) 2)
		move(y(34) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(120) 2)
		move(y(35) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(120) 2)
		move(y(27) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(120) 2)
		move(y(47) x(1))
		putConstant('genCall' x(0))
		call(y(120) 2)
		move(y(15) x(1))
		putConstant(callX x(0))
		call(y(120) 2)
		move(y(96) x(1))
		putConstant(tailCallX x(0))
		call(y(120) 2)
		move(y(71) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(120) 2)
		move(y(48) x(1))
		putConstant('genFastCall' x(0))
		call(y(120) 2)
		move(y(44) x(1))
		putConstant('fastCall' x(0))
		call(y(120) 2)
		move(y(45) x(1))
		putConstant('fastTailCall' x(0))
		call(y(120) 2)
		move(y(85) x(1))
		putConstant(sendMsgX x(0))
		call(y(120) 2)
		move(y(97) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(120) 2)
		move(y(12) x(1))
		putConstant(applMethX x(0))
		call(y(120) 2)
		move(y(95) x(1))
		putConstant(tailApplMethX x(0))
		call(y(120) 2)
		move(y(55) x(1))
		putConstant('getSelf' x(0))
		call(y(120) 2)
		move(y(88) x(1))
		putConstant('setSelf' x(0))
		call(y(120) 2)
		move(y(70) x(1))
		putConstant('lockThread' x(0))
		call(y(120) 2)
		move(y(61) x(1))
		putConstant('inlineAt' x(0))
		call(y(120) 2)
		move(y(60) x(1))
		putConstant('inlineAssign' x(0))
		call(y(120) 2)
		move(y(14) x(1))
		putConstant('branch' x(0))
		call(y(120) 2)
		move(y(114) x(1))
		putConstant('wait' x(0))
		call(y(120) 2)
		move(y(115) x(1))
		putConstant('waitTop' x(0))
		call(y(120) 2)
		move(y(13) x(1))
		putConstant('ask' x(0))
		call(y(120) 2)
		move(y(20) x(1))
		putConstant('createCond' x(0))
		call(y(120) 2)
		move(y(22) x(1))
		putConstant('createOr' x(0))
		call(y(120) 2)
		move(y(21) x(1))
		putConstant('createEnumOr' x(0))
		call(y(120) 2)
		move(y(19) x(1))
		putConstant('createChoice' x(0))
		call(y(120) 2)
		move(y(17) x(1))
		putConstant('clause' x(0))
		call(y(120) 2)
		move(y(40) x(1))
		putConstant('emptyClause' x(0))
		call(y(120) 2)
		move(y(106) x(1))
		putConstant('thread' x(0))
		call(y(120) 2)
		move(y(42) x(1))
		putConstant('exHandler' x(0))
		call(y(120) 2)
		move(y(79) x(1))
		putConstant('popEx' x(0))
		call(y(120) 2)
		move(y(84) x(1))
		putConstant('return' x(0))
		call(y(120) 2)
		move(y(54) x(1))
		putConstant(getReturnX x(0))
		call(y(120) 2)
		move(y(46) x(1))
		putConstant(funReturnX x(0))
		call(y(120) 2)
		move(y(78) x(1))
		putConstant('nextClause' x(0))
		call(y(120) 2)
		move(y(68) x(1))
		putConstant('lastClause' x(0))
		call(y(120) 2)
		move(y(92) x(1))
		putConstant('shallowGuard' x(0))
		call(y(120) 2)
		move(y(93) x(1))
		putConstant('shallowThen' x(0))
		call(y(120) 2)
		move(y(103) x(1))
		putConstant(testLiteralX x(0))
		call(y(120) 2)
		move(y(104) x(1))
		putConstant(testNumberX x(0))
		call(y(120) 2)
		move(y(105) x(1))
		putConstant(testRecordX x(0))
		call(y(120) 2)
		move(y(102) x(1))
		putConstant(testListX x(0))
		call(y(120) 2)
		move(y(99) x(1))
		putConstant(testBoolX x(0))
		call(y(120) 2)
		move(y(72) x(1))
		putConstant(matchX x(0))
		call(y(120) 2)
		move(y(57) x(1))
		putConstant(getVariableX x(0))
		call(y(120) 2)
		move(y(56) x(1))
		putConstant(getVarVarXX x(0))
		call(y(120) 2)
		move(y(58) x(1))
		putConstant('getVoid' x(0))
		call(y(120) 2)
		move(y(36) x(1))
		putConstant('debugEntry' x(0))
		call(y(120) 2)
		move(y(37) x(1))
		putConstant('debugExit' x(0))
		call(y(120) 2)
		move(y(59) x(1))
		putConstant('globalVarname' x(0))
		call(y(120) 2)
		move(y(69) x(1))
		putConstant('localVarname' x(0))
		call(y(120) 2)
		move(y(18) x(1))
		putConstant('clearY' x(0))
		call(y(120) 2)
		move(y(80) x(1))
		putConstant('profileProc' x(0))
		call(y(120) 2)
		move(y(16) x(1))
		putConstant('callBI' x(0))
		call(y(120) 2)
		move(y(66) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(120) 2)
		move(y(64) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(120) 2)
		move(y(65) x(1))
		putConstant('inlinePlus' x(0))
		call(y(120) 2)
		move(y(63) x(1))
		putConstant('inlineMinus' x(0))
		call(y(120) 2)
		move(y(62) x(1))
		putConstant('inlineDot' x(0))
		call(y(120) 2)
		move(y(67) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(120) 2)
		move(y(98) x(1))
		putConstant('testBI' x(0))
		call(y(120) 2)
		move(y(101) x(1))
		putConstant('testLT' x(0))
		call(y(120) 2)
		move(y(100) x(1))
		putConstant('testLE' x(0))
		call(y(120) 2)
		putRecord(f [g x y] x(0))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		putRecord(f [g x y] x(1))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		putRecord(f [g x y] x(2))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		putRecord(f [g x y] x(3))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		putRecord(f [g x y] x(4))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		putRecord(f [g x y] x(5))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		putRecord(f [g x y] x(6))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		putRecord(f [g x y] x(7))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		putRecord(f [g x y] x(8))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		putRecord(f [g x y] x(9))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		putRecord(f [g x y] x(10))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		putRecord(f [g x y] x(12))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		putRecord(f [g x y] x(13))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		putRecord(f [g x y] x(14))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		putRecord(f [g x y] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putRecord(f [g x y] x(15))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		putRecord(f [g x y] x(16))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		putRecord(f [g x y] x(18))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		putRecord(f [g x y] x(19))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		putRecord(f [g x y] x(20))
		setVariable(y(120))
		setVariable(y(136))
		setVariable(y(137))
		putRecord(f [g x y] x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord(f [g x y] x(21))
		setVariable(y(145))
		setVariable(y(146))
		setVariable(y(147))
		putRecord(f [g x y] x(22))
		setVariable(y(148))
		setVariable(y(149))
		setVariable(y(150))
		putRecord(f [g x y] x(23))
		setVariable(y(151))
		setVariable(y(152))
		setVariable(y(153))
		putRecord(f [g x y] x(24))
		setVariable(y(155))
		setVariable(y(156))
		setVariable(y(157))
		putRecord(f [g x y] x(25))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(y(163))
		putRecord(f [g x y] x(26))
		setVariable(y(164))
		setVariable(y(165))
		setVariable(y(166))
		putRecord(f [g x y] x(27))
		setVariable(y(171))
		setVariable(y(172))
		setVariable(y(173))
		putRecord(f [g x y] x(28))
		setVariable(y(174))
		setVariable(y(175))
		setVariable(y(176))
		putRecord(f [g x y] x(29))
		setVariable(y(177))
		setVariable(y(178))
		setVariable(y(179))
		putRecord(f [g x y] x(30))
		setVariable(y(181))
		setVariable(y(182))
		setVariable(y(183))
		putRecord(f [g x y] x(31))
		setVariable(y(186))
		setVariable(y(187))
		setVariable(y(188))
		putRecord(f [g x y] x(32))
		setVariable(y(189))
		setVariable(y(190))
		setVariable(y(191))
		putRecord(f [g x y] x(33))
		setVariable(y(192))
		setVariable(y(193))
		setVariable(y(194))
		putRecord(f [g x y] x(34))
		setVariable(y(195))
		setVariable(y(196))
		setVariable(y(197))
		putRecord(f [g x y] x(36))
		setVariable(y(199))
		setVariable(y(200))
		setVariable(y(201))
		putRecord(f [g x y] x(37))
		setVariable(y(202))
		setVariable(y(203))
		setVariable(y(204))
		putRecord(f [g x y] x(38))
		setVariable(y(205))
		setVariable(y(206))
		setVariable(y(207))
		putRecord(f [g x y] x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		putRecord(f [g x y] x(40))
		setVariable(y(210))
		setVariable(y(211))
		setVariable(y(212))
		putRecord(f [g x y] x(41))
		setVariable(y(213))
		setVariable(y(214))
		setVariable(y(215))
		putRecord(f [g x y] x(42))
		setVariable(y(216))
		setVariable(y(217))
		setVariable(y(218))
		putRecord(f [g x y] x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		putRecord(f [g x y] x(43))
		setVariable(y(219))
		setVariable(y(220))
		setVariable(y(221))
		putRecord(f [g x y] x(44))
		setVariable(y(222))
		setVariable(y(223))
		setVariable(y(224))
		putRecord(opcodes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setValue(x(0))
		setVariable(y(16))
		setVariable(y(17))
		setValue(x(1))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setValue(x(2))
		setValue(x(3))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setValue(x(4))
		setVariable(y(59))
		setVariable(y(60))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setVariable(y(79))
		setValue(x(11))
		setValue(x(15))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setValue(x(16))
		setValue(x(17))
		setVariable(y(138))
		setVariable(y(139))
		setVariable(y(140))
		setVariable(y(141))
		setVariable(y(142))
		setVariable(y(143))
		setVariable(y(144))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setVariable(y(154))
		setValue(x(24))
		setVariable(y(158))
		setVariable(y(159))
		setVariable(y(160))
		setValue(x(25))
		setValue(x(26))
		setVariable(y(167))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setVariable(y(180))
		setValue(x(30))
		setVariable(y(184))
		setVariable(y(185))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setVariable(y(198))
		setValue(x(35))
		setVariable(y(208))
		setVariable(y(209))
		setValue(x(39))
		setValue(x(43))
		setValue(x(44))
		setVariable(y(225))
		setVariable(y(226))
		setVariable(y(227))
		move(y(51) x(1))
		putConstant('endOfFile' x(0))
		call(y(121) 2)
		move(y(170) x(1))
		putConstant('skip' x(0))
		call(y(121) 2)
		move(y(53) x(1))
		putConstant('failure' x(0))
		call(y(121) 2)
		move(y(47) x(1))
		putConstant('definition' x(0))
		call(y(121) 2)
		move(y(48) x(1))
		putConstant('definitionCopy' x(0))
		call(y(121) 2)
		move(y(50) x(1))
		putConstant('endDefinition' x(0))
		call(y(121) 2)
		move(y(114) x(1))
		putConstant(moveXX x(0))
		call(y(121) 2)
		move(y(115) x(1))
		putConstant(moveXY x(0))
		call(y(121) 2)
		move(y(113) x(1))
		putConstant(moveXG x(0))
		call(y(121) 2)
		move(y(136) x(1))
		putConstant(moveYX x(0))
		call(y(121) 2)
		move(y(137) x(1))
		putConstant(moveYY x(0))
		call(y(121) 2)
		move(y(120) x(1))
		putConstant(moveYG x(0))
		call(y(121) 2)
		move(y(111) x(1))
		putConstant(moveGX x(0))
		call(y(121) 2)
		move(y(112) x(1))
		putConstant(moveGY x(0))
		call(y(121) 2)
		move(y(110) x(1))
		putConstant(moveGG x(0))
		call(y(121) 2)
		move(y(138) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(121) 2)
		move(y(141) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(121) 2)
		move(y(139) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(121) 2)
		move(y(140) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(121) 2)
		move(y(29) x(1))
		putConstant(createVariableX x(0))
		call(y(121) 2)
		move(y(30) x(1))
		putConstant(createVariableY x(0))
		call(y(121) 2)
		move(y(28) x(1))
		putConstant(createVariableG x(0))
		call(y(121) 2)
		move(y(32) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(121) 2)
		move(y(33) x(1))
		putConstant(createVariableMoveY x(0))
		call(y(121) 2)
		move(y(31) x(1))
		putConstant(createVariableMoveG x(0))
		call(y(121) 2)
		move(y(203) x(1))
		putConstant(unifyXX x(0))
		call(y(121) 2)
		move(y(204) x(1))
		putConstant(unifyXY x(0))
		call(y(121) 2)
		move(y(202) x(1))
		putConstant(unifyXG x(0))
		call(y(121) 2)
		move(y(206) x(1))
		putConstant(unifyYX x(0))
		call(y(121) 2)
		move(y(207) x(1))
		putConstant(unifyYY x(0))
		call(y(121) 2)
		move(y(205) x(1))
		putConstant(unifyYG x(0))
		call(y(121) 2)
		move(y(200) x(1))
		putConstant(unifyGX x(0))
		call(y(121) 2)
		move(y(201) x(1))
		putConstant(unifyGY x(0))
		call(y(121) 2)
		move(y(199) x(1))
		putConstant(unifyGG x(0))
		call(y(121) 2)
		move(y(152) x(1))
		putConstant(putRecordX x(0))
		call(y(121) 2)
		move(y(153) x(1))
		putConstant(putRecordY x(0))
		call(y(121) 2)
		move(y(151) x(1))
		putConstant(putRecordG x(0))
		call(y(121) 2)
		move(y(149) x(1))
		putConstant(putListX x(0))
		call(y(121) 2)
		move(y(150) x(1))
		putConstant(putListY x(0))
		call(y(121) 2)
		move(y(148) x(1))
		putConstant(putListG x(0))
		call(y(121) 2)
		move(y(146) x(1))
		putConstant(putConstantX x(0))
		call(y(121) 2)
		move(y(147) x(1))
		putConstant(putConstantY x(0))
		call(y(121) 2)
		move(y(145) x(1))
		putConstant(putConstantG x(0))
		call(y(121) 2)
		move(y(165) x(1))
		putConstant(setVariableX x(0))
		call(y(121) 2)
		move(y(166) x(1))
		putConstant(setVariableY x(0))
		call(y(121) 2)
		move(y(164) x(1))
		putConstant(setVariableG x(0))
		call(y(121) 2)
		move(y(162) x(1))
		putConstant(setValueX x(0))
		call(y(121) 2)
		move(y(163) x(1))
		putConstant(setValueY x(0))
		call(y(121) 2)
		move(y(161) x(1))
		putConstant(setValueG x(0))
		call(y(121) 2)
		move(y(158) x(1))
		putConstant('setConstant' x(0))
		call(y(121) 2)
		move(y(159) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(121) 2)
		move(y(167) x(1))
		putConstant('setVoid' x(0))
		call(y(121) 2)
		move(y(74) x(1))
		putConstant(getRecordX x(0))
		call(y(121) 2)
		move(y(75) x(1))
		putConstant(getRecordY x(0))
		call(y(121) 2)
		move(y(73) x(1))
		putConstant(getRecordG x(0))
		call(y(121) 2)
		move(y(62) x(1))
		putConstant(getListX x(0))
		call(y(121) 2)
		move(y(63) x(1))
		putConstant(getListY x(0))
		call(y(121) 2)
		move(y(61) x(1))
		putConstant(getListG x(0))
		call(y(121) 2)
		move(y(65) x(1))
		putConstant(getListValVarX x(0))
		call(y(121) 2)
		move(y(66) x(1))
		putConstant(getListValVarY x(0))
		call(y(121) 2)
		move(y(64) x(1))
		putConstant(getListValVarG x(0))
		call(y(121) 2)
		move(y(223) x(1))
		putConstant(unifyVariableX x(0))
		call(y(121) 2)
		move(y(224) x(1))
		putConstant(unifyVariableY x(0))
		call(y(121) 2)
		move(y(222) x(1))
		putConstant(unifyVariableG x(0))
		call(y(121) 2)
		move(y(220) x(1))
		putConstant(unifyValueX x(0))
		call(y(121) 2)
		move(y(221) x(1))
		putConstant(unifyValueY x(0))
		call(y(121) 2)
		move(y(219) x(1))
		putConstant(unifyValueG x(0))
		call(y(121) 2)
		move(y(214) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(121) 2)
		move(y(215) x(1))
		putConstant(unifyValVarXY x(0))
		call(y(121) 2)
		move(y(213) x(1))
		putConstant(unifyValVarXG x(0))
		call(y(121) 2)
		move(y(217) x(1))
		putConstant(unifyValVarYX x(0))
		call(y(121) 2)
		move(y(218) x(1))
		putConstant(unifyValVarYY x(0))
		call(y(121) 2)
		move(y(216) x(1))
		putConstant(unifyValVarYG x(0))
		call(y(121) 2)
		move(y(211) x(1))
		putConstant(unifyValVarGX x(0))
		call(y(121) 2)
		move(y(212) x(1))
		putConstant(unifyValVarGY x(0))
		call(y(121) 2)
		move(y(210) x(1))
		putConstant(unifyValVarGG x(0))
		call(y(121) 2)
		move(y(209) x(1))
		putConstant('unifyNumber' x(0))
		call(y(121) 2)
		move(y(208) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(121) 2)
		move(y(225) x(1))
		putConstant('unifyVoid' x(0))
		call(y(121) 2)
		move(y(68) x(1))
		putConstant(getLiteralX x(0))
		call(y(121) 2)
		move(y(69) x(1))
		putConstant(getLiteralY x(0))
		call(y(121) 2)
		move(y(67) x(1))
		putConstant(getLiteralG x(0))
		call(y(121) 2)
		move(y(71) x(1))
		putConstant(getNumberX x(0))
		call(y(121) 2)
		move(y(72) x(1))
		putConstant(getNumberY x(0))
		call(y(121) 2)
		move(y(70) x(1))
		putConstant(getNumberG x(0))
		call(y(121) 2)
		move(y(2) x(1))
		putConstant('allocateL' x(0))
		call(y(121) 2)
		move(y(3) x(1))
		putConstant('allocateL1' x(0))
		call(y(121) 2)
		move(y(5) x(1))
		putConstant('allocateL2' x(0))
		call(y(121) 2)
		move(y(6) x(1))
		putConstant('allocateL3' x(0))
		call(y(121) 2)
		move(y(7) x(1))
		putConstant('allocateL4' x(0))
		call(y(121) 2)
		move(y(8) x(1))
		putConstant('allocateL5' x(0))
		call(y(121) 2)
		move(y(9) x(1))
		putConstant('allocateL6' x(0))
		call(y(121) 2)
		move(y(10) x(1))
		putConstant('allocateL7' x(0))
		call(y(121) 2)
		move(y(11) x(1))
		putConstant('allocateL8' x(0))
		call(y(121) 2)
		move(y(12) x(1))
		putConstant('allocateL9' x(0))
		call(y(121) 2)
		move(y(4) x(1))
		putConstant('allocateL10' x(0))
		call(y(121) 2)
		move(y(34) x(1))
		putConstant('deAllocateL' x(0))
		call(y(121) 2)
		move(y(35) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(121) 2)
		move(y(37) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(121) 2)
		move(y(38) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(121) 2)
		move(y(39) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(121) 2)
		move(y(40) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(121) 2)
		move(y(41) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(121) 2)
		move(y(42) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(121) 2)
		move(y(43) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(121) 2)
		move(y(44) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(121) 2)
		move(y(36) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(121) 2)
		move(y(59) x(1))
		putConstant('genCall' x(0))
		call(y(121) 2)
		move(y(19) x(1))
		putConstant(callX x(0))
		call(y(121) 2)
		move(y(20) x(1))
		putConstant(callY x(0))
		call(y(121) 2)
		move(y(18) x(1))
		putConstant(callG x(0))
		call(y(121) 2)
		move(y(175) x(1))
		putConstant(tailCallX x(0))
		call(y(121) 2)
		move(y(176) x(1))
		putConstant(tailCallY x(0))
		call(y(121) 2)
		move(y(174) x(1))
		putConstant(tailCallG x(0))
		call(y(121) 2)
		move(y(106) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(121) 2)
		move(y(60) x(1))
		putConstant('genFastCall' x(0))
		call(y(121) 2)
		move(y(54) x(1))
		putConstant('fastCall' x(0))
		call(y(121) 2)
		move(y(55) x(1))
		putConstant('fastTailCall' x(0))
		call(y(121) 2)
		move(y(156) x(1))
		putConstant(sendMsgX x(0))
		call(y(121) 2)
		move(y(157) x(1))
		putConstant(sendMsgY x(0))
		call(y(121) 2)
		move(y(155) x(1))
		putConstant(sendMsgG x(0))
		call(y(121) 2)
		move(y(178) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(121) 2)
		move(y(179) x(1))
		putConstant(tailSendMsgY x(0))
		call(y(121) 2)
		move(y(177) x(1))
		putConstant(tailSendMsgG x(0))
		call(y(121) 2)
		move(y(14) x(1))
		putConstant(applMethX x(0))
		call(y(121) 2)
		move(y(15) x(1))
		putConstant(applMethY x(0))
		call(y(121) 2)
		move(y(13) x(1))
		putConstant(applMethG x(0))
		call(y(121) 2)
		move(y(172) x(1))
		putConstant(tailApplMethX x(0))
		call(y(121) 2)
		move(y(173) x(1))
		putConstant(tailApplMethY x(0))
		call(y(121) 2)
		move(y(171) x(1))
		putConstant(tailApplMethG x(0))
		call(y(121) 2)
		move(y(79) x(1))
		putConstant('getSelf' x(0))
		call(y(121) 2)
		move(y(160) x(1))
		putConstant('setSelf' x(0))
		call(y(121) 2)
		move(y(105) x(1))
		putConstant('lockThread' x(0))
		call(y(121) 2)
		move(y(96) x(1))
		putConstant('inlineAt' x(0))
		call(y(121) 2)
		move(y(95) x(1))
		putConstant('inlineAssign' x(0))
		call(y(121) 2)
		move(y(17) x(1))
		putConstant('branch' x(0))
		call(y(121) 2)
		move(y(226) x(1))
		putConstant('wait' x(0))
		call(y(121) 2)
		move(y(227) x(1))
		putConstant('waitTop' x(0))
		call(y(121) 2)
		move(y(16) x(1))
		putConstant('ask' x(0))
		call(y(121) 2)
		move(y(25) x(1))
		putConstant('createCond' x(0))
		call(y(121) 2)
		move(y(27) x(1))
		putConstant('createOr' x(0))
		call(y(121) 2)
		move(y(26) x(1))
		putConstant('createEnumOr' x(0))
		call(y(121) 2)
		move(y(24) x(1))
		putConstant('createChoice' x(0))
		call(y(121) 2)
		move(y(22) x(1))
		putConstant('clause' x(0))
		call(y(121) 2)
		move(y(49) x(1))
		putConstant('emptyClause' x(0))
		call(y(121) 2)
		move(y(198) x(1))
		putConstant('thread' x(0))
		call(y(121) 2)
		move(y(52) x(1))
		putConstant('exHandler' x(0))
		call(y(121) 2)
		move(y(143) x(1))
		putConstant('popEx' x(0))
		call(y(121) 2)
		move(y(154) x(1))
		putConstant('return' x(0))
		call(y(121) 2)
		move(y(77) x(1))
		putConstant(getReturnX x(0))
		call(y(121) 2)
		move(y(78) x(1))
		putConstant(getReturnY x(0))
		call(y(121) 2)
		move(y(76) x(1))
		putConstant(getReturnG x(0))
		call(y(121) 2)
		move(y(57) x(1))
		putConstant(funReturnX x(0))
		call(y(121) 2)
		move(y(58) x(1))
		putConstant(funReturnY x(0))
		call(y(121) 2)
		move(y(56) x(1))
		putConstant(funReturnG x(0))
		call(y(121) 2)
		move(y(142) x(1))
		putConstant('nextClause' x(0))
		call(y(121) 2)
		move(y(103) x(1))
		putConstant('lastClause' x(0))
		call(y(121) 2)
		move(y(168) x(1))
		putConstant('shallowGuard' x(0))
		call(y(121) 2)
		move(y(169) x(1))
		putConstant('shallowThen' x(0))
		call(y(121) 2)
		move(y(190) x(1))
		putConstant(testLiteralX x(0))
		call(y(121) 2)
		move(y(191) x(1))
		putConstant(testLiteralY x(0))
		call(y(121) 2)
		move(y(189) x(1))
		putConstant(testLiteralG x(0))
		call(y(121) 2)
		move(y(193) x(1))
		putConstant(testNumberX x(0))
		call(y(121) 2)
		move(y(194) x(1))
		putConstant(testNumberY x(0))
		call(y(121) 2)
		move(y(192) x(1))
		putConstant(testNumberG x(0))
		call(y(121) 2)
		move(y(196) x(1))
		putConstant(testRecordX x(0))
		call(y(121) 2)
		move(y(197) x(1))
		putConstant(testRecordY x(0))
		call(y(121) 2)
		move(y(195) x(1))
		putConstant(testRecordG x(0))
		call(y(121) 2)
		move(y(187) x(1))
		putConstant(testListX x(0))
		call(y(121) 2)
		move(y(188) x(1))
		putConstant(testListY x(0))
		call(y(121) 2)
		move(y(186) x(1))
		putConstant(testListG x(0))
		call(y(121) 2)
		move(y(182) x(1))
		putConstant(testBoolX x(0))
		call(y(121) 2)
		move(y(183) x(1))
		putConstant(testBoolY x(0))
		call(y(121) 2)
		move(y(181) x(1))
		putConstant(testBoolG x(0))
		call(y(121) 2)
		move(y(108) x(1))
		putConstant(matchX x(0))
		call(y(121) 2)
		move(y(109) x(1))
		putConstant(matchY x(0))
		call(y(121) 2)
		move(y(107) x(1))
		putConstant(matchG x(0))
		call(y(121) 2)
		move(y(90) x(1))
		putConstant(getVariableX x(0))
		call(y(121) 2)
		move(y(91) x(1))
		putConstant(getVariableY x(0))
		call(y(121) 2)
		move(y(89) x(1))
		putConstant(getVariableG x(0))
		call(y(121) 2)
		move(y(84) x(1))
		putConstant(getVarVarXX x(0))
		call(y(121) 2)
		move(y(85) x(1))
		putConstant(getVarVarXY x(0))
		call(y(121) 2)
		move(y(83) x(1))
		putConstant(getVarVarXG x(0))
		call(y(121) 2)
		move(y(87) x(1))
		putConstant(getVarVarYX x(0))
		call(y(121) 2)
		move(y(88) x(1))
		putConstant(getVarVarYY x(0))
		call(y(121) 2)
		move(y(86) x(1))
		putConstant(getVarVarYG x(0))
		call(y(121) 2)
		move(y(81) x(1))
		putConstant(getVarVarGX x(0))
		call(y(121) 2)
		move(y(82) x(1))
		putConstant(getVarVarGY x(0))
		call(y(121) 2)
		move(y(80) x(1))
		putConstant(getVarVarGG x(0))
		call(y(121) 2)
		move(y(92) x(1))
		putConstant('getVoid' x(0))
		call(y(121) 2)
		move(y(45) x(1))
		putConstant('debugEntry' x(0))
		call(y(121) 2)
		move(y(46) x(1))
		putConstant('debugExit' x(0))
		call(y(121) 2)
		move(y(93) x(1))
		putConstant('globalVarname' x(0))
		call(y(121) 2)
		move(y(104) x(1))
		putConstant('localVarname' x(0))
		call(y(121) 2)
		move(y(23) x(1))
		putConstant('clearY' x(0))
		call(y(121) 2)
		move(y(144) x(1))
		putConstant('profileProc' x(0))
		call(y(121) 2)
		move(y(21) x(1))
		putConstant('callBI' x(0))
		call(y(121) 2)
		move(y(101) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(121) 2)
		move(y(99) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(121) 2)
		move(y(100) x(1))
		putConstant('inlinePlus' x(0))
		call(y(121) 2)
		move(y(98) x(1))
		putConstant('inlineMinus' x(0))
		call(y(121) 2)
		move(y(97) x(1))
		putConstant('inlineDot' x(0))
		call(y(121) 2)
		move(y(102) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(121) 2)
		move(y(180) x(1))
		putConstant('testBI' x(0))
		call(y(121) 2)
		move(y(185) x(1))
		putConstant('testLT' x(0))
		call(y(121) 2)
		move(y(184) x(1))
		putConstant('testLE' x(0))
		call(y(121) 2)
lbl(270935)	definition(x(7) 274704 pid('StoreInstr' 3 pos('./compiler-Opcodes.oz' 537 0) nil 7) <Q: 1607> [y(51) y(125) y(170) y(53) y(3) y(5) y(6) y(7) y(8) y(9) y(10) y(11) y(12) y(4) y(34) y(35) y(37) y(38) y(39) y(40) y(41) y(42) y(43) y(44) y(36) y(226) y(227) y(16) y(27) y(26) y(24) y(22) y(49) y(143) y(154) y(103) y(169) y(144) y(124) y(45) y(127) y(126) y(47) y(131) y(133) y(48) y(50) y(1) y(138) y(141) y(139) y(140) y(132) y(129) y(158) y(159) y(167) y(130) y(209) y(208) y(225) y(2) y(59) y(106) y(60) y(54) y(55) y(135) y(79) y(160) y(105) y(96) y(128) y(95) y(17) y(25) y(198) y(52) y(142) y(168) y(92) y(46) y(93) y(104) y(23) y(21) y(134) y(101) y(99) y(100) y(98) y(97) y(102) y(180) y(185) y(184)])
		match(x(0) ht(274689 [onScalar('endOfFile' 270944) onScalar('skip' 270953) onScalar('failure' 270962) onScalar('allocateL1' 270971) onScalar('allocateL2' 270980) onScalar('allocateL3' 270989) onScalar('allocateL4' 270998) onScalar('allocateL5' 271007) onScalar('allocateL6' 271016) onScalar('allocateL7' 271025) onScalar('allocateL8' 271034) onScalar('allocateL9' 271043) onScalar('allocateL10' 271052) onScalar('deAllocateL' 271061) onScalar('deAllocateL1' 271070) onScalar('deAllocateL2' 271079) onScalar('deAllocateL3' 271088) onScalar('deAllocateL4' 271097) onScalar('deAllocateL5' 271106) onScalar('deAllocateL6' 271115) onScalar('deAllocateL7' 271124) onScalar('deAllocateL8' 271133) onScalar('deAllocateL9' 271142) onScalar('deAllocateL10' 271151) onScalar('wait' 271160) onScalar('waitTop' 271169) onScalar('ask' 271178) onScalar('createOr' 271187) onScalar('createEnumOr' 271196) onScalar('createChoice' 271205) onScalar('clause' 271214) onScalar('emptyClause' 271223) onScalar('popEx' 271232) onScalar('return' 271241) onScalar('lastClause' 271250) onScalar('shallowThen' 271259) onScalar('profileProc' 271268) onRecord('debugEntry' 4 271277) onRecord('definition' 5 271339) onRecord('definitionCopy' 5 271406) onRecord('endDefinition' 1 271473) onRecord('move' 2 271502) onRecord('moveMoveXYXY' 4 271560) onRecord('moveMoveYXYX' 4 271611) onRecord('moveMoveXYYX' 4 271662) onRecord('moveMoveYXXY' 4 271713) onRecord('createVariable' 1 271764) onRecord('createVariableMove' 2 271805) onRecord('unify' 2 271855) onRecord('putRecord' 3 271913) onRecord('putList' 1 271973) onRecord('putConstant' 2 272014) onRecord('setVariable' 1 272064) onRecord('setValue' 1 272105) onRecord('setConstant' 1 272146) onRecord('setPredicateRef' 1 272169) onRecord('setVoid' 1 272192) onRecord('getRecord' 3 272215) onRecord('getList' 1 272275) onRecord('getListValVar' 3 272316) onRecord('unifyVariable' 1 272376) onRecord('unifyValue' 1 272417) onRecord('unifyValVar' 2 272458) onRecord('unifyNumber' 1 272516) onRecord('unifyLiteral' 1 272539) onRecord('unifyVoid' 1 272562) onRecord('getLiteral' 2 272585) onRecord('getNumber' 2 272635) onRecord('allocateL' 1 272685) onRecord('genCall' 2 272708) onRecord('call' 2 272740) onRecord('tailCall' 2 272790) onRecord('marshalledFastCall' 2 272840) onRecord('genFastCall' 2 272872) onRecord('fastCall' 2 272904) onRecord('fastTailCall' 2 272936) onRecord('sendMsg' 4 272968) onRecord('tailSendMsg' 4 273037) onRecord('applMeth' 2 273106) onRecord('tailApplMeth' 2 273156) onRecord('getSelf' 1 273206) onRecord('setSelf' 1 273229) onRecord('lockThread' 2 273252) onRecord('inlineAt' 3 273290) onRecord('inlineAssign' 3 273332) onRecord('branch' 1 273374) onRecord('createCond' 1 273403) onRecord('thread' 1 273432) onRecord('exHandler' 1 273461) onRecord('getReturn' 1 273490) onRecord('funReturn' 1 273531) onRecord('nextClause' 1 273572) onRecord('shallowGuard' 1 273601) onRecord('testLiteral' 3 273630) onRecord('testNumber' 3 273695) onRecord('testRecord' 4 273760) onRecord('testList' 2 273834) onRecord('testBool' 3 273889) onRecord('match' 2 273957) onRecord('getVariable' 1 274012) onRecord('getVarVar' 2 274053) onRecord('getVoid' 1 274111) onRecord('debugExit' 4 274134) onRecord('globalVarname' 1 274185) onRecord('localVarname' 1 274208) onRecord('clearY' 1 274231) onRecord('callBI' 2 274254) onRecord('inlinePlus1' 2 274286) onRecord('inlineMinus1' 2 274318) onRecord('inlinePlus' 3 274350) onRecord('inlineMinus' 3 274392) onRecord('inlineDot' 4 274434) onRecord('inlineUparrow' 3 274485) onRecord('testBI' 3 274527) onRecord('testLT' 4 274575) onRecord('testLE' 4 274632)]))
lbl(270944)	move(x(1) x(0))
		move(g(0) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270953)	move(x(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270962)	move(x(1) x(0))
		move(g(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270971)	move(x(1) x(0))
		move(g(4) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270980)	move(x(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270989)	move(x(1) x(0))
		move(g(6) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(270998)	move(x(1) x(0))
		move(g(7) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271007)	move(x(1) x(0))
		move(g(8) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271016)	move(x(1) x(0))
		move(g(9) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271025)	move(x(1) x(0))
		move(g(10) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271034)	move(x(1) x(0))
		move(g(11) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271043)	move(x(1) x(0))
		move(g(12) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271052)	move(x(1) x(0))
		move(g(13) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271061)	move(x(1) x(0))
		move(g(14) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271070)	move(x(1) x(0))
		move(g(15) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271079)	move(x(1) x(0))
		move(g(16) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271088)	move(x(1) x(0))
		move(g(17) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271097)	move(x(1) x(0))
		move(g(18) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271106)	move(x(1) x(0))
		move(g(19) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271115)	move(x(1) x(0))
		move(g(20) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271124)	move(x(1) x(0))
		move(g(21) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271133)	move(x(1) x(0))
		move(g(22) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271142)	move(x(1) x(0))
		move(g(23) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271151)	move(x(1) x(0))
		move(g(24) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271160)	move(x(1) x(0))
		move(g(25) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271169)	move(x(1) x(0))
		move(g(26) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271178)	move(x(1) x(0))
		move(g(27) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271187)	move(x(1) x(0))
		move(g(28) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271196)	move(x(1) x(0))
		move(g(29) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271205)	move(x(1) x(0))
		move(g(30) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271214)	move(x(1) x(0))
		move(g(31) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271223)	move(x(1) x(0))
		move(g(32) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271232)	move(x(1) x(0))
		move(g(33) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271241)	move(x(1) x(0))
		move(g(34) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271250)	move(x(1) x(0))
		move(g(35) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271259)	move(x(1) x(0))
		move(g(36) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271268)	move(x(1) x(0))
		move(g(37) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(271277)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genCall(gci(g(38) false '' false 3) 0)
		move(y(4) x(0))
		move(g(39) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(271339)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(42) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1602> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1603> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(271406)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(45) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1602> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1603> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(271473)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(46) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(271502)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'move' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(271560)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(48) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1601> 5)
lbl(271611)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(49) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1600> 5)
lbl(271662)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(50) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1600> 5)
lbl(271713)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(51) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1601> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1601> 5)
lbl(271764)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(271805)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariableMove' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1600> 5)
lbl(271855)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unify' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(271913)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1599> 5)
lbl(271973)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272014)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putConstant' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(272064)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272105)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272146)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(54) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(272169)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(55) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(43) false '' true 2) 0)
lbl(272192)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(56) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(272215)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1599> 5)
lbl(272275)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272316)	allocateL4
		getVarVar(y(0) x(0))
		getVariable(y(1))
		move(g(47) x(2))
		inlineDot(x(2) 'getListValVar' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1600> 5)
lbl(272376)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272417)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(272458)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unifyValVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(272516)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(58) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(41) false '' true 2) 0)
lbl(272539)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(59) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(40) false '' true 2) 0)
lbl(272562)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(60) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(272585)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getLiteral' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(272635)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getNumber' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(272685)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(61) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(272708)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(62) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1605> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272740)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'call' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272790)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailCall' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272840)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(63) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272872)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(64) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272904)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(65) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272936)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(66) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(272968)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'sendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(273037)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'tailSendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(273106)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'applMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1606> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(273156)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailApplMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1606> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(273206)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(68) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1600> 5)
lbl(273229)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(69) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1600> 5)
lbl(273252)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(g(70) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1602> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1600> 5)
lbl(273290)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(71) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(273332)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(73) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(273374)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(74) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273403)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(75) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273432)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(76) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273461)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(77) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273490)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(273531)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'funReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(273572)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(78) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273601)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(79) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1602> 7)
lbl(273630)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testLiteral' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1602> 7)
lbl(273695)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testNumber' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1602> 7)
lbl(273760)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(47) x(3))
		inlineDot(x(3) 'testRecord' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(0) y(5) y(3) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL6
		genFastCall(<Q: 1602> 7)
lbl(273834)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'testList' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1602> 7)
lbl(273889)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testBool' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1602> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1602> 7)
lbl(273957)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'match' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1604> 7)
lbl(274012)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1599> 5)
lbl(274053)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'getVarVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1599> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1599> 5)
lbl(274111)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(80) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(274134)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(81) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(274185)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(82) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(274208)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(83) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(274231)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(84) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1601> 5)
lbl(274254)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(85) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1598> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(86) false '' true 2) 0)
lbl(274286)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(87) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1600> 5)
lbl(274318)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(88) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1600> 5)
lbl(274350)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(89) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1600> 5)
lbl(274392)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(90) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1600> 5)
lbl(274434)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(91) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(274485)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(92) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1600> 5)
lbl(274527)	allocateL5
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(3) x(0))
		move(g(93) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1598> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(86) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genFastCall(<Q: 1602> 7)
lbl(274575)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(94) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1602> 7)
lbl(274632)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(95) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1600> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1602> 7)
lbl(274689)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1180)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270935)
lbl(274704)	move(y(117) x(0))
		inlineDot(x(0) isUniqueName x(7) cache)
		inlineDot(x(0) isCopyableName x(8) cache)
		inlineDot(x(0) isCopyablePredicateRef x(9) cache)
lbl(274725)	definition(x(10) 274820 pid('FindProcSub' 3 pos('./compiler/Assembler.oz' 144 5) nil 7) <Q: 1608> [y(116) y(119)])
		match(x(0) ht(274805 [onScalar(nil 274734) onRecord('|' 2 274758)]))
lbl(274734)	move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(274758)	getVarVar(x(0) x(3))
		move(g(1) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		testBI('==' [x(5) x(1)]#[x(6)] 274799)
		getRecord('#' 3 x(2))
		unifyLiteral('<R: ')
		unifyVariable(x(3))
		unifyLiteral('>')
		move(g(0) x(1))
		inlineDot(x(1) valueToVirtualString x(5) cache)
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(5) 4)
lbl(274799)	move(x(3) x(0))
		genFastCall(<Q: 1608> 7)
lbl(274805)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(153)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(274725)
lbl(274820)	definition(x(10) 274846 pid('FindProc' 2 pos('./compiler/Assembler.oz' 156 5) nil 4) <Q: 1609> [y(119)])
		move(g(0) x(2))
		callBI('Arity' [x(2)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1608> 7)
		endDefinition(274820)
lbl(274846)	definition(x(10) 274916 pid('ListToVirtualString' 4 pos('./compiler/Assembler.oz' 161 2) nil 4) <Q: 1610> nil)
		match(x(0) ht(274901 [onScalar(nil 274855) onRecord('|' 2 274859)]))
lbl(274855)	unify(x(3) x(1))
		return
lbl(274859)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1613> 6)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' ')
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<Q: 1610> 9)
lbl(274901)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(274846)
lbl(274916)	definition(x(10) 274994 pid('TupleSub' 6 pos('./compiler/Assembler.oz' 169 2) nil 8) <Q: 1611> nil)
		testLE(x(0) x(1) x(6) 274988)
		allocateL7
		inlinePlus1(x(0) x(6))
		callBI('.' [x(3) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(0))
		move(y(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1613> 6)
		putRecord('#' 3 x(2))
		setValue(y(1))
		setConstant(' ')
		setValue(y(6))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		move(y(4) x(5))
		deAllocateL7
		genFastCall(<Q: 1611> 13)
lbl(274988)	unify(x(5) x(2))
		return
		endDefinition(274916)
lbl(274994)	definition(x(10) 275069 pid('TupleToVirtualString' 3 pos('./compiler/Assembler.oz' 178 2) nil 6) <Q: 1612> nil)
		allocateL6
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyLiteral(')')
		callBI('Width' [x(0)]#[x(2)])
		callBI('Label' [x(0)]#[x(3)])
		inlineDot(x(0) 1 x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1613> 6)
		putRecord('#' 3 x(2))
		setValue(y(4))
		setConstant('(')
		setValue(y(5))
		moveMoveYXYX(y(3) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(0) x(5))
		putConstant(2 x(0))
		deAllocateL6
		genFastCall(<Q: 1611> 13)
		endDefinition(274994)
lbl(275069)	definition(x(10) 275520 pid('MyValueToVirtualString' 3 pos('./compiler/Assembler.oz' 184 2) nil 5) <Q: 1613> [x(7) y(116) x(8) y(0) g(2) g(3) x(9) g(4) g(1) g(5)])
		testBI('IsName' [x(0)]#[x(3)] 275223)
		match(x(0) ht(275094 [onScalar(true 275082) onScalar(false 275086) onScalar(unit 275090)]))
lbl(275082)	getLiteral('true' x(2))
		return
lbl(275086)	getLiteral('false' x(2))
		return
lbl(275090)	getLiteral('unit' x(2))
		return
lbl(275094)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(2) 275136 275212)
		getRecord('#' 3 y(1))
		unifyLiteral('<U: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(275136)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		testBool(y(2) 275175 275201)
		getRecord('#' 3 y(1))
		unifyLiteral('<M: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(275175)	getRecord('#' 3 y(1))
		unifyLiteral('<N: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(275201)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275212)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275223)	testBI('IsAtom' [x(0)]#[x(3)] 275301)
		move(g(3) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(3)] 275245)
		getRecord('#' 3 x(2))
		unifyLiteral('\'')
		unifyValue(x(0))
		unifyLiteral('\'')
		return
lbl(275245)	match(x(0) ht(275280 [onScalar('lbl' 275248) onScalar('pid' 275252) onScalar('ht' 275256) onScalar('onScalar' 275260) onScalar('onRecord' 275264) onScalar('gci' 275268) onScalar('ami' 275272) onScalar('pos' 275276)]))
lbl(275248)	getLiteral('\'lbl\'' x(2))
		return
lbl(275252)	getLiteral('\'pid\'' x(2))
		return
lbl(275256)	getLiteral('\'ht\'' x(2))
		return
lbl(275260)	getLiteral('\'onScalar\'' x(2))
		return
lbl(275264)	getLiteral('\'onRecord\'' x(2))
		return
lbl(275268)	getLiteral('\'gci\'' x(2))
		return
lbl(275272)	getLiteral('\'ami\'' x(2))
		return
lbl(275276)	getLiteral('\'pos\'' x(2))
		return
lbl(275280)	move(g(1) x(3))
		inlineDot(x(3) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(275301)	testBI('IsProcedure' [x(0)]#[x(3)] 275311)
		move(x(2) x(1))
		genFastCall(<Q: 1609> 5)
lbl(275311)	testBI('IsForeignPointer' [x(0)]#[x(3)] 275408)
		allocateL5
		callBI('ForeignPointer.toInt' [x(0)]#[x(3)])
		getRecord('#' 3 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('>')
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(6) false '' false 2) 0)
		testBool(y(4) 275349 275354)
		getLiteral('<Q: ' y(0))
		branch(275365)
lbl(275349)	getLiteral('<P: ' y(0))
		branch(275365)
lbl(275354)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(222)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275365)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		putConstant(unit x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 275403)
lbl(275380)	putConstant(0 x(2))
		callBI('Dictionary.get' [x(0) x(2)]#[x(3)])
		inlinePlus1(x(3) x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(x(2) y(1))
		deAllocateL5
		return
lbl(275403)	unify(y(1) x(3))
		deAllocateL5
		return
lbl(275408)	match(x(0) ht(275490 [onRecord('|' 2 275411) onRecord('#' 2 275452)]))
lbl(275411)	allocateL4
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(y(1))
		unifyLiteral(']')
		move(x(1) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1613> 6)
		putRecord('#' 2 x(1))
		setConstant('[')
		setValue(y(3))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1610> 9)
lbl(275452)	allocateL3
		getVarVar(x(0) y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getList(x(3))
		unifyNumber(35)
		unifyLiteral(nil)
		move(x(1) y(2))
		genFastCall(<Q: 1613> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1613> 7)
lbl(275490)	testBI('IsTuple' [x(0)]#[x(3)] 275497)
		genFastCall(<Q: 1612> 7)
lbl(275497)	move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(1000 x(1))
		putConstant(1000 x(2))
		tailCall(x(4) 4)
		endDefinition(275069)
lbl(275520)	definition(x(7) 275539 pid('InstrToVirtualString' 3 pos('./compiler/Assembler.oz' 250 2) nil 4) <Q: 1614> nil)
		testBI('IsAtom' [x(0)]#[x(3)] 275534)
		unify(x(2) x(0))
		return
lbl(275534)	genFastCall(<Q: 1612> 7)
		endDefinition(275520)
lbl(275539)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: InstrsHd> <M: InstrsTl> <M: LabelDict> <M: Size>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Profile> debugInfoControl] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(275565)	definition(x(7) 275628 pid('AssemblerClass,init/fast' 2 pos('./compiler/Assembler.oz' 263 2) nil 5) <Q: 1615> [y(94)])
		inlineAt(<M: InstrsTl> x(2) cache)
		putList(x(3))
		setConstant('skip')
		setValue(x(2))
		inlineAssign(<M: InstrsHd> x(3) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: LabelDict> x(2) cache)
		move(g(0) x(2))
		inlineAssign(<M: Size> x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: Profile> x(4) cache)
		unify(x(4) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoControl x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(275565)
lbl(275628)	definition(x(8) 275663 pid('AssemblerClass,init/slow' 1 pos('./compiler/Assembler.oz' 263 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1615> 5)
		endDefinition(275628)
lbl(275663)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(275673)	definition(x(7) 275698 pid('AssemblerClass,newLabel/fast' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) <Q: 1616> [g(5)])
		callBI('NewName' nil#[x(1)])
		unify(x(1) x(0))
		inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(275673)
lbl(275698)	definition(x(8) 275724 pid('AssemblerClass,newLabel/slow' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1616> 3)
		endDefinition(275698)
lbl(275724)	putRecord('#' [1 2 fast] x(10))
		setConstant(newLabel)
		setValue(x(8))
		setValue(x(7))
lbl(275734)	definition(x(7) 275763 pid('AssemblerClass,declareLabel/fast' 1 pos('./compiler/Assembler.oz' 276 2) nil 3) <Q: 1617> [g(6) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 275750)
		return
lbl(275750)	inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(275734)
lbl(275763)	definition(x(8) 275789 pid('AssemblerClass,declareLabel/slow' 1 pos('./compiler/Assembler.oz' 276 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1617> 3)
		endDefinition(275763)
lbl(275789)	putRecord('#' [1 2 fast] x(11))
		setConstant(declareLabel)
		setValue(x(8))
		setValue(x(7))
lbl(275799)	definition(x(7) 275819 pid('AssemblerClass,isLabelUsed/fast' 2 pos('./compiler/Assembler.oz' 281 2) nil 4) <Q: 1618> [g(6)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(275799)
lbl(275819)	definition(x(8) 275854 pid('AssemblerClass,isLabelUsed/slow' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1618> 5)
		endDefinition(275819)
lbl(275854)	putRecord('#' [1 2 fast] x(12))
		setConstant(isLabelUsed)
		setValue(x(8))
		setValue(x(7))
lbl(275864)	definition(x(7) 275912 pid('AssemblerClass,setLabel/fast' 1 pos('./compiler/Assembler.oz' 284 2) nil 3) <Q: 1619> [g(6) g(1) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 275896)
		inlineAt(<M: LabelDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(2))
		return
lbl(275896)	inlineAt(<M: LabelDict> x(1) cache)
		inlineAt(<M: Size> x(2) cache)
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(275864)
lbl(275912)	definition(x(8) 275938 pid('AssemblerClass,setLabel/slow' 1 pos('./compiler/Assembler.oz' 284 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1619> 3)
		endDefinition(275912)
lbl(275938)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLabel)
		setValue(x(8))
		setValue(x(7))
lbl(275948)	definition(x(7) 276018 pid('AssemblerClass,checkLabels/fast' 0 pos('./compiler/Assembler.oz' 291 2) nil 3) <Q: 1620> [g(7) g(8)])
		inlineAt(<M: LabelDict> x(0) cache)
		callBI('Dictionary.entries' [x(0)]#[x(2)])
lbl(275962)	definition(x(1) 276010 pid('' 1 pos('./compiler/Assembler.oz' 293 6) nil 3) unit [g(1)])
		shallowGuard(275997)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(275978)	shallowThen
		testBI('IsFree' [x(2)]#[x(0)] 275996)
		putRecord(compiler 3 x(0))
		setConstant(assembler)
		setConstant(undeclaredLabel)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275996)	return
lbl(275997)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(293)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(275962)
lbl(276010)	move(x(2) x(0))
		genFastCall(<P: 34> 5)
		endDefinition(275948)
lbl(276018)	definition(x(8) 276032 pid('AssemblerClass,checkLabels/slow' 1 pos('./compiler/Assembler.oz' 291 2) nil 1) unit nil)
		getLiteral(checkLabels x(0))
		genFastCall(<Q: 1620> 1)
		endDefinition(276018)
lbl(276032)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkLabels)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(276044)	definition(x(7) 276449 pid('AssemblerClass,append/fast' 1 pos('./compiler/Assembler.oz' 299 2) nil 5) <Q: 1621> [y(1) y(0)])
		allocateL2
		move(x(0) y(0))
		match(y(0) ht(276333 [onRecord('definition' 5 276057) onRecord('definitionCopy' 5 276069) onRecord('endDefinition' 1 276081) onRecord('branch' 1 276091) onRecord('thread' 1 276101) onRecord('exHandler' 1 276111) onRecord('createCond' 1 276121) onRecord('nextClause' 1 276131) onRecord('shallowGuard' 1 276141) onRecord('testBI' 3 276151) onRecord('testLT' 4 276163) onRecord('testLE' 4 276175) onRecord('testLiteral' 3 276187) onRecord('testNumber' 3 276199) onRecord('testBool' 3 276211) onRecord('testRecord' 4 276230) onRecord('testList' 2 276242) onRecord('match' 2 276254) onRecord('lockThread' 2 276325)]))
lbl(276057)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276069)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276081)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276091)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276101)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276111)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276121)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276131)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276141)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276151)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276163)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276175)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276187)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276199)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276211)	getVoid(1)
		getVarVar(x(1) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276230)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276242)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(276333)
lbl(276254)	getVoid(1)
		getVariable(x(1))
		getRecord('ht' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		getSelf(x(2))
lbl(276274)	definition(x(1) 276317 pid('' 1 pos('./compiler/Assembler.oz' 329 2) nil 3) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(276302 [onRecord('onScalar' 2 276288) onRecord('onRecord' 3 276295)]))
lbl(276288)	getVoid(1)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(276295)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(276302)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(276274)
lbl(276317)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(276333)
lbl(276325)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
lbl(276333)	putList(x(0))
		setValue(y(0))
		setVariable(x(1))
		inlineAt(<M: InstrsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: InstrsTl> x(1) cache)
		inlineAt(<M: Size> x(0) cache)
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		inlinePlus(x(0) x(4) x(2))
		inlineAssign(<M: Size> x(2) cache)
		match(y(0) ht(276445 [onRecord('definition' 5 276381) onRecord('definitionCopy' 5 276413)]))
lbl(276381)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 276400 276402)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(276400)	deAllocateL2
		return
lbl(276402)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(276413)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 276432 276434)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(276432)	deAllocateL2
		return
lbl(276434)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(346)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(276445)	deAllocateL2
		return
		endDefinition(276044)
lbl(276449)	definition(x(8) 276475 pid('AssemblerClass,append/slow' 1 pos('./compiler/Assembler.oz' 299 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1621> 3)
		endDefinition(276449)
lbl(276475)	putRecord('#' [1 2 fast] x(15))
		setConstant(append)
		setValue(x(8))
		setValue(x(7))
lbl(276485)	definition(x(7) 276615 pid('AssemblerClass,output/fast' 1 pos('./compiler/Assembler.oz' 352 2) nil 6) <Q: 1622> [y(1) g(5) g(7)])
		allocateL3
		move(x(0) y(0))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		putConstant(0 x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(1) x(2) x(3)]#nil)
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.entries' [x(2)]#[x(3)])
lbl(276521)	definition(x(2) 276562 pid('' 1 pos('./compiler/Assembler.oz' 358 6) nil 3) unit [g(1) x(0)])
		shallowGuard(276549)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(276537)	shallowThen
		testBI('IsDet' [x(2)]#[x(0)] 276548)
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
lbl(276548)	return
lbl(276549)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(276521)
lbl(276562)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
		getRecord('#' 4 y(0))
		unifyLiteral('%% Code Size:\n')
		unifyVariable(x(5))
		unifyLiteral(' % words\n')
		unifyVariable(x(4))
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: InstrsHd> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		putConstant(0 x(3))
		deAllocateL3
		genCall(gci(g(0) true <M: OutputSub> true 5) 0)
		endDefinition(276485)
lbl(276615)	definition(x(8) 276641 pid('AssemblerClass,output/slow' 1 pos('./compiler/Assembler.oz' 352 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1622> 3)
		endDefinition(276615)
lbl(276641)	putRecord('#' [1 2 fast] x(16))
		setConstant(output)
		setValue(x(8))
		setValue(x(7))
lbl(276651)	definition(x(7) 276798 pid('AssemblerClass,OutputSub/fast' 5 pos('./compiler/Assembler.oz' 366 2) nil 9) <Q: 1623> [g(6) y(1) y(0)])
		match(x(0) ht(276783 [onScalar(nil 276660) onRecord('|' 2 276664)]))
lbl(276660)	getLiteral(nil x(4))
		return
lbl(276664)	allocateL8
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(0) y(4) x(5) y(5))
		createVariable(y(6))
		testBI('Dictionary.member' [x(1) x(3)]#[x(6)] 276719)
		getRecord('#' 4 y(6))
		unifyLiteral('lbl(')
		unifyValue(y(2))
		unifyLiteral(')')
		unifyVariable(x(6))
		putConstant(100 x(7))
		testLT(x(3) x(7) x(8) 276714)
		getLiteral('\t\t' x(6))
		branch(276722)
lbl(276714)	getLiteral('\t' x(6))
		branch(276722)
lbl(276719)	getLiteral('\t\t' y(6))
lbl(276722)	move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(1) true <M: TranslateInstrLabels> false 2) 0)
		getRecord('#' 4 y(3))
		unifyValVar(y(6) x(2))
		unifyLiteral('\n')
		unifyVariable(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		genFastCall(<Q: 1614> 6)
		move(y(4) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(2) x(0))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(1))
		inlinePlus(x(1) x(2) x(3))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL8
		genCall(gci(g(1) true <M: OutputSub> true 5) 0)
lbl(276783)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(276651)
lbl(276798)	definition(x(8) 276851 pid('AssemblerClass,OutputSub/slow' 1 pos('./compiler/Assembler.oz' 366 2) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1623> 11)
		endDefinition(276798)
lbl(276851)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputSub>)
		setValue(x(8))
		setValue(x(7))
lbl(276861)	definition(x(7) 276935 pid('AssemblerClass,load/fast' 2 pos('./compiler/Assembler.oz' 384 2) nil 3) <Q: 1624> [y(1) y(122) y(123)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		inlineAt(<M: Size> x(0) cache)
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		inlineAt(<M: InstrsHd> x(0) cache)
		getSelf(x(2))
lbl(276894)	definition(x(1) 276918 pid('' 1 pos('./compiler/Assembler.oz' 388 6) nil 3) unit [x(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: LabelDict> x(2) cache)
		move(g(1) x(1))
		genFastCall(<Q: 1607> 7)
		endDefinition(276894)
lbl(276918)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(2) false '' true 3) 0)
		endDefinition(276861)
lbl(276935)	definition(x(8) 276970 pid('AssemblerClass,load/slow' 1 pos('./compiler/Assembler.oz' 384 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1624> 5)
		endDefinition(276935)
lbl(276970)	putRecord('#' [1 2 fast] x(18))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(276980)	definition(x(7) 277000 pid('AssemblerClass,MarkEnd/fast' 0 pos('./compiler/Assembler.oz' 392 2) nil 2) <Q: 1625> nil)
		putConstant(nil x(0))
		inlineAt(<M: InstrsTl> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(276980)
lbl(277000)	definition(x(8) 277014 pid('AssemblerClass,MarkEnd/slow' 1 pos('./compiler/Assembler.oz' 392 2) nil 1) unit nil)
		getLiteral(<M: MarkEnd> x(0))
		genFastCall(<Q: 1625> 1)
		endDefinition(277000)
lbl(277014)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: MarkEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(277024)	definition(x(7) 277574 pid('AssemblerClass,TranslateInstrLabels/fast' 2 pos('./compiler/Assembler.oz' 396 2) nil 8) <Q: 1626> [g(1)])
		match(x(0) ht(277568 [onRecord('definition' 5 277033) onRecord('definitionCopy' 5 277064) onRecord('endDefinition' 1 277095) onRecord('branch' 1 277112) onRecord('thread' 1 277129) onRecord('exHandler' 1 277146) onRecord('createCond' 1 277163) onRecord('nextClause' 1 277180) onRecord('shallowGuard' 1 277197) onRecord('testBI' 3 277214) onRecord('testLT' 4 277238) onRecord('testLE' 4 277265) onRecord('testLiteral' 3 277292) onRecord('testNumber' 3 277316) onRecord('testRecord' 4 277340) onRecord('testList' 2 277367) onRecord('testBool' 3 277387) onRecord('match' 2 277419) onRecord('lockThread' 2 277548)]))
lbl(277033)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definition' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(277064)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definitionCopy' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(277095)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('endDefinition' 1 x(1))
		unifyValue(x(3))
		return
lbl(277112)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('branch' 1 x(1))
		unifyValue(x(3))
		return
lbl(277129)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('thread' 1 x(1))
		unifyValue(x(3))
		return
lbl(277146)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('exHandler' 1 x(1))
		unifyValue(x(3))
		return
lbl(277163)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('createCond' 1 x(1))
		unifyValue(x(3))
		return
lbl(277180)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('nextClause' 1 x(1))
		unifyValue(x(3))
		return
lbl(277197)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('shallowGuard' 1 x(1))
		unifyValue(x(3))
		return
lbl(277214)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testBI' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(277238)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLT' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(277265)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLE' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(277292)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testLiteral' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(277316)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testNumber' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(277340)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testRecord' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(277367)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(2)]#[x(4)])
		getRecord('testList' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(277387)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(3)]#[x(4)])
		getRecord('testBool' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		unifyValue(x(4))
		return
lbl(277419)	allocateL4
		getVarVar(y(0) x(3))
		getRecord('ht' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(4)])
		getSelf(x(5))
lbl(277441)	definition(x(6) 277514 pid('' 2 pos('./compiler/Assembler.oz' 452 6) nil 7) unit [x(5) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		match(x(0) ht(277499 [onRecord('onScalar' 2 277455) onRecord('onRecord' 3 277475)]))
lbl(277455)	getVarVar(x(0) x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(277475)	getVarVar(x(0) x(3))
		getVariable(x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(277499)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(459)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(277441)
lbl(277514)	moveMoveXYXY(x(1) y(1) x(4) y(2))
		move(x(3) x(0))
		move(x(6) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		getRecord('match' 2 y(1))
		unifyValVar(y(0) x(0))
		getRecord('ht' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(277548)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getRecord('lockThread' 2 x(1))
		unifyValue(x(4))
		unifyValue(x(2))
		return
lbl(277568)	unify(x(1) x(0))
		return
		endDefinition(277024)
lbl(277574)	definition(x(8) 277609 pid('AssemblerClass,TranslateInstrLabels/slow' 1 pos('./compiler/Assembler.oz' 396 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1626> 5)
		endDefinition(277574)
lbl(277609)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('AssemblerClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(277659)	definition(x(0) 277678 pid('RecordArityWidth' 2 pos('./compiler/Assembler.oz' 472 3) nil 3) <Q: 1627> nil)
		testBI('IsInt' [x(0)]#[x(2)] 277673)
		unify(x(1) x(0))
		return
lbl(277673)	genFastCall(<P: 24> 5)
		endDefinition(277659)
lbl(277678)	definition(x(0) 277734 pid('GetClears' 3 pos('./compiler/Assembler.oz' 478 3) nil 5) <Q: 1628> nil)
		match(x(0) ht(277719 [onScalar(nil 277687) onRecord('|' 2 277694)]))
lbl(277687)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(277694)	getVarVar(x(3) x(4))
		testRecord(x(3) clear 1 277712)
lbl(277702)	getListValVar(x(1) x(3) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1628> 7)
lbl(277712)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(277719)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(490)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(277678)
lbl(277734)	definition(x(0) 277795 pid('SetVoids' 4 pos('./compiler/Assembler.oz' 493 3) nil 6) <Q: 1629> nil)
		match(x(0) ht(277780 [onScalar(nil 277743) onRecord('|' 2 277750)]))
lbl(277743)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(277750)	getVarVar(x(4) x(5))
		testRecord(x(4) 'setVoid' 1 277773)
lbl(277758)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1629> 9)
lbl(277773)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(277780)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(504)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(277734)
lbl(277795)	definition(x(0) 277856 pid('UnifyVoids' 4 pos('./compiler/Assembler.oz' 507 3) nil 6) <Q: 1630> nil)
		match(x(0) ht(277841 [onScalar(nil 277804) onRecord('|' 2 277811)]))
lbl(277804)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(277811)	getVarVar(x(4) x(5))
		testRecord(x(4) 'unifyVoid' 1 277834)
lbl(277819)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1630> 9)
lbl(277834)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(277841)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(277795)
lbl(277856)	definition(x(0) 277917 pid('GetVoids' 4 pos('./compiler/Assembler.oz' 521 3) nil 6) <Q: 1631> nil)
		match(x(0) ht(277902 [onScalar(nil 277865) onRecord('|' 2 277872)]))
lbl(277865)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(277872)	getVarVar(x(4) x(5))
		testRecord(x(4) 'getVoid' 1 277895)
lbl(277880)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1631> 9)
lbl(277895)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(277902)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(532)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(277856)
lbl(277917)	definition(x(0) 278028 pid('MakeDeAllocate' 2 pos('./compiler/Assembler.oz' 535 3) nil 2) <Q: 1632> nil)
		match(x(0) ht(278017 [onScalar(0 277926) onScalar(1 277927) onScalar(2 277936) onScalar(3 277945) onScalar(4 277954) onScalar(5 277963) onScalar(6 277972) onScalar(7 277981) onScalar(8 277990) onScalar(9 277999) onScalar(10 278008)]))
lbl(277926)	return
lbl(277927)	putConstant('deAllocateL1' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277936)	putConstant('deAllocateL2' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277945)	putConstant('deAllocateL3' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277954)	putConstant('deAllocateL4' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277963)	putConstant('deAllocateL5' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277972)	putConstant('deAllocateL6' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277981)	putConstant('deAllocateL7' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277990)	putConstant('deAllocateL8' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(277999)	putConstant('deAllocateL9' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(278008)	putConstant('deAllocateL10' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(278017)	putConstant('deAllocateL' x(0))
		tailSendMsg(append x(1) 1 cache)
		endDefinition(277917)
lbl(278028)	definition(x(0) 278188 pid('SkipDeadCode' 3 pos('./compiler/Assembler.oz' 551 3) nil 4) <Q: 1633> nil)
		match(x(0) ht(278173 [onScalar(nil 278037) onRecord('|' 2 278041)]))
lbl(278037)	getLiteral(nil x(2))
		return
lbl(278041)	allocateL5
		getVarVar(x(3) y(0))
		match(x(3) ht(278166 [onRecord('lbl' 1 278048) onRecord('endDefinition' 1 278102) onRecord('globalVarname' 1 278156) onRecord('localVarname' 1 278161)]))
lbl(278048)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 278079 278091)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(278079)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1633> 7)
lbl(278091)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(554)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(278102)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 278133 278145)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(278133)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1633> 7)
lbl(278145)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(558)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(278156)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(278161)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(278166)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<Q: 1633> 7)
lbl(278173)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(566)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(278028)
lbl(278188)	definition(x(0) 278215 pid('EliminateDeadCode' 2 pos('./compiler/Assembler.oz' 569 3) nil 3) <Q: 1634> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1633> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
		endDefinition(278188)
lbl(278215)	definition(x(0) 282723 pid('Peephole' 2 pos('./compiler/Assembler.oz' 573 3) nil 10) <Q: 1635> [y(118)])
		match(x(0) ht(282708 [onScalar(nil 278224) onRecord('|' 2 278225)]))
lbl(278224)	return
lbl(278225)	getVarVar(x(2) x(3))
		match(x(2) ht(282684 [onScalar('skip' 278231) onScalar('failure' 278237) onScalar('return' 278303) onScalar('clause' 278327) onRecord('lbl' 1 278382) onRecord('definition' 6 278405) onRecord('definitionCopy' 6 278457) onRecord(clear 1 278509) onRecord('move' 2 278593) onRecord('createVariable' 1 279045) onRecord('putRecord' 3 279186) onRecord('setVoid' 1 279240) onRecord('getRecord' 3 279282) onRecord('unifyValue' 1 279436) onRecord('unifyVoid' 1 279509) onRecord('allocateL' 1 279551) onRecord('deAllocateL' 1 279696) onRecord('branch' 1 279773) onRecord('funReturn' 1 279838) onRecord('callBI' 2 279862) onRecord('genCall' 2 280429) onRecord('call' 2 280600) onRecord('genFastCall' 2 280822) onRecord('marshalledFastCall' 2 281015) onRecord('sendMsg' 4 281210) onRecord('applMeth' 2 281451) onRecord('shallowGuard' 1 281701) onRecord('testBI' 3 281905) onRecord('testRecord' 4 282227) onRecord('match' 2 282287) onRecord('getVariable' 1 282551) onRecord('getVoid' 1 282624)]))
lbl(278231)	move(x(3) x(0))
		genFastCall(<Q: 1635> 5)
lbl(278237)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 278285)
lbl(278246)	getVarVar(x(0) x(2))
		shallowGuard(278285)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(4))
lbl(278257)	shallowThen
		move(x(2) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1632> 4)
		putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1634> 5)
lbl(278285)	putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1634> 5)
lbl(278303)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		putConstant('return' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1634> 5)
lbl(278327)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 278364)
lbl(278336)	getVarVar(x(0) x(2))
		testLiteral(x(0) 'wait' 278364)
		move(x(2) y(1))
		putConstant('emptyClause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(278364)	putConstant('clause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(278382)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		sendMsg(setLabel y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(278405)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definition' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1635> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(278457)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definitionCopy' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1635> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(278509)	allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1628> 6)
		testList(y(2) 278538)
lbl(278525)	getVariable(x(0))
		shallowGuard(278538)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(278535)	shallowThen
		branch(278584)
lbl(278538)	definition(x(1) 278578 pid('' 1 pos('./compiler/Assembler.oz' 595 2) nil 2) unit [y(0)])
		shallowGuard(278565)
		getRecord(clear 1 x(0))
		unifyVariable(x(1))
lbl(278552)	shallowThen
		putRecord('clearY' 1 x(0))
		setValue(x(1))
		tailSendMsg(append g(0) 1 cache)
lbl(278565)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(595)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(278538)
lbl(278578)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(278584)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(278593)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 278689)
lbl(278607)	getVarVar(x(4) x(5))
		shallowGuard(278689)
		getRecord('move' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		getRecord(x 1 x(4))
		unifyVoid(1)
		getRecord(y 1 x(6))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord('move' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(8))
		getRecord(x 1 x(5))
		unifyVoid(1)
		getRecord(y 1 x(8))
		unifyVariable(x(9))
lbl(278658)	shallowThen
		putRecord('moveMoveXYXY' 4 x(0))
		setValue(x(4))
		setValue(x(6))
		setValue(x(5))
		setValue(x(8))
		move(x(7) y(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(278689)	testList(y(0) 278777)
lbl(278692)	getVarVar(x(0) x(1))
		shallowGuard(278777)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(278743)	shallowThen
		putRecord('moveMoveYXYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(278777)	testList(y(0) 278865)
lbl(278780)	getVarVar(x(0) x(1))
		shallowGuard(278865)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getRecord(y 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(278831)	shallowThen
		putRecord('moveMoveXYYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(278865)	testList(y(0) 278953)
lbl(278868)	getVarVar(x(0) x(1))
		shallowGuard(278953)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(x 1 x(1))
		unifyVoid(1)
		getRecord(y 1 x(4))
		unifyVariable(x(5))
lbl(278919)	shallowThen
		putRecord('moveMoveYXXY' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(278953)	testList(y(0) 279027)
lbl(278956)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(279027)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('callBI' 2 x(1))
		unifyLiteral('funReturn')
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getList(x(1))
		unifyValue(x(2))
		unifyLiteral(nil)
lbl(278999)	shallowThen
		putRecord('funReturn' 1 x(2))
		setValue(x(0))
		move(x(3) y(2))
		move(x(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1634> 5)
lbl(279027)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(279045)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 279108)
lbl(279059)	getVarVar(x(4) x(5))
		shallowGuard(279108)
		getRecord('createVariable' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord('move' 2 x(5))
		unifyValVar(x(4) x(5))
		getRecord(x 1 x(5))
		unifyVariable(x(7))
lbl(279089)	shallowThen
		putRecord('createVariableMove' 2 x(2))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(6))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(279108)	testList(y(0) 279168)
lbl(279111)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(279168)
		getRecord('createVariable' 1 x(0))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('move' 2 x(1))
		unifyValVar(x(0) x(3))
lbl(279143)	shallowThen
		putRecord('createVariableMove' 2 x(1))
		setValue(x(3))
		setValue(x(0))
		putList(x(4))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(279168)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(279186)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testLiteral(x(0) '|' 279222)
lbl(279204)	testNumber(x(4) 2 279222)
lbl(279208)	putRecord('putList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(279231)
lbl(279222)	move(y(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(279231)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279240)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1629> 8)
		putRecord('setVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279282)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) '|' 279418)
lbl(279300)	testNumber(x(4) 2 279418)
lbl(279304)	testRecord(x(5) x 1 279397)
lbl(279309)	move(x(5) y(1))
		testList(y(2) 279376)
lbl(279315)	getVarVar(x(0) x(2))
		shallowGuard(279376)
		getRecord('unifyValue' 1 x(0))
		unifyVariable(x(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('unifyVariable' 1 x(2))
		unifyVariable(x(2))
		getRecord(x 1 x(2))
		unifyVariable(x(6))
lbl(279344)	shallowThen
		putRecord('getListValVar' 3 x(3))
		setValue(y(1))
		setValue(x(0))
		setValue(x(2))
		move(x(4) y(2))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279376)	putRecord('getList' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279397)	putRecord('getList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279418)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279436)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 279491)
lbl(279450)	getVarVar(x(4) x(5))
		shallowGuard(279491)
		getRecord('unifyVariable' 1 x(4))
		unifyVariable(x(6))
lbl(279461)	shallowThen
		putRecord('unifyValVar' 2 x(2))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279491)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279509)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1630> 8)
		putRecord('unifyVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279551)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(279672 [onScalar(0 279687) onScalar(1 279562) onScalar(2 279573) onScalar(3 279584) onScalar(4 279595) onScalar(5 279606) onScalar(6 279617) onScalar(7 279628) onScalar(8 279639) onScalar(9 279650) onScalar(10 279661)]))
lbl(279562)	putConstant('allocateL1' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279573)	putConstant('allocateL2' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279584)	putConstant('allocateL3' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279595)	putConstant('allocateL4' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279606)	putConstant('allocateL5' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279617)	putConstant('allocateL6' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279628)	putConstant('allocateL7' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279639)	putConstant('allocateL8' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279650)	putConstant('allocateL9' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279661)	putConstant('allocateL10' x(0))
		sendMsg(append y(0) 1 cache)
		branch(279687)
lbl(279672)	putRecord('allocateL' 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(279687)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(279696)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) y(2))
		testList(y(1) 279756)
lbl(279710)	getVarVar(x(2) x(4))
		shallowGuard(279756)
		getLiteral('return' x(2))
		getList(x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('lbl' 1 x(2))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('deAllocateL' 1 x(2))
		unifyValue(y(2))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(279748)	shallowThen
		move(x(4) x(0))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279756)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1632> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279773)	allocateL4
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(0) x(0))
		sendMsg(declareLabel y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1633> 6)
		testList(y(3) 279817)
lbl(279804)	getVariable(x(0))
		shallowGuard(279817)
		getRecord('lbl' 1 x(0))
		unifyValue(y(0))
lbl(279814)	shallowThen
		branch(279829)
lbl(279817)	putRecord('branch' 1 x(0))
		setValue(y(0))
		sendMsg(append y(1) 1 cache)
lbl(279829)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(279838)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1634> 5)
lbl(279862)	getVarVar(x(0) x(4))
		inlineDot(x(1) debugInfoControl x(5) cache)
		testBool(x(5) 279899 280418)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(279899)	testLiteral(x(0) 'funReturn' 279988)
lbl(279903)	allocateL3
		getRecord('#' 2 x(4))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testList(y(1) 279969)
lbl(279929)	getVarVar(x(0) x(4))
		shallowGuard(279969)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(5))
lbl(279940)	shallowThen
		putRecord('deAllocateL' 1 x(3))
		setValue(x(5))
		putRecord('funReturn' 1 x(7))
		setValue(y(2))
		putList(x(6))
		setValue(x(7))
		setValue(x(4))
		putList(x(0))
		setValue(x(3))
		setValue(x(6))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279969)	putRecord('funReturn' 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(279988)	allocateL6
		move(g(0) x(5))
		inlineDot(x(5) getInfo x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(3) ht(280364 [onScalar('+1' 280020) onScalar('-1' 280056) onScalar('+' 280092) onScalar('-' 280136) onScalar('>' 280180) onScalar('>=' 280236) onScalar('^' 280292) onScalar('getReturn' 280336)]))
lbl(280020)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlinePlus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280056)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlineMinus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280092)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlinePlus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280136)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineMinus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280180)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280236)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('=<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280292)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineUparrow' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280336)	getRecord('#' 2 y(4))
		unifyLiteral(nil)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		putRecord('getReturn' 1 x(0))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		branch(280373)
lbl(280364)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(280373)	move(y(5) x(0))
		putConstant(doesNotReturn x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		testBool(x(3) 280398 280407)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1634> 5)
lbl(280398)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1635> 5)
lbl(280407)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(750)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280418)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(719)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280429)	allocateL4
		getVarVar(x(0) x(4))
		getNumber(0 x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 280511)
lbl(280449)	getVarVar(x(4) x(5))
		shallowGuard(280511)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(280466)	shallowThen
		move(x(6) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1632> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1634> 5)
lbl(280511)	testList(y(2) 280582)
lbl(280514)	getVarVar(x(0) x(1))
		shallowGuard(280582)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(280537)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1632> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(280582)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(280600)	allocateL6
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		testList(y(1) 280706)
lbl(280617)	getVarVar(x(4) x(5))
		shallowGuard(280706)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(280634)	shallowThen
		moveMoveXYXY(x(4) y(1) x(6) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 280672)
lbl(280647)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(3))
		setValue(y(2))
		setValue(y(5))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		branch(280675)
lbl(280672)	unify(y(5) y(2))
lbl(280675)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1634> 5)
lbl(280706)	testList(y(1) 280799)
lbl(280709)	getVarVar(x(0) x(1))
		shallowGuard(280799)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(280732)	shallowThen
		move(x(1) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 280765)
lbl(280743)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(280768)
lbl(280765)	unify(y(5) y(2))
lbl(280768)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1635> 5)
lbl(280799)	putRecord('call' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1635> 5)
lbl(280822)	getVarVar(x(0) x(4))
		putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 1 280859)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(280859)	allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 280932)
lbl(280876)	getVarVar(x(5) x(6))
		shallowGuard(280932)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(280893)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1632> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1634> 5)
lbl(280932)	testList(y(2) 280997)
lbl(280935)	getVarVar(x(0) x(1))
		shallowGuard(280997)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(280958)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1632> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(280997)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(281015)	allocateL5
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(0)]#[x(5)] 281192)
lbl(281031)	testBI('IsProcedure' [x(0)]#[x(5)] 281192)
lbl(281035)	putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 0 281192)
lbl(281045)	moveMoveXYXY(x(0) y(3) x(4) y(4))
		testList(y(2) 281109)
lbl(281053)	getVarVar(x(5) x(6))
		shallowGuard(281109)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(281070)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1632> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1634> 5)
lbl(281109)	testList(y(2) 281174)
lbl(281112)	getVarVar(x(0) x(1))
		shallowGuard(281174)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(281135)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1632> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(281174)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(281192)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(281210)	allocateL9
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1627> 4)
		testList(y(5) 281327)
lbl(281234)	getVarVar(x(0) x(1))
		shallowGuard(281327)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(0))
		getList(x(1))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(281251)	shallowThen
		moveMoveXYXY(x(0) y(5) x(2) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 281289)
lbl(281264)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(3))
		setValue(y(1))
		setValue(y(8))
		move(x(3) x(0))
		sendMsg(append y(4) 1 cache)
		branch(281292)
lbl(281289)	unify(y(8) y(1))
lbl(281292)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1634> 5)
lbl(281327)	testList(y(5) 281424)
lbl(281330)	getVarVar(x(0) x(1))
		shallowGuard(281424)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(281353)	shallowThen
		move(x(1) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 281386)
lbl(281364)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(8))
		sendMsg(append y(4) 1 cache)
		branch(281389)
lbl(281386)	unify(y(8) y(1))
lbl(281389)	moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1635> 5)
lbl(281424)	putRecord('sendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1635> 5)
lbl(281451)	allocateL6
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 281572)
lbl(281471)	getVarVar(x(5) x(6))
		shallowGuard(281572)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(281488)	shallowThen
		moveMoveXYXY(x(5) y(1) x(7) y(2))
		createVariable(y(5))
		testRecord(y(4) y 1 281538)
lbl(281501)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1627> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(281541)
lbl(281538)	unify(y(5) y(4))
lbl(281541)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1634> 5)
lbl(281572)	testList(y(2) 281683)
lbl(281575)	getVarVar(x(0) x(1))
		shallowGuard(281683)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(281598)	shallowThen
		move(x(1) y(1))
		createVariable(y(5))
		testRecord(y(4) y 1 281649)
lbl(281609)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1627> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(281652)
lbl(281649)	unify(y(5) y(4))
lbl(281652)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1632> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1635> 5)
lbl(281683)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1635> 5)
lbl(281701)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 281731)
lbl(281717)	getVarVar(x(4) x(5))
		testLiteral(x(4) 'shallowThen' 281731)
		move(x(5) x(0))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(281731)	testList(y(2) 281809)
lbl(281734)	getVarVar(x(0) x(1))
		shallowGuard(281809)
		getRecord('getNumber' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(281777)	shallowThen
		putRecord('testNumber' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(281809)	testList(y(2) 281887)
lbl(281812)	getVarVar(x(0) x(1))
		shallowGuard(281887)
		getRecord('getLiteral' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(281855)	shallowThen
		putRecord('testLiteral' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(281887)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(281905)	allocateL10
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		testList(y(5) 282008)
lbl(281924)	getVarVar(x(0) x(4))
		shallowGuard(282008)
		getRecord('branch' 1 x(0))
		unifyVariable(x(5))
lbl(281935)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) getInfo x(6) cache)
		moveMoveXYXY(x(5) y(7) x(4) y(8))
		move(y(0) x(0))
		createVariableMove(y(9) x(1))
		call(x(6) 2)
		move(y(9) x(0))
		putConstant(negated x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		match(x(3) ht(281974 [onScalar(unit 282008)]))
lbl(281974)	getList(y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('testBI' 3 x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		unifyValue(y(7))
		getList(x(1))
		unifyLiteral('skip')
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyValue(y(8))
		getRecord('branch' 1 x(4))
		unifyValue(y(2))
lbl(282008)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 282022)
		move(y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1635> 5)
lbl(282022)	match(y(0) ht(282209 [onScalar('<' 282025) onScalar('=<' 282071) onScalar('>=' 282117) onScalar('>' 282163)]))
lbl(282025)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(282218)
lbl(282071)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(282218)
lbl(282117)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(282218)
lbl(282163)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(282218)
lbl(282209)	move(y(4) x(0))
		sendMsg(append y(3) 1 cache)
lbl(282218)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1635> 5)
lbl(282227)	allocateL3
		getVarVar(x(0) x(4))
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(4) '|' 282269)
lbl(282246)	testNumber(x(5) 2 282269)
lbl(282250)	putRecord('testList' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		branch(282278)
lbl(282269)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(282278)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1635> 5)
lbl(282287)	allocateL8
		getVarVar(x(0) x(4))
		getRecord('ht' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		move(x(4) y(5))
		testList(y(0) 282421)
lbl(282315)	getVarVar(x(5) x(6))
		shallowGuard(282421)
		getRecord('onScalar' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getLiteral(nil x(6))
lbl(282331)	shallowThen
		testList(y(3) 282403)
lbl(282335)	getVariable(x(6))
		shallowGuard(282403)
		getRecord('lbl' 1 x(6))
		unifyValue(x(7))
lbl(282345)	shallowThen
		testBI('IsNumber' [x(5)]#[x(6)] 282371)
		putRecord('testNumber' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
		branch(282394)
lbl(282371)	testBI('IsLiteral' [x(5)]#[x(6)] 282394)
		putRecord('testLiteral' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
lbl(282394)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1635> 5)
lbl(282403)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1634> 5)
lbl(282421)	testList(y(0) 282533)
lbl(282424)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(282533)
		getRecord('onRecord' 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(282444)	shallowThen
		testList(y(3) 282515)
lbl(282448)	getVariable(x(1))
		shallowGuard(282515)
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
lbl(282458)	shallowThen
		moveMoveXYXY(x(0) y(6) x(2) y(7))
		testLiteral(y(6) '|' 282488)
lbl(282468)	testNumber(y(7) 2 282488)
lbl(282472)	putRecord('testList' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
		branch(282506)
lbl(282488)	putRecord('testRecord' 4 x(0))
		setValue(y(4))
		setValue(y(6))
		setValue(y(7))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
lbl(282506)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1635> 5)
lbl(282515)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1634> 5)
lbl(282533)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1634> 5)
lbl(282551)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 282606)
lbl(282565)	getVarVar(x(4) x(5))
		shallowGuard(282606)
		getRecord('getVariable' 1 x(4))
		unifyVariable(x(6))
lbl(282576)	shallowThen
		putRecord('getVarVar' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(3))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(282606)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1635> 5)
lbl(282624)	allocateL5
		getVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1631> 8)
		testList(y(4) 282675)
lbl(282652)	getVariable(x(0))
		shallowGuard(282675)
		getRecord('getVariable' 1 x(0))
		unifyVariable(x(1))
lbl(282662)	shallowThen
		putRecord('getVoid' 1 x(0))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
lbl(282675)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1635> 5)
lbl(282684)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1635> 5)
lbl(282708)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(990)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(278215)
lbl(282723)	definition(x(0) 282889 pid('Assemble' 3 pos('./compiler/Assembler.oz' 993 3) nil 9) <Q: 1636> [y(1)])
		allocateL5
		putConstant(profile x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(5)])
		putConstant(debuginfocontrol x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(6)])
		putConstant(verify x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(7)])
		putConstant(peephole x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(8)])
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(3) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(1))
		testBool(y(3) 282814 282849)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1635> 4)
		branch(282860)
lbl(282814)	definition(x(1) 282841 pid('' 1 pos('./compiler/Assembler.oz' 1005 3) nil 2) unit [y(1)])
		testRecord(x(0) 'lbl' 1 282833)
lbl(282825)	getVariable(x(0))
		tailSendMsg(setLabel g(0) 1 cache)
lbl(282833)	tailSendMsg(append g(0) 1 cache)
		endDefinition(282814)
lbl(282841)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		branch(282860)
lbl(282849)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1001)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(282860)	testBool(y(2) 282874 282876)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(checkLabels x(0) 0 cache)
lbl(282874)	deAllocateL5
		return
lbl(282876)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1013)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(282723)
lbl(282889)	definition(x(1) 282927 pid('DoAssemble' 4 pos('./compiler/Assembler.oz' 1018 3) nil 4) <Q: 1637> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1636> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(load x(2) 2 cache)
		endDefinition(282889)
lbl(282927)	getRecord('export' [assemble doAssemble] g(9))
		unifyValue(x(0))
		unifyValue(x(1))
		deAllocateL
		return
		endDefinition(266469)
lbl(282939)	tailCall(x(3) 0)
		endDefinition(266175)
lbl(282944)	putList(x(4))
		setConstant('procedure/3')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putList(x(10))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(9))
		setConstant(printName)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord('import' ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(7))
		setValue(x(8))
		putRecord('export' [assemble doAssemble] x(1))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(98) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(env ['Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'All' 'AllTail' 'And' 'Append' 'Arity' 'Array' 'Asin' 'Assign' 'Atan' 'Atan2' 'Atom' 'AtomToString' 'BaseObject' 'BitArray' 'Bool' 'ByNeed' 'Ceil' 'Cell' 'Char' 'Chunk' 'Class' 'CondSelect' 'Cos' 'Delay' 'Dictionary' 'Exception' 'Exchange' 'Exp' 'Filter' 'Flatten' 'Float' 'FloatToInt' 'FloatToString' 'Floor' 'FoldL' 'FoldLTail' 'FoldR' 'FoldRTail' 'For' 'ForAll' 'ForAllTail' 'ForThread' 'ForeignPointer' 'Functor' 'Get' 'HasFeature' 'Int' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBitArray' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsClass' 'IsDet' 'IsDictionary' 'IsEven' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNat' 'IsNumber' 'IsObject' 'IsOdd' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsThread' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Length' 'List' 'Literal' 'Lock' 'Log' 'Loop' 'MakeList' 'MakeRecord' 'MakeTuple' 'Map' 'Max' 'Member' 'Merge' 'Min' 'Name' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'Not' 'Nth' 'Number' 'Object' 'Or' 'Port' 'Pow' 'Procedure' 'ProcedureArity' 'Put' 'Raise' 'Record' 'Reverse' 'Round' 'Send' 'Sin' 'Some' 'Sort' 'Space' 'Sqrt' 'String' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread' 'Time' 'Tuple' 'Unit' 'Value' 'VirtualString' 'Wait' 'WaitOr' 'Width' 'WidthC' '`false`' '`true`' '`unit`'] x(4))
		setValue(y(88))
		setValue(y(34))
		setValue(y(75))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setValue(y(226))
		setValue(y(119))
		setValue(y(121))
		setValue(y(43))
		setValue(y(108))
		setValue(y(135))
		setValue(y(84))
		setValue(y(74))
		setValue(y(33))
		setValue(y(76))
		setValue(y(77))
		setValue(y(19))
		setValue(y(39))
		setValue(y(194))
		setValue(y(182))
		setValue(y(21))
		setValue(y(12))
		setValue(y(68))
		setValue(y(17))
		setValue(y(25))
		setValue(y(167))
		setValue(y(197))
		setValue(y(10))
		setValue(y(72))
		setValue(y(227))
		setValue(y(103))
		setValue(y(105))
		setValue(y(32))
		setValue(y(65))
		setValue(y(123))
		setValue(y(126))
		setValue(y(63))
		setValue(y(78))
		setValue(y(79))
		setValue(y(69))
		setValue(y(114))
		setValue(y(116))
		setValue(y(115))
		setValue(y(117))
		setValue(y(129))
		setValue(y(118))
		setValue(y(120))
		setValue(y(130))
		setValue(y(195))
		setValue(y(231))
		setValue(y(178))
		setValue(y(11))
		setValue(y(56))
		setValue(y(61))
		setValue(y(62))
		setValue(y(176))
		setValue(y(38))
		setValue(y(202))
		setValue(y(42))
		setValue(y(30))
		setValue(y(50))
		setValue(y(173))
		setValue(y(201))
		setValue(y(7))
		setValue(y(131))
		setValue(y(60))
		setValue(y(64))
		setValue(y(203))
		setValue(y(5))
		setValue(y(57))
		setValue(y(6))
		setValue(y(107))
		setValue(y(26))
		setValue(y(28))
		setValue(y(40))
		setValue(y(58))
		setValue(y(86))
		setValue(y(180))
		setValue(y(59))
		setValue(y(35))
		setValue(y(127))
		setValue(y(133))
		setValue(y(138))
		setValue(y(179))
		setValue(y(46))
		setValue(y(204))
		setValue(y(90))
		setValue(y(27))
		setValue(y(174))
		setValue(y(83))
		setValue(y(110))
		setValue(y(93))
		setValue(y(14))
		setValue(y(16))
		setValue(y(66))
		setValue(y(102))
		setValue(y(106))
		setValue(y(134))
		setValue(y(89))
		setValue(y(113))
		setValue(y(9))
		setValue(y(109))
		setValue(y(125))
		setValue(y(8))
		setValue(y(20))
		setValue(y(181))
		setValue(y(175))
		setValue(y(31))
		setValue(y(172))
		setValue(y(132))
		setValue(y(29))
		setValue(y(41))
		setValue(y(36))
		setValue(y(45))
		setValue(y(111))
		setValue(y(80))
		setValue(y(199))
		setValue(y(44))
		setValue(y(18))
		setValue(y(87))
		setValue(y(101))
		setValue(y(128))
		setValue(y(177))
		setValue(y(200))
		setValue(y(141))
		setValue(y(112))
		setValue(y(70))
		setValue(y(37))
		setValue(y(71))
		setValue(y(122))
		setValue(y(124))
		setValue(y(171))
		setValue(y(67))
		setValue(y(22))
		setValue(y(47))
		setValue(y(49))
		setValue(y(48))
		setValue(y(73))
		setValue(y(140))
		setValue(y(196))
		setValue(y(229))
		setValue(y(85))
		setValue(y(15))
		setValue(y(13))
		setValue(y(51))
		setValue(y(3))
		setValue(y(4))
		setValue(y(81))
		setValue(y(139))
		setConstant(false)
		setConstant(true)
		setConstant(unit)
lbl(283346)	definition(x(2) 305947 pid('' 2 pos('./compiler/FunCompiler.oz' 4 3) nil 4) <P: 1638> [y(39) y(168) y(185) y(184) y(143) y(47) y(170) y(104) y(148) y(154) y(162) y(149) y(150) y(156) y(153) y(152) x(4) y(223) y(225) y(94) y(1) y(128) y(174) y(38) y(42) y(57) y(133) y(198)])
		putList(x(2))
		setPredicateRef(<Q: 1639>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1640>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1641>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1642>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MaxWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TabSize>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Stack>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Line>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Len>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: VS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Col>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GlueItem>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GlueIndent>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrintDepth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PrintWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: StackOpsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StackOpsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AppendTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AppendSeparated>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FormatLine>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecStackOps>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1643>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1644>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1645>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1646>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1647>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1648>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1649>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1650>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1651>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ErrorCount>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HeapUsed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TimeUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ThisPhaseLevel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Raised>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Wrapper>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ToTop>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ProfileStart>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ProfileEnd>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1652>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1653>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1654>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1655>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1656>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1657>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1658>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1659>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1660>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1661>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1662>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1663>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1664>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1665>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1666>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1667>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1668>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1669>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MergeEnv>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1670>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1671>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1672>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1673>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1674>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1675>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1676>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1677>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1692>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptException>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ParseFile>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ParseVirtualString>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecutingThread>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CatchResult>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Feed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FeedSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CompileQuery>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ExecProtected>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1693>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1694>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1695>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1696>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1697>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1698>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1699>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1700>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1701>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1702>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1703>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1704>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1705>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1706>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1707>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1708>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1709>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Registered>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentQuery>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueriesHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: QueriesTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextId>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegistrationLock>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueueLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Compiler>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NotifyQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enqueue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ClearQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dequeue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RunQueue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1710>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1711>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1712>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1713>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1722>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1723>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1724>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1725>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1726>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1727>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1728>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Port>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ServerThread>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1729>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1730>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1731>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1732>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1733>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1734>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1735>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1736>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Verbose>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: History>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InsertedFiles>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SourceVS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HasErrors>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HasBeenTopped>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Serve>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1737>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1738>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1740>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1742>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1743>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1744>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1745>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1746>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1747>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1748>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1749>)
		setValue(x(2))
lbl(284396)	definitionCopy(x(3) 305942 pid('/body' 0 pos('./compiler/FunCompiler.oz' 4 3) [once] 642) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) x(1)])
		allocateL(14)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'Error' x(3) cache)
		inlineDot(x(0) 'ErrorRegistry' x(4) cache)
		inlineDot(x(0) 'Debug' x(5) cache)
		inlineDot(x(0) 'Parser' x(6) cache)
		inlineDot(x(0) 'Misc' x(7) cache)
		inlineDot(x(0) 'Core' x(8) cache)
		inlineDot(x(0) 'Unnest' x(9) cache)
		inlineDot(x(0) 'Assembler' x(10) cache)
lbl(284467)	definition(x(11) 284744 pid('EscapeVariableChar' 3 pos('./compiler/FormatStrings.oz' 30 6) nil 6) <Q: 1639> nil)
		shallowGuard(284731)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(284481)	shallowThen
		testLiteral(x(4) nil 284493)
		getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(284493)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 284520)
lbl(284506)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(284520)	testNumber(y(2) 92 284526)
		branch(284506)
lbl(284526)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 284570)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(284570)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 284621)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(284621)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 284672)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(284672)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 284723)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(284723)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(284731)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(30)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(284467)
lbl(284744)	definition(x(12) 284797 pid('PrintNameToVirtualString' 2 pos('./compiler/FormatStrings.oz' 41 6) nil 4) <Q: 1640> [g(1) x(11)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 284790)
lbl(284762)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 284790)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(284790)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(284744)
lbl(284797)	definition(x(11) 284869 pid('IndentSub' 3 pos('./compiler/FormatStrings.oz' 50 6) nil 5) <Q: 1641> nil)
		putConstant(8 x(3))
		testLE(x(3) x(0) x(4) 284835)
		putConstant(8 x(3))
		inlineMinus(x(0) x(3) x(4))
		putRecord('#' 2 x(3))
		setValue(x(1))
		setConstant('\t')
		move(x(4) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 1641> 7)
lbl(284835)	putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 284863)
		inlineMinus1(x(0) x(3))
		putRecord('#' 2 x(4))
		setValue(x(1))
		setConstant(' ')
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1641> 7)
lbl(284863)	unify(x(2) x(1))
		return
		endDefinition(284797)
lbl(284869)	definition(x(11) 284886 pid('Indent' 2 pos('./compiler/FormatStrings.oz' 57 6) nil 3) <Q: 1642> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1641> 7)
		endDefinition(284869)
lbl(284886)	putList(x(11))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: Col> <M: GlueIndent> <M: GlueItem> <M: Len> <M: Line> <M: MaxWidth> <M: PrintDepth> <M: PrintWidth> <M: Stack> <M: StackOpsHd> <M: StackOpsTl> <M: TabSize> <M: VS>] x(12))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord(messagePattern [indent printDepth printWidth tabsize width] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(284936)	definition(x(14) 285277 pid('Formatter,init' 1 pos('./compiler/FormatStrings.oz' 82 6) nil 3) unit [x(13) x(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(width x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 284975)
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(1))
		branch(284978)
lbl(284975)	getNumber(80 y(1))
lbl(284978)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(tabsize x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 285001)
		inlineDot(x(0) tabsize x(1) cache)
		unify(x(1) y(2))
		branch(285004)
lbl(285001)	getNumber(3 y(2))
lbl(285004)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(indent x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 285027)
		inlineDot(x(0) indent x(1) cache)
		unify(x(1) y(3))
		branch(285030)
lbl(285027)	getNumber(0 y(3))
lbl(285030)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(printDepth x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 285053)
		inlineDot(x(0) printDepth x(1) cache)
		unify(x(1) y(4))
		branch(285056)
lbl(285053)	getLiteral(unit y(4))
lbl(285056)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(printWidth x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 285079)
		inlineDot(x(0) printWidth x(1) cache)
		unify(x(1) y(5))
		branch(285082)
lbl(285079)	getLiteral(unit y(5))
lbl(285082)	move(y(1) x(0))
		inlineAssign(<M: MaxWidth> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: TabSize> x(0) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		inlineAssign(<M: Stack> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Line> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: Len> x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1642> 4)
		move(y(0) x(0))
		inlineAssign(<M: VS> x(0) cache)
		move(y(3) x(0))
		inlineAssign(<M: Col> x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		createVariable(y(0))
		testLiteral(y(4) unit 285201)
lbl(285169)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) depth x(1) cache)
		unify(x(1) y(0))
		branch(285204)
lbl(285201)	unify(y(0) y(4))
lbl(285204)	move(y(0) x(0))
		inlineAssign(<M: PrintDepth> x(0) cache)
		createVariable(y(0))
		testLiteral(y(5) unit 285250)
lbl(285218)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(0))
		branch(285253)
lbl(285250)	unify(y(0) y(5))
lbl(285253)	move(y(0) x(0))
		inlineAssign(<M: PrintWidth> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		deAllocateL6
		return
		endDefinition(284936)
lbl(285277)	putList(x(13))
		setConstant(init)
		setValue(x(14))
		createVariable(y(0))
lbl(285285)	definition(x(14) 285695 pid('Formatter,append/fast' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 6) <Q: 1643> [g(2) y(0) x(2)])
		match(x(0) ht(285347 [onScalar('#' 285294) onScalar(nil 285295) onRecord('|' 2 285296)]))
lbl(285294)	return
lbl(285295)	return
lbl(285296)	allocateL3
		inlineAt(<M: Len> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(285347)	allocateL3
		move(x(0) y(0))
		testBI('IsAtom' [x(0)]#[x(1)] 285405)
lbl(285355)	inlineAt(<M: Len> x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(285405)	testBI('IsNumber' [x(0)]#[x(1)] 285411)
		branch(285355)
lbl(285411)	testBI('IsTuple' [x(0)]#[x(1)] 285432)
lbl(285415)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 285432)
lbl(285422)	callBI('Width' [x(0)]#[x(2)])
		putConstant(1 x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendTuple> true 3) 0)
lbl(285432)	match(y(0) ht(285680 [onRecord(pn 1 285435) onRecord(oz 1 285450) onRecord(list 2 285487) onRecord(format 1 285494)]))
lbl(285435)	getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1640> 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(285450)	getVariable(x(0))
		move(g(2) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		inlineAt(<M: PrintDepth> x(5) cache)
		inlineAt(<M: PrintWidth> x(2) cache)
		move(x(5) x(1))
		createVariableMove(y(0) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(285487)	getVarVar(x(0) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendSeparated> true 2) 0)
lbl(285494)	getVariable(x(0))
		match(x(0) ht(285667 [onScalar(break 285499) onScalar(indent 285554) onScalar(exdent 285575) onScalar(push 285596) onScalar(pop 285631) onRecord(glue 1 285652)]))
lbl(285499)	genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		inlineAt(<M: Stack> x(2) cache)
		inlineDot(x(2) 1 x(0) cache)
		inlineAt(<M: VS> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1642> 4)
		putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('\n')
		setValue(y(2))
		inlineAssign(<M: VS> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: Col> x(0) cache)
		deAllocateL3
		return
lbl(285554)	putList(x(0))
		setConstant(indent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(285575)	putList(x(0))
		setConstant(exdent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(285596)	putRecord(push 1 x(1))
		setVariable(x(2))
		putList(x(0))
		setValue(x(1))
		setVariable(x(3))
		inlineAt(<M: StackOpsTl> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<M: Len> x(0) cache)
		unify(x(0) x(2))
		inlineAssign(<M: StackOpsTl> x(3) cache)
		deAllocateL3
		return
lbl(285631)	putList(x(0))
		setConstant(pop)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(285652)	getVariable(y(0))
		genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL3
		return
lbl(285667)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(145)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(285680)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(146)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(285285)
lbl(285695)	definition(x(15) 285721 pid('Formatter,append/slow' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1643> 3)
		endDefinition(285695)
lbl(285721)	putRecord('#' [1 2 fast] x(16))
		setConstant(append)
		setValue(x(15))
		setValue(x(14))
lbl(285731)	definition(x(14) 285760 pid('Formatter,get/fast' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) <Q: 1644> [y(0)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FormatLine> false 0) 0)
		putConstant(<M: VS> x(0))
		putConstant(nil x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL1
		return
		endDefinition(285731)
lbl(285760)	definition(x(15) 285786 pid('Formatter,get/slow' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1644> 3)
		endDefinition(285760)
lbl(285786)	putRecord('#' [1 2 fast] x(17))
		setConstant(get)
		setValue(x(15))
		setValue(x(14))
lbl(285796)	definition(x(14) 285843 pid('Formatter,AppendTuple/fast' 3 pos('./compiler/FormatStrings.oz' 155 6) nil 4) <Q: 1645> [y(0)])
		testLE(x(1) x(2) x(3) 285840)
		allocateL3
		callBI('.' [x(0) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true append false 1) 0)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: AppendTuple> true 3) 0)
lbl(285840)	return
		endDefinition(285796)
lbl(285843)	definition(x(15) 285884 pid('Formatter,AppendTuple/slow' 1 pos('./compiler/FormatStrings.oz' 155 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1645> 7)
		endDefinition(285843)
lbl(285884)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: AppendTuple>)
		setValue(x(15))
		setValue(x(14))
lbl(285894)	definition(x(14) 285962 pid('Formatter,AppendSeparated/fast' 2 pos('./compiler/FormatStrings.oz' 161 6) nil 2) <Q: 1646> [y(0)])
		match(x(0) ht(285947 [onScalar(nil 285903) onRecord('|' 2 285904)]))
lbl(285903)	return
lbl(285904)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) true append false 1) 0)
		match(y(0) ht(285934 [onScalar(nil 285917) onRecord('|' 2 285919)]))
lbl(285917)	deAllocateL2
		return
lbl(285919)	move(y(1) x(0))
		genCall(gci(g(0) true append false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AppendSeparated> true 2) 0)
lbl(285934)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(168)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(285947)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285894)
lbl(285962)	definition(x(15) 285997 pid('Formatter,AppendSeparated/slow' 1 pos('./compiler/FormatStrings.oz' 161 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1646> 5)
		endDefinition(285962)
lbl(285997)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: AppendSeparated>)
		setValue(x(15))
		setValue(x(14))
lbl(286007)	definition(x(14) 286284 pid('Formatter,FormatLine/fast' 0 pos('./compiler/FormatStrings.oz' 172 6) nil 4) <Q: 1647> [y(0)])
		allocateL2
		inlineAt(<M: GlueItem> x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAt(<M: Len> x(0) cache)
		inlinePlus(x(2) x(0) x(3))
		inlineAt(<M: MaxWidth> x(0) cache)
		testLE(x(3) x(0) x(2) 286105)
lbl(286056)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueItem> x(1) cache)
		inlineAt(<M: Line> x(2) cache)
		putRecord('#' 3 x(3))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		inlineAssign(<M: VS> x(3) cache)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		branch(286174)
lbl(286105)	inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		testLT(x(2) x(0) x(3) 286056)
lbl(286120)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1642> 4)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('\n')
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: VS> x(1) cache)
		inlineAt(<M: GlueIndent> x(0) cache)
		inlineAssign(<M: Col> x(0) cache)
lbl(286174)	putConstant(nil x(3))
		inlineAt(<M: StackOpsTl> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: StackOpsHd> x(0) cache)
		inlineAt(<M: Stack> x(1) cache)
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: ExecStackOps> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: Stack> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: Len> x(1) cache)
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		putConstant(nil x(0))
		inlineAssign(<M: Line> x(0) cache)
		putConstant(0 x(0))
		inlineAssign(<M: Len> x(0) cache)
		inlineAt(<M: Stack> x(0) cache)
		inlineDot(x(0) 1 x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL2
		return
		endDefinition(286007)
lbl(286284)	definition(x(15) 286298 pid('Formatter,FormatLine/slow' 1 pos('./compiler/FormatStrings.oz' 172 6) nil 1) unit nil)
		getLiteral(<M: FormatLine> x(0))
		genFastCall(<Q: 1647> 1)
		endDefinition(286284)
lbl(286298)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: FormatLine>)
		setValue(x(15))
		setValue(x(14))
lbl(286308)	definition(x(14) 286478 pid('Formatter,ExecStackOps/fast' 3 pos('./compiler/FormatStrings.oz' 191 6) nil 8) <Q: 1648> [y(0)])
		match(x(0) ht(286463 [onScalar(nil 286317) onRecord('|' 2 286321)]))
lbl(286317)	unify(x(2) x(1))
		return
lbl(286321)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(286438 [onScalar(pop 286335) onScalar(indent 286346) onScalar(exdent 286381) onRecord(push 1 286416)]))
lbl(286335)	inlineDot(x(1) 2 x(0) cache)
		unify(x(0) y(2))
		branch(286451)
lbl(286346)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlinePlus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(286451)
lbl(286381)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlineMinus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(286451)
lbl(286416)	getVariable(x(0))
		getList(y(2))
		unifyVariable(x(4))
		unifyValue(x(1))
		inlineAt(<M: Col> x(1) cache)
		inlinePlus(x(1) x(0) x(5))
		unify(x(5) x(4))
		branch(286451)
lbl(286438)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(201)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(286451)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: ExecStackOps> true 3) 0)
lbl(286463)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(204)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(286308)
lbl(286478)	definition(x(15) 286519 pid('Formatter,ExecStackOps/slow' 1 pos('./compiler/FormatStrings.oz' 191 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1648> 7)
		endDefinition(286478)
lbl(286519)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: ExecStackOps>)
		setValue(x(15))
		setValue(x(14))
		putRecord('#' 7 x(14))
		setValue(x(13))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		moveMoveXYXY(x(7) y(7) x(8) y(8))
		moveMoveXYXY(x(9) y(9) x(10) y(10))
		move(x(14) x(1))
		move(x(12) x(2))
		move(x(11) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('Formatter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(286596)	definition(x(7) 286650 pid('FormatStringToVirtualString' 2 pos('./compiler/FormatStrings.oz' 208 3) nil 4) <Q: 1649> [y(0)])
		allocateL3
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		putConstant(79 x(0))
		sendMsg(init y(2) [width] cache)
		move(y(0) x(0))
		sendMsg(append y(2) 1 cache)
		move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(get x(1) 1 cache)
		endDefinition(286596)
lbl(286650)	definition(x(7) 286676 pid('GetUsedHeap' 1 pos('./compiler/Reporter.oz' 31 3) nil 3) <Q: 1650> [y(1)])
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) x(1))
		putConstant('heap.used' x(0))
		tailCall(x(2) 2)
		endDefinition(286650)
lbl(286676)	definition(x(7) 286788 pid('NormalizeCoord' 2 pos('./compiler/Reporter.oz' 35 3) nil 4) <Q: 1651> nil)
		match(x(0) ht(286773 [onScalar(unit 286685) onRecord('pos' 3 286689) onRecord('pos' 6 286693) onRecord(fineStep 3 286709) onRecord(fineStep 6 286725) onRecord(coarseStep 3 286741) onRecord(coarseStep 6 286757)]))
lbl(286685)	getLiteral(unit x(1))
		return
lbl(286689)	unify(x(1) x(0))
		return
lbl(286693)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(286709)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(286725)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(286741)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(286757)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(286773)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(43)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(286676)
lbl(286788)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ErrorCount> <M: HeapUsed> <M: Raised> <M: ThisPhaseLevel> <M: TimeUsed>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Compiler> <M: Wrapper>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(0))
lbl(286818)	definition(x(7) 286860 pid('Reporter,init/fast' 2 pos('./compiler/Reporter.oz' 50 6) nil 4) <Q: 1652> [y(0)])
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(2) cache)
		unify(x(2) x(1))
		genCall(gci(g(0) true clearErrors false 0) 0)
		putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		return
		endDefinition(286818)
lbl(286860)	definition(x(8) 286895 pid('Reporter,init/slow' 1 pos('./compiler/Reporter.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1652> 5)
		endDefinition(286860)
lbl(286895)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(286905)	definition(x(7) 286930 pid('Reporter,clearErrors/fast' 0 pos('./compiler/Reporter.oz' 56 6) nil 1) <Q: 1653> nil)
		putConstant(0 x(0))
		inlineAssign(<M: ErrorCount> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
		endDefinition(286905)
lbl(286930)	definition(x(8) 286944 pid('Reporter,clearErrors/slow' 1 pos('./compiler/Reporter.oz' 56 6) nil 1) unit nil)
		getLiteral(clearErrors x(0))
		genFastCall(<Q: 1653> 1)
		endDefinition(286930)
lbl(286944)	putRecord('#' [1 2 fast] x(10))
		setConstant(clearErrors)
		setValue(x(8))
		setValue(x(7))
lbl(286954)	definition(x(7) 287043 pid('Reporter,ToTop/fast' 1 pos('./compiler/Reporter.oz' 60 6) nil 2) <Q: 1654> nil)
		inlineAt(<M: Raised> x(1) cache)
		testBool(x(1) 286970 287030)
		return
lbl(286970)	testBool(x(0) 287004 286993)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		sendMsg(notify x(1) 1 cache)
		branch(287004)
lbl(286993)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(63)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287004)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(toTop x(0))
		sendMsg(notify x(1) 1 cache)
		putConstant(true x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
lbl(287030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(61)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286954)
lbl(287043)	definition(x(8) 287069 pid('Reporter,ToTop/slow' 1 pos('./compiler/Reporter.oz' 60 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1654> 3)
		endDefinition(287043)
lbl(287069)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: ToTop>)
		setValue(x(8))
		setValue(x(7))
lbl(287079)	definition(x(7) 287239 pid('Reporter,ProfileStart/fast' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) <Q: 1655> [y(1) y(2)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287166 287155)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAssign(<M: TimeUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		branch(287166)
lbl(287155)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287166)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287224 287226)
		move(g(1) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1650> 2)
		move(y(1) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
lbl(287224)	deAllocateL2
		return
lbl(287226)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(287079)
lbl(287239)	definition(x(8) 287265 pid('Reporter,ProfileStart/slow' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1655> 3)
		endDefinition(287239)
lbl(287265)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: ProfileStart>)
		setValue(x(8))
		setValue(x(7))
lbl(287275)	definition(x(7) 287588 pid('Reporter,ProfileEnd/fast' 0 pos('./compiler/Reporter.oz' 80 6) nil 3) <Q: 1656> [y(1) y(0) y(2)])
		allocateL3
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 287573 287575)
lbl(287306)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		testLiteral(x(0) none 287317)
lbl(287315)	deAllocateL3
		return
lbl(287317)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		createVariable(y(0))
		match(x(0) ht(287337 [onScalar(phase 287327) onScalar(subphase 287332)]))
lbl(287327)	getLiteral('%%%         ' y(0))
		branch(287350)
lbl(287332)	getLiteral('%%%             ' y(0))
		branch(287350)
lbl(287337)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(287350)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287452 287441)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAt(<M: TimeUsed> x(1) cache)
		inlineMinus(x(0) x(1) x(2))
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('time: ')
		setValue(x(2))
		setConstant(' msec\n')
		move(x(0) y(1))
		move(x(1) x(0))
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: TimeUsed> x(0) cache)
		branch(287452)
lbl(287441)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287452)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287563 287552)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1650> 2)
		move(g(2) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(2) x(0))
		genFastCall(<Q: 1650> 2)
		inlineAt(<M: HeapUsed> x(0) cache)
		move(y(1) x(1))
		inlineMinus(x(1) x(0) x(2))
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('heap allocation: ')
		setValue(x(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('active size: ')
		setValue(y(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(2) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		branch(287563)
lbl(287552)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(93)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(287563)	putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		deAllocateL3
		return
lbl(287573)	deAllocateL3
		return
lbl(287575)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(81)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(287275)
lbl(287588)	definition(x(8) 287602 pid('Reporter,ProfileEnd/slow' 1 pos('./compiler/Reporter.oz' 80 6) nil 1) unit nil)
		getLiteral(<M: ProfileEnd> x(0))
		genFastCall(<Q: 1656> 1)
		endDefinition(287588)
lbl(287602)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: ProfileEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(287612)	definition(x(7) 287722 pid('Reporter,logDeclare/fast' 1 pos('./compiler/Reporter.oz' 106 6) nil 6) <Q: 1657> [y(3) y(0)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287707 287709)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1651> 4)
		testRecord(y(1) 'pos' 3 287700)
lbl(287660)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) formatPos x(5) cache)
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		call(x(5) 5)
		putRecord('#' 3 x(0))
		setConstant('%%% processing query in ')
		setValue(y(0))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 2) 0)
lbl(287700)	putConstant('%%% processing query' x(0))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(287707)	deAllocateL2
		return
lbl(287709)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(107)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(287612)
lbl(287722)	definition(x(8) 287748 pid('Reporter,logDeclare/slow' 1 pos('./compiler/Reporter.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1657> 3)
		endDefinition(287722)
lbl(287748)	putRecord('#' [1 2 fast] x(14))
		setConstant(logDeclare)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
lbl(287766)	definition(x(8) 287892 pid('Reporter,logInsert' 1 pos('./compiler/Reporter.oz' 117 6) nil 4) unit [x(7) y(0)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 287814)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(287817)
lbl(287814)	getLiteral(unit y(2))
lbl(287817)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(insert 2 x(0))
		setValue(y(1))
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showinsert x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 287877 287879)
		putRecord('#' 3 x(0))
		setConstant('%%%         inserted file "')
		setValue(y(1))
		setConstant('"\n')
		deAllocateL3
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(287877)	deAllocateL3
		return
lbl(287879)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(287766)
lbl(287892)	putList(x(7))
		setConstant(logInsert)
		setValue(x(8))
lbl(287898)	definition(x(8) 287970 pid('Reporter,logPhase/fast' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) <Q: 1658> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(phase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 287955 287957)
		putRecord('#' 3 x(0))
		setConstant('%%%     ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(287955)	deAllocateL2
		return
lbl(287957)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(126)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(287898)
lbl(287970)	definition(x(15) 287996 pid('Reporter,logPhase/slow' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1658> 3)
		endDefinition(287970)
lbl(287996)	putRecord('#' [1 2 fast] x(16))
		setConstant(logPhase)
		setValue(x(15))
		setValue(x(8))
lbl(288006)	definition(x(8) 288078 pid('Reporter,logSubPhase/fast' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) <Q: 1659> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(subphase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 288063 288065)
		putRecord('#' 3 x(0))
		setConstant('%%%         ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(288063)	deAllocateL2
		return
lbl(288065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(133)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(288006)
lbl(288078)	definition(x(15) 288104 pid('Reporter,logSubPhase/slow' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1659> 3)
		endDefinition(288078)
lbl(288104)	putRecord('#' [1 2 fast] x(17))
		setConstant(logSubPhase)
		setValue(x(15))
		setValue(x(8))
lbl(288114)	definition(x(8) 288131 pid('Reporter,logAccept/fast' 0 pos('./compiler/Reporter.oz' 137 6) nil 1) <Q: 1660> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- accepted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(288114)
lbl(288131)	definition(x(15) 288145 pid('Reporter,logAccept/slow' 1 pos('./compiler/Reporter.oz' 137 6) nil 1) unit nil)
		getLiteral(logAccept x(0))
		genFastCall(<Q: 1660> 1)
		endDefinition(288131)
lbl(288145)	putRecord('#' [1 2 fast] x(18))
		setConstant(logAccept)
		setValue(x(15))
		setValue(x(8))
lbl(288155)	definition(x(8) 288240 pid('Reporter,logReject/fast' 0 pos('./compiler/Reporter.oz' 141 6) nil 3) <Q: 1661> [y(0)])
		allocateL1
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		createVariable(y(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 288221)
		getRecord('#' 5 y(0))
		unifyLiteral(' (')
		unifyVariable(x(0))
		unifyLiteral(' error')
		unifyVariable(x(1))
		unifyLiteral(')')
		inlineAt(<M: ErrorCount> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<M: ErrorCount> x(0) cache)
		testNumber(x(0) 1 288216)
		getLiteral(nil x(1))
		branch(288224)
lbl(288216)	getLiteral(s x(1))
		branch(288224)
lbl(288221)	getLiteral(nil y(0))
lbl(288224)	putRecord('#' 3 x(0))
		setConstant('%** ------------------ rejected')
		setValue(y(0))
		setConstant('\n')
		deAllocateL1
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(288155)
lbl(288240)	definition(x(15) 288254 pid('Reporter,logReject/slow' 1 pos('./compiler/Reporter.oz' 141 6) nil 1) unit nil)
		getLiteral(logReject x(0))
		genFastCall(<Q: 1661> 1)
		endDefinition(288240)
lbl(288254)	putRecord('#' [1 2 fast] x(19))
		setConstant(logReject)
		setValue(x(15))
		setValue(x(8))
lbl(288264)	definition(x(8) 288298 pid('Reporter,logAbort/fast' 0 pos('./compiler/Reporter.oz' 150 6) nil 2) <Q: 1662> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ aborted\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288264)
lbl(288298)	definition(x(15) 288312 pid('Reporter,logAbort/slow' 1 pos('./compiler/Reporter.oz' 150 6) nil 1) unit nil)
		getLiteral(logAbort x(0))
		genFastCall(<Q: 1662> 1)
		endDefinition(288298)
lbl(288312)	putRecord('#' [1 2 fast] x(20))
		setConstant(logAbort)
		setValue(x(15))
		setValue(x(8))
lbl(288322)	definition(x(8) 288345 pid('Reporter,logCrash/fast' 0 pos('./compiler/Reporter.oz' 155 6) nil 1) <Q: 1663> [y(0) g(3)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ compiler crashed\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> true 1) 0)
		endDefinition(288322)
lbl(288345)	definition(x(15) 288359 pid('Reporter,logCrash/slow' 1 pos('./compiler/Reporter.oz' 155 6) nil 1) unit nil)
		getLiteral(logCrash x(0))
		genFastCall(<Q: 1663> 1)
		endDefinition(288345)
lbl(288359)	putRecord('#' [1 2 fast] x(21))
		setConstant(logCrash)
		setValue(x(15))
		setValue(x(8))
lbl(288369)	definition(x(8) 288386 pid('Reporter,logHalt/fast' 0 pos('./compiler/Reporter.oz' 160 6) nil 1) <Q: 1664> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- halting\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(288369)
lbl(288386)	definition(x(15) 288400 pid('Reporter,logHalt/slow' 1 pos('./compiler/Reporter.oz' 160 6) nil 1) unit nil)
		getLiteral(logHalt x(0))
		genFastCall(<Q: 1664> 1)
		endDefinition(288386)
lbl(288400)	putRecord('#' [1 2 fast] x(22))
		setConstant(logHalt)
		setValue(x(15))
		setValue(x(8))
lbl(288410)	definition(x(8) 288427 pid('Reporter,logInterrupt/fast' 0 pos('./compiler/Reporter.oz' 164 6) nil 1) <Q: 1665> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- interrupted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(288410)
lbl(288427)	definition(x(15) 288441 pid('Reporter,logInterrupt/slow' 1 pos('./compiler/Reporter.oz' 164 6) nil 1) unit nil)
		getLiteral(logInterrupt x(0))
		genFastCall(<Q: 1665> 1)
		endDefinition(288427)
lbl(288441)	putRecord('#' [1 2 fast] x(23))
		setConstant(logInterrupt)
		setValue(x(15))
		setValue(x(8))
lbl(288451)	definition(x(8) 288486 pid('Reporter,displaySource/fast' 3 pos('./compiler/Reporter.oz' 168 6) nil 5) <Q: 1666> nil)
		getSelf(x(3))
		inlineDot(x(3) <M: Wrapper> x(3) cache)
		putRecord(displaySource 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		tailSendMsg(notify x(3) 1 cache)
		endDefinition(288451)
lbl(288486)	definition(x(15) 288527 pid('Reporter,displaySource/slow' 1 pos('./compiler/Reporter.oz' 168 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1666> 7)
		endDefinition(288486)
lbl(288527)	putRecord('#' [1 2 fast] x(24))
		setConstant(displaySource)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(288545)	definition(x(15) 288646 pid('Reporter,userInfo' 1 pos('./compiler/Reporter.oz' 171 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 288593)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(288596)
lbl(288593)	getLiteral(unit y(2))
lbl(288596)	testLiteral(y(2) unit 288621)
lbl(288600)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 1 x(0))
		setValue(y(1))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
lbl(288621)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288545)
lbl(288646)	putList(x(8))
		setConstant(userInfo)
		setValue(x(15))
		putRecord(messagePattern [abort coord items kind msg] x(15))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(288666)	definition(x(25) 288967 pid('Reporter,error' 1 pos('./compiler/Reporter.oz' 179 6) nil 3) unit [x(15) y(0) g(3)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 288705)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(288708)
lbl(288705)	getLiteral(nil y(1))
lbl(288708)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 288731)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(288734)
lbl(288731)	getLiteral(unit y(2))
lbl(288734)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 288757)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(288760)
lbl(288757)	getLiteral(unit y(3))
lbl(288760)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 288783)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(288786)
lbl(288783)	getLiteral(unit y(4))
lbl(288786)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(abort x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 288809)
		inlineDot(x(0) abort x(1) cache)
		unify(x(1) y(5))
		branch(288812)
lbl(288809)	getLiteral(true y(5))
lbl(288812)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1651> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(6))
		testLiteral(y(0) unit 288849)
lbl(288844)	unify(y(6) y(1))
		branch(288863)
lbl(288849)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(288863)	putRecord(error [items kind msg] x(2))
		setValue(y(6))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		sendMsg(notify y(2) 1 cache)
		inlineAt(<M: ErrorCount> x(0) cache)
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ErrorCount> x(1) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getMaxNumberOfErrors x(1) 1 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		testLE(x(1) x(0) x(2) 288963)
lbl(288928)	inlineAt(<M: ErrorCount> x(1) cache)
		testLT(x(0) x(1) x(2) 288961)
lbl(288938)	testBool(y(5) 288948 288950)
lbl(288942)	putConstant(tooManyErrors x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(288948)	deAllocateL7
		return
lbl(288950)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288961)	deAllocateL7
		return
lbl(288963)	deAllocateL7
		return
		endDefinition(288666)
lbl(288967)	putList(x(15))
		setConstant(error)
		setValue(x(25))
		putRecord(messagePattern [coord items kind msg] x(25))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(288985)	definition(x(26) 289186 pid('Reporter,warn' 1 pos('./compiler/Reporter.oz' 199 6) nil 3) unit [x(25) y(0) g(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 289024)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(289027)
lbl(289024)	getLiteral(nil y(1))
lbl(289027)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 289050)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(289053)
lbl(289050)	getLiteral(unit y(2))
lbl(289053)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 289076)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(289079)
lbl(289076)	getLiteral(unit y(3))
lbl(289079)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 289102)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(289105)
lbl(289102)	getLiteral(unit y(4))
lbl(289105)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1651> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(5))
		testLiteral(y(0) unit 289142)
lbl(289137)	unify(y(5) y(1))
		branch(289156)
lbl(289142)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		genFastCall(<P: 21> 6)
lbl(289156)	putRecord(warn [items kind msg] x(2))
		setValue(y(5))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL6
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288985)
lbl(289186)	putList(x(25))
		setConstant(warn)
		setValue(x(26))
lbl(289192)	definition(x(26) 289229 pid('Reporter,addErrors/fast' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) <Q: 1667> [y(0) g(3)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> false 1) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: ErrorCount> x(2) cache)
		deAllocateL1
		return
		endDefinition(289192)
lbl(289229)	definition(x(27) 289255 pid('Reporter,addErrors/slow' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1667> 3)
		endDefinition(289229)
lbl(289255)	putRecord('#' [1 2 fast] x(28))
		setConstant(addErrors)
		setValue(x(27))
		setValue(x(26))
lbl(289265)	definition(x(26) 289288 pid('Reporter,hasSeenError/fast' 1 pos('./compiler/Reporter.oz' 215 6) nil 4) <Q: 1668> nil)
		inlineAt(<M: ErrorCount> x(1) cache)
		putConstant(0 x(2))
		callBI('<' [x(2) x(1)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(289265)
lbl(289288)	definition(x(27) 289314 pid('Reporter,hasSeenError/slow' 1 pos('./compiler/Reporter.oz' 215 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1668> 3)
		endDefinition(289288)
lbl(289314)	putRecord('#' [1 2 fast] x(29))
		setConstant(hasSeenError)
		setValue(x(27))
		setValue(x(26))
		putRecord('#' 21 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(8))
		setValue(x(15))
		setValue(x(25))
		setValue(x(28))
		setValue(x(29))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('Reporter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(289382)	definition(x(7) 289509 pid('EnumerateVersionNumbers' 3 pos('./compiler/CompilerClass.oz' 27 3) nil 5) <Q: 1669> [g(5) g(6)])
		allocateL5
lbl(289389)	definition(x(4) 289407 pid('' 2 pos('./compiler/CompilerClass.oz' 28 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(289389)
lbl(289407)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(4) x(2))
		callBI('StringToAtom' [x(2)]#[x(3)])
		unify(x(3) x(0))
		match(y(3) ht(289494 [onScalar(nil 289453) onRecord('|' 2 289458)]))
lbl(289453)	getLiteral(nil x(1))
		deAllocateL5
		return
lbl(289458)	getVoid(1)
		getVariable(y(0))
		putList(x(3))
		setConstant(95)
		setConstant(nil)
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1669> 7)
lbl(289494)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(33)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(289382)
lbl(289509)	putRecord(switches [allowdeprecated codegen compilerpasses core debuginfocontrol debuginfonamevars debuginfovarnames debugtype debugvalue echoqueries expression feedtoemulator gump gumpparseroutputsimplified gumpparserverbose gumpscannerbackup gumpscannerbestfit gumpscannercaseless gumpscannernowarn gumpscannerperfreport gumpscannerstatistics outputcode ozma profile realcore runwithdebugger showcompilememory showcompiletime showdeclares showinsert staticanalysis threadedqueries unnest warnforward warnopt warnredecl warnunused warnunusedformals watchdog] x(7))
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord('attr' [defines localSwitches maxNumberOfErrors productionTemplates savedSwitches switches] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(17)
		setConstant(unit)
		setConstant(nil)
		setValue(x(7))
		putRecord('feat' [values variables] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(11))
lbl(289617)	definition(x(7) 289752 pid('CompilerStateClass,init/fast' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 4) <Q: 1670> [g(1) y(1) y(11)])
		allocateL3
		move(g(1) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		callBI('AtomToString' [x(0)]#[x(3)])
lbl(289651)	definition(x(1) 289671 pid('' 2 pos('./compiler/CompilerClass.oz' 113 8) nil 2) unit nil)
		testNumber(x(0) 46 289665)
lbl(289661)	getNumber(95 x(1))
		return
lbl(289665)	unify(x(1) x(0))
		return
		endDefinition(289651)
lbl(289671)	move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(2))
		setConstant(95)
		setConstant(nil)
		putList(x(0))
		setConstant(122)
		setValue(x(2))
		putList(x(1))
		setConstant(79)
		setValue(x(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1669> 6)
		move(y(2) x(0))
		inlineAssign(defines x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) variables x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(2) true putEnv true 1) 0)
		endDefinition(289617)
lbl(289752)	definition(x(8) 289778 pid('CompilerStateClass,init/slow' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1670> 3)
		endDefinition(289752)
lbl(289778)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(289788)	definition(x(7) 289863 pid('CompilerStateClass,macroDefine/fast' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 4) <Q: 1671> [g(6) g(7)])
		allocateL2
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		inlineAt(defines x(3) cache)
		moveMoveXYYX(x(1) y(0) y(0) x(0))
		move(x(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 289832 289850)
		deAllocateL2
		return
lbl(289832)	inlineAt(defines x(0) cache)
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(defines x(1) cache)
		deAllocateL2
		return
lbl(289850)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(123)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(289788)
lbl(289863)	definition(x(8) 289889 pid('CompilerStateClass,macroDefine/slow' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1671> 3)
		endDefinition(289863)
lbl(289889)	putRecord('#' [1 2 fast] x(10))
		setConstant(macroDefine)
		setValue(x(8))
		setValue(x(7))
lbl(289899)	definition(x(7) 289959 pid('CompilerStateClass,macroUndef/fast' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 4) <Q: 1672> [g(6) g(7)])
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(3)])
		inlineAt(defines x(0) cache)
lbl(289923)	definition(x(1) 289941 pid('' 2 pos('./compiler/CompilerClass.oz' 129 30) nil 4) unit [x(3)])
		move(g(0) x(2))
		callBI('\\=' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(289923)
lbl(289941)	createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(defines x(0) cache)
		deAllocateL1
		return
		endDefinition(289899)
lbl(289959)	definition(x(8) 289985 pid('CompilerStateClass,macroUndef/slow' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1672> 3)
		endDefinition(289959)
lbl(289985)	putRecord('#' [1 2 fast] x(11))
		setConstant(macroUndef)
		setValue(x(8))
		setValue(x(7))
lbl(289995)	definition(x(7) 290012 pid('CompilerStateClass,getDefines/fast' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 2) <Q: 1673> nil)
		inlineAt(defines x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(289995)
lbl(290012)	definition(x(8) 290038 pid('CompilerStateClass,getDefines/slow' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1673> 3)
		endDefinition(290012)
lbl(290038)	putRecord('#' [1 2 fast] x(12))
		setConstant(getDefines)
		setValue(x(8))
		setValue(x(7))
lbl(290048)	definition(x(7) 290065 pid('CompilerStateClass,on/fast' 2 pos('./compiler/CompilerClass.oz' 135 6) nil 3) <Q: 1674> [y(11) g(3)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(290048)
lbl(290065)	definition(x(8) 290100 pid('CompilerStateClass,on/slow' 1 pos('./compiler/CompilerClass.oz' 135 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1674> 5)
		endDefinition(290065)
lbl(290100)	putRecord('#' [1 2 fast] x(13))
		setConstant(on)
		setValue(x(8))
		setValue(x(7))
lbl(290110)	definition(x(7) 290127 pid('CompilerStateClass,off/fast' 2 pos('./compiler/CompilerClass.oz' 138 6) nil 3) <Q: 1675> [y(11) g(4)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(290110)
lbl(290127)	definition(x(8) 290162 pid('CompilerStateClass,off/slow' 1 pos('./compiler/CompilerClass.oz' 138 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1675> 5)
		endDefinition(290127)
lbl(290162)	putRecord('#' [1 2 fast] x(14))
		setConstant(off)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 3 x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(290182)	definition(x(8) 290540 pid('CompilerStateClass,setSwitch' 1 pos('./compiler/CompilerClass.oz' 141 6) nil 9) unit [x(7)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariable(y(3))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 290238)
		inlineDot(x(0) 3 x(3) cache)
		unify(x(3) y(3))
		branch(290241)
lbl(290238)	getLiteral(unit y(3))
lbl(290241)	match(y(1) ht(290385 [onScalar(verbose 290244) onScalar(debuginfo 290304)]))
lbl(290244)	inlineAt(switches x(0) cache)
		putRecord(switches [compilerpasses showinsert] x(1))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(compilerpasses)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(showinsert)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(290304)	inlineAt(switches x(0) cache)
		putRecord(switches [debuginfocontrol debuginfovarnames runwithdebugger] x(1))
		setValue(y(2))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(runwithdebugger)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(290385)	inlineAt(switches x(0) cache)
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 290433)
		inlineAt(switches x(0) cache)
		move(y(2) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		inlineAssign(switches x(3) cache)
		inlineAt(wrapper x(3) cache)
		putRecord(switch 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(3) 1 cache)
lbl(290433)	testLiteral(y(3) unit 290507)
		inlineAt(reporter x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		putRecord(setSwitch 2 x(8))
		setValue(y(1))
		setValue(y(2))
		putRecord(oz 1 x(7))
		setValue(x(8))
		putRecord(hint [l m] x(6))
		setConstant('Query')
		setValue(x(7))
		putList(x(2))
		setValue(x(6))
		setConstant(nil)
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(3))
		sendMsg(error x(5) [abort coord items kind msg] cache)
		inlineAt(reporter x(0) cache)
		deAllocateL4
		tailSendMsg(logReject x(0) 0 cache)
lbl(290507)	inlineAt(reporter x(4) cache)
		putRecord('#' 3 x(3))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler directive error' x(2))
		deAllocateL4
		tailSendMsg(error x(4) [abort coord kind msg] cache)
		endDefinition(290182)
lbl(290540)	putList(x(7))
		setConstant(setSwitch)
		setValue(x(8))
lbl(290546)	definition(x(8) 290566 pid('CompilerStateClass,getSwitch/fast' 2 pos('./compiler/CompilerClass.oz' 172 6) nil 4) <Q: 1676> nil)
		inlineAt(switches x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(290546)
lbl(290566)	definition(x(15) 290601 pid('CompilerStateClass,getSwitch/slow' 1 pos('./compiler/CompilerClass.oz' 172 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1676> 5)
		endDefinition(290566)
lbl(290601)	putRecord('#' [1 2 fast] x(16))
		setConstant(getSwitch)
		setValue(x(15))
		setValue(x(8))
lbl(290611)	definition(x(8) 290650 pid('CompilerStateClass,localSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 175 6) nil 3) <Q: 1677> nil)
		inlineAt(localSwitches x(0) cache)
		testLiteral(x(0) unit 290647)
lbl(290626)	inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(localSwitches x(2) cache)
lbl(290647)	return
		endDefinition(290611)
lbl(290650)	definition(x(15) 290664 pid('CompilerStateClass,localSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 175 6) nil 1) unit nil)
		getLiteral(localSwitches x(0))
		genFastCall(<Q: 1677> 1)
		endDefinition(290650)
lbl(290664)	putRecord('#' [1 2 fast] x(17))
		setConstant(localSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(290674)	definition(x(8) 290726 pid('CompilerStateClass,unlocalSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 181 6) nil 2) <Q: 1678> nil)
		inlineAt(localSwitches x(0) cache)
		match(x(0) ht(290711 [onScalar(unit 290688) onRecord('|' 2 290689)]))
lbl(290688)	return
lbl(290689)	getVarVar(x(0) x(1))
		inlineAssign(switches x(0) cache)
		inlineAssign(savedSwitches x(1) cache)
		putConstant(unit x(0))
		inlineAssign(localSwitches x(0) cache)
		return
lbl(290711)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(187)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(290674)
lbl(290726)	definition(x(15) 290740 pid('CompilerStateClass,unlocalSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 181 6) nil 1) unit nil)
		getLiteral(unlocalSwitches x(0))
		genFastCall(<Q: 1678> 1)
		endDefinition(290726)
lbl(290740)	putRecord('#' [1 2 fast] x(18))
		setConstant(unlocalSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(290750)	definition(x(8) 290780 pid('CompilerStateClass,pushSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 189 6) nil 3) <Q: 1679> nil)
		inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedSwitches x(2) cache)
		return
		endDefinition(290750)
lbl(290780)	definition(x(15) 290794 pid('CompilerStateClass,pushSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 189 6) nil 1) unit nil)
		getLiteral(pushSwitches x(0))
		genFastCall(<Q: 1679> 1)
		endDefinition(290780)
lbl(290794)	putRecord('#' [1 2 fast] x(19))
		setConstant(pushSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(290804)	definition(x(8) 290875 pid('CompilerStateClass,popSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 192 6) nil 3) <Q: 1680> nil)
		inlineAt(savedSwitches x(0) cache)
		match(x(0) ht(290860 [onScalar(nil 290818) onRecord('|' 2 290819)]))
lbl(290818)	return
lbl(290819)	allocateL1
		getVarVar(x(1) y(0))
		inlineAssign(switches x(1) cache)
		inlineAt(wrapper x(1) cache)
		inlineAt(switches x(2) cache)
		putRecord(switches 1 x(0))
		setValue(x(2))
		sendMsg(notify x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(savedSwitches x(0) cache)
		deAllocateL1
		return
lbl(290860)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(198)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(290804)
lbl(290875)	definition(x(15) 290889 pid('CompilerStateClass,popSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 192 6) nil 1) unit nil)
		getLiteral(popSwitches x(0))
		genFastCall(<Q: 1680> 1)
		endDefinition(290875)
lbl(290889)	putRecord('#' [1 2 fast] x(20))
		setConstant(popSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(290899)	definition(x(8) 290932 pid('CompilerStateClass,setMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) <Q: 1681> nil)
		inlineAssign(maxNumberOfErrors x(0) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(maxNumberOfErrors 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(290899)
lbl(290932)	definition(x(15) 290958 pid('CompilerStateClass,setMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1681> 3)
		endDefinition(290932)
lbl(290958)	putRecord('#' [1 2 fast] x(21))
		setConstant(setMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
lbl(290968)	definition(x(8) 290985 pid('CompilerStateClass,getMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 2) <Q: 1682> nil)
		inlineAt(maxNumberOfErrors x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(290968)
lbl(290985)	definition(x(15) 291011 pid('CompilerStateClass,getMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1682> 3)
		endDefinition(290985)
lbl(291011)	putRecord('#' [1 2 fast] x(22))
		setConstant(getMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 3 x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(291031)	definition(x(15) 291157 pid('CompilerStateClass,enter' 1 pos('./compiler/CompilerClass.oz' 209 6) nil 4) unit [x(8) y(11) g(8)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 291077)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(291077)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 291100)
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(3))
		branch(291103)
lbl(291100)	getLiteral(true y(3))
lbl(291103)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		genCall(gci(g(1) true <M: Enter> false 3) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(291031)
lbl(291157)	putList(x(8))
		setConstant(enter)
		setValue(x(15))
lbl(291163)	definition(x(15) 291239 pid('CompilerStateClass,enterMultiple/fast' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 4) <Q: 1683> [y(11) g(3) g(8)])
		allocateL2
		getSelf(x(2))
lbl(291172)	definition(x(1) 291193 pid('' 1 pos('./compiler/CompilerClass.oz' 214 13) nil 3) unit [x(2) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(2) x(2))
		createVariable(x(1))
		genCall(gci(g(1) true <M: Enter> true 3) 0)
		endDefinition(291172)
lbl(291193)	genFastCall(<P: 34> 4)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(291163)
lbl(291239)	definition(x(23) 291265 pid('CompilerStateClass,enterMultiple/slow' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1683> 3)
		endDefinition(291239)
lbl(291265)	putRecord('#' [1 2 fast] x(24))
		setConstant(enterMultiple)
		setValue(x(23))
		setValue(x(15))
lbl(291275)	definition(x(15) 291392 pid('CompilerStateClass,Enter/fast' 3 pos('./compiler/CompilerClass.oz' 217 6) nil 5) <Q: 1684> [g(9) y(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) variables x(0) cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		move(y(1) x(3))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		callBI('IsDet' [x(3)]#[x(0)])
		testBI('Not' [x(0)]#[x(4)] 291368)
lbl(291336)	testBool(y(2) 291368 291357)
lbl(291340)	move(g(1) x(0))
		inlineDot(x(0) nameVariable x(4) cache)
		move(y(1) x(0))
		call(x(4) 2)
		branch(291368)
lbl(291357)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(221)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291368)	putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(291275)
lbl(291392)	definition(x(23) 291433 pid('CompilerStateClass,Enter/slow' 1 pos('./compiler/CompilerClass.oz' 217 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1684> 7)
		endDefinition(291392)
lbl(291433)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: Enter>)
		setValue(x(23))
		setValue(x(15))
lbl(291443)	definition(x(15) 291518 pid('CompilerStateClass,putEnv/fast' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 4) <Q: 1685> [g(10) y(11) g(8)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		getSelf(x(1))
		inlineDot(x(1) values x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		genCall(gci(g(1) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(291443)
lbl(291518)	definition(x(23) 291544 pid('CompilerStateClass,putEnv/slow' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1685> 3)
		endDefinition(291518)
lbl(291544)	putRecord('#' [1 2 fast] x(26))
		setConstant(putEnv)
		setValue(x(23))
		setValue(x(15))
lbl(291554)	definition(x(15) 291607 pid('CompilerStateClass,mergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 4) <Q: 1686> [y(11) g(8)])
		allocateL2
		genCall(gci(g(0) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(291554)
lbl(291607)	definition(x(23) 291633 pid('CompilerStateClass,mergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1686> 3)
		endDefinition(291607)
lbl(291633)	putRecord('#' [1 2 fast] x(27))
		setConstant(mergeEnv)
		setValue(x(23))
		setValue(x(15))
lbl(291643)	definition(x(15) 291711 pid('CompilerStateClass,MergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) <Q: 1687> [g(11) y(8) y(11) g(3)])
		getSelf(x(2))
lbl(291651)	definition(x(1) 291706 pid('' 2 pos('./compiler/CompilerClass.oz' 239 3) nil 6) unit [x(2) g(1) g(2) g(3)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		move(g(1) x(3))
		inlineDot(x(3) variable x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(1) 3 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(g(3) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: Enter> true 3) 0)
		endDefinition(291651)
lbl(291706)	genFastCall(<P: 175> 5)
		endDefinition(291643)
lbl(291711)	definition(x(23) 291737 pid('CompilerStateClass,MergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1687> 3)
		endDefinition(291711)
lbl(291737)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: MergeEnv>)
		setValue(x(23))
		setValue(x(15))
lbl(291747)	definition(x(15) 291813 pid('CompilerStateClass,annotateEnv/fast' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) <Q: 1688> [g(12)])
		getSelf(x(2))
lbl(291755)	definition(x(1) 291808 pid('' 1 pos('./compiler/CompilerClass.oz' 246 3) nil 3) unit [x(2) g(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(valToSubst x(1) 1 cache)
		endDefinition(291755)
lbl(291808)	genFastCall(<P: 34> 5)
		endDefinition(291747)
lbl(291813)	definition(x(23) 291839 pid('CompilerStateClass,annotateEnv/slow' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1688> 3)
		endDefinition(291813)
lbl(291839)	putRecord('#' [1 2 fast] x(29))
		setConstant(annotateEnv)
		setValue(x(23))
		setValue(x(15))
lbl(291849)	definition(x(15) 291874 pid('CompilerStateClass,getEnv/fast' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 4) <Q: 1689> [g(8)])
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) x(2))
		putConstant(env x(0))
		genFastCall(<P: 108> 7)
		endDefinition(291849)
lbl(291874)	definition(x(23) 291900 pid('CompilerStateClass,getEnv/slow' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1689> 3)
		endDefinition(291874)
lbl(291900)	putRecord('#' [1 2 fast] x(30))
		setConstant(getEnv)
		setValue(x(23))
		setValue(x(15))
lbl(291910)	definition(x(15) 291936 pid('CompilerStateClass,lookupVariableInEnv/fast' 2 pos('./compiler/CompilerClass.oz' 255 6) nil 5) <Q: 1690> [g(13)])
		getSelf(x(2))
		inlineDot(x(2) variables x(2) cache)
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(291910)
lbl(291936)	definition(x(23) 291971 pid('CompilerStateClass,lookupVariableInEnv/slow' 1 pos('./compiler/CompilerClass.oz' 255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1690> 5)
		endDefinition(291936)
lbl(291971)	putRecord('#' [1 2 fast] x(31))
		setConstant(lookupVariableInEnv)
		setValue(x(23))
		setValue(x(15))
lbl(291981)	definition(x(15) 292091 pid('CompilerStateClass,lookupInEnv' 1 pos('./compiler/CompilerClass.oz' 258 6) nil 9) unit [g(14) g(12)])
		putConstant(2 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		testBI('Dictionary.member' [x(3) x(1)]#[x(4)] 292035)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(292035)	inlineAt(reporter x(4) cache)
		putRecord(oz 1 x(5))
		setValue(x(1))
		putRecord('#' 2 x(3))
		setConstant('undeclared variable ')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(0))
		putRecord(hint [l m] x(7))
		setConstant('Query')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		tailSendMsg(error x(4) [abort items kind msg] cache)
		endDefinition(291981)
lbl(292091)	putList(x(23))
		setConstant(lookupInEnv)
		setValue(x(15))
lbl(292097)	definition(x(15) 292169 pid('CompilerStateClass,removeFromEnv/fast' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 4) <Q: 1691> [g(15) g(8)])
		allocateL2
		getSelf(x(3))
		inlineDot(x(3) variables x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(292097)
lbl(292169)	definition(x(32) 292195 pid('CompilerStateClass,removeFromEnv/slow' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1691> 3)
		endDefinition(292169)
lbl(292195)	putRecord('#' [1 2 fast] x(33))
		setConstant(removeFromEnv)
		setValue(x(32))
		setValue(x(15))
lbl(292205)	definition(x(15) 292228 pid('CompilerStateClass,getVars/fast' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) <Q: 1692> [g(16)])
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(292205)
lbl(292228)	definition(x(32) 292254 pid('CompilerStateClass,getVars/slow' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1692> 3)
		endDefinition(292228)
lbl(292254)	putRecord('#' [1 2 fast] x(34))
		setConstant(getVars)
		setValue(x(32))
		setValue(x(15))
		putRecord('#' 26 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(8))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(23))
		setValue(x(33))
		setValue(x(34))
		move(y(11) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('CompilerStateClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(11))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ExecutingThread> <M: InterruptLock> <M: ParseFile> <M: ParseVirtualString> reporter wrapper] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(12))
		createVariable(y(13))
lbl(292367)	definition(x(7) 292474 pid('CompilerInternal,init/fast' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 4) <Q: 1693> [g(17) y(11) y(0) y(12) y(13)])
		allocateL2
		inlineAssign(wrapper x(0) cache)
		putConstant(builtin x(1))
		putConstant(3 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		putRecord(env ['`Builtin`' '`Compiler`'] x(1))
		setValue(x(3))
		setValue(x(0))
		move(g(0) x(2))
		callBI('Adjoin' [x(2) x(1)]#[x(3)])
		move(x(0) y(0))
		move(x(3) x(0))
		genCall(gci(g(1) true init false 1) 0)
		move(g(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		inlineAssign(reporter x(0) cache)
		move(g(3) x(0))
		inlineAssign(<M: ParseFile> x(0) cache)
		move(g(4) x(1))
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		putConstant(unit x(2))
		inlineAssign(<M: ExecutingThread> x(2) cache)
		callBI('NewLock' nil#[x(2)])
		inlineAssign(<M: InterruptLock> x(2) cache)
		deAllocateL2
		return
		endDefinition(292367)
lbl(292474)	definition(x(8) 292500 pid('CompilerInternal,init/slow' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1693> 3)
		endDefinition(292474)
lbl(292500)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(292510)	definition(x(7) 292527 pid('CompilerInternal,getReporter/fast' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 2) <Q: 1694> nil)
		inlineAt(reporter x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(292510)
lbl(292527)	definition(x(8) 292553 pid('CompilerInternal,getReporter/slow' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1694> 3)
		endDefinition(292527)
lbl(292553)	putRecord('#' [1 2 fast] x(10))
		setConstant(getReporter)
		setValue(x(8))
		setValue(x(7))
lbl(292563)	definition(x(7) 292677 pid('CompilerInternal,notifyOne/fast' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 4) <Q: 1695> [y(1) g(8)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putRecord('#' 3 x(1))
		setConstant('Mozart Compiler ')
		setValue(y(1))
		setConstant(' playing Oz 3\n\n')
		putRecord(info 1 x(0))
		setValue(x(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(switches x(3) cache)
		putRecord(switches 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(maxNumberOfErrors x(3) cache)
		putRecord(maxNumberOfErrors 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		move(x(3) x(1))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(292563)
lbl(292677)	definition(x(8) 292703 pid('CompilerInternal,notifyOne/slow' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1695> 3)
		endDefinition(292677)
lbl(292703)	putRecord('#' [1 2 fast] x(11))
		setConstant(notifyOne)
		setValue(x(8))
		setValue(x(7))
lbl(292713)	definition(x(7) 292744 pid('CompilerInternal,ping/fast' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 2) <Q: 1696> nil)
		allocateL1
		inlineAt(wrapper x(1) cache)
		move(x(0) y(0))
		putConstant(pong x(0))
		sendMsg(notify x(1) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(292713)
lbl(292744)	definition(x(8) 292770 pid('CompilerInternal,ping/slow' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1696> 3)
		endDefinition(292744)
lbl(292770)	putRecord('#' [1 2 fast] x(12))
		setConstant(ping)
		setValue(x(8))
		setValue(x(7))
lbl(292780)	definition(x(7) 292799 pid('CompilerInternal,setFrontEnd/fast' 2 pos('./compiler/CompilerClass.oz' 345 6) nil 2) <Q: 1697> nil)
		inlineAssign(<M: ParseFile> x(0) cache)
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		return
		endDefinition(292780)
lbl(292799)	definition(x(8) 292834 pid('CompilerInternal,setFrontEnd/slow' 1 pos('./compiler/CompilerClass.oz' 345 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1697> 5)
		endDefinition(292799)
lbl(292834)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFrontEnd)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(292846)	definition(x(7) 292913 pid('CompilerInternal,feedFile/fast' 2 pos('./compiler/CompilerClass.oz' 349 6) nil 4) <Q: 1698> [y(0)])
		getSelf(x(2))
lbl(292854)	definition(x(3) 292905 pid('' 0 pos('./compiler/CompilerClass.oz' 351 14) nil 3) unit [x(2) x(0) x(1) g(0)])
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		putRecord('#' 3 x(2))
		setConstant('%%% feeding file ')
		setValue(g(1))
		setConstant('\n')
		move(x(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		inlineAt(<M: ParseFile> x(0) cache)
		move(g(1) x(1))
		move(g(2) x(2))
		genCall(gci(g(3) true <M: Feed> true 3) 0)
		endDefinition(292854)
lbl(292905)	move(x(3) x(0))
		genCall(gci(g(0) true <M: CatchResult> true 1) 0)
		endDefinition(292846)
lbl(292913)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(292921)	definition(x(14) 292983 pid('CompilerInternal,feedFile/slow' 1 pos('./compiler/CompilerClass.oz' 349 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 292969)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(292972)
lbl(292969)	getLiteral('return' y(2))
lbl(292972)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1698> 5)
		endDefinition(292921)
lbl(292983)	putRecord(feedFile 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(15))
		setConstant(feedFile)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(293003)	definition(x(7) 293104 pid('CompilerInternal,feedVirtualString/fast' 2 pos('./compiler/CompilerClass.oz' 356 6) nil 4) <Q: 1699> [y(11) y(0)])
		getSelf(x(2))
lbl(293011)	definition(x(3) 293096 pid('' 0 pos('./compiler/CompilerClass.oz' 358 14) nil 3) unit [x(2) g(0) x(0) x(1) g(1)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		putConstant(echoqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 293052 293068)
		inlineAt(reporter x(1) cache)
		move(g(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(293079)
lbl(293052)	inlineAt(reporter x(1) cache)
		putConstant('%%% feeding virtual string\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(293079)
lbl(293068)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293079)	inlineAt(<M: ParseVirtualString> x(0) cache)
		move(g(2) x(1))
		move(g(3) x(2))
		deAllocateL1
		genCall(gci(g(4) true <M: Feed> true 3) 0)
		endDefinition(293011)
lbl(293096)	move(x(3) x(0))
		genCall(gci(g(1) true <M: CatchResult> true 1) 0)
		endDefinition(293003)
lbl(293104)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(293112)	definition(x(14) 293174 pid('CompilerInternal,feedVirtualString/slow' 1 pos('./compiler/CompilerClass.oz' 356 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 293160)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(293163)
lbl(293160)	getLiteral('return' y(2))
lbl(293163)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1699> 5)
		endDefinition(293112)
lbl(293174)	putRecord(feedVirtualString 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(16))
		setConstant(feedVirtualString)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(293194)	definition(x(7) 293294 pid('CompilerInternal,CatchResult/fast' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 2) <Q: 1700> nil)
		allocateL1
		move(x(0) y(0))
		exHandler(293275)
		match(x(0) ht(293272 [onScalar(tooManyErrors 293209) onScalar(rejected 293224) onScalar(aborted 293236) onScalar(crashed 293248) onScalar(<M: InterruptException> 293260)]))
lbl(293209)	inlineAt(reporter x(1) cache)
		putConstant('%** Too many errors, aborting compilation\n' x(0))
		deAllocateL1
		tailSendMsg(userInfo x(1) 1 cache)
lbl(293224)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logReject x(0) 0 cache)
lbl(293236)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logAbort x(0) 0 cache)
lbl(293248)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logCrash x(0) 0 cache)
lbl(293260)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logInterrupt x(0) 0 cache)
lbl(293272)	callBI('Exception.raise' [x(0)]#nil)
lbl(293275)	call(y(0) 0)
		inlineAt(reporter x(0) cache)
		sendMsg(logAccept x(0) 0 cache)
		popEx
		deAllocateL1
		return
		endDefinition(293194)
lbl(293294)	definition(x(8) 293320 pid('CompilerInternal,CatchResult/slow' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1700> 3)
		endDefinition(293294)
lbl(293320)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CatchResult>)
		setValue(x(8))
		setValue(x(7))
lbl(293330)	definition(x(7) 293793 pid('CompilerInternal,Feed/fast' 3 pos('./compiler/CompilerClass.oz' 383 6) nil 6) <Q: 1701> [g(18) y(11) y(12) y(13) y(0) g(4) y(8) y(9)])
		allocateL5
		callBI('Thread.this' nil#[x(3)])
		inlineAssign(<M: ExecutingThread> x(3) cache)
		inlineAt(reporter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		sendMsg(clearErrors x(3) 0 cache)
		createVariable(y(3))
		exHandler(293376)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(293771)
lbl(293376)	inlineAt(reporter x(1) cache)
		putConstant('parsing ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		getSelf(x(0))
		createVariable(x(1))
lbl(293394)	definition(x(2) 293460 pid('DoParse' 0 pos('./compiler/CompilerClass.oz' 388 5) nil 5) unit [x(0) g(1) y(0) y(1) x(1)])
		allocateL3
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		getSelf(x(2))
lbl(293413)	definition(x(3) 293429 pid('' 2 pos('./compiler/CompilerClass.oz' 390 6) nil 3) unit [x(2) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true getSwitch true 2) 0)
		endDefinition(293413)
lbl(293429)	moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(1) true getDefines false 1) 0)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		move(g(4) x(4))
		deAllocateL3
		tailCall(g(2) 5)
		endDefinition(293394)
lbl(293460)	moveMoveXYXY(x(1) y(1) x(2) y(4))
		move(y(0) x(0))
		move(g(2) x(3))
		testBI('==' [x(0) x(3)]#[x(4)] 293480)
lbl(293475)	call(y(4) 0)
		branch(293496)
lbl(293480)	move(g(3) x(4))
		testBI('\\=' [x(0) x(4)]#[x(5)] 293475)
lbl(293487)	move(y(4) x(0))
		move(g(5) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
lbl(293496)	inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 293531 293520)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(293520)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(401)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293531)	putConstant(unnest x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(4) true getSwitch false 2) 0)
		testBool(y(0) 293767 293756)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		createVariable(y(4))
		testBool(y(0) 293625 293735)
		move(g(6) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`runTimeDict`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		callBI('NewDictionary' nil#[x(1)])
		move(y(0) x(0))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(7) x(0))
		inlineDot(x(0) joinQueries x(3) cache)
		inlineAt(reporter x(1) cache)
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		call(x(3) 3)
		branch(293746)
lbl(293625)	putConstant(expression x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 293719 293724)
		testLiteral(y(1) nil 293647)
lbl(293642)	getLiteral(nil y(4))
		branch(293746)
lbl(293647)	move(g(6) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`result`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		move(y(2) x(0))
		putConstant(result x(3))
		createVariable(x(1))
		callBI('CondSelect' [x(0) x(3) x(1)]#[x(4)])
		move(y(0) x(0))
		move(x(4) x(1))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(7) x(0))
		inlineDot(x(0) makeExpressionQuery x(2) cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		call(x(2) 2)
		branch(293746)
lbl(293719)	unify(y(4) y(1))
		branch(293746)
lbl(293724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(410)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293735)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(405)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293746)	moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(4) true <M: FeedSub> false 2) 0)
		branch(293767)
lbl(293756)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293767)	getLiteral(unit y(3))
		popEx
lbl(293771)	putConstant(unit x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testRecord(y(3) ex 1 293789)
lbl(293784)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(293789)	deAllocateL5
		return
		endDefinition(293330)
lbl(293793)	definition(x(8) 293834 pid('CompilerInternal,Feed/slow' 1 pos('./compiler/CompilerClass.oz' 383 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1701> 7)
		endDefinition(293793)
lbl(293834)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: Feed>)
		setValue(x(8))
		setValue(x(7))
lbl(293844)	definition(x(7) 294026 pid('CompilerInternal,FeedSub/fast' 2 pos('./compiler/CompilerClass.oz' 429 6) nil 5) <Q: 1702> [g(18) g(19) y(0) y(11) g(3)])
		allocateL1
		callBI('Thread.this' nil#[x(2)])
		getSelf(x(3))
lbl(293856)	definition(x(4) 293978 pid('' 0 pos('./compiler/CompilerClass.oz' 433 16) nil 3) unit [x(3) g(1) x(2) g(2) x(0) g(3)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		createVariable(y(0))
		exHandler(293880)
		getRecord(ex 1 y(0))
		unifyValue(x(0))
		branch(293961)
lbl(293880)	exHandler(293932)
		match(x(0) ht(293929 [onScalar(tooManyErrors 293885) onScalar(rejected 293896) onScalar(aborted 293907) onScalar(crashed 293918)]))
lbl(293885)	move(g(2) x(0))
		putConstant(tooManyErrors x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293957)
lbl(293896)	move(g(2) x(0))
		putConstant(rejected x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293957)
lbl(293907)	move(g(2) x(0))
		putConstant(aborted x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293957)
lbl(293918)	move(g(2) x(0))
		putConstant(crashed x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293957)
lbl(293929)	callBI('Exception.raise' [x(0)]#nil)
lbl(293932)	getSelf(x(2))
lbl(293934)	definition(x(1) 293950 pid('' 1 pos('./compiler/CompilerClass.oz' 436 9) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: CompileQuery> true 1) 0)
		endDefinition(293934)
lbl(293950)	move(g(4) x(0))
		genFastCall(<P: 34> 4)
		popEx
lbl(293957)	getLiteral(unit y(0))
		popEx
lbl(293961)	genCall(gci(g(5) true unlocalSwitches false 0) 0)
		testRecord(y(0) ex 1 293974)
lbl(293969)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(293974)	deAllocateL1
		return
		endDefinition(293856)
lbl(293978)	move(x(4) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 294011 294013)
		putConstant(rejected x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(294011)	deAllocateL1
		return
lbl(294013)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(451)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(293844)
lbl(294026)	definition(x(8) 294061 pid('CompilerInternal,FeedSub/slow' 1 pos('./compiler/CompilerClass.oz' 429 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1702> 5)
		endDefinition(294026)
lbl(294061)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: FeedSub>)
		setValue(x(8))
		setValue(x(7))
lbl(294071)	definition(x(7) 296032 pid('CompilerInternal,CompileQuery/fast' 1 pos('./compiler/CompilerClass.oz' 455 6) nil 11) <Q: 1703> [y(11) y(9) y(10) g(20) y(0) y(5) y(1) g(18) g(4)])
		match(x(0) ht(294116 [onScalar(dirLocalSwitches 294080) onScalar(dirPushSwitches 294083) onScalar(dirPopSwitches 294086) onRecord(dirSwitch 1 294089) onRecord(fSynTopLevelProductionTemplates 1 294099)]))
lbl(294080)	genCall(gci(g(0) true localSwitches true 0) 0)
lbl(294083)	genCall(gci(g(0) true pushSwitches true 0) 0)
lbl(294086)	genCall(gci(g(0) true popSwitches true 0) 0)
lbl(294089)	getVariable(x(2))
		move(x(2) x(0))
		getSelf(x(1))
		genFastCall(<P: 34> 5)
lbl(294099)	inlineAt(reporter x(2) cache)
		putConstant('bootstrap compiler restriction' x(0))
		putConstant('Gump definitions not supported' x(1))
		tailSendMsg(error x(2) [kind msg] cache)
lbl(294116)	allocateL8
		move(x(0) y(0))
		testRecord(y(0) fDeclare 3 294143)
lbl(294125)	getVoid(2)
		getVariable(x(1))
		inlineAt(reporter x(2) cache)
		move(x(1) x(0))
		sendMsg(logDeclare x(2) 1 cache)
lbl(294143)	inlineAt(reporter x(1) cache)
		putConstant('transforming into graph representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) unnestQuery x(7) cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(3))
		getSelf(x(0))
		getSelf(x(2))
		createVariableMove(y(1) x(4))
		createVariableMove(y(2) x(5))
		createVariableMove(y(3) x(6))
		call(x(7) 7)
		getSelf(x(2))
		createVariable(x(3))
lbl(294194)	definition(x(0) 294262 pid('AnnotateGlobalVars' 0 pos('./compiler/CompilerClass.oz' 480 8) nil 3) unit [x(2) x(3) y(2)])
		move(g(0) x(0))
		setSelf(x(0))
		move(g(1) x(1))
		testBI('IsFree' [x(1)]#[x(2)] 294259)
		inlineAt(reporter x(2) cache)
		putConstant('determining nonlocal variables ...' x(0))
		sendMsg(logSubPhase x(2) 1 cache)
lbl(294226)	definition(x(1) 294250 pid('' 1 pos('./compiler/CompilerClass.oz' 485 8) nil 4) unit nil)
		move(x(0) x(3))
		putConstant(nil x(0))
		createVariable(x(1))
		createVariable(x(2))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(294226)
lbl(294250)	move(g(2) x(0))
		genFastCall(<P: 34> 4)
		getLiteral(unit g(1))
lbl(294259)	return
		endDefinition(294194)
lbl(294262)	move(x(0) y(0))
		putConstant(warnredecl x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 294458 294447)
		getSelf(x(2))
lbl(294280)	definition(x(1) 294439 pid('' 1 pos('./compiler/CompilerClass.oz' 492 2) nil 6) unit [x(2) g(0)])
		allocateL5
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true lookupVariableInEnv false 2) 0)
		testLiteral(y(2) undeclared 294319)
lbl(294317)	deAllocateL5
		return
lbl(294319)	createVariableMove(y(3) x(0))
		sendMsg(getCoord y(2) 1 cache)
		inlineAt(reporter x(1) cache)
		move(x(1) y(2))
		createVariable(y(4))
		testLiteral(y(3) unit 294371)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(line 1 x(0))
		unifyLiteral('previously declared via putEnv')
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
		move(x(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		branch(294407)
lbl(294371)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(2))
		unifyLiteral(unit)
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(line 1 x(4))
		unifyLiteral('previous declaration was')
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
		sendMsg(getCoord y(0) 1 cache)
lbl(294407)	putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('redeclaring top-level variable ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant(warning x(1))
		move(y(2) x(3))
		deAllocateL5
		tailSendMsg(warn x(3) [items kind msg] cache)
		endDefinition(294280)
lbl(294439)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(294458)
lbl(294447)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294458)	inlineAt(reporter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(4) 294493 294482)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(294482)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(511)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294493)	putConstant(staticanalysis x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 294588 294577)
		inlineAt(reporter x(1) cache)
		putConstant('static analysis ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(y(3) x(0))
		genCall(gci(g(0) true annotateEnv false 1) 0)
		call(y(0) 0)
		inlineAt(reporter x(1) cache)
		putConstant('value propagation ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		testList(y(2) 294564)
lbl(294546)	getVarVar(x(3) x(2))
		inlineAt(reporter x(0) cache)
		getSelf(x(1))
		sendMsg(staticAnalysis x(3) 3 cache)
		branch(294588)
lbl(294564)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(521)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294577)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(514)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294588)	inlineAt(reporter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(3) 294623 294612)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(294612)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(523)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294623)	putConstant(warnunused x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 294716 294705)
		inlineAt(reporter x(1) cache)
		putConstant('classifying variable occurrences ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		putConstant(warnunusedformals x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		getSelf(x(2))
lbl(294664)	definition(x(1) 294697 pid('' 1 pos('./compiler/CompilerClass.oz' 530 19) nil 4) unit [x(2) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(markFirst x(3) 2 cache)
		endDefinition(294664)
lbl(294697)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		branch(294716)
lbl(294705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294716)	putConstant(showdeclares x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 294903 294892)
lbl(294729)	move(y(1) x(0))
		putConstant(nil x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(3))
		testBool(y(3) 294903 294892)
lbl(294745)	inlineAt(reporter x(1) cache)
		putConstant('Declared variables:\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
lbl(294759)	definition(x(1) 294807 pid('' 3 pos('./compiler/CompilerClass.oz' 537 3) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(294759)
lbl(294807)	move(y(1) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 44> 6)
		getSelf(x(2))
lbl(294818)	definition(x(1) 294884 pid('' 1 pos('./compiler/CompilerClass.oz' 540 2) nil 3) unit [x(2)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(outputDebugType y(0) 1 cache)
		putRecord('#' 5 x(0))
		setConstant('  ')
		setValue(y(2))
		setConstant(': ')
		setValue(y(3))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(userInfo x(1) 1 cache)
		endDefinition(294818)
lbl(294884)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(294903)
lbl(294892)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(532)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294903)	putConstant(core x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 295206 295195)
		inlineAt(reporter x(1) cache)
		putConstant('writing core representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		putRecord(debug [debugType debugValue realcore] y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(x(1))
		putConstant(realcore x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(5) x(1))
		putConstant(debugvalue x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(4) x(1))
		putConstant(debugtype x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(3) x(0))
		putConstant(realcore x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(format 1 x(6))
		setConstant(break)
		putRecord(list 2 x(4))
		setVariable(x(5))
		setValue(x(6))
		putRecord('#' 2 x(1))
		setVariable(x(2))
		setValue(x(4))
		moveMoveXYXY(x(1) y(4) x(5) y(5))
		testLiteral(y(1) nil 295012)
lbl(295007)	getLiteral(nil x(2))
		branch(295129)
lbl(295012)	definition(x(4) 295032 pid('' 2 pos('./compiler/CompilerClass.oz' 557 9) nil 3) unit [x(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(295012)
lbl(295032)	moveMoveXYYX(x(2) y(6) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 6 y(6))
		unifyLiteral('declare')
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyLiteral('in')
		unifyVariable(x(3))
		getRecord(format 1 x(0))
		unifyVariable(x(4))
		getRecord(glue 1 x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(list 2 x(1))
		unifyValVar(y(7) x(6))
		getRecord(format 1 x(6))
		unifyVariable(x(7))
		getRecord(glue 1 x(7))
		unifyVariable(x(8))
		getList(x(8))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(2))
		unifyVariable(x(9))
		getRecord(glue 1 x(9))
		unifyVariable(x(10))
		getList(x(10))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(3))
		unifyLiteral(break)
lbl(295129)	definition(x(1) 295149 pid('' 2 pos('./compiler/CompilerClass.oz' 562 19) nil 3) unit [y(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(295129)
lbl(295149)	moveMoveYXYX(y(2) x(0) y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(3) y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1649> 4)
		putRecord('#' 2 x(2))
		setValue(y(5))
		setConstant('\n')
		putConstant('Oz Compiler: Core Output' x(0))
		putConstant('.ozi' x(1))
		sendMsg(displaySource y(3) 3 cache)
		branch(295206)
lbl(295195)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295206)	putConstant(codegen x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 296017 296019)
		inlineAt(reporter x(1) cache)
		putConstant('generating code ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true getVars false 1) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(1) x(4))
		getSelf(x(1))
		createVariableMove(y(5) x(5))
		createVariableMove(y(6) x(6))
		sendMsg(startCodeGen y(0) 7 cache)
		inlineAt(reporter x(1) cache)
		putConstant('assembling ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) assemble x(1) cache)
		move(x(1) y(0))
		putConstant(profile x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putRecord(switches [debuginfocontrol peephole profile verify] x(1))
		setValue(y(3))
		setConstant(true)
		setValue(y(2))
		setConstant(false)
		move(y(6) x(0))
		createVariableMove(y(2) x(2))
		call(y(0) 3)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 295513 296006)
		testLiteral(y(5) nil 295411)
lbl(295367)	inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		deAllocateL8
		tailSendMsg(displaySource x(3) 3 cache)
lbl(295411)	putList(x(0))
		setConstant('`runTimeDict`')
		setConstant(nil)
		move(y(5) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 295367)
lbl(295424)	getList(y(5))
		unifyVariable(x(4))
		unifyVariable(x(0))
		inlineAt(reporter x(1) cache)
lbl(295435)	definition(x(5) 295460 pid('' 3 pos('./compiler/CompilerClass.oz' 597 13) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral(' ')
		unifyValue(x(1))
		getRecord(pn 1 x(2))
		unifyValue(x(0))
		return
		endDefinition(295435)
lbl(295460)	putRecord(pn 1 x(2))
		setValue(x(4))
		move(x(1) y(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
		putRecord('#' 2 x(2))
		setConstant('No free variables allowed ')
		setConstant('when compiling for Ozma')
		putRecord(hint [l m] x(4))
		setConstant('Found')
		setValue(y(1))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('Ozma error' x(1))
		move(y(0) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [items kind msg] cache)
lbl(295513)	putConstant(outputcode x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 295661 295650)
		inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		putRecord('#' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(2) y(3))
		testLiteral(y(5) nil 295562)
lbl(295557)	getLiteral('%% No Global Registers\n' x(1))
		branch(295619)
lbl(295562)	definition(x(4) 295604 pid('' 4 pos('./compiler/CompilerClass.oz' 607 9) nil 5) unit nil)
		getRecord('#' 6 x(3))
		unifyValue(x(1))
		unifyLiteral('%%    g(')
		unifyVariable(x(3))
		unifyLiteral(') = ')
		unifyVariable(x(4))
		unifyLiteral('\n')
		inlineMinus1(x(0) x(1))
		unify(x(1) x(3))
		putRecord(pn 1 x(0))
		setValue(x(2))
		move(x(4) x(1))
		genFastCall(<Q: 1649> 5)
		endDefinition(295562)
lbl(295604)	move(y(5) x(0))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant('%% Assignment of Global Registers:\n' x(2))
		genFastCall(<P: 82> 8)
lbl(295619)	move(y(3) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		sendMsg(displaySource x(3) 3 cache)
		branch(295661)
lbl(295650)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(602)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295661)	putConstant(feedtoemulator x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 295993 295995)
		inlineAt(reporter x(1) cache)
		putConstant('loading ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		getSelf(x(1))
		createVariable(x(2))
		createVariable(y(0))
lbl(295694)	definition(x(0) 295755 pid('Proc' 0 pos('./compiler/CompilerClass.oz' 621 7) nil 4) unit [x(1) y(1) g(0) y(5) x(2) y(2) y(0)])
		move(g(0) x(0))
		setSelf(x(0))
		match(g(1) ht(295708 [onScalar(nil 295714)]))
lbl(295708)	move(g(1) x(0))
		genCall(gci(g(2) true enterMultiple false 1) 0)
lbl(295714)	getSelf(x(3))
lbl(295716)	definition(x(1) 295732 pid('' 2 pos('./compiler/CompilerClass.oz' 627 7) nil 3) unit [x(3) g(2)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true lookupInEnv true 2) 0)
		endDefinition(295716)
lbl(295732)	move(g(3) x(0))
		move(g(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(4) x(0))
		move(g(6) x(1))
		tailSendMsg(load g(5) 2 cache)
		endDefinition(295694)
lbl(295755)	genCall(gci(g(4) true <M: ExecuteUninterruptible> false 1) 0)
		putConstant(runwithdebugger x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		createVariable(y(2))
		testBool(y(1) 295801 295806)
lbl(295773)	definition(x(0) 295796 pid('P' 0 pos('./compiler/CompilerClass.oz' 635 3) nil 2) unit [g(5) y(0)])
		move(g(0) x(0))
		inlineDot(x(0) breakpoint x(1) cache)
		call(x(1) 0)
		tailCall(g(1) 0)
		endDefinition(295773)
lbl(295796)	unify(x(0) y(2))
		branch(295817)
lbl(295801)	unify(y(2) y(0))
		branch(295817)
lbl(295806)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(634)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295817)	putConstant(threadedqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 295953 295982)
		move(g(6) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		inlineAt(reporter x(1) cache)
		putConstant('executing in an independent thread ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(0) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		testBool(y(1) 295942 295931)
lbl(295881)	createVariableMove(y(1) x(0))
		sendMsg(getCompiler y(0) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(1) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(0))
		testBool(y(0) 295942 295931)
lbl(295908)	move(g(5) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(295942)
lbl(295931)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(644)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295942)	thread(295951)
		move(y(2) x(0))
		deAllocateL8
		tailCall(x(0) 0)
lbl(295951)	deAllocateL8
		return
lbl(295953)	inlineAt(reporter x(1) cache)
		putRecord('#' 2 x(0))
		setConstant('executing and waiting for ')
		setConstant('completion ...')
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(2) x(0))
		move(g(8) x(1))
		deAllocateL8
		genCall(gci(g(4) true <M: ExecProtected> true 2) 0)
lbl(295982)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(639)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295993)	deAllocateL8
		return
lbl(295995)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(616)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296006)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296017)	deAllocateL8
		return
lbl(296019)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(567)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(294071)
lbl(296032)	definition(x(8) 296058 pid('CompilerInternal,CompileQuery/slow' 1 pos('./compiler/CompilerClass.oz' 455 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1703> 3)
		endDefinition(296032)
lbl(296058)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: CompileQuery>)
		setValue(x(8))
		setValue(x(7))
lbl(296068)	definition(x(7) 296102 pid('CompilerInternal,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 669 6) nil 2) <Q: 1704> [g(19)])
		inlineAt(<M: ExecutingThread> x(0) cache)
		testLiteral(x(0) unit 296084)
lbl(296083)	return
lbl(296084)	inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(296099 x(1))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		return
lbl(296099)	return
		endDefinition(296068)
lbl(296102)	definition(x(8) 296116 pid('CompilerInternal,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 669 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1704> 1)
		endDefinition(296102)
lbl(296116)	putRecord('#' [1 2 fast] x(20))
		setConstant(interrupt)
		setValue(x(8))
		setValue(x(7))
lbl(296126)	definition(x(7) 296147 pid('CompilerInternal,ExecuteUninterruptible/fast' 1 pos('./compiler/CompilerClass.oz' 677 6) nil 2) <Q: 1705> nil)
		inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(296144 x(1))
		call(x(0) 0)
		return
lbl(296144)	return
		endDefinition(296126)
lbl(296147)	definition(x(8) 296173 pid('CompilerInternal,ExecuteUninterruptible/slow' 1 pos('./compiler/CompilerClass.oz' 677 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1705> 3)
		endDefinition(296147)
lbl(296173)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(8))
		setValue(x(7))
lbl(296183)	definition(x(7) 296559 pid('CompilerInternal,ExecProtected/fast' 2 pos('./compiler/CompilerClass.oz' 680 6) nil 5) <Q: 1706> [g(18) y(11) y(2) y(3) y(5) y(1) g(19)])
		allocateL7
		callBI('Thread.this' nil#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		createVariable(y(4))
		thread(296442)
		callBI('Thread.this' nil#[x(0)])
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testBool(y(1) 296278 296267)
lbl(296219)	putConstant(watchdog x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(5) 296278 296267)
lbl(296232)	move(g(2) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(3) x(1))
		callBI('Wait' [x(1)]#nil)
		move(g(4) x(2))
		inlineDot(x(2) setRaiseOnBlock x(3) cache)
		callBI('Thread.this' nil#[x(4)])
		move(x(4) x(0))
		putConstant(true x(1))
		call(x(3) 2)
		branch(296278)
lbl(296267)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296278)	move(g(5) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(5) x(2))
		call(x(3) 3)
		move(y(5) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBool(y(6) 296376 296365)
lbl(296315)	createVariableMove(y(6) x(0))
		sendMsg(getCompiler y(5) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(6) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(5))
		testBool(y(5) 296376 296365)
lbl(296342)	move(g(4) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(296376)
lbl(296365)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(701)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296376)	createVariable(y(5))
		exHandler(296388)
		getRecord(ex 1 y(5))
		unifyValue(x(0))
		branch(296419)
lbl(296388)	exHandler(296408)
		testLiteral(x(0) <M: InterruptException> 296405)
lbl(296394)	move(y(2) x(0))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(296415)
lbl(296405)	callBI('Exception.raise' [x(0)]#nil)
lbl(296408)	call(y(0) 0)
		getLiteral(true y(4))
		popEx
lbl(296415)	getLiteral(unit y(5))
		popEx
lbl(296419)	move(y(2) x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		getLiteral(true y(3))
		testRecord(y(5) ex 1 296440)
lbl(296435)	getVariable(x(1))
		callBI('Exception.raise' [x(1)]#nil)
lbl(296440)	deAllocateL7
		return
lbl(296442)	move(g(4) x(0))
		inlineDot(x(0) getRaiseOnBlock x(3) cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		call(x(3) 2)
		move(g(4) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		move(y(2) x(0))
		putConstant(false x(1))
		call(x(2) 2)
		move(y(3) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(4) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 296544 296546)
		createVariable(y(0))
		testBool(y(1) 296522 296527)
		getLiteral(crashed y(0))
		branch(296538)
lbl(296522)	getLiteral(aborted y(0))
		branch(296538)
lbl(296527)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(720)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296538)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(296544)	deAllocateL7
		return
lbl(296546)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(719)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(296183)
lbl(296559)	definition(x(8) 296594 pid('CompilerInternal,ExecProtected/slow' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1706> 5)
		endDefinition(296559)
lbl(296594)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ExecProtected>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 14 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('CompilerInternal' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(296648)	definition(x(7) 296712 pid('TypeCheck' 4 pos('./compiler/CompilerClass.oz' 725 3) nil 6) <Q: 1707> [g(21)])
		allocateL4
		callBI('.' [x(1) x(2)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(5))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		testBool(y(3) 296684 296699)
		deAllocateL4
		return
lbl(296684)	putRecord(compiler 4 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(296699)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(726)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(296648)
lbl(296712)	definition(x(7) 296752 pid('IsEnv' 2 pos('./compiler/CompilerClass.oz' 731 3) nil 5) <Q: 1708> [y(7)])
		testBI('IsRecord' [x(0)]#[x(2)] 296746)
		callBI('Arity' [x(0)]#[x(3)])
		move(g(0) x(0))
		inlineDot(x(0) isPrintName x(4) cache)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 35> 7)
lbl(296746)	getLiteral(false x(1))
		return
		endDefinition(296712)
lbl(296752)	definition(x(8) 296781 pid('IsProcedure5' 2 pos('./compiler/CompilerClass.oz' 735 3) nil 4) <Q: 1709> [g(22)])
		testBI('IsProcedure' [x(0)]#[x(2)] 296775)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(296775)	getLiteral(false x(1))
		return
		endDefinition(296752)
lbl(296781)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: CurrentQuery> <M: NextId> <M: QueriesHd> <M: QueriesTl> <M: Registered>] x(2))
		setConstant(unit)
		setConstant(1)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		putRecord('feat' [<M: Compiler> <M: QueueLock> <M: RegistrationLock>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(1))
lbl(296813)	definition(x(9) 296900 pid('CompilerEngine,init/fast' 0 pos('./compiler/CompilerClass.oz' 743 6) nil 3) <Q: 1710> [y(0) y(1)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		inlineAssign(<M: QueriesTl> x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		thread(296896)
		deAllocateL2
		genCall(gci(g(1) true <M: RunQueue> true 0) 0)
lbl(296896)	deAllocateL2
		return
		endDefinition(296813)
lbl(296900)	definition(x(10) 296914 pid('CompilerEngine,init/slow' 1 pos('./compiler/CompilerClass.oz' 743 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 1710> 1)
		endDefinition(296900)
lbl(296914)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
lbl(296924)	definition(x(9) 297086 pid('CompilerEngine,register/fast' 1 pos('./compiler/CompilerClass.oz' 758 6) nil 4) <Q: 1711> [g(21) y(1)])
		allocateL1
		move(x(0) y(0))
		testBI('IsPort' [x(0)]#[x(1)] 296940)
		branch(296951)
lbl(296940)	putRecord(compiler 2 x(1))
		setConstant(register)
		setValue(y(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(296951)	getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		lockThread(297082 x(0))
		inlineAt(<M: Registered> x(1) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(1))
		inlineAssign(<M: Registered> x(2) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(0) x(0))
		sendMsg(notifyOne x(1) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(297081 x(0))
		inlineAt(<M: CurrentQuery> x(0) cache)
		testLiteral(x(0) unit 297026)
lbl(297015)	move(y(0) x(0))
		putConstant(idle x(2))
		callBI('Send' [x(0) x(2)]#nil)
		branch(297069)
lbl(297026)	testRecord(x(0) '#' 2 297056)
lbl(297031)	getVarVar(x(0) x(1))
		move(y(0) x(2))
		putConstant(busy x(3))
		callBI('Send' [x(2) x(3)]#nil)
		putRecord(runQuery 2 x(3))
		setValue(x(0))
		setValue(x(1))
		callBI('Send' [x(2) x(3)]#nil)
		branch(297069)
lbl(297056)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(771)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(297069)	inlineAt(<M: QueriesHd> x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(1) true <M: NotifyQueue> false 2) 0)
		return
lbl(297081)	return
lbl(297082)	deAllocateL1
		return
		endDefinition(296924)
lbl(297086)	definition(x(10) 297112 pid('CompilerEngine,register/slow' 1 pos('./compiler/CompilerClass.oz' 758 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1711> 3)
		endDefinition(297086)
lbl(297112)	putRecord('#' [1 2 fast] x(12))
		setConstant(register)
		setValue(x(10))
		setValue(x(9))
lbl(297122)	definition(x(9) 297166 pid('CompilerEngine,NotifyQueue/fast' 2 pos('./compiler/CompilerClass.oz' 776 6) nil 5) <Q: 1712> [y(1)])
		testBI('IsDet' [x(0)]#[x(2)] 297163)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		putRecord(newQuery 2 x(0))
		setValue(x(3))
		setValue(x(4))
		callBI('Send' [x(1) x(0)]#nil)
		move(x(2) x(0))
		genCall(gci(g(0) true <M: NotifyQueue> true 2) 0)
lbl(297163)	return
		endDefinition(297122)
lbl(297166)	definition(x(10) 297201 pid('CompilerEngine,NotifyQueue/slow' 1 pos('./compiler/CompilerClass.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1712> 5)
		endDefinition(297166)
lbl(297201)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: NotifyQueue>)
		setValue(x(10))
		setValue(x(9))
lbl(297211)	definition(x(9) 297274 pid('CompilerEngine,unregister/fast' 1 pos('./compiler/CompilerClass.oz' 782 6) nil 4) <Q: 1713> nil)
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: RegistrationLock> x(1) cache)
		lockThread(297270 x(1))
		inlineAt(<M: Registered> x(3) cache)
lbl(297234)	definition(x(1) 297252 pid('' 2 pos('./compiler/CompilerClass.oz' 784 39) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(297234)
lbl(297252)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(<M: Registered> x(0) cache)
		return
lbl(297270)	deAllocateL1
		return
		endDefinition(297211)
lbl(297274)	definition(x(10) 297300 pid('CompilerEngine,unregister/slow' 1 pos('./compiler/CompilerClass.oz' 782 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1713> 3)
		endDefinition(297274)
lbl(297300)	putRecord('#' [1 2 fast] x(14))
		setConstant(unregister)
		setValue(x(10))
		setValue(x(9))
lbl(297310)	definition(x(9) 297357 pid('CompilerEngine,notify/fast' 1 pos('./compiler/CompilerClass.oz' 787 6) nil 3) <Q: 1714> nil)
		getSelf(x(2))
		inlineDot(x(2) <M: RegistrationLock> x(1) cache)
		lockThread(297354 x(1))
		inlineAt(<M: Registered> x(2) cache)
lbl(297332)	definition(x(1) 297347 pid('' 1 pos('./compiler/CompilerClass.oz' 789 25) nil 2) unit [x(0)])
		move(g(0) x(1))
		callBI('Send' [x(0) x(1)]#nil)
		return
		endDefinition(297332)
lbl(297347)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		return
lbl(297354)	return
		endDefinition(297310)
lbl(297357)	definition(x(10) 297383 pid('CompilerEngine,notify/slow' 1 pos('./compiler/CompilerClass.oz' 787 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1714> 3)
		endDefinition(297357)
lbl(297383)	putRecord('#' [1 2 fast] x(15))
		setConstant(notify)
		setValue(x(10))
		setValue(x(9))
lbl(297393)	definition(x(9) 297498 pid('CompilerEngine,enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 797 6) nil 4) <Q: 1715> [g(21) y(1)])
		match(x(0) ht(297493 [onScalar(nil 297402) onRecord('|' 2 297406)]))
lbl(297402)	getLiteral(nil x(1))
		return
lbl(297406)	allocateL3
		getVoid(1)
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 297431 297442)
		branch(297453)
lbl(297431)	putRecord(compiler 2 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(297442)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(799)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(297453)	getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(0) cache)
		lockThread(297491 x(0))
		getSelf(x(3))
lbl(297466)	definition(x(1) 297482 pid('' 2 pos('./compiler/CompilerClass.oz' 803 22) nil 3) unit [x(3) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(297466)
lbl(297482)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		genFastCall(<P: 29> 6)
		return
lbl(297491)	deAllocateL3
		return
lbl(297493)	genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(297393)
lbl(297498)	putRecord(messagePattern 2 x(10))
		setConstant(unit)
		setConstant(unit)
lbl(297506)	definition(x(16) 297563 pid('CompilerEngine,enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 797 6) nil 4) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 297552)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(297552)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1715> 5)
		endDefinition(297506)
lbl(297563)	putRecord(enqueue 2 x(10))
		setConstant(<U: ooRequiredArg>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(17))
		setConstant(enqueue)
		setValue(x(16))
		setValue(x(10))
		setValue(x(9))
lbl(297583)	definition(x(9) 298035 pid('CompilerEngine,Enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 811 6) nil 5) <Q: 1716> [g(23) g(24) g(25) g(26) y(7) x(7) x(8) g(27) g(21) y(1)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: QueueLock> x(2) cache)
		lockThread(298031 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(297959 [onScalar(pushSwitches 297970) onScalar(popSwitches 297970) onRecord(macroDefine 1 297609) onRecord(macroUndef 1 297626) onRecord(getDefines 1 297643) onRecord(getSwitch 2 297645) onRecord(setSwitch 2 297662) onRecord(getMaxNumberOfErrors 1 297694) onRecord(setMaxNumberOfErrors 1 297696) onRecord(addToEnv 2 297713) onRecord(lookupInEnv 2 297739) onRecord(removeFromEnv 1 297765) onRecord(putEnv 1 297791) onRecord(mergeEnv 1 297808) onRecord(getEnv 1 297825) onRecord(setFrontEnd 2 297827) onRecord(feedVirtualString 1 297859) onRecord(feedVirtualString 2 297876) onRecord(feedFile 1 297908) onRecord(feedFile 2 297925) onRecord(ping 1 297957)]))
lbl(297609)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297626)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297643)	branch(297970)
lbl(297645)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297662)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1707> 8)
		move(g(2) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(bool x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297694)	branch(297970)
lbl(297696)	move(g(3) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(int x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297713)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297739)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297765)	move(g(4) x(2))
		inlineDot(x(2) isPrintName x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297791)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297808)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297825)	branch(297970)
lbl(297827)	move(g(6) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1707> 8)
		move(g(6) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297859)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297876)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297908)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297925)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1707> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1707> 8)
		branch(297970)
lbl(297957)	branch(297970)
lbl(297959)	putRecord(compiler 2 x(2))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(297970)	inlineAt(<M: NextId> x(0) cache)
		unify(x(0) y(1))
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextId> x(1) cache)
		putRecord('#' 2 x(2))
		setValue(y(1))
		setValue(y(0))
		putList(x(1))
		setValue(x(2))
		setVariable(x(3))
		inlineAt(<M: QueriesTl> x(2) cache)
		unify(x(2) x(1))
		inlineAssign(<M: QueriesTl> x(3) cache)
		putRecord(newQuery 2 x(1))
		setValue(y(1))
		setValue(y(0))
		move(x(1) x(0))
		genCall(gci(g(9) true notify false 1) 0)
		return
lbl(298031)	deAllocateL2
		return
		endDefinition(297583)
lbl(298035)	definition(x(7) 298070 pid('CompilerEngine,Enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 811 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1716> 5)
		endDefinition(298035)
lbl(298070)	putRecord('#' [1 2 fast] x(8))
		setConstant(<M: Enqueue>)
		setValue(x(7))
		setValue(x(9))
lbl(298080)	definition(x(7) 298102 pid('CompilerEngine,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 863 6) nil 1) <Q: 1717> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Compiler> x(0) cache)
		tailSendMsg(interrupt x(0) 0 cache)
		endDefinition(298080)
lbl(298102)	definition(x(9) 298116 pid('CompilerEngine,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 863 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1717> 1)
		endDefinition(298102)
lbl(298116)	putRecord('#' [1 2 fast] x(10))
		setConstant(interrupt)
		setValue(x(9))
		setValue(x(7))
lbl(298126)	definition(x(7) 298174 pid('CompilerEngine,dequeue/fast' 1 pos('./compiler/CompilerClass.oz' 866 6) nil 4) <Q: 1718> [y(1)])
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(1) cache)
		lockThread(298170 x(1))
		inlineAt(<M: QueriesHd> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: Dequeue> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		return
lbl(298170)	deAllocateL1
		return
		endDefinition(298126)
lbl(298174)	definition(x(9) 298200 pid('CompilerEngine,dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 866 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1718> 3)
		endDefinition(298174)
lbl(298200)	putRecord('#' [1 2 fast] x(16))
		setConstant(dequeue)
		setValue(x(9))
		setValue(x(7))
lbl(298210)	definition(x(7) 298239 pid('CompilerEngine,clearQueue/fast' 0 pos('./compiler/CompilerClass.oz' 871 6) nil 2) <Q: 1719> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(298236 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		genCall(gci(g(0) true <M: ClearQueue> false 1) 0)
		return
lbl(298236)	return
		endDefinition(298210)
lbl(298239)	definition(x(9) 298253 pid('CompilerEngine,clearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 871 6) nil 1) unit nil)
		getLiteral(clearQueue x(0))
		genFastCall(<Q: 1719> 1)
		endDefinition(298239)
lbl(298253)	putRecord('#' [1 2 fast] x(18))
		setConstant(clearQueue)
		setValue(x(9))
		setValue(x(7))
lbl(298263)	definition(x(7) 298312 pid('CompilerEngine,ClearQueue/fast' 1 pos('./compiler/CompilerClass.oz' 876 6) nil 2) <Q: 1720> [y(1)])
		testBI('IsDet' [x(0)]#[x(1)] 298304)
		allocateL1
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(y(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVoid(1)
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: ClearQueue> true 1) 0)
lbl(298304)	inlineAssign(<M: QueriesHd> x(0) cache)
		return
		endDefinition(298263)
lbl(298312)	definition(x(9) 298338 pid('CompilerEngine,ClearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 876 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1720> 3)
		endDefinition(298312)
lbl(298338)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ClearQueue>)
		setValue(x(9))
		setValue(x(7))
lbl(298348)	definition(x(7) 298404 pid('CompilerEngine,Dequeue/fast' 3 pos('./compiler/CompilerClass.oz' 884 6) nil 6) <Q: 1721> [y(1)])
		testBI('IsDet' [x(0)]#[x(3)] 298398)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		testBI('==' [x(1) x(4)]#[x(5)] 298388)
		unify(x(2) x(3))
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify true 1) 0)
lbl(298388)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Dequeue> true 3) 0)
lbl(298398)	unify(x(2) x(0))
		return
		endDefinition(298348)
lbl(298404)	definition(x(9) 298445 pid('CompilerEngine,Dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 884 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1721> 7)
		endDefinition(298404)
lbl(298445)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: Dequeue>)
		setValue(x(9))
		setValue(x(7))
lbl(298455)	definition(x(7) 298767 pid('CompilerEngine,RunQueue/fast' 0 pos('./compiler/CompilerClass.oz' 900 6) nil 7) <Q: 1722> [y(1) y(3)])
		allocateL4
		inlineAt(<M: QueriesHd> x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 298491)
		putConstant(idle x(0))
		genCall(gci(g(0) true notify false 1) 0)
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('Wait' [x(0)]#nil)
		putConstant(busy x(0))
		genCall(gci(g(0) true notify false 1) 0)
lbl(298491)	exHandler(298695)
		testRecord(x(0) query 2 298692)
lbl(298498)	getVarVar(y(0) y(1))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(298537 x(0))
		putRecord(runQuery 2 x(0))
		setValue(y(0))
		setValue(y(1))
		genCall(gci(g(0) true notify false 1) 0)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(<M: CurrentQuery> x(0) cache)
		return
lbl(298537)	exHandler(298648)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getReporter x(1) 1 cache)
		putRecord('#' 2 x(3))
		setConstant('execution of query raised an exception ')
		setConstant('-- description follows')
		putRecord(oz 1 x(6))
		setValue(y(1))
		putRecord(hint [l m] x(5))
		setConstant('Query')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		sendMsg(error y(3) [abort items kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) formatExc x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		putConstant(footer x(1))
		putConstant(false x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(message 2 x(0))
		setValue(x(3))
		setConstant(unit)
		genCall(gci(g(0) true notify false 1) 0)
		sendMsg(logReject y(3) 0 cache)
		branch(298663)
lbl(298648)	getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		popEx
lbl(298663)	getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(298761 x(0))
		putConstant(unit x(1))
		inlineAssign(<M: CurrentQuery> x(1) cache)
		putRecord(removeQuery 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true notify false 1) 0)
		return
lbl(298692)	callBI('Exception.raise' [x(0)]#nil)
lbl(298695)	getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(298760 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 298759 298748)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineAssign(<M: QueriesHd> x(1) cache)
		putRecord(query 2 x(0))
		setValue(x(2))
		setValue(x(3))
		callBI('Exception.raise' [x(0)]#nil)
lbl(298748)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(909)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(298759)	return
lbl(298760)	popEx
lbl(298761)	deAllocateL4
		genCall(gci(g(0) true <M: RunQueue> true 0) 0)
		endDefinition(298455)
lbl(298767)	definition(x(9) 298781 pid('CompilerEngine,RunQueue/slow' 1 pos('./compiler/CompilerClass.oz' 900 6) nil 1) unit nil)
		getLiteral(<M: RunQueue> x(0))
		genFastCall(<Q: 1722> 1)
		endDefinition(298767)
lbl(298781)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RunQueue>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(17))
		setValue(x(8))
		setValue(x(10))
		setValue(x(16))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('CompilerEngine' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(6) x(0))
		inlineDot(x(0) file x(7) cache)
		inlineDot(x(0) virtualString x(8) cache)
		putList(x(15))
		setConstant(39)
		setConstant(nil)
		putList(x(14))
		setConstant(69)
		setValue(x(15))
		putList(x(13))
		setConstant(77)
		setValue(x(14))
		putList(x(12))
		setConstant(65)
		setValue(x(13))
		putList(x(11))
		setConstant(78)
		setValue(x(12))
		putList(x(10))
		setConstant(72)
		setValue(x(11))
		putList(x(6))
		setConstant(67)
		setValue(x(10))
		putList(x(5))
		setConstant(84)
		setValue(x(6))
		putList(x(4))
		setConstant(73)
		setValue(x(5))
		putList(x(3))
		setConstant(87)
		setValue(x(4))
		putList(x(2))
		setConstant(83)
		setValue(x(3))
		putList(x(1))
		setConstant(96)
		setValue(x(2))
		putList(x(26))
		setConstant(101)
		setConstant(nil)
		putList(x(25))
		setConstant(109)
		setValue(x(26))
		putList(x(24))
		setConstant(97)
		setValue(x(25))
		putList(x(23))
		setConstant(110)
		setValue(x(24))
		putList(x(22))
		setConstant(32)
		setValue(x(23))
		putList(x(21))
		setConstant(104)
		setValue(x(22))
		putList(x(20))
		setConstant(99)
		setValue(x(21))
		putList(x(19))
		setConstant(116)
		setValue(x(20))
		putList(x(18))
		setConstant(105)
		setValue(x(19))
		putList(x(17))
		setConstant(119)
		setValue(x(18))
		putList(x(16))
		setConstant(115)
		setValue(x(17))
		putRecord('#' 2 x(0))
		setValue(x(1))
		setValue(x(16))
		putList(x(36))
		setConstant(39)
		setConstant(nil)
		putList(x(35))
		setConstant(77)
		setValue(x(36))
		putList(x(34))
		setConstant(79)
		setValue(x(35))
		putList(x(33))
		setConstant(84)
		setValue(x(34))
		putList(x(32))
		setConstant(65)
		setValue(x(33))
		putList(x(31))
		setConstant(90)
		setValue(x(32))
		putList(x(30))
		setConstant(79)
		setValue(x(31))
		putList(x(29))
		setConstant(96)
		setValue(x(30))
		putList(x(40))
		setConstant(109)
		setConstant(nil)
		putList(x(39))
		setConstant(111)
		setValue(x(40))
		putList(x(38))
		setConstant(116)
		setValue(x(39))
		putList(x(37))
		setConstant(97)
		setValue(x(38))
		putRecord('#' 2 x(28))
		setValue(x(29))
		setValue(x(37))
		putList(x(54))
		setConstant(39)
		setConstant(nil)
		putList(x(53))
		setConstant(76)
		setValue(x(54))
		putList(x(52))
		setConstant(69)
		setValue(x(53))
		putList(x(51))
		setConstant(66)
		setValue(x(52))
		putList(x(50))
		setConstant(65)
		setValue(x(51))
		putList(x(49))
		setConstant(76)
		setValue(x(50))
		putList(x(48))
		setConstant(95)
		setValue(x(49))
		putList(x(47))
		setConstant(77)
		setValue(x(48))
		putList(x(46))
		setConstant(79)
		setValue(x(47))
		putList(x(45))
		setConstant(84)
		setValue(x(46))
		putList(x(44))
		setConstant(65)
		setValue(x(45))
		putList(x(43))
		setConstant(96)
		setValue(x(44))
		putList(x(64))
		setConstant(108)
		setConstant(nil)
		putList(x(63))
		setConstant(101)
		setValue(x(64))
		putList(x(62))
		setConstant(98)
		setValue(x(63))
		putList(x(61))
		setConstant(97)
		setValue(x(62))
		putList(x(60))
		setConstant(108)
		setValue(x(61))
		putList(x(59))
		setConstant(32)
		setValue(x(60))
		putList(x(58))
		setConstant(109)
		setValue(x(59))
		putList(x(57))
		setConstant(111)
		setValue(x(58))
		putList(x(56))
		setConstant(116)
		setValue(x(57))
		putList(x(55))
		setConstant(97)
		setValue(x(56))
		putRecord('#' 2 x(42))
		setValue(x(43))
		setValue(x(55))
		putList(x(75))
		setConstant(39)
		setConstant(nil)
		putList(x(74))
		setConstant(84)
		setValue(x(75))
		putList(x(73))
		setConstant(65)
		setValue(x(74))
		putList(x(72))
		setConstant(79)
		setValue(x(73))
		putList(x(71))
		setConstant(76)
		setValue(x(72))
		putList(x(70))
		setConstant(70)
		setValue(x(71))
		putList(x(69))
		setConstant(90)
		setValue(x(70))
		putList(x(68))
		setConstant(79)
		setValue(x(69))
		putList(x(67))
		setConstant(96)
		setValue(x(68))
		putList(x(80))
		setConstant(116)
		setConstant(nil)
		putList(x(79))
		setConstant(97)
		setValue(x(80))
		putList(x(78))
		setConstant(111)
		setValue(x(79))
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(102)
		setValue(x(77))
		putRecord('#' 2 x(66))
		setValue(x(67))
		setValue(x(76))
		putList(x(89))
		setConstant(39)
		setConstant(nil)
		putList(x(88))
		setConstant(84)
		setValue(x(89))
		putList(x(87))
		setConstant(78)
		setValue(x(88))
		putList(x(86))
		setConstant(73)
		setValue(x(87))
		putList(x(85))
		setConstant(90)
		setValue(x(86))
		putList(x(84))
		setConstant(79)
		setValue(x(85))
		putList(x(83))
		setConstant(96)
		setValue(x(84))
		putList(x(96))
		setConstant(114)
		setConstant(nil)
		putList(x(95))
		setConstant(101)
		setValue(x(96))
		putList(x(94))
		setConstant(103)
		setValue(x(95))
		putList(x(93))
		setConstant(101)
		setValue(x(94))
		putList(x(92))
		setConstant(116)
		setValue(x(93))
		putList(x(91))
		setConstant(110)
		setValue(x(92))
		putList(x(90))
		setConstant(105)
		setValue(x(91))
		putRecord('#' 2 x(82))
		setValue(x(83))
		setValue(x(90))
		putList(x(106))
		setConstant(39)
		setConstant(nil)
		putList(x(105))
		setConstant(71)
		setValue(x(106))
		putList(x(104))
		setConstant(78)
		setValue(x(105))
		putList(x(103))
		setConstant(73)
		setValue(x(104))
		putList(x(102))
		setConstant(82)
		setValue(x(103))
		putList(x(101))
		setConstant(84)
		setValue(x(102))
		putList(x(100))
		setConstant(83)
		setValue(x(101))
		putList(x(99))
		setConstant(96)
		setValue(x(100))
		putList(x(112))
		setConstant(103)
		setConstant(nil)
		putList(x(111))
		setConstant(110)
		setValue(x(112))
		putList(x(110))
		setConstant(105)
		setValue(x(111))
		putList(x(109))
		setConstant(114)
		setValue(x(110))
		putList(x(108))
		setConstant(116)
		setValue(x(109))
		putList(x(107))
		setConstant(115)
		setValue(x(108))
		putRecord('#' 2 x(98))
		setValue(x(99))
		setValue(x(107))
		putList(x(121))
		setConstant(39)
		setConstant(nil)
		putList(x(120))
		setConstant(82)
		setValue(x(121))
		putList(x(119))
		setConstant(69)
		setValue(x(120))
		putList(x(118))
		setConstant(80)
		setValue(x(119))
		putList(x(117))
		setConstant(77)
		setValue(x(118))
		putList(x(116))
		setConstant(65)
		setValue(x(117))
		putList(x(115))
		setConstant(96)
		setValue(x(116))
		putList(x(124))
		setConstant(39)
		setConstant(nil)
		putList(x(123))
		setConstant(38)
		setValue(x(124))
		putList(x(122))
		setConstant(96)
		setValue(x(123))
		putRecord('#' 2 x(114))
		setValue(x(115))
		setValue(x(122))
		putList(x(136))
		setConstant(39)
		setConstant(nil)
		putList(x(135))
		setConstant(69)
		setValue(x(136))
		putList(x(134))
		setConstant(76)
		setValue(x(135))
		putList(x(133))
		setConstant(66)
		setValue(x(134))
		putList(x(132))
		setConstant(65)
		setValue(x(133))
		putList(x(131))
		setConstant(73)
		setValue(x(132))
		putList(x(130))
		setConstant(82)
		setValue(x(131))
		putList(x(129))
		setConstant(65)
		setValue(x(130))
		putList(x(128))
		setConstant(86)
		setValue(x(129))
		putList(x(127))
		setConstant(96)
		setValue(x(128))
		putList(x(144))
		setConstant(101)
		setConstant(nil)
		putList(x(143))
		setConstant(108)
		setValue(x(144))
		putList(x(142))
		setConstant(98)
		setValue(x(143))
		putList(x(141))
		setConstant(97)
		setValue(x(142))
		putList(x(140))
		setConstant(105)
		setValue(x(141))
		putList(x(139))
		setConstant(114)
		setValue(x(140))
		putList(x(138))
		setConstant(97)
		setValue(x(139))
		putList(x(137))
		setConstant(118)
		setValue(x(138))
		putRecord('#' 2 x(126))
		setValue(x(127))
		setValue(x(137))
		putList(x(162))
		setConstant(39)
		setConstant(nil)
		putList(x(161))
		setConstant(76)
		setValue(x(162))
		putList(x(160))
		setConstant(69)
		setValue(x(161))
		putList(x(159))
		setConstant(66)
		setValue(x(160))
		putList(x(158))
		setConstant(65)
		setValue(x(159))
		putList(x(157))
		setConstant(76)
		setValue(x(158))
		putList(x(156))
		setConstant(95)
		setValue(x(157))
		putList(x(155))
		setConstant(69)
		setValue(x(156))
		putList(x(154))
		setConstant(76)
		setValue(x(155))
		putList(x(153))
		setConstant(66)
		setValue(x(154))
		putList(x(152))
		setConstant(65)
		setValue(x(153))
		putList(x(151))
		setConstant(73)
		setValue(x(152))
		putList(x(150))
		setConstant(82)
		setValue(x(151))
		putList(x(149))
		setConstant(65)
		setValue(x(150))
		putList(x(148))
		setConstant(86)
		setValue(x(149))
		putList(x(147))
		setConstant(96)
		setValue(x(148))
		putList(x(176))
		setConstant(108)
		setConstant(nil)
		putList(x(175))
		setConstant(101)
		setValue(x(176))
		putList(x(174))
		setConstant(98)
		setValue(x(175))
		putList(x(173))
		setConstant(97)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(32)
		setValue(x(172))
		putList(x(170))
		setConstant(101)
		setValue(x(171))
		putList(x(169))
		setConstant(108)
		setValue(x(170))
		putList(x(168))
		setConstant(98)
		setValue(x(169))
		putList(x(167))
		setConstant(97)
		setValue(x(168))
		putList(x(166))
		setConstant(105)
		setValue(x(167))
		putList(x(165))
		setConstant(114)
		setValue(x(166))
		putList(x(164))
		setConstant(97)
		setValue(x(165))
		putList(x(163))
		setConstant(118)
		setValue(x(164))
		putRecord('#' 2 x(146))
		setValue(x(147))
		setValue(x(163))
		putList(x(187))
		setConstant(39)
		setConstant(nil)
		putList(x(186))
		setConstant(84)
		setValue(x(187))
		putList(x(185))
		setConstant(76)
		setValue(x(186))
		putList(x(184))
		setConstant(85)
		setValue(x(185))
		putList(x(183))
		setConstant(65)
		setValue(x(184))
		putList(x(182))
		setConstant(70)
		setValue(x(183))
		putList(x(181))
		setConstant(69)
		setValue(x(182))
		putList(x(180))
		setConstant(68)
		setValue(x(181))
		putList(x(179))
		setConstant(96)
		setValue(x(180))
		putList(x(191))
		setConstant(39)
		setConstant(nil)
		putList(x(190))
		setConstant(61)
		setValue(x(191))
		putList(x(189))
		setConstant(60)
		setValue(x(190))
		putList(x(188))
		setConstant(96)
		setValue(x(189))
		putRecord('#' 2 x(178))
		setValue(x(179))
		setValue(x(188))
		putList(x(201))
		setConstant(39)
		setConstant(nil)
		putList(x(200))
		setConstant(69)
		setValue(x(201))
		putList(x(199))
		setConstant(67)
		setValue(x(200))
		putList(x(198))
		setConstant(73)
		setValue(x(199))
		putList(x(197))
		setConstant(79)
		setValue(x(198))
		putList(x(196))
		setConstant(72)
		setValue(x(197))
		putList(x(195))
		setConstant(67)
		setValue(x(196))
		putList(x(194))
		setConstant(96)
		setValue(x(195))
		putList(x(205))
		setConstant(39)
		setConstant(nil)
		putList(x(204))
		setConstant(93)
		setValue(x(205))
		putList(x(203))
		setConstant(91)
		setValue(x(204))
		putList(x(202))
		setConstant(96)
		setValue(x(203))
		putRecord('#' 2 x(193))
		setValue(x(194))
		setValue(x(202))
		putList(x(214))
		setConstant(39)
		setConstant(nil)
		putList(x(213))
		setConstant(83)
		setValue(x(214))
		putList(x(212))
		setConstant(84)
		setValue(x(213))
		putList(x(211))
		setConstant(79)
		setValue(x(212))
		putList(x(210))
		setConstant(68)
		setValue(x(211))
		putList(x(209))
		setConstant(76)
		setValue(x(210))
		putList(x(208))
		setConstant(96)
		setValue(x(209))
		putList(x(219))
		setConstant(39)
		setConstant(nil)
		putList(x(218))
		setConstant(46)
		setValue(x(219))
		putList(x(217))
		setConstant(46)
		setValue(x(218))
		putList(x(216))
		setConstant(46)
		setValue(x(217))
		putList(x(215))
		setConstant(96)
		setValue(x(216))
		putRecord('#' 2 x(207))
		setValue(x(208))
		setValue(x(215))
		putList(x(231))
		setConstant(39)
		setConstant(nil)
		putList(x(230))
		setConstant(78)
		setValue(x(231))
		putList(x(229))
		setConstant(71)
		setValue(x(230))
		putList(x(228))
		setConstant(73)
		setValue(x(229))
		putList(x(227))
		setConstant(83)
		setValue(x(228))
		putList(x(226))
		setConstant(83)
		setValue(x(227))
		putList(x(225))
		setConstant(65)
		setValue(x(226))
		putList(x(224))
		setConstant(79)
		setValue(x(225))
		putList(x(223))
		setConstant(79)
		setValue(x(224))
		putList(x(222))
		setConstant(96)
		setValue(x(223))
		putList(x(235))
		setConstant(39)
		setConstant(nil)
		putList(x(234))
		setConstant(45)
		setValue(x(235))
		putList(x(233))
		setConstant(60)
		setValue(x(234))
		putList(x(232))
		setConstant(96)
		setValue(x(233))
		putRecord('#' 2 x(221))
		setValue(x(222))
		setValue(x(232))
		putList(x(245))
		setConstant(39)
		setConstant(nil)
		putList(x(244))
		setConstant(78)
		setValue(x(245))
		putList(x(243))
		setConstant(71)
		setValue(x(244))
		putList(x(242))
		setConstant(73)
		setValue(x(243))
		putList(x(241))
		setConstant(83)
		setValue(x(242))
		putList(x(240))
		setConstant(83)
		setValue(x(241))
		putList(x(239))
		setConstant(65)
		setValue(x(240))
		putList(x(238))
		setConstant(96)
		setValue(x(239))
		putList(x(249))
		setConstant(39)
		setConstant(nil)
		putList(x(248))
		setConstant(61)
		setValue(x(249))
		putList(x(247))
		setConstant(58)
		setValue(x(248))
		putList(x(246))
		setConstant(96)
		setValue(x(247))
		putRecord('#' 2 x(237))
		setValue(x(238))
		setValue(x(246))
		putList(x(260))
		setConstant(39)
		setConstant(nil)
		putList(x(259))
		setConstant(69)
		setValue(x(260))
		putList(x(258))
		setConstant(82)
		setValue(x(259))
		putList(x(257))
		setConstant(65)
		setValue(x(258))
		putList(x(256))
		setConstant(80)
		setValue(x(257))
		putList(x(255))
		setConstant(77)
		setValue(x(256))
		putList(x(254))
		setConstant(79)
		setValue(x(255))
		putList(x(253))
		setConstant(67)
		setValue(x(254))
		putList(x(252))
		setConstant(96)
		setValue(x(253))
		putList(x(279))
		setConstant(114)
		setConstant(nil)
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(116)
		setValue(x(278))
		putList(x(276))
		setConstant(97)
		setValue(x(277))
		putList(x(275))
		setConstant(114)
		setValue(x(276))
		putList(x(274))
		setConstant(101)
		setValue(x(275))
		putList(x(273))
		setConstant(112)
		setValue(x(274))
		putList(x(272))
		setConstant(111)
		setValue(x(273))
		putList(x(271))
		setConstant(32)
		setValue(x(272))
		putList(x(270))
		setConstant(110)
		setValue(x(271))
		putList(x(269))
		setConstant(111)
		setValue(x(270))
		putList(x(268))
		setConstant(115)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(114)
		setValue(x(267))
		putList(x(265))
		setConstant(97)
		setValue(x(266))
		putList(x(264))
		setConstant(112)
		setValue(x(265))
		putList(x(263))
		setConstant(109)
		setValue(x(264))
		putList(x(262))
		setConstant(111)
		setValue(x(263))
		putList(x(261))
		setConstant(99)
		setValue(x(262))
		putRecord('#' 2 x(251))
		setValue(x(252))
		setValue(x(261))
		putList(x(292))
		setConstant(39)
		setConstant(nil)
		putList(x(291))
		setConstant(69)
		setValue(x(292))
		putList(x(290))
		setConstant(82)
		setValue(x(291))
		putList(x(289))
		setConstant(65)
		setValue(x(290))
		putList(x(288))
		setConstant(80)
		setValue(x(289))
		putList(x(287))
		setConstant(77)
		setValue(x(288))
		putList(x(286))
		setConstant(79)
		setValue(x(287))
		putList(x(285))
		setConstant(67)
		setValue(x(286))
		putList(x(284))
		setConstant(68)
		setValue(x(285))
		putList(x(283))
		setConstant(70)
		setValue(x(284))
		putList(x(282))
		setConstant(96)
		setValue(x(283))
		putList(x(325))
		setConstant(114)
		setConstant(nil)
		putList(x(324))
		setConstant(111)
		setValue(x(325))
		putList(x(323))
		setConstant(116)
		setValue(x(324))
		putList(x(322))
		setConstant(97)
		setValue(x(323))
		putList(x(321))
		setConstant(114)
		setValue(x(322))
		putList(x(320))
		setConstant(101)
		setValue(x(321))
		putList(x(319))
		setConstant(112)
		setValue(x(320))
		putList(x(318))
		setConstant(111)
		setValue(x(319))
		putList(x(317))
		setConstant(32)
		setValue(x(318))
		putList(x(316))
		setConstant(110)
		setValue(x(317))
		putList(x(315))
		setConstant(111)
		setValue(x(316))
		putList(x(314))
		setConstant(115)
		setValue(x(315))
		putList(x(313))
		setConstant(105)
		setValue(x(314))
		putList(x(312))
		setConstant(114)
		setValue(x(313))
		putList(x(311))
		setConstant(97)
		setValue(x(312))
		putList(x(310))
		setConstant(112)
		setValue(x(311))
		putList(x(309))
		setConstant(109)
		setValue(x(310))
		putList(x(308))
		setConstant(111)
		setValue(x(309))
		putList(x(307))
		setConstant(99)
		setValue(x(308))
		putList(x(306))
		setConstant(32)
		setValue(x(307))
		putList(x(305))
		setConstant(110)
		setValue(x(306))
		putList(x(304))
		setConstant(105)
		setValue(x(305))
		putList(x(303))
		setConstant(97)
		setValue(x(304))
		putList(x(302))
		setConstant(109)
		setValue(x(303))
		putList(x(301))
		setConstant(111)
		setValue(x(302))
		putList(x(300))
		setConstant(100)
		setValue(x(301))
		putList(x(299))
		setConstant(32)
		setValue(x(300))
		putList(x(298))
		setConstant(101)
		setValue(x(299))
		putList(x(297))
		setConstant(116)
		setValue(x(298))
		putList(x(296))
		setConstant(105)
		setValue(x(297))
		putList(x(295))
		setConstant(110)
		setValue(x(296))
		putList(x(294))
		setConstant(105)
		setValue(x(295))
		putList(x(293))
		setConstant(102)
		setValue(x(294))
		putRecord('#' 2 x(281))
		setValue(x(282))
		setValue(x(293))
		putList(x(333))
		setConstant(39)
		setConstant(nil)
		putList(x(332))
		setConstant(78)
		setValue(x(333))
		putList(x(331))
		setConstant(73)
		setValue(x(332))
		putList(x(330))
		setConstant(68)
		setValue(x(331))
		putList(x(329))
		setConstant(70)
		setValue(x(330))
		putList(x(328))
		setConstant(96)
		setValue(x(329))
		putList(x(365))
		setConstant(114)
		setConstant(nil)
		putList(x(364))
		setConstant(111)
		setValue(x(365))
		putList(x(363))
		setConstant(116)
		setValue(x(364))
		putList(x(362))
		setConstant(97)
		setValue(x(363))
		putList(x(361))
		setConstant(114)
		setValue(x(362))
		putList(x(360))
		setConstant(101)
		setValue(x(361))
		putList(x(359))
		setConstant(112)
		setValue(x(360))
		putList(x(358))
		setConstant(111)
		setValue(x(359))
		putList(x(357))
		setConstant(32)
		setValue(x(358))
		putList(x(356))
		setConstant(110)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(105)
		setValue(x(355))
		putList(x(353))
		setConstant(115)
		setValue(x(354))
		putList(x(352))
		setConstant(117)
		setValue(x(353))
		putList(x(351))
		setConstant(108)
		setValue(x(352))
		putList(x(350))
		setConstant(99)
		setValue(x(351))
		putList(x(349))
		setConstant(110)
		setValue(x(350))
		putList(x(348))
		setConstant(105)
		setValue(x(349))
		putList(x(347))
		setConstant(32)
		setValue(x(348))
		putList(x(346))
		setConstant(110)
		setValue(x(347))
		putList(x(345))
		setConstant(105)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(111)
		setValue(x(343))
		putList(x(341))
		setConstant(100)
		setValue(x(342))
		putList(x(340))
		setConstant(32)
		setValue(x(341))
		putList(x(339))
		setConstant(101)
		setValue(x(340))
		putList(x(338))
		setConstant(116)
		setValue(x(339))
		putList(x(337))
		setConstant(105)
		setValue(x(338))
		putList(x(336))
		setConstant(110)
		setValue(x(337))
		putList(x(335))
		setConstant(105)
		setValue(x(336))
		putList(x(334))
		setConstant(102)
		setValue(x(335))
		putRecord('#' 2 x(327))
		setValue(x(328))
		setValue(x(334))
		putList(x(372))
		setConstant(39)
		setConstant(nil)
		putList(x(371))
		setConstant(68)
		setValue(x(372))
		putList(x(370))
		setConstant(68)
		setValue(x(371))
		putList(x(369))
		setConstant(65)
		setValue(x(370))
		putList(x(368))
		setConstant(96)
		setValue(x(369))
		putList(x(382))
		setConstant(39)
		setConstant(nil)
		putList(x(381))
		setConstant(45)
		setValue(x(382))
		putList(x(380))
		setConstant(96)
		setValue(x(381))
		putList(x(379))
		setConstant(32)
		setValue(x(380))
		putList(x(378))
		setConstant(114)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(32)
		setValue(x(377))
		putList(x(375))
		setConstant(39)
		setValue(x(376))
		putList(x(374))
		setConstant(43)
		setValue(x(375))
		putList(x(373))
		setConstant(96)
		setValue(x(374))
		putRecord('#' 2 x(367))
		setValue(x(368))
		setValue(x(373))
		putList(x(391))
		setConstant(39)
		setConstant(nil)
		putList(x(390))
		setConstant(76)
		setValue(x(391))
		putList(x(389))
		setConstant(85)
		setValue(x(390))
		putList(x(388))
		setConstant(77)
		setValue(x(389))
		putList(x(387))
		setConstant(68)
		setValue(x(388))
		putList(x(386))
		setConstant(70)
		setValue(x(387))
		putList(x(385))
		setConstant(96)
		setValue(x(386))
		putList(x(401))
		setConstant(39)
		setConstant(nil)
		putList(x(400))
		setConstant(47)
		setValue(x(401))
		putList(x(399))
		setConstant(96)
		setValue(x(400))
		putList(x(398))
		setConstant(32)
		setValue(x(399))
		putList(x(397))
		setConstant(114)
		setValue(x(398))
		putList(x(396))
		setConstant(111)
		setValue(x(397))
		putList(x(395))
		setConstant(32)
		setValue(x(396))
		putList(x(394))
		setConstant(39)
		setValue(x(395))
		putList(x(393))
		setConstant(42)
		setValue(x(394))
		putList(x(392))
		setConstant(96)
		setValue(x(393))
		putRecord('#' 2 x(384))
		setValue(x(385))
		setValue(x(392))
		putList(x(413))
		setConstant(39)
		setConstant(nil)
		putList(x(412))
		setConstant(76)
		setValue(x(413))
		putList(x(411))
		setConstant(85)
		setValue(x(412))
		putList(x(410))
		setConstant(77)
		setValue(x(411))
		putList(x(409))
		setConstant(82)
		setValue(x(410))
		putList(x(408))
		setConstant(69)
		setValue(x(409))
		putList(x(407))
		setConstant(72)
		setValue(x(408))
		putList(x(406))
		setConstant(84)
		setValue(x(407))
		putList(x(405))
		setConstant(79)
		setValue(x(406))
		putList(x(404))
		setConstant(96)
		setValue(x(405))
		putList(x(427))
		setConstant(39)
		setConstant(nil)
		putList(x(426))
		setConstant(100)
		setValue(x(427))
		putList(x(425))
		setConstant(111)
		setValue(x(426))
		putList(x(424))
		setConstant(109)
		setValue(x(425))
		putList(x(423))
		setConstant(96)
		setValue(x(424))
		putList(x(422))
		setConstant(32)
		setValue(x(423))
		putList(x(421))
		setConstant(114)
		setValue(x(422))
		putList(x(420))
		setConstant(111)
		setValue(x(421))
		putList(x(419))
		setConstant(32)
		setValue(x(420))
		putList(x(418))
		setConstant(39)
		setValue(x(419))
		putList(x(417))
		setConstant(118)
		setValue(x(418))
		putList(x(416))
		setConstant(105)
		setValue(x(417))
		putList(x(415))
		setConstant(100)
		setValue(x(416))
		putList(x(414))
		setConstant(96)
		setValue(x(415))
		putRecord('#' 2 x(403))
		setValue(x(404))
		setValue(x(414))
		putList(x(442))
		setConstant(39)
		setConstant(nil)
		putList(x(441))
		setConstant(76)
		setValue(x(442))
		putList(x(440))
		setConstant(69)
		setValue(x(441))
		putList(x(439))
		setConstant(66)
		setValue(x(440))
		putList(x(438))
		setConstant(65)
		setValue(x(439))
		putList(x(437))
		setConstant(76)
		setValue(x(438))
		putList(x(436))
		setConstant(95)
		setValue(x(437))
		putList(x(435))
		setConstant(69)
		setValue(x(436))
		putList(x(434))
		setConstant(83)
		setValue(x(435))
		putList(x(433))
		setConstant(76)
		setValue(x(434))
		putList(x(432))
		setConstant(65)
		setValue(x(433))
		putList(x(431))
		setConstant(70)
		setValue(x(432))
		putList(x(430))
		setConstant(96)
		setValue(x(431))
		putList(x(458))
		setConstant(108)
		setConstant(nil)
		putList(x(457))
		setConstant(101)
		setValue(x(458))
		putList(x(456))
		setConstant(98)
		setValue(x(457))
		putList(x(455))
		setConstant(97)
		setValue(x(456))
		putList(x(454))
		setConstant(108)
		setValue(x(455))
		putList(x(453))
		setConstant(32)
		setValue(x(454))
		putList(x(452))
		setConstant(115)
		setValue(x(453))
		putList(x(451))
		setConstant(97)
		setValue(x(452))
		putList(x(450))
		setConstant(32)
		setValue(x(451))
		putList(x(449))
		setConstant(39)
		setValue(x(450))
		putList(x(448))
		setConstant(101)
		setValue(x(449))
		putList(x(447))
		setConstant(115)
		setValue(x(448))
		putList(x(446))
		setConstant(108)
		setValue(x(447))
		putList(x(445))
		setConstant(97)
		setValue(x(446))
		putList(x(444))
		setConstant(102)
		setValue(x(445))
		putList(x(443))
		setConstant(96)
		setValue(x(444))
		putRecord('#' 2 x(429))
		setValue(x(430))
		setValue(x(443))
		putList(x(472))
		setConstant(39)
		setConstant(nil)
		putList(x(471))
		setConstant(76)
		setValue(x(472))
		putList(x(470))
		setConstant(69)
		setValue(x(471))
		putList(x(469))
		setConstant(66)
		setValue(x(470))
		putList(x(468))
		setConstant(65)
		setValue(x(469))
		putList(x(467))
		setConstant(76)
		setValue(x(468))
		putList(x(466))
		setConstant(95)
		setValue(x(467))
		putList(x(465))
		setConstant(69)
		setValue(x(466))
		putList(x(464))
		setConstant(85)
		setValue(x(465))
		putList(x(463))
		setConstant(82)
		setValue(x(464))
		putList(x(462))
		setConstant(84)
		setValue(x(463))
		putList(x(461))
		setConstant(96)
		setValue(x(462))
		putList(x(487))
		setConstant(108)
		setConstant(nil)
		putList(x(486))
		setConstant(101)
		setValue(x(487))
		putList(x(485))
		setConstant(98)
		setValue(x(486))
		putList(x(484))
		setConstant(97)
		setValue(x(485))
		putList(x(483))
		setConstant(108)
		setValue(x(484))
		putList(x(482))
		setConstant(32)
		setValue(x(483))
		putList(x(481))
		setConstant(115)
		setValue(x(482))
		putList(x(480))
		setConstant(97)
		setValue(x(481))
		putList(x(479))
		setConstant(32)
		setValue(x(480))
		putList(x(478))
		setConstant(39)
		setValue(x(479))
		putList(x(477))
		setConstant(101)
		setValue(x(478))
		putList(x(476))
		setConstant(117)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(96)
		setValue(x(474))
		putRecord('#' 2 x(460))
		setValue(x(461))
		setValue(x(473))
		putList(x(501))
		setConstant(39)
		setConstant(nil)
		putList(x(500))
		setConstant(76)
		setValue(x(501))
		putList(x(499))
		setConstant(69)
		setValue(x(500))
		putList(x(498))
		setConstant(66)
		setValue(x(499))
		putList(x(497))
		setConstant(65)
		setValue(x(498))
		putList(x(496))
		setConstant(76)
		setValue(x(497))
		putList(x(495))
		setConstant(95)
		setValue(x(496))
		putList(x(494))
		setConstant(84)
		setValue(x(495))
		putList(x(493))
		setConstant(73)
		setValue(x(494))
		putList(x(492))
		setConstant(78)
		setValue(x(493))
		putList(x(491))
		setConstant(85)
		setValue(x(492))
		putList(x(490))
		setConstant(96)
		setValue(x(491))
		putList(x(516))
		setConstant(108)
		setConstant(nil)
		putList(x(515))
		setConstant(101)
		setValue(x(516))
		putList(x(514))
		setConstant(98)
		setValue(x(515))
		putList(x(513))
		setConstant(97)
		setValue(x(514))
		putList(x(512))
		setConstant(108)
		setValue(x(513))
		putList(x(511))
		setConstant(32)
		setValue(x(512))
		putList(x(510))
		setConstant(115)
		setValue(x(511))
		putList(x(509))
		setConstant(97)
		setValue(x(510))
		putList(x(508))
		setConstant(32)
		setValue(x(509))
		putList(x(507))
		setConstant(39)
		setValue(x(508))
		putList(x(506))
		setConstant(116)
		setValue(x(507))
		putList(x(505))
		setConstant(105)
		setValue(x(506))
		putList(x(504))
		setConstant(110)
		setValue(x(505))
		putList(x(503))
		setConstant(117)
		setValue(x(504))
		putList(x(502))
		setConstant(96)
		setValue(x(503))
		putRecord('#' 2 x(489))
		setValue(x(490))
		setValue(x(502))
		putList(x(526))
		setConstant(39)
		setConstant(nil)
		putList(x(525))
		setConstant(84)
		setValue(x(526))
		putList(x(524))
		setConstant(78)
		setValue(x(525))
		putList(x(523))
		setConstant(73)
		setValue(x(524))
		putList(x(522))
		setConstant(84)
		setValue(x(523))
		putList(x(521))
		setConstant(79)
		setValue(x(522))
		putList(x(520))
		setConstant(68)
		setValue(x(521))
		putList(x(519))
		setConstant(96)
		setValue(x(520))
		putList(x(552))
		setConstant(114)
		setConstant(nil)
		putList(x(551))
		setConstant(101)
		setValue(x(552))
		putList(x(550))
		setConstant(103)
		setValue(x(551))
		putList(x(549))
		setConstant(101)
		setValue(x(550))
		putList(x(548))
		setConstant(116)
		setValue(x(549))
		putList(x(547))
		setConstant(110)
		setValue(x(548))
		putList(x(546))
		setConstant(105)
		setValue(x(547))
		putList(x(545))
		setConstant(32)
		setValue(x(546))
		putList(x(544))
		setConstant(110)
		setValue(x(545))
		putList(x(543))
		setConstant(97)
		setValue(x(544))
		putList(x(542))
		setConstant(32)
		setValue(x(543))
		putList(x(541))
		setConstant(121)
		setValue(x(542))
		putList(x(540))
		setConstant(98)
		setValue(x(541))
		putList(x(539))
		setConstant(32)
		setValue(x(540))
		putList(x(538))
		setConstant(100)
		setValue(x(539))
		putList(x(537))
		setConstant(101)
		setValue(x(538))
		putList(x(536))
		setConstant(119)
		setValue(x(537))
		putList(x(535))
		setConstant(111)
		setValue(x(536))
		putList(x(534))
		setConstant(108)
		setValue(x(535))
		putList(x(533))
		setConstant(108)
		setValue(x(534))
		putList(x(532))
		setConstant(111)
		setValue(x(533))
		putList(x(531))
		setConstant(102)
		setValue(x(532))
		putList(x(530))
		setConstant(32)
		setValue(x(531))
		putList(x(529))
		setConstant(39)
		setValue(x(530))
		putList(x(528))
		setConstant(46)
		setValue(x(529))
		putList(x(527))
		setConstant(96)
		setValue(x(528))
		putRecord('#' 2 x(518))
		setValue(x(519))
		setValue(x(527))
		putList(x(561))
		setConstant(39)
		setConstant(nil)
		putList(x(560))
		setConstant(70)
		setValue(x(561))
		putList(x(559))
		setConstant(69)
		setValue(x(560))
		putList(x(558))
		setConstant(82)
		setValue(x(559))
		putList(x(557))
		setConstant(69)
		setValue(x(558))
		putList(x(556))
		setConstant(68)
		setValue(x(557))
		putList(x(555))
		setConstant(96)
		setValue(x(556))
		putList(x(565))
		setConstant(39)
		setConstant(nil)
		putList(x(564))
		setConstant(33)
		setValue(x(565))
		putList(x(563))
		setConstant(33)
		setValue(x(564))
		putList(x(562))
		setConstant(96)
		setValue(x(563))
		putRecord('#' 2 x(554))
		setValue(x(555))
		setValue(x(562))
		putList(x(578))
		setConstant(39)
		setConstant(nil)
		putList(x(577))
		setConstant(69)
		setValue(x(578))
		putList(x(576))
		setConstant(76)
		setValue(x(577))
		putList(x(575))
		setConstant(73)
		setValue(x(576))
		putList(x(574))
		setConstant(70)
		setValue(x(575))
		putList(x(573))
		setConstant(70)
		setValue(x(574))
		putList(x(572))
		setConstant(79)
		setValue(x(573))
		putList(x(571))
		setConstant(68)
		setValue(x(572))
		putList(x(570))
		setConstant(78)
		setValue(x(571))
		putList(x(569))
		setConstant(69)
		setValue(x(570))
		putList(x(568))
		setConstant(96)
		setValue(x(569))
		putList(x(589))
		setConstant(101)
		setConstant(nil)
		putList(x(588))
		setConstant(108)
		setValue(x(589))
		putList(x(587))
		setConstant(105)
		setValue(x(588))
		putList(x(586))
		setConstant(102)
		setValue(x(587))
		putList(x(585))
		setConstant(45)
		setValue(x(586))
		putList(x(584))
		setConstant(102)
		setValue(x(585))
		putList(x(583))
		setConstant(111)
		setValue(x(584))
		putList(x(582))
		setConstant(45)
		setValue(x(583))
		putList(x(581))
		setConstant(100)
		setValue(x(582))
		putList(x(580))
		setConstant(110)
		setValue(x(581))
		putList(x(579))
		setConstant(101)
		setValue(x(580))
		putRecord('#' 2 x(567))
		setValue(x(568))
		setValue(x(579))
		putList(x(598))
		setConstant(39)
		setConstant(nil)
		putList(x(597))
		setConstant(88)
		setValue(x(598))
		putList(x(596))
		setConstant(69)
		setValue(x(597))
		putList(x(595))
		setConstant(71)
		setValue(x(596))
		putList(x(594))
		setConstant(69)
		setValue(x(595))
		putList(x(593))
		setConstant(82)
		setValue(x(594))
		putList(x(592))
		setConstant(96)
		setValue(x(593))
		putList(x(616))
		setConstant(110)
		setConstant(nil)
		putList(x(615))
		setConstant(111)
		setValue(x(616))
		putList(x(614))
		setConstant(105)
		setValue(x(615))
		putList(x(613))
		setConstant(115)
		setValue(x(614))
		putList(x(612))
		setConstant(115)
		setValue(x(613))
		putList(x(611))
		setConstant(101)
		setValue(x(612))
		putList(x(610))
		setConstant(114)
		setValue(x(611))
		putList(x(609))
		setConstant(112)
		setValue(x(610))
		putList(x(608))
		setConstant(120)
		setValue(x(609))
		putList(x(607))
		setConstant(101)
		setValue(x(608))
		putList(x(606))
		setConstant(32)
		setValue(x(607))
		putList(x(605))
		setConstant(114)
		setValue(x(606))
		putList(x(604))
		setConstant(97)
		setValue(x(605))
		putList(x(603))
		setConstant(108)
		setValue(x(604))
		putList(x(602))
		setConstant(117)
		setValue(x(603))
		putList(x(601))
		setConstant(103)
		setValue(x(602))
		putList(x(600))
		setConstant(101)
		setValue(x(601))
		putList(x(599))
		setConstant(114)
		setValue(x(600))
		putRecord('#' 2 x(591))
		setValue(x(592))
		setValue(x(599))
		putList(x(626))
		setConstant(39)
		setConstant(nil)
		putList(x(625))
		setConstant(69)
		setValue(x(626))
		putList(x(624))
		setConstant(67)
		setValue(x(625))
		putList(x(623))
		setConstant(85)
		setValue(x(624))
		putList(x(622))
		setConstant(68)
		setValue(x(623))
		putList(x(621))
		setConstant(69)
		setValue(x(622))
		putList(x(620))
		setConstant(82)
		setValue(x(621))
		putList(x(619))
		setConstant(96)
		setValue(x(620))
		putList(x(630))
		setConstant(39)
		setConstant(nil)
		putList(x(629))
		setConstant(62)
		setValue(x(630))
		putList(x(628))
		setConstant(61)
		setValue(x(629))
		putList(x(627))
		setConstant(96)
		setValue(x(628))
		putRecord('#' 2 x(618))
		setValue(x(619))
		setValue(x(627))
		putList(x(637))
		setConstant(39)
		setConstant(nil)
		putList(x(636))
		setConstant(80)
		setValue(x(637))
		putList(x(635))
		setConstant(69)
		setValue(x(636))
		putList(x(634))
		setConstant(83)
		setValue(x(635))
		putList(x(633))
		setConstant(96)
		setValue(x(634))
		putList(x(641))
		setConstant(39)
		setConstant(nil)
		putList(x(640))
		setConstant(47)
		setValue(x(641))
		putList(x(639))
		setConstant(47)
		setValue(x(640))
		putList(x(638))
		setConstant(96)
		setValue(x(639))
		putRecord('#' 2 x(632))
		setValue(x(633))
		setValue(x(638))
		putList(x(631))
		setValue(x(632))
		setConstant(nil)
		putList(x(617))
		setValue(x(618))
		setValue(x(631))
		putList(x(590))
		setValue(x(591))
		setValue(x(617))
		putList(x(566))
		setValue(x(567))
		setValue(x(590))
		putList(x(553))
		setValue(x(554))
		setValue(x(566))
		putList(x(517))
		setValue(x(518))
		setValue(x(553))
		putList(x(488))
		setValue(x(489))
		setValue(x(517))
		putList(x(459))
		setValue(x(460))
		setValue(x(488))
		putList(x(428))
		setValue(x(429))
		setValue(x(459))
		putList(x(402))
		setValue(x(403))
		setValue(x(428))
		putList(x(383))
		setValue(x(384))
		setValue(x(402))
		putList(x(366))
		setValue(x(367))
		setValue(x(383))
		putList(x(326))
		setValue(x(327))
		setValue(x(366))
		putList(x(280))
		setValue(x(281))
		setValue(x(326))
		putList(x(250))
		setValue(x(251))
		setValue(x(280))
		putList(x(236))
		setValue(x(237))
		setValue(x(250))
		putList(x(220))
		setValue(x(221))
		setValue(x(236))
		putList(x(206))
		setValue(x(207))
		setValue(x(220))
		putList(x(192))
		setValue(x(193))
		setValue(x(206))
		putList(x(177))
		setValue(x(178))
		setValue(x(192))
		putList(x(145))
		setValue(x(146))
		setValue(x(177))
		putList(x(125))
		setValue(x(126))
		setValue(x(145))
		putList(x(113))
		setValue(x(114))
		setValue(x(125))
		putList(x(97))
		setValue(x(98))
		setValue(x(113))
		putList(x(81))
		setValue(x(82))
		setValue(x(97))
		putList(x(65))
		setValue(x(66))
		setValue(x(81))
		putList(x(41))
		setValue(x(42))
		setValue(x(65))
		putList(x(27))
		setValue(x(28))
		setValue(x(41))
		putList(x(9))
		setValue(x(0))
		setValue(x(27))
lbl(302746)	definition(x(10) 302810 pid('DetachPrefix' 3 pos('./compiler/ParseOz.oz' 57 6) nil 5) <Q: 1723> nil)
		match(x(0) ht(302795 [onScalar(nil 302755) onRecord('|' 2 302759)]))
lbl(302755)	unify(x(2) x(1))
		return
lbl(302759)	allocateL2
		getVarVar(x(0) x(3))
		move(x(2) y(0))
		testList(x(1) 302790)
lbl(302769)	getVarVar(x(1) x(4))
		createVariable(y(1))
		shallowGuard(302790)
		unify(x(0) x(1))
lbl(302779)	shallowThen
		move(x(3) x(0))
		move(x(4) x(1))
		deAllocateL2
		genFastCall(<Q: 1723> 7)
lbl(302790)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(302795)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(302746)
lbl(302810)	definition(x(10) 302898 pid('BeautifyPrefix' 3 pos('./compiler/ParseOz.oz' 67 6) nil 4) <Q: 1724> nil)
		match(x(0) ht(302883 [onScalar(nil 302819) onRecord('|' 2 302823)]))
lbl(302819)	unify(x(2) x(1))
		return
lbl(302823)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1723> 6)
		testLiteral(y(4) false 302862)
lbl(302850)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1724> 7)
lbl(302862)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1725> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(302883)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(73)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(302810)
lbl(302898)	definition(x(10) 303168 pid('Beautify' 2 pos('./compiler/ParseOz.oz' 76 6) nil 5) <Q: 1725> [g(5) x(9)])
		match(x(0) ht(303153 [onScalar(nil 302907) onRecord('|' 2 302911)]))
lbl(302907)	getLiteral(nil x(1))
		return
lbl(302911)	allocateL4
		getVarVar(x(2) y(0))
		testNumber(x(2) 96 303142)
lbl(302919)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		testList(y(0) 303027)
lbl(302927)	getVarVar(x(2) x(3))
		testNumber(x(2) 95 303027)
lbl(302934)	definition(x(4) 302952 pid('' 2 pos('./compiler/ParseOz.oz' 81 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(302934)
lbl(302952)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 303014)
lbl(302970)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(303014)
		getNumber(95 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(302986)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1725> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(303014)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1725> 5)
lbl(303027)	testList(y(0) 303130)
lbl(303030)	getVarVar(x(0) x(1))
		testNumber(x(0) 39 303130)
lbl(303037)	definition(x(4) 303055 pid('' 2 pos('./compiler/ParseOz.oz' 88 28) nil 4) unit nil)
		putConstant(39 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(303037)
lbl(303055)	move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 303117)
lbl(303073)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(303117)
		getNumber(39 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(303089)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1725> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(303117)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1725> 5)
lbl(303130)	move(g(1) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1724> 7)
lbl(303142)	getListValVar(x(1) x(2) x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1725> 5)
lbl(303153)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(302898)
lbl(303168)	definition(x(9) 303286 pid('Output' 2 pos('./compiler/ParseOz.oz' 101 6) nil 2) <Q: 1726> [g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
lbl(303184)	definition(x(1) 303277 pid('' 1 pos('./compiler/ParseOz.oz' 103 3) nil 4) unit [g(0) y(0)])
		allocateL2
		move(x(0) y(0))
		createCond(303268)
lbl(303196)	lastClause
		clause
		thread(303227)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		putConstant('parse error' x(1))
		inlineUparrow(x(2) x(0) x(3))
		unify(x(3) x(1))
		deAllocateL2
		return
lbl(303227)	ask
lbl(303228)	move(y(0) x(0))
		inlineDot(x(0) msg x(1) cache)
		callBI('AtomToString' [x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1725> 4)
		move(y(0) x(0))
		putConstant(msg x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		move(x(3) x(0))
		deAllocateL2
		tailCall(g(1) 1)
lbl(303268)	move(y(0) x(0))
		deAllocateL2
		tailCall(g(1) 1)
		endDefinition(303184)
lbl(303277)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(303168)
lbl(303286)	definition(x(0) 303388 pid('ParseOzFile' 5 pos('./compiler/ParseOz.oz' 113 3) nil 5) <Q: 1727> [x(7)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1726> 4)
		testLiteral(y(1) fileNotFound 303381)
lbl(303362)	putRecord('#' 3 x(1))
		setConstant('could not open file "')
		setValue(y(3))
		setConstant('" for reading')
		putConstant('compiler directive error' x(0))
		sendMsg(error y(4) [kind msg] cache)
lbl(303381)	unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(303286)
lbl(303388)	unify(x(0) y(12))
lbl(303391)	definition(x(0) 303470 pid('ParseOzVirtualString' 5 pos('./compiler/ParseOz.oz' 129 3) nil 5) <Q: 1728> [x(8)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1726> 4)
		unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(303391)
lbl(303470)	unify(x(0) y(13))
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<M: Compiler> <M: Port> <M: ServerThread>] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(303491)	definition(x(7) 303591 pid('GenericInterface,init/fast' 2 pos('./compiler/GenericInterface.oz' 25 3) nil 5) <Q: 1729> [y(0) g(18)])
		allocateL3
		createVariable(x(2))
		callBI(ooGetLock [x(2)]#nil)
		lockThread(303587 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true exit false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		createVariable(x(1))
		callBI('NewPort' [x(1)]#[x(2)])
		inlineAssign(<M: Port> x(2) cache)
		inlineAt(<M: Port> x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		sendMsg(register y(0) 1 cache)
		thread(303586)
		callBI('Thread.this' nil#[x(4)])
		inlineAssign(<M: ServerThread> x(4) cache)
		putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(1) x(0))
		putConstant(1 x(2))
		createVariableMove(y(0) x(3))
		marshalledFastCall(<R: tuple> 8)
		getSelf(x(1))
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(1) 1)
lbl(303586)	return
lbl(303587)	deAllocateL3
		return
		endDefinition(303491)
lbl(303591)	definition(x(8) 303626 pid('GenericInterface,init/slow' 1 pos('./compiler/GenericInterface.oz' 25 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1729> 5)
		endDefinition(303591)
lbl(303626)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(303636)	definition(x(7) 303718 pid('GenericInterface,exit/fast' 0 pos('./compiler/GenericInterface.oz' 37 3) nil 2) <Q: 1730> [g(28)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(303715 x(0))
		inlineAt(<M: Compiler> x(0) cache)
		match(x(0) ht(303658 [onScalar(unit 303706)]))
lbl(303658)	inlineAt(<M: ServerThread> x(0) cache)
		genFastCall(<P: 263> 2)
		inlineAt(<M: Compiler> x(1) cache)
		inlineAt(<M: Port> x(0) cache)
		sendMsg(unregister x(1) 1 cache)
		putConstant(unit x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: Port> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: ServerThread> x(0) cache)
lbl(303706)	getSelf(x(1))
		sendMsg(reset x(1) 0 cache)
		return
lbl(303715)	return
		endDefinition(303636)
lbl(303718)	definition(x(8) 303732 pid('GenericInterface,exit/slow' 1 pos('./compiler/GenericInterface.oz' 37 3) nil 1) unit nil)
		getLiteral(exit x(0))
		genFastCall(<Q: 1730> 1)
		endDefinition(303718)
lbl(303732)	putRecord('#' [1 2 fast] x(10))
		setConstant(exit)
		setValue(x(8))
		setValue(x(7))
lbl(303742)	definition(x(7) 303751 pid('GenericInterface,reset/fast' 0 pos('./compiler/GenericInterface.oz' 50 3) nil 0) <Q: 1731> nil)
		return
		endDefinition(303742)
lbl(303751)	definition(x(8) 303765 pid('GenericInterface,reset/slow' 1 pos('./compiler/GenericInterface.oz' 50 3) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1731> 1)
		endDefinition(303751)
lbl(303765)	putRecord('#' [1 2 fast] x(11))
		setConstant(reset)
		setValue(x(8))
		setValue(x(7))
lbl(303775)	definition(x(7) 303792 pid('GenericInterface,getCompiler/fast' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 2) <Q: 1732> nil)
		inlineAt(<M: Compiler> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(303775)
lbl(303792)	definition(x(8) 303818 pid('GenericInterface,getCompiler/slow' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1732> 3)
		endDefinition(303792)
lbl(303818)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCompiler)
		setValue(x(8))
		setValue(x(7))
lbl(303828)	definition(x(7) 303845 pid('GenericInterface,getPort/fast' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 2) <Q: 1733> nil)
		inlineAt(<M: Port> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(303828)
lbl(303845)	definition(x(8) 303871 pid('GenericInterface,getPort/slow' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1733> 3)
		endDefinition(303845)
lbl(303871)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPort)
		setValue(x(8))
		setValue(x(7))
lbl(303881)	definition(x(7) 303900 pid('GenericInterface,enqueue/fast' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 2) <Q: 1734> nil)
		inlineAt(<M: Compiler> x(1) cache)
		tailSendMsg(enqueue x(1) 1 cache)
		endDefinition(303881)
lbl(303900)	definition(x(8) 303926 pid('GenericInterface,enqueue/slow' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1734> 3)
		endDefinition(303900)
lbl(303926)	putRecord('#' [1 2 fast] x(14))
		setConstant(enqueue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('GenericInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(303967)	definition(x(7) 304095 pid('MessageToVS' 2 pos('./compiler/QuietInterface.oz' 23 3) nil 6) <Q: 1735> [y(3)])
		match(x(0) ht(304080 [onRecord(info 1 303976) onRecord(info 2 303982) onRecord(message 2 303988)]))
lbl(303976)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(303982)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(303988)	allocateL2
		getVariable(x(2))
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		move(g(0) x(3))
		inlineDot(x(3) msg x(4) cache)
lbl(304006)	definition(x(5) 304055 pid('' 1 pos('./compiler/QuietInterface.oz' 29 3) nil 5) unit [x(0) g(0)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(304006)
lbl(304055)	moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(5) x(0))
		move(x(2) x(1))
		call(x(4) 2)
		move(y(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(304080)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(34)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(303967)
lbl(304095)	definition(x(7) 304140 pid('HistoryToVS' 2 pos('./compiler/QuietInterface.oz' 37 3) nil 5) <Q: 1736> nil)
lbl(304101)	definition(x(4) 304126 pid('' 3 pos('./compiler/QuietInterface.oz' 39 7) nil 3) unit nil)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1735> 5)
		endDefinition(304101)
lbl(304126)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(304095)
lbl(304140)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: HasBeenTopped> <M: HasErrors> <M: History> <M: InsertedFiles> <M: SourceVS> <M: Verbose>] x(2))
		setConstant(false)
		setConstant(false)
		setConstant(nil)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
		putConstant(<M: Serve> x(8))
lbl(304179)	definition(x(9) 304250 pid('QuietInterface,init' 1 pos('./compiler/QuietInterface.oz' 49 6) nil 4) unit [x(7) y(0) x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 304227)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(304230)
lbl(304227)	getLiteral(false y(2))
lbl(304230)	move(y(2) x(0))
		inlineAssign(<M: Verbose> x(0) cache)
		move(y(1) x(0))
		move(g(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true init true 2) 0)
		endDefinition(304179)
lbl(304250)	putList(x(7))
		setConstant(init)
		setValue(x(9))
lbl(304256)	definition(x(8) 304314 pid('QuietInterface,reset/fast' 0 pos('./compiler/QuietInterface.oz' 53 6) nil 1) <Q: 1737> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(304311 x(0))
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: InsertedFiles> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: SourceVS> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		return
lbl(304311)	return
		endDefinition(304256)
lbl(304314)	definition(x(9) 304328 pid('QuietInterface,reset/slow' 1 pos('./compiler/QuietInterface.oz' 53 6) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1737> 1)
		endDefinition(304314)
lbl(304328)	putRecord('#' [1 2 fast] x(10))
		setConstant(reset)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(5))
lbl(304340)	definition(x(8) 304631 pid('QuietInterface,Serve/fast' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 4) <Q: 1738> [y(2) y(5)])
		testList(x(0) 304616)
lbl(304349)	allocateL4
		getVarVar(x(0) x(1))
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(304465 [onScalar(errorFound 304361) onScalar(toTop 304374) onRecord(info 1 304387) onRecord(info 2 304392) onRecord(message 2 304397) onRecord(insert 2 304402) onRecord(displaySource 3 304425)]))
lbl(304361)	putConstant(true x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		getLiteral(unit y(1))
		branch(304468)
lbl(304374)	putConstant(true x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		getLiteral(unit y(1))
		branch(304468)
lbl(304387)	unify(y(1) x(0))
		branch(304468)
lbl(304392)	unify(y(1) x(0))
		branch(304468)
lbl(304397)	unify(y(1) x(0))
		branch(304468)
lbl(304402)	getVariable(x(0))
		inlineAt(<M: InsertedFiles> x(2) cache)
		putList(x(3))
		setValue(x(0))
		setValue(x(2))
		inlineAssign(<M: InsertedFiles> x(3) cache)
		getLiteral(unit y(1))
		branch(304468)
lbl(304425)	getVoid(2)
		getVariable(x(0))
		inlineAt(<M: SourceVS> x(2) cache)
		testLiteral(x(2) nil 304445)
lbl(304438)	inlineAssign(<M: SourceVS> x(0) cache)
		branch(304460)
lbl(304445)	putRecord('#' 3 x(3))
		setValue(x(2))
		setConstant('\n\n')
		setValue(x(0))
		inlineAssign(<M: SourceVS> x(3) cache)
lbl(304460)	getLiteral(unit y(1))
		branch(304468)
lbl(304465)	getLiteral(unit y(1))
lbl(304468)	match(y(1) ht(304471 [onScalar(unit 304609)]))
lbl(304471)	inlineAt(<M: Verbose> x(0) cache)
		match(x(0) ht(304593 [onScalar(true 304479) onScalar(auto 304507)]))
lbl(304479)	move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1735> 4)
		move(y(3) x(0))
		call(y(2) 1)
		branch(304609)
lbl(304507)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
		inlineAt(<M: HasBeenTopped> x(0) cache)
		testBool(x(0) 304609 304582)
		move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		inlineAt(<M: History> x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1736> 4)
		move(y(2) x(0))
		call(y(1) 1)
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: Verbose> x(1) cache)
		branch(304609)
lbl(304582)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(304593)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
lbl(304609)	move(y(0) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: Serve> true 1) 0)
lbl(304616)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(103)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(304340)
lbl(304631)	definition(x(9) 304657 pid('QuietInterface,Serve/slow' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1738> 3)
		endDefinition(304631)
lbl(304657)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: Serve>)
		setValue(x(9))
		setValue(x(8))
lbl(304667)	definition(x(8) 304681 pid('QuietInterface,setVerbosity/fast' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 1) <Q: 1739> nil)
		inlineAssign(<M: Verbose> x(0) cache)
		return
		endDefinition(304667)
lbl(304681)	definition(x(9) 304707 pid('QuietInterface,setVerbosity/slow' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1739> 3)
		endDefinition(304681)
lbl(304707)	putRecord('#' [1 2 fast] x(12))
		setConstant(setVerbosity)
		setValue(x(9))
		setValue(x(8))
lbl(304717)	definition(x(8) 304734 pid('QuietInterface,hasErrors/fast' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 2) <Q: 1740> nil)
		inlineAt(<M: HasErrors> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(304717)
lbl(304734)	definition(x(9) 304760 pid('QuietInterface,hasErrors/slow' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1740> 3)
		endDefinition(304734)
lbl(304760)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasErrors)
		setValue(x(9))
		setValue(x(8))
lbl(304770)	definition(x(8) 304787 pid('QuietInterface,hasBeenTopped/fast' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 2) <Q: 1741> nil)
		inlineAt(<M: HasBeenTopped> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(304770)
lbl(304787)	definition(x(9) 304813 pid('QuietInterface,hasBeenTopped/slow' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1741> 3)
		endDefinition(304787)
lbl(304813)	putRecord('#' [1 2 fast] x(14))
		setConstant(hasBeenTopped)
		setValue(x(9))
		setValue(x(8))
lbl(304823)	definition(x(8) 304845 pid('QuietInterface,getVS/fast' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) <Q: 1742> nil)
		inlineAt(<M: History> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1736> 5)
		endDefinition(304823)
lbl(304845)	definition(x(9) 304871 pid('QuietInterface,getVS/slow' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1742> 3)
		endDefinition(304845)
lbl(304871)	putRecord('#' [1 2 fast] x(15))
		setConstant(getVS)
		setValue(x(9))
		setValue(x(8))
lbl(304881)	definition(x(8) 304932 pid('QuietInterface,getMessages/fast' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 5) <Q: 1743> nil)
		inlineAt(<M: History> x(4) cache)
lbl(304892)	definition(x(1) 304918 pid('' 3 pos('./compiler/QuietInterface.oz' 120 3) nil 3) unit nil)
		testRecord(x(1) message 2 304912)
lbl(304903)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(304912)	unify(x(2) x(0))
		return
		endDefinition(304892)
lbl(304918)	move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(304881)
lbl(304932)	definition(x(9) 304958 pid('QuietInterface,getMessages/slow' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1743> 3)
		endDefinition(304932)
lbl(304958)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMessages)
		setValue(x(9))
		setValue(x(8))
lbl(304968)	definition(x(8) 304995 pid('QuietInterface,formatMessages/fast' 2 pos('./compiler/QuietInterface.oz' 126 6) nil 2) <Q: 1744> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1736> 5)
		endDefinition(304968)
lbl(304995)	definition(x(9) 305030 pid('QuietInterface,formatMessages/slow' 1 pos('./compiler/QuietInterface.oz' 126 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1744> 5)
		endDefinition(304995)
lbl(305030)	putRecord('#' [1 2 fast] x(17))
		setConstant(formatMessages)
		setValue(x(9))
		setValue(x(8))
lbl(305040)	definition(x(8) 305062 pid('QuietInterface,getInsertedFiles/fast' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) <Q: 1745> nil)
		inlineAt(<M: InsertedFiles> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 28> 5)
		endDefinition(305040)
lbl(305062)	definition(x(9) 305088 pid('QuietInterface,getInsertedFiles/slow' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1745> 3)
		endDefinition(305062)
lbl(305088)	putRecord('#' [1 2 fast] x(18))
		setConstant(getInsertedFiles)
		setValue(x(9))
		setValue(x(8))
lbl(305098)	definition(x(8) 305115 pid('QuietInterface,getSource/fast' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 2) <Q: 1746> nil)
		inlineAt(<M: SourceVS> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(305098)
lbl(305115)	definition(x(9) 305141 pid('QuietInterface,getSource/slow' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1746> 3)
		endDefinition(305115)
lbl(305141)	putRecord('#' [1 2 fast] x(19))
		setConstant(getSource)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		move(y(5) x(6))
		putConstant('feat' x(3))
		putConstant('QuietInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(305189)	definition(x(0) 305417 pid('EvalExpression' 4 pos('./compiler/Abstractions.oz' 1 0) nil 6) <Q: 1747> [y(1) y(5) g(18) g(28) g(21)])
		allocateL6
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(expression)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord('return' [result] x(2))
		setValue(y(3))
		putRecord(feedVirtualString 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue y(4) 1 cache)
		createVariable(y(1))
		thread(305407)
		callBI('Thread.this' nil#[x(1)])
lbl(305305)	definition(x(0) 305335 pid('Kill' 0 pos('./compiler/Abstractions.oz' 10 6) nil 1) unit [y(4) g(3) x(1) y(1)])
		sendMsg(clearQueue g(0) 0 cache)
		sendMsg(interrupt g(0) 0 cache)
		move(g(2) x(0))
		genFastCall(<P: 263> 2)
		getLiteral(unit g(3))
		return
		endDefinition(305305)
lbl(305335)	unify(x(0) y(2))
		putRecord(ping 1 x(0))
		setVariable(y(2))
		sendMsg(enqueue y(4) 1 cache)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(2) x(0))
		sendMsg(hasErrors y(5) 1 cache)
		testBool(y(2) 305402 305391)
		createVariableMove(y(2) x(0))
		sendMsg(getMessages y(5) 1 cache)
		putRecord(compiler 3 x(0))
		setConstant(evalExpression)
		setValue(y(0))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305391)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(17)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(305402)	getLiteral(unit y(1))
		deAllocateL6
		return
lbl(305407)	move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
		deAllocateL6
		return
		endDefinition(305189)
lbl(305417)	definition(x(1) 305436 pid('VirtualStringToValue' 2 pos('./compiler/Abstractions.oz' 26 0) nil 4) <Q: 1748> nil)
		move(x(1) x(3))
		putConstant(env x(1))
		createVariable(x(2))
		genFastCall(<Q: 1747> 9)
		endDefinition(305417)
lbl(305436)	move(y(4) x(2))
		inlineDot(x(2) put x(2) cache)
lbl(305445)	definition(x(3) 305906 pid('' 2 pos('./compiler/Errors.oz' 26 1) nil 12) <Q: 1749> [y(3)])
		allocateL6
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('compiler engine error' y(3))
		testRecord(y(2) compiler 2 305531)
lbl(305480)	getVarVar(x(0) x(1))
		testLiteral(x(0) invalidQuery 305531)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Query')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Invalid query' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(305531)	testRecord(y(2) compiler 4 305621)
lbl(305536)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) invalidQuery 305621)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(7))
		setValue(x(1))
		putRecord(hint [l m] x(4))
		setConstant('Query')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('At argument')
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Expected type')
		setValue(x(3))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(4))
		setValue(x(8))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ill-typed query argument' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(305621)	testRecord(y(2) compiler 2 305677)
lbl(305626)	getVarVar(x(0) x(1))
		testLiteral(x(0) register 305677)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Argument')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Trying to register a non-port' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(305677)	testRecord(y(2) compiler 3 305883)
lbl(305682)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		createVariable(y(2))
		testLiteral(x(0) evalExpression 305883)
		move(g(0) x(0))
		inlineDot(x(0) format x(2) cache)
lbl(305703)	definition(x(3) 305848 pid('' 2 pos('./compiler/Errors.oz' 51 2) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createCond(305778)
lbl(305717)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(305759)
		putConstant(error x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(305759)	ask
lbl(305760)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(305778)	createCond(305841)
lbl(305780)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(305822)
		putConstant(warn x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(305822)	ask
lbl(305823)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(305841)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(305703)
lbl(305848)	move(x(2) y(4))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant('Compiler.evalExpression applied to an erroneous query' x(1))
		deAllocateL6
		tailCall(x(5) 5)
lbl(305883)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailCall(x(3) 3)
		endDefinition(305445)
lbl(305906)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(3) x(1))
		putConstant(compiler x(0))
		call(x(2) 2)
		getRecord('export' [compilerEngine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(29))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(5))
		unifyValue(y(3))
		deAllocateL
		return
		endDefinition(284396)
lbl(305942)	tailCall(x(3) 0)
		endDefinition(283346)
lbl(305947)	putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/5')
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant('class')
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/4')
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant('procedure/2')
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(3))
		setConstant(assemble)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(12))
		setConstant(nil)
		putRecord(info [type] x(13))
		setConstant(nil)
		putList(x(15))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(14))
		setValue(x(15))
		putList(x(18))
		setConstant(isPrintName)
		setConstant(nil)
		putList(x(17))
		setConstant(nameVariable)
		setValue(x(18))
		putRecord(info [type] x(16))
		setValue(x(17))
		putRecord(info [type] x(19))
		setConstant(nil)
		putList(x(22))
		setConstant(condGet)
		setConstant(nil)
		putList(x(21))
		setConstant(get)
		setValue(x(22))
		putRecord(info [type] x(20))
		setValue(x(21))
		putRecord(info [type] x(23))
		setConstant(nil)
		putList(x(27))
		setConstant(unnestQuery)
		setConstant(nil)
		putList(x(26))
		setConstant(makeExpressionQuery)
		setValue(x(27))
		putList(x(25))
		setConstant(joinQueries)
		setValue(x(26))
		putRecord(info [type] x(24))
		setValue(x(25))
		putRecord('import' ['Assembler' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Misc' 'Parser' 'Property' 'System' 'Unnest'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(16))
		setValue(x(19))
		setValue(x(20))
		setValue(x(23))
		setValue(x(24))
		putRecord('export' [compilerEngine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(5))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		setValue(x(9))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(306193)	definition(x(2) 306707 pid('' 2 pos('./compiler/FunMain.oz' 1 0) nil 4) <P: 1750> [y(54) y(159) y(100) y(95) y(96) y(97) y(2) y(98) y(1)])
		putList(x(2))
		setConstant(<M: ImAConstruction>)
		setConstant(nil)
		putList(x(3))
		setConstant(<M: ImAValueNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAVariableOccurrence>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAToken>)
		setValue(x(2))
lbl(306223)	definitionCopy(x(3) 306702 pid('/body' 0 pos('./compiler/FunMain.oz' 1 0) [once] 15) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(16)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'FS' x(8) cache)
		inlineDot(x(0) 'FD' x(9) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(10) cache)
		inlineDot(x(0) 'Module' x(11) cache)
		move(g(1) x(12))
		inlineDot(x(12) apply x(13) cache)
		putRecord(c ['CompilerSupport'] x(14))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		move(x(11) y(10))
		move(x(14) x(0))
		createVariableMove(y(11) x(1))
		call(x(13) 2)
		move(g(2) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant(c x(0))
		createVariableMove(y(12) x(1))
		call(x(2) 2)
		move(g(3) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'ImAConstruction' 'ImAToken' 'ImAValueNode' 'ImAVariableOccurrence' 'Misc' 'RunTime' 'System'] x(3))
		setValue(y(12))
		setValue(y(2))
		setVariable(y(13))
		setValue(y(8))
		setValue(y(7))
		setConstant(<M: ImAConstruction>)
		setConstant(<M: ImAToken>)
		setConstant(<M: ImAValueNode>)
		setConstant(<M: ImAVariableOccurrence>)
		setValue(y(11))
		setVariable(y(14))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(4) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'Core' 'ImAVariableOccurrence' 'Misc' 'RunTime' 'System'] x(3))
		setValue(y(12))
		setValue(y(13))
		setConstant(<M: ImAVariableOccurrence>)
		setValue(y(11))
		setValue(y(14))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(15) x(1))
		call(x(2) 2)
		move(g(5) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CodeGen' 'ImAConstruction' 'ImAToken' 'ImAValueNode' 'ImAVariableOccurrence' 'Misc' 'SA' 'System'] x(3))
		setValue(y(15))
		setConstant(<M: ImAConstruction>)
		setConstant(<M: ImAToken>)
		setConstant(<M: ImAValueNode>)
		setConstant(<M: ImAVariableOccurrence>)
		setValue(y(11))
		setValue(y(7))
		setValue(y(4))
		move(x(3) x(0))
		move(y(13) x(1))
		call(x(2) 2)
		move(g(6) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Core' 'Module' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(13))
		setValue(y(10))
		setValue(y(9))
		setValue(y(4))
		move(x(3) x(0))
		move(y(14) x(1))
		call(x(2) 2)
		move(g(7) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CompilerSupport' 'Core' 'Debug' 'FD' 'Misc' 'RunTime'] x(3))
		setValue(y(2))
		setValue(y(13))
		setValue(y(0))
		setValue(y(8))
		setValue(y(11))
		setValue(y(14))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(12))
		setValue(y(2))
		setValue(y(9))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(g(9) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Assembler' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Misc' 'Parser' 'Property' 'System' 'Unnest'] x(3))
		setValue(y(2))
		setValue(y(13))
		setValue(y(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(11))
		setValue(y(1))
		setValue(y(3))
		setValue(y(4))
		setValue(y(7))
		move(x(3) x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(y(0) x(0))
		inlineDot(x(0) compilerEngine x(1) cache)
		inlineDot(x(0) parseOzFile x(2) cache)
		inlineDot(x(0) parseOzVirtualString x(3) cache)
		inlineDot(x(0) genericInterface x(4) cache)
		inlineDot(x(0) quietInterface x(5) cache)
		inlineDot(x(0) evalExpression x(6) cache)
		inlineDot(x(0) virtualStringToValue x(0) cache)
		move(y(2) x(7))
		inlineDot(x(7) doAssemble x(7) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(10))
		unifyValue(x(7))
		unifyValue(x(1))
		unifyValue(x(6))
		unifyValue(x(4))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(5))
		unifyValue(x(0))
		deAllocateL
		return
		endDefinition(306223)
lbl(306702)	tailCall(x(3) 0)
		endDefinition(306193)
lbl(306707)	putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(6))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(7))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(8))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(9))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(10))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(11))
		setValue(x(4))
		putList(x(4))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(12))
		setValue(x(4))
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info ['from' type] x(3))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(13))
		setConstant(nil)
		putRecord(info [type] x(14))
		setConstant(nil)
		putRecord(info [type] x(15))
		setConstant(nil)
		putRecord(info [type] x(16))
		setConstant(nil)
		putRecord(info ['from' type] x(17))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putRecord(info [type] x(18))
		setConstant(nil)
		putRecord(info [type] x(19))
		setConstant(nil)
		putRecord(info [type] x(20))
		setConstant(nil)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FS' 'Module' 'Parser' 'Property' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(12))
		setValue(x(5))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		setValue(x(9))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(url ['functor' home pickle] y(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
		putConstant('BootManager' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putConstant('Pickle' x(4))
		callBI('BootManager' [x(4)]#[x(5)])
		inlineDot(x(5) save x(0) cache)
lbl(306958)	definition(x(2) 315528 pid('' 2 pos('./MakeAssembly.oz' 88 1) nil 3) <P: 1751> [y(230) y(191) y(224) y(91) y(92) y(145) y(1) y(146) y(47) y(24) y(48) y(23) y(49) y(53) y(39) y(52) y(55) y(158) y(0)])
		putList(x(0))
		setPredicateRef(<Q: 1752>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 1753>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1754>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1755>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1756>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1757>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1758>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1759>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1760>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1761>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1762>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1763>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1764>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1765>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1766>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1767>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1768>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1769>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1770>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1771>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1772>)
		setValue(x(2))
lbl(307090)	definitionCopy(x(0) 315523 pid('/body' 0 pos('./MakeAssembly.oz' 88 1) [once] 511) unit [g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) x(1)])
		allocateL(19)
		putRecord('export' [open] x(0))
		setConstant(unit)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FDB' 'FDP' 'FS' 'FSB' 'FSP' 'Module' 'OS' 'Open' 'Parser' 'Pickle' 'Property' 'Resolve' 'RunTimeLibrary' 'System'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setValue(x(0))
		setValue(g(0))
		setVariable(y(17))
		putConstant('BootManager' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
lbl(307155)	definition(x(1) 307192 pid('' 1 pos('./MakeAssembly.oz' 134 5) nil 3) <Q: 1752> nil)
		shallowGuard(307179)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(307171)	shallowThen
		callBI('BootManager' [x(1)]#[x(0)])
		unify(x(0) x(2))
		return
lbl(307179)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(134)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(307155)
lbl(307192)	putRecord('#' 2 x(3))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(5))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(7))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(9))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(11))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(13))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(15))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(17))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(19))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(21))
		setConstant('CompilerSupport')
		setValue(y(1))
		putRecord('#' 2 x(23))
		setConstant('Property')
		setValue(y(16))
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		move(x(0) y(18))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
lbl(307355)	definition(x(1) 307414 pid('' 1 pos('./MakeAssembly.oz' 146 5) nil 3) <Q: 1753> [y(0)])
		shallowGuard(307401)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(307371)	shallowThen
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		thread(307399)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(2) 2)
lbl(307399)	deAllocateL2
		return
lbl(307401)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(146)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(307355)
lbl(307414)	putRecord('#' 2 x(2))
		setValue(y(4))
		setValue(g(1))
		putRecord('#' 2 x(4))
		setValue(y(3))
		setValue(g(2))
		putRecord('#' 2 x(6))
		setValue(y(5))
		setValue(g(3))
		putRecord('#' 2 x(8))
		setValue(y(8))
		setValue(g(4))
		putRecord('#' 2 x(10))
		setValue(y(13))
		setValue(g(5))
		putRecord('#' 2 x(12))
		setVariable(y(0))
		setValue(g(6))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
		move(g(7) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(b [manager] x(1))
		setValue(y(18))
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(3))
		setValue(x(1))
		setValue(y(12))
		setValue(y(15))
		setValue(y(17))
		move(x(3) x(0))
		move(y(11) x(1))
		call(x(2) 2)
lbl(307537)	definition(x(1) 307596 pid('' 1 pos('./MakeAssembly.oz' 162 5) nil 5) <Q: 1754> [y(11)])
		shallowGuard(307583)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(307553)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		putRecord('#' 2 x(4))
		setConstant('x-oz://boot/')
		setValue(x(1))
		move(x(2) x(0))
		move(x(4) x(1))
		tailSendMsg(enter x(3) [1 url] cache)
lbl(307583)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(162)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(307537)
lbl(307596)	putRecord('#' 2 x(2))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(4))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(6))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(8))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(10))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(12))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(14))
		setConstant('CompilerSupport')
		setValue(y(1))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(307697)	definition(x(1) 307745 pid('' 1 pos('./MakeAssembly.oz' 177 5) nil 4) <Q: 1755> [y(11)])
		shallowGuard(307732)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(307713)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		move(x(2) x(0))
		tailSendMsg(enter x(3) [1 name] cache)
lbl(307732)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(177)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(307697)
lbl(307745)	putRecord('#' 2 x(2))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(4))
		setConstant('Property')
		setValue(y(16))
		putRecord('#' 2 x(6))
		setConstant('ErrorRegistry')
		setValue(y(4))
		putRecord('#' 2 x(8))
		setConstant('Error')
		setValue(y(3))
		putRecord('#' 2 x(10))
		setConstant('FD')
		setValue(y(5))
		putRecord('#' 2 x(12))
		setConstant('FS')
		setValue(y(8))
		putRecord('#' 2 x(14))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(16))
		setConstant('Open')
		setValue(y(13))
		putRecord('#' 2 x(18))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(20))
		setConstant('Compiler')
		setValue(y(0))
		putRecord('#' 2 x(22))
		setConstant('Module')
		setValue(y(11))
		putList(x(21))
		setValue(x(22))
		setConstant(nil)
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(307902)	definition(x(2) 308042 pid('ConvertBooleanOpts' 2 pos('./BatchCompile.oz' 29 6) nil 12) <Q: 1756> nil)
		match(x(0) ht(308027 [onScalar(nil 307911) onRecord('|' 2 307915)]))
lbl(307911)	getLiteral(nil x(1))
		return
lbl(307915)	getVarVar(x(0) x(2))
		getRecord('#' 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		putConstant(type x(6))
		putConstant(unit x(7))
		callBI('CondSelect' [x(5) x(6) x(7)]#[x(8)])
		testLiteral(x(8) bool 308017)
lbl(307941)	getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(x(3))
		unifyValVar(x(4) x(6))
		getList(x(1))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord('#' 3 x(7))
		unifyLiteral(unit)
		unifyVariable(x(9))
		unifyVariable(x(10))
		getList(x(9))
		unifyNumber(110)
		unifyVariable(x(11))
		getList(x(11))
		unifyNumber(111)
		unifyValue(x(4))
		putConstant(value x(3))
		putConstant(true x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(6))
		putConstant(value x(3))
		putConstant(false x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(10))
		move(x(2) x(0))
		move(x(8) x(1))
		genFastCall(<Q: 1756> 5)
lbl(308017)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1756> 5)
lbl(308027)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(40)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(307902)
lbl(308042)	putList(x(5))
		setConstant(101)
		setConstant(nil)
		putList(x(4))
		setConstant(114)
		setValue(x(5))
		putList(x(3))
		setConstant(111)
		setValue(x(4))
		putList(x(2))
		setConstant(99)
		setValue(x(3))
		putRecord(mode [value] x(6))
		setConstant(core)
		putRecord('#' 3 x(1))
		setConstant(69)
		setValue(x(2))
		setValue(x(6))
		putList(x(18))
		setConstant(101)
		setConstant(nil)
		putList(x(17))
		setConstant(100)
		setValue(x(18))
		putList(x(16))
		setConstant(111)
		setValue(x(17))
		putList(x(15))
		setConstant(99)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(117)
		setValue(x(14))
		putList(x(12))
		setConstant(112)
		setValue(x(13))
		putList(x(11))
		setConstant(116)
		setValue(x(12))
		putList(x(10))
		setConstant(117)
		setValue(x(11))
		putList(x(9))
		setConstant(111)
		setValue(x(10))
		putRecord(mode [value] x(19))
		setConstant(outputcode)
		putRecord('#' 3 x(8))
		setConstant(83)
		setValue(x(9))
		setValue(x(19))
		putList(x(25))
		setConstant(97)
		setConstant(nil)
		putList(x(24))
		setConstant(109)
		setValue(x(25))
		putList(x(23))
		setConstant(122)
		setValue(x(24))
		putList(x(22))
		setConstant(111)
		setValue(x(23))
		putRecord(mode [value] x(26))
		setConstant(ozma)
		putRecord('#' 3 x(21))
		setConstant(115)
		setValue(x(22))
		setValue(x(26))
		putList(x(42))
		setConstant(114)
		setConstant(nil)
		putList(x(41))
		setConstant(111)
		setValue(x(42))
		putList(x(40))
		setConstant(116)
		setValue(x(41))
		putList(x(39))
		setConstant(97)
		setValue(x(40))
		putList(x(38))
		setConstant(108)
		setValue(x(39))
		putList(x(37))
		setConstant(117)
		setValue(x(38))
		putList(x(36))
		setConstant(109)
		setValue(x(37))
		putList(x(35))
		setConstant(101)
		setValue(x(36))
		putList(x(34))
		setConstant(111)
		setValue(x(35))
		putList(x(33))
		setConstant(116)
		setValue(x(34))
		putList(x(32))
		setConstant(100)
		setValue(x(33))
		putList(x(31))
		setConstant(101)
		setValue(x(32))
		putList(x(30))
		setConstant(101)
		setValue(x(31))
		putList(x(29))
		setConstant(102)
		setValue(x(30))
		putRecord(mode [value] x(43))
		setConstant(feedtoemulator)
		putRecord('#' 3 x(28))
		setConstant(101)
		setValue(x(29))
		setValue(x(43))
		putList(x(49))
		setConstant(112)
		setConstant(nil)
		putList(x(48))
		setConstant(109)
		setValue(x(49))
		putList(x(47))
		setConstant(117)
		setValue(x(48))
		putList(x(46))
		setConstant(100)
		setValue(x(47))
		putRecord(mode [value] x(50))
		setConstant(dump)
		putRecord('#' 3 x(45))
		setConstant(99)
		setValue(x(46))
		setValue(x(50))
		putList(x(58))
		setConstant(116)
		setConstant(nil)
		putList(x(57))
		setConstant(101)
		setValue(x(58))
		putList(x(56))
		setConstant(108)
		setValue(x(57))
		putList(x(55))
		setConstant(115)
		setValue(x(56))
		putList(x(54))
		setConstant(121)
		setValue(x(55))
		putList(x(53))
		setConstant(115)
		setValue(x(54))
		putRecord(mode [value] x(59))
		setConstant(syslet)
		putRecord('#' 3 x(52))
		setConstant(120)
		setValue(x(53))
		setValue(x(59))
		putList(x(71))
		setConstant(100)
		setConstant(nil)
		putList(x(70))
		setConstant(110)
		setValue(x(71))
		putList(x(69))
		setConstant(101)
		setValue(x(70))
		putList(x(68))
		setConstant(112)
		setValue(x(69))
		putList(x(67))
		setConstant(101)
		setValue(x(68))
		putList(x(66))
		setConstant(100)
		setValue(x(67))
		putList(x(65))
		setConstant(101)
		setValue(x(66))
		putList(x(64))
		setConstant(107)
		setValue(x(65))
		putList(x(63))
		setConstant(97)
		setValue(x(64))
		putList(x(62))
		setConstant(109)
		setValue(x(63))
		putRecord(makedepend [type] x(72))
		setConstant(bool)
		putRecord('#' 3 x(61))
		setConstant(77)
		setValue(x(62))
		setValue(x(72))
		putList(x(78))
		setConstant(112)
		setConstant(nil)
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(101)
		setValue(x(77))
		putList(x(75))
		setConstant(104)
		setValue(x(76))
		putRecord(help [value] x(79))
		setConstant(unit)
		putRecord('#' 3 x(74))
		setConstant(104)
		setValue(x(75))
		setValue(x(79))
		putRecord(help [value] x(82))
		setConstant(unit)
		putRecord('#' 3 x(81))
		setConstant(63)
		setConstant(unit)
		setValue(x(82))
		putList(x(90))
		setConstant(101)
		setConstant(nil)
		putList(x(89))
		setConstant(110)
		setValue(x(90))
		putList(x(88))
		setConstant(105)
		setValue(x(89))
		putList(x(87))
		setConstant(102)
		setValue(x(88))
		putList(x(86))
		setConstant(101)
		setValue(x(87))
		putList(x(85))
		setConstant(100)
		setValue(x(86))
		putRecord('define' [type] x(91))
		setConstant(atom)
		putRecord('#' 3 x(84))
		setConstant(68)
		setValue(x(85))
		setValue(x(91))
		putList(x(101))
		setConstant(101)
		setConstant(nil)
		putList(x(100))
		setConstant(110)
		setValue(x(101))
		putList(x(99))
		setConstant(105)
		setValue(x(100))
		putList(x(98))
		setConstant(102)
		setValue(x(99))
		putList(x(97))
		setConstant(101)
		setValue(x(98))
		putList(x(96))
		setConstant(100)
		setValue(x(97))
		putList(x(95))
		setConstant(110)
		setValue(x(96))
		putList(x(94))
		setConstant(117)
		setValue(x(95))
		putRecord(undef [type] x(102))
		setConstant(atom)
		putRecord('#' 3 x(93))
		setConstant(85)
		setValue(x(94))
		setValue(x(102))
		putList(x(111))
		setConstant(101)
		setConstant(nil)
		putList(x(110))
		setConstant(115)
		setValue(x(111))
		putList(x(109))
		setConstant(111)
		setValue(x(110))
		putList(x(108))
		setConstant(98)
		setValue(x(109))
		putList(x(107))
		setConstant(114)
		setValue(x(108))
		putList(x(106))
		setConstant(101)
		setValue(x(107))
		putList(x(105))
		setConstant(118)
		setValue(x(106))
		putRecord(verbose [value] x(112))
		setConstant(true)
		putRecord('#' 3 x(104))
		setConstant(118)
		setValue(x(105))
		setValue(x(112))
		putList(x(119))
		setConstant(116)
		setConstant(nil)
		putList(x(118))
		setConstant(101)
		setValue(x(119))
		putList(x(117))
		setConstant(105)
		setValue(x(118))
		putList(x(116))
		setConstant(117)
		setValue(x(117))
		putList(x(115))
		setConstant(113)
		setValue(x(116))
		putRecord(verbose [value] x(120))
		setConstant(false)
		putRecord('#' 3 x(114))
		setConstant(113)
		setValue(x(115))
		setValue(x(120))
		putList(x(132))
		setConstant(101)
		setConstant(nil)
		putList(x(131))
		setConstant(108)
		setValue(x(132))
		putList(x(130))
		setConstant(105)
		setValue(x(131))
		putList(x(129))
		setConstant(102)
		setValue(x(130))
		putList(x(128))
		setConstant(116)
		setValue(x(129))
		putList(x(127))
		setConstant(117)
		setValue(x(128))
		putList(x(126))
		setConstant(112)
		setValue(x(127))
		putList(x(125))
		setConstant(116)
		setValue(x(126))
		putList(x(124))
		setConstant(117)
		setValue(x(125))
		putList(x(123))
		setConstant(111)
		setValue(x(124))
		putRecord(outputfile [type] x(133))
		setConstant(string)
		putRecord('#' 3 x(122))
		setConstant(111)
		setValue(x(123))
		setValue(x(133))
		putList(x(146))
		setConstant(116)
		setConstant(nil)
		putList(x(145))
		setConstant(110)
		setValue(x(146))
		putList(x(144))
		setConstant(101)
		setValue(x(145))
		putList(x(143))
		setConstant(109)
		setValue(x(144))
		putList(x(142))
		setConstant(110)
		setValue(x(143))
		putList(x(141))
		setConstant(111)
		setValue(x(142))
		putList(x(140))
		setConstant(114)
		setValue(x(141))
		putList(x(139))
		setConstant(105)
		setValue(x(140))
		putList(x(138))
		setConstant(118)
		setValue(x(139))
		putList(x(137))
		setConstant(110)
		setValue(x(138))
		putList(x(136))
		setConstant(101)
		setValue(x(137))
		putRecord(environment [type] x(147))
		setConstant(string)
		putRecord('#' 3 x(135))
		setConstant(108)
		setValue(x(136))
		setValue(x(147))
		putList(x(155))
		setConstant(114)
		setConstant(nil)
		putList(x(154))
		setConstant(105)
		setValue(x(155))
		putList(x(153))
		setConstant(100)
		setValue(x(154))
		putList(x(152))
		setConstant(99)
		setValue(x(153))
		putList(x(151))
		setConstant(110)
		setValue(x(152))
		putList(x(150))
		setConstant(105)
		setValue(x(151))
		putRecord(incdir [type] x(156))
		setConstant(string)
		putRecord('#' 3 x(149))
		setConstant(73)
		setValue(x(150))
		setValue(x(156))
		putList(x(165))
		setConstant(101)
		setConstant(nil)
		putList(x(164))
		setConstant(100)
		setValue(x(165))
		putList(x(163))
		setConstant(117)
		setValue(x(164))
		putList(x(162))
		setConstant(108)
		setValue(x(163))
		putList(x(161))
		setConstant(99)
		setValue(x(162))
		putList(x(160))
		setConstant(110)
		setValue(x(161))
		putList(x(159))
		setConstant(105)
		setValue(x(160))
		putRecord(include [type] x(166))
		setConstant(string)
		putRecord('#' 3 x(158))
		setConstant(unit)
		setValue(x(159))
		setValue(x(166))
		putList(x(180))
		setConstant(120)
		setConstant(nil)
		putList(x(179))
		setConstant(105)
		setValue(x(180))
		putList(x(178))
		setConstant(102)
		setValue(x(179))
		putList(x(177))
		setConstant(101)
		setValue(x(178))
		putList(x(176))
		setConstant(114)
		setValue(x(177))
		putList(x(175))
		setConstant(112)
		setValue(x(176))
		putList(x(174))
		setConstant(116)
		setValue(x(175))
		putList(x(173))
		setConstant(101)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(115)
		setValue(x(172))
		putList(x(170))
		setConstant(121)
		setValue(x(171))
		putList(x(169))
		setConstant(115)
		setValue(x(170))
		putRecord(sysletprefix [type] x(181))
		setConstant(string)
		putRecord('#' 3 x(168))
		setConstant(unit)
		setValue(x(169))
		setValue(x(181))
		putList(x(192))
		setConstant(115)
		setConstant(nil)
		putList(x(191))
		setConstant(114)
		setValue(x(192))
		putList(x(190))
		setConstant(111)
		setValue(x(191))
		putList(x(189))
		setConstant(114)
		setValue(x(190))
		putList(x(188))
		setConstant(114)
		setValue(x(189))
		putList(x(187))
		setConstant(101)
		setValue(x(188))
		putList(x(186))
		setConstant(120)
		setValue(x(187))
		putList(x(185))
		setConstant(97)
		setValue(x(186))
		putList(x(184))
		setConstant(109)
		setValue(x(185))
		putRecord(maxerrors [type] x(193))
		setConstant(int)
		putRecord('#' 3 x(183))
		setConstant(unit)
		setValue(x(184))
		setValue(x(193))
		putList(x(209))
		setConstant(115)
		setConstant(nil)
		putList(x(208))
		setConstant(101)
		setValue(x(209))
		putList(x(207))
		setConstant(115)
		setValue(x(208))
		putList(x(206))
		setConstant(115)
		setValue(x(207))
		putList(x(205))
		setConstant(97)
		setValue(x(206))
		putList(x(204))
		setConstant(112)
		setValue(x(205))
		putList(x(203))
		setConstant(114)
		setValue(x(204))
		putList(x(202))
		setConstant(101)
		setValue(x(203))
		putList(x(201))
		setConstant(108)
		setValue(x(202))
		putList(x(200))
		setConstant(105)
		setValue(x(201))
		putList(x(199))
		setConstant(112)
		setValue(x(200))
		putList(x(198))
		setConstant(109)
		setValue(x(199))
		putList(x(197))
		setConstant(111)
		setValue(x(198))
		putList(x(196))
		setConstant(99)
		setValue(x(197))
		putRecord(compilerpasses [type] x(210))
		setConstant(bool)
		putRecord('#' 3 x(195))
		setConstant(unit)
		setValue(x(196))
		setValue(x(210))
		putList(x(222))
		setConstant(116)
		setConstant(nil)
		putList(x(221))
		setConstant(114)
		setValue(x(222))
		putList(x(220))
		setConstant(101)
		setValue(x(221))
		putList(x(219))
		setConstant(115)
		setValue(x(220))
		putList(x(218))
		setConstant(110)
		setValue(x(219))
		putList(x(217))
		setConstant(105)
		setValue(x(218))
		putList(x(216))
		setConstant(119)
		setValue(x(217))
		putList(x(215))
		setConstant(111)
		setValue(x(216))
		putList(x(214))
		setConstant(104)
		setValue(x(215))
		putList(x(213))
		setConstant(115)
		setValue(x(214))
		putRecord(showinsert [type] x(223))
		setConstant(bool)
		putRecord('#' 3 x(212))
		setConstant(unit)
		setValue(x(213))
		setValue(x(223))
		putList(x(236))
		setConstant(115)
		setConstant(nil)
		putList(x(235))
		setConstant(101)
		setValue(x(236))
		putList(x(234))
		setConstant(105)
		setValue(x(235))
		putList(x(233))
		setConstant(114)
		setValue(x(234))
		putList(x(232))
		setConstant(101)
		setValue(x(233))
		putList(x(231))
		setConstant(117)
		setValue(x(232))
		putList(x(230))
		setConstant(113)
		setValue(x(231))
		putList(x(229))
		setConstant(111)
		setValue(x(230))
		putList(x(228))
		setConstant(104)
		setValue(x(229))
		putList(x(227))
		setConstant(99)
		setValue(x(228))
		putList(x(226))
		setConstant(101)
		setValue(x(227))
		putRecord(echoqueries [type] x(237))
		setConstant(bool)
		putRecord('#' 3 x(225))
		setConstant(unit)
		setValue(x(226))
		setValue(x(237))
		putList(x(251))
		setConstant(115)
		setConstant(nil)
		putList(x(250))
		setConstant(101)
		setValue(x(251))
		putList(x(249))
		setConstant(114)
		setValue(x(250))
		putList(x(248))
		setConstant(97)
		setValue(x(249))
		putList(x(247))
		setConstant(108)
		setValue(x(248))
		putList(x(246))
		setConstant(99)
		setValue(x(247))
		putList(x(245))
		setConstant(101)
		setValue(x(246))
		putList(x(244))
		setConstant(100)
		setValue(x(245))
		putList(x(243))
		setConstant(119)
		setValue(x(244))
		putList(x(242))
		setConstant(111)
		setValue(x(243))
		putList(x(241))
		setConstant(104)
		setValue(x(242))
		putList(x(240))
		setConstant(115)
		setValue(x(241))
		putRecord(showdeclares [type] x(252))
		setConstant(bool)
		putRecord('#' 3 x(239))
		setConstant(unit)
		setValue(x(240))
		setValue(x(252))
		putList(x(269))
		setConstant(101)
		setConstant(nil)
		putList(x(268))
		setConstant(109)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(116)
		setValue(x(267))
		putList(x(265))
		setConstant(101)
		setValue(x(266))
		putList(x(264))
		setConstant(108)
		setValue(x(265))
		putList(x(263))
		setConstant(105)
		setValue(x(264))
		putList(x(262))
		setConstant(112)
		setValue(x(263))
		putList(x(261))
		setConstant(109)
		setValue(x(262))
		putList(x(260))
		setConstant(111)
		setValue(x(261))
		putList(x(259))
		setConstant(99)
		setValue(x(260))
		putList(x(258))
		setConstant(119)
		setValue(x(259))
		putList(x(257))
		setConstant(111)
		setValue(x(258))
		putList(x(256))
		setConstant(104)
		setValue(x(257))
		putList(x(255))
		setConstant(115)
		setValue(x(256))
		putRecord(showcompiletime [type] x(270))
		setConstant(bool)
		putRecord('#' 3 x(254))
		setConstant(unit)
		setValue(x(255))
		setValue(x(270))
		putList(x(289))
		setConstant(121)
		setConstant(nil)
		putList(x(288))
		setConstant(114)
		setValue(x(289))
		putList(x(287))
		setConstant(111)
		setValue(x(288))
		putList(x(286))
		setConstant(109)
		setValue(x(287))
		putList(x(285))
		setConstant(101)
		setValue(x(286))
		putList(x(284))
		setConstant(109)
		setValue(x(285))
		putList(x(283))
		setConstant(101)
		setValue(x(284))
		putList(x(282))
		setConstant(108)
		setValue(x(283))
		putList(x(281))
		setConstant(105)
		setValue(x(282))
		putList(x(280))
		setConstant(112)
		setValue(x(281))
		putList(x(279))
		setConstant(109)
		setValue(x(280))
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(99)
		setValue(x(278))
		putList(x(276))
		setConstant(119)
		setValue(x(277))
		putList(x(275))
		setConstant(111)
		setValue(x(276))
		putList(x(274))
		setConstant(104)
		setValue(x(275))
		putList(x(273))
		setConstant(115)
		setValue(x(274))
		putRecord(showcompilememory [type] x(290))
		setConstant(bool)
		putRecord('#' 3 x(272))
		setConstant(unit)
		setValue(x(273))
		setValue(x(290))
		putList(x(300))
		setConstant(103)
		setConstant(nil)
		putList(x(299))
		setConstant(111)
		setValue(x(300))
		putList(x(298))
		setConstant(100)
		setValue(x(299))
		putList(x(297))
		setConstant(104)
		setValue(x(298))
		putList(x(296))
		setConstant(99)
		setValue(x(297))
		putList(x(295))
		setConstant(116)
		setValue(x(296))
		putList(x(294))
		setConstant(97)
		setValue(x(295))
		putList(x(293))
		setConstant(119)
		setValue(x(294))
		putRecord(watchdog [type] x(301))
		setConstant(bool)
		putRecord('#' 3 x(292))
		setConstant(unit)
		setValue(x(293))
		setValue(x(301))
		putList(x(313))
		setConstant(108)
		setConstant(nil)
		putList(x(312))
		setConstant(99)
		setValue(x(313))
		putList(x(311))
		setConstant(101)
		setValue(x(312))
		putList(x(310))
		setConstant(100)
		setValue(x(311))
		putList(x(309))
		setConstant(101)
		setValue(x(310))
		putList(x(308))
		setConstant(114)
		setValue(x(309))
		putList(x(307))
		setConstant(110)
		setValue(x(308))
		putList(x(306))
		setConstant(114)
		setValue(x(307))
		putList(x(305))
		setConstant(97)
		setValue(x(306))
		putList(x(304))
		setConstant(119)
		setValue(x(305))
		putRecord(warnredecl [type] x(314))
		setConstant(bool)
		putRecord('#' 3 x(303))
		setConstant(unit)
		setValue(x(304))
		setValue(x(314))
		putList(x(326))
		setConstant(100)
		setConstant(nil)
		putList(x(325))
		setConstant(101)
		setValue(x(326))
		putList(x(324))
		setConstant(115)
		setValue(x(325))
		putList(x(323))
		setConstant(117)
		setValue(x(324))
		putList(x(322))
		setConstant(110)
		setValue(x(323))
		putList(x(321))
		setConstant(117)
		setValue(x(322))
		putList(x(320))
		setConstant(110)
		setValue(x(321))
		putList(x(319))
		setConstant(114)
		setValue(x(320))
		putList(x(318))
		setConstant(97)
		setValue(x(319))
		putList(x(317))
		setConstant(119)
		setValue(x(318))
		putRecord(warnunused [type] x(327))
		setConstant(bool)
		putRecord('#' 3 x(316))
		setConstant(unit)
		setValue(x(317))
		setValue(x(327))
		putList(x(346))
		setConstant(115)
		setConstant(nil)
		putList(x(345))
		setConstant(108)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(114)
		setValue(x(343))
		putList(x(341))
		setConstant(111)
		setValue(x(342))
		putList(x(340))
		setConstant(102)
		setValue(x(341))
		putList(x(339))
		setConstant(100)
		setValue(x(340))
		putList(x(338))
		setConstant(101)
		setValue(x(339))
		putList(x(337))
		setConstant(115)
		setValue(x(338))
		putList(x(336))
		setConstant(117)
		setValue(x(337))
		putList(x(335))
		setConstant(110)
		setValue(x(336))
		putList(x(334))
		setConstant(117)
		setValue(x(335))
		putList(x(333))
		setConstant(110)
		setValue(x(334))
		putList(x(332))
		setConstant(114)
		setValue(x(333))
		putList(x(331))
		setConstant(97)
		setValue(x(332))
		putList(x(330))
		setConstant(119)
		setValue(x(331))
		putRecord(warnunused [type] x(347))
		setConstant(bool)
		putRecord('#' 3 x(329))
		setConstant(unit)
		setValue(x(330))
		setValue(x(347))
		putList(x(360))
		setConstant(100)
		setConstant(nil)
		putList(x(359))
		setConstant(114)
		setValue(x(360))
		putList(x(358))
		setConstant(97)
		setValue(x(359))
		putList(x(357))
		setConstant(119)
		setValue(x(358))
		putList(x(356))
		setConstant(114)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(102)
		setValue(x(355))
		putList(x(353))
		setConstant(110)
		setValue(x(354))
		putList(x(352))
		setConstant(114)
		setValue(x(353))
		putList(x(351))
		setConstant(97)
		setValue(x(352))
		putList(x(350))
		setConstant(119)
		setValue(x(351))
		putRecord(warnforward [type] x(361))
		setConstant(bool)
		putRecord('#' 3 x(349))
		setConstant(unit)
		setValue(x(350))
		setValue(x(361))
		putList(x(370))
		setConstant(116)
		setConstant(nil)
		putList(x(369))
		setConstant(112)
		setValue(x(370))
		putList(x(368))
		setConstant(111)
		setValue(x(369))
		putList(x(367))
		setConstant(110)
		setValue(x(368))
		putList(x(366))
		setConstant(114)
		setValue(x(367))
		putList(x(365))
		setConstant(97)
		setValue(x(366))
		putList(x(364))
		setConstant(119)
		setValue(x(365))
		putRecord(warnopt [type] x(371))
		setConstant(bool)
		putRecord('#' 3 x(363))
		setConstant(unit)
		setValue(x(364))
		setValue(x(371))
		putList(x(388))
		setConstant(100)
		setConstant(nil)
		putList(x(387))
		setConstant(101)
		setValue(x(388))
		putList(x(386))
		setConstant(116)
		setValue(x(387))
		putList(x(385))
		setConstant(97)
		setValue(x(386))
		putList(x(384))
		setConstant(99)
		setValue(x(385))
		putList(x(383))
		setConstant(101)
		setValue(x(384))
		putList(x(382))
		setConstant(114)
		setValue(x(383))
		putList(x(381))
		setConstant(112)
		setValue(x(382))
		putList(x(380))
		setConstant(101)
		setValue(x(381))
		putList(x(379))
		setConstant(100)
		setValue(x(380))
		putList(x(378))
		setConstant(119)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(108)
		setValue(x(377))
		putList(x(375))
		setConstant(108)
		setValue(x(376))
		putList(x(374))
		setConstant(97)
		setValue(x(375))
		putRecord(allowdeprecated [type] x(389))
		setConstant(bool)
		putRecord('#' 3 x(373))
		setConstant(unit)
		setValue(x(374))
		setValue(x(389))
		putList(x(395))
		setConstant(112)
		setConstant(nil)
		putList(x(394))
		setConstant(109)
		setValue(x(395))
		putList(x(393))
		setConstant(117)
		setValue(x(394))
		putList(x(392))
		setConstant(103)
		setValue(x(393))
		putRecord(gump [type] x(396))
		setConstant(bool)
		putRecord('#' 3 x(391))
		setConstant(unit)
		setValue(x(392))
		setValue(x(396))
		putList(x(412))
		setConstant(115)
		setConstant(nil)
		putList(x(411))
		setConstant(105)
		setValue(x(412))
		putList(x(410))
		setConstant(115)
		setValue(x(411))
		putList(x(409))
		setConstant(121)
		setValue(x(410))
		putList(x(408))
		setConstant(108)
		setValue(x(409))
		putList(x(407))
		setConstant(97)
		setValue(x(408))
		putList(x(406))
		setConstant(110)
		setValue(x(407))
		putList(x(405))
		setConstant(97)
		setValue(x(406))
		putList(x(404))
		setConstant(99)
		setValue(x(405))
		putList(x(403))
		setConstant(105)
		setValue(x(404))
		putList(x(402))
		setConstant(116)
		setValue(x(403))
		putList(x(401))
		setConstant(97)
		setValue(x(402))
		putList(x(400))
		setConstant(116)
		setValue(x(401))
		putList(x(399))
		setConstant(115)
		setValue(x(400))
		putRecord(staticanalysis [type] x(413))
		setConstant(bool)
		putRecord('#' 3 x(398))
		setConstant(unit)
		setValue(x(399))
		setValue(x(413))
		putList(x(423))
		setConstant(101)
		setConstant(nil)
		putList(x(422))
		setConstant(114)
		setValue(x(423))
		putList(x(421))
		setConstant(111)
		setValue(x(422))
		putList(x(420))
		setConstant(99)
		setValue(x(421))
		putList(x(419))
		setConstant(108)
		setValue(x(420))
		putList(x(418))
		setConstant(97)
		setValue(x(419))
		putList(x(417))
		setConstant(101)
		setValue(x(418))
		putList(x(416))
		setConstant(114)
		setValue(x(417))
		putRecord(realcore [type] x(424))
		setConstant(bool)
		putRecord('#' 3 x(415))
		setConstant(unit)
		setValue(x(416))
		setValue(x(424))
		putList(x(436))
		setConstant(101)
		setConstant(nil)
		putList(x(435))
		setConstant(117)
		setValue(x(436))
		putList(x(434))
		setConstant(108)
		setValue(x(435))
		putList(x(433))
		setConstant(97)
		setValue(x(434))
		putList(x(432))
		setConstant(118)
		setValue(x(433))
		putList(x(431))
		setConstant(103)
		setValue(x(432))
		putList(x(430))
		setConstant(117)
		setValue(x(431))
		putList(x(429))
		setConstant(98)
		setValue(x(430))
		putList(x(428))
		setConstant(101)
		setValue(x(429))
		putList(x(427))
		setConstant(100)
		setValue(x(428))
		putRecord(debugvalue [type] x(437))
		setConstant(bool)
		putRecord('#' 3 x(426))
		setConstant(unit)
		setValue(x(427))
		setValue(x(437))
		putList(x(448))
		setConstant(101)
		setConstant(nil)
		putList(x(447))
		setConstant(112)
		setValue(x(448))
		putList(x(446))
		setConstant(121)
		setValue(x(447))
		putList(x(445))
		setConstant(116)
		setValue(x(446))
		putList(x(444))
		setConstant(103)
		setValue(x(445))
		putList(x(443))
		setConstant(117)
		setValue(x(444))
		putList(x(442))
		setConstant(98)
		setValue(x(443))
		putList(x(441))
		setConstant(101)
		setValue(x(442))
		putList(x(440))
		setConstant(100)
		setValue(x(441))
		putRecord(debugtype [type] x(449))
		setConstant(bool)
		putRecord('#' 3 x(439))
		setConstant(unit)
		setValue(x(440))
		setValue(x(449))
		putList(x(458))
		setConstant(101)
		setConstant(nil)
		putList(x(457))
		setConstant(108)
		setValue(x(458))
		putList(x(456))
		setConstant(105)
		setValue(x(457))
		putList(x(455))
		setConstant(102)
		setValue(x(456))
		putList(x(454))
		setConstant(111)
		setValue(x(455))
		putList(x(453))
		setConstant(114)
		setValue(x(454))
		putList(x(452))
		setConstant(112)
		setValue(x(453))
		putRecord(profile [type] x(459))
		setConstant(bool)
		putRecord('#' 3 x(451))
		setConstant(112)
		setValue(x(452))
		setValue(x(459))
		putList(x(477))
		setConstant(108)
		setConstant(nil)
		putList(x(476))
		setConstant(111)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(110)
		setValue(x(474))
		putList(x(472))
		setConstant(111)
		setValue(x(473))
		putList(x(471))
		setConstant(99)
		setValue(x(472))
		putList(x(470))
		setConstant(111)
		setValue(x(471))
		putList(x(469))
		setConstant(102)
		setValue(x(470))
		putList(x(468))
		setConstant(110)
		setValue(x(469))
		putList(x(467))
		setConstant(105)
		setValue(x(468))
		putList(x(466))
		setConstant(103)
		setValue(x(467))
		putList(x(465))
		setConstant(117)
		setValue(x(466))
		putList(x(464))
		setConstant(98)
		setValue(x(465))
		putList(x(463))
		setConstant(101)
		setValue(x(464))
		putList(x(462))
		setConstant(100)
		setValue(x(463))
		putRecord(debuginfocontrol [type] x(478))
		setConstant(bool)
		putRecord('#' 3 x(461))
		setConstant(unit)
		setValue(x(462))
		setValue(x(478))
		putList(x(497))
		setConstant(115)
		setConstant(nil)
		putList(x(496))
		setConstant(101)
		setValue(x(497))
		putList(x(495))
		setConstant(109)
		setValue(x(496))
		putList(x(494))
		setConstant(97)
		setValue(x(495))
		putList(x(493))
		setConstant(110)
		setValue(x(494))
		putList(x(492))
		setConstant(114)
		setValue(x(493))
		putList(x(491))
		setConstant(97)
		setValue(x(492))
		putList(x(490))
		setConstant(118)
		setValue(x(491))
		putList(x(489))
		setConstant(111)
		setValue(x(490))
		putList(x(488))
		setConstant(102)
		setValue(x(489))
		putList(x(487))
		setConstant(110)
		setValue(x(488))
		putList(x(486))
		setConstant(105)
		setValue(x(487))
		putList(x(485))
		setConstant(103)
		setValue(x(486))
		putList(x(484))
		setConstant(117)
		setValue(x(485))
		putList(x(483))
		setConstant(98)
		setValue(x(484))
		putList(x(482))
		setConstant(101)
		setValue(x(483))
		putList(x(481))
		setConstant(100)
		setValue(x(482))
		putRecord(debuginfovarnames [type] x(498))
		setConstant(bool)
		putRecord('#' 3 x(480))
		setConstant(unit)
		setValue(x(481))
		setValue(x(498))
		putList(x(509))
		setConstant(111)
		setConstant(nil)
		putList(x(508))
		setConstant(102)
		setValue(x(509))
		putList(x(507))
		setConstant(110)
		setValue(x(508))
		putList(x(506))
		setConstant(105)
		setValue(x(507))
		putList(x(505))
		setConstant(103)
		setValue(x(506))
		putList(x(504))
		setConstant(117)
		setValue(x(505))
		putList(x(503))
		setConstant(98)
		setValue(x(504))
		putList(x(502))
		setConstant(101)
		setValue(x(503))
		putList(x(501))
		setConstant(100)
		setValue(x(502))
		putRecord(debuginfo [type] x(510))
		setConstant(bool)
		putRecord('#' 3 x(500))
		setConstant(103)
		setValue(x(501))
		setValue(x(510))
		putList(x(499))
		setValue(x(500))
		setConstant(nil)
		putList(x(479))
		setValue(x(480))
		setValue(x(499))
		putList(x(460))
		setValue(x(461))
		setValue(x(479))
		putList(x(450))
		setValue(x(451))
		setValue(x(460))
		putList(x(438))
		setValue(x(439))
		setValue(x(450))
		putList(x(425))
		setValue(x(426))
		setValue(x(438))
		putList(x(414))
		setValue(x(415))
		setValue(x(425))
		putList(x(397))
		setValue(x(398))
		setValue(x(414))
		putList(x(390))
		setValue(x(391))
		setValue(x(397))
		putList(x(372))
		setValue(x(373))
		setValue(x(390))
		putList(x(362))
		setValue(x(363))
		setValue(x(372))
		putList(x(348))
		setValue(x(349))
		setValue(x(362))
		putList(x(328))
		setValue(x(329))
		setValue(x(348))
		putList(x(315))
		setValue(x(316))
		setValue(x(328))
		putList(x(302))
		setValue(x(303))
		setValue(x(315))
		putList(x(291))
		setValue(x(292))
		setValue(x(302))
		putList(x(271))
		setValue(x(272))
		setValue(x(291))
		putList(x(253))
		setValue(x(254))
		setValue(x(271))
		putList(x(238))
		setValue(x(239))
		setValue(x(253))
		putList(x(224))
		setValue(x(225))
		setValue(x(238))
		putList(x(211))
		setValue(x(212))
		setValue(x(224))
		putList(x(194))
		setValue(x(195))
		setValue(x(211))
		putList(x(182))
		setValue(x(183))
		setValue(x(194))
		putList(x(167))
		setValue(x(168))
		setValue(x(182))
		putList(x(157))
		setValue(x(158))
		setValue(x(167))
		putList(x(148))
		setValue(x(149))
		setValue(x(157))
		putList(x(134))
		setValue(x(135))
		setValue(x(148))
		putList(x(121))
		setValue(x(122))
		setValue(x(134))
		putList(x(113))
		setValue(x(114))
		setValue(x(121))
		putList(x(103))
		setValue(x(104))
		setValue(x(113))
		putList(x(92))
		setValue(x(93))
		setValue(x(103))
		putList(x(83))
		setValue(x(84))
		setValue(x(92))
		putList(x(80))
		setValue(x(81))
		setValue(x(83))
		putList(x(73))
		setValue(x(74))
		setValue(x(80))
		putList(x(60))
		setValue(x(61))
		setValue(x(73))
		putList(x(51))
		setValue(x(52))
		setValue(x(60))
		putList(x(44))
		setValue(x(45))
		setValue(x(51))
		putList(x(27))
		setValue(x(28))
		setValue(x(44))
		putList(x(20))
		setValue(x(21))
		setValue(x(27))
		putList(x(7))
		setValue(x(8))
		setValue(x(20))
		putList(x(0))
		setValue(x(1))
		setValue(x(7))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1756> 4)
		putRecord('#' 53 y(2))
		setConstant('You have to choose one of the following modes of operation:\n')
		setConstant('-h, -?, --help                Output usage information and exit.\n')
		setConstant('-E, --core                    Transform a statement into core language\n')
		setConstant('                              (file extension: .ozi).\n')
		setConstant('-S, --outputcode              Compile a statement to assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-s, --ozma                    Compile a statement to Ozma assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-e, --feedtoemulator          Compile and execute a statement.\n')
		setConstant('                              This is the default mode.\n')
		setConstant('-c, --dump                    Compile and evaluate an expression,\n')
		setConstant('                              pickling the result\n')
		setConstant('                              (file extension: .ozf).\n')
		setConstant('-x, --syslet                  Compile and evaluate an expression,\n')
		setConstant('                              making a syslet of the result\n')
		setConstant('                              (file extension: none).\n')
		setConstant('\n')
		setConstant('Additionally, you may specify the following options:\n')
		setConstant('-M, --makedepend              Instead of executing, write a list\n')
		setConstant('                              of dependencies to stdout.\n')
		setConstant('-D NAME, --define=NAME        Define macro name NAME.\n')
		setConstant('-U NAME, --undefine=NAME      Undefine macro name NAME.\n')
		setConstant('-v, --verbose                 Display all compiler messages.\n')
		setConstant('-q, --quiet                   Inhibit compiler messages\n')
		setConstant('                              unless an error is encountered.\n')
		setConstant('-o FILE, --outputfile=FILE    Write output to FILE (`-\' for stdout).\n')
		setConstant('-l FNCS, --environment=FNCS   Make functors FNCS (a comma-separated\n')
		setConstant('                              pair list VAR=URL) available in the\n')
		setConstant('                              environment.\n')
		setConstant('-I DIR, --incdir=DIR          Add DIR to the head of OZPATH.\n')
		setConstant('--include=FILE                Compile and execute the statement in FILE\n')
		setConstant('                              before processing the remaining options.\n')
		setConstant('--sysletprefix=STRING         Use STRING as prefix to syslets (default:\n')
		setConstant('                              "#!/bin/sh\\nexec ozengine $0 "$@"\\n").')
		setConstant('\n')
		setConstant('The following compiler switches have the described effects when set:\n')
		setConstant('--maxerrors=N                 Limit the number of errors reported to N.\n')
		setConstant('--(no)compilerpasses          Show compiler passes.\n')
		setConstant('--(no)warnredecl              Warn about top-level redeclarations.\n')
		setConstant('--(no)warnunused              Warn about unused variables.\n')
		setConstant('--(no)warnunusedformals       Warn about unused variables and formals.\n')
		setConstant('--(no)warnforward             Warn about oo forward declarations.\n')
		setConstant('--(no)warnopt                 Warn about missed optimizations.\n')
		setConstant('--(no)allowdeprecated         Allow use of deprecated syntax.\n')
		setConstant('--(no)gump                    Allow Gump definitions.\n')
		setConstant('--(no)staticanalysis          Run static analysis.\n')
		setConstant('--(no)realcore                Output the real non-fancy core syntax.\n')
		setConstant('--(no)debugvalue              Annotate variable values in core output.\n')
		setConstant('--(no)debugtype               Annotate variable types in core output.\n')
		setConstant('-p, --(no)profile             Include profiling information.\n')
		setConstant('--(no)debuginfocontrol        Include control flow information.\n')
		setConstant('--(no)debuginfovarnames       Include variable information.\n')
		setConstant('-g, --(no)debuginfo           Both of the above.\n')
lbl(311388)	definition(x(0) 311425 pid('SignConvert' 2 pos('./BatchCompile.oz' 143 6) nil 4) <Q: 1757> nil)
lbl(311394)	definition(x(3) 311414 pid('' 2 pos('./BatchCompile.oz' 144 9) nil 2) unit nil)
		testNumber(x(0) 45 311408)
		getNumber(126 x(1))
		return
lbl(311408)	unify(x(1) x(0))
		return
		endDefinition(311394)
lbl(311414)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(311388)
lbl(311425)	definition(x(0) 311660 pid('ParseOptArg' 4 pos('./BatchCompile.oz' 147 6) nil 6) <Q: 1758> [g(8) g(9) g(10) g(11) g(12)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(5)] 311460)
		inlineDot(x(0) value x(4) cache)
		unify(x(4) y(2))
		unify(x(3) x(1))
		branch(311639)
lbl(311460)	match(x(1) ht(311626 [onScalar(nil 311463) onRecord('|' 2 311472)]))
lbl(311463)	putRecord(usage 1 x(1))
		setConstant('missing argument')
		callBI('Exception.raise' [x(1)]#nil)
lbl(311472)	getVarVar(x(1) x(4))
		inlineDot(x(0) type x(5) cache)
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		match(x(5) ht(311608 [onScalar(string 311489) onScalar(atom 311494) onScalar(int 311502) onScalar(float 311555)]))
lbl(311489)	unify(y(2) x(1))
		branch(311621)
lbl(311494)	callBI('StringToAtom' [x(1)]#[x(5)])
		unify(x(5) y(2))
		branch(311621)
lbl(311502)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1757> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 5> 4)
		testBool(y(6) 311535 311544)
		move(y(5) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(311621)
lbl(311535)	putRecord(usage 1 x(0))
		setConstant('integer argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(311544)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(158)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311555)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1757> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 6> 4)
		testBool(y(6) 311588 311597)
		move(y(5) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(311621)
lbl(311588)	putRecord(usage 1 x(0))
		setConstant('float argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(311597)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(164)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311608)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(311621)	unify(y(3) y(4))
		branch(311639)
lbl(311626)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(173)
		setValue(x(1))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(311639)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL7
		return
		endDefinition(311425)
lbl(311660)	definition(x(0) 311715 pid('GetOptSpec' 3 pos('./BatchCompile.oz' 178 6) nil 6) <Q: 1759> nil)
		match(x(0) ht(311700 [onScalar(nil 311669) onRecord('|' 2 311673)]))
lbl(311669)	getLiteral(unit x(2))
		return
lbl(311673)	getVarVar(x(0) x(3))
		getRecord('#' 3 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 311694)
		unify(x(2) x(4))
		return
lbl(311694)	move(x(3) x(0))
		genFastCall(<Q: 1759> 7)
lbl(311700)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(184)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(311660)
lbl(311715)	definition(x(0) 311858 pid('ParseOpt' 5 pos('./BatchCompile.oz' 187 6) nil 5) <Q: 1760> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1759> 6)
		testLiteral(y(5) unit 311776)
lbl(311751)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord('#' 3 x(1))
		setConstant('unknown option `-')
		setValue(x(2))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(311776)	testLiteral(y(1) nil 311794)
lbl(311780)	moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1758> 9)
lbl(311794)	move(y(5) x(0))
		putConstant(value x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 311841)
		getRecord('#' 2 y(3))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(2))
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyNumber(45)
		unifyValue(y(1))
		deAllocateL6
		return
lbl(311841)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1758> 9)
		endDefinition(311715)
lbl(311858)	definition(x(0) 311961 pid('IsPrefix' 5 pos('./BatchCompile.oz' 204 6) nil 8) <Q: 1761> nil)
		match(x(0) ht(311946 [onScalar(nil 311867) onRecord('|' 2 311883)]))
lbl(311867)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		getLiteral(unit x(3))
		getLiteral(true x(4))
		return
lbl(311883)	getVarVar(x(0) x(5))
		testNumber(x(0) 61 311906)
lbl(311890)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(6)])
		unify(x(6) x(2))
		unify(x(3) x(5))
		getLiteral(true x(4))
		return
lbl(311906)	match(x(1) ht(311933 [onScalar(nil 311909) onRecord('|' 2 311913)]))
lbl(311909)	getLiteral(false x(4))
		return
lbl(311913)	getVarVar(x(1) x(6))
		testBI('==' [x(0) x(1)]#[x(7)] 311929)
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 1761> 11)
lbl(311929)	getLiteral(false x(4))
		return
lbl(311933)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311946)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(218)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(311858)
lbl(311961)	definition(x(0) 312176 pid('GetLongOptSpec' 5 pos('./BatchCompile.oz' 221 6) nil 7) <Q: 1762> nil)
		match(x(0) ht(312161 [onScalar(nil 311970) onRecord('|' 2 311974)]))
lbl(311970)	getLiteral(unit x(4))
		return
lbl(311974)	allocateL10
		getVarVar(x(0) x(5))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(x(0) unit 312022)
lbl(312005)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL10
		genFastCall(<Q: 1762> 11)
lbl(312022)	move(x(6) y(5))
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1761> 10)
		testBool(y(8) 312005 312150)
lbl(312047)	testBool(y(6) 312062 312139)
		getLiteral(true y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(312062)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genFastCall(<Q: 1762> 10)
		testLiteral(y(9) unit 312094)
		getLiteral(false y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(312094)	testBool(y(6) 312109 312128)
		getLiteral(true y(1))
		unify(y(2) y(8))
		unify(y(9) y(3))
		deAllocateL10
		return
lbl(312109)	putRecord('#' 3 x(1))
		setConstant('ambiguous option prefix `')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312128)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312139)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312150)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(226)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312161)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(311961)
lbl(312176)	definition(x(0) 312324 pid('ParseLongOpt' 4 pos('./BatchCompile.oz' 255 6) nil 5) <Q: 1763> [y(1)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1762> 10)
		testLiteral(y(5) unit 312233)
lbl(312214)	putRecord('#' 3 x(1))
		setConstant('unknown option `--')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312233)	createVariable(y(6))
		testLiteral(y(4) unit 312273)
lbl(312239)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 312254)
		unify(y(6) y(1))
		branch(312308)
lbl(312254)	putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' expects an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(312273)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 312302)
		putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' does not expect an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(312302)	getList(y(6))
		unifyValue(y(4))
		unifyValue(y(1))
lbl(312308)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<Q: 1758> 9)
		endDefinition(312176)
lbl(312324)	definition(x(0) 312479 pid('ParseArgs' 3 pos('./BatchCompile.oz' 281 6) nil 6) <Q: 1764> nil)
		match(x(0) ht(312464 [onScalar(nil 312333) onRecord('|' 2 312340)]))
lbl(312333)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(312340)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testList(y(0) 312450)
lbl(312355)	getVarVar(x(3) x(4))
		testNumber(x(3) 45 312450)
		createVariable(y(0))
		createVariable(y(4))
		move(x(4) y(5))
		testList(y(5) 312395)
lbl(312372)	getVarVar(x(3) x(5))
		testNumber(x(3) 45 312395)
		move(x(5) x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		move(y(4) x(3))
		genFastCall(<Q: 1763> 8)
		branch(312436)
lbl(312395)	match(y(5) ht(312423 [onScalar(nil 312398) onRecord('|' 2 312407)]))
lbl(312398)	putRecord(usage 1 x(0))
		setConstant('bad option syntax `-\'')
		callBI('Exception.raise' [x(0)]#nil)
lbl(312407)	getVarVar(x(0) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(4) x(4))
		genFastCall(<Q: 1760> 10)
		branch(312436)
lbl(312423)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(290)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312436)	getList(y(1))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1764> 7)
lbl(312450)	getList(y(2))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genFastCall(<Q: 1764> 7)
lbl(312464)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(312324)
lbl(312479)	definition(x(0) 312568 pid('GetVerbose' 2 pos('./BatchCompile.oz' 304 3) nil 5) <Q: 1765> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 312534)
lbl(312494)	getVarVar(x(2) x(3))
		shallowGuard(312534)
		getRecord('#' 2 x(2))
		unifyLiteral(verbose)
		unifyVariable(x(4))
lbl(312507)	shallowThen
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1765> 4)
		testLiteral(y(2) auto 312529)
lbl(312524)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(312529)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(312534)	match(y(0) ht(312553 [onScalar(nil 312537) onRecord('|' 2 312542)]))
lbl(312537)	getLiteral(auto y(1))
		deAllocateL3
		return
lbl(312542)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1765> 5)
lbl(312553)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(313)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(312479)
lbl(312568)	definition(x(0) 312594 pid('IsIDChar' 2 pos('./BatchCompile.oz' 317 6) nil 4) <Q: 1766> [g(13)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 312582)
		getLiteral(true x(1))
		return
lbl(312582)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(312568)
lbl(312594)	definition(x(1) 312665 pid('IsQuotedVariable' 2 pos('./BatchCompile.oz' 321 6) nil 3) <Q: 1767> nil)
		match(x(0) ht(312650 [onScalar(nil 312603) onRecord('|' 2 312607)]))
lbl(312603)	getLiteral(false x(1))
		return
lbl(312607)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 312632)
lbl(312623)	testLiteral(y(2) nil 312632)
lbl(312627)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(312632)	testNumber(y(1) 0 312641)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(312641)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1767> 5)
lbl(312650)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(312594)
lbl(312665)	definition(x(1) 312737 pid('IsPrintName' 2 pos('./BatchCompile.oz' 331 6) nil 4) <Q: 1768> [g(14) g(15) x(0)])
		testBI('IsAtom' [x(0)]#[x(2)] 312731)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(312718 [onScalar(nil 312681) onRecord('|' 2 312685)]))
lbl(312681)	getLiteral(false x(1))
		return
lbl(312685)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 312698)
lbl(312692)	move(x(2) x(0))
		genFastCall(<Q: 1767> 5)
lbl(312698)	testBI('Char.isUpper' [x(0)]#[x(3)] 312714)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(312714)	getLiteral(false x(1))
		return
lbl(312718)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(343)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312731)	getLiteral(false x(1))
		return
		endDefinition(312665)
lbl(312737)	move(y(11) x(0))
		inlineDot(x(0) manager x(0) cache)
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		createVariable(x(2))
lbl(312760)	definition(x(3) 313006 pid('IncludeFunctors' 2 pos('./BatchCompile.oz' 350 6) nil 6) <Q: 1769> [g(16) g(8) y(1) x(2) g(17)])
		match(x(0) ht(312991 [onScalar(nil 312769) onRecord('|' 2 312770)]))
lbl(312769)	return
lbl(312770)	allocateL6
		move(x(1) y(0))
		putConstant(44 x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 2> 8)
		move(y(1) x(0))
		putConstant(61 x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 2> 8)
		move(y(3) x(0))
		callBI('StringToAtom' [x(0)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(5))
		testLiteral(y(4) nil 312829)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		sendMsg(link g(2) [1 name] cache)
		branch(312840)
lbl(312829)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(link g(2) [1 url] cache)
lbl(312840)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1768> 4)
		testBool(y(4) 312893 312936)
		putRecord(mergeEnv 1 x(1))
		setVariable(x(2))
		putRecord(enqueue 1 x(0))
		setValue(x(1))
		putRecord('#' 2 x(1))
		setValue(y(1))
		setValue(y(5))
		putList(x(3))
		setValue(x(1))
		setConstant(nil)
		putConstant(env x(1))
		callBI(record [x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		call(y(0) 1)
		branch(312947)
lbl(312893)	putRecord('#' 3 x(2))
		setConstant('illegal variable identifier `')
		setValue(y(3))
		setConstant('\' specified')
		putRecord('#' 2 x(5))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(4))
		setConstant('Hint')
		setValue(x(5))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('command line option error' x(1))
		sendMsg(error g(3) [items kind msg] cache)
		branch(312947)
lbl(312936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312947)	definition(x(1) 312961 pid('' 3 pos('./BatchCompile.oz' 369 5) nil 3) unit nil)
		move(x(2) x(1))
		genFastCall(<Q: 1768> 5)
		endDefinition(312947)
lbl(312961)	move(y(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 178> 6)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1769> 5)
lbl(312991)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(312760)
lbl(313006)	definition(x(3) 313088 pid('ChangeExtension' 3 pos('./BatchCompile.oz' 376 3) nil 5) <Q: 1770> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 313050)
lbl(313024)	getVarVar(x(3) x(4))
		shallowGuard(313050)
		getNumber(46 x(3))
		getList(x(4))
		unifyNumber(111)
		unifyVariable(x(3))
		getList(x(3))
		unifyNumber(122)
		unifyLiteral(nil)
lbl(313044)	shallowThen
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(313050)	match(y(0) ht(313073 [onScalar(nil 313053) onRecord('|' 2 313058)]))
lbl(313053)	unify(y(2) y(1))
		deAllocateL3
		return
lbl(313058)	getVarVar(x(3) x(0))
		getList(y(2))
		unifyValVar(x(3) x(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1770> 7)
lbl(313073)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(381)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(313006)
lbl(313088)	definition(x(0) 313165 pid('Report' 1 pos('./BatchCompile.oz' 384 3) nil 4) <Q: 1771> [y(3) y(17)])
		move(g(0) x(1))
		inlineDot(x(1) msg x(2) cache)
lbl(313103)	definition(x(3) 313148 pid('' 1 pos('./BatchCompile.oz' 386 7) nil 5) unit [g(1) g(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) printError x(2) cache)
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(313103)
lbl(313148)	move(x(0) x(1))
		move(x(3) x(0))
		call(x(2) 2)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(313088)
lbl(313165)	unify(x(0) x(2))
lbl(313168)	definition(x(2) 315459 pid('BatchCompile' 2 pos('./BatchCompile.oz' 392 3) nil 7) <Q: 1772> [y(0) y(16) y(17) y(2) y(12) y(13) y(15) g(18)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(313199)
		match(x(0) ht(313196 [onScalar(error 313186) onScalar(success 313191)]))
lbl(313186)	getNumber(1 y(1))
		deAllocateL
		return
lbl(313191)	getNumber(0 y(1))
		deAllocateL
		return
lbl(313196)	callBI('Exception.raise' [x(0)]#nil)
lbl(313199)	createVariable(y(2))
		createVariable(y(3))
		exHandler(313252)
		testRecord(x(0) usage 1 313249)
lbl(313210)	getVariable(x(1))
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(2))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1771> 2)
		branch(313264)
lbl(313249)	callBI('Exception.raise' [x(0)]#nil)
lbl(313252)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1764> 6)
		popEx
lbl(313264)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1765> 4)
		move(g(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(0) x(0))
		inlineDot(x(0) quietInterface x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		move(y(0) x(1))
		sendMsg(init y(5) 2 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(showdeclares)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(warnunused)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putConstant(feedtoemulator x(2))
		callBI('NewCell' [x(2)]#[x(0)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(1)])
		putConstant(false x(2))
		callBI('NewCell' [x(2)]#[x(3)])
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(4)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(5)])
		createVariable(x(2))
lbl(313394)	definition(x(6) 313862 pid('' 1 pos('./BatchCompile.oz' 418 3) nil 5) unit [g(1) g(2) g(3) y(4) x(4) y(5) x(5) x(2) x(0) x(3) x(1)])
		shallowGuard(313849)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(313410)	shallowThen
		match(x(1) ht(313835 [onScalar(help 313414) onScalar('define' 313466) onScalar(undef 313478) onScalar(maxerrors 313490) onScalar(environment 313502) onScalar(incdir 313511) onScalar(include 313527) onScalar(sysletprefix 313680) onScalar(verbose 313732) onScalar(mode 313733) onScalar(makedepend 313788) onScalar(outputfile 313795) onScalar(debuginfo 313802)]))
lbl(313414)	allocateL1
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('root.url' x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(g(1) x(0))
		inlineDot(x(0) printInfo x(4) cache)
		move(y(0) x(1))
		move(g(2) x(3))
		putConstant('Usage: ' x(0))
		putConstant(' [options] [file] ...\n' x(2))
		sendMsg('#' x(4) 4 cache)
		putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(313466)	putRecord(macroDefine 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(313478)	putRecord(macroUndef 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(313490)	putRecord(setMaxNumberOfErrors 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(313502)	move(x(2) x(0))
		move(g(3) x(1))
		genFastCall(<Q: 1769> 5)
lbl(313511)	move(g(4) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(3))
		setValue(x(2))
		setValue(x(1))
		callBI('Assign' [x(0) x(3)]#nil)
		return
lbl(313527)	allocateL2
		move(x(2) y(0))
		putConstant(pushSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(3) 1 cache)
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setConstant('return')
		sendMsg(enqueue g(3) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(3) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(5) 1 cache)
		testBool(y(0) 313648 313637)
		move(g(1) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getVS g(5) 1 cache)
		move(y(1) x(0))
		call(y(0) 1)
		branch(313648)
lbl(313637)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(439)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(313648)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(5) 1 cache)
		testBool(y(0) 313667 313669)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(313667)	deAllocateL2
		return
lbl(313669)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(442)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(313680)	move(g(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 313694)
lbl(313690)	callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(313694)	putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('syslet prefix may only be given once')
		move(x(1) x(0))
		genFastCall(<Q: 1771> 3)
lbl(313732)	return
lbl(313733)	move(g(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 313778)
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('mode specified multiply on command line')
		move(x(1) x(0))
		genFastCall(<Q: 1771> 3)
lbl(313778)	move(g(8) x(1))
		callBI('Assign' [x(1) x(2)]#nil)
		getLiteral(true g(7))
		return
lbl(313788)	move(g(9) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(313795)	move(g(10) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(313802)	allocateL1
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(x(2))
		move(x(2) y(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(0))
		deAllocateL1
		tailSendMsg(enqueue g(3) 1 cache)
lbl(313835)	putRecord(setSwitch 2 x(0))
		setValue(x(1))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(313849)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(418)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(313394)
lbl(313862)	moveMoveXYXY(x(0) y(0) x(1) y(6))
		moveMoveXYXY(x(3) y(7) x(4) y(8))
		moveMoveXYYX(x(5) y(9) y(2) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		move(g(4) x(0))
		inlineDot(x(0) putEnv x(1) cache)
		move(y(8) x(2))
		callBI('Access' [x(2)]#[x(3)])
lbl(313898)	definition(x(2) 313921 pid('' 3 pos('./BatchCompile.oz' 481 4) nil 4) unit nil)
		putList(x(3))
		setConstant(58)
		setValue(x(0))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<P: 21> 7)
		endDefinition(313898)
lbl(313921)	inlineDot(x(0) getEnv x(4) cache)
		moveMoveXYXY(x(1) y(2) x(3) y(8))
		move(x(2) y(10))
		putConstant('OZPATH' x(0))
		createVariableMove(y(11) x(1))
		call(x(4) 2)
		putConstant('OZPATH' y(12))
		createVariable(y(13))
		testLiteral(y(11) false 313961)
lbl(313953)	getList(y(13))
		unifyNumber(46)
		unifyLiteral(nil)
		branch(313964)
lbl(313961)	unify(y(13) y(11))
lbl(313964)	moveMoveYXYX(y(8) x(0) y(10) x(1))
		move(y(13) x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(12) x(0) y(11) x(1))
		call(y(2) 2)
		testLiteral(y(3) nil 314027)
		putRecord('#' 2 x(3))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(2))
		setConstant('Hint')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('command line option error')
		setConstant('no input files given')
		genFastCall(<Q: 1771> 2)
		branch(315451)
lbl(314027)	move(y(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('\\=' [x(1) x(2)]#[x(3)] 314050)
lbl(314043)	callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 315412)
lbl(314050)	definition(x(1) 315404 pid('' 1 pos('./BatchCompile.oz' 500 6) nil 8) unit [y(5) y(6) y(0) y(7) y(4) g(2) g(5) g(6) g(7) g(4) y(9)])
		allocateL8
		move(x(0) y(0))
		sendMsg(reset g(0) 0 cache)
		move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(1))
		testLiteral(x(1) unit 314315)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(314302 [onScalar(core 314087) onScalar(outputcode 314125) onScalar(ozma 314163) onScalar(feedtoemulator 314201) onScalar(dump 314251) onScalar(syslet 314289)]))
lbl(314087)	putList(x(5))
		setConstant(105)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1770> 6)
		branch(314418)
lbl(314125)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1770> 6)
		branch(314418)
lbl(314163)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1770> 6)
		branch(314418)
lbl(314201)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBool(x(3) 314246 314235)
		putRecord('#' 2 x(4))
		setConstant('--makedepend with --feedtoemulator ')
		setConstant('needs an --outputfile')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1771> 2)
		branch(314246)
lbl(314235)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(510)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(314246)	getLiteral(unit y(1))
		branch(314418)
lbl(314251)	putList(x(5))
		setConstant(102)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1770> 6)
		branch(314418)
lbl(314289)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1770> 6)
		branch(314418)
lbl(314302)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(521)
		setValue(x(2))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(314315)	callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('==' [x(1) x(2)]#[x(3)] 314365)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) dump 314351)
lbl(314338)	putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setConstant('dumping to stdout is not possible')
		genFastCall(<Q: 1771> 2)
		branch(314418)
lbl(314351)	callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) syslet 314360)
		branch(314338)
lbl(314360)	getLiteral(stdout y(1))
		branch(314418)
lbl(314365)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) feedtoemulator 314409)
lbl(314375)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBI('Not' [x(3)]#[x(4)] 314409)
lbl(314385)	putRecord('#' 2 x(4))
		setConstant('no output file name must be ')
		setConstant('specified for --feedtoemulator')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1771> 2)
		branch(314418)
lbl(314409)	move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(1))
lbl(314418)	putConstant(pushSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 314467 314456)
		putRecord(setSwitch 2 x(2))
		setConstant(unnest)
		setConstant(false)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(314467)
lbl(314456)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(541)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(314467)	move(g(2) x(0))
		callBI('Access' [x(0)]#[x(1)])
		match(x(1) ht(314580 [onScalar(core 314476) onScalar(outputcode 314509) onScalar(ozma 314542) onScalar(feedtoemulator 314561)]))
lbl(314476)	putRecord(setSwitch 2 x(2))
		setConstant(core)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(codegen)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(314611)
lbl(314509)	putRecord(setSwitch 2 x(2))
		setConstant(outputcode)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(314611)
lbl(314542)	putRecord(setSwitch 2 x(2))
		setConstant(ozma)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(314611)
lbl(314561)	putRecord(setSwitch 2 x(2))
		setConstant(feedtoemulator)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(314611)
lbl(314580)	putRecord(setSwitch 2 x(2))
		setConstant(expression)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(4) 1 cache)
lbl(314611)	putRecord('return' [result] x(2))
		setVariable(y(2))
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue g(4) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(4) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(0) 1 cache)
		testBool(y(0) 314711 314700)
		move(g(5) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(3) x(0))
		sendMsg(getVS g(0) 1 cache)
		move(y(3) x(0))
		call(y(0) 1)
		branch(314711)
lbl(314700)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(565)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(314711)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(0) 1 cache)
		testBool(y(0) 314741 314730)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(314730)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(568)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(314741)	move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 314886 315391)
		move(g(6) x(1))
		inlineDot(x(1) file x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		putList(x(4))
		setConstant(write)
		setConstant(nil)
		move(x(3) y(0))
		move(x(4) x(0))
		putConstant(stdout x(1))
		sendMsg(init y(0) [flags name] cache)
		putRecord('#' 4 y(2))
		setValue(y(1))
		setConstant(':')
		setVariable(y(3))
		setConstant('\n')
		createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
		match(y(1) ht(314854 [onScalar(nil 314808) onRecord('|' 2 314813)]))
lbl(314808)	getLiteral(nil y(3))
		branch(314867)
lbl(314813)	createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
lbl(314822)	definition(x(1) 314841 pid('' 3 pos('./BatchCompile.oz' 576 8) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' \\\n\t')
		unifyValue(x(1))
		return
		endDefinition(314822)
lbl(314841)	moveMoveYXYX(y(1) x(0) y(3) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 30> 8)
		branch(314867)
lbl(314854)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(578)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(314867)	move(y(2) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(close x(0) 0 cache)
lbl(314886)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(315318 [onScalar(dump 314895) onScalar(syslet 314987) onScalar(feedtoemulator 315316)]))
lbl(314895)	createVariable(y(0))
		createVariable(y(3))
		thread(314952)
		createVariable(y(4))
		exHandler(314913)
		getRecord(ex 1 y(4))
		unifyValue(x(0))
		branch(314937)
lbl(314913)	move(g(7) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(x(2) 2)
		getLiteral(true y(0))
		getLiteral(unit y(4))
		popEx
lbl(314937)	getLiteral(unit y(3))
		testRecord(y(4) ex 1 314950)
lbl(314945)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(314950)	deAllocateL8
		return
lbl(314952)	move(y(3) x(2))
		callBI('Wait' [x(2)]#nil)
		move(y(0) x(2))
		callBI('IsFree' [x(2)]#[x(3)])
		testBool(x(3) 314974 314976)
		putConstant(error x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(314974)	deAllocateL8
		return
lbl(314976)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(592)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(314987)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 279> 4)
		testBool(y(0) 315002 315037)
		branch(315048)
lbl(315002)	putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(2))
		setConstant('Value found')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('syslets can only be built from functors')
		genFastCall(<Q: 1771> 2)
		branch(315048)
lbl(315037)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(596)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(315048)	createVariable(y(0))
		createVariable(y(3))
		thread(315281)
		move(g(9) x(0))
		inlineDot(x(0) tmpnam x(1) cache)
		createVariableMove(y(4) x(0))
		call(x(1) 1)
		createVariable(y(5))
		exHandler(315081)
		getRecord(ex 1 y(5))
		unifyValue(x(0))
		branch(315251)
lbl(315081)	move(g(6) x(0))
		inlineDot(x(0) file x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		putList(x(5))
		setConstant(truncate)
		setConstant(nil)
		putList(x(4))
		setConstant(create)
		setValue(x(5))
		putList(x(3))
		setConstant(write)
		setValue(x(4))
		move(x(1) y(6))
		move(x(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(6) [flags name] cache)
		move(g(10) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(7))
		testLiteral(x(1) unit 315143)
lbl(315138)	getLiteral('#!/bin/sh\nexec ozengine $0 "$@"\n' y(7))
		branch(315146)
lbl(315143)	unify(y(7) x(1))
lbl(315146)	move(y(7) x(0))
		sendMsg(write y(6) [vs] cache)
		sendMsg(close y(6) 0 cache)
		move(g(7) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		call(x(2) 2)
		move(g(9) x(0))
		inlineDot(x(0) system x(2) cache)
		putRecord('#' 7 x(3))
		setConstant('cat ')
		setValue(y(4))
		setConstant(' >> ')
		setValue(y(1))
		setConstant('; ')
		setConstant('chmod +x ')
		setValue(y(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		match(y(1) ht(315217 [onScalar(0 315244)]))
lbl(315217)	putRecord(hint [l m] x(2))
		setConstant('Error code')
		setValue(y(1))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('writing syslet failed')
		genFastCall(<Q: 1771> 2)
lbl(315244)	getLiteral(true y(0))
		getLiteral(unit y(5))
		popEx
lbl(315251)	move(g(9) x(0))
		inlineDot(x(0) unlink x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		getLiteral(unit y(3))
		testRecord(y(5) ex 1 315279)
lbl(315274)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(315279)	deAllocateL8
		return
lbl(315281)	move(y(3) x(0))
		callBI('Wait' [x(0)]#nil)
		move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 315303 315305)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(315303)	deAllocateL8
		return
lbl(315305)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(634)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(315316)	deAllocateL8
		return
lbl(315318)	move(g(6) x(2))
		inlineDot(x(2) file x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		putList(x(7))
		setConstant(truncate)
		setConstant(nil)
		putList(x(6))
		setConstant(create)
		setValue(x(7))
		putList(x(5))
		setConstant(write)
		setValue(x(6))
		move(x(4) y(0))
		move(x(5) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) [flags name] cache)
		createVariableMove(y(1) x(0))
		sendMsg(getSource g(0) 1 cache)
		move(y(1) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(close x(0) 0 cache)
lbl(315391)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(571)
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(314050)
lbl(315404)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(315451)
lbl(315412)	move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(2) x(0))
		putConstant(1 x(1))
		testLT(x(1) x(0) x(2) 314050)
lbl(315432)	putRecord('#' 2 x(1))
		setConstant('only one input file allowed when ')
		setConstant('an output file name is given')
		putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1771> 2)
lbl(315451)	putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(313168)
lbl(315459)	move(y(17) x(0))
		inlineDot(x(0) exit x(0) cache)
		move(y(16) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant(argv x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		move(g(14) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1772> 4)
		move(y(1) x(0))
		call(y(0) 1)
		getLiteral('export' g(19))
		deAllocateL
		return
		endDefinition(307090)
lbl(315523)	tailCall(x(0) 0)
		endDefinition(306958)
lbl(315528)	move(x(0) y(0))
		putConstant('import' x(0))
		putConstant('export' x(1))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord('#' 2 x(1))
		setConstant(ozc)
		setConstant('.ozp')
		move(y(1) x(0))
		call(y(0) 2)
		putConstant('System' x(1))
		callBI('BootManager' [x(1)]#[x(2)])
		inlineDot(x(2) exit x(1) cache)
		putConstant(0 x(0))
		deAllocateL
		tailCall(x(1) 1)
		endDefinition(1)
lbl(315578)	tailCall(x(0) 0)
