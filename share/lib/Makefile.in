OZHOME		= @prefix@
SRCDIR		= @srcdir@
SRCDIRA		= @srcdira@
TOPDIR		= @TOPDIR@

OZBIN		= $(OZHOME)/bin
OZLIB		= $(OZHOME)/lib
BITMAPDIR	= $(OZLIB)/bitmaps

SHELL		= @SH@
RM		= @RM@ -f
MKDIR		= @MKDIR@
RMDIR		= @RMDIR@
ECHO		= @ECHO@
M4		= @M4@
TRUE		= @TRUE@

INSTALL		= @INSTALL@
INSTALLFILE	= $(INSTALL) -m 444
INSTALLPRG	= $(INSTALL) -m 555
INSTALLSRC	= @INSTALLSRC@
INSTALLDIR	= $(INSTALL) -m 775 -d

ENV2TYPE	= @ENV2TYPE@

OZFLAGS		=
OZBATCH		= @OZBATCH@
OZMAINIT	= Init.ozc
export OZMAINIT
OZPATH		= .:compiler:ozcar:$(SRCDIR)
export OZPATH
OZ_PI		= 1
export OZ_PI
OZ_LOAD		= root=.:prefix=http\://www.ps.uni-sb.de/ozhome/lib/=tyc/:prefix=http\://www.ps.uni-sb.de/ozhome/lib/=$(OZLIB)/:root=$(OZLIB)
export OZ_LOAD
COMPILE		= $(OZBATCH) $(OZFLAGS) --include=$(SRCDIR)/DumpIntro.oz -c
EXEC		= $(OZBATCH) $(OZFLAGS)
EXECWITHSTD	= $(OZBATCH) $(OZFLAGS) --include=$(SRCDIR)/DumpIntro.oz
OZMA		= $(OZBATCH) $(OZFLAGS) --ozma

OZVERSION	= $(TOPDIR)/OZVERSION

OZLIBDIRS = \
	$(OZLIB)/Standard $(OZLIB)/Init $(OZLIB)/SP $(OZLIB)/OP \
	$(OZLIB)/AP $(OZLIB)/CP $(OZLIB)/WP $(OZLIB)/DP \
	$(OZLIB)/compiler $(OZLIB)/panel $(OZLIB)/browser \
	$(OZLIB)/explorer $(OZLIB)/ozcar $(OZLIB)/profiler
OZCARBITMAPDIR = $(BITMAPDIR)/ozcar

STANDARDSRC1 = \
	Forward.oz \
	Record.oz Unit.oz Tuple.oz Atom.oz Name.oz Procedure.oz \
	Int.oz Float.oz Number.oz Bool.oz List.oz Chunk.oz \
	Literal.oz Value.oz Cell.oz Lock.oz Char.oz String.oz \
	VirtualString.oz Object.oz Class.oz Loop.oz Port.oz \
	Time.oz Thread.oz Match.oz Type.oz Space.oz \
	Array.oz Dictionary.oz Exception.oz Lazy.oz
STANDARDSRC = $(STANDARDSRC1:%=$(SRCDIR)/Standard/%) $(SRCDIR)/Standard.oz

INITSRC1 = URL.oz Prop.oz
INITSRC = $(INITSRC1:%=$(SRCDIR)/Init/%) $(SRCDIR)/Init.oz

SPSRC1 = System.oz Debug.oz Foreign.oz Error.oz Finalize.oz
SPSRC = $(SPSRC1:%=$(SRCDIR)/SP/%) $(SRCDIR)/SP.oz

OPSRC1 = OS.oz Open.oz Component.oz
OPSRC = $(OPSRC1:%.oz=$(SRCDIR)/OP/%.oz) $(SRCDIR)/OP.oz

APSRC1 = Application.oz ArgParser.oz CgiParser.oz
APSRC = $(APSRC1:%.oz=$(SRCDIR)/AP/%.oz) $(SRCDIR)/AP.oz

CPSRC1 = Search.oz FD.oz FS.oz
CPSRC = $(CPSRC1:%=$(SRCDIR)/CP/%) $(SRCDIR)/CP.oz

DPSRC1 = Site.oz agenda.oz remote.oz server.oz
DPSRC = $(DPSRC1:%=$(SRCDIR)/DP/%) $(SRCDIR)/DP.oz

WPSRC1 = Tk.oz TkOptions.oz TkTools.oz TkInit.oz
WPSRC = $(WPSRC1:%=$(SRCDIR)/WP/%) $(SRCDIR)/WP.oz

COMPILERSRC1 = \
	InsertAll.oz CompilerClass.oz Misc.oz Reporter.oz ParseOz.oz \
	FormatStrings.oz Builtins.oz CoreLanguage.oz Annotate.oz \
	StaticAnalysis.oz POTypes.oz RegSet.oz CodeGen.oz CodeStore.oz \
	CodeEmitter.oz BindingAnalysis.oz TupleSyntax.oz Unnester.oz \
	UnnestFD.oz Assembler.oz Interface.oz \
	GenericInterface.oz QuietInterface.oz
COMPILERSRCNOVER = $(COMPILERSRC1:%=$(SRCDIR)/compiler/%) compiler/Opcodes.oz \
	$(SRCDIR)/Compiler.oz
COMPILERSRC = $(COMPILERSRCNOVER) compiler/Version.oz

COMPILERPANELSRC1 = CompilerPanelClass.oz
COMPILERPANELSRC = $(COMPILERPANELSRC1:%=$(SRCDIR)/compiler/%) \
	$(SRCDIR)/CompilerPanel.oz

PANELSRC1 = \
	configure.oz load.oz make-notes.oz runtime-bar.oz top.oz \
	main.oz dialogs.oz
PANELSRC = $(PANELSRC1:%=$(SRCDIR)/panel/%) $(SRCDIR)/Panel.oz

BROWSERSRC1 = \
	XResources.oz browserObject.oz browserTerm.oz \
	bufs&streams.oz constants.oz controlObject.oz core.oz \
	errors.oz managerObject.oz reflect.oz repManager.oz \
	store.oz tcl-interface.oz termObject.oz \
	termsStore.oz undefs.oz windowManager.oz
BROWSERSRC = $(BROWSERSRC1:%=$(SRCDIR)/browser/%) $(SRCDIR)/Browser.oz

EXPLORERSRC1 = \
	main.oz misc.oz action-nodes.oz hide-nodes.oz \
	layout-nodes.oz manager.oz \
	menu-manager.oz move-nodes.oz tk-nodes.oz \
	configure.oz nodes.oz toplevel-manager.oz \
	default-actions.oz search-nodes.oz stat-nodes.oz \
	dialog-manager.oz shapes-and-images.oz status-manager.oz
EXPLORERSRC = $(EXPLORERSRC1:%=$(SRCDIR)/explorer/%) $(SRCDIR)/Explorer.oz

EMACSSRC = $(SRCDIR)/Emacs.oz

OZCARSRC1 = \
	prelude.oz string.oz tk.oz config.oz help.oz tree.oz thread.oz \
	stack.oz source.oz menu.oz dialog.oz gui.oz ozcar.oz
OZCARSRCNOVER = $(OZCARSRC1:%=$(SRCDIR)/ozcar/%) $(SRCDIR)/Ozcar.oz
OZCARSRC = $(OZCARSRCNOVER) ozcar/version.oz

PROFILERSRC1 = \
	prof-gui.oz prof-prelude.oz prof-tk.oz \
	prof-config.oz prof-help.oz profiler.oz \
	prof-dialog.oz prof-menu.oz prof-string.oz
PROFILERSRC = $(PROFILERSRC1:%=$(SRCDIR)/profiler/%) $(SRCDIR)/Profiler.oz

ALLSRCS = \
	$(STANDARDSRC) $(INITSRC) \
	$(SPSRC) $(OPSRC) $(APSRC) $(CPSRC) $(DPSRC) $(WPSRC) \
	$(COMPILERSRC) $(COMPILERPANELSRC) $(PANELSRC) $(BROWSERSRC) \
	$(EXPLORERSRC) $(EMACSSRC) $(OZCARSRC) $(PROFILERSRC)

DUMPINTRO1 = DumpIntro.oz Base.env Standard.env
DUMPINTRO = $(DUMPINTRO1:%=$(SRCDIR)/%) Base.ozc Standard.ozc

ENVS1 = \
	SP.env OP.env AP.env CP.env WP.env DP.env \
	Compiler.env CompilerPanel.env Panel.env Browser.env Explorer.env \
	Emacs.env Ozcar.env Profiler.env
ENVS = $(ENVS1:%=$(SRCDIR)/%) $(SRCDIR)/Base.env $(SRCDIR)/Standard.env
TYPS = $(ENVS1:%.env=%.typ)
TYCS = $(TYPS:%.typ=tyc/%.tyc)

LIBFILES = \
	$(ALLSRCS:$(SRCDIR)/%=$(OZLIB)/%) \
	$(ENVS1:$(SRCDIR)/%=$(OZLIB)/%) \
	$(TYCS:tyc/%=$(OZLIB)/%)

HELPCOMPONENTS = Base.ozc Standard.ozc

COMPONENTS = \
	Init.ozc OPI.ozc SP.ozc OP.ozc AP.ozc CP.ozc WP.ozc DP.ozc \
	Compiler.ozc CompilerPanel.ozc Panel.ozc Browser.ozc \
	Explorer.ozc Emacs.ozc Ozcar.ozc Profiler.ozc

LIBCOMPONENTS = $(COMPONENTS:%=$(OZLIB)/%)

BINFILES = $(OZBIN)/ozbatch

BITMAPS1 = \
	mini-dec.xbm mini-inc.xbm \
	compiler.xbm compilermask.xbm \
	panel.xbm zig-zag.xbm lines-lr.xbm lines-rl.xbm \
	grid-25.xbm grid-50.xbm \
	browserMIcon.xbm browserIcon.xbm stop.xbm \
	explorer.xbm \
	debugger.xbm
BITMAPS = $(BITMAPS1:%=$(BITMAPDIR)/%) \

OZCARBITMAPS1 = \
	children.xbm detach.xbm line.xbm next.xbm queries.xbm \
	step.xbm stop.xbm term.xbm unleash.xbm
OZCARBITMAPS = $(OZCARBITMAPS1:%=$(OZCARBITMAPDIR)/%)

.PHONY: all install clean realclean veryclean tags

all: Makefile $(COMPONENTS) $(TYCS) ozbatch

ozbatch.ozm: $(SRCDIR)/MakeAssembly.oz \
	$(STANDARDSRC) $(SRCDIR)/Base.env $(SRCDIR)/Standard.env \
	$(SPSRC) $(SRCDIR)/SP.env $(CPSRC) $(SRCDIR)/CP.env \
	$(OPSRC) $(SRCDIR)/OP.env $(COMPILERSRC) $(SRCDIR)/Compiler.env \
	$(SRCDIR)/BatchCompile.oz
	$(OZMA) -o /tmp/$$$$.ozm $(SRCDIR)/MakeAssembly.oz && \
	/bin/mv -f /tmp/$$$$.ozm $@

ozbatch: $(SRCDIR)/MakeBatch.oz $(SRCDIR)/BatchCompile.oz $(DUMPINTRO) \
	SP.ozc $(SRCDIR)/SP.env OP.ozc $(SRCDIR)/OP.env \
	AP.ozc $(SRCDIR)/AP.env
	$(EXECWITHSTD) $(SRCDIR)/MakeBatch.oz

Base.ozc: Standard.ozc
	@$(ECHO) > /dev/null

Standard.ozc: $(STANDARDSRC) $(SRCDIR)/Base.env $(SRCDIR)/Standard.env
	OZMAINIT="" $(EXEC) $(SRCDIR)/DumpInitial.oz

install: all \
	$(OZLIB) $(OZLIBDIRS) $(LIBFILES) $(LIBCOMPONENTS) \
	$(BITMAPDIR) $(BITMAPS) $(OZCARBITMAPDIR) $(OZCARBITMAPS) \
	$(OZBIN) $(BINFILES)

clean:
	$(RM) *~ *.bak
	$(RM) compiler/Version.oz compiler/Opcodes.oz ozcar/version.oz
	$(RM) $(TYPS) $(TYCS) $(HELPCOMPONENTS) $(COMPONENTS) ozbatch
	$(RM) TAGS
	$(RMDIR) tyc 2> /dev/null || $(TRUE)

realclean: clean

veryclean: clean

distclean:
	$(RM) confdefs.h config.cache config.status config.log
	$(RM) Makefile

$(OZLIB) $(OZLIBDIRS) $(BITMAPDIR) $(OZCARBITMAPDIR) $(OZBIN):
	$(INSTALLDIR) $@

$(OZLIB)/%.oz: $(SRCDIR)/%.oz
	$(INSTALLSRC) $< $@

$(OZLIB)/%.ozc: %.ozc
	$(INSTALLFILE) $< $@

$(BITMAPDIR)/%: $(SRCDIR)/bitmaps/%
	$(INSTALLFILE) $< $@

$(OZCARBITMAPDIR)/%: $(SRCDIR)/ozcar/bitmaps/%
	$(INSTALLFILE) $< $@

$(OZLIB)/%.env: $(SRCDIR)/%.env
	$(INSTALLSRC) $< $@

$(OZLIB)/%.tyc: tyc/%.tyc
	$(INSTALLFILE) $< $@

$(OZBIN)/ozbatch: ozbatch
	$(INSTALLPRG) $< $@

%.typ: $(SRCDIR)/%.env
	$(ENV2TYPE) $< > $@

tyc/%.tyc: %.typ tyc $(DUMPINTRO)
	$(COMPILE) $< -o $@

%.ozc:
	$(COMPILE) $*

tyc compiler ozcar:
	$(MKDIR) $@

Init.ozc: $(DUMPINTRO) $(INITSRC)
	OZMAINIT="" $(COMPILE) Init.oz

OPI.ozc: $(DUMPINTRO) $(SRCDIR)/OPI.oz Init.ozc SP.ozc OP.ozc AP.ozc \
	$(SRCDIR)/Compiler.env $(TYCS)

SP.ozc: $(DUMPINTRO) $(SPSRC) $(SRCDIR)/SP.env Init.ozc

OP.ozc: $(DUMPINTRO) $(OPSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env Init.ozc

AP.ozc: $(DUMPINTRO) $(APSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/AP.env Init.ozc

CP.ozc: $(DUMPINTRO) $(CPSRC) $(SRCDIR)/SP.env $(SRCDIR)/CP.env Init.ozc

WP.ozc: $(DUMPINTRO) $(WPSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/WP.env Init.ozc

DP.ozc: $(DUMPINTRO) $(DPSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/AP.env $(SRCDIR)/WP.env $(SRCDIR)/DP.env Init.ozc

Compiler.ozc: $(DUMPINTRO) $(COMPILERSRC) $(SRCDIR)/SP.env \
	$(SRCDIR)/CP.env $(SRCDIR)/Compiler.env Init.ozc

compiler/Version.oz: compiler $(COMPILERSRCNOVER) $(OZVERSION) \
	$(SRCDIR)/compiler/Opcodes.m4oz
	($(ECHO) 'OZVERSION = '\'`$(OZVERSION)`\'; \
	$(ECHO) 'DATE = '\'`date '+%h %d 19%y (%T)'`\') > $@

compiler/Opcodes.oz: compiler $(SRCDIR)/compiler/Opcodes.m4oz \
	$(TOPDIR)/Emulator/instrDefs.m4
	$(M4) -DEMUDIR=$(TOPDIR)/Emulator \
	< $(SRCDIR)/compiler/Opcodes.m4oz > $@

CompilerPanel.ozc: $(DUMPINTRO) $(COMPILERPANELSRC) $(SRCDIR)/SP.env \
	$(SRCDIR)/OP.env $(SRCDIR)/WP.env $(SRCDIR)/Compiler.env \
	$(SRCDIR)/Browser.env $(SRCDIR)/CompilerPanel.env Init.ozc

Panel.ozc: $(DUMPINTRO) $(PANELSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/WP.env $(SRCDIR)/Panel.env Init.ozc

Browser.ozc: $(DUMPINTRO) $(BROWSERSRC) $(SRCDIR)/SP.env $(SRCDIR)/CP.env \
	$(SRCDIR)/WP.env $(SRCDIR)/Browser.env Init.ozc

Explorer.ozc: $(DUMPINTRO) $(EXPLORERSRC) $(SRCDIR)/SP.env $(SRCDIR)/WP.env \
	$(SRCDIR)/Browser.env $(SRCDIR)/Explorer.env Init.ozc

Emacs.ozc: $(DUMPINTRO) $(EMACSSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/Emacs.env Init.ozc

Ozcar.ozc: $(DUMPINTRO) $(OZCARSRC) $(SRCDIR)/SP.env $(SRCDIR)/WP.env \
	$(SRCDIR)/Browser.env $(SRCDIR)/Emacs.env $(SRCDIR)/Compiler.env \
	$(SRCDIR)/Ozcar.env Init.ozc

ozcar/version.oz: ozcar $(OZCARSRCNOVER)
	cd ozcar && $(SRCDIRA)/ozcar/version.sh

Profiler.ozc: $(DUMPINTRO) $(PROFILERSRC) $(SRCDIR)/SP.env $(SRCDIR)/OP.env \
	$(SRCDIR)/WP.env $(SRCDIR)/Browser.env $(SRCDIR)/Emacs.env \
	$(SRCDIR)/Compiler.env $(SRCDIR)/Profiler.env Init.ozc

Makefile: $(SRCDIR)/Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

tags:
	etags --language=none \
	--regex='/[ \t]*proc\>[^{\n]*{!?\([A-Z][A-Za-z0-9_]*\|`.+`\)/\1/' \
	--regex='/[ \t]*fun\>[^{\n]*{!?\([A-Z][A-Za-z0-9_]*\|`.+`\)/\1/' \
	--regex='/[ \t]*class[ \t]+!?\([A-Z][A-Za-z0-9_]*\|`.+`\)/\1/' \
	--regex='/[ \t]*meth\([ \t]+\|[ \t]*![ \t]*\)\([A-Za-z0-9][A-Za-z0-9_]*\|`.+`|'\''.+'\''\)/\2/' \
	$(ALLSRCS)
