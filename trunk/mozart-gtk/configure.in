AC_INIT(Main.oz)
AC_PREFIX_DEFAULT(/usr/local/oz)
AC_CANONICAL_HOST
SRCDIR=`cd $srcdir && pwd`
AC_SUBST(SRCDIR)
SRCTOP="$SRCDIR"
OZ_PATH_PROG(OZTOOL,oztool,AC_MSG_ERROR([oztool not found]))
OZ_PATH_PROG(OZDOC,ozdoc,AC_MSG_ERROR([ozdoc not found]))
PLATFORM=`$OZTOOL platform || exit 1`
AC_SUBST(PLATFORM)
OZ_PROG_MAKE
AC_PROG_MAKE_SET
OZ_PROG_INSTALL
AC_SUBST(INSTALL_DIR)
OZ_CXX_CHOOSE
AC_SUBST(CPPFLAGS)
AC_SUBST(CXXFLAGS)
AC_LANG_CPLUSPLUS
OZ_PATH_PROG(OZC,ozc,AC_MSG_ERROR([ozc not found]))
OZ_PATH_PROG(OZL,ozl,AC_MSG_ERROR([ozl not found]))
OZ_PATH_PROG(OZENGINE, ozengine,AC_MSG_ERROR([ozengine not found]))

dnl Check for flex/bison
OZ_PROG_FLEX
OZ_PROG_BISON

dnl Check for preprocessor
AC_PATH_PROG(CPP, cpp)
if test -z "$CPP"; then
  AC_MSG_ERROR(unable to find preprocessor)
fi

AC_MSG_CHECKING([for tricky preprocessor options])
if test "${GXX}" = yes; then
   echo > oz_conftest.c
   if test -z "`${CPP} -undef -D__GNUC__ -std=c99 oz_conftest.c 2>&1 1>/dev/null`"; then
      MOZART_GTK_CPPFLAGS="-undef -D__GNUC__ -std=c99"
   else
      MOZART_GTK_CPPFLAGS=
   fi
   rm -f oz_conftest.c
fi
AC_MSG_RESULT($MOZART_GTK_CPPFLAGS)
AC_SUBST(MOZART_GTK_CPPFLAGS)

dnl Check for the GTK+ config tool
AC_PATH_PROG(GTKCONFIG, gtk-config)
if test -z $GTKCONFIG; then
    AC_MSG_ERROR(The gtk-config script, which is part of the GTK+ library, could no be found. Please make sure you have a working installation of GTK+ on your system, otherwise GTK+ support can not be enabled. GTK+ can be found at http://www.gtk.org)
fi

dnl Check for the right GTK+ version
AC_MSG_CHECKING(for GTK+ version)
GTKVERSION=`$GTKCONFIG --version`
case $GTKVERSION in
  1.2.*)
  AC_MSG_RESULT($GTKVERSION)
  ;;
  1.3.*)
  AC_MSG_RESULT($GTKVERSION)
  ;;
  *)  AC_MSG_ERROR(Your GTK+ library is too old. Please update to version 1.2 or later. GTK+ can be found at http://www.gtk.org)
esac

GTKFLAGS=`$GTKCONFIG --cflags`
GTKLIBS=`$GTKCONFIG --libs`

CPPFLAGS="$GTKFLAGS $CPPFLAGS"
LIBS="-lart_lgpl -lgdk_imlib $GTKLIBS $LIBS"

dnl Checking for canvas
EXPLICIT_CANVAS=no
AC_MSG_CHECKING(for --with-gtk-canvas-dir)
AC_ARG_WITH(gtk_canvas_dir,
    [--with-gtk-canvas-dir=<d>    GTK+ Canvas directory. (default=none)],
    HAVE_CANVAS=yes
    EXPLICIT_CANVAS=yes
    CANVASDIR="$with_gtk_canvas_dir"
    AC_MSG_RESULT([canvas directory = ]$CANVASDIR),
    HAVE_CANVAS=no
    AC_MSG_RESULT(no))
AC_SUBST(HAVE_CANVAS)

AC_MSG_CHECKING(for gtk-canvas.h)
if test "$EXPLICIT_CANVAS" = no; then
   CANVASDIR="/NONE"
   OZ_CHECK_HEADER_PATH(gtk-canvas.h,
     HAVE_CANVAS=yes,
     oz_inc_path_sav=$oz_inc_path
     oz_inc_path="$oz_inc_path /usr/local/include"
     OZ_CHECK_HEADER_PATH(gtk-canvas.h,
       HAVE_CANVAS=yes,
       HAVE_CANVAS=no
       oz_inc_path=$oz_inc_path_sav))
else
   CPPFLAGS_sav="$CPPFLAGS"
   CPPFLAGS="-I$CANVASDIR/include $CPPFLAGS"
   OZ_CHECK_HEADER_PATH(gtk-canvas.h,
     HAVE_CANVAS=yes,
     HAVE_CANVAS=no
     CPPFLAGS="$CPPFLAGS_sav")
fi
AC_MSG_RESULT($HAVE_CANVAS)

if test "$HAVE_CANVAS" = no; then
  AC_MSG_ERROR([gtk-canvas is required for mozart-gtk])
fi

if test "$EXPLICIT_CANVAS" = no; then
   OZ_CHECK_LIB_PATH(gtk-canvas,gtk_canvas_new,
     HAVE_CANVAS=yes,
     oz_lib_path_sav=$oz_lib_path
     oz_lib_path="$oz_lib_path /usr/local/lib"
     OZ_CHECK_LIB_PATH(gtk-canvas,gtk_canvas_new,
       HAVE_CANVAS=yes,
       HAVE_CANVAS=no
       oz_lib_path=$oz_lib_path_sav))
else
   LDFLAGS_sav="$LDFLAGS"
   LDFLAGS="-L$CANVASDIR/lib $LDFLAGS"
   OZ_CHECK_LIB_PATH(gtk-canvas,gtk_canvas_new,
     HAVE_CANVAS=yes,
     HAVE_CANVAS=no
     LDFLAGS="$LDFLAGS_sav")
fi

if test "$HAVE_CANVAS" = no; then
  AC_MSG_ERROR([gtk-canvas is required for mozart-gtk])
fi

AC_SUBST(CANVASDIR)

AC_OUTPUT(Makefile)

errprint(ifdef([OZ_INIT],
 [autoconf succeeded.
],
 [autoconf failed: use 'autoconf -l ../..' to include ../aclocal.m4.
]))
