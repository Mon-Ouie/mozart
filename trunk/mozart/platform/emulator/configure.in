dnl -*- sh -*-
dnl
dnl  Authors:
dnl    Michael Mehl (mehl@dfki.de)
dnl 
dnl  Contributors:
dnl    optional, Contributor's name (Contributor's email address)
dnl 
dnl  Copyright:
dnl    Michael Mehl (1997)
dnl 
dnl  Last change:
dnl    $Date$ by $Author$
dnl    $Revision$
dnl 
dnl  This file is part of Mozart, an implementation 
dnl  of Oz 3:
dnl     http://mozart.ps.uni-sb.de
dnl 
dnl  See the file "LICENSE" or
dnl     http://mozart.ps.uni-sb.de/LICENSE.html
dnl  for information on usage and redistribution 
dnl  of this file, and for a DISCLAIMER OF ALL 
dnl  WARRANTIES.
dnl

dnl Process this file with autoconf to produce a configure script.

dnl mm2: Known Problems and Bugs
dnl  Windows support
dnl  pmake support
dnl  ensure that all needed programs are really found
dnl  cache M4 -E

dnl *****************************************************************
dnl INITIALIZE
dnl *****************************************************************

dnl This will check that we are in the Oz directory and initiate
AC_INIT(base.hh)

OZ_INIT

dnl hack: support that the emulator is configured in a subdir
if test "$srcdir" = ".."
then
    BUILDTOP=`cd ../../.. && pwd`
else
    BUILDTOP=`cd ../.. && pwd`
fi
AC_SUBST(BUILDTOP)

AC_LANG_CPLUSPLUS

dnl *****************************************************************
dnl additional tests
dnl *****************************************************************

AC_DEFUN(OZ_ENABLE, [
    AC_MSG_CHECKING(for --enable-$1)
    AC_ARG_ENABLE($1, [--enable-$1 $2 (default=$3)])
    : ${[oz_enable_]translit($1,-,_)=$3}
    if test -n "${[enable_]translit($1,-,_)}"; then
	[oz_enable_]translit($1,-,_)=$[enable_]translit($1,-,_)
    fi
    if test "${[oz_enable_]translit($1,-,_)}" != no; then
	ifelse($4,[],AC_MSG_RESULT(yes),$4)
    else
	ifelse($5,[],AC_MSG_RESULT(no),$5)
    fi
    ])

AC_DEFUN(OZ_CXX_OPTIONS, [
	ozm_out=
	if test -n "$1"
	then
	    echo 'void f(){}' > oz_conftest.c
	    for ozm_opt in $1
	    do
		AC_MSG_CHECKING(compiler option $ozm_opt)
		ozm_ropt=`echo $ozm_opt | sed -e 's/[[^a-zA-Z0-9_]]/_/g'`
		AC_CACHE_VAL(oz_cv_gxxopt_$ozm_ropt,
		    if test -z "`${CXX} ${ozm_out} ${ozm_opt} -c oz_conftest.c 2>&1`"; then
			eval "oz_cv_gxxopt_$ozm_ropt=yes"
		    else
			eval "oz_cv_gxxopt_$ozm_ropt=no"
		    fi)
		if eval "test \"`echo '$''{'oz_cv_gxxopt_$ozm_ropt'}'`\" = yes"; then
		    ozm_out="$ozm_out $ozm_opt"
		    AC_MSG_RESULT(yes)
		else
		    AC_MSG_RESULT(no)
		fi
	    done
	    rm -f oz_conftest*
	fi
	$2="$ozm_out"
	])

dnl *****************************************************************
dnl windows cross compilation
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-wincross)
AC_ARG_ENABLE(wincross,
  [--enable-wincross  Windows cross compilation (default=no)])
if test "${enable_wincross}" = yes; then
    if test -n "$oz_wincross_dir" && test -n "$oz_wincross_prefix"
    then
        AC_MSG_RESULT(yes (-DGNUWIN32 -DWINDOWS))
	CXX=$oz_wincross_dir/$oz_wincross_prefix-gcc
	LD=$CXX
	RANLIB=$oz_wincross_dir/$oz_wincross_prefix-ranlib
	AR=$oz_wincross_dir/$oz_wincross_prefix-ar
	#LDFLAGS="$LDFLAGS $oz_wincross_LDFLAGS"
	platform="win32-i486"
	PROGRAMNAME="ozemulator.exe"
	with_sunpro=no
	oz_gmp_lib_dir=$oz_wincross_gmp_lib_dir
	oz_gmp_inc_dir=$oz_wincross_gmp_inc_dir
	oz_enable_modules_static=yes
	oz_malloc_obj=
	oz_warn_error=
	AC_DEFINE(GNUWIN32)
	AC_DEFINE(WINDOWS)
	AC_DEFINE(ARCH_I486)
    else
	AC_MSG_RESULT(no)
	AC_MSG_ERROR("oz_wincross_dir and oz_wincross_prefix must be set")
    fi
else
        AC_MSG_RESULT(no)
fi

dnl *****************************************************************
dnl OS2
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-os2)
AC_ARG_ENABLE(os2,
  [--enable-os2       OS2 compilation (default=no)])
if test "${enable_os2}" = yes; then
    AC_MSG_RESULT(yes (-DOS2))
    CXX=gcc
    LD=$CXX
    platform="os2-i486"
    PROGRAMNAME="ozemulator.exe"
    with_sunpro=no
    with_gmp=no
    oz_malloc_obj=
    oz_warn_error=
    AC_DEFINE(OS2)
else
    AC_MSG_RESULT(no)
fi

dnl *****************************************************************
dnl Checks for programs.
dnl *****************************************************************

AC_MSG_CHECKING(for --with-sunpro)
AC_ARG_WITH(sunpro,
    [--with-sunpro      use sunpro compiler (default: no)])
	if test "${with_sunpro}" = yes; then
            AC_MSG_RESULT(yes)
	    AC_CHECK_PROGS(SUNPRO, CC)
	    if test -n "${SUNPRO}"
	    then
		CXX=$SUNPRO
		AC_DEFINE(SUNPRO)
		oz_enable_threaded=no
	    else
		AC_MSG_WARN(Ingnoring --with-sunpro!)
	    fi
	else
	    AC_MSG_RESULT(no)
	fi

AC_PROG_CXX
AC_PROG_CXXCPP

AC_PROG_LEX
AC_PROG_YACC
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB

AC_CHECK_PROGS(M4, gm4 m4, m4)

AC_CHECK_PROGS(SED, gnused sed, sed)
if test -z "$AR"; then
    AC_CHECK_PROGS(AR, gar ar, ar)
fi

OZ_PATH_PROG(PLATFORMSCRIPT, ozplatform)
OZ_PATH_PROG(DYNLD, ozdynld)

AC_PATH_PROG(DEPEND, makedepend, makedepend)

dnl *****************************************************************
dnl platform
dnl *****************************************************************

: ${platform=`$PLATFORMSCRIPT`}
AC_SUBST(platform)

: ${PROGRAMNAME=oz.emulator.bin}
TARGETS="$PROGRAMNAME"
AC_SUBST(PROGRAMNAME)
AC_SUBST(TARGETS)

PLATFORM="`echo $platform|sed -e s/-/_/|tr a-z A-Z`"
AC_DEFINE_UNQUOTED($PLATFORM)
AC_SUBST(PLATFORM)

ARCH=ARCH_`echo $PLATFORM|sed -e 's/.*_//'`
OS=`echo $PLATFORM|sed -e 's/_.*//'`
AC_DEFINE_UNQUOTED($ARCH)
AC_DEFINE_UNQUOTED($OS)

dnl *****************************************************************
dnl Compiler, Linker, and m4 options
dnl *****************************************************************

: ${oz_copt_default=$CXXFLAGS}
CXXFLAGS=

if test "${GXX}" = yes; then
    M4_S="-s"
    DEPEND="$CXX -MM"

    # Note: use $(CC) for linking, not $(CXX): 
    # g++ creates references to libstdc++ 
    AC_MSG_CHECKING(for --enable-gccld)
    AC_ARG_ENABLE(gccld,
	[--enable-gccld  link with gcc (default=no)])
    if test -z "${LD}" -a "$enable_gccld" = yes
    then
	AC_MSG_RESULT(yes)
	LD=gcc
	OZ_CXX_OPTIONS(-fno-exceptions -fno-rtti,oz_a)
	CXXFLAGS="$CXXFLAGS $oza"
    else
	AC_MSG_RESULT(no)
    fi

    AC_MSG_CHECKING(for --enable-warnings)
    AC_ARG_ENABLE(warnings,
	[--enable-warnings  print c warnings (default=no)])

    if test "${enable_warnings}" = yes
    then
	AC_MSG_RESULT(yes)
	oz_warn="-Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual \
	    -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations \
	    -Wnested-externs -Wsynth \
	    -Wno-unused -Wno-reorder -Wno-uninitialized -Wno-sign-compare"
	oz_warn_error="-Werror"
    else
	AC_MSG_RESULT(no)

    fi

    oz_opt="-O9 -frisc -pipe"
    oz_om=
    if test "${platform}" = linux-i486
    then
	oz_opt="$oz_opt -mpentium \
	    -malign-loops=4 -malign-jumps=4 -malign-functions=4"
	oz_om="-fomit-frame-pointer"
    fi
    : ${oz_copt_optimize="$oz_opt $oz_em"}
    : ${oz_copt_profile="$oz_opt -pg -fno-inline -fno-default-inline"}
    : ${oz_copt_debug="-g3 -DINTERFACE"}
fi

if test -n "${SUNPRO}"
then
    : ${oz_copt_optimize=-fast}
    DEPEND="$CXX -xM"
fi

: ${LD=$CXX}
AC_SUBST(LD)

case $platform in
    sunos*)
	;;
    linux*)
	LDFLAGS="$LDFLAGS -Wl,-export-dynamic"
	;;
    solaris*)
	;;
    irix*)
	;;
    osf1*)
	dnl dont change LDFLAGS, see machine.hh !!!
	LDFLAGS="$LDFLAGS -Wl,-D -Wl,0x30000000 -Wl,-T -Wl,0x20000000"
	;;
    hpux*)
	;;
esac

# compiler options
: ${oz_copt_optimize="-O"}
: ${oz_copt_profile=-pg}
: ${oz_copt_debug="-g"}

# compiler options for warnings
AC_SUBST(oz_warn)

# compiler option which turns warnings into errors
AC_SUBST(oz_warn_error)

# linker options
: ${oz_lopt_profile=-pg}

# m4 options
if test -n "$M4"
then
    AC_MSG_CHECKING(whether $M4 understands -E option)
    oz_tmp=`$M4 -E < /dev/null 2>&1`
    if test -n "$oz_tmp"
    then
	AC_MSG_RESULT(no)
    else
	AC_MSG_RESULT(yes)
	M4="$M4 -E"
    fi
fi
AC_SUBST(M4_S)

OZ_CXX_OPTIONS($oz_warn,oz_a)
oz_warn=$oz_a

OZ_CXX_OPTIONS($oz_warn_error,oz_a)
oz_warn_error=$oz_a

dnl *****************************************************************
dnl Checks for libraries.
dnl *****************************************************************

AC_CHECK_LIB(nsl, gethostbyaddr)
AC_CHECK_LIB(socket, socket)
AC_CHECK_LIB(m, fabs)
AC_CHECK_LIB(kernel32,main)
AC_CHECK_LIB(wsock32,main)
AC_CHECK_LIB(dl, dlopen)

dnl *****************************************************************
dnl Checks for header files.
dnl *****************************************************************

dnl AC_HEADER_DIRENT
dnl AC_HEADER_STDC
dnl AC_HEADER_SYS_WAIT
dnl AC_CHECK_HEADERS(fcntl.h limits.h malloc.h strings.h sys/time.h unistd.h)

AC_CHECK_HEADERS(dlfcn.h)

dnl *****************************************************************
dnl Checks for typedefs, structures, and compiler characteristics.
dnl *****************************************************************

dnl const test not needed for C++!
dnl AC_C_CONST

dnl AC_C_INLINE
dnl AC_TYPE_MODE_T
dnl AC_TYPE_PID_T
dnl AC_TYPE_SIZE_T
dnl AC_HEADER_TIME
dnl AC_STRUCT_TM

dnl *****************************************************************
dnl Checks for library functions.
dnl *****************************************************************

dnl AC_FUNC_ALLOCA
dnl AC_FUNC_MEMCMP
dnl AC_TYPE_SIGNAL
dnl AC_FUNC_VPRINTF
dnl AC_CHECK_FUNCS(getcwd gethostname gettimeofday putenv select socket strdup strerror strstr strtod strtol strtoul uname setpgid)

AC_CHECK_FUNCS(sbrk dlopen)

dnl *****************************************************************
dnl MISC
dnl *****************************************************************

# AC_CHECK_SIZEOF(int)
# AC_C_BIGENDIAN

# check malloc base

dnl *****************************************************************
dnl *** GMP
dnl *****************************************************************

: ${oz_inc_path="/usr/local/include"}
: ${oz_lib_path="/usr/local/lib"}

AC_MSG_CHECKING(for --with-gmp)
AC_ARG_WITH(gmp,
	[--with-gmp=<dir>   search gmp library and header in <dir> (default: yes)])
	    
if test "$with_gmp" != no
then
    AC_MSG_RESULT(yes)

    if test "${with_gmp}" != yes
    then
	oz_gmp_lib_dir=$with_gmp
	oz_gmp_inc_dir=$with_gmp
    fi
    
    oz_inc_path="$oz_gmp_inc_dir $oz_inc_path"
    oz_lib_path="$oz_gmp_lib_dir $oz_lib_path"

    OZ_CHECK_HEADER_PATH(gmp.h,,
	    AC_MSG_ERROR(required GNU MP include file not found))
	    
    OZ_CHECK_LIB_PATH(gmp, mpz_init, ,
	    AC_MSG_ERROR(required GNU MP lib not found))
else
    AC_MSG_RESULT(no)
fi

dnl *****************************************************************
dnl *** zlib
dnl *****************************************************************

AC_MSG_CHECKING(for --with-zlib)
AC_ARG_WITH(zlib,
  	[--with-zlib=<dir>  search zlib library and header in <dir> (default: yes)])
	    

if test "$with_zlib" != no
then
    AC_MSG_RESULT(yes)
	    
    if test "${with_zlib}" != yes
    then
	oz_zlib_lib_dir=$with_zlib
	oz_zlib_inc_dir=$with_zlib
    fi

    OZ_CHECK_HEADER_PATH(zlib.h,
	OZ_CHECK_LIB_PATH(z, zlibVersion, AC_DEFINE(USE_ZLIB) ,)
	, )
else
    AC_MSG_RESULT(no)
fi

dnl *****************************************************************
dnl ccmalloc
dnl *****************************************************************

AC_MSG_CHECKING(for --with-ccmalloc)
AC_ARG_WITH(ccmalloc,
    [--with-ccmalloc    use debugging malloc library ccmalloc ])

if test "$with_ccmalloc" = "yes"
then
    AC_MSG_RESULT(yes)
    AC_CHECK_LIB(ccmalloc,main,true,AC_MSG_ERROR(cannot find lib ccmalloc),-L/linux/lib)
    AC_DEFINE(CCMALLOC)
    LIBS="$LIBS -L/linux/lib -lccmalloc"
elif test -n "$with_ccmalloc"
then
    AC_MSG_ERROR(only yes allowed)
else
    AC_MSG_RESULT(no)
fi


dnl *****************************************************************
dnl *** Features
dnl *****************************************************************


AC_MSG_CHECKING(for --enable-opt)
AC_ARG_ENABLE(opt,
    [--enable-opt=<k>   add specialied compile options (default=no)
                   (o|yes=optimize, d=debug, p=profile, rsp=ralfs profile)])
case $enable_opt in
    d*)
        AC_MSG_RESULT(debug (-DDEBUG_EMULATOR))
	AC_DEFINE(DEBUG_EMULATOR)
	OZ_CXX_OPTIONS($oz_copt_debug, COPT)
	oz_enable_threaded=no
	oz_enable_fastreg=no
	oz_enable_regopt=no
	;;
    p*)
	AC_MSG_RESULT(profile (-DPROFILE_EMULATOR))
	AC_DEFINE(PROFILE_EMULATOR)
        OZ_CXX_OPTIONS($oz_copt_profile, COPT)
	LDFLAGS="$LDFLAGS $oz_lopt_profile"
	;;
    rsp*)
        AC_MSG_RESULT(rsprofile (-DRS_PROFILE))
	AC_DEFINE(RS_PROFILE)
        OZ_CXX_OPTIONS("-O", COPT)
	;;
    yes|o*)
	AC_MSG_RESULT(optimize)
	OZ_CXX_OPTIONS($oz_copt_optimize, COPT)
	;;
    *)
        AC_MSG_RESULT(default)
	COPT=$oz_copt_default
	;;
esac
AC_SUBST(COPT)


OZ_ENABLE(threaded,[ threaded code emulator],yes,
	AC_MSG_RESULT(yes (-DTHREADED))
	AC_DEFINE(THREADED)
	)

OZ_ENABLE(fastreg,[  fast register access],yes,
	AC_MSG_RESULT(yes (-DFASTREGACCESS))
	AC_DEFINE(FASTREGACCESS)
	)

OZ_ENABLE(regopt,[   register optimization],yes,
	AC_MSG_RESULT(yes (-DREGOPT))
	AC_DEFINE(REGOPT)
	)

OZ_ENABLE(modules-static,[ link modules statically],no,
        AC_MSG_RESULT(yes (-DMODULES_LINK_STATIC))
	AC_DEFINE(MODULES_LINK_STATIC)
	MODULETARGETS="\$(STATIC_MODULETARGETS)"
        LIBS="$LIBS \$(STATIC_MODULELIBS)"
	,
        AC_MSG_RESULT(no (-UMODULES_LINK_STATIC))
	MODULETARGETS="\$(DYNAMIC_MODULETARGETS)"
	MODULEINSTALL="install-module"
	)
AC_SUBST(MODULETARGETS)
AC_SUBST(MODULEINSTALL)


dnl *****************************************************************
dnl malloc
dnl *****************************************************************

if test -z "$with_ccmalloc" 
then
    AC_MSG_CHECKING(for --with-malloc)
    AC_ARG_WITH(malloc,
	[--with-malloc=<obj>      use malloc from object file <obj> (default: NONE)])

    if test -n "$with_malloc"
    then
	oz_malloc_obj=$with_malloc
    fi
    
    if test -n "$oz_malloc_obj" && test -r $oz_malloc_obj
    then
	LIBS="$LIBS $oz_malloc_obj"
	AC_MSG_RESULT(yes (\"$oz_malloc_obj\"))
    else
	AC_MSG_RESULT(no)
    fi
fi

dnl *****************************************************************
dnl tmphack
dnl *****************************************************************

AC_MSG_CHECKING(for --enable-tmphack)
AC_ARG_ENABLE(tmphack,
  [--enable-tmphack=<host>  link and compile in /tmp (default=no)])
if test -n "${enable_tmphack}"
then
    if test $enable_tmphack = no
    then
	oz_tmphack_host=
    else
	oz_tmphack_host=$enable_tmphack
    fi
fi

if test -n "$oz_tmphack_host"
then
    AC_MSG_RESULT(yes (host is \"$oz_tmphack_host\"))
    oz_tmphack_target=".cc.o"
    oz_tmphack_programname="$PROGRAMNAME"
    PROGRAMNAME="$PROGRAMNAME.local"
else
    AC_MSG_RESULT(no)
    oz_tmphack_target=".cc.oo"
    oz_tmphack_programname="$PROGRAMNAME.tmp"
fi
AC_SUBST(oz_tmphack_target)
AC_SUBST(oz_tmphack_host)
AC_SUBST(oz_tmphack_programname)

dnl *****************************************************************
dnl virtual site SUPPORT
dnl *****************************************************************

OZ_ENABLE(virtualsites,[   provide support for virtual sites],no,
	AC_DEFINE(VIRTUALSITES)
        AC_MSG_RESULT(yes)
	,
	)

dnl *****************************************************************
dnl Include misc builtins
dnl *****************************************************************

OZ_ENABLE(miscbuiltins,[   include misc builtins],no,
	AC_DEFINE(MISC_BUILTINS)
        AC_MSG_RESULT(yes)
	,
	)

dnl *****************************************************************
dnl FINALIZE
dnl *****************************************************************

AC_CONFIG_HEADER(conf.h)

AC_OUTPUT(Makefile.vars Makefile Makefile.rules libfd/Makefile libfset/Makefile CONF.h:CONF.in)

errprint(ifdef([OZ_INIT],
 [],
 [autoconf failed: use 'autoconf -l ../..' to include ../../aclocal.m4.
]))
