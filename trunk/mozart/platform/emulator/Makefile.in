#  Authors:
#    Michael Mehl (mehl@dfki.de)
# 
#  Contributors:
#    optional, Contributor's name (Contributor's email address)
# 
#  Copyright:
#    Michael Mehl (mehl@dfki.de)
# 
#  Last change:
#    $Date$ by $Author$
#    $Revision$
# 
#  This file is part of Mozart, an implementation 
#  of Oz 3:
#     $MOZARTURL$
# 
#  See the file "LICENSE" or
#     $LICENSEURL$
#  for information on usage and redistribution 
#  of this file, and for a DISCLAIMER OF ALL 
#  WARRANTIES.

include Makefile.vars

FDTARGETS	= @FDTARGETS@
FSETTARGETS	= @FSETTARGETS@
TARGETS		= @TARGETS@
SUBDIRS		= FDLib FSetLib

#MOREWARNINGS  =   -Wall -pedantic-errors -W -Wtraditional -Wshadow \
#	-Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align \
#	-Wwrite-strings -Wconversion -Waggregate-return -Wstrict-prototypes \
#	-Wmissing-prototypes -Wmissing-declarations -Wredundant-decls \
#	-Wnested-externs -Winline -Woverloaded-virtual -Wsynth -Werror

WARNINGS = -Wall -W -Wpointer-arith -Wbad-function-cast -Wcast-qual \
	-Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations \
	-Wnested-externs -Wsynth -Wno-unused -Wno-reorder -Wno-uninitialized

CREATEDOTHERS = \
	instrtab.hh opcodes.hh optostr.hh marshaler.hh\
	marshalcode.cc marshalMsg.cc register.hh oz.c \
	ozma-p.yy ozma-s.ll config.h

CREATEDSRCS = \
	scancode.cc copycode.cc opcodes.cc ozma-p.cc ozma-s.cc\
	scanner.cc parser.cc version.cc initffuns.cc

CREATEDFILES = $(CREATEDOTHERS) $(CREATEDSRCS)

PEANUTSFILE = peanuts.cc
PEANUTS = \
	am.cc genvar.cc	indexing.cc fdhook.cc\
	taskstk.cc mem.cc assemble.cc\
	fdprofil.cc statisti.cc fdgenvar.cc\
	codearea.cc debug.cc lps.cc solve.cc\
	variable.cc thrqueue.cc thrspool.cc\
	avar.cc perdiovar.cc lazyvar.cc\
	print.cc

CXXSRCS = \
	actor.cc base.cc board.cc thread.cc\
	dictionary.cc stack.cc susplist.cc\
	cpbag.cc tagged.cc value.cc\
	cont.cc ozconfig.cc trail.cc\
	foreign.cc \
	compiler.cc ofgenvar.cc genhashtbl.cc\
	ozostream.cc runtime.cc unix.cc\
	tcl_tk.cc metavar.cc perdio.cc\
	urlc.cc iso-ctype.cc hashtbl.cc\
	os.cc emulate.cc builtins.cc\
	components.cc network.cc virtual.cc\
	comm.cc marshaler.cc liveness.cc gc.cc 

FDSRCS =\
	fdbuilti.cc fdomn.cc fdcore.cc\
	fdcd.cc fdbvar.cc fddist.cc 

CPISRCS =\
	cpi.cc cpi_fd.cc cpi_prop.cc\
	cpi_fs.cc cpi_expect.cc cpi_misc.cc\
	cpi_stream.cc cpi_profile.cc

FSETSRCS =\
	fset.cc fsetcore.cc fsgenvar.cc

SRCS1 = $(FDSRCS) $(FSETSRCS) $(CPISRCS) $(CXXSRCS) @PEANUTS@ main.cc

SRCS = $(CREATEDSRCS) $(SRCS1) 

OBJS = $(SRCS:.cc=.o)

.NOEXPORT: emulate.o @PROGRAMNAME@ peanuts.o
.PHONY:	all subdirs win win-install first install install-bin install-inc \
	install-dir version depend tags clean distclean realclean veryclean \
	$(FDTARGETS) $(FSETTARGETS)

all: $(TARGETS)

$(FDTARGETS):
	cd FDLib; $(MAKE) $@

$(FSETTARGETS):
	cd FSetLib; $(MAKE) $@

win: ozlib.lnk $(CREATEDFILES)

win-install:
	$(INSTALL_BIN) ozemulator.exe $(BINDIR)

first: $(CREATEDFILES) $(SRCS)

@PROGRAMNAME@: first $(OBJS) $(FDTARGETS) $(FSETTARGETS)
	$(LD) $(LDFLAGS) $(LDOPT) -o $@ $(OBJS) $(LIBS)

@tmphack_programname@: first $(OBJS) $(FDTARGETS) $(FSETTARGETS)
	tmp=/tmp/ozemu$$$$; \
	trap "$(RM) $$tmp; exit 1" 1 2 15; \
	 $(LD) $(LDFLAGS) $(LDOPT) -o $$tmp $(OBJS) $(LIBS) && \
	 echo 'moving ...' && \
	 rcp $$tmp @tmphack_host@:`pwd`/$@ && \
	 $(RM) $$tmp

install:: install-dir install-bin install-inc

install-bin: version $(TARGETS)
	$(INSTALL_BIN) $(TARGETS) $(BINDIR)

install-inc:
	$(INSTALL_OTHER) $(SRCDIR)/oz.h $(INCDIR)
	$(INSTALL_OTHER) $(SRCDIR)/oz_cpi.hh $(INCDIR)

install-dir:
	if test ! -d $(PLATFORMDIR) ; then $(INSTALL_DIR) $(PLATFORMDIR) ; fi
	if test ! -d $(BINDIR); then $(INSTALL_DIR) $(BINDIR) ; fi
	if test ! -d $(INCDIR); then $(INSTALL_DIR) $(INCDIR) ; fi

initffuns.cc oz.c: oz.h $(OZVERSION)
	$(SRCDIR)/makeffuns $(SRCDIR) `$(OZVERSION)`

version.cc: version.sed
	$(MAKE) version

version:
	$(SED) -e "s/HEREGOESDATE/`date '+%h %d 19%y \(%T\)'`/" \
	     -e "s/OZPLATFORM/$(PLATFORM)/" \
	     $(SRCDIR)/version.sed > version.cc

depend:: Makefile $(CREATEDFILES) $(SRCS)
	$(DEPEND) $(SRCS1:%=$(SRCDIR)/%) $(CREATEDSRCS) >> Makefile

# prefered gmake depend!
# include $(SRCS:.cc=.d)

tags::	$(CREATEDFILES) version.cc

clean::
	$(RM) gmon.out  fetchedInstr.dump verb_out.txt

ozlib.lnk: oz.h
	grep FUNDECL oz.h | grep -v typedef | grep -v define | \
	sed -e 's/.*_FUNDECL(\([A-Za-z0-9_]*\).*/export _\1/' > $@

scanner.cc: scanner.ll
	$(LEX) $(LFLAGS) -Pxy -o$@ $<

parser.cc: parser.hh
	@echo > /dev/null

parser.hh: parser.yy
	$(YACC) $(YFLAGS) -p xy $<
	@$(MV) y.tab.c parser.cc
	@$(MV) y.tab.h parser.hh

# this special rule ensures that warnings issued in bison.simple
# are not treated as errors:
parser.o: parser.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -w -c $< -o $@

ozma-s.cc: ozma-s.ll
	$(LEX) $(LFLAGS) -Pozma $<
	@$(MV) lex.ozma.c ozma-s.cc

ozma-p.cc ozma.hh: ozma-p.yy
	$(YACC) $(YFLAGS) -p ozma $<
	@$(MV) y.tab.c ozma-p.cc
	@$(MV) y.tab.h ozma.hh

ozma-p.o: ozma-p.cc
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -w -c $< -o $@

ozma-s.ll: ozma-s.m4ll
	$(M4) $(M4_D) $< > $@

ozma-p.yy: ozma-p.m4yy
	$(M4) $(M4_D) $< > $@

config.h: config.m4h $(OZVERSION)
	$(M4) $(M4_D) -DOZVERSION=\"`$(OZVERSION)`\" $< > $@

#/usr/include/signal.h is broken on Linux:
#os.cc: In function `void osBlockSignals(int = 0)':
#os.cc:208: warning: assignment of negative value `-1' to `long unsigned int'
#os.o: os.cc
#	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -w -c $< -o $@

include Makefile.rules

# realclean should be after make in subdirs (see Makefiles.rules)

realclean::
	$(RM) version.cc scanner.cc parser.cc parser.hh $(TARGETS) \
		ozlib.lnk *.exe *.map *.imp *.sym \
		ozma.hh \
		$(CREATEDFILES) TAGS

distclean::
	$(RM) conf.h config.cache config.log config.status \
		Makefile.rules Makefile.vars Makefile

# dependencies
marshaler.hh marshalMsg.cc: msgFormat.m4
scancode.cc copycode.cc ozma-s.ll ozma-p.yy optostr.hh marshalcode.cc opcodes.hh opcodes.cc instrtab.hh: instrDefs.m4

# automatic configure
${srcdir}/configure: configure.in
	cd ${srcdir} && autoconf

conf.h: conf.h.in config.status
	./config.status

Makefile: Makefile.in config.status
	./config.status

Makefile.vars: Makefile.vars.in config.status
	./config.status

Makefile.rules: Makefile.rules.in config.status
	./config.status

config.status: configure
	./config.status --recheck

