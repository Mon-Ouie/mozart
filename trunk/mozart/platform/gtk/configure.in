dnl -*- sh -*-
dnl
dnl  Authors:
dnl    Christian Schulte (2000)
dnl    Andreas Simon (2000)
dnl
dnl  Copyright:
dnl    Christian Schulte (2000)
dnl    Andreas Simon (2000)
dnl
dnl  Last change:
dnl    $Date$ by $Author$
dnl    $Revision$
dnl
dnl  This file is part of Mozart, an implementation
dnl  of Oz 3:
dnl     http://www.mozart-oz.org
dnl
dnl  See the file "LICENSE" or
dnl     http://www.mozart-oz.org/LICENSE.html
dnl  for information on usage and redistribution
dnl  of this file, and for a DISCLAIMER OF ALL
dnl  WARRANTIES.
dnl

dnl Process this file with autoconf to produce a configure script.

dnl *****************************************************************
dnl INITIALIZE
dnl *****************************************************************

dnl This will check that we are in the Oz directory and initiate
AC_INIT(gozsupport.h)


AC_SUBST(EXTRALDFLAGS)

OZ_INIT

OZ_CC_CHOOSE
OZ_CXX_CHOOSE

AC_PROG_LN_S

dnl *****************************************************************
dnl platform
dnl *****************************************************************

OZ_PATH_PROG(PLATFORMSCRIPT, ozplatform)
: ${platform=`$PLATFORMSCRIPT`}


dnl *********************************************************************
dnl ** Perl
dnl *********************************************************************

AC_PATH_PROG(perlpath, perl)
PERL=$perlpath
AC_SUBST(PERL)
AC_MSG_RESULT(ok)

dnl *********************************************************************
dnl ** GLIB
dnl *********************************************************************

AC_PATH_PROG(glibpath, glib-config)
if test -z $glibpath; then
    AC_MSG_ERROR(You need the glib library to enable GTK support. It can be found at http://www.gtk.org)
fi
AC_MSG_CHECKING(for Glib compile flags)
GLIB_CFLAGS=`$glibpath --cflags`
GLIB_LIBS=`$glibpath --libs`
CFLAGS="$CFLAGS $GLIB_CFLAGS"
LIBS="$LIBS $GLIB_LIBS"
AC_MSG_RESULT(ok)

dnl *********************************************************************
dnl ** GTK
dnl *********************************************************************

AC_PATH_PROG(gtkpath, gtk-config)
if test -z $gtkpath; then
    AC_MSG_ERROR(You need the GTK library to enable GTK support. It can be found at http://www.gtk.org)
fi
AC_MSG_CHECKING(for GTK compile flags)
GTK_CFLAGS=`$gtkpath --cflags`
GTK_LIBS=`$gtkpath --libs`
GTK_HDRS=`$gtkpath --prefix`/include/gtk
GDK_HDRS=`$gtkpath --prefix`/include/gdk
CFLAGS="$CFLAGS $GTK_CFLAGS"
LIBS="$LIBS $GTK_LIBS"
AC_SUBST(GTK_HDRS)
AC_SUBST(GDK_HDRS)
AC_MSG_RESULT(ok)

dnl *********************************************************************
dnl ** Glade
dnl *********************************************************************

ENABLE_GLADE="no"
GLADE_FAIL="not found. Glade support will be disabled."
AC_PATH_PROG(libglade_config, libglade-config, $GLADE_FAIL)
if test "$libglade_config" != "$GLADE_FAIL"; then
    ENABLE_GLADE="yes"
    GLADE_CFLAGS=`$libglade_config --cflags`
    GLADE_LIBS=`$libglade_config --libs`
    GFLAGS="$CFLAGS $GLADE_CFLAGS"
    LIBS="$LIBS $GLADE_LIBS"
    AC_SUBST(GLADE_CFLAGS)
    AC_SUBST(GLADE_LIBS)
fi
AC_SUBST(ENABLE_GLADE)

dnl *****************************************************************
dnl FINALIZE
dnl *****************************************************************

AC_OUTPUT(Makefile)

errprint(ifdef([OZ_INIT],
 [autoconf succeeded
],
 [autoconf failed: use 'autoconf -l ../..' to include ../aclocal.m4.
]))
