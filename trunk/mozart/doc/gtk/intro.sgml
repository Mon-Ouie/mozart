<!--
  - Authors:
  -   Thorsten Brunklaus  <brunklaus@ps.uni-sb.de>
  -   Leif Kornstaedt <kornstae@ps.uni-sb.de>
  -
  - Copyright:
  -   Thorsten Brunklaus, 2001
  -   Leif Kornstaedt, 2001
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation of Oz 3:
  -   http://www.mozart-oz.org
  -
  - See the file "LICENSE" or
  -   http://www.mozart-oz.org/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<Chapter id="chapter.intro">
  <Title/Introduction/
  <Para class=apropos><Title/GTK/
    <!--**-->
    What is GTK+?  Link + description, in the following just called GTK
  <Para class=apropos><Title/GDK/
    <!--**-->
    What is GDK?
  <Para class=apropos><Title/The Binding/
    <!--**-->
    What is provided by the binding?  Version numbers, &ellipsis;
  <Section><Title/Example/
  <P>
    We now answer the most interesting question: How to
    to a hello world using the OZ GTK binding? Here we go:
  <P>
<<<
functor $
import
   Application
   System(show)
   GTK at 'x-oz://system/gtk/GTK.ozf'
define
   %% Create Toplevel window class
   class MyToplevel from GTK.window
      meth new
	 GTK.window, new(GTK.'WINDOW_TOPLEVEL')
	 GTK.window, setBorderWidth(10)
	 GTK.window, setTitle("Hello, World!")
	 {self signalConnect('delete-event' deleteEvent _)}
      end
      meth deleteEvent(Args)
         %% Do cleanup stuff herein
	 {System.show 'deleteEvent occured'}
	 {Application.exit 0}
      end
   end
   %% Create Button class
   class MyButton from GTK.button
      meth new
	 GTK.button, newWithLabel("Hello, World!")
	 GTK.button, signalConnect('clicked' clickedEvent _)
      end
      meth clickedEvent(Args)
	 {System.show 'ClickedEvent occured'}
      end
   end
   %% Create Class Instances
   Toplevel = {New MyToplevel new}
   Button   = {New MyButton new}
   %% Make Butten child of Toplevel Container
   {Toplevel add(Button)}
   %% Make it all visible
   {Toplevel showAll}
end
>>>
  <P>
    If you are familiar with other GUI sets, you will be able to recognize
    a few things suchs as creating windows, filling it with childs and making
    them reactive to some kind of events.
  <P>
    The explanation of those things is left to the next chapter.
  <Section><Title/Structure of the Manual/
    <!--**-->
</Chapter>
