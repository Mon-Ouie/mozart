<!--
  - Authors:
  -   Christian Schulte <schulte@dfki.de>
  -
  - Copyright:
  -   Christian Schulte, 1998
  -
  - Last change:
  -   $Date$ by $Author$
  -   $Revision$
  -
  - This file is part of Mozart, an implementation
  - of Oz 3
  -    http://mozart.ps.uni-sb.de
  -
  - See the file "LICENSE" or
  -    http://mozart.ps.uni-sb.de/LICENSE.html
  - for information on usage and redistribution
  - of this file, and for a DISCLAIMER OF ALL
  - WARRANTIES.
  -
  -->

<appendix id=appendix.data>
  <title/Example Data/

<p> The following appendix features some data specifications omitted
in the chapters' text.

<section id="section.data.widgets-2">
  <title/More on Widgets/

<p>
<chunk><title/Color names/
[aliceblue            antiquewhite         aquamarine          
 azure                beige                bisque              
 black                blanchedalmond       blue                
 blueviolet           brown                burlywood           
 cadetblue            chartreuse           chocolate           
 coral                cornflowerblue       cornsilk            
 cyan                 darkblue             darkcyan            
 darkgoldenrod        darkgray             darkgreen           
 darkgrey             darkkhaki            darkmagenta         
 darkolivegreen       darkorange           darkorchid          
 darkred              darksalmon           darkseagreen        
 darkslateblue        darkslategray        darkslategrey       
 darkturquoise        darkviolet           deeppink            
 deepskyblue          dimgray              dimgrey             
 dodgerblue           firebrick            floralwhite         
 forestgreen          gainsboro            ghostwhite          
 gold                 goldenrod            gray                
 green                greenyellow          grey                
 honeydew             hotpink              indianred           
 ivory                khaki                lavender            
 lavenderblush        lawngreen            lemonchiffon        
 lightblue            lightcoral           lightcyan           
 lightgoldenrod       lightgoldenrodyellow lightgray           
 lightgreen           lightgrey            lightpink           
 lightsalmon          lightseagreen        lightskyblue        
 lightslateblue       lightslategray       lightslategrey      
 lightsteelblue       lightyellow          limegreen           
 linen                magenta              maroon              
 mediumaquamarine     mediumblue           mediumorchid        
 mediumpurple         mediumseagreen       mediumslateblue     
 mediumspringgreen    mediumturquoise      mediumvioletred     
 midnightblue         mintcream            mistyrose           
 moccasin             navajowhite          navy                
 navyblue             oldlace              olivedrab           
 orange               orangered            orchid              
 palegoldenrod        palegreen            paleturquoise       
 palevioletred        papayawhip           peachpuff           
 peru                 pink                 plum                
 powderblue           purple               red                 
 rosybrown            royalblue            saddlebrown         
 salmon               sandybrown           seagreen            
 seashell             sienna               skyblue             
 slateblue            slategray            slategrey           
 snow                 springgreen          steelblue           
 tan                  thistle              tomato              
 turquoise            violet               violetred           
 wheat                white                whitesmoke          
 yellow               yellowgreen]          
</chunk>

</section>

<section id="section.data.text">
  <title/Text Widgets/

<p>
<chunk><title/Sample text/
'Existing constraint programming systems offer a '#
'fixed set of inference engines implementing search '#
'strategies such as single, all, and best solution '#
'search. This is unfortunate, since new engines '#
'cannot be integrated by the user.  The paper '#
'presents first-class computation spaces as '#
'abstractions with which the user can program '#
'inference engines at a high level.  Using '#
'computation spaces, the paper covers several '#
'inference engines ranging from standard search '#
'strategies to techniques new to constraint '#
'programming, including limited discrepancy search, '#
'visual search, and saturation. Saturation is an '#
'inference method for tautology-checking used in '#
'industrial practice.  Computation spaces have '#
'shown their practicability in the constraint '#
'programming system Oz.'
</chunk>


</appendix>

