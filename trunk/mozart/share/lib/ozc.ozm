%% Code Size:
312638 % words
		skip
lbl(1)		definition(x(0) 312635 pid('Toplevel abstraction' 0 pos('' 0 0) [native] 1474) unit [g(0)])
		allocateL(238)
		putConstant('Exception.raise' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exception.raiseError' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(record x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Dictionary.member' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Dictionary.put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(63)		definition(x(2) 89 pid('`runTimePut`' 2 pos('./standard/Forward.oz' 45 3) nil 4) <P: 1> [g(0)])
		move(g(0) x(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 83)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(83)		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
		endDefinition(63)
lbl(89)		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(4) y(2) y(0) x(1))
		putConstant('Raise' x(0))
		genFastCall(<P: 1> 4)
		move(y(1) x(1))
		putConstant('RaiseError' x(0))
		genFastCall(<P: 1> 4)
		move(y(2) x(1))
		putConstant(record x(0))
		genFastCall(<P: 1> 4)
		putConstant('Wait' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('WaitOr' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsFree' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsKinded' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('IsDet' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Max' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Min' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('CondSelect' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('HasFeature' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('ByNeed' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYXY(x(6) y(7) x(8) y(8))
		moveMoveXYXY(x(7) y(9) x(9) y(10))
		moveMoveXYXY(x(10) y(11) x(11) y(12))
		move(x(12) x(1))
		putConstant('.' x(0))
		genFastCall(<P: 1> 4)
		putConstant('==' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('==' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('\\=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('=<' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('=<' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>=' x(0))
		genFastCall(<P: 1> 4)
		putConstant('>' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('>' x(0))
		genFastCall(<P: 1> 4)
		move(y(11) x(1))
		putConstant(hasFeature x(0))
		genFastCall(<P: 1> 4)
		move(y(12) x(1))
		putConstant(byNeed x(0))
		genFastCall(<P: 1> 4)
		putConstant('Future' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('!!' x(0))
		genFastCall(<P: 1> 4)
		putRecord(value ['.' '<' '=' '=<' '==' '>' '>=' '\\=' byNeed condSelect hasFeature isDet isFree isKinded max min status type 'wait' waitOr] y(13))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setValue(y(12))
		setValue(y(10))
		setValue(y(11))
		setValue(y(7))
		setValue(y(5))
		setValue(y(6))
		setValue(y(9))
		setValue(y(8))
		setVariable(x(8))
		setVariable(x(9))
		setValue(y(3))
		setValue(y(4))
		putConstant('=<' x(10))
		putConstant(3 x(11))
		callBI(builtin [x(10) x(11)]#[x(12)])
		unify(x(12) x(3))
		putConstant('<' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(11)])
		unify(x(11) x(1))
		putConstant('>=' x(3))
		putConstant(3 x(10))
		callBI(builtin [x(3) x(10)]#[x(1)])
		unify(x(1) x(6))
		putConstant('>' x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(1)])
		unify(x(1) x(5))
		putConstant('==' x(3))
		putConstant(3 x(5))
		callBI(builtin [x(3) x(5)]#[x(1)])
		unify(x(1) x(4))
		putConstant('=' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		putConstant('\\=' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(7))
		putConstant('.' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('Value.status' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(8))
		putConstant('Value.type' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		unify(x(0) x(9))
		putConstant('IsLiteral' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putRecord(literal [is] y(14))
		setValue(x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('IsUnit' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putRecord('unit' [is 'unit'] y(15))
		setValue(x(1))
		setConstant(unit)
		putConstant('IsLock' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('NewLock' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putRecord('lock' [is new] y(16))
		setValue(x(4))
		setValue(x(5))
		putConstant('IsCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('NewCell' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Exchange' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Assign' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Access' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putRecord(cell [access assign exchange is new] y(17))
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
		setValue(x(6))
		setValue(x(7))
		putConstant('IsPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('NewPort' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Send' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putRecord(port [is new send] y(18))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('IsAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('AtomToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putRecord(atom [is toString] y(19))
		setValue(x(15))
		setValue(x(16))
		putConstant('IsName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putConstant('NewName' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		putRecord(name [is new] y(20))
		setValue(x(17))
		setValue(x(18))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('IsBool' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(19)])
		putConstant('Not' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(20)])
		putConstant('And' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		putConstant('Or' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(22)])
		putRecord(bool [and 'false' is 'not' 'or' 'true'] y(21))
		setValue(x(21))
		setConstant(false)
		setValue(x(19))
		setValue(x(20))
		setValue(x(22))
		setConstant(true)
		putConstant('IsString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(23)])
		putConstant('StringToAtom' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(24)])
		putConstant('StringToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(25)])
		putConstant('StringToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(26)])
lbl(870)	definition(x(2) 925 pid('Token' 4 pos('./standard/String.oz' 44 3) nil 6) <P: 2> nil)
		match(x(0) ht(910 [onScalar(nil 879) onRecord('|' 2 886)]))
lbl(879)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(886)	getVarVar(x(0) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 900)
		getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(900)	getListValVar(x(2) x(0) x(2))
		move(x(4) x(0))
		genFastCall(<P: 2> 9)
lbl(910)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(50)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(870)
lbl(925)	definition(x(3) 1002 pid('Tokens' 5 pos('./standard/String.oz' 53 3) nil 7) <P: 3> nil)
		match(x(0) ht(987 [onScalar(nil 934) onRecord('|' 2 952)]))
lbl(934)	getLiteral(nil x(3))
		testLiteral(x(2) nil 945)
lbl(941)	getLiteral(nil x(4))
		return
lbl(945)	getList(x(4))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(952)	getVarVar(x(0) x(5))
		testBI('==' [x(0) x(1)]#[x(6)] 977)
		getLiteral(nil x(3))
		getListValVar(x(4) x(2) x(4))
		createVariable(x(2))
		move(x(5) x(0))
		move(x(2) x(3))
		genFastCall(<P: 3> 11)
lbl(977)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 3> 11)
lbl(987)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(62)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(925)
lbl(1002)	definition(x(3) 1047 pid('StringIsAtom' 2 pos('./standard/String.oz' 65 3) nil 3) <P: 4> nil)
		match(x(0) ht(1032 [onScalar(nil 1011) onRecord('|' 2 1015)]))
lbl(1011)	getLiteral(true x(1))
		return
lbl(1015)	getVarVar(x(0) x(2))
		testNumber(x(0) 0 1026)
lbl(1022)	getLiteral(false x(1))
		return
lbl(1026)	move(x(2) x(0))
		genFastCall(<P: 4> 5)
lbl(1032)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(68)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(1002)
lbl(1047)	putRecord(string [is isAtom isFloat isInt toAtom toFloat toInt token tokens] y(22))
		setValue(x(23))
		setValue(x(3))
		setVariable(y(23))
		setVariable(y(24))
		setValue(x(24))
		setValue(x(26))
		setValue(x(25))
		setValue(x(2))
		setVariable(x(27))
lbl(1069)	definition(x(3) 1116 pid('String.isInt' 2 pos('./standard/String.oz' 75 14) nil 2) <P: 5> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1102)
		move(x(0) y(0))
		createCond(1096)
lbl(1088)	lastClause
		clause
		ask
lbl(1091)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1096)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1102)	move(y(0) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1069)
lbl(1116)	unify(x(3) y(24))
lbl(1119)	definition(x(3) 1166 pid('String.isFloat' 2 pos('./standard/String.oz' 81 14) nil 2) <P: 6> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(1152)
		move(x(0) y(0))
		createCond(1146)
lbl(1138)	lastClause
		clause
		ask
lbl(1141)	getLiteral(false y(1))
		deAllocateL2
		return
lbl(1146)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(1152)	move(y(0) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		getLiteral(true y(1))
		popEx
		deAllocateL2
		return
		endDefinition(1119)
lbl(1166)	unify(x(3) y(23))
lbl(1169)	definition(x(3) 1191 pid('String.tokens' 3 pos('./standard/String.oz' 88 14) nil 6) <P: 7> nil)
		createVariable(x(5))
		move(x(2) x(4))
		move(x(5) x(2))
		move(x(5) x(3))
		genFastCall(<P: 3> 11)
		endDefinition(1169)
lbl(1191)	unify(x(3) x(27))
		putConstant('IsChar' x(3))
		putConstant(2 x(27))
		callBI(builtin [x(3) x(27)]#[x(28)])
		putRecord(char [is isAlNum isAlpha isCntrl isDigit isGraph isLower isPrint isPunct isSpace isUpper isXDigit toAtom toLower toUpper type] y(25))
		setValue(x(28))
		setVariable(x(3))
		setVariable(x(27))
		setVariable(x(29))
		setVariable(x(30))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(x(33))
		setVariable(x(34))
		setVariable(x(35))
		setVariable(x(36))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setVariable(x(40))
		setVariable(x(41))
		putConstant('Char.isAlpha' x(42))
		putConstant(2 x(43))
		callBI(builtin [x(42) x(43)]#[x(44)])
		unify(x(44) x(27))
		putConstant('Char.isUpper' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(36))
		putConstant('Char.isLower' x(27))
		putConstant(2 x(42))
		callBI(builtin [x(27) x(42)]#[x(43)])
		unify(x(43) x(32))
		putConstant('Char.isDigit' x(27))
		putConstant(2 x(32))
		callBI(builtin [x(27) x(32)]#[x(42)])
		unify(x(42) x(30))
		putConstant('Char.isXDigit' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(37))
		putConstant('Char.isAlNum' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(3))
		putConstant('Char.isSpace' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(35))
		putConstant('Char.isGraph' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(32)])
		unify(x(32) x(31))
		putConstant('Char.isPrint' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(33))
		putConstant('Char.isPunct' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(34))
		putConstant('Char.isCntrl' x(27))
		putConstant(2 x(30))
		callBI(builtin [x(27) x(30)]#[x(31)])
		unify(x(31) x(29))
		putConstant('Char.toUpper' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(40))
		putConstant('Char.toLower' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(39))
		putConstant('Char.toAtom' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(38))
		putConstant('Char.type' x(27))
		putConstant(2 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		unify(x(30) x(41))
		putConstant('div' x(27))
		putConstant(3 x(29))
		callBI(builtin [x(27) x(29)]#[x(30)])
		moveMoveXYXY(x(0) y(26) x(1) y(27))
		moveMoveXYXY(x(4) y(28) x(5) y(29))
		moveMoveXYXY(x(6) y(30) x(7) y(31))
		moveMoveXYXY(x(8) y(32) x(10) y(33))
		moveMoveXYXY(x(11) y(34) x(12) y(35))
		moveMoveXYXY(x(13) y(36) x(14) y(37))
		moveMoveXYXY(x(15) y(38) x(16) y(39))
		moveMoveXYXY(x(17) y(40) x(18) y(41))
		moveMoveXYXY(x(19) y(42) x(21) y(43))
		moveMoveXYXY(x(22) y(44) x(20) y(45))
		moveMoveXYXY(x(23) y(46) x(24) y(47))
		moveMoveXYXY(x(25) y(48) x(26) y(49))
		moveMoveXYXY(x(28) y(50) x(9) y(51))
		moveMoveXYXY(x(36) y(52) x(3) y(53))
		moveMoveXYXY(x(39) y(54) x(2) y(55))
		move(x(30) x(1))
		putConstant('div' x(0))
		genFastCall(<P: 1> 4)
		putConstant('mod' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('mod' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('IntToFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IntToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(1554)	definition(x(2) 1572 pid('IsNat' 2 pos('./standard/Int.oz' 44 0) nil 4) <P: 8> nil)
		putConstant(0 x(2))
		callBI('=<' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(1554)
lbl(1572)	definition(x(3) 1596 pid('IsOdd' 2 pos('./standard/Int.oz' 45 0) nil 4) <P: 9> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(1 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1572)
lbl(1596)	definition(x(5) 1620 pid('IsEven' 2 pos('./standard/Int.oz' 46 0) nil 4) <P: 10> nil)
		putConstant(2 x(2))
		callBI('mod' [x(0) x(2)]#[x(3)])
		putConstant(0 x(0))
		callBI('==' [x(3) x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(1596)
lbl(1620)	putRecord(int ['div' is isEven isNat isOdd 'mod' toFloat toString] y(56))
		setVariable(x(6))
		setValue(x(0))
		setValue(x(5))
		setValue(x(2))
		setValue(x(3))
		setVariable(x(7))
		setValue(x(1))
		setValue(x(4))
		putConstant('div' x(8))
		putConstant(3 x(9))
		callBI(builtin [x(8) x(9)]#[x(10)])
		unify(x(10) x(6))
		putConstant('mod' x(6))
		putConstant(3 x(8))
		callBI(builtin [x(6) x(8)]#[x(9)])
		unify(x(9) x(7))
		putConstant('/' x(6))
		putConstant(3 x(7))
		callBI(builtin [x(6) x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(57) x(2) y(58))
		moveMoveXYXY(x(3) y(59) x(5) y(60))
		moveMoveXYXY(x(1) y(61) x(4) y(62))
		move(x(8) x(1))
		putConstant('/' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsFloat' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Exp' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('Log' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
		putConstant('Sqrt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
		putConstant('Ceil' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('Floor' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Sin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Cos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
		putConstant('Tan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(10)])
		putConstant('Asin' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Acos' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		putConstant('Atan' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putConstant('Atan2' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(14)])
		putConstant('Round' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(15)])
		putConstant('FloatToInt' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(16)])
		putConstant('FloatToString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(17)])
		putRecord(float ['/' acos asin atan atan2 ceil cos exp floor is log round sin sqrt tan toInt toString] y(63))
		setVariable(x(2))
		setValue(x(12))
		setValue(x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(6))
		setValue(x(9))
		setValue(x(1))
		setValue(x(7))
		setValue(x(0))
		setValue(x(4))
		setValue(x(15))
		setValue(x(8))
		setValue(x(5))
		setValue(x(10))
		setValue(x(16))
		setValue(x(17))
		putConstant('/' x(3))
		putConstant(3 x(18))
		callBI(builtin [x(3) x(18)]#[x(19)])
		unify(x(19) x(2))
		putConstant('+' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(18)])
		moveMoveXYXY(x(0) y(64) x(1) y(65))
		moveMoveXYXY(x(4) y(66) x(5) y(67))
		moveMoveXYXY(x(6) y(68) x(7) y(69))
		moveMoveXYXY(x(15) y(70) x(8) y(71))
		moveMoveXYXY(x(9) y(72) x(10) y(73))
		moveMoveXYXY(x(11) y(74) x(12) y(75))
		moveMoveXYXY(x(13) y(76) x(14) y(77))
		moveMoveXYXY(x(16) y(78) x(17) y(79))
		move(x(18) x(1))
		putConstant('+' x(0))
		genFastCall(<P: 1> 4)
		putConstant('-' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('-' x(0))
		genFastCall(<P: 1> 4)
		putConstant('*' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('*' x(0))
		genFastCall(<P: 1> 4)
		putConstant('~' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('~' x(0))
		genFastCall(<P: 1> 4)
		putConstant('IsNumber' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
		putConstant('Abs' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(fPow x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(2021)	definition(x(2) 2080 pid('IntPow' 4 pos('./standard/Number.oz' 47 3) nil 7) <P: 11> nil)
		testNumber(x(1) 0 2035)
		unify(x(3) x(2))
		return
lbl(2035)	putConstant(2 x(4))
		callBI('mod' [x(1) x(4)]#[x(5)])
		testNumber(x(5) 0 2063)
		callBI('*' [x(0) x(0)]#[x(4)])
		putConstant(2 x(5))
		callBI('div' [x(1) x(5)]#[x(6)])
		move(x(4) x(0))
		move(x(6) x(1))
		genFastCall(<P: 11> 9)
lbl(2063)	inlineMinus1(x(1) x(4))
		callBI('*' [x(2) x(0)]#[x(5)])
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<P: 11> 9)
		endDefinition(2021)
lbl(2080)	definition(x(2) 2175 pid('Pow' 3 pos('./standard/Number.oz' 54 3) nil 5) <P: 12> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('IsInt' [x(0)]#[x(3)] 2129)
lbl(2099)	testBI('IsInt' [x(1)]#[x(3)] 2129)
lbl(2103)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2121)
		move(y(2) x(3))
		putConstant(1 x(2))
		deAllocateL3
		genFastCall(<P: 11> 9)
lbl(2121)	getNumber(0 y(1))
		getNumber(1 y(2))
		deAllocateL3
		return
lbl(2129)	move(y(0) x(0))
		testBI('IsFloat' [x(0)]#[x(1)] 2162)
lbl(2136)	move(y(1) x(1))
		testBI('IsFloat' [x(1)]#[x(2)] 2151)
lbl(2143)	callBI(fPow [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL3
		return
lbl(2151)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(2162)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2080)
lbl(2175)	putRecord(number ['*' '+' '-' abs is pow '~'] y(80))
		setVariable(x(3))
		setVariable(x(4))
		setVariable(x(5))
		setValue(x(1))
		setValue(x(0))
		setValue(x(2))
		setVariable(x(6))
		putConstant('+' x(7))
		putConstant(3 x(8))
		callBI(builtin [x(7) x(8)]#[x(9)])
		unify(x(9) x(4))
		putConstant('-' x(4))
		putConstant(3 x(7))
		callBI(builtin [x(4) x(7)]#[x(8)])
		unify(x(8) x(5))
		putConstant('*' x(4))
		putConstant(3 x(5))
		callBI(builtin [x(4) x(5)]#[x(7)])
		unify(x(7) x(3))
		putConstant('~' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		unify(x(5) x(6))
		putConstant('IsTuple' x(3))
		putConstant(2 x(4))
		callBI(builtin [x(3) x(4)]#[x(5)])
		putConstant('MakeTuple' x(3))
		putConstant(3 x(4))
		callBI(builtin [x(3) x(4)]#[x(7)])
lbl(2259)	definition(x(3) 2294 pid('Copy' 4 pos('./standard/Tuple.oz' 42 3) nil 6) <P: 13> nil)
		testNumber(x(0) 0 2270)
		return
lbl(2270)	inlinePlus(x(0) x(1) x(4))
		callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(2) x(0)]#[x(4)])
		unify(x(4) x(5))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 13> 9)
		endDefinition(2259)
lbl(2294)	createVariable(y(81))
		createVariable(y(82))
		createVariable(y(83))
lbl(2300)	definition(x(3) 2409 pid('Append' 3 pos('./standard/Tuple.oz' 45 3) nil 5) <P: 14> [y(81) y(82) y(83)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testNumber(y(3) 0 2339)
		unify(y(2) y(1))
		deAllocateL6
		return
lbl(2339)	testNumber(y(4) 0 2355)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		genCall(gci(g(1) false '' true 3) 0)
lbl(2355)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(5) x(3))
		callBI('MakeTuple' [x(3) x(2)]#[x(4)])
		unify(x(4) y(2))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		putConstant(0 x(1))
		genFastCall(<P: 13> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 13> 9)
		endDefinition(2300)
lbl(2409)	createVariable(y(84))
lbl(2411)	definition(x(4) 2478 pid('TupleToArray' 3 pos('./standard/Tuple.oz' 55 3) nil 6) <P: 15> [y(84)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 2475)
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) put x(4) cache)
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		move(y(0) x(1))
		move(x(5) x(2))
		call(x(4) 3)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 15> 7)
lbl(2475)	return
		endDefinition(2411)
lbl(2478)	putRecord(tuple [append is make toArray] y(85))
		setValue(x(3))
		setValue(x(5))
		setValue(x(7))
		setVariable(x(4))
lbl(2490)	definition(x(8) 2550 pid('Tuple.toArray' 2 pos('./standard/Tuple.oz' 64 12) nil 5) <P: 16> [y(81) y(84)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) new x(4) cache)
		move(y(2) x(1))
		putConstant(1 x(0))
		putConstant(unit x(2))
		createVariableMove(y(3) x(3))
		call(x(4) 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 15> 6)
		unify(y(3) y(1))
		deAllocateL4
		return
		endDefinition(2490)
lbl(2550)	unify(x(8) x(4))
lbl(2553)	definition(x(4) 2599 pid('Match' 3 pos('./standard/Tuple.oz' 78 3) nil 5) <P: 17> nil)
		match(x(0) ht(2584 [onScalar(nil 2562) onRecord('|' 2 2563)]))
lbl(2562)	return
lbl(2563)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 17> 7)
lbl(2584)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(81)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2553)
lbl(2599)	definition(x(4) 2625 pid('DoTuple' 4 pos('./standard/Tuple.oz' 84 3) nil 5) <P: 18> nil)
		callBI('MakeTuple' [x(0) x(2)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 17> 7)
		endDefinition(2599)
lbl(2625)	moveMoveXYXY(x(0) y(86) x(2) y(87))
		moveMoveXYXY(x(1) y(88) x(7) y(89))
		moveMoveXYXY(x(5) y(90) x(6) y(91))
		move(x(3) y(92))
		move(x(4) x(1))
		putConstant(tuple x(0))
		genFastCall(<P: 1> 4)
lbl(2652)	definition(x(0) 2687 pid('MakeList' 2 pos('./standard/List.oz' 35 0) nil 4) <P: 19> nil)
		putConstant(0 x(2))
		testLT(x(2) x(0) x(3) 2681)
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		genFastCall(<P: 19> 5)
lbl(2681)	getLiteral(nil x(1))
		return
		endDefinition(2652)
lbl(2687)	definition(x(1) 2715 pid('IsList' 2 pos('./standard/List.oz' 39 0) nil 4) <P: 20> nil)
		testList(x(0) 2703)
lbl(2696)	getVoid(1)
		getVariable(x(0))
		genFastCall(<P: 20> 5)
lbl(2703)	putConstant(nil x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(2687)
lbl(2715)	definition(x(2) 2753 pid('Append' 3 pos('./standard/List.oz' 43 0) nil 4) <P: 21> nil)
		match(x(0) ht(2738 [onScalar(nil 2724) onRecord('|' 2 2728)]))
lbl(2724)	unify(x(2) x(1))
		return
lbl(2728)	getVarVar(x(3) x(0))
		getListValVar(x(2) x(3) x(2))
		genFastCall(<P: 21> 7)
lbl(2738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(46)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2715)
lbl(2753)	definition(x(3) 2798 pid('Member' 3 pos('./standard/List.oz' 49 0) nil 5) <P: 22> nil)
		match(x(1) ht(2783 [onScalar(nil 2762) onRecord('|' 2 2766)]))
lbl(2762)	getLiteral(false x(2))
		return
lbl(2766)	getVarVar(x(1) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 2777)
		getLiteral(true x(2))
		return
lbl(2777)	move(x(3) x(1))
		genFastCall(<P: 22> 7)
lbl(2783)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(52)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2753)
lbl(2798)	definition(x(4) 2839 pid('DoLength' 3 pos('./standard/List.oz' 56 3) nil 4) <P: 23> nil)
		match(x(0) ht(2824 [onScalar(nil 2807) onRecord('|' 2 2811)]))
lbl(2807)	unify(x(2) x(1))
		return
lbl(2811)	getVoid(1)
		getVariable(x(0))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 23> 7)
lbl(2824)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(59)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2798)
lbl(2839)	definition(x(4) 2856 pid('Length' 2 pos('./standard/List.oz' 62 3) nil 3) <P: 24> nil)
		move(x(1) x(2))
		putConstant(0 x(1))
		genFastCall(<P: 23> 7)
		endDefinition(2839)
lbl(2856)	definition(x(5) 2890 pid('DoNth' 3 pos('./standard/List.oz' 66 3) nil 5) <P: 25> nil)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testNumber(x(1) 1 2876)
lbl(2872)	unify(x(2) x(0))
		return
lbl(2876)	inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 25> 7)
		endDefinition(2856)
lbl(2890)	definition(x(5) 2920 pid('Nth' 3 pos('./standard/List.oz' 70 3) nil 5) <P: 26> nil)
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 2907)
		genFastCall(<P: 25> 7)
lbl(2907)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(2890)
lbl(2920)	definition(x(6) 2963 pid('DoReverse' 3 pos('./standard/List.oz' 74 3) nil 5) <P: 27> nil)
		match(x(0) ht(2948 [onScalar(nil 2929) onRecord('|' 2 2933)]))
lbl(2929)	unify(x(2) x(1))
		return
lbl(2933)	getVarVar(x(3) x(0))
		putList(x(4))
		setValue(x(3))
		setValue(x(1))
		move(x(4) x(1))
		genFastCall(<P: 27> 7)
lbl(2948)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2920)
lbl(2963)	definition(x(6) 2980 pid('Reverse' 2 pos('./standard/List.oz' 80 3) nil 3) <P: 28> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 27> 7)
		endDefinition(2963)
lbl(2980)	definition(x(7) 3039 pid('Map' 3 pos('./standard/List.oz' 83 0) nil 3) <P: 29> nil)
		match(x(0) ht(3024 [onScalar(nil 2989) onRecord('|' 2 2993)]))
lbl(2989)	getLiteral(nil x(2))
		return
lbl(2993)	allocateL3
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(x(2) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 29> 7)
lbl(3024)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(2980)
lbl(3039)	definition(x(8) 3102 pid('FoldL' 4 pos('./standard/List.oz' 89 0) nil 5) <P: 30> nil)
		match(x(0) ht(3087 [onScalar(nil 3048) onRecord('|' 2 3052)]))
lbl(3048)	unify(x(3) x(2))
		return
lbl(3052)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
lbl(3087)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(92)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3039)
lbl(3102)	definition(x(9) 3166 pid('FoldLTail' 4 pos('./standard/List.oz' 95 0) nil 4) <P: 31> nil)
		match(x(0) ht(3151 [onScalar(nil 3111) onRecord('|' 2 3115)]))
lbl(3111)	unify(x(3) x(2))
		return
lbl(3115)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(0) x(1))
		move(x(2) x(0))
		createVariableMove(y(3) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 31> 9)
lbl(3151)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3102)
lbl(3166)	definition(x(10) 3223 pid('FoldR' 4 pos('./standard/List.oz' 101 0) nil 4) <P: 32> nil)
		match(x(0) ht(3208 [onScalar(nil 3175) onRecord('|' 2 3179)]))
lbl(3175)	unify(x(3) x(2))
		return
lbl(3179)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(104)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3166)
lbl(3223)	definition(x(11) 3287 pid('FoldRTail' 4 pos('./standard/List.oz' 107 0) nil 5) <P: 33> nil)
		match(x(0) ht(3272 [onScalar(nil 3232) onRecord('|' 2 3236)]))
lbl(3232)	unify(x(3) x(2))
		return
lbl(3236)	allocateL4
		getVoid(1)
		getVariable(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 33> 8)
		moveMoveYXYX(y(1) x(3) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(2) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(3272)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3223)
lbl(3287)	definition(x(12) 3331 pid('ForAll' 2 pos('./standard/List.oz' 113 0) nil 2) <P: 34> nil)
		match(x(0) ht(3316 [onScalar(nil 3296) onRecord('|' 2 3297)]))
lbl(3296)	return
lbl(3297)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(3316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(116)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3287)
lbl(3331)	definition(x(13) 3406 pid('All' 3 pos('./standard/List.oz' 119 0) nil 3) <P: 35> nil)
		match(x(0) ht(3391 [onScalar(nil 3340) onRecord('|' 2 3344)]))
lbl(3340)	getLiteral(true x(2))
		return
lbl(3344)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3375 3380)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 35> 7)
lbl(3375)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3380)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3391)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(122)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3331)
lbl(3406)	definition(x(14) 3481 pid('Some' 3 pos('./standard/List.oz' 125 0) nil 3) <P: 36> nil)
		match(x(0) ht(3466 [onScalar(nil 3415) onRecord('|' 2 3419)]))
lbl(3415)	getLiteral(false x(2))
		return
lbl(3419)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3443 3455)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(3443)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 36> 7)
lbl(3455)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(127)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3466)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3406)
lbl(3481)	definition(x(15) 3526 pid('ForAllTail' 2 pos('./standard/List.oz' 131 0) nil 2) <P: 37> nil)
		match(x(0) ht(3511 [onScalar(nil 3490) onRecord('|' 2 3491)]))
lbl(3490)	return
lbl(3491)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(x(1) y(1))
		call(y(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 37> 5)
lbl(3511)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3481)
lbl(3526)	definition(x(16) 3602 pid('AllTail' 3 pos('./standard/List.oz' 137 0) nil 3) <P: 38> nil)
		match(x(0) ht(3587 [onScalar(nil 3535) onRecord('|' 2 3539)]))
lbl(3535)	getLiteral(true x(2))
		return
lbl(3539)	allocateL4
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 3571 3576)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 38> 7)
lbl(3571)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(3576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3587)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(140)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3526)
lbl(3602)	definition(x(17) 3689 pid('Filter' 3 pos('./standard/List.oz' 143 0) nil 3) <P: 39> nil)
		match(x(0) ht(3674 [onScalar(nil 3611) onRecord('|' 2 3615)]))
lbl(3611)	getLiteral(nil x(2))
		return
lbl(3615)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 3651 3663)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3651)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 39> 7)
lbl(3663)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(3602)
lbl(3689)	definition(x(18) 3786 pid('DoFlatten' 4 pos('./standard/List.oz' 150 3) nil 4) <P: 40> nil)
		match(x(0) ht(3780 [onScalar(nil 3698) onRecord('|' 2 3705)]))
lbl(3698)	unify(x(1) x(2))
		getLiteral(true x(3))
		return
lbl(3705)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(7) 3752 3769)
		unify(y(5) y(2))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3752)	getList(y(2))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL8
		genFastCall(<P: 40> 9)
lbl(3769)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(153)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3780)	getLiteral(false x(3))
		return
		endDefinition(3689)
lbl(3786)	definition(x(18) 3837 pid('Flatten' 2 pos('./standard/List.oz' 162 3) nil 4) <P: 41> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 40> 8)
		testBool(y(3) 3819 3824)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(3819)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(3824)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(163)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3786)
lbl(3837)	definition(x(19) 3944 pid('DoMerge' 5 pos('./standard/List.oz' 169 3) nil 5) <P: 42> nil)
		match(x(2) ht(3929 [onScalar(nil 3846) onRecord('|' 2 3853)]))
lbl(3846)	getList(x(4))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(3853)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
		testBool(y(6) 3899 3918)
		getList(y(5))
		unifyValVar(y(2) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3899)	getList(y(5))
		unifyValVar(y(0) x(4))
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<P: 42> 11)
lbl(3918)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(172)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(3929)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(3837)
lbl(3944)	definition(x(19) 4379 pid('DoSort' 5 pos('./standard/List.oz' 177 3) nil 7) <P: 43> nil)
		match(x(0) ht(4297 [onScalar(0 3953) onScalar(1 3960) onScalar(2 3973) onScalar(3 4041)]))
lbl(3953)	getLiteral(nil x(2))
		getLiteral(nil x(4))
		return
lbl(3960)	getList(x(1))
		unifyVariable(x(0))
		unifyValue(x(2))
		getList(x(4))
		unifyValue(x(0))
		unifyLiteral(nil)
		return
lbl(3973)	allocateL4
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyValue(x(2))
		moveMoveXYYX(x(4) y(2) y(0) x(0))
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 4017 4030)
		getList(y(2))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4017)	getList(y(2))
		unifyValVar(y(1) x(0))
		getList(x(0))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(4030)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4041)	allocateL6
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(2))
		unifyValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4183 4286)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4112 4172)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4112)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4144 4161)
		getList(y(4))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4144)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4161)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(186)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4172)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(185)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4183)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4215 4275)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4215)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 4247 4264)
		getList(y(4))
		unifyValVar(y(1) x(0))
		getListValVar(x(0) y(2) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4247)	getList(y(4))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(1) x(1))
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL6
		return
lbl(4264)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(190)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4286)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4297)	allocateL8
		putConstant(2 x(5))
		callBI('div' [x(0) x(5)]#[x(6)])
		putList(x(5))
		setVariable(y(0))
		setVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYYX(x(6) y(6) y(6) x(0))
		move(x(5) x(4))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		inlineMinus(x(0) x(1) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(7) x(1) y(3) x(2))
		move(y(4) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 43> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL8
		genFastCall(<P: 42> 11)
		endDefinition(3944)
lbl(4379)	definition(x(19) 4419 pid('Sort' 3 pos('./standard/List.oz' 203 3) nil 5) <P: 44> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<P: 43> 11)
		endDefinition(4379)
lbl(4419)	definition(x(20) 4465 pid('Merge' 4 pos('./standard/List.oz' 206 3) nil 6) <P: 45> nil)
		match(x(0) ht(4450 [onScalar(nil 4428) onRecord('|' 2 4432)]))
lbl(4428)	unify(x(3) x(1))
		return
lbl(4432)	getVarVar(x(0) x(5))
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 42> 11)
lbl(4450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4419)
lbl(4465)	definition(x(21) 4515 pid('ListTail' 3 pos('./standard/List.oz' 217 3) nil 5) <P: 46> nil)
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 4494)
		getList(x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 46> 7)
lbl(4494)	testNumber(x(0) 0 4502)
		unify(x(2) x(1))
		return
lbl(4502)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(218)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4465)
lbl(4515)	definition(x(22) 4564 pid('Subtract' 3 pos('./standard/List.oz' 221 3) nil 5) <P: 47> nil)
		match(x(0) ht(4549 [onScalar(nil 4524) onRecord('|' 2 4528)]))
lbl(4524)	getLiteral(nil x(2))
		return
lbl(4528)	getVarVar(x(0) x(3))
		testBI('\\=' [x(0) x(1)]#[x(4)] 4545)
		getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 47> 7)
lbl(4545)	unify(x(2) x(3))
		return
lbl(4549)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(224)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4515)
lbl(4564)	definition(x(23) 4598 pid('Last' 3 pos('./standard/List.oz' 227 3) nil 3) <P: 48> nil)
		match(x(1) ht(4583 [onScalar(nil 4573) onRecord('|' 2 4577)]))
lbl(4573)	unify(x(2) x(0))
		return
lbl(4577)	getVarVar(x(0) x(1))
		genFastCall(<P: 48> 7)
lbl(4583)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(230)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4564)
lbl(4598)	definition(x(23) 4651 pid('Find' 4 pos('./standard/List.oz' 234 6) nil 6) <P: 49> nil)
		match(x(2) ht(4636 [onScalar(nil 4607) onRecord('|' 2 4611)]))
lbl(4607)	getLiteral(false x(3))
		return
lbl(4611)	getVarVar(x(2) x(4))
		testBI('==' [x(0) x(2)]#[x(5)] 4630)
		move(x(1) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		genFastCall(<P: 50> 7)
lbl(4630)	move(x(4) x(2))
		genFastCall(<P: 49> 9)
lbl(4636)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(238)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(4598)
lbl(4651)	definition(x(23) 4694 pid('Sub' 3 pos('./standard/List.oz' 241 6) nil 5) <P: 50> nil)
		match(x(0) ht(4679 [onScalar(nil 4660) onRecord('|' 2 4664)]))
lbl(4660)	getLiteral(true x(2))
		return
lbl(4664)	getVarVar(x(0) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 49> 9)
lbl(4679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4651)
lbl(4694)	definition(x(24) 4753 pid('Take' 3 pos('./standard/List.oz' 249 3) nil 6) <P: 51> nil)
		match(x(0) ht(4738 [onScalar(nil 4703) onRecord('|' 2 4707)]))
lbl(4703)	getLiteral(nil x(2))
		return
lbl(4707)	getVarVar(x(3) x(0))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4731)
		getListValVar(x(2) x(3) x(2))
		inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<P: 51> 7)
lbl(4731)	getNumber(0 x(1))
		getLiteral(nil x(2))
		return
lbl(4738)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4694)
lbl(4753)	definition(x(25) 4812 pid('Drop' 3 pos('./standard/List.oz' 255 3) nil 6) <P: 52> nil)
		match(x(0) ht(4797 [onScalar(nil 4762) onRecord('|' 2 4766)]))
lbl(4762)	getLiteral(nil x(2))
		return
lbl(4766)	getVoid(1)
		getVariable(x(3))
		putConstant(0 x(4))
		testLT(x(4) x(1) x(5) 4790)
		inlineMinus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 52> 7)
lbl(4790)	getNumber(0 x(1))
		unify(x(0) x(2))
		return
lbl(4797)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(258)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4753)
lbl(4812)	definition(x(26) 4880 pid('TakeDrop' 4 pos('./standard/List.oz' 261 3) nil 8) <P: 53> nil)
		match(x(0) ht(4865 [onScalar(nil 4821) onRecord('|' 2 4828)]))
lbl(4821)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4828)	getVarVar(x(4) x(5))
		putConstant(0 x(6))
		testLT(x(6) x(1) x(7) 4855)
		getListValVar(x(2) x(4) x(2))
		inlineMinus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 53> 9)
lbl(4855)	getNumber(0 x(1))
		getLiteral(nil x(2))
		unify(x(3) x(0))
		return
lbl(4865)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(267)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4812)
lbl(4880)	definition(x(27) 4980 pid('Partition' 4 pos('./standard/List.oz' 273 3) nil 4) <P: 54> nil)
		match(x(0) ht(4965 [onScalar(nil 4889) onRecord('|' 2 4896)]))
lbl(4889)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(4896)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		call(y(2) 2)
		testBool(y(5) 4937 4954)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4937)	getList(y(4))
		unifyValVar(y(0) x(3))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL6
		genFastCall(<P: 54> 9)
lbl(4954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(276)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(4965)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(279)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4880)
lbl(4980)	definition(x(28) 5060 pid('TakeWhile' 3 pos('./standard/List.oz' 282 3) nil 3) <P: 55> nil)
		match(x(0) ht(5045 [onScalar(nil 4989) onRecord('|' 2 4993)]))
lbl(4989)	getLiteral(nil x(2))
		return
lbl(4993)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5029 5034)
		getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<P: 55> 7)
lbl(5029)	getLiteral(nil y(3))
		deAllocateL5
		return
lbl(5034)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5045)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(285)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(4980)
lbl(5060)	definition(x(29) 5141 pid('DropWhile' 3 pos('./standard/List.oz' 288 3) nil 4) <P: 56> nil)
		match(x(0) ht(5126 [onScalar(nil 5069) onRecord('|' 2 5073)]))
lbl(5069)	getLiteral(nil x(2))
		return
lbl(5073)	allocateL5
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 5110 5115)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 56> 7)
lbl(5110)	unify(y(3) y(1))
		deAllocateL5
		return
lbl(5115)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(290)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5126)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(291)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5060)
lbl(5141)	definition(x(30) 5235 pid('TakeDropWhile' 4 pos('./standard/List.oz' 294 3) nil 4) <P: 57> nil)
		match(x(0) ht(5220 [onScalar(nil 5150) onRecord('|' 2 5157)]))
lbl(5150)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(5157)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(3) 2)
		testBool(y(6) 5201 5209)
		getList(y(4))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(5) x(3))
		deAllocateL7
		genFastCall(<P: 57> 9)
lbl(5201)	getLiteral(nil y(4))
		unify(y(5) y(2))
		deAllocateL7
		return
lbl(5209)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5220)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5141)
lbl(5235)	definition(x(31) 5308 pid('MapInd' 4 pos('./standard/List.oz' 306 3) nil 5) <P: 58> nil)
		match(x(0) ht(5293 [onScalar(nil 5244) onRecord('|' 2 5248)]))
lbl(5244)	getLiteral(nil x(3))
		return
lbl(5248)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(x(4) x(1))
		move(x(3) x(2))
		call(y(3) 3)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<P: 58> 9)
lbl(5293)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(309)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5235)
lbl(5308)	definition(x(31) 5383 pid('FoldLInd' 5 pos('./standard/List.oz' 312 3) nil 6) <P: 59> nil)
		match(x(0) ht(5368 [onScalar(nil 5317) onRecord('|' 2 5321)]))
lbl(5317)	unify(x(4) x(3))
		return
lbl(5321)	allocateL5
		getVarVar(x(5) y(0))
		inlinePlus1(x(1) x(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(0) y(3))
		move(x(1) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 59> 11)
lbl(5368)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(315)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5308)
lbl(5383)	definition(x(31) 5452 pid('FoldRInd' 5 pos('./standard/List.oz' 318 3) nil 6) <P: 60> nil)
		match(x(0) ht(5437 [onScalar(nil 5392) onRecord('|' 2 5396)]))
lbl(5392)	unify(x(4) x(3))
		return
lbl(5396)	allocateL5
		getVarVar(y(0) x(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(5) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 60> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5383)
lbl(5452)	definition(x(31) 5528 pid('FoldLTailInd' 5 pos('./standard/List.oz' 324 3) nil 6) <P: 61> nil)
		match(x(0) ht(5513 [onScalar(nil 5461) onRecord('|' 2 5465)]))
lbl(5461)	unify(x(4) x(3))
		return
lbl(5465)	allocateL5
		getVoid(1)
		getVariable(y(0))
		inlinePlus1(x(1) x(5))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(x(5) y(3))
		move(x(0) x(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(3))
		call(y(1) 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 61> 11)
lbl(5513)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(327)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5452)
lbl(5528)	definition(x(31) 5603 pid('FoldRTailInd' 5 pos('./standard/List.oz' 330 3) nil 7) <P: 62> nil)
		match(x(0) ht(5588 [onScalar(nil 5537) onRecord('|' 2 5541)]))
lbl(5537)	unify(x(4) x(3))
		return
lbl(5541)	allocateL5
		getVoid(1)
		getVariable(x(5))
		inlinePlus1(x(1) x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 62> 10)
		moveMoveYXYX(y(2) x(4) y(1) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(3) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(5588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(333)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5528)
lbl(5603)	definition(x(31) 5661 pid('ForAllInd' 3 pos('./standard/List.oz' 336 3) nil 4) <P: 63> nil)
		match(x(0) ht(5646 [onScalar(nil 5612) onRecord('|' 2 5613)]))
lbl(5612)	return
lbl(5613)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(x(3) x(1))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 63> 7)
lbl(5646)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(339)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5603)
lbl(5661)	definition(x(31) 5750 pid('AllInd' 4 pos('./standard/List.oz' 342 3) nil 5) <P: 64> nil)
		match(x(0) ht(5735 [onScalar(nil 5670) onRecord('|' 2 5674)]))
lbl(5670)	getLiteral(true x(3))
		return
lbl(5674)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5719 5724)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 64> 9)
lbl(5719)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5724)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(344)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5735)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(345)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5661)
lbl(5750)	definition(x(31) 5809 pid('ForAllTailInd' 3 pos('./standard/List.oz' 348 3) nil 3) <P: 65> nil)
		match(x(0) ht(5794 [onScalar(nil 5759) onRecord('|' 2 5760)]))
lbl(5759)	return
lbl(5760)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) x(1))
		move(y(1) x(0))
		call(y(2) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 65> 7)
lbl(5794)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(351)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5750)
lbl(5809)	definition(x(31) 5900 pid('AllTailInd' 4 pos('./standard/List.oz' 354 3) nil 4) <P: 66> nil)
		match(x(0) ht(5885 [onScalar(nil 5818) onRecord('|' 2 5822)]))
lbl(5818)	getLiteral(true x(3))
		return
lbl(5822)	allocateL5
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(1))
		move(y(1) x(0))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5869 5874)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 66> 9)
lbl(5869)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(5874)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(356)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5885)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5809)
lbl(5900)	definition(x(31) 5989 pid('SomeInd' 4 pos('./standard/List.oz' 360 3) nil 5) <P: 67> nil)
		match(x(0) ht(5974 [onScalar(nil 5909) onRecord('|' 2 5913)]))
lbl(5909)	getLiteral(false x(3))
		return
lbl(5913)	allocateL5
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 5945 5963)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(5945)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<P: 67> 9)
lbl(5963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(362)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(5974)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(363)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5900)
lbl(5989)	definition(x(31) 6093 pid('FilterInd' 4 pos('./standard/List.oz' 366 3) nil 4) <P: 68> nil)
		match(x(0) ht(6078 [onScalar(nil 5998) onRecord('|' 2 6002)]))
lbl(5998)	getLiteral(nil x(3))
		return
lbl(6002)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6049 6067)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6049)	move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 68> 9)
lbl(6067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6078)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(5989)
lbl(6093)	definition(x(31) 6210 pid('PartitionInd' 5 pos('./standard/List.oz' 375 3) nil 5) <P: 69> nil)
		match(x(0) ht(6195 [onScalar(nil 6102) onRecord('|' 2 6109)]))
lbl(6102)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6109)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		call(y(3) 3)
		testBool(y(6) 6161 6184)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(5) x(4))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6161)	getList(y(5))
		unifyValVar(y(0) x(4))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL7
		genFastCall(<P: 69> 11)
lbl(6184)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6195)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(381)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6093)
lbl(6210)	definition(x(31) 6301 pid('TakeWhileInd' 4 pos('./standard/List.oz' 384 3) nil 4) <P: 70> nil)
		match(x(0) ht(6286 [onScalar(nil 6219) onRecord('|' 2 6223)]))
lbl(6219)	getLiteral(nil x(3))
		return
lbl(6223)	allocateL6
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(2) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6270 6275)
		getList(y(4))
		unifyValVar(y(0) x(3))
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL6
		genFastCall(<P: 70> 9)
lbl(6270)	getLiteral(nil y(4))
		deAllocateL6
		return
lbl(6275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(386)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6286)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(387)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6210)
lbl(6301)	definition(x(31) 6393 pid('DropWhileInd' 4 pos('./standard/List.oz' 390 3) nil 5) <P: 71> nil)
		match(x(0) ht(6378 [onScalar(nil 6310) onRecord('|' 2 6314)]))
lbl(6310)	getLiteral(nil x(3))
		return
lbl(6314)	allocateL6
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 6362 6367)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		move(y(4) x(3))
		deAllocateL6
		genFastCall(<P: 71> 9)
lbl(6362)	unify(y(4) y(1))
		deAllocateL6
		return
lbl(6367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(392)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6378)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(393)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6301)
lbl(6393)	definition(x(31) 6498 pid('TakeDropWhileInd' 5 pos('./standard/List.oz' 396 3) nil 5) <P: 72> nil)
		match(x(0) ht(6483 [onScalar(nil 6402) onRecord('|' 2 6409)]))
lbl(6402)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(6409)	allocateL8
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYYX(x(4) y(6) y(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(7) x(2))
		call(y(4) 3)
		testBool(y(7) 6464 6472)
		getList(y(5))
		unifyValVar(y(0) x(3))
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(6) x(4))
		deAllocateL8
		genFastCall(<P: 72> 11)
lbl(6464)	getLiteral(nil y(5))
		unify(y(6) y(2))
		deAllocateL8
		return
lbl(6472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(399)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6483)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(402)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6393)
lbl(6498)	definition(x(31) 6595 pid('Zip' 4 pos('./standard/List.oz' 406 3) nil 4) <P: 73> nil)
		match(x(0) ht(6580 [onScalar(nil 6507) onRecord('|' 2 6528)]))
lbl(6507)	testLiteral(x(1) nil 6515)
lbl(6511)	getLiteral(nil x(3))
		return
lbl(6515)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(407)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6528)	allocateL4
		getVarVar(x(0) y(0))
		testList(x(1) 6567)
lbl(6535)	getVarVar(x(1) y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(3) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 73> 9)
lbl(6567)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(408)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(409)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6498)
lbl(6595)	definition(x(32) 6626 pid('NumberInc' 4 pos('./standard/List.oz' 412 3) nil 5) <P: 74> nil)
		testLT(x(1) x(0) x(4) 6610)
		getLiteral(nil x(3))
		return
lbl(6610)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 74> 9)
		endDefinition(6595)
lbl(6626)	definition(x(32) 6657 pid('NumberDec' 4 pos('./standard/List.oz' 416 3) nil 5) <P: 75> nil)
		testLT(x(0) x(1) x(4) 6641)
		getLiteral(nil x(3))
		return
lbl(6641)	getListValVar(x(3) x(0) x(3))
		inlinePlus(x(0) x(2) x(4))
		move(x(4) x(0))
		genFastCall(<P: 75> 9)
		endDefinition(6626)
lbl(6657)	definition(x(32) 6703 pid('EnterArgs' 3 pos('./standard/List.oz' 421 6) nil 5) <P: 76> nil)
		match(x(0) ht(6688 [onScalar(nil 6666) onRecord('|' 2 6667)]))
lbl(6666)	return
lbl(6667)	getVarVar(x(0) x(3))
		callBI('.' [x(2) x(1)]#[x(4)])
		unify(x(4) x(0))
		inlinePlus1(x(1) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 76> 7)
lbl(6688)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(424)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6657)
lbl(6703)	definition(x(32) 6751 pid('ToTuple' 3 pos('./standard/List.oz' 427 6) nil 3) <P: 77> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		callBI('MakeTuple' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		putConstant(1 x(1))
		deAllocateL4
		genFastCall(<P: 76> 7)
		endDefinition(6703)
lbl(6751)	definition(x(33) 6822 pid('IsPrefix' 3 pos('./standard/List.oz' 433 3) nil 6) <P: 78> nil)
		match(x(0) ht(6807 [onScalar(nil 6760) onRecord('|' 2 6764)]))
lbl(6760)	getLiteral(true x(2))
		return
lbl(6764)	getVarVar(x(0) x(3))
		match(x(1) ht(6794 [onScalar(nil 6770) onRecord('|' 2 6774)]))
lbl(6770)	getLiteral(false x(2))
		return
lbl(6774)	getVarVar(x(1) x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 6790)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 78> 7)
lbl(6790)	getLiteral(false x(2))
		return
lbl(6794)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(438)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(6807)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6751)
lbl(6822)	putRecord(list [all allInd allTail allTailInd append drop dropWhile dropWhileInd filter filterInd flatten foldL foldLInd foldLTail foldLTailInd foldR foldRInd foldRTail foldRTailInd forAll forAllInd forAllTail forAllTailInd is isPrefix last length make map mapInd member merge nth number partition partitionInd reverse some someInd sort sub subtract take takeDrop takeDropWhile takeDropWhileInd takeWhile takeWhileInd toRecord toTuple withTail zip] y(93))
		setValue(x(13))
		setVariable(x(34))
		setValue(x(16))
		setVariable(x(35))
		setValue(x(2))
		setValue(x(25))
		setValue(x(29))
		setVariable(x(36))
		setValue(x(17))
		setVariable(x(37))
		setValue(x(18))
		setValue(x(8))
		setVariable(y(94))
		setValue(x(9))
		setVariable(x(38))
		setValue(x(10))
		setVariable(y(95))
		setValue(x(11))
		setVariable(x(39))
		setValue(x(12))
		setVariable(y(96))
		setValue(x(15))
		setVariable(y(97))
		setValue(x(1))
		setValue(x(33))
		setVariable(y(98))
		setValue(x(4))
		setValue(x(0))
		setValue(x(7))
		setVariable(y(99))
		setValue(x(3))
		setValue(x(20))
		setValue(x(5))
		setVariable(y(100))
		setValue(x(27))
		setVariable(x(40))
		setValue(x(6))
		setValue(x(14))
		setVariable(x(41))
		setValue(x(19))
		setValue(x(23))
		setValue(x(22))
		setValue(x(24))
		setValue(x(26))
		setValue(x(30))
		setVariable(x(42))
		setValue(x(28))
		setVariable(x(43))
		setValue(y(2))
		setValue(x(32))
		setValue(x(21))
		setValue(x(31))
lbl(6930)	definition(x(21) 6966 pid('List.last' 2 pos('./standard/List.oz' 452 4) nil 4) <P: 79> nil)
		testList(x(0) 6951)
lbl(6939)	getVarVar(x(0) x(3))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 48> 7)
lbl(6951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(453)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(6930)
lbl(6966)	unify(x(21) y(98))
lbl(6969)	definition(x(21) 6991 pid('List.number' 4 pos('./standard/List.oz' 463 4) nil 6) <P: 80> nil)
		putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 6986)
		genFastCall(<P: 74> 9)
lbl(6986)	genFastCall(<P: 75> 9)
		endDefinition(6969)
lbl(6991)	unify(x(21) y(100))
lbl(6994)	definition(x(21) 7014 pid('List.mapInd' 3 pos('./standard/List.oz' 489 4) nil 4) <P: 81> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 58> 9)
		endDefinition(6994)
lbl(7014)	unify(x(21) y(99))
lbl(7017)	definition(x(21) 7040 pid('List.foldLInd' 4 pos('./standard/List.oz' 493 4) nil 5) <P: 82> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 59> 11)
		endDefinition(7017)
lbl(7040)	unify(x(21) y(94))
lbl(7043)	definition(x(21) 7066 pid('List.foldRInd' 4 pos('./standard/List.oz' 497 4) nil 5) <P: 83> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 60> 11)
		endDefinition(7043)
lbl(7066)	unify(x(21) y(95))
lbl(7069)	definition(x(21) 7092 pid('List.foldLTailInd' 4 pos('./standard/List.oz' 501 4) nil 5) <P: 84> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 61> 11)
		endDefinition(7069)
lbl(7092)	unify(x(21) x(38))
lbl(7095)	definition(x(21) 7118 pid('List.foldRTailInd' 4 pos('./standard/List.oz' 505 4) nil 5) <P: 85> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 62> 11)
		endDefinition(7095)
lbl(7118)	unify(x(21) x(39))
lbl(7121)	definition(x(21) 7138 pid('List.forAllInd' 2 pos('./standard/List.oz' 509 4) nil 3) <P: 86> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 63> 7)
		endDefinition(7121)
lbl(7138)	unify(x(21) y(96))
lbl(7141)	definition(x(21) 7161 pid('List.allInd' 3 pos('./standard/List.oz' 513 4) nil 4) <P: 87> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 64> 9)
		endDefinition(7141)
lbl(7161)	unify(x(21) x(34))
lbl(7164)	definition(x(21) 7184 pid('List.someInd' 3 pos('./standard/List.oz' 517 4) nil 4) <P: 88> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 67> 9)
		endDefinition(7164)
lbl(7184)	unify(x(21) x(41))
lbl(7187)	definition(x(21) 7204 pid('List.forAllTailInd' 2 pos('./standard/List.oz' 521 4) nil 3) <P: 89> nil)
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 65> 7)
		endDefinition(7187)
lbl(7204)	unify(x(21) y(97))
lbl(7207)	definition(x(21) 7227 pid('List.allTailInd' 3 pos('./standard/List.oz' 525 4) nil 4) <P: 90> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 66> 9)
		endDefinition(7207)
lbl(7227)	unify(x(21) x(35))
lbl(7230)	definition(x(21) 7250 pid('List.filterInd' 3 pos('./standard/List.oz' 529 4) nil 4) <P: 91> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 68> 9)
		endDefinition(7230)
lbl(7250)	unify(x(21) x(37))
lbl(7253)	definition(x(21) 7276 pid('List.partitionInd' 4 pos('./standard/List.oz' 533 4) nil 5) <P: 92> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 69> 11)
		endDefinition(7253)
lbl(7276)	unify(x(21) x(40))
lbl(7279)	definition(x(21) 7299 pid('List.takeWhileInd' 3 pos('./standard/List.oz' 537 4) nil 4) <P: 93> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 70> 9)
		endDefinition(7279)
lbl(7299)	unify(x(21) x(43))
lbl(7302)	definition(x(21) 7322 pid('List.dropWhileInd' 3 pos('./standard/List.oz' 541 4) nil 4) <P: 94> nil)
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 71> 9)
		endDefinition(7302)
lbl(7322)	unify(x(21) x(36))
lbl(7325)	definition(x(21) 7348 pid('List.takeDropWhileInd' 4 pos('./standard/List.oz' 545 4) nil 5) <P: 95> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genFastCall(<P: 72> 11)
		endDefinition(7325)
lbl(7348)	unify(x(21) x(42))
		putConstant('IsProcedure' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(24)])
		putConstant('ProcedureArity' x(21))
		putConstant(2 x(23))
		callBI(builtin [x(21) x(23)]#[x(25)])
		putRecord(procedure [arity is] y(101))
		setValue(x(25))
		setValue(x(24))
lbl(7377)	definition(x(21) 7421 pid('HelpPlusOne' 3 pos('./standard/Loop.oz' 36 3) nil 4) <P: 96> nil)
		testLE(x(0) x(1) x(3) 7418)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 96> 7)
lbl(7418)	return
		endDefinition(7377)
lbl(7421)	definition(x(21) 7465 pid('HelpMinusOne' 3 pos('./standard/Loop.oz' 42 3) nil 4) <P: 97> nil)
		testLE(x(1) x(0) x(3) 7462)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		call(y(2) 1)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<P: 97> 7)
lbl(7462)	return
		endDefinition(7421)
lbl(7465)	definition(x(21) 7517 pid('HelpPlus' 4 pos('./standard/Loop.oz' 47 3) nil 5) <P: 98> nil)
		testLE(x(0) x(1) x(4) 7514)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 98> 9)
lbl(7514)	return
		endDefinition(7465)
lbl(7517)	definition(x(21) 7569 pid('HelpMinus' 4 pos('./standard/Loop.oz' 52 3) nil 5) <P: 99> nil)
		testLE(x(1) x(0) x(4) 7566)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		call(y(3) 1)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 99> 9)
lbl(7566)	return
		endDefinition(7517)
lbl(7569)	definition(x(21) 7611 pid('For' 4 pos('./standard/Loop.oz' 58 3) nil 6) <P: 100> nil)
		testNumber(x(2) 1 7585)
		move(x(3) x(2))
		genFastCall(<P: 96> 7)
lbl(7585)	testNumber(x(2) ~1 7595)
		move(x(3) x(2))
		genFastCall(<P: 97> 7)
lbl(7595)	putConstant(0 x(4))
		testLT(x(4) x(2) x(5) 7606)
		genFastCall(<P: 98> 9)
lbl(7606)	genFastCall(<P: 99> 9)
		endDefinition(7569)
lbl(7611)	definition(x(23) 7671 pid('HelpPlusOne' 5 pos('./standard/Loop.oz' 71 3) nil 6) <P: 101> nil)
		testLE(x(0) x(1) x(5) 7665)
		allocateL5
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 101> 11)
lbl(7665)	unify(x(4) x(3))
		return
		endDefinition(7611)
lbl(7671)	definition(x(23) 7731 pid('HelpMinusOne' 5 pos('./standard/Loop.oz' 76 3) nil 6) <P: 102> nil)
		testLE(x(1) x(0) x(5) 7725)
		allocateL5
		inlineMinus1(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(4) x(2))
		call(y(1) 3)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 102> 11)
lbl(7725)	unify(x(4) x(3))
		return
		endDefinition(7671)
lbl(7731)	definition(x(23) 7797 pid('HelpPlus' 6 pos('./standard/Loop.oz' 81 3) nil 7) <P: 103> nil)
		testLE(x(0) x(1) x(6) 7791)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 103> 13)
lbl(7791)	unify(x(5) x(4))
		return
		endDefinition(7731)
lbl(7797)	definition(x(23) 7863 pid('HelpMinus' 6 pos('./standard/Loop.oz' 86 3) nil 7) <P: 104> nil)
		testLE(x(1) x(0) x(6) 7857)
		allocateL6
		inlinePlus(x(0) x(2) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 104> 13)
lbl(7857)	unify(x(5) x(4))
		return
		endDefinition(7797)
lbl(7863)	definition(x(23) 7917 pid('ForThread' 6 pos('./standard/Loop.oz' 92 3) nil 8) <P: 105> nil)
		testNumber(x(2) 1 7885)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 101> 11)
lbl(7885)	testNumber(x(2) ~1 7901)
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		genFastCall(<P: 102> 11)
lbl(7901)	putConstant(0 x(6))
		testLT(x(6) x(2) x(7) 7912)
		genFastCall(<P: 103> 13)
lbl(7912)	genFastCall(<P: 104> 13)
		endDefinition(7863)
lbl(7917)	definition(x(26) 8016 pid('MultiFor' 2 pos('./standard/Loop.oz' 103 3) nil 4) <P: 106> nil)
		createVariable(x(2))
lbl(7925)	definition(x(3) 8005 pid('Help' 2 pos('./standard/Loop.oz' 104 6) nil 6) unit [x(1) x(2)])
		match(x(0) ht(7990 [onScalar(nil 7934) onRecord('|' 2 7951)]))
lbl(7934)	allocateL1
		move(x(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(7951)	getVarVar(x(4) x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyVariable(x(2))
lbl(7964)	definition(x(3) 7984 pid('' 1 pos('./standard/Loop.oz' 107 24) nil 2) unit [x(1) g(1) x(5)])
		putList(x(1))
		setValue(x(0))
		setValue(g(0))
		move(g(2) x(0))
		tailCall(g(1) 2)
		endDefinition(7964)
lbl(7984)	move(x(4) x(1))
		genFastCall(<P: 100> 9)
lbl(7990)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(108)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(7925)
lbl(8005)	unify(x(3) x(2))
		putConstant(nil x(1))
		tailCall(x(2) 2)
		endDefinition(7917)
lbl(8016)	definition(x(28) 8146 pid('MultiForThread' 4 pos('./standard/Loop.oz' 114 3) nil 6) <P: 107> nil)
		createVariable(x(4))
lbl(8024)	definition(x(5) 8135 pid('Help' 4 pos('./standard/Loop.oz' 115 6) nil 10) unit [x(1) x(4)])
		match(x(0) ht(8120 [onScalar(nil 8033) onRecord('|' 2 8060)]))
lbl(8033)	allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailCall(g(0) 3)
lbl(8060)	getVarVar(x(6) x(7))
		getRecord('#' 3 x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		unifyVariable(x(8))
lbl(8073)	definition(x(9) 8102 pid('' 3 pos('./standard/Loop.oz' 119 6) nil 5) unit [x(1) g(1) x(7)])
		putList(x(4))
		setValue(x(1))
		setValue(g(0))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(2) x(0))
		move(x(4) x(1))
		tailCall(g(1) 4)
		endDefinition(8073)
lbl(8102)	move(x(6) x(1))
		move(x(2) x(4))
		move(x(8) x(2))
		move(x(3) x(5))
		move(x(9) x(3))
		genFastCall(<P: 105> 13)
lbl(8120)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(120)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8024)
lbl(8135)	unify(x(5) x(4))
		putConstant(nil x(1))
		tailCall(x(4) 4)
		endDefinition(8016)
lbl(8146)	putRecord(loop [for forThread multiFor multiForThread] y(102))
		setValue(x(21))
		setValue(x(23))
		setValue(x(26))
		setValue(x(28))
		putConstant('NewDictionary' x(26))
		putConstant(1 x(28))
		callBI(builtin [x(26) x(28)]#[x(29)])
		putConstant('IsDictionary' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(34)])
		putConstant('Dictionary.entries' x(26))
		putConstant(2 x(28))
		callBI(builtin [x(26) x(28)]#[x(35)])
		putRecord(dictionary [clone condGet entries get is items keys member new put remove removeAll toRecord] y(103))
		setVariable(x(26))
		setVariable(x(28))
		setValue(x(35))
		setVariable(x(36))
		setValue(x(34))
		setVariable(x(37))
		setVariable(x(38))
		setVariable(x(39))
		setValue(x(29))
		setVariable(x(40))
		setVariable(x(41))
		setVariable(x(42))
		setVariable(y(104))
		putConstant('Dictionary.put' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(40))
		putConstant('Dictionary.get' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(36))
		putConstant('Dictionary.condGet' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(28))
		putConstant('Dictionary.keys' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(38))
		putConstant('Dictionary.items' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(37))
		putConstant('Dictionary.remove' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(41))
		putConstant('Dictionary.removeAll' x(43))
		putConstant(1 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(42))
		putConstant('Dictionary.clone' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(26))
		putConstant('Dictionary.member' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		unify(x(45) x(39))
lbl(8323)	definition(x(43) 8341 pid('Dictionary.toRecord' 3 pos('./standard/Dictionary.oz' 51 21) nil 4) <P: 108> nil)
		callBI('Dictionary.entries' [x(1)]#[x(3)])
		callBI(record [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
		endDefinition(8323)
lbl(8341)	unify(x(43) y(104))
		putConstant('Arity' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(45)])
		putConstant('IsRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(46)])
		putConstant('Label' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(83))
		putConstant('Width' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(81))
		putConstant('Adjoin' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		unify(x(47) y(82))
		putConstant('AdjoinList' x(43))
		putConstant(3 x(44))
		callBI(builtin [x(43) x(44)]#[x(47)])
		putConstant('AdjoinAt' x(43))
		putConstant(4 x(44))
		callBI(builtin [x(43) x(44)]#[x(48)])
		putConstant('IsRecordC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(49)])
		putConstant('WidthC' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(50)])
		putConstant('TellRecord' x(43))
		putConstant(2 x(44))
		callBI(builtin [x(43) x(44)]#[x(51)])
lbl(8443)	definition(x(43) 8494 pid('MakeEmpty' 2 pos('./standard/Record.oz' 45 3) nil 4) <P: 109> nil)
		match(x(0) ht(8479 [onScalar(nil 8452) onRecord('|' 2 8456)]))
lbl(8452)	getLiteral(nil x(1))
		return
lbl(8456)	getVarVar(x(2) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('#' 2 x(1))
		unifyValue(x(2))
		unifyVoid(1)
		move(x(3) x(1))
		genFastCall(<P: 109> 5)
lbl(8479)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(48)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8443)
lbl(8494)	definition(x(43) 8530 pid('MakeRecord' 3 pos('./standard/Record.oz' 51 3) nil 3) <P: 110> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 109> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(8494)
lbl(8530)	createVariable(y(105))
lbl(8532)	definition(x(44) 8606 pid('DescendArity' 2 pos('./standard/Record.oz' 61 3) nil 6) <P: 111> [y(105)])
		match(x(0) ht(8591 [onScalar(nil 8541) onRecord('|' 2 8542)]))
lbl(8541)	return
lbl(8542)	getVarVar(x(2) x(3))
		testList(x(1) 8570)
lbl(8548)	getVarVar(x(1) x(4))
		testBI('==' [x(2) x(1)]#[x(5)] 8564)
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8564)	move(x(4) x(1))
		genFastCall(<P: 111> 5)
lbl(8570)	move(g(0) x(0))
		inlineDot(x(0) raiseError x(3) cache)
		move(x(2) x(1))
		putConstant(arityMismatchDefaultMethod x(0))
		tailSendMsg(object x(3) 2 cache)
lbl(8591)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(70)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8532)
lbl(8606)	definition(x(44) 8629 pid('AritySublist' 2 pos('./standard/Record.oz' 73 3) nil 4) <P: 112> nil)
		callBI('Arity' [x(0)]#[x(2)])
		callBI('Arity' [x(1)]#[x(3)])
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 111> 5)
		endDefinition(8606)
lbl(8629)	moveMoveXYXY(x(0) y(106) x(1) y(107))
		moveMoveXYXY(x(2) y(108) x(3) y(109))
		moveMoveXYXY(x(4) y(110) x(5) y(111))
		moveMoveXYXY(x(6) y(112) x(7) y(113))
		moveMoveXYXY(x(8) y(114) x(10) y(115))
		moveMoveXYXY(x(9) y(116) x(11) y(117))
		moveMoveXYXY(x(12) y(118) x(13) y(119))
		moveMoveXYXY(x(15) y(120) x(16) y(121))
		moveMoveXYXY(x(14) y(122) x(17) y(123))
		moveMoveXYXY(x(19) y(124) x(20) y(125))
		moveMoveXYXY(x(18) y(126) x(24) y(127))
		moveMoveXYXY(x(25) y(128) x(21) y(129))
		moveMoveXYXY(x(23) y(130) x(34) y(131))
		moveMoveXYXY(x(29) y(132) x(46) y(133))
		moveMoveXYXY(x(43) y(134) x(45) y(135))
		moveMoveXYXY(x(47) y(136) x(48) y(137))
		moveMoveXYXY(x(49) y(138) x(50) y(139))
		moveMoveXYXY(x(51) y(140) x(22) y(141))
		moveMoveXYXY(x(27) y(142) x(30) y(143))
		moveMoveXYXY(x(31) y(144) x(32) y(145))
		moveMoveXYXY(x(33) y(146) x(35) y(147))
		moveMoveXYXY(x(40) y(148) x(36) y(149))
		moveMoveXYXY(x(28) y(150) x(38) y(151))
		moveMoveXYXY(x(37) y(152) x(41) y(153))
		moveMoveXYXY(x(42) y(154) x(26) y(155))
		moveMoveXYXY(x(39) y(156) x(44) y(157))
		move(y(81) x(1))
		putConstant(width x(0))
		genFastCall(<P: 1> 4)
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('^' x(0))
		genFastCall(<P: 1> 4)
		putConstant(tellRecordSize x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(tellRecordSize x(0))
		genFastCall(<P: 1> 4)
		move(y(157) x(1))
		putConstant(aritySublist x(0))
		genFastCall(<P: 1> 4)
		putConstant(monitorArity x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(8816)	definition(x(2) 8845 pid('MonitorArity' 3 pos('./standard/Record.oz' 91 6) nil 4) <P: 113> nil)
		createVariable(x(3))
		callBI(monitorArity [x(0) x(3) x(2)]#nil)
lbl(8827)	definition(x(0) 8839 pid('P' 0 pos('./standard/Record.oz' 94 2) nil 0) unit [x(3)])
		getLiteral(unit g(0))
		return
		endDefinition(8827)
lbl(8839)	unify(x(0) x(1))
		return
		endDefinition(8816)
lbl(8845)	definition(x(0) 8860 pid('ReflectArity' 2 pos('./standard/Record.oz' 97 6) nil 3) <P: 114> nil)
		putConstant(unit x(2))
		callBI(monitorArity [x(0) x(2) x(1)]#nil)
		return
		endDefinition(8845)
lbl(8860)	definition(x(3) 8919 pid('MakePairs' 3 pos('./standard/Record.oz' 102 3) nil 6) <P: 115> nil)
		match(x(0) ht(8904 [onScalar(nil 8869) onRecord('|' 2 8873)]))
lbl(8869)	getLiteral(nil x(2))
		return
lbl(8873)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 115> 7)
lbl(8904)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(105)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8860)
lbl(8919)	definition(x(3) 8975 pid('Subtract' 3 pos('./standard/Record.oz' 108 3) nil 5) <P: 116> [y(141)])
		allocateL5
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 47> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 115> 6)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(8919)
lbl(8975)	definition(x(4) 9051 pid('Map' 4 pos('./standard/Record.oz' 115 3) nil 5) <P: 117> nil)
		match(x(0) ht(9036 [onScalar(nil 8984) onRecord('|' 2 8988)]))
lbl(8984)	getLiteral(nil x(3))
		return
lbl(8988)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 117> 9)
lbl(9036)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(8975)
lbl(9051)	definition(x(4) 9117 pid('MapT' 5 pos('./standard/Record.oz' 121 3) nil 7) <P: 118> nil)
		testLE(x(0) x(1) x(5) 9114)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 118> 11)
lbl(9114)	return
		endDefinition(9051)
lbl(9117)	definition(x(4) 9189 pid('FoldL' 5 pos('./standard/Record.oz' 127 3) nil 6) <P: 119> nil)
		match(x(0) ht(9174 [onScalar(nil 9126) onRecord('|' 2 9130)]))
lbl(9126)	unify(x(4) x(3))
		return
lbl(9130)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 119> 11)
lbl(9174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(130)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9117)
lbl(9189)	definition(x(4) 9265 pid('FoldLT' 6 pos('./standard/Record.oz' 133 3) nil 8) <P: 120> nil)
		testLT(x(0) x(1) x(6) 9251)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(x(7) x(1))
		createVariableMove(y(5) x(2))
		call(y(2) 3)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 120> 13)
lbl(9251)	callBI('.' [x(2) x(0)]#[x(1)])
		move(x(4) x(0))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9189)
lbl(9265)	definition(x(4) 9331 pid('FoldR' 5 pos('./standard/Record.oz' 139 3) nil 7) <P: 121> nil)
		match(x(0) ht(9316 [onScalar(nil 9274) onRecord('|' 2 9278)]))
lbl(9274)	unify(x(4) x(3))
		return
lbl(9278)	allocateL4
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(6) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 121> 10)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9265)
lbl(9331)	definition(x(4) 9397 pid('FoldRT' 6 pos('./standard/Record.oz' 145 3) nil 8) <P: 122> nil)
		testLT(x(0) x(1) x(6) 9380)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		move(x(6) y(2))
		move(x(7) x(0))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 122> 12)
		moveMoveYXYX(y(0) x(3) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
lbl(9380)	callBI('.' [x(2) x(0)]#[x(6)])
		move(x(6) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		tailCall(x(3) 3)
		endDefinition(9331)
lbl(9397)	definition(x(4) 9452 pid('ForAll' 3 pos('./standard/Record.oz' 151 3) nil 4) <P: 123> nil)
		match(x(0) ht(9437 [onScalar(nil 9406) onRecord('|' 2 9407)]))
lbl(9406)	return
lbl(9407)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		call(y(2) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 123> 7)
lbl(9437)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(154)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9397)
lbl(9452)	definition(x(4) 9507 pid('ForAllT' 4 pos('./standard/Record.oz' 157 3) nil 5) <P: 124> nil)
		testLE(x(0) x(1) x(4) 9504)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		call(y(3) 1)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 124> 9)
lbl(9504)	return
		endDefinition(9452)
lbl(9507)	definition(x(4) 9593 pid('All' 4 pos('./standard/Record.oz' 163 3) nil 5) <P: 125> nil)
		match(x(0) ht(9578 [onScalar(nil 9516) onRecord('|' 2 9520)]))
lbl(9516)	getLiteral(true x(3))
		return
lbl(9520)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9562 9567)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 125> 9)
lbl(9562)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(9567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(165)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9578)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(166)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9507)
lbl(9593)	definition(x(4) 9679 pid('AllT' 5 pos('./standard/Record.oz' 169 3) nil 6) <P: 126> nil)
		testLE(x(0) x(1) x(5) 9673)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9657 9662)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 126> 11)
lbl(9657)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(9662)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9673)	getLiteral(true x(4))
		return
		endDefinition(9593)
lbl(9679)	definition(x(4) 9765 pid('Some' 4 pos('./standard/Record.oz' 175 3) nil 5) <P: 127> nil)
		match(x(0) ht(9750 [onScalar(nil 9688) onRecord('|' 2 9692)]))
lbl(9688)	getLiteral(false x(3))
		return
lbl(9692)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 9725 9739)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(9725)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 127> 9)
lbl(9739)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(177)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9750)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9679)
lbl(9765)	definition(x(4) 9851 pid('SomeT' 5 pos('./standard/Record.oz' 181 3) nil 6) <P: 128> nil)
		testLE(x(0) x(1) x(5) 9845)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		testBool(y(5) 9811 9834)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(9811)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 128> 11)
lbl(9834)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9845)	getLiteral(false x(4))
		return
		endDefinition(9765)
lbl(9851)	definition(x(4) 9962 pid('Filter' 4 pos('./standard/Record.oz' 185 3) nil 5) <P: 129> nil)
		match(x(0) ht(9947 [onScalar(nil 9860) onRecord('|' 2 9864)]))
lbl(9860)	getLiteral(nil x(3))
		return
lbl(9864)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 9922 9936)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9922)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 129> 9)
lbl(9936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(9947)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(191)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9851)
lbl(9962)	definition(x(4) 10095 pid('Part' 5 pos('./standard/Record.oz' 194 3) nil 6) <P: 130> nil)
		match(x(0) ht(10080 [onScalar(nil 9971) onRecord('|' 2 9978)]))
lbl(9971)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(9978)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(2) 2)
		testBool(y(7) 10041 10069)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10041)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 130> 11)
lbl(10069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(197)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10080)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(200)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(9962)
lbl(10095)	definition(x(4) 10197 pid('Take' 4 pos('./standard/Record.oz' 203 3) nil 5) <P: 131> nil)
		match(x(0) ht(10182 [onScalar(nil 10104) onRecord('|' 2 10108)]))
lbl(10104)	getLiteral(nil x(3))
		return
lbl(10108)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10166 10171)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 131> 9)
lbl(10166)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10171)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10182)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10095)
lbl(10197)	definition(x(4) 10299 pid('Drop' 4 pos('./standard/Record.oz' 210 3) nil 5) <P: 132> nil)
		match(x(0) ht(10284 [onScalar(nil 10206) onRecord('|' 2 10210)]))
lbl(10206)	getLiteral(nil x(3))
		return
lbl(10210)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 10247 10273)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(10247)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 132> 9)
lbl(10273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(213)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10284)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(214)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10197)
lbl(10299)	definition(x(4) 10421 pid('TakeDrop' 5 pos('./standard/Record.oz' 217 3) nil 7) <P: 133> nil)
		match(x(0) ht(10406 [onScalar(nil 10308) onRecord('|' 2 10315)]))
lbl(10308)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(10315)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(3) 2)
		testBool(y(8) 10380 10395)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 133> 11)
lbl(10380)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(10395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(220)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(10406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(223)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10299)
lbl(10421)	definition(x(4) 10497 pid('MapInd' 4 pos('./standard/Record.oz' 229 3) nil 5) <P: 134> nil)
		match(x(0) ht(10482 [onScalar(nil 10430) onRecord('|' 2 10434)]))
lbl(10430)	getLiteral(nil x(3))
		return
lbl(10434)	allocateL4
		getVarVar(x(0) y(0))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) x(1))
		move(x(4) x(2))
		call(y(3) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 134> 9)
lbl(10482)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(232)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10421)
lbl(10497)	definition(x(4) 10563 pid('MapIndT' 5 pos('./standard/Record.oz' 235 3) nil 7) <P: 135> nil)
		testLE(x(0) x(1) x(5) 10560)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(4) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		move(x(6) x(2))
		call(y(3) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 135> 11)
lbl(10560)	return
		endDefinition(10497)
lbl(10563)	definition(x(4) 10635 pid('FoldLInd' 5 pos('./standard/Record.oz' 241 3) nil 6) <P: 136> nil)
		match(x(0) ht(10620 [onScalar(nil 10572) onRecord('|' 2 10576)]))
lbl(10572)	unify(x(4) x(3))
		return
lbl(10576)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(4) y(3))
		move(x(3) x(1))
		move(x(5) x(2))
		createVariableMove(y(4) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 136> 11)
lbl(10620)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(244)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10563)
lbl(10635)	definition(x(4) 10703 pid('FoldLIndT' 6 pos('./standard/Record.oz' 247 3) nil 8) <P: 137> nil)
		testLE(x(0) x(1) x(6) 10697)
		allocateL6
		inlinePlus1(x(0) x(6))
		callBI('.' [x(2) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		call(y(2) 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL6
		genFastCall(<P: 137> 13)
lbl(10697)	unify(x(5) x(4))
		return
		endDefinition(10635)
lbl(10703)	definition(x(4) 10774 pid('FoldRInd' 5 pos('./standard/Record.oz' 253 3) nil 7) <P: 138> nil)
		match(x(0) ht(10759 [onScalar(nil 10712) onRecord('|' 2 10716)]))
lbl(10712)	unify(x(4) x(3))
		return
lbl(10716)	allocateL5
		getVarVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(6)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		moveMoveXYXY(x(0) y(2) x(6) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 138> 10)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(1) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10759)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10703)
lbl(10774)	definition(x(4) 10834 pid('FoldRIndT' 6 pos('./standard/Record.oz' 259 3) nil 8) <P: 139> nil)
		testLE(x(0) x(1) x(6) 10828)
		allocateL5
		callBI('.' [x(2) x(0)]#[x(6)])
		inlinePlus1(x(0) x(7))
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(7) x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<P: 139> 12)
		moveMoveYXYX(y(1) x(4) y(0) x(0))
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		move(y(2) x(3))
		deAllocateL5
		tailCall(x(4) 4)
lbl(10828)	unify(x(5) x(4))
		return
		endDefinition(10774)
lbl(10834)	definition(x(4) 10889 pid('ForAllInd' 3 pos('./standard/Record.oz' 265 3) nil 4) <P: 140> nil)
		match(x(0) ht(10874 [onScalar(nil 10843) onRecord('|' 2 10844)]))
lbl(10843)	return
lbl(10844)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(1))
		call(y(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<P: 140> 7)
lbl(10874)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(268)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10834)
lbl(10889)	definition(x(4) 10944 pid('ForAllIndT' 4 pos('./standard/Record.oz' 271 3) nil 5) <P: 141> nil)
		testLE(x(0) x(1) x(4) 10941)
		allocateL4
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(1))
		call(y(3) 2)
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 141> 9)
lbl(10941)	return
		endDefinition(10889)
lbl(10944)	definition(x(4) 11030 pid('AllInd' 4 pos('./standard/Record.oz' 277 3) nil 5) <P: 142> nil)
		match(x(0) ht(11015 [onScalar(nil 10953) onRecord('|' 2 10957)]))
lbl(10953)	getLiteral(true x(3))
		return
lbl(10957)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 10999 11004)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 142> 9)
lbl(10999)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(11004)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(279)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11015)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(280)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(10944)
lbl(11030)	definition(x(4) 11116 pid('AllIndT' 5 pos('./standard/Record.oz' 283 3) nil 6) <P: 143> nil)
		testLE(x(0) x(1) x(5) 11110)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11094 11099)
		move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 143> 11)
lbl(11094)	getLiteral(false y(4))
		deAllocateL6
		return
lbl(11099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(284)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11110)	getLiteral(true x(4))
		return
		endDefinition(11030)
lbl(11116)	definition(x(4) 11202 pid('SomeInd' 4 pos('./standard/Record.oz' 289 3) nil 5) <P: 144> nil)
		match(x(0) ht(11187 [onScalar(nil 11125) onRecord('|' 2 11129)]))
lbl(11125)	getLiteral(false x(3))
		return
lbl(11129)	allocateL5
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		call(y(2) 3)
		testBool(y(4) 11162 11176)
		getLiteral(true y(3))
		deAllocateL5
		return
lbl(11162)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 144> 9)
lbl(11176)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(291)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11187)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(292)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11116)
lbl(11202)	definition(x(4) 11288 pid('SomeIndT' 5 pos('./standard/Record.oz' 295 3) nil 6) <P: 145> nil)
		testLE(x(0) x(1) x(5) 11282)
		allocateL6
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		testBool(y(5) 11248 11271)
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(11248)	move(y(0) x(0))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 145> 11)
lbl(11271)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11282)	getLiteral(false x(4))
		return
		endDefinition(11202)
lbl(11288)	definition(x(4) 11399 pid('FilterInd' 4 pos('./standard/Record.oz' 299 3) nil 5) <P: 146> nil)
		match(x(0) ht(11384 [onScalar(nil 11297) onRecord('|' 2 11301)]))
lbl(11297)	getLiteral(nil x(3))
		return
lbl(11301)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11359 11373)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11359)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<P: 146> 9)
lbl(11373)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11384)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(305)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11288)
lbl(11399)	definition(x(4) 11532 pid('PartInd' 5 pos('./standard/Record.oz' 308 3) nil 6) <P: 147> nil)
		match(x(0) ht(11517 [onScalar(nil 11408) onRecord('|' 2 11415)]))
lbl(11408)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11415)	allocateL8
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(0) y(5) x(5) y(6))
		move(y(6) x(1))
		createVariableMove(y(7) x(2))
		call(y(2) 3)
		testBool(y(7) 11478 11506)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11478)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL8
		genFastCall(<P: 147> 11)
lbl(11506)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(311)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11517)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(314)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11399)
lbl(11532)	definition(x(4) 11634 pid('TakeInd' 4 pos('./standard/Record.oz' 317 3) nil 5) <P: 148> nil)
		match(x(0) ht(11619 [onScalar(nil 11541) onRecord('|' 2 11545)]))
lbl(11541)	getLiteral(nil x(3))
		return
lbl(11545)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11603 11608)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 148> 9)
lbl(11603)	getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11608)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(320)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11619)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(321)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11532)
lbl(11634)	definition(x(4) 11736 pid('DropInd' 4 pos('./standard/Record.oz' 324 3) nil 5) <P: 149> nil)
		match(x(0) ht(11721 [onScalar(nil 11643) onRecord('|' 2 11647)]))
lbl(11643)	getLiteral(nil x(3))
		return
lbl(11647)	allocateL7
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		moveMoveXYYX(x(4) y(5) y(5) x(1))
		createVariableMove(y(6) x(2))
		call(y(2) 3)
		testBool(y(6) 11684 11710)
		getLiteral(nil y(3))
		deAllocateL7
		return
lbl(11684)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 149> 9)
lbl(11710)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11721)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11634)
lbl(11736)	definition(x(4) 11861 pid('TakeDropInd' 5 pos('./standard/Record.oz' 331 3) nil 7) <P: 150> nil)
		match(x(0) ht(11846 [onScalar(nil 11745) onRecord('|' 2 11752)]))
lbl(11745)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(11752)	allocateL9
		getVarVar(x(5) y(0))
		callBI('.' [x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		moveMoveXYXY(x(4) y(5) x(5) y(6))
		moveMoveXYYX(x(6) y(7) y(6) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		call(y(3) 3)
		testBool(y(8) 11820 11835)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(5) x(4))
		deAllocateL9
		genFastCall(<P: 150> 11)
lbl(11820)	getLiteral(nil y(4))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(5) x(2))
		deAllocateL9
		genFastCall(<P: 115> 7)
lbl(11835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(334)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(11846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(337)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11736)
lbl(11861)	definition(x(4) 11960 pid('Zip' 5 pos('./standard/Record.oz' 340 3) nil 7) <P: 151> nil)
		match(x(0) ht(11945 [onScalar(nil 11870) onRecord('|' 2 11874)]))
lbl(11870)	getLiteral(nil x(4))
		return
lbl(11874)	allocateL5
		getVarVar(x(0) y(0))
		testBI('HasFeature' [x(1) x(0)]#[x(5)] 11938)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 2 x(4))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		move(x(4) x(0))
		move(x(6) x(1))
		move(x(5) x(2))
		call(y(4) 3)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11938)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 151> 11)
lbl(11945)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(11861)
lbl(11960)	definition(x(4) 12037 pid('ZipT' 6 pos('./standard/Record.oz' 349 3) nil 9) <P: 152> nil)
		testLE(x(0) x(1) x(6) 12034)
		allocateL6
		callBI('.' [x(5) x(0)]#[x(6)])
		callBI('.' [x(2) x(0)]#[x(7)])
		callBI('.' [x(3) x(0)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(6) x(2))
		call(y(4) 3)
		move(y(0) x(0))
		inlinePlus1(x(0) x(6))
		move(x(6) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(12034)	return
		endDefinition(11960)
lbl(12037)	definition(x(4) 12089 pid('ToList' 3 pos('./standard/Record.oz' 354 3) nil 6) <P: 153> nil)
		match(x(0) ht(12074 [onScalar(nil 12046) onRecord('|' 2 12050)]))
lbl(12046)	getLiteral(nil x(2))
		return
lbl(12050)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 153> 7)
lbl(12074)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(357)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12037)
lbl(12089)	definition(x(4) 12130 pid('ToListT' 4 pos('./standard/Record.oz' 360 3) nil 6) <P: 154> nil)
		testLT(x(1) x(0) x(4) 12104)
		getLiteral(nil x(3))
		return
lbl(12104)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(3))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 154> 9)
		endDefinition(12089)
lbl(12130)	definition(x(4) 12189 pid('ToListInd' 3 pos('./standard/Record.oz' 364 3) nil 6) <P: 155> nil)
		match(x(0) ht(12174 [onScalar(nil 12139) onRecord('|' 2 12143)]))
lbl(12139)	getLiteral(nil x(2))
		return
lbl(12143)	getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValVar(x(0) x(5))
		callBI('.' [x(1) x(0)]#[x(2)])
		unify(x(2) x(5))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 155> 7)
lbl(12174)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(367)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12130)
lbl(12189)	definition(x(4) 12237 pid('ToListIndT' 4 pos('./standard/Record.oz' 370 3) nil 6) <P: 156> nil)
		testLT(x(1) x(0) x(4) 12204)
		getLiteral(nil x(3))
		return
lbl(12204)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 156> 9)
		endDefinition(12189)
lbl(12237)	definition(x(4) 12265 pid('TupleToDictionary' 3 pos('./standard/Record.oz' 374 3) nil 4) <P: 157> [y(148)])
		testNumber(x(0) 0 12248)
		return
lbl(12248)	callBI('.' [x(1) x(0)]#[x(3)])
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
		endDefinition(12237)
lbl(12265)	definition(x(4) 12305 pid('RecordToDictionary' 3 pos('./standard/Record.oz' 380 3) nil 5) <P: 158> [y(148)])
		match(x(0) ht(12290 [onScalar(nil 12274) onRecord('|' 2 12275)]))
lbl(12274)	return
lbl(12275)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
lbl(12290)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(384)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(12265)
lbl(12305)	putRecord(record ['^' adjoin adjoinAt adjoinList all allInd arity dropWhile dropWhileInd filter filterInd foldL foldLInd foldR foldRInd forAll forAllInd hasLabel is isC label make map mapInd monitorArity partition partitionInd reflectArity some someInd subtract takeDropWhile takeDropWhileInd takeWhile takeWhileInd tell toDictionary toList toListInd width widthC zip] y(141))
		setVariable(x(1))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setVariable(y(157))
		setVariable(x(4))
		setValue(y(135))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setVariable(y(158))
		setVariable(x(8))
		setVariable(y(159))
		setVariable(y(160))
		setVariable(x(9))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(x(10))
		setValue(y(133))
		setValue(y(138))
		setValue(y(83))
		setValue(y(134))
		setVariable(y(163))
		setVariable(y(164))
		setValue(x(2))
		setVariable(x(11))
		setVariable(x(12))
		setValue(x(0))
		setVariable(x(13))
		setVariable(x(14))
		setValue(x(3))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setValue(y(140))
		setVariable(x(19))
		setVariable(y(165))
		setVariable(y(166))
		setValue(y(81))
		setValue(y(139))
		setVariable(x(20))
		putConstant('^' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(21)])
		unify(x(21) x(1))
		putConstant(hasLabel x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(10))
lbl(12417)	definition(x(1) 12462 pid('Record.toList' 2 pos('./standard/Record.oz' 411 8) nil 5) <P: 159> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12445)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 154> 9)
lbl(12445)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 153> 7)
		endDefinition(12417)
lbl(12462)	unify(x(1) y(165))
lbl(12465)	definition(x(1) 12510 pid('Record.toListInd' 2 pos('./standard/Record.oz' 417 8) nil 5) <P: 160> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12493)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 156> 9)
lbl(12493)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 155> 7)
		endDefinition(12465)
lbl(12510)	unify(x(1) y(166))
lbl(12513)	definition(x(1) 12598 pid('Record.map' 3 pos('./standard/Record.oz' 424 8) nil 6) <P: 161> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12556)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 118> 11)
lbl(12556)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 117> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12513)
lbl(12598)	unify(x(1) y(163))
lbl(12601)	definition(x(1) 12666 pid('Record.foldL' 4 pos('./standard/Record.oz' 434 8) nil 7) <P: 162> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12643)
		testBI('IsLiteral' [x(0)]#[x(4)] 12619)
		unify(x(3) x(2))
		return
lbl(12619)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 120> 13)
lbl(12643)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 119> 11)
		endDefinition(12601)
lbl(12666)	unify(x(1) x(8))
lbl(12669)	definition(x(1) 12734 pid('Record.foldR' 4 pos('./standard/Record.oz' 443 8) nil 7) <P: 163> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 12711)
		testBI('IsLiteral' [x(0)]#[x(4)] 12687)
		unify(x(3) x(2))
		return
lbl(12687)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 122> 13)
lbl(12711)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 121> 11)
		endDefinition(12669)
lbl(12734)	unify(x(1) y(160))
lbl(12737)	definition(x(1) 12782 pid('Record.forAll' 2 pos('./standard/Record.oz' 452 8) nil 5) <P: 164> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 12765)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 124> 9)
lbl(12765)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 123> 7)
		endDefinition(12737)
lbl(12782)	unify(x(1) y(161))
lbl(12785)	definition(x(1) 12836 pid('Record.all' 3 pos('./standard/Record.oz' 458 8) nil 6) <P: 165> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12816)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 126> 11)
lbl(12816)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 125> 9)
		endDefinition(12785)
lbl(12836)	unify(x(1) y(157))
lbl(12839)	definition(x(1) 12890 pid('Record.some' 3 pos('./standard/Record.oz' 464 8) nil 6) <P: 166> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 12870)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 128> 11)
lbl(12870)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 127> 9)
		endDefinition(12839)
lbl(12890)	unify(x(1) x(13))
lbl(12893)	definition(x(1) 12941 pid('Record.filter' 3 pos('./standard/Record.oz' 470 8) nil 5) <P: 167> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 129> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(12893)
lbl(12941)	unify(x(1) x(7))
lbl(12944)	definition(x(1) 13007 pid('Record.partition' 4 pos('./standard/Record.oz' 474 8) nil 6) <P: 168> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 130> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(12944)
lbl(13007)	unify(x(1) x(11))
lbl(13010)	definition(x(1) 13058 pid('Record.takeWhile' 3 pos('./standard/Record.oz' 482 8) nil 5) <P: 169> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 131> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13010)
lbl(13058)	unify(x(1) x(17))
lbl(13061)	definition(x(1) 13109 pid('Record.dropWhile' 3 pos('./standard/Record.oz' 486 8) nil 5) <P: 170> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 132> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13061)
lbl(13109)	unify(x(1) x(5))
lbl(13112)	definition(x(1) 13175 pid('Record.takeDropWhile' 4 pos('./standard/Record.oz' 490 8) nil 6) <P: 171> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 133> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13112)
lbl(13175)	unify(x(1) x(15))
lbl(13178)	definition(x(1) 13263 pid('Record.mapInd' 3 pos('./standard/Record.oz' 499 8) nil 6) <P: 172> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13221)
		callBI('Width' [x(0)]#[x(3)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		unify(x(5) x(2))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 135> 11)
lbl(13221)	allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 134> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13178)
lbl(13263)	unify(x(1) y(164))
lbl(13266)	definition(x(1) 13331 pid('Record.foldLInd' 4 pos('./standard/Record.oz' 510 8) nil 7) <P: 173> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13308)
		testBI('IsLiteral' [x(0)]#[x(4)] 13284)
		unify(x(3) x(2))
		return
lbl(13284)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 137> 13)
lbl(13308)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 136> 11)
		endDefinition(13266)
lbl(13331)	unify(x(1) y(159))
lbl(13334)	definition(x(1) 13399 pid('Record.foldRInd' 4 pos('./standard/Record.oz' 519 8) nil 7) <P: 174> nil)
		testBI('IsTuple' [x(0)]#[x(4)] 13376)
		testBI('IsLiteral' [x(0)]#[x(4)] 13352)
		unify(x(3) x(2))
		return
lbl(13352)	callBI('Width' [x(0)]#[x(6)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 139> 13)
lbl(13376)	callBI('Arity' [x(0)]#[x(5)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		genFastCall(<P: 138> 11)
		endDefinition(13334)
lbl(13399)	unify(x(1) x(9))
lbl(13402)	definition(x(1) 13447 pid('Record.forAllInd' 2 pos('./standard/Record.oz' 528 8) nil 5) <P: 175> nil)
		testBI('IsTuple' [x(0)]#[x(2)] 13430)
		callBI('Width' [x(0)]#[x(4)])
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 141> 9)
lbl(13430)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 140> 7)
		endDefinition(13402)
lbl(13447)	unify(x(1) y(162))
lbl(13450)	definition(x(1) 13501 pid('Record.allInd' 3 pos('./standard/Record.oz' 534 8) nil 6) <P: 176> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13481)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 143> 11)
lbl(13481)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 142> 9)
		endDefinition(13450)
lbl(13501)	unify(x(1) x(4))
lbl(13504)	definition(x(1) 13555 pid('Record.someInd' 3 pos('./standard/Record.oz' 540 8) nil 6) <P: 177> nil)
		testBI('IsTuple' [x(0)]#[x(3)] 13535)
		callBI('Width' [x(0)]#[x(5)])
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(1) x(3))
		move(x(5) x(1))
		putConstant(1 x(0))
		genFastCall(<P: 145> 11)
lbl(13535)	callBI('Arity' [x(0)]#[x(4)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<P: 144> 9)
		endDefinition(13504)
lbl(13555)	unify(x(1) x(14))
lbl(13558)	definition(x(1) 13606 pid('Record.filterInd' 3 pos('./standard/Record.oz' 546 8) nil 5) <P: 178> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 146> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13558)
lbl(13606)	unify(x(1) y(158))
lbl(13609)	definition(x(1) 13672 pid('Record.partitionInd' 4 pos('./standard/Record.oz' 550 8) nil 6) <P: 179> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 147> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13609)
lbl(13672)	unify(x(1) x(12))
lbl(13675)	definition(x(1) 13723 pid('Record.takeWhileInd' 3 pos('./standard/Record.oz' 558 8) nil 5) <P: 180> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 148> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13675)
lbl(13723)	unify(x(1) x(18))
lbl(13726)	definition(x(1) 13774 pid('Record.dropWhileInd' 3 pos('./standard/Record.oz' 562 8) nil 5) <P: 181> nil)
		allocateL3
		callBI('Label' [x(0)]#[x(3)])
		callBI('Arity' [x(0)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 149> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(13726)
lbl(13774)	unify(x(1) x(6))
lbl(13777)	definition(x(1) 13840 pid('Record.takeDropWhileInd' 4 pos('./standard/Record.oz' 566 8) nil 6) <P: 182> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		callBI('Arity' [x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 150> 10)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL5
		return
		endDefinition(13777)
lbl(13840)	unify(x(1) x(16))
lbl(13843)	definition(x(1) 13950 pid('Record.zip' 4 pos('./standard/Record.oz' 575 8) nil 7) <P: 183> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsTuple' [x(0)]#[x(4)] 13906)
lbl(13864)	testBI('IsTuple' [x(1)]#[x(4)] 13906)
lbl(13868)	callBI('Width' [x(0)]#[x(4)])
		callBI('Width' [x(1)]#[x(5)])
		callBI('Min' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(0)]#[x(4)])
		callBI('MakeTuple' [x(4) x(6)]#[x(5)])
		unify(x(5) y(3))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(1 x(0))
		deAllocateL6
		genFastCall(<P: 152> 13)
lbl(13906)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		callBI('Arity' [x(0)]#[x(5)])
		move(x(1) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 151> 10)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL6
		return
		endDefinition(13843)
lbl(13950)	unify(x(1) x(20))
lbl(13953)	definition(x(1) 14001 pid('Record.toDictionary' 2 pos('./standard/Record.oz' 586 8) nil 4) <P: 184> [y(132)])
		callBI('NewDictionary' nil#[x(2)])
		unify(x(2) x(1))
		testBI('IsTuple' [x(0)]#[x(2)] 13984)
		callBI('Width' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 157> 7)
lbl(13984)	callBI('Arity' [x(0)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 158> 7)
		endDefinition(13953)
lbl(14001)	unify(x(1) x(19))
		putConstant('NewChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('IsChunk' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(14022)	definition(x(2) 14072 pid('ChunkSelectFeature' 3 pos('./standard/Chunk.oz' 42 3) nil 5) <P: 185> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14039)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14039)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkSelectFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14022)
lbl(14072)	definition(x(3) 14122 pid('ChunkHasFeature' 3 pos('./standard/Chunk.oz' 47 3) nil 5) <P: 186> nil)
		testBI('IsChunk' [x(0)]#[x(3)] 14089)
		callBI('HasFeature' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(14089)	putList(x(4))
		setValue(x(1))
		setConstant(nil)
		putList(x(3))
		setValue(x(0))
		setValue(x(4))
		putRecord(kernel 6 x(2))
		setConstant(type)
		setConstant('ChunkHasFeature')
		setValue(x(3))
		setConstant(1)
		setConstant(chunk)
		setConstant('')
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(14072)
lbl(14122)	putRecord(chunk [hasFeature is new selectFeature] y(167))
		setValue(x(3))
		setValue(x(4))
		setValue(x(1))
		setValue(x(2))
		putConstant('IsVirtualString' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(5)])
lbl(14143)	definition(x(2) 14214 pid('AllToString' 4 pos('./standard/VirtualString.oz' 35 6) nil 6) <P: 187> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14208)
		allocateL6
		inlineMinus1(x(0) x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 188> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 187> 9)
lbl(14208)	unify(x(3) x(2))
		return
		endDefinition(14143)
lbl(14214)	definition(x(2) 14278 pid('SignOzToOS' 2 pos('./standard/VirtualString.oz' 40 6) nil 4) <P: 189> nil)
		match(x(0) ht(14263 [onScalar(nil 14223) onRecord('|' 2 14227)]))
lbl(14223)	getLiteral(nil x(1))
		return
lbl(14227)	allocateL2
		getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		testNumber(x(0) 126 14251)
lbl(14246)	getNumber(45 x(1))
		branch(14254)
lbl(14251)	unify(x(1) x(0))
lbl(14254)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 189> 5)
lbl(14263)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(44)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14214)
lbl(14278)	definition(x(2) 14404 pid('ToString' 2 pos('./standard/VirtualString.oz' 47 6) nil 5) <P: 188> [y(51) y(62) y(79) y(39)])
		callBI('Value.type' [x(0)]#[x(2)])
		match(x(2) ht(14389 [onScalar(int 14290) onScalar(float 14321) onScalar(atom 14330) onScalar(tuple 14348)]))
lbl(14290)	putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 14314)
		getList(x(1))
		unifyNumber(45)
		unifyVariable(x(1))
		callBI('Abs' [x(0)]#[x(2)])
		callBI('IntToString' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(14314)	callBI('IntToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14321)	callBI('FloatToString' [x(0)]#[x(2)])
		move(x(2) x(0))
		genFastCall(<P: 189> 5)
lbl(14330)	match(x(0) ht(14341 [onScalar('#' 14333) onScalar(nil 14337)]))
lbl(14333)	getLiteral(nil x(1))
		return
lbl(14337)	getLiteral(nil x(1))
		return
lbl(14341)	callBI('AtomToString' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(14348)	callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(14376 [onScalar('#' 14354) onScalar('|' 14372)]))
lbl(14354)	callBI('Width' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 187> 9)
lbl(14372)	unify(x(1) x(0))
		return
lbl(14376)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14389)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14278)
lbl(14404)	definition(x(2) 14471 pid('ChangeSignAll' 4 pos('./standard/VirtualString.oz' 70 6) nil 6) <P: 190> nil)
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 14468)
		allocateL4
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		move(y(2) x(1))
		move(x(4) x(2))
		genFastCall(<P: 191> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 190> 9)
lbl(14468)	return
		endDefinition(14404)
lbl(14471)	definition(x(2) 14533 pid('ChangeLast' 5 pos('./standard/VirtualString.oz' 78 6) nil 6) <P: 192> nil)
		match(x(0) ht(14518 [onScalar(nil 14480) onRecord('|' 2 14487)]))
lbl(14480)	getLiteral(nil x(3))
		unify(x(2) x(4))
		return
lbl(14487)	getVarVar(x(0) x(5))
		testNumber(x(0) 126 14508)
lbl(14494)	getLiteral(nil x(3))
		getRecord('#' 3 x(4))
		unifyValue(x(2))
		unifyValue(x(1))
		unifyValue(x(5))
		return
lbl(14508)	getListValVar(x(3) x(0) x(3))
		move(x(5) x(0))
		genFastCall(<P: 192> 11)
lbl(14518)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(84)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(14471)
lbl(14533)	definition(x(2) 14599 pid('ChangeSignFloat' 3 pos('./standard/VirtualString.oz' 87 6) nil 6) <P: 193> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 14580)
lbl(14551)	getVarVar(x(3) x(4))
		testNumber(x(3) 126 14580)
		getRecord('#' 2 y(2))
		unifyValVar(y(1) x(5))
		createVariable(x(2))
		move(x(4) x(0))
		move(x(2) x(3))
		move(x(5) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
lbl(14580)	createVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(x(2) x(3))
		move(y(2) x(4))
		deAllocateL3
		genFastCall(<P: 192> 11)
		endDefinition(14533)
lbl(14599)	definition(x(2) 14723 pid('ChangeSign' 3 pos('./standard/VirtualString.oz' 93 6) nil 6) <P: 191> [y(51) y(79)])
		callBI('Value.type' [x(0)]#[x(3)])
		match(x(3) ht(14708 [onScalar(int 14611) onScalar(float 14637) onScalar(atom 14646) onScalar(tuple 14650)]))
lbl(14611)	putConstant(0 x(3))
		testLT(x(0) x(3) x(4) 14633)
		getRecord('#' 2 x(2))
		unifyValVar(x(1) x(2))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(14633)	unify(x(2) x(0))
		return
lbl(14637)	callBI('FloatToString' [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 193> 7)
lbl(14646)	unify(x(2) x(0))
		return
lbl(14650)	callBI('Label' [x(0)]#[x(3)])
		match(x(3) ht(14695 [onScalar('#' 14656) onScalar('|' 14691)]))
lbl(14656)	allocateL2
		callBI('Width' [x(0)]#[x(3)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(3)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		move(y(1) x(3))
		genFastCall(<P: 190> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(14691)	unify(x(2) x(0))
		return
lbl(14695)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(104)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(14708)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(105)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(14599)
lbl(14723)	putConstant(virtualStringLength x(3))
		putConstant(3 x(6))
		callBI(builtin [x(3) x(6)]#[x(7)])
		putRecord(virtualString [changeSign is length toAtom toString] y(51))
		setValue(x(2))
		setValue(x(5))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
lbl(14746)	definition(x(2) 14768 pid('VirtualString.toString' 2 pos('./standard/VirtualString.oz' 114 17) nil 2) <P: 194> nil)
		match(x(0) ht(14763 [onScalar(nil 14755) onRecord('|' 2 14759)]))
lbl(14755)	getLiteral(nil x(1))
		return
lbl(14759)	unify(x(1) x(0))
		return
lbl(14763)	genFastCall(<P: 188> 5)
		endDefinition(14746)
lbl(14768)	unify(x(2) y(170))
lbl(14771)	definition(x(2) 14808 pid('VirtualString.toAtom' 2 pos('./standard/VirtualString.oz' 120 17) nil 3) <P: 195> nil)
		testBI('IsAtom' [x(0)]#[x(2)] 14785)
		unify(x(1) x(0))
		return
lbl(14785)	allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 188> 4)
		move(y(1) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(14771)
lbl(14808)	unify(x(2) y(169))
lbl(14811)	definition(x(2) 14835 pid('VirtualString.length' 2 pos('./standard/VirtualString.oz' 127 17) nil 6) <P: 196> nil)
		move(x(0) x(2))
		putConstant(0 x(4))
		move(x(4) x(3))
		callBI(virtualStringLength [x(2) x(3)]#[x(5)])
		unify(x(5) x(1))
		return
		endDefinition(14811)
lbl(14835)	unify(x(2) y(168))
		putConstant('NewArray' x(2))
		putConstant(4 x(3))
		callBI(builtin [x(2) x(3)]#[x(6)])
		putConstant('IsArray' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(7)])
		putConstant('Put' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(8)])
		putConstant('Get' x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(9)])
lbl(14874)	definition(x(2) 14909 pid('ArrayToRecord' 3 pos('./standard/Array.oz' 34 3) nil 5) <P: 197> nil)
		callBI('.' [x(2) x(0)]#[x(3)])
		callBI('Get' [x(1) x(0)]#[x(4)])
		unify(x(4) x(3))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(4) 14906)
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		genFastCall(<P: 197> 7)
lbl(14906)	return
		endDefinition(14874)
lbl(14909)	definition(x(2) 14938 pid('ArrayToArray' 4 pos('./standard/Array.oz' 37 3) nil 5) <P: 198> nil)
		testLT(x(1) x(0) x(4) 14921)
		return
lbl(14921)	callBI('Get' [x(2) x(0)]#[x(4)])
		callBI('Put' [x(3) x(0) x(4)]#nil)
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 198> 9)
		endDefinition(14909)
lbl(14938)	definition(x(2) 14986 pid('MakePairs' 4 pos('./standard/Array.oz' 43 3) nil 6) <P: 199> nil)
		testLT(x(1) x(0) x(4) 14953)
		getLiteral(nil x(3))
		return
lbl(14953)	getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('#' 2 x(3))
		unifyValVar(x(0) x(5))
		callBI('Get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(5))
		inlinePlus1(x(0) x(5))
		move(x(5) x(0))
		move(x(4) x(3))
		genFastCall(<P: 199> 9)
		endDefinition(14938)
lbl(14986)	putConstant('Array.low' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(11)])
		putConstant('Array.high' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(12)])
		getRecord(array [clone get high is low new put toRecord] y(84))
		unifyVariable(x(2))
		unifyValue(x(9))
		unifyValue(x(12))
		unifyValue(x(7))
		unifyValue(x(11))
		unifyValue(x(6))
		unifyValVar(x(8) x(3))
lbl(15023)	definition(x(13) 15072 pid('Array.clone' 2 pos('./standard/Array.oz' 58 13) nil 6) <P: 200> nil)
		allocateL2
		callBI('Array.low' [x(0)]#[x(2)])
		callBI('Array.high' [x(0)]#[x(3)])
		putConstant(unit x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(4))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(3) x(1))
		move(y(1) x(3))
		genFastCall(<P: 198> 8)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15023)
lbl(15072)	unify(x(13) x(2))
lbl(15075)	definition(x(2) 15150 pid('Array.toRecord' 3 pos('./standard/Array.oz' 65 13) nil 5) <P: 201> nil)
		allocateL4
		callBI('Array.low' [x(1)]#[x(3)])
		callBI('Array.high' [x(1)]#[x(4)])
		move(x(2) y(0))
		createVariable(y(1))
		testNumber(x(3) 1 15114)
		callBI('MakeTuple' [x(0) x(4)]#[x(3)])
		unify(x(3) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<P: 197> 6)
		branch(15143)
lbl(15114)	move(x(0) y(2))
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 199> 8)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(15143)	unify(y(1) y(0))
		deAllocateL4
		return
		endDefinition(15075)
lbl(15150)	unify(x(2) x(3))
		putConstant('IsSpace' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(13)])
		putRecord(space ['ask' askVerbose clone commit inject is merge new] y(171))
		setVariable(x(2))
		setVariable(x(3))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setValue(x(13))
		setVariable(x(17))
		setVariable(x(18))
		putConstant('Space.new' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(18))
		putConstant('Space.ask' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('Space.askVerbose' x(20))
		putConstant(2 x(21))
		callBI(builtin [x(20) x(21)]#[x(22)])
		unify(x(22) x(3))
		putConstant('Space.clone' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(14))
		putConstant('Space.merge' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(17))
		putConstant('Space.inject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(16))
		putConstant('Space.commit' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		unify(x(21) x(15))
		putConstant('IsObject' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(21)])
		putConstant('New' x(3))
		putConstant(3 x(20))
		callBI(builtin [x(3) x(20)]#[x(22)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
		putConstant('NewUniqueName' x(3))
		putConstant(2 x(20))
		callBI(builtin [x(3) x(20)]#[x(23)])
lbl(15302)	definition(x(3) 15376 pid('FbApply' 2 pos('./standard/Object.oz' 84 6) nil 6) <P: 202> [y(150)])
		inlineDot(x(0) <U: ooMeth> x(2) cache)
		callBI('Label' [x(1)]#[x(3)])
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15368)
lbl(15327)	putConstant(otherwise x(3))
		putConstant(false x(4))
		callBI('Dictionary.condGet' [x(2) x(3) x(4)]#[x(5)])
		testLiteral(x(5) false 15359)
lbl(15340)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(2))
		setConstant(lookup)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(15359)	move(x(1) x(0))
		tailSendMsg(otherwise x(5) 1 cache)
lbl(15368)	move(x(1) x(0))
		tailCall(x(5) 1)
		endDefinition(15302)
lbl(15376)	putConstant(newObject x(20))
		putConstant(2 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
lbl(15385)	definition(x(20) 15413 pid('FbNew' 3 pos('./standard/Object.oz' 100 2) nil 4) <P: 203> nil)
		allocateL2
		callBI(newObject [x(0)]#[x(3)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		call(y(1) 1)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(15385)
lbl(15413)	putRecord(fallback [apply new] x(23))
		setValue(x(3))
		setValue(x(20))
		putConstant(makeClass x(3))
		putConstant(7 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
		putConstant('Dictionary.markSafe' x(3))
		putConstant(1 x(20))
		callBI(builtin [x(3) x(20)]#[x(24)])
lbl(15439)	definition(x(3) 15548 pid('InitMap' 5 pos('./standard/Object.oz' 118 6) nil 8) <P: 204> [y(156) y(148)])
		match(x(0) ht(15533 [onScalar(nil 15448) onRecord('|' 2 15452)]))
lbl(15448)	unify(x(4) x(3))
		return
lbl(15452)	allocateL5
		getVarVar(x(0) x(5))
		inlineDot(x(0) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		createVariable(y(4))
		testBI('Dictionary.member' [x(1) x(6)]#[x(7)] 15483)
		unify(y(4) x(3))
		branch(15516)
lbl(15483)	callBI('Dictionary.put' [x(1) x(6) x(0)]#nil)
		putConstant(nil x(7))
		callBI('Dictionary.put' [x(2) x(6) x(7)]#nil)
		inlineDot(x(0) <U: ooParents> x(6) cache)
		putList(x(7))
		setValue(x(0))
		setValue(x(3))
		move(x(6) x(0))
		move(x(7) x(3))
		move(y(4) x(4))
		genFastCall(<P: 204> 10)
lbl(15516)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<P: 204> 11)
lbl(15533)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(128)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15439)
lbl(15548)	definition(x(3) 15658 pid('AddIG' 3 pos('./standard/Object.oz' 132 6) nil 4) <P: 205> [y(149) y(148)])
		match(x(1) ht(15643 [onScalar(nil 15557) onRecord('|' 2 15558)]))
lbl(15557)	return
lbl(15558)	allocateL7
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(1) cache)
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(6))
		testBool(y(5) 15601 15609)
		unify(y(6) y(4))
		branch(15620)
lbl(15601)	getList(y(6))
		unifyValue(y(1))
		unifyValue(y(4))
		branch(15620)
lbl(15609)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(15620)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL7
		genFastCall(<P: 205> 7)
lbl(15643)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(141)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15548)
lbl(15658)	definition(x(3) 15720 pid('InitIG' 2 pos('./standard/Object.oz' 144 6) nil 4) <P: 206> nil)
		match(x(0) ht(15705 [onScalar(nil 15667) onRecord('|' 2 15668)]))
lbl(15667)	return
lbl(15668)	allocateL2
		getVarVar(x(3) y(0))
		inlineDot(x(3) <U: ooId> x(0) cache)
		inlineDot(x(3) <U: ooParents> x(3) cache)
		move(x(1) y(1))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<P: 205> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 206> 5)
lbl(15705)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(147)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15658)
lbl(15720)	definition(x(3) 15769 pid('Remove' 3 pos('./standard/Object.oz' 152 2) nil 5) <P: 207> nil)
		match(x(0) ht(15754 [onScalar(nil 15729) onRecord('|' 2 15733)]))
lbl(15729)	getLiteral(nil x(2))
		return
lbl(15733)	getVarVar(x(0) x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 15744)
		unify(x(2) x(3))
		return
lbl(15744)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genFastCall(<P: 207> 7)
lbl(15754)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(155)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15720)
lbl(15769)	definition(x(3) 15907 pid('RemoveBefore' 6 pos('./standard/Object.oz' 158 2) nil 7) <P: 208> [y(156) y(149) y(153) y(148)])
		match(x(0) ht(15892 [onScalar(nil 15778) onRecord('|' 2 15782)]))
lbl(15778)	unify(x(5) x(4))
		return
lbl(15782)	allocateL8
		getVarVar(x(0) y(0))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 15885)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(0) y(6))
		move(x(6) x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 207> 6)
		testLiteral(y(7) nil 15855)
lbl(15821)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(2) x(2))
		callBI('Dictionary.get' [x(2) x(1)]#[x(6)])
		putList(x(4))
		setValue(x(6))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15855)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		move(y(7) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15885)	move(y(0) x(0))
		deAllocateL8
		genFastCall(<P: 208> 13)
lbl(15892)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15769)
lbl(15907)	definition(x(3) 15986 pid('RemoveLeader' 6 pos('./standard/Object.oz' 176 2) nil 7) <P: 209> nil)
		match(x(0) ht(15971 [onScalar(nil 15916) onRecord('|' 2 15920)]))
lbl(15916)	unify(x(5) x(4))
		return
lbl(15920)	allocateL6
		getVarVar(x(6) y(0))
		inlineDot(x(6) <U: ooId> x(6) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(5) y(4))
		move(y(1) x(0))
		move(x(6) x(1))
		createVariableMove(y(5) x(5))
		genFastCall(<P: 208> 12)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(5) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<P: 209> 13)
lbl(15971)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(182)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(15907)
lbl(15986)	definition(x(3) 16110 pid('GetPairs' 3 pos('./standard/Object.oz' 185 2) nil 5) <P: 210> [y(147) y(149)])
		callBI('Dictionary.entries' [x(1)]#[x(4)])
lbl(15995)	definition(x(1) 16096 pid('' 3 pos('./standard/Object.oz' 188 6) nil 7) unit [g(1) x(0)])
		shallowGuard(16083)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(16011)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.get' [x(0) x(3)]#[x(5)])
lbl(16018)	definition(x(6) 16068 pid('' 3 pos('./standard/Object.oz' 191 12) nil 6) unit [g(0) g(1) x(5)])
		move(g(1) x(3))
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getList(x(2))
		unifyVariable(x(0))
		unifyValue(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(5))
		move(g(2) x(0))
		inlineDot(x(0) <U: ooPrintName> x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(4) <U: ooPrintName> x(1) cache)
		unify(x(1) x(5))
		return
		endDefinition(16018)
lbl(16068)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(6) x(1))
		genFastCall(<P: 32> 9)
lbl(16083)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(15995)
lbl(16096)	move(x(4) x(0))
		move(x(2) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(15986)
lbl(16110)	definition(x(3) 16205 pid('Iterate' 4 pos('./standard/Object.oz' 199 2) nil 7) <P: 211> [y(151)])
		allocateL4
		callBI('Dictionary.keys' [x(2)]#[x(6)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(nil x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<P: 209> 12)
		testLiteral(y(3) nil 16186)
lbl(16149)	move(y(1) x(0))
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		testLiteral(x(1) nil 16164)
		getLiteral(nil y(2))
		deAllocateL4
		return
lbl(16164)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 210> 6)
		putRecord(object 2 x(0))
		setConstant(order)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(16186)	getList(y(2))
		unifyValVar(y(3) x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 211> 9)
		endDefinition(16110)
lbl(16205)	definition(x(3) 16294 pid('Precedence' 2 pos('./standard/Object.oz' 209 6) nil 6) <P: 212> [y(132) y(153)])
		allocateL5
		callBI('NewDictionary' nil#[x(2)])
		callBI('NewDictionary' nil#[x(3)])
		putList(x(5))
		setValue(x(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		putConstant(nil x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 204> 10)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		genFastCall(<P: 206> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooId> x(1) cache)
		move(y(3) x(2))
		callBI('Dictionary.remove' [x(2) x(1)]#nil)
		putList(x(4))
		setValue(y(0))
		setConstant(nil)
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		deAllocateL5
		genFastCall(<P: 211> 9)
		endDefinition(16205)
lbl(16294)	definition(x(3) 16383 pid('SetOne' 4 pos('./standard/Object.oz' 227 6) nil 10) <P: 213> [y(148) y(153)])
		allocateL3
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(5) cache)
		putConstant(fast x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(8)])
		putConstant(default x(6))
		putConstant(<N: NoArg> x(7))
		callBI('CondSelect' [x(0) x(6) x(7)]#[x(9)])
		callBI('Dictionary.put' [x(1) x(4) x(5)]#nil)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(9) y(2))
		testLiteral(x(8) <N: NoArg> 16351)
		callBI('Dictionary.remove' [x(2) x(4)]#nil)
		branch(16354)
lbl(16351)	callBI('Dictionary.put' [x(2) x(4) x(8)]#nil)
lbl(16354)	testLiteral(y(2) <N: NoArg> 16368)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL3
		return
lbl(16368)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
		endDefinition(16294)
lbl(16383)	definition(x(3) 16450 pid('SetMethods' 5 pos('./standard/Object.oz' 243 6) nil 6) <P: 214> nil)
		testNumber(x(0) 0 16394)
		return
lbl(16394)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
		move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 214> 11)
		endDefinition(16383)
lbl(16450)	definition(x(3) 16529 pid('AddMethods' 5 pos('./standard/Object.oz' 256 2) nil 8) <P: 215> [y(156)])
		testNumber(x(0) 0 16461)
		return
lbl(16461)	allocateL5
		callBI('.' [x(1) x(0)]#[x(5)])
		inlineDot(x(5) 1 x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('Dictionary.member' [x(2) x(6)]#[x(7)] 16490)
		branch(16504)
lbl(16490)	move(x(5) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		move(y(4) x(3))
		genFastCall(<P: 213> 8)
lbl(16504)	move(y(0) x(0))
		inlineMinus1(x(0) x(5))
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL5
		genFastCall(<P: 215> 11)
		endDefinition(16450)
lbl(16529)	definition(x(3) 16657 pid('SafeAdd' 7 pos('./standard/Object.oz' 266 2) nil 11) <P: 216> [y(156) y(149) y(148)])
		testNumber(x(0) 0 16540)
		return
lbl(16540)	allocateL7
		callBI('.' [x(1) x(0)]#[x(7)])
		inlineDot(x(7) 1 x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		testBI('Dictionary.member' [x(3) x(8)]#[x(9)] 16604)
		callBI('Dictionary.get' [x(3) x(8)]#[x(7)])
		inlineDot(x(2) <U: ooPrintName> x(9) cache)
		inlineDot(x(7) <U: ooPrintName> x(7) cache)
		putRecord(object 5 x(10))
		setConstant(sharing)
		setValue(x(9))
		setValue(x(7))
		setConstant(method)
		setValue(x(8))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(16604)	testBI('Dictionary.member' [x(4) x(8)]#[x(9)] 16610)
		branch(16627)
lbl(16610)	callBI('Dictionary.put' [x(3) x(8) x(2)]#nil)
		move(x(7) x(0))
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		move(y(6) x(3))
		genFastCall(<P: 213> 8)
lbl(16627)	move(y(0) x(0))
		inlineMinus1(x(0) x(7))
		move(x(7) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		deAllocateL7
		genFastCall(<P: 216> 15)
		endDefinition(16529)
lbl(16657)	definition(x(3) 16744 pid('SafeAddMethods' 5 pos('./standard/Object.oz' 285 2) nil 9) <P: 217> nil)
		match(x(0) ht(16729 [onScalar(nil 16666) onRecord('|' 2 16667)]))
lbl(16666)	return
lbl(16667)	allocateL5
		getVarVar(x(7) y(0))
		inlineDot(x(7) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) x(1))
		move(x(8) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		moveMoveYXYX(y(3) x(5) y(4) x(6))
		genFastCall(<P: 216> 14)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 217> 11)
lbl(16729)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(290)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16657)
lbl(16744)	definition(x(3) 16852 pid('InheritMethods' 4 pos('./standard/Object.oz' 293 2) nil 7) <P: 218> [y(132)])
		match(x(0) ht(16837 [onScalar(nil 16753) onRecord('|' 2 16754)]))
lbl(16753)	return
lbl(16754)	allocateL4
		getVarVar(x(0) x(5))
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		testLiteral(x(4) nil 16806)
		inlineDot(x(6) <U: ooNewMeth> x(0) cache)
		callBI('Width' [x(0)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 215> 10)
		branch(16823)
lbl(16806)	callBI('NewDictionary' nil#[x(6)])
		move(x(6) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		genFastCall(<P: 217> 10)
lbl(16823)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 218> 9)
lbl(16837)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(302)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16744)
lbl(16852)	definition(x(3) 16913 pid('AddOther' 3 pos('./standard/Object.oz' 312 6) nil 5) <P: 219> [y(156) y(148)])
		match(x(0) ht(16898 [onScalar(nil 16861) onRecord('|' 2 16862)]))
lbl(16861)	return
lbl(16862)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('Dictionary.member' [x(2) x(0)]#[x(4)] 16880)
		branch(16886)
lbl(16880)	callBI('.' [x(1) x(0)]#[x(4)])
		callBI('Dictionary.put' [x(2) x(0) x(4)]#nil)
lbl(16886)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 219> 7)
lbl(16898)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(319)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16852)
lbl(16913)	definition(x(3) 17023 pid('SafeAdd' 5 pos('./standard/Object.oz' 322 6) nil 9) <P: 220> [y(156) y(149) y(148)])
		match(x(0) ht(17008 [onScalar(nil 16922) onRecord('|' 2 16923)]))
lbl(16922)	return
lbl(16923)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('Dictionary.member' [x(3) x(0)]#[x(6)] 16976)
		callBI('Dictionary.get' [x(3) x(0)]#[x(6)])
		inlineDot(x(2) <U: ooPrintName> x(7) cache)
		inlineDot(x(6) <U: ooPrintName> x(6) cache)
		putRecord(object 5 x(8))
		setConstant(sharing)
		setValue(x(7))
		setValue(x(6))
		setConstant('feature or attribute')
		setValue(x(0))
		callBI('Exception.raiseError' [x(8)]#nil)
lbl(16976)	testBI('Dictionary.member' [x(4) x(0)]#[x(6)] 16982)
		branch(16991)
lbl(16982)	callBI('.' [x(1) x(0)]#[x(6)])
		callBI('Dictionary.put' [x(4) x(0) x(6)]#nil)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
lbl(16991)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL5
		genFastCall(<P: 220> 11)
lbl(17008)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(338)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(16913)
lbl(17023)	definition(x(3) 17097 pid('SafeAddOther' 4 pos('./standard/Object.oz' 341 6) nil 6) <P: 221> nil)
		match(x(0) ht(17082 [onScalar(nil 17032) onRecord('|' 2 17033)]))
lbl(17032)	return
lbl(17033)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		callBI('Arity' [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		genFastCall(<P: 220> 10)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<P: 221> 9)
lbl(17082)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(346)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17023)
lbl(17097)	definition(x(3) 17190 pid('InheritOther' 3 pos('./standard/Object.oz' 349 6) nil 6) <P: 222> [y(132)])
		match(x(0) ht(17175 [onScalar(nil 17106) onRecord('|' 2 17107)]))
lbl(17106)	return
lbl(17107)	allocateL3
		getVarVar(x(0) x(3))
		getList(x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(5) nil 17149)
		callBI('.' [x(4) x(2)]#[x(0)])
		callBI('Arity' [x(0)]#[x(4)])
		move(x(0) x(1))
		move(x(4) x(0))
		move(y(0) x(2))
		genFastCall(<P: 219> 6)
		branch(17163)
lbl(17149)	callBI('NewDictionary' nil#[x(4)])
		move(x(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<P: 221> 8)
lbl(17163)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 222> 7)
lbl(17175)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(356)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17097)
lbl(17190)	definition(x(3) 17277 pid('Free' 3 pos('./standard/Object.oz' 365 6) nil 6) <P: 223> nil)
		match(x(0) ht(17262 [onScalar(nil 17199) onRecord('|' 2 17203)]))
lbl(17199)	getLiteral(nil x(2))
		return
lbl(17203)	allocateL3
		getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(4)]#[x(5)] 17250)
lbl(17222)	testLiteral(x(4) <U: ooFreeFlag> 17250)
lbl(17226)	getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17250)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 223> 7)
lbl(17262)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17190)
lbl(17277)	definition(x(3) 17318 pid('MakeFree' 2 pos('./standard/Object.oz' 375 6) nil 4) <P: 224> [y(2)])
		allocateL2
		callBI('Arity' [x(0)]#[x(3)])
		move(x(1) y(0))
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 223> 6)
		putConstant(free x(0))
		move(y(1) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(17277)
lbl(17318)	definition(x(3) 17335 pid('Add' 2 pos('./standard/Object.oz' 382 6) nil 2) <P: 225> nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(<U: ooFreeFlag>)
		return
		endDefinition(17318)
lbl(17335)	definition(x(20) 17374 pid('AddFree' 3 pos('./standard/Object.oz' 386 6) nil 3) <P: 226> [x(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('AdjoinList' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(17335)
lbl(17374)	definition(x(3) 17465 pid('CheckParents' 2 pos('./standard/Object.oz' 395 3) nil 5) <P: 227> nil)
		match(x(0) ht(17450 [onScalar(nil 17383) onRecord('|' 2 17384)]))
lbl(17383)	return
lbl(17384)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(<U: ooPrintName> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17428)
		putConstant(<U: ooParents> x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 17409)
		branch(17441)
lbl(17409)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(3))
		setConstant(final)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17428)	putRecord(object 3 x(3))
		setConstant(inheritanceFromNonClass)
		setValue(x(0))
		setValue(y(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(17441)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 227> 5)
lbl(17450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(406)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17374)
lbl(17465)	definition(x(3) 17524 pid('HasPropertyParents' 3 pos('./standard/Object.oz' 412 3) nil 5) <P: 228> nil)
		match(x(0) ht(17509 [onScalar(nil 17474) onRecord('|' 2 17478)]))
lbl(17474)	getLiteral(false x(2))
		return
lbl(17478)	getVarVar(x(0) x(3))
		callBI('.' [x(0) x(1)]#[x(4)])
		testBool(x(4) 17492 17498)
		getLiteral(true x(2))
		return
lbl(17492)	move(x(3) x(0))
		genFastCall(<P: 228> 7)
lbl(17498)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17509)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(415)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(17465)
lbl(17524)	definition(x(3) 18113 pid('`class`' 7 pos('./standard/Object.oz' 423 3) nil 7) <P: 229> [x(23) y(132) y(155) x(19) y(104)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYYX(x(6) y(6) y(5) x(1))
		genFastCall(<P: 227> 4)
		move(y(4) x(1))
		putConstant(locking x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(8))
		testBool(y(7) 17578 17591)
		getLiteral(true y(8))
		branch(17602)
lbl(17578)	moveMoveYXYX(y(0) x(0) y(8) x(2))
		putConstant(<U: ooLocking> x(1))
		genFastCall(<P: 228> 6)
		branch(17602)
lbl(17591)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(432)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17602)	move(y(4) x(1))
		putConstant(native x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(9))
		testBool(y(7) 17625 17638)
		getLiteral(true y(9))
		branch(17649)
lbl(17625)	moveMoveYXYX(y(0) x(0) y(9) x(2))
		putConstant(<U: ooNative> x(1))
		genFastCall(<P: 228> 6)
		branch(17649)
lbl(17638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(433)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(17649)	move(y(4) x(1))
		putConstant(final x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooId> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooNewAttr> <U: ooNewFeat> <U: ooNewMeth> <U: ooParents> <U: ooPrintName> <U: ooUnFreeFeat>] y(4))
		setVariable(y(10))
		setVariable(y(11))
		setValue(g(0))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(x(0))
		setValue(y(8))
		setVariable(y(14))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(1))
		setVariable(x(1))
		setValue(y(5))
		setVariable(y(15))
		callBI('NewName' nil#[x(2)])
		unify(x(2) x(0))
		move(y(0) x(0))
		genFastCall(<P: 28> 4)
		match(y(0) ht(18009 [onScalar(nil 17710) onRecord('|' 2 17766)]))
lbl(17710)	callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		unify(y(10) y(2))
		unify(y(15) y(3))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17766)	getVarVar(y(0) x(0))
		testLiteral(x(0) nil 17875)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(14))
		inlineDot(x(0) <U: ooFastMeth> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(12))
		inlineDot(x(0) <U: ooDefaults> x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(2)])
		unify(x(2) y(11))
		move(y(1) x(1))
		callBI('Width' [x(1)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(14) x(2) y(12) x(3))
		move(y(11) x(4))
		genFastCall(<P: 214> 10)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		move(y(2) x(2))
		callBI('Adjoin' [x(1) x(2)]#[x(3)])
		unify(x(3) y(10))
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		move(y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(15))
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(17875)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 212> 4)
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(14))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(12))
		callBI('NewDictionary' nil#[x(0)])
		unify(x(0) y(11))
		move(y(1) x(0))
		callBI('Width' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(14) x(2))
		moveMoveYXYX(y(12) x(3) y(11) x(4))
		genFastCall(<P: 214> 10)
		moveMoveYXYX(y(0) x(0) y(14) x(1))
		moveMoveYXYX(y(12) x(2) y(11) x(3))
		genFastCall(<P: 218> 8)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewAttr> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(10) x(2))
		putConstant(a x(0))
		genFastCall(<P: 108> 6)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 184> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(<U: ooNewFeat> x(2))
		genFastCall(<P: 222> 6)
		moveMoveYXYX(y(1) x(1) y(15) x(2))
		putConstant(f x(0))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(15) x(0) y(13) x(1))
		genFastCall(<P: 224> 4)
		branch(18022)
lbl(18009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(503)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18022)	move(y(14) x(0))
		callBI('Dictionary.markSafe' [x(0)]#nil)
		move(y(12) x(1))
		callBI('Dictionary.markSafe' [x(1)]#nil)
		move(y(11) x(2))
		callBI('Dictionary.markSafe' [x(2)]#nil)
		createVariable(y(0))
		testBool(y(7) 18072 18077)
		getRecord('class' [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] y(0))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(g(0))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(8))
		unifyValue(y(14))
		unifyValue(y(9))
		unifyValue(y(5))
		unifyValue(y(15))
		branch(18088)
lbl(18072)	unify(y(0) y(4))
		branch(18088)
lbl(18077)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(512)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(18088)	moveMoveYXYX(y(12) x(0) y(0) x(1))
		moveMoveYXYX(y(15) x(2) y(11) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		callBI(makeClass [x(0) x(1) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(6))
		deAllocateL
		return
		endDefinition(17524)
lbl(18113)	definition(x(19) 18259 pid('`extend`' 4 pos('./standard/Object.oz' 527 3) nil 12) <P: 230> [x(23)])
		allocateL10
		inlineDot(x(0) <U: ooDefaults> x(4) cache)
		inlineDot(x(0) <U: ooLocking> x(5) cache)
		inlineDot(x(0) <U: ooNative> x(6) cache)
		inlineDot(x(0) <U: ooMeth> x(7) cache)
		inlineDot(x(0) <U: ooFastMeth> x(8) cache)
		inlineDot(x(0) <U: ooAttr> x(9) cache)
		inlineDot(x(0) <U: ooPrintName> x(10) cache)
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		callBI('Adjoin' [x(0) x(1)]#[x(11)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 226> 6)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 224> 4)
		putRecord(c [<U: ooAttr> <U: ooDefaults> <U: ooFallback> <U: ooFastMeth> <U: ooFreeFeatR> <U: ooLocking> <U: ooMeth> <U: ooNative> <U: ooPrintName> <U: ooUnFreeFeat>] x(0))
		setValue(y(6))
		setValue(y(1))
		setValue(g(0))
		setValue(y(5))
		setValue(y(9))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		setValue(y(7))
		setValue(y(8))
		moveMoveYXYX(y(5) x(1) y(8) x(2))
		moveMoveYXYX(y(1) x(3) y(2) x(4))
		move(y(3) x(5))
		callBI(makeClass [x(1) x(0) x(2) x(3) x(4) x(5)]#[x(6)])
		unify(x(6) y(0))
		deAllocateL10
		return
		endDefinition(18113)
lbl(18259)	putConstant('NewName' x(20))
		putConstant(1 x(23))
		callBI(builtin [x(20) x(23)]#[x(24)])
		moveMoveXYXY(x(1) y(172) x(4) y(173))
		moveMoveXYXY(x(5) y(174) x(6) y(175))
		moveMoveXYXY(x(7) y(176) x(8) y(177))
		moveMoveXYXY(x(9) y(178) x(13) y(179))
		moveMoveXYXY(x(21) y(180) x(22) y(181))
		moveMoveXYXY(x(19) y(182) x(18) y(183))
		moveMoveXYXY(x(2) y(184) x(14) y(185))
		moveMoveXYXY(x(17) y(186) x(16) y(187))
		moveMoveXYXY(x(15) y(188) x(0) y(189))
		moveMoveXYXY(x(10) y(190) x(11) y(191))
		moveMoveXYXY(x(12) y(192) x(3) y(193))
		move(x(24) x(1))
		putConstant(ooPrivate x(0))
		genFastCall(<P: 1> 4)
		putConstant('@' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('@' x(0))
		genFastCall(<P: 1> 4)
		putConstant('<-' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant('<-' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooExch x(2))
		putConstant(3 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooExch x(0))
		genFastCall(<P: 1> 4)
		putConstant(',' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(',' x(0))
		genFastCall(<P: 1> 4)
		putConstant(ooGetLock x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		putConstant(ooGetLock x(0))
		genFastCall(<P: 1> 4)
		move(y(193) x(1))
		putConstant('class' x(0))
		genFastCall(<P: 1> 4)
lbl(18416)	definition(x(7) 18425 pid('BaseObject,noop/fast' 0 pos('./standard/Object.oz' 572 6) nil 0) <P: 231> nil)
		return
		endDefinition(18416)
lbl(18425)	definition(x(8) 18439 pid('BaseObject,noop/slow' 1 pos('./standard/Object.oz' 572 6) nil 1) unit nil)
		getLiteral(noop x(0))
		genFastCall(<P: 231> 1)
		endDefinition(18425)
lbl(18439)	putRecord('#' [1 2 fast] x(9))
		setConstant(noop)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('BaseObject' x(5))
		createVariableMove(y(194) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Slaves>] x(2))
		setConstant(nil)
lbl(18488)	definition(x(7) 18505 pid('MasterObject,init/fast' 0 pos('./standard/Object.oz' 590 2) nil 1) <P: 232> nil)
		putConstant(nil x(0))
		inlineAssign(<N: Slaves> x(0) cache)
		return
		endDefinition(18488)
lbl(18505)	definition(x(8) 18519 pid('MasterObject,init/slow' 1 pos('./standard/Object.oz' 590 2) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 232> 1)
		endDefinition(18505)
lbl(18519)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(18529)	definition(x(7) 18546 pid('MasterObject,getSlaves/fast' 1 pos('./standard/Object.oz' 593 2) nil 2) <P: 233> nil)
		inlineAt(<N: Slaves> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(18529)
lbl(18546)	definition(x(8) 18572 pid('MasterObject,getSlaves/slow' 1 pos('./standard/Object.oz' 593 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 233> 3)
		endDefinition(18546)
lbl(18572)	putRecord('#' [1 2 fast] x(10))
		setConstant(getSlaves)
		setValue(x(8))
		setValue(x(7))
lbl(18582)	definition(x(7) 18606 pid('MasterObject,AddSlave/fast' 1 pos('./standard/Object.oz' 596 2) nil 4) <P: 234> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		putConstant(<N: Slaves> x(0))
		callBI(ooExch [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(18582)
lbl(18606)	definition(x(8) 18632 pid('MasterObject,AddSlave/slow' 1 pos('./standard/Object.oz' 596 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 234> 3)
		endDefinition(18606)
lbl(18632)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: AddSlave>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(195))
lbl(18644)	definition(x(7) 18676 pid('MasterObject,DoDel/fast' 3 pos('./standard/Object.oz' 601 2) nil 5) <P: 235> [y(195)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 18664)
		unify(x(2) x(3))
		return
lbl(18664)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18644)
lbl(18676)	definition(x(8) 18717 pid('MasterObject,DoDel/slow' 1 pos('./standard/Object.oz' 601 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 235> 7)
		endDefinition(18676)
lbl(18717)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: DoDel>)
		setValue(x(8))
		setValue(x(7))
lbl(18727)	definition(x(7) 18755 pid('MasterObject,DelSlave/fast' 1 pos('./standard/Object.oz' 606 2) nil 5) <P: 236> [y(195)])
		putConstant(<N: Slaves> x(3))
		createVariable(x(1))
		callBI(ooExch [x(3) x(1)]#[x(4)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <N: DoDel> true 3) 0)
		endDefinition(18727)
lbl(18755)	definition(x(8) 18781 pid('MasterObject,DelSlave/slow' 1 pos('./standard/Object.oz' 606 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 236> 3)
		endDefinition(18755)
lbl(18781)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: DelSlave>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(195) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MasterObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putRecord('attr' [<N: Master>] x(2))
		setConstant(unit)
lbl(18832)	definition(x(7) 18883 pid('SlaveObject,becomeSlave/fast' 1 pos('./standard/Object.oz' 617 2) nil 4) <P: 237> nil)
		putConstant(<N: Master> x(1))
		createVariable(x(2))
		callBI(ooExch [x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 18869)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(<N: AddSlave> y(0) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(18869)	unify(x(2) x(3))
		putRecord(object 1 x(0))
		setConstant(slaveNotFree)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(18832)
lbl(18883)	definition(x(8) 18909 pid('SlaveObject,becomeSlave/slow' 1 pos('./standard/Object.oz' 617 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 237> 3)
		endDefinition(18883)
lbl(18909)	putRecord('#' [1 2 fast] x(9))
		setConstant(becomeSlave)
		setValue(x(8))
		setValue(x(7))
lbl(18919)	definition(x(7) 18942 pid('SlaveObject,isFree/fast' 1 pos('./standard/Object.oz' 629 2) nil 4) <P: 238> nil)
		inlineAt(<N: Master> x(1) cache)
		putConstant(unit x(2))
		callBI('==' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(18919)
lbl(18942)	definition(x(8) 18968 pid('SlaveObject,isFree/slow' 1 pos('./standard/Object.oz' 629 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 238> 3)
		endDefinition(18942)
lbl(18968)	putRecord('#' [1 2 fast] x(10))
		setConstant(isFree)
		setValue(x(8))
		setValue(x(7))
lbl(18978)	definition(x(7) 19024 pid('SlaveObject,free/fast' 0 pos('./standard/Object.oz' 632 2) nil 3) <P: 239> nil)
		putConstant(<N: Master> x(0))
		createVariable(x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		testLiteral(x(2) unit 19005)
		putRecord(object 1 x(0))
		setConstant(slaveAlreadyFree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(19005)	allocateL1
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(<N: DelSlave> x(2) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(18978)
lbl(19024)	definition(x(8) 19038 pid('SlaveObject,free/slow' 1 pos('./standard/Object.oz' 632 2) nil 1) unit nil)
		getLiteral(free x(0))
		genFastCall(<P: 239> 1)
		endDefinition(19024)
lbl(19038)	putRecord('#' [1 2 fast] x(11))
		setConstant(free)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SlaveObject' x(5))
		createVariableMove(y(196) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(19073)	definition(x(7) 19134 pid('MetaObject,GetAttr/fast' 2 pos('./standard/Object.oz' 651 2) nil 5) <P: 240> nil)
		match(x(0) ht(19119 [onScalar(nil 19082) onRecord('|' 2 19086)]))
lbl(19082)	getLiteral(nil x(1))
		return
lbl(19086)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		callBI('@' [x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetAttr> x(4) 2 cache)
lbl(19119)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(654)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19073)
lbl(19134)	definition(x(8) 19169 pid('MetaObject,GetAttr/slow' 1 pos('./standard/Object.oz' 651 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 240> 5)
		endDefinition(19134)
lbl(19169)	putRecord('#' [1 2 fast] x(9))
		setConstant(<N: GetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19179)	definition(x(7) 19242 pid('MetaObject,GetFeat/fast' 2 pos('./standard/Object.oz' 657 2) nil 6) <P: 241> nil)
		match(x(0) ht(19227 [onScalar(nil 19188) onRecord('|' 2 19192)]))
lbl(19188)	getLiteral(nil x(1))
		return
lbl(19192)	getVarVar(x(0) x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getListValVar(x(1) x(0) x(4))
		getSelf(x(5))
		callBI('.' [x(5) x(0)]#[x(1)])
		unify(x(1) x(4))
		getSelf(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		tailSendMsg(<N: GetFeat> x(4) 2 cache)
lbl(19227)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(660)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19179)
lbl(19242)	definition(x(8) 19277 pid('MetaObject,GetFeat/slow' 1 pos('./standard/Object.oz' 657 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 241> 5)
		endDefinition(19242)
lbl(19277)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: GetFeat>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(197))
lbl(19289)	definition(x(7) 19394 pid('MetaObject,toChunk/fast' 1 pos('./standard/Object.oz' 663 2) nil 4) <P: 242> [y(197) y(172)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		putRecord(o ['attr' 'class' 'feat'] x(1))
		setValue(y(2))
		setValue(y(1))
		setValue(y(3))
		putRecord(c [<N: PRIVATE>] x(0))
		setValue(x(1))
		callBI('NewChunk' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL4
		return
		endDefinition(19289)
lbl(19394)	definition(x(8) 19420 pid('MetaObject,toChunk/slow' 1 pos('./standard/Object.oz' 663 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 242> 3)
		endDefinition(19394)
lbl(19420)	putRecord('#' [1 2 fast] x(11))
		setConstant(toChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19430)	definition(x(7) 19475 pid('MetaObject,SetAttr/fast' 1 pos('./standard/Object.oz' 673 2) nil 3) <P: 243> nil)
		match(x(0) ht(19460 [onScalar(nil 19439) onRecord('|' 2 19440)]))
lbl(19439)	return
lbl(19440)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('<-' [x(1) x(2)]#nil)
		getSelf(x(2))
		tailSendMsg(<N: SetAttr> x(2) 1 cache)
lbl(19460)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(676)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19430)
lbl(19475)	definition(x(8) 19501 pid('MetaObject,SetAttr/slow' 1 pos('./standard/Object.oz' 673 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 243> 3)
		endDefinition(19475)
lbl(19501)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: SetAttr>)
		setValue(x(8))
		setValue(x(7))
lbl(19511)	definition(x(7) 19561 pid('MetaObject,SetFeat/fast' 1 pos('./standard/Object.oz' 679 2) nil 5) <P: 244> nil)
		match(x(0) ht(19546 [onScalar(nil 19520) onRecord('|' 2 19521)]))
lbl(19520)	return
lbl(19521)	getVarVar(x(1) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getSelf(x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		unify(x(4) x(2))
		getSelf(x(2))
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
lbl(19546)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(682)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(19511)
lbl(19561)	definition(x(8) 19587 pid('MetaObject,SetFeat/slow' 1 pos('./standard/Object.oz' 679 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 244> 3)
		endDefinition(19561)
lbl(19587)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: SetFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(19597)	definition(x(7) 19662 pid('MetaObject,frmChunk/fast' 1 pos('./standard/Object.oz' 685 2) nil 4) <P: 245> [y(197)])
		allocateL2
		putRecord(o ['attr' 'class' 'feat'] x(2))
		setVariable(y(0))
		setVariable(x(1))
		setVariable(y(1))
		inlineDot(x(0) <N: PRIVATE> x(3) cache)
		unify(x(3) x(2))
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		getSelf(x(0))
		call(x(2) 2)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(<N: SetAttr> x(1) 1 cache)
		getSelf(x(2))
		move(y(1) x(0))
		deAllocateL2
		tailSendMsg(<N: SetFeat> x(2) 1 cache)
		endDefinition(19597)
lbl(19662)	definition(x(8) 19688 pid('MetaObject,frmChunk/slow' 1 pos('./standard/Object.oz' 685 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 245> 3)
		endDefinition(19662)
lbl(19688)	putRecord('#' [1 2 fast] x(14))
		setConstant(frmChunk)
		setValue(x(8))
		setValue(x(7))
lbl(19698)	definition(x(7) 19816 pid('MetaObject,clone/fast' 1 pos('./standard/Object.oz' 693 2) nil 4) <P: 246> [y(197)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		getSelf(x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooAttr> x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(<N: GetAttr> x(3) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(<N: SetAttr> y(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(1))
		move(x(1) x(3))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		sendMsg(<N: GetFeat> x(3) 2 cache)
		move(y(1) x(0))
		sendMsg(<N: SetFeat> y(3) 1 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(19698)
lbl(19816)	definition(x(8) 19842 pid('MetaObject,clone/slow' 1 pos('./standard/Object.oz' 693 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 246> 3)
		endDefinition(19816)
lbl(19842)	putRecord('#' [1 2 fast] x(15))
		setConstant(clone)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MetaObject' x(5))
		createVariableMove(y(198) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(object [',' '<-' '@' base 'class' is master meta new send slave] y(199))
		setVariable(x(0))
		setVariable(x(1))
		setVariable(x(2))
		setValue(y(194))
		setValue(y(193))
		setValue(y(180))
		setValue(y(195))
		setValue(y(198))
		setValue(y(181))
		setVariable(x(3))
		setValue(y(196))
		putConstant(',' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		unify(x(6) x(0))
		putConstant('@' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(0)])
		unify(x(0) x(2))
		putConstant('<-' x(2))
		putConstant(2 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(1))
		putConstant(send x(2))
		putConstant(3 x(4))
		callBI(builtin [x(2) x(4)]#[x(0)])
		unify(x(0) x(3))
lbl(19965)	definition(x(0) 19991 pid('IsClass' 2 pos('./standard/Class.oz' 29 0) nil 4) <P: 247> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 19985)
		putConstant(<U: ooPrintName> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(19985)	getLiteral(false x(1))
		return
		endDefinition(19965)
lbl(19991)	putConstant(getClass x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
lbl(20000)	definition(x(2) 20062 pid('AssertClass' 2 pos('./standard/Class.oz' 36 3) nil 2) <P: 248> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 20024 20049)
		deAllocateL3
		return
lbl(20024)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setConstant('class')
		setConstant(1)
		setConstant('Module Class')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20049)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(37)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20000)
lbl(20062)	definition(x(2) 20110 pid('AssertNonFinal' 2 pos('./standard/Class.oz' 43 3) nil 3) <P: 249> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 20089)
		deAllocateL2
		return
lbl(20089)	inlineDot(x(0) <U: ooPrintName> x(0) cache)
		putRecord(object 3 x(1))
		setConstant(fromFinalClass)
		setValue(x(0))
		setValue(y(1))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20062)
lbl(20110)	definition(x(2) 20144 pid('GetParents' 2 pos('./standard/Class.oz' 50 3) nil 2) <P: 250> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.parents' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooParents> x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20110)
lbl(20144)	definition(x(3) 20181 pid('MethodNames' 2 pos('./standard/Class.oz' 55 3) nil 2) <P: 251> [y(151)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.methodNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooMeth> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20144)
lbl(20181)	definition(x(4) 20218 pid('AttrNames' 2 pos('./standard/Class.oz' 60 3) nil 2) <P: 252> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.attrNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooAttr> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20181)
lbl(20218)	definition(x(5) 20255 pid('FeatNames' 2 pos('./standard/Class.oz' 65 3) nil 2) <P: 253> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.featNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		inlineDot(x(0) <U: ooFreeFeatR> x(0) cache)
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(20218)
lbl(20255)	definition(x(6) 20362 pid('PropNames' 2 pos('./standard/Class.oz' 70 3) nil 3) <P: 254> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Class.propNames' x(1))
		genFastCall(<P: 248> 4)
		move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 20326)
		getList(y(1))
		unifyLiteral(final)
		unifyVariable(x(1))
		inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20310 20315)
		getList(x(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20310)	getLiteral(nil x(1))
		deAllocateL2
		return
lbl(20315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20326)	inlineDot(x(0) <U: ooLocking> x(0) cache)
		testBool(x(0) 20344 20349)
		getList(y(1))
		unifyLiteral(locking)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(20344)	getLiteral(nil y(1))
		deAllocateL2
		return
lbl(20349)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(76)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20255)
lbl(20362)	definition(x(7) 20432 pid('HasProperty' 3 pos('./standard/Class.oz' 80 3) nil 3) <P: 255> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		putConstant('Class.property' x(1))
		genFastCall(<P: 248> 4)
		match(y(1) ht(20417 [onScalar(final 20386) onScalar(locking 20403)]))
lbl(20386)	move(y(0) x(0))
		putConstant(<U: ooParents> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(2))
		deAllocateL3
		return
lbl(20403)	move(y(0) x(0))
		inlineDot(x(0) <U: ooLocking> x(1) cache)
		unify(x(1) y(2))
		deAllocateL3
		return
lbl(20417)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(20362)
lbl(20432)	definition(x(8) 20507 pid('SubClassOfParent' 3 pos('./standard/Class.oz' 92 6) nil 3) <P: 256> nil)
		match(x(0) ht(20492 [onScalar(nil 20441) onRecord('|' 2 20445)]))
lbl(20441)	getLiteral(false x(2))
		return
lbl(20445)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 257> 6)
		testBool(y(3) 20469 20481)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20469)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
lbl(20481)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(20492)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(95)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(20432)
lbl(20507)	definition(x(8) 20573 pid('SubClass' 3 pos('./standard/Class.oz' 98 6) nil 3) <P: 257> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 248> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 20544)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(20544)	putConstant('IsInstanceOf' x(1))
		genFastCall(<P: 249> 4)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 250> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 256> 7)
		endDefinition(20507)
lbl(20573)	definition(x(8) 20590 pid('IsInstanceOf' 3 pos('./standard/Class.oz' 106 6) nil 4) <P: 258> nil)
		callBI(getClass [x(0)]#[x(3)])
		move(x(3) x(0))
		genFastCall(<P: 257> 7)
		endDefinition(20573)
lbl(20590)	getRecord('class' [attrNames extendFeatures featNames get getFeature hasFeature hasProperty is isInstanceOf methodNames parents propNames] y(197))
		unifyValue(x(4))
		unifyValue(y(182))
		unifyValue(x(5))
		unifyValVar(x(1) x(9))
		unifyVariable(x(10))
		unifyValue(x(7))
		unifyValue(x(0))
		unifyValue(x(8))
		unifyValue(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
lbl(20617)	definition(x(2) 20666 pid('Class.getFeature' 3 pos('./standard/Class.oz' 120 19) nil 5) <P: 259> nil)
		allocateL2
		inlineDot(x(0) <U: ooUnFreeFeat> x(3) cache)
		callBI('.' [x(3) x(1)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		testBI('IsDet' [x(4)]#[x(3)] 20659)
lbl(20642)	testLiteral(y(1) <U: ooFreeFlag> 20659)
lbl(20646)	putRecord(kernel 3 x(2))
		setConstant('.')
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(20659)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(20617)
lbl(20666)	unify(x(2) x(9))
lbl(20669)	definition(x(2) 20711 pid('Class.hasFeature' 3 pos('./standard/Class.oz' 128 19) nil 5) <P: 260> nil)
		allocateL1
		inlineDot(x(0) <U: ooUnFreeFeat> x(0) cache)
		putConstant(<U: ooFreeFlag> x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		move(x(2) y(0))
		testBI('IsDet' [x(4)]#[x(0)] 20704)
lbl(20695)	testLiteral(x(4) <U: ooFreeFlag> 20704)
lbl(20699)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(20704)	getLiteral(true y(0))
		deAllocateL1
		return
		endDefinition(20669)
lbl(20711)	unify(x(2) x(10))
		putConstant('BitArray.is' x(2))
		putConstant(2 x(7))
		callBI(builtin [x(2) x(7)]#[x(8)])
		putRecord(bitArray [and card clear clone complementToList disjoint high is low new nimpl 'or' set test toList] y(182))
		setVariable(x(2))
		setVariable(x(7))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setValue(x(8))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putConstant('BitArray.new' x(21))
		putConstant(3 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(15))
		putConstant('BitArray.set' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(18))
		putConstant('BitArray.clear' x(21))
		putConstant(2 x(22))
		callBI(builtin [x(21) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('BitArray.test' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(19))
		putConstant('BitArray.low' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(14))
		putConstant('BitArray.high' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(13))
		putConstant('BitArray.clone' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(10))
		putConstant('BitArray.or' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(17))
		putConstant('BitArray.and' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(2))
		putConstant('BitArray.nimpl' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(16))
		putConstant('BitArray.disjoint' x(9))
		putConstant(3 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(12))
		putConstant('BitArray.card' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(7))
		putConstant('BitArray.toList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(20))
		putConstant('BitArray.complementToList' x(9))
		putConstant(2 x(21))
		callBI(builtin [x(9) x(21)]#[x(22)])
		unify(x(22) x(11))
		putConstant('IsForeignPointer' x(9))
		putConstant(2 x(11))
		callBI(builtin [x(9) x(11)]#[x(21)])
		putRecord(foreignPointer [is toInt] y(195))
		setValue(x(21))
		setVariable(x(9))
		putConstant('ForeignPointer.toInt' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		unify(x(23) x(9))
		putConstant('Thread.is' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(23)])
		putConstant('Thread.getPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(24)])
		putConstant('Thread.setPriority' x(11))
		putConstant(2 x(22))
		callBI(builtin [x(11) x(22)]#[x(25)])
		putConstant('Thread.this' x(11))
		putConstant(1 x(22))
		callBI(builtin [x(11) x(22)]#[x(26)])
lbl(20990)	definition(x(11) 21008 pid('GetThisPriority' 1 pos('./standard/Thread.oz' 46 3) nil 3) <P: 261> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.getPriority' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(20990)
lbl(21008)	definition(x(22) 21023 pid('SetThisPriority' 1 pos('./standard/Thread.oz' 49 3) nil 2) <P: 262> nil)
		callBI('Thread.this' nil#[x(1)])
		callBI('Thread.setPriority' [x(1) x(0)]#nil)
		return
		endDefinition(21008)
lbl(21023)	putRecord('thread' [getPriority getThisPriority injectException is isSuspended preempt resume setPriority setThisPriority state suspend terminate this] y(196))
		setValue(x(24))
		setValue(x(11))
		setVariable(x(27))
		setValue(x(23))
		setVariable(x(28))
		setVariable(x(29))
		setVariable(x(30))
		setValue(x(25))
		setValue(x(22))
		setVariable(x(31))
		setVariable(x(32))
		setVariable(y(198))
		setValue(x(26))
		putConstant('Thread.suspend' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(32))
		putConstant('Thread.resume' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(30))
		putConstant('Thread.preempt' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(29))
lbl(21089)	definition(x(11) 21134 pid('Thread.terminate' 1 pos('./standard/Thread.oz' 63 26) nil 4) <P: 263> [x(27) y(105)])
		allocateL2
		move(g(1) x(1))
		inlineDot(x(1) system x(2) cache)
		putRecord(kernel 1 x(3))
		setConstant(terminate)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailCall(g(0) 2)
		endDefinition(21089)
lbl(21134)	unify(x(11) y(198))
		putConstant('Thread.injectException' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(27))
		putConstant('Thread.state' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(31))
		putConstant('Thread.isSuspended' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		unify(x(25) x(28))
		putConstant('Exception.raiseDebugCheck' x(11))
		putConstant(2 x(24))
		callBI(builtin [x(11) x(24)]#[x(25)])
		putConstant('Exception.taskStackError' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		putConstant('Exception.location' x(11))
		putConstant(1 x(24))
		callBI(builtin [x(11) x(24)]#[x(28)])
		createVariable(y(200))
lbl(21202)	definition(x(11) 21291 pid('RaiseDebugExtend' 2 pos('./standard/Exception.oz' 35 3) nil 7) <P: 264> [y(200)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Label' [x(2)]#[x(3)])
		inlineDot(x(0) debug x(2) cache)
		callBI('Exception.taskStackError' nil#[x(4)])
		callBI('Exception.location' nil#[x(5)])
		putRecord('#' 2 x(6))
		setConstant(stack)
		setValue(x(4))
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putRecord('#' 2 x(6))
		setConstant(loc)
		setValue(x(5))
		putList(x(5))
		setValue(x(6))
		setValue(x(4))
		putRecord('#' 2 x(4))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(4))
		setValue(x(5))
		callBI(record [x(3) x(1)]#[x(4)])
		callBI('Adjoin' [x(2) x(4)]#[x(1)])
		putConstant(debug x(2))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(21202)
lbl(21291)	moveMoveXYXY(x(0) y(201) x(8) y(202))
		moveMoveXYXY(x(21) y(203) x(23) y(204))
		moveMoveXYXY(x(15) y(205) x(18) y(206))
		moveMoveXYXY(x(19) y(207) x(14) y(208))
		moveMoveXYXY(x(13) y(209) x(10) y(210))
		moveMoveXYXY(x(17) y(211) x(2) y(212))
		moveMoveXYXY(x(16) y(213) x(12) y(214))
		moveMoveXYXY(x(7) y(215) x(20) y(216))
		moveMoveXYXY(x(9) y(217) x(1) y(218))
		moveMoveXYXY(x(3) y(219) x(4) y(220))
		moveMoveXYXY(x(5) y(221) x(6) y(222))
		moveMoveXYXY(x(26) y(223) x(22) y(224))
		moveMoveXYXY(x(27) y(225) x(11) y(226))
		move(x(25) x(1))
		putConstant('RaiseDebugCheck' x(0))
		genFastCall(<P: 1> 4)
		move(y(226) x(1))
		putConstant('RaiseDebugExtend' x(0))
		genFastCall(<P: 1> 4)
		unify(y(200) y(0))
lbl(21377)	definition(x(7) 21398 pid('FailureX' 2 pos('./standard/Exception.oz' 57 3) nil 2) <P: 265> nil)
		getRecord('failure' [debug] x(1))
		unifyVariable(x(1))
		getRecord('failure' [info] x(1))
		unifyValue(x(0))
		return
		endDefinition(21377)
lbl(21398)	definition(x(0) 21420 pid('PredefX' 2 pos('./standard/Exception.oz' 61 3) nil 3) <P: 266> nil)
		getRecord(system [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21398)
lbl(21420)	definition(x(8) 21459 pid('PredefXD' 3 pos('./standard/Exception.oz' 65 3) nil 4) <P: 267> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(system [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21420)
lbl(21459)	definition(x(9) 21498 pid('ErrorXD' 3 pos('./standard/Exception.oz' 72 3) nil 4) <P: 268> nil)
		callBI('Label' [x(0)]#[x(3)])
		getRecord(error [1 debug] x(2))
		unifyValVar(x(0) x(2))
		putRecord('#' 2 x(0))
		setConstant(info)
		setValue(x(1))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		callBI(record [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(21459)
lbl(21498)	definition(x(10) 21520 pid('ErrorX' 2 pos('./standard/Exception.oz' 79 3) nil 3) <P: 269> nil)
		getRecord(error [1 debug] x(1))
		unifyValVar(x(0) x(1))
		callBI('Label' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(21498)
lbl(21520)	getRecord(exception [error errorDebug 'failure' 'raise' raiseError system systemDebug] y(105))
		unifyValue(x(10))
		unifyValue(x(9))
		unifyValue(x(7))
		unifyValue(y(200))
		unifyValue(y(1))
		unifyValue(x(0))
		unifyValue(x(8))
		putConstant('Alarm' x(7))
		putConstant(2 x(8))
		callBI(builtin [x(7) x(8)]#[x(1)])
		putConstant('Delay' x(7))
		putConstant(1 x(8))
		callBI(builtin [x(7) x(8)]#[x(2)])
lbl(21556)	definition(x(7) 21671 pid('AddWaiter' 4 pos('./standard/Time.oz' 38 3) nil 9) <P: 270> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(x(0) 21653)
lbl(21574)	getVarVar(x(0) x(4))
		createVariable(y(3))
		shallowGuard(21653)
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(21589)	shallowThen
		testLT(x(1) x(5) x(0) 21632)
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		getList(x(3))
		unifyVariable(x(7))
		unifyValue(x(4))
		getRecord('#' 2 x(7))
		unifyVariable(x(8))
		unifyValue(x(6))
		inlineMinus(x(5) x(1) x(0))
		unify(x(0) x(8))
		deAllocateL4
		return
lbl(21632)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(x(5))
		unifyValue(x(6))
		move(x(4) x(0))
		deAllocateL4
		genFastCall(<P: 270> 9)
lbl(21653)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
		endDefinition(21556)
lbl(21671)	definition(x(7) 21683 pid('DefaultFun' 1 pos('./standard/Time.oz' 53 23) nil 1) <P: 271> nil)
		getNumber(1000 x(0))
		return
		endDefinition(21671)
lbl(21683)	putList(x(8))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: ActDelay> <N: Action> <N: DelayFun> <N: Final> <N: NumReset> <N: NumberA> <N: Stop>] x(9))
		setConstant(1000)
		setConstant(dummyRep)
		setValue(x(7))
		setConstant(finalRep)
		setConstant(~1)
		setConstant(~1)
		setConstant(unit)
		putRecord(messagePattern [action delay delayFun final number] x(10))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(21729)	definition(x(11) 21916 pid('Repeat,setRepAll' 1 pos('./standard/Time.oz' 86 6) nil 3) unit [x(10) x(7) y(0)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21768)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
		branch(21771)
lbl(21768)	getLiteral(dummyRep y(1))
lbl(21771)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21794)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(2))
		branch(21797)
lbl(21794)	getLiteral(finalRep y(2))
lbl(21797)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21820)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
		branch(21823)
lbl(21820)	getNumber(1000 y(3))
lbl(21823)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21846)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
		branch(21849)
lbl(21846)	unify(y(4) g(1))
lbl(21849)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(number x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 21872)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(5))
		branch(21875)
lbl(21872)	getNumber(~1 y(5))
lbl(21875)	move(y(1) x(0))
		genCall(gci(g(2) true setRepAction false 1) 0)
		move(y(2) x(0))
		genCall(gci(g(2) true setRepFinal false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true setRepNum false 1) 0)
		move(y(4) x(0))
		move(g(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 21910)
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(2) true setRepDelay true 1) 0)
lbl(21910)	deAllocateL6
		genCall(gci(g(2) true setRepDelayFun true 1) 0)
		endDefinition(21729)
lbl(21916)	putList(x(10))
		setConstant(setRepAll)
		setValue(x(11))
lbl(21922)	definition(x(11) 21979 pid('Repeat,getRep/fast' [action actual delay delayFun final number] pos('./standard/Time.oz' 102 6) nil 7) <P: 272> nil)
		inlineAt(<N: Action> x(6) cache)
		unify(x(6) x(0))
		inlineAt(<N: Final> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<N: ActDelay> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<N: DelayFun> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<N: NumReset> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<N: NumberA> x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(21922)
lbl(21979)	putRecord(messagePattern [action actual delay delayFun final number] x(12))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(21995)	definition(x(13) 22158 pid('Repeat,getRep/slow' 1 pos('./standard/Time.oz' 102 6) nil 7) unit [x(12)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(action x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22032)
		inlineDot(x(0) action x(1) cache)
		unify(x(1) y(1))
lbl(22032)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(actual x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22053)
		inlineDot(x(0) actual x(1) cache)
		unify(x(1) y(2))
lbl(22053)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(delay x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22074)
		inlineDot(x(0) delay x(1) cache)
		unify(x(1) y(3))
lbl(22074)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(delayFun x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22095)
		inlineDot(x(0) delayFun x(1) cache)
		unify(x(1) y(4))
lbl(22095)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(final x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22116)
		inlineDot(x(0) final x(1) cache)
		unify(x(1) y(5))
lbl(22116)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(number x(6))
		testBI('HasFeature' [x(0) x(6)]#[x(1)] 22137)
		inlineDot(x(0) number x(1) cache)
		unify(x(1) y(6))
lbl(22137)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		deAllocateL7
		genFastCall(<P: 272> 13)
		endDefinition(21995)
lbl(22158)	putRecord(getRep [action actual delay delayFun final number] x(12))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(14))
		setConstant(getRep)
		setValue(x(13))
		setValue(x(12))
		setValue(x(11))
		putRecord(messagePattern 1 x(11))
		setConstant(unit)
lbl(22192)	definition(x(12) 22246 pid('Repeat,setRepAction' 1 pos('./standard/Time.oz' 117 6) nil 3) unit [x(11)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22231)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22234)
lbl(22231)	getLiteral(dummyRep y(1))
lbl(22234)	move(y(1) x(0))
		inlineAssign(<N: Action> x(0) cache)
		deAllocateL2
		return
		endDefinition(22192)
lbl(22246)	putList(x(11))
		setConstant(setRepAction)
		setValue(x(12))
		putRecord(messagePattern 1 x(12))
		setConstant(unit)
lbl(22258)	definition(x(13) 22312 pid('Repeat,setRepFinal' 1 pos('./standard/Time.oz' 121 6) nil 3) unit [x(12)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22297)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22300)
lbl(22297)	getLiteral(finalRep y(1))
lbl(22300)	move(y(1) x(0))
		inlineAssign(<N: Final> x(0) cache)
		deAllocateL2
		return
		endDefinition(22258)
lbl(22312)	putList(x(12))
		setConstant(setRepFinal)
		setValue(x(13))
		putRecord(messagePattern 1 x(13))
		setConstant(unit)
lbl(22324)	definition(x(15) 22395 pid('Repeat,setRepDelay' 1 pos('./standard/Time.oz' 125 6) nil 3) unit [x(13)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22363)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22366)
lbl(22363)	getNumber(1000 y(1))
lbl(22366)	move(y(1) x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
lbl(22374)	definition(x(1) 22386 pid('' 1 pos('./standard/Time.oz' 127 14) nil 1) unit [y(1)])
		unify(x(0) g(0))
		return
		endDefinition(22374)
lbl(22386)	inlineAssign(<N: DelayFun> x(1) cache)
		deAllocateL2
		return
		endDefinition(22324)
lbl(22395)	putList(x(13))
		setConstant(setRepDelay)
		setValue(x(15))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22407)	definition(x(16) 22469 pid('Repeat,setRepDelayFun' 1 pos('./standard/Time.oz' 130 6) nil 3) unit [x(15) x(7)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22446)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22449)
lbl(22446)	unify(y(1) g(1))
lbl(22449)	putConstant(~1 x(0))
		inlineAssign(<N: ActDelay> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: DelayFun> x(0) cache)
		deAllocateL2
		return
		endDefinition(22407)
lbl(22469)	putList(x(7))
		setConstant(setRepDelayFun)
		setValue(x(16))
		putRecord(messagePattern 1 x(15))
		setConstant(unit)
lbl(22481)	definition(x(16) 22540 pid('Repeat,setRepNum' 1 pos('./standard/Time.oz' 135 6) nil 3) unit [x(15)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 22520)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
		branch(22523)
lbl(22520)	getNumber(~1 y(1))
lbl(22523)	move(y(1) x(0))
		inlineAssign(<N: NumberA> x(0) cache)
		inlineAssign(<N: NumReset> x(0) cache)
		deAllocateL2
		return
		endDefinition(22481)
lbl(22540)	putList(x(15))
		setConstant(setRepNum)
		setValue(x(16))
lbl(22546)	definition(x(16) 22611 pid('Repeat,go/fast' 0 pos('./standard/Time.oz' 144 6) nil 2) <P: 273> [y(0)])
		allocateL1
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22588 x(0))
		inlineAt(<N: Stop> x(0) cache)
		createVariable(y(0))
		testBI('IsDet' [x(0)]#[x(1)] 22584)
		createVariable(x(0))
		inlineAssign(<N: Stop> x(0) cache)
		getLiteral(true y(0))
		branch(22587)
lbl(22584)	getLiteral(false y(0))
lbl(22587)	return
lbl(22588)	testBool(y(0) 22596 22598)
		deAllocateL1
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22596)	deAllocateL1
		return
lbl(22598)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22546)
lbl(22611)	definition(x(17) 22625 pid('Repeat,go/slow' 1 pos('./standard/Time.oz' 144 6) nil 1) unit nil)
		getLiteral(go x(0))
		genFastCall(<P: 273> 1)
		endDefinition(22611)
lbl(22625)	putRecord('#' [1 2 fast] x(18))
		setConstant(go)
		setValue(x(17))
		setValue(x(16))
lbl(22635)	definition(x(16) 22674 pid('Repeat,stop/fast' 0 pos('./standard/Time.oz' 155 6) nil 2) <P: 274> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22671 x(0))
		putConstant(unit x(0))
		inlineAt(<N: Stop> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<N: NumReset> x(0) cache)
		inlineAssign(<N: NumberA> x(0) cache)
		return
lbl(22671)	return
		endDefinition(22635)
lbl(22674)	definition(x(17) 22688 pid('Repeat,stop/slow' 1 pos('./standard/Time.oz' 155 6) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 274> 1)
		endDefinition(22674)
lbl(22688)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(17))
		setValue(x(16))
lbl(22698)	definition(x(16) 22860 pid('Repeat,Run/fast' 0 pos('./standard/Time.oz' 162 6) nil 5) <P: 275> [y(0)])
		allocateL5
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(22752 x(0))
		inlineAt(<N: Stop> x(0) cache)
		inlineAt(<N: ActDelay> x(1) cache)
		inlineAt(<N: Action> x(2) cache)
		inlineAt(<N: Final> x(3) cache)
		inlineAt(<N: NumberA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) y(4))
		return
lbl(22752)	move(y(0) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 22761)
		deAllocateL5
		return
lbl(22761)	testNumber(y(3) 0 22785)
		getSelf(x(1))
		sendMsg(stop x(1) 0 cache)
		getSelf(x(2))
		move(y(4) x(0))
		deAllocateL5
		tailSendMsg(<N: Do> x(2) 1 cache)
lbl(22785)	move(y(1) x(1))
		createVariable(x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
		move(x(2) y(1))
		getSelf(x(3))
		move(y(2) x(0))
		sendMsg(<N: Do> x(3) 1 cache)
		move(y(3) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 22826)
		inlineMinus1(x(0) x(1))
		inlineAssign(<N: NumberA> x(1) cache)
lbl(22826)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 22845 22847)
		deAllocateL5
		genCall(gci(g(0) true <N: Run> true 0) 0)
lbl(22845)	deAllocateL5
		return
lbl(22847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(22698)
lbl(22860)	definition(x(17) 22874 pid('Repeat,Run/slow' 1 pos('./standard/Time.oz' 162 6) nil 1) unit nil)
		getLiteral(<N: Run> x(0))
		genFastCall(<P: 275> 1)
		endDefinition(22860)
lbl(22874)	putRecord('#' [1 2 fast] x(20))
		setConstant(<N: Run>)
		setValue(x(17))
		setValue(x(16))
lbl(22884)	definition(x(16) 22904 pid('Repeat,Do/fast' 1 pos('./standard/Time.oz' 195 6) nil 2) <P: 276> nil)
		testBI('IsProcedure' [x(0)]#[x(1)] 22897)
		tailCall(x(0) 0)
lbl(22897)	getSelf(x(1))
		tailCall(x(1) 1)
		endDefinition(22884)
lbl(22904)	definition(x(17) 22930 pid('Repeat,Do/slow' 1 pos('./standard/Time.oz' 195 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 276> 3)
		endDefinition(22904)
lbl(22930)	putRecord('#' [1 2 fast] x(21))
		setConstant(<N: Do>)
		setValue(x(17))
		setValue(x(16))
lbl(22940)	definition(x(16) 22949 pid('Repeat,finalRep/fast' 0 pos('./standard/Time.oz' 204 6) nil 0) <P: 277> nil)
		return
		endDefinition(22940)
lbl(22949)	definition(x(17) 22963 pid('Repeat,finalRep/slow' 1 pos('./standard/Time.oz' 204 6) nil 1) unit nil)
		getLiteral(finalRep x(0))
		genFastCall(<P: 277> 1)
		endDefinition(22949)
lbl(22963)	putRecord('#' [1 2 fast] x(22))
		setConstant(finalRep)
		setValue(x(17))
		setValue(x(16))
lbl(22973)	definition(x(16) 22982 pid('Repeat,dummyRep/fast' 0 pos('./standard/Time.oz' 208 6) nil 0) <P: 278> nil)
		return
		endDefinition(22973)
lbl(22982)	definition(x(17) 22996 pid('Repeat,dummyRep/slow' 1 pos('./standard/Time.oz' 208 6) nil 1) unit nil)
		getLiteral(dummyRep x(0))
		genFastCall(<P: 278> 1)
		endDefinition(22982)
lbl(22996)	putRecord('#' [1 2 fast] x(23))
		setConstant(dummyRep)
		setValue(x(17))
		setValue(x(16))
		putRecord('#' 13 x(16))
		setValue(x(10))
		setValue(x(14))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(7))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		moveMoveXYXY(x(1) y(226) x(2) y(227))
		move(x(0) y(228))
		move(x(8) x(0))
		move(x(16) x(1))
		move(x(9) x(2))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('Repeat' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(time [alarm delay repeat time] y(229))
		setValue(y(226))
		setValue(y(227))
		setValue(y(0))
		setVariable(x(0))
		putConstant('Time.time' x(2))
		putConstant(1 x(3))
		callBI(builtin [x(2) x(3)]#[x(1)])
		unify(x(1) x(0))
		putConstant('NewUniqueName' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(4)])
lbl(23098)	definition(x(0) 23124 pid('IsFunctor' 2 pos('./standard/Functor.oz' 30 3) nil 4) <P: 279> nil)
		testBI('IsChunk' [x(0)]#[x(2)] 23118)
		putConstant(<U: functorID> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(23118)	getLiteral(false x(1))
		return
		endDefinition(23098)
lbl(23124)	definition(x(1) 23151 pid('NewFunctor' 4 pos('./standard/Functor.oz' 34 3) nil 5) <P: 280> nil)
		putRecord(f [<U: functorID> apply 'export' 'import'] x(4))
		setConstant(unit)
		setValue(x(2))
		setValue(x(1))
		setValue(x(0))
		callBI('NewChunk' [x(4)]#[x(0)])
		unify(x(0) x(3))
		return
		endDefinition(23124)
lbl(23151)	moveMoveXYXY(x(0) y(0) x(1) y(230))
		putConstant('NewFunctor' x(0))
		genFastCall(<P: 1> 4)
lbl(23162)	definition(x(3) 23187 pid('GetFeatures' 2 pos('./standard/Functor.oz' 44 3) nil 2) <P: 281> nil)
		inlineDot(x(0) type x(0) cache)
		testList(x(0) 23181)
lbl(23177)	unify(x(1) x(0))
		return
lbl(23181)	getLiteral(nil x(1))
		return
		endDefinition(23162)
lbl(23187)	putRecord('functor' [getFeatures is new] y(231))
		setValue(x(3))
		setValue(y(0))
		setValue(y(230))
		move(g(0) x(1))
		putConstant('export' x(0))
		createVariableMove(y(230) x(2))
		genFastCall(<P: 108> 6)
lbl(23209)	definition(x(0) 23227 pid('IsNotNL' 2 pos('./sp/Error.oz' 38 13) nil 4) <P: 282> nil)
		putConstant(10 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23209)
lbl(23227)	definition(x(3) 23258 pid('ToLower' 2 pos('./sp/Error.oz' 39 13) nil 3) <P: 283> [y(54)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(23227)
lbl(23258)	definition(x(3) 23535 pid('EscapeVariableChar' 3 pos('./sp/Error.oz' 45 6) nil 6) <P: 284> nil)
		shallowGuard(23522)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23272)	shallowThen
		testLiteral(x(4) nil 23284)
lbl(23277)	getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(23284)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 23311)
lbl(23297)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23311)	testNumber(y(2) 92 23317)
		branch(23297)
lbl(23317)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 23361)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(23361)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 23412)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23412)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 23463)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23463)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 23514)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(23514)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(23522)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(45)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23258)
lbl(23535)	definition(x(4) 23619 pid('PrintNameToVS' 2 pos('./sp/Error.oz' 56 6) nil 4) <P: 285> [y(39) x(3)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 23581)
lbl(23553)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 23581)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(23581)	match(y(0) ht(23612 [onScalar(nil 23584) onScalar('#' 23604)]))
lbl(23584)	getList(y(1))
		unifyNumber(110)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(105)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(108)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23604)	getList(y(1))
		unifyNumber(35)
		unifyLiteral(nil)
		deAllocateL3
		return
lbl(23612)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(23535)
lbl(23619)	definition(x(3) 23721 pid('ListToVS' 3 pos('./sp/Error.oz' 66 3) nil 5) <P: 286> nil)
		testLiteral(x(0) nil 23633)
lbl(23629)	getLiteral('' x(2))
		return
lbl(23633)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 23660)
lbl(23645)	getVarVar(x(3) x(4))
		testLiteral(x(4) nil 23660)
		getRecord(oz 1 y(2))
		unifyValue(x(3))
		deAllocateL3
		return
lbl(23660)	testList(y(0) 23706)
lbl(23663)	getVarVar(x(0) x(1))
		shallowGuard(23706)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(23674)	shallowThen
		getRecord('#' 3 y(2))
		unifyVariable(x(1))
		unifyValVar(y(1) x(4))
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<P: 286> 7)
lbl(23706)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(74)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23619)
lbl(23721)	definition(x(1) 23907 pid('PosToVS' 5 pos('./sp/Error.oz' 77 3) nil 5) <P: 287> nil)
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		testLiteral(x(0) '' 23749)
		getLiteral(nil y(4))
		branch(23759)
lbl(23749)	getRecord('#' 3 y(4))
		unifyLiteral('file "')
		unifyValue(x(0))
		unifyLiteral('"')
lbl(23759)	createVariable(y(5))
		testLiteral(y(0) unit 23770)
		getLiteral(nil y(5))
		branch(23778)
lbl(23770)	getRecord('#' 2 y(5))
		unifyLiteral('line ')
		unifyValue(y(0))
lbl(23778)	createVariable(y(0))
		match(y(1) ht(23793 [onScalar(unit 23783) onScalar(~1 23788)]))
lbl(23783)	getLiteral(nil y(0))
		branch(23801)
lbl(23788)	getLiteral(nil y(0))
		branch(23801)
lbl(23793)	getRecord('#' 2 y(0))
		unifyLiteral('column ')
		unifyValue(y(1))
lbl(23801)	createVariable(y(1))
		testLiteral(y(2) unit 23812)
		getLiteral(nil y(1))
		branch(23820)
lbl(23812)	getRecord('#' 2 y(1))
		unifyLiteral('PC = ')
		unifyValue(y(2))
lbl(23820)	definition(x(1) 23838 pid('' 2 pos('./sp/Error.oz' 84 7) nil 4) unit nil)
		putConstant(nil x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(23820)
lbl(23838)	putList(x(4))
		setValue(y(1))
		setConstant(nil)
		putList(x(3))
		setValue(y(0))
		setValue(x(4))
		putList(x(2))
		setValue(y(5))
		setValue(x(3))
		putList(x(0))
		setValue(y(4))
		setValue(x(2))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testList(y(0) 23900)
lbl(23871)	getVarVar(x(2) x(0))
lbl(23874)	definition(x(1) 23893 pid('' 3 pos('./sp/Error.oz' 87 12) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(', ')
		unifyValue(x(1))
		return
		endDefinition(23874)
lbl(23893)	move(y(3) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
lbl(23900)	getLiteral(nil y(3))
		deAllocateL6
		return
		endDefinition(23721)
lbl(23907)	definition(x(2) 23926 pid('StarLine' 2 pos('./sp/Error.oz' 92 3) nil 2) <P: 288> nil)
		getRecord('#' 3 x(1))
		unifyLiteral('%** ')
		unifyValue(x(0))
		unifyLiteral('\n')
		return
		endDefinition(23907)
lbl(23926)	definition(x(3) 23965 pid('Repeat' 3 pos('./sp/Error.oz' 96 3) nil 3) <P: 289> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(23944)	definition(x(1) 23956 pid('' 1 pos('./sp/Error.oz' 98 16) nil 1) unit [y(0)])
		unify(x(0) g(0))
		return
		endDefinition(23944)
lbl(23956)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(23926)
lbl(23965)	definition(x(3) 24022 pid('MaxLeftSize' 2 pos('./sp/Error.oz' 101 3) nil 5) <P: 290> nil)
lbl(23971)	definition(x(4) 24008 pid('' 3 pos('./sp/Error.oz' 102 16) nil 5) unit nil)
		shallowGuard(23995)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(23987)	shallowThen
		callBI('Max' [x(0) x(3)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(23995)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(102)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(23971)
lbl(24008)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(0 x(2))
		genFastCall(<P: 30> 9)
		endDefinition(23965)
lbl(24022)	putRecord('#' 3 y(232))
		setConstant('%**')
		setVariable(x(3))
		setConstant('\n')
		putConstant(65 x(4))
		putConstant(3 x(5))
		inlineMinus(x(4) x(5) x(6))
		moveMoveXYXY(x(4) y(233) x(0) y(234))
		moveMoveXYXY(x(1) y(235) x(2) y(236))
		move(x(6) x(0))
		move(x(3) x(2))
		putConstant(45 x(1))
		genFastCall(<P: 289> 6)
		putConstant('%***' x(0))
		createVariableMove(y(237) x(1))
		genFastCall(<P: 196> 4)
		putConstant(0 x(4))
lbl(24076)	definition(x(2) 27815 pid('' 2 pos('./sp/Error.oz' 111 3) nil 4) <P: 291> [y(143) y(234) y(39) y(130) y(163) x(4) y(233) y(237) y(236) y(232) y(134) y(224) y(235)])
		putList(x(2))
		setPredicateRef(<Q: 292>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 294>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 327>)
		setValue(x(2))
lbl(24298)	definitionCopy(x(3) 27810 pid('/body' 0 pos('./sp/Error.oz' 111 3) [once] 14) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) x(1) g(12)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) 'Property' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(2) printError x(4) cache)
lbl(24333)	definition(x(5) 24428 pid('DoFormatTypes' 3 pos('./sp/Error.oz' 151 2) nil 5) <Q: 292> [g(1) g(2)])
		testLiteral(x(1) nil 24347)
lbl(24343)	getLiteral(nil x(2))
		return
lbl(24347)	allocateL4
		inlineDot(x(1) 2 x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		getList(y(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		move(x(3) y(1))
		testLiteral(y(0) '' 24401)
lbl(24387)	getRecord(hint [m] x(2))
		unifyVariable(x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
		branch(24414)
lbl(24401)	getRecord(hint [l m] x(2))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		genFastCall(<P: 283> 4)
lbl(24414)	moveMoveYXYX(y(3) x(1) y(1) x(2))
		putConstant('' x(0))
		deAllocateL4
		genFastCall(<Q: 292> 7)
		endDefinition(24333)
lbl(24428)	definition(x(5) 24457 pid('FormatTypes' 2 pos('./sp/Error.oz' 166 2) nil 5) <Q: 293> [g(3)])
		callBI('AtomToString' [x(0)]#[x(3)])
		putList(x(4))
		setConstant(10)
		setValue(x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant('Expected type' x(0))
		genFastCall(<Q: 292> 7)
		endDefinition(24428)
lbl(24457)	definition(x(6) 24571 pid('FormatPartialAppl' 4 pos('./sp/Error.oz' 171 6) nil 6) <Q: 294> [g(4)])
		allocateL2
		getRecord('#' 4 x(3))
		unifyLiteral('{')
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(oz 1 x(3))
		unifyValue(x(0))
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		testLiteral(x(1) nil 24496)
lbl(24491)	getLiteral('' x(4))
		branch(24512)
lbl(24496)	getRecord('#' 2 x(4))
		unifyLiteral(' ')
		unifyVariable(x(0))
		getRecord(list 2 x(0))
		unifyValue(x(1))
		unifyLiteral(' ')
lbl(24512)	testNumber(y(0) 0 24524)
		getList(y(1))
		unifyNumber(125)
		unifyLiteral(nil)
		deAllocateL2
		return
lbl(24524)	getRecord('#' 2 y(1))
		unifyVariable(x(5))
		unifyLiteral('}')
lbl(24532)	definition(x(3) 24553 pid('' 3 pos('./sp/Error.oz' 176 8) nil 3) unit nil)
		getList(x(2))
		unifyNumber(32)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(95)
		unifyValue(x(0))
		return
		endDefinition(24532)
lbl(24553)	move(y(0) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		putConstant(nil x(4))
		deAllocateL2
		genFastCall(<P: 105> 13)
		endDefinition(24457)
lbl(24571)	definition(x(6) 24588 pid('FormatAppl' 3 pos('./sp/Error.oz' 180 6) nil 4) <Q: 295> nil)
		move(x(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 294> 9)
		endDefinition(24571)
lbl(24588)	definition(x(7) 24645 pid('DoFormatHint' 2 pos('./sp/Error.oz' 185 2) nil 4) <Q: 296> [g(1) g(2)])
		testLiteral(x(0) nil 24602)
lbl(24598)	getLiteral(nil x(1))
		return
lbl(24602)	allocateL3
		inlineDot(x(0) 2 x(0) cache)
		move(x(1) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 57> 8)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(line 1 x(0))
		unifyValue(y(1))
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 296> 5)
		endDefinition(24588)
lbl(24645)	definition(x(7) 24738 pid('FormatHint' 2 pos('./sp/Error.oz' 193 2) nil 4) <Q: 297> [x(1)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		inlineDot(x(0) hints x(0) cache)
		testBool(x(0) 24692 24725)
lbl(24688)	testLiteral(y(0) nil 24697)
lbl(24692)	getLiteral(nil y(1))
		deAllocateL3
		return
lbl(24697)	getList(y(1))
		unifyLiteral(unit)
		unifyVariable(y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 194> 4)
		putList(x(0))
		setConstant(10)
		setValue(y(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 296> 5)
lbl(24725)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(24645)
lbl(24738)	definition(x(8) 24786 pid('InfoField' 2 pos('./sp/Error.oz' 203 6) nil 3) <Q: 298> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 24779)
lbl(24761)	putConstant(info x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 24779)
lbl(24768)	inlineDot(x(0) info x(1) cache)
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(24779)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(24738)
lbl(24786)	definition(x(9) 24825 pid('DebugField' 2 pos('./sp/Error.oz' 211 6) nil 4) <Q: 299> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24818)
lbl(24800)	putConstant(debug x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24818)
lbl(24807)	inlineDot(x(0) debug x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24818)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24786)
lbl(24825)	definition(x(9) 24864 pid('DispatchField' 2 pos('./sp/Error.oz' 217 6) nil 4) <Q: 300> nil)
		allocateL1
		move(x(1) y(0))
		testBI('IsRecord' [x(0)]#[x(2)] 24857)
lbl(24839)	putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24857)
lbl(24846)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) y(0))
		deAllocateL1
		return
lbl(24857)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(24825)
lbl(24864)	definition(x(10) 24904 pid('HasDispatchField' 2 pos('./sp/Error.oz' 223 6) nil 4) <Q: 301> nil)
		testBI('IsRecord' [x(0)]#[x(2)] 24898)
		putConstant(1 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 24894)
		inlineDot(x(0) 1 x(0) cache)
		callBI('IsRecord' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
lbl(24894)	getLiteral(false x(1))
		return
lbl(24898)	getLiteral(false x(1))
		return
		endDefinition(24864)
lbl(24904)	definition(x(10) 25026 pid('DebugInfo' 2 pos('./sp/Error.oz' 229 6) nil 6) <Q: 302> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 298> 4)
		match(y(1) ht(25019 [onScalar(unit 24923) onScalar(nil 24928) onRecord('|' 2 24933)]))
lbl(24923)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24928)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(24933)	getVarVar(x(0) x(3))
		getList(y(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		match(x(0) ht(24997 [onRecord(apply 2 24950) onRecord(fapply 3 24966) onRecord(vs 1 24987)]))
lbl(24950)	getVarVar(x(0) x(1))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		genFastCall(<Q: 295> 6)
		branch(25010)
lbl(24966)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		move(x(4) x(3))
		genFastCall(<Q: 294> 8)
		branch(25010)
lbl(24987)	getVariable(x(0))
		getRecord(hint [l] x(4))
		unifyValue(x(0))
		branch(25010)
lbl(24997)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(242)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(25010)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 302> 5)
lbl(25019)	getLiteral(nil y(0))
		deAllocateL2
		return
		endDefinition(24904)
lbl(25026)	definition(x(10) 25061 pid('DebugLoc' 2 pos('./sp/Error.oz' 249 6) nil 4) <Q: 303> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 299> 4)
		move(y(1) x(0))
		putConstant(loc x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(0))
		deAllocateL2
		return
		endDefinition(25026)
lbl(25061)	definition(x(10) 25145 pid('DebugStack' 2 pos('./sp/Error.oz' 255 6) nil 4) <Q: 304> [x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 299> 4)
		move(y(3) x(0))
		putConstant(stack x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 25138)
lbl(25110)	move(y(2) x(1))
		inlineDot(x(1) 'thread' x(1) cache)
		putConstant(0 x(2))
		testLT(x(2) x(1) x(3) 25138)
lbl(25127)	inlineDot(x(0) stack x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
lbl(25138)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(25061)
lbl(25145)	definition(x(10) 25214 pid('OzValueToVS' 2 pos('./sp/Error.oz' 275 6) nil 6) <Q: 305> [x(1) x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(1))
		inlineDot(x(1) depth x(5) cache)
		inlineDot(x(1) width x(2) cache)
		move(y(0) x(0))
		move(x(5) x(1))
		move(y(1) x(3))
		deAllocateL3
		tailCall(x(4) 4)
		endDefinition(25145)
lbl(25214)	createVariable(y(0))
lbl(25216)	definition(x(10) 25327 pid('AlmostVSToVS' 2 pos('./sp/Error.oz' 280 6) nil 6) <Q: 306> [g(5) y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 25316)
lbl(25232)	testBI('IsRecord' [x(0)]#[x(2)] 25316)
lbl(25236)	match(y(0) ht(25290 [onRecord(oz 1 25239) onRecord(pn 1 25245) onRecord('pos' 3 25251) onRecord(list 2 25269)]))
lbl(25239)	getVariable(x(0))
		deAllocateL2
		genFastCall(<Q: 305> 5)
lbl(25245)	getVariable(x(0))
		deAllocateL2
		genFastCall(<P: 285> 5)
lbl(25251)	getVarVar(x(0) x(5))
		getVariable(x(2))
		move(x(5) x(1))
		move(y(1) x(4))
		putConstant(unit x(3))
		deAllocateL2
		genFastCall(<P: 287> 11)
lbl(25269)	getVarVar(x(0) x(3))
		move(x(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 286> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 306> 5)
lbl(25290)	testBI('IsTuple' [x(0)]#[x(2)] 25311)
lbl(25294)	callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) '#' 25311)
lbl(25301)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 161> 7)
lbl(25311)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(25316)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 305> 5)
		endDefinition(25216)
lbl(25327)	unify(x(10) y(0))
lbl(25330)	definition(x(10) 25425 pid('AttachLeftSizes' 2 pos('./sp/Error.oz' 301 6) nil 4) <Q: 307> nil)
lbl(25336)	definition(x(3) 25414 pid('' 2 pos('./sp/Error.oz' 303 3) nil 3) unit nil)
		match(x(0) ht(25403 [onRecord(hint [l] 25345) onRecord(hint [l m] 25374)]))
lbl(25345)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25374)	allocateL2
		getVariable(x(2))
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 196> 5)
lbl(25403)	getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyValue(x(0))
		return
		endDefinition(25336)
lbl(25414)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(25330)
lbl(25425)	definition(x(10) 25510 pid('LineOutput' 2 pos('./sp/Error.oz' 317 6) nil 5) <Q: 308> [x(4)])
		testLiteral(x(1) none 25436)
lbl(25435)	return
lbl(25436)	allocateL1
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(3)])
lbl(25443)	definition(x(2) 25483 pid('' 1 pos('./sp/Error.oz' 325 6) nil 3) unit [x(3)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 306> 4)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(25443)
lbl(25483)	move(x(3) y(0))
		move(x(0) x(4))
		move(x(2) x(0))
		call(x(4) 2)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		move(x(1) x(0))
		deAllocateL1
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(25425)
lbl(25510)	definition(x(4) 25527 pid('Spaces' 2 pos('./sp/Error.oz' 333 6) nil 3) <Q: 309> nil)
		move(x(1) x(2))
		putConstant(32 x(1))
		genFastCall(<P: 289> 7)
		endDefinition(25510)
lbl(25527)	definition(x(4) 25808 pid('Lines' 2 pos('./sp/Error.oz' 337 6) nil 4) <Q: 310> [g(6)])
		allocateL3
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 307> 4)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 290> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		inlinePlus(x(0) x(1) x(2))
lbl(25565)	definition(x(3) 25796 pid('' 1 pos('./sp/Error.oz' 342 3) nil 5) unit [y(0) x(2)])
		shallowGuard(25783)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(25581)	shallowThen
		match(x(2) ht(25782 [onScalar(unit 25585) onScalar(hint 25602) onRecord(line 1 25619) onRecord('pos' 3 25635) onRecord(hint [l] 25671) onRecord(hint [m] 25687) onRecord(hint [l m] 25734)]))
lbl(25585)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25602)	allocateL1
		putConstant('' x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25619)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25635)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		genFastCall(<P: 287> 10)
		putRecord('#' 2 x(0))
		setConstant('in ')
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25671)	allocateL1
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL1
		tailCall(g(0) 1)
lbl(25687)	allocateL2
		getVariable(y(0))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		putConstant(2 x(3))
		inlinePlus(x(2) x(3) x(4))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL2
		tailCall(g(0) 1)
lbl(25734)	allocateL3
		getVarVar(y(0) y(1))
		move(g(1) x(0))
		inlineMinus(x(0) x(1) x(2))
		inlinePlus1(x(2) x(3))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 309> 4)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(':')
		setValue(y(2))
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 288> 4)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(0) 1)
lbl(25782)	return
lbl(25783)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(342)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(25565)
lbl(25796)	move(y(1) x(0))
		move(x(3) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(25527)
lbl(25808)	definition(x(4) 25881 pid('Location' 2 pos('./sp/Error.oz' 368 6) nil 4) <Q: 311> nil)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) nil 25827)
lbl(25822)	getLiteral(nil y(0))
		deAllocateL1
		return
lbl(25827)	testLiteral(x(0) unit 25833)
		branch(25822)
lbl(25833)	getList(y(0))
		unifyLiteral('')
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 2 x(2))
		unifyLiteral('Level: ')
		unifyVariable(x(3))
lbl(25853)	definition(x(1) 25872 pid('' 3 pos('./sp/Error.oz' 373 33) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' ')
		unifyValue(x(1))
		return
		endDefinition(25853)
lbl(25872)	putConstant('' x(2))
		deAllocateL1
		genFastCall(<P: 32> 9)
		endDefinition(25808)
lbl(25881)	definition(x(4) 26223 pid('DoStack' 3 pos('./sp/Error.oz' 382 2) nil 10) <Q: 312> [x(2)])
		match(x(0) ht(26208 [onScalar(nil 25890) onRecord('|' 2 25894)]))
lbl(25890)	getLiteral(nil x(2))
		return
lbl(25894)	allocateL8
		getVarVar(x(0) y(0))
		putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26200)
		putConstant(file x(5))
		putConstant('' x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(7)])
		putConstant(line x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(8)])
		putConstant(column x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(9)])
		putConstant('PC' x(5))
		putConstant(unit x(6))
		callBI('CondSelect' [x(0) x(5) x(6)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(2))
		createVariableMove(y(4) x(4))
		genFastCall(<P: 287> 10)
		move(y(3) x(0))
		inlineDot(x(0) kind x(1) cache)
		createVariable(y(5))
		match(x(1) ht(26059 [onScalar('call/c' 25979) onScalar('call/f' 25984) onScalar('lock/c' 25989) onScalar('lock/f' 25994) onScalar('exception handler/c' 25999) onScalar('exception handler/f' 26004) onScalar('conditional/c' 26009) onScalar('conditional/f' 26014) onScalar('definition/c' 26019) onScalar('definition/f' 26024) onScalar('skip/c' 26029) onScalar('skip/f' 26034) onScalar('fail/c' 26039) onScalar('fail/f' 26044) onScalar('thread/c' 26049) onScalar('thread/f' 26054)]))
lbl(25979)	getLiteral('call' y(5))
		branch(26062)
lbl(25984)	getLiteral('call' y(5))
		branch(26062)
lbl(25989)	getLiteral('lock' y(5))
		branch(26062)
lbl(25994)	getLiteral('lock' y(5))
		branch(26062)
lbl(25999)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26004)	getLiteral('exception handler' y(5))
		branch(26062)
lbl(26009)	getLiteral(conditional y(5))
		branch(26062)
lbl(26014)	getLiteral(conditional y(5))
		branch(26062)
lbl(26019)	getLiteral('definition' y(5))
		branch(26062)
lbl(26024)	getLiteral('definition' y(5))
		branch(26062)
lbl(26029)	getLiteral('skip' y(5))
		branch(26062)
lbl(26034)	getLiteral('skip' y(5))
		branch(26062)
lbl(26039)	getLiteral('fail' y(5))
		branch(26062)
lbl(26044)	getLiteral('fail' y(5))
		branch(26062)
lbl(26049)	getLiteral('thread' y(5))
		branch(26062)
lbl(26054)	getLiteral('thread' y(5))
		branch(26062)
lbl(26059)	unify(y(5) x(1))
lbl(26062)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(y(2))
		getRecord('#' 2 x(0))
		unifyVariable(y(6))
		unifyVariable(y(7))
		testLiteral(y(5) 'call' 26165)
lbl(26080)	move(y(3) x(0))
		inlineDot(x(0) data x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 26160)
		move(g(0) x(1))
		inlineDot(x(1) printName x(2) cache)
		move(x(0) y(3))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(3) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 26139)
		testLiteral(y(5) '' 26127)
		getLiteral('object application' y(6))
		branch(26168)
lbl(26127)	getRecord('#' 3 y(6))
		unifyLiteral('object application of class \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26139)	testLiteral(y(5) '' 26148)
		getLiteral(procedure y(6))
		branch(26168)
lbl(26148)	getRecord('#' 3 y(6))
		unifyLiteral('procedure \'')
		unifyValue(y(5))
		unifyLiteral('\'')
		branch(26168)
lbl(26160)	getLiteral('procedure _' y(6))
		branch(26168)
lbl(26165)	unify(y(6) y(5))
lbl(26168)	testLiteral(y(4) nil 26177)
		getLiteral(nil y(7))
		branch(26185)
lbl(26177)	getRecord('#' 2 y(7))
		unifyLiteral(' in ')
		unifyValue(y(4))
lbl(26185)	move(y(1) x(0))
		inlineMinus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL8
		genFastCall(<Q: 312> 7)
lbl(26200)	getList(x(2))
		unifyLiteral('...')
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(26208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(439)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(25881)
lbl(26223)	definition(x(4) 26337 pid('GetStack' 3 pos('./sp/Error.oz' 442 2) nil 5) <Q: 313> nil)
		testLiteral(x(0) unit 26237)
		getLiteral(nil x(2))
		return
lbl(26237)	putConstant(0 x(3))
		testLT(x(3) x(1) x(4) 26331)
		allocateL4
lbl(26246)	definition(x(3) 26264 pid('' 2 pos('./sp/Error.oz' 446 21) nil 4) unit nil)
		putConstant(toplevel x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(26246)
lbl(26264)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 26299 26320)
		getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('On toplevel')
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(26299)	getList(y(2))
		unifyLiteral('')
		unifyVariable(x(0))
		getList(x(0))
		unifyLiteral('CallStack: ')
		unifyVariable(x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 312> 7)
lbl(26320)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(446)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(26331)	getLiteral(nil x(2))
		return
		endDefinition(26223)
lbl(26337)	definition(x(4) 26485 pid('ErrorTitle' 2 pos('./sp/Error.oz' 488 2) nil 6) <Q: 314> [g(7) g(8)])
		allocateL5
		putConstant(kind x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(4) unit 26367)
lbl(26362)	getLiteral('' y(1))
		branch(26377)
lbl(26367)	getRecord('#' 3 y(1))
		unifyLiteral(' ')
		unifyValue(x(4))
		unifyLiteral(' ')
lbl(26377)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		move(g(0) x(0))
		move(y(2) x(1))
		inlineMinus(x(0) x(1) x(2))
		move(g(1) x(1))
		inlineMinus(x(2) x(1) x(3))
		putConstant(2 x(4))
		callBI('div' [x(3) x(4)]#[x(5)])
		inlinePlus1(x(3) x(2))
		putConstant(2 x(3))
		callBI('div' [x(2) x(3)]#[x(4)])
		move(x(4) y(2))
		move(x(5) x(0))
		putConstant(42 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 289> 6)
		move(y(2) x(0))
		putConstant(42 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 289> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		move(y(4) x(3))
		putConstant('%***' x(0))
		putConstant('\n' x(4))
		sendMsg('#' y(0) 5 cache)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL5
		tailCall(x(1) 1)
		endDefinition(26337)
lbl(26485)	definition(x(4) 26544 pid('ErrorMsgLine' 2 pos('./sp/Error.oz' 503 2) nil 5) <Q: 315> nil)
		putConstant(msg x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26505)
lbl(26504)	return
lbl(26505)	allocateL2
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		move(y(1) x(0))
		call(y(0) 1)
		putConstant('' x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 288> 4)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(26485)
lbl(26544)	definition(x(4) 26572 pid('ErrorItems' 2 pos('./sp/Error.oz' 512 2) nil 5) <Q: 316> nil)
		putConstant(items x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26564)
lbl(26563)	return
lbl(26564)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26544)
lbl(26572)	definition(x(4) 26628 pid('ErrorLoc' 2 pos('./sp/Error.oz' 521 2) nil 5) <Q: 317> [g(9)])
		putConstant(loc x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26592)
lbl(26591)	return
lbl(26592)	allocateL3
		move(x(0) y(0))
		move(x(4) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 311> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26572)
lbl(26628)	definition(x(4) 26713 pid('ErrorStack' 2 pos('./sp/Error.oz' 532 2) nil 5) <Q: 318> [x(1) g(9)])
		putConstant(stack x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26648)
lbl(26647)	return
lbl(26648)	allocateL3
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		putConstant(errors x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		move(y(2) x(0))
		inlineDot(x(0) 'thread' x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 313> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(26628)
lbl(26713)	definition(x(4) 26755 pid('ErrorFooter' 2 pos('./sp/Error.oz' 544 2) nil 5) <Q: 319> [g(10)])
		putConstant(footer x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testBool(x(4) 26741 26742)
		move(x(0) x(1))
		move(g(0) x(0))
		tailCall(x(1) 1)
lbl(26741)	return
lbl(26742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(26713)
lbl(26755)	definition(x(4) 26783 pid('ErrorInfo' 2 pos('./sp/Error.oz' 550 2) nil 5) <Q: 320> nil)
		putConstant(info x(2))
		putConstant(unit x(3))
		callBI('CondSelect' [x(1) x(2) x(3)]#[x(4)])
		testLiteral(x(4) unit 26775)
lbl(26774)	return
lbl(26775)	move(x(4) x(1))
		genFastCall(<Q: 310> 5)
		endDefinition(26755)
lbl(26783)	definition(x(4) 26841 pid('ErrorMsg' 2 pos('./sp/Error.oz' 559 2) nil 2) <Q: 321> nil)
		testLiteral(x(1) none 26794)
lbl(26793)	return
lbl(26794)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26783)
lbl(26841)	definition(x(10) 26923 pid('ErrorMsgDebug' 2 pos('./sp/Error.oz' 571 2) nil 2) <Q: 322> nil)
		testLiteral(x(1) none 26852)
lbl(26851)	return
lbl(26852)	allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg('\n' y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 314> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 315> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 316> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 317> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 320> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 318> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 319> 5)
		endDefinition(26841)
lbl(26923)	definition(x(11) 27159 pid('Format' 5 pos('./sp/Error.oz' 591 6) nil 10) <Q: 323> [g(11)])
		allocateL7
		putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(footer)
		setValue(x(9))
		putList(x(7))
		setConstant(stack)
		setValue(x(8))
		putList(x(6))
		setConstant(loc)
		setValue(x(7))
		putList(x(5))
		setConstant(items)
		setValue(x(6))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(error y(5))
		createVariable(y(6))
		testLiteral(y(0) unit 26999)
		testLiteral(y(1) unit 26991)
		unify(y(6) x(5))
		branch(27023)
lbl(26991)	getList(y(6))
		unifyLiteral(msg)
		unifyValue(x(5))
		branch(27023)
lbl(26999)	testLiteral(y(1) unit 27011)
		getList(y(6))
		unifyLiteral(kind)
		unifyValue(x(5))
		branch(27023)
lbl(27011)	getList(y(6))
		unifyLiteral(kind)
		unifyVariable(x(6))
		getList(x(6))
		unifyLiteral(msg)
		unifyValue(x(5))
lbl(27023)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		move(y(4) x(2))
		genFastCall(<P: 110> 6)
		testLiteral(y(0) unit 27040)
		branch(27052)
lbl(27040)	move(y(4) x(0))
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(0))
lbl(27052)	move(y(1) x(0))
		putConstant(unit x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		testBool(x(2) 27090 27079)
		move(y(4) x(1))
		inlineDot(x(1) msg x(2) cache)
		unify(x(2) y(1))
		branch(27090)
lbl(27079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(608)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27090)	move(y(4) x(0))
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(2))
		inlineDot(x(0) loc x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 303> 4)
		move(y(4) x(0))
		inlineDot(x(0) stack x(1) cache)
		move(y(3) x(0))
		genFastCall(<Q: 304> 4)
		putConstant(true x(2))
		move(y(4) x(0))
		inlineDot(x(0) footer x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) info x(1) cache)
		move(y(3) x(0))
		deAllocateL7
		genFastCall(<Q: 302> 5)
		endDefinition(26923)
lbl(27159)	definition(x(12) 27281 pid('FormatReRaiseExc' 3 pos('./sp/Error.oz' 619 6) nil 14) <Q: 324> nil)
		allocateL3
		getRecord(error [items loc stack title] x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('Unable to Print Error Message')
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(hint [l m] x(3))
		unifyLiteral('Initial exception')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(0))
		getList(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(hint [l m] x(6))
		unifyLiteral('Format exception Kind')
		unifyVariable(x(8))
		getList(x(7))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(hint [l m] x(9))
		unifyLiteral('Format exception')
		unifyVariable(x(11))
		getRecord(oz 1 x(11))
		unifyVariable(x(12))
		getList(x(10))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(line 1 x(13))
		unifyLiteral('Please send bug report to oz@ps.uni-sb.de')
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(8))
		move(x(0) y(2))
		move(x(1) x(0))
		move(x(12) x(1))
		genFastCall(<Q: 300> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 303> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 304> 5)
		endDefinition(27159)
lbl(27281)	definition(x(12) 27325 pid('GenericFormatter' 3 pos('./sp/Error.oz' 635 6) nil 6) <Q: 325> nil)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(line 1 x(3))
		setValue(x(4))
		putList(x(5))
		setValue(x(3))
		setConstant(nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(unit x(0))
		genFastCall(<Q: 323> 11)
		endDefinition(27281)
lbl(27325)	definition(x(13) 27619 pid('FormatOzError' 2 pos('./sp/Error.oz' 643 6) nil 5) <Q: 326> [x(3)])
		testBI('IsRecord' [x(0)]#[x(2)] 27605)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'failure' 27378)
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) get x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('failure' x(0))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(27378)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant('Error: unhandled exception' y(2))
		testLiteral(x(2) error 27519)
lbl(27391)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 301> 4)
		testBool(y(3) 27496 27508)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 300> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) exists x(2) cache)
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 27473 27485)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27473)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27485)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(655)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27496)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27508)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27519)	testLiteral(x(2) system 27525)
		branch(27391)
lbl(27525)	callBI('Label' [x(0)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) exists x(4) cache)
		moveMoveXYYX(x(2) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(4) 2)
		testBool(y(4) 27582 27594)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(2) y(0) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(27582)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 325> 7)
lbl(27594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(665)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(27605)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant('Error: unhandled exception' x(0))
		genFastCall(<Q: 325> 7)
		endDefinition(27325)
lbl(27619)	definition(x(3) 27715 pid('DefExHdl' 1 pos('./sp/Error.oz' 681 2) nil 3) <Q: 327> [x(10) g(12) x(2)])
		allocateL2
		move(x(0) y(0))
		exHandler(27654)
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 324> 6)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		branch(27679)
lbl(27654)	putConstant(high x(0))
		genFastCall(<P: 262> 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 326> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 308> 4)
		popEx
lbl(27679)	move(g(2) x(0))
		inlineDot(x(0) onToplevel x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		testBool(y(0) 27700 27702)
		deAllocateL2
		return
lbl(27700)	deAllocateL2
		failure
lbl(27702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(27619)
lbl(27715)	inlineDot(x(1) put x(2) cache)
		moveMoveXYXY(x(1) y(1) x(5) y(2))
		moveMoveXYXY(x(6) y(3) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYXY(x(4) y(7) x(10) y(8))
		moveMoveXYXY(x(11) y(9) x(12) y(10))
		move(x(13) y(11))
		move(x(3) x(1))
		putConstant('errors.handler' x(0))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('errors.handler' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		getRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] g(13))
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(g(14))
		unifyValue(y(2))
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(1))
		deAllocateL
		return
		endDefinition(24298)
lbl(27810)	tailCall(x(3) 0)
		endDefinition(24076)
lbl(27815)	putList(x(4))
		setConstant(exists)
		setConstant(nil)
		putList(x(3))
		setConstant(get)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putList(x(6))
		setConstant(get)
		setValue(x(7))
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(12))
		setConstant(onToplevel)
		setConstant(nil)
		putList(x(11))
		setConstant(valueToVirtualString)
		setValue(x(12))
		putList(x(10))
		setConstant(printError)
		setValue(x(11))
		putList(x(9))
		setConstant(printName)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putRecord('import' ['ErrorRegistry' 'Property' 'System'] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putConstant('procedure/2' x(4))
		putConstant('procedure/5' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/3' x(8))
		putConstant('procedure/2' x(9))
		putConstant('procedure/2' x(10))
		putConstant('procedure/5' x(11))
		putConstant('procedure/2' x(12))
		putConstant('procedure/2' x(13))
		putConstant('procedure/2' x(14))
		putConstant('procedure/2' x(15))
		putConstant(value x(16))
		putRecord('export' [dispatch format formatAppl formatExc formatGeneric formatHint formatLine formatPos formatTypes info msg msgDebug printExc] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		createVariableMove(y(224) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(27966)	definition(x(4) 28131 pid('LayoutDot' 5 pos('./sp/ErrorRegistry.oz' 33 3) nil 11) <P: 328> nil)
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testBI('IsDet' [x(0)]#[x(5)] 28112)
lbl(27990)	testBI('IsRecord' [x(0)]#[x(5)] 28112)
lbl(27994)	callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		putConstant(5 x(1))
		testLT(x(1) x(0) x(2) 28112)
lbl(28017)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		getRecord('#' 6 x(2))
		unifyLiteral('R ')
		unifyValue(y(3))
		unifyLiteral(' ')
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(1))
		getRecord(oz 1 x(4))
		unifyValue(y(2))
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(hint [l m] x(5))
		unifyLiteral('Expected fields')
		unifyVariable(x(7))
		getRecord(list 2 x(7))
		unifyVariable(x(8))
		unifyLiteral(' ')
		getList(x(6))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(hint [l m] x(9))
		unifyLiteral('Record value')
		unifyVariable(x(10))
		getRecord(oz 1 x(10))
		unifyValue(y(0))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(8))
		deAllocateL6
		return
lbl(28112)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		genFastCall(<P: 329> 11)
		endDefinition(27966)
lbl(28131)	definition(x(4) 28188 pid('LayoutComma' 3 pos('./sp/ErrorRegistry.oz' 46 3) nil 8) <P: 330> nil)
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(hint [l m] x(2))
		unifyLiteral('In statement')
		unifyVariable(x(4))
		getRecord('#' 2 x(4))
		unifyLiteral('C, ')
		unifyVariable(x(5))
		getRecord(oz 1 x(5))
		unifyValue(x(1))
		getList(x(3))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(hint [l m] x(6))
		unifyLiteral('Class value')
		unifyVariable(x(7))
		getRecord(oz 1 x(7))
		unifyValue(x(0))
		return
		endDefinition(28131)
lbl(28188)	definition(x(4) 28247 pid('LayoutBin' 5 pos('./sp/ErrorRegistry.oz' 51 3) nil 9) <P: 329> nil)
		getList(x(4))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(hint [l m] x(4))
		unifyLiteral('In statement')
		unifyVariable(x(5))
		getRecord('#' 7 x(5))
		unifyVariable(x(6))
		unifyLiteral(' ')
		unifyValue(x(3))
		unifyLiteral(' ')
		unifyVariable(x(7))
		unifyLiteral(' = ')
		unifyVariable(x(8))
		getRecord(oz 1 x(6))
		unifyValue(x(0))
		getRecord(oz 1 x(7))
		unifyValue(x(1))
		getRecord(oz 1 x(8))
		unifyValue(x(2))
		return
		endDefinition(28188)
lbl(28247)	definition(x(2) 34810 pid('' 2 pos('./sp/ErrorRegistry.oz' 57 3) nil 4) <P: 331> [y(128) y(151) y(191) y(192) y(208) y(209) y(1) y(148) y(149) y(156)])
		putList(x(2))
		setPredicateRef(<Q: 332>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 341>)
		setValue(x(2))
lbl(28313)	definitionCopy(x(3) 34805 pid('/body' 0 pos('./sp/ErrorRegistry.oz' 57 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) x(1)])
		allocateL9
		move(g(0) x(0))
		inlineDot(x(0) 'Error' x(2) cache)
lbl(28329)	definition(x(1) 31295 pid('KernelFormatter' 2 pos('./sp/ErrorRegistry.oz' 79 6) nil 20) <Q: 332> [x(2) g(1) g(2) g(3) g(4) g(5) g(6)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) kernel 6 29165)
lbl(28361)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) type 29165)
		putRecord('#' 2 y(2))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		move(x(5) y(8))
		testRecord(y(2) '#' 2 28475)
lbl(28402)	getVarVar(x(0) x(6))
		shallowGuard(28475)
		getLiteral('.' x(0))
		getList(x(6))
		unifyVariable(x(0))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(28428)	shallowThen
		move(x(6) x(1))
		move(x(8) x(2))
		putConstant('.' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28475)	testRecord(y(2) '#' 2 28550)
lbl(28480)	getVarVar(x(0) x(1))
		shallowGuard(28550)
		getLiteral('^' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28506)	shallowThen
		move(x(3) x(2))
		putConstant('^' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<P: 328> 10)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28550)	testRecord(y(2) '#' 2 28616)
lbl(28555)	getVarVar(x(0) x(1))
		shallowGuard(28616)
		getLiteral(',' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28575)	shallowThen
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 330> 6)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28616)	testRecord(y(2) '#' 2 28747)
lbl(28621)	getVarVar(x(0) x(1))
		shallowGuard(28747)
		getLiteral('+1' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28641)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' + 1 = ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(9))
		setValue(x(0))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord('#' 4 x(8))
		setConstant('1 + ')
		setValue(x(9))
		setConstant(' = ')
		setValue(x(10))
		putRecord(hint [l m] x(7))
		setConstant('Possible origin')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(y(2))
		setValue(x(1))
		setValue(x(6))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28747)	testRecord(y(2) '#' 2 28842)
lbl(28752)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(28842)
		getLiteral(fdTellConstraint x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(28774)	shallowThen
		putRecord(oz 1 x(4))
		setValue(x(0))
		putRecord(oz 1 x(5))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' :: ')
		setValue(x(5))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putList(y(6))
		setValue(x(1))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(28842)	putList(x(8))
		setConstant('\\=')
		setConstant(nil)
		putList(x(7))
		setConstant('>=')
		setValue(x(8))
		putList(x(6))
		setConstant('=<')
		setValue(x(7))
		putList(x(5))
		setConstant('>')
		setValue(x(6))
		putList(x(4))
		setConstant('<')
		setValue(x(5))
		putList(x(3))
		setConstant('/')
		setValue(x(4))
		putList(x(2))
		setConstant('*')
		setValue(x(3))
		putList(x(0))
		setConstant('-')
		setValue(x(2))
		putList(x(1))
		setConstant('+')
		setValue(x(0))
		move(y(6) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 29007 29069)
		createVariable(y(9))
		testList(y(7) 28945)
lbl(28914)	getVarVar(x(0) x(1))
		shallowGuard(28945)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(28931)	shallowThen
		move(x(3) x(2))
		moveMoveYXYX(y(6) x(3) y(9) x(4))
		genFastCall(<P: 329> 10)
		branch(28976)
lbl(28945)	getList(y(9))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(28976)	move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29007)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setVariable(x(2))
		putList(y(9))
		setValue(x(0))
		setConstant(nil)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(8) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(6) x(1))
		move(y(5) x(2))
		genFastCall(<P: 21> 6)
		branch(29080)
lbl(29069)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(117)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(29080)	move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('type error' y(3))
		createVariable(y(7))
		testNumber(y(4) 0 29120)
lbl(29115)	unify(y(7) y(5))
		branch(29134)
lbl(29120)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(4))
lbl(29134)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29165)	testRecord(y(2) kernel 6 29338)
lbl(29170)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) instantiation 29338)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(5) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setConstant(nil)
		move(y(6) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatTypes x(2) cache)
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		putConstant('instantiation error' y(2))
		createVariable(y(7))
		testNumber(y(3) 0 29293)
lbl(29288)	unify(y(7) y(4))
		branch(29307)
lbl(29293)	getList(y(7))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(hint [l m] x(0))
		unifyLiteral('At argument')
		unifyValue(y(3))
lbl(29307)	moveMoveYXYX(y(6) x(0) y(7) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29338)	testRecord(y(2) kernel 3 29414)
lbl(29343)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) apply 29414)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		inlineDot(x(0) formatAppl x(4) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(4) 3)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(3))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(5) y(0) x(3))
		move(y(1) x(4))
		putConstant('error in application' x(0))
		putConstant('Application of non-procedure and non-object' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29414)	testRecord(y(2) kernel 3 29477)
lbl(29419)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '.' 29477)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
		move(x(3) y(2))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariable(x(2))
		putConstant('.' x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<P: 328> 10)
		moveMoveYXYX(y(2) x(5) y(3) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: illegal field selection' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29477)	testRecord(y(2) kernel 3 29560)
lbl(29482)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) recordConstruction 29560)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Label')
		setValue(x(4))
		putRecord(list 2 x(9))
		setValue(x(2))
		setConstant(' ')
		putRecord(hint [l m] x(8))
		setConstant('Feature-field Pairs')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: duplicate fields' x(0))
		putConstant('Duplicate fields in record construction' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29560)	testRecord(y(2) kernel 3 29744)
lbl(29565)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) arity 29744)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariable(y(4))
		testBI('IsProcedure' [x(1)]#[x(0)] 29593)
		callBI('ProcedureArity' [x(1)]#[x(0)])
		unify(x(0) y(4))
		branch(29596)
lbl(29593)	getNumber(1 y(4))
lbl(29596)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 24> 4)
		move(g(0) x(0))
		inlineDot(x(0) format x(1) cache)
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(7) x(2))
		call(x(3) 3)
		putConstant('Error: illegal number of arguments' y(2))
		createVariable(y(3))
		testNumber(y(4) 1 29648)
		getLiteral('' y(3))
		branch(29651)
lbl(29648)	getLiteral(s y(3))
lbl(29651)	createVariable(y(8))
		testNumber(y(5) 1 29662)
		getLiteral('' y(8))
		branch(29665)
lbl(29662)	getLiteral(s y(8))
lbl(29665)	putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(7))
		putRecord('#' 3 x(4))
		setValue(y(4))
		setConstant(' argument')
		setValue(y(3))
		putRecord(hint [l m] x(3))
		setConstant('Expected')
		setValue(x(4))
		putRecord('#' 3 x(7))
		setValue(y(5))
		setConstant(' argument')
		setValue(y(8))
		putRecord(hint [l m] x(6))
		setConstant('Found')
		setValue(x(7))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(2) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29744)	testRecord(y(2) kernel 2 29794)
lbl(29749)	getVarVar(x(0) x(1))
		testLiteral(x(0) noElse 29794)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29794)	testRecord(y(2) kernel 3 29869)
lbl(29799)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) noElse 29869)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Matching')
		setValue(x(8))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: conditional failed' x(0))
		putConstant('Missing else clause' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29869)	testRecord(y(2) kernel 2 29919)
lbl(29874)	getVarVar(x(0) x(1))
		testLiteral(x(0) boolCaseType 29919)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('At line')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: boolean conditional failed' x(0))
		putConstant('Non-boolean value found' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29919)	testRecord(y(2) kernel 2 29985)
lbl(29924)	getVarVar(x(0) x(1))
		testLiteral(x(0) div0 29985)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' div 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(29985)	testRecord(y(2) kernel 2 30051)
lbl(29990)	getVarVar(x(0) x(1))
		testLiteral(x(0) mod0 30051)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(6))
		setValue(x(1))
		putRecord('#' 3 x(4))
		setValue(x(6))
		setConstant(' mod 0')
		setConstant(' = _')
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('division by zero error' x(0))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30051)	testRecord(y(2) kernel 3 30155)
lbl(30056)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) dict 30155)
		callBI('Dictionary.keys' [x(1)]#[x(5)])
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Dictionary')
		setValue(x(4))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Key found')
		setValue(x(10))
		putRecord(oz 1 x(13))
		setValue(x(5))
		putRecord(hint [l m] x(12))
		setConstant('Legal keys')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(3))
		setValue(x(8))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Dictionary' x(0))
		putConstant('Key not found' x(1))
		deAllocateL10
		tailCall(x(6) 5)
lbl(30155)	testRecord(y(2) kernel 3 30260)
lbl(30160)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) array 30260)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Array.low' [x(1)]#[x(6)])
		callBI('Array.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index Found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Array' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30260)	testRecord(y(2) kernel 3 30329)
lbl(30265)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.new' 30329)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Lower bound')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Upper bound')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Illegal boundaries to BitArray.new' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30329)	testRecord(y(2) kernel 3 30434)
lbl(30334)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.index' 30434)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Bit array')
		setValue(x(4))
		putRecord(hint [l m] x(10))
		setConstant('Index found')
		setValue(x(2))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('Legal Range')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(8))
		setValue(x(3))
		setValue(x(9))
		move(x(8) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Index out of range' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30434)	testRecord(y(2) kernel 3 30575)
lbl(30439)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) 'BitArray.binop' 30575)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('BitArray.low' [x(1)]#[x(6)])
		callBI('BitArray.high' [x(1)]#[x(7)])
		callBI('BitArray.low' [x(2)]#[x(8)])
		callBI('BitArray.high' [x(2)]#[x(9)])
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('First bit array')
		setValue(x(4))
		putRecord('#' 3 x(13))
		setValue(x(6))
		setConstant(' - ')
		setValue(x(7))
		putRecord(hint [l m] x(12))
		setConstant('First bounds')
		setValue(x(13))
		putRecord(oz 1 x(16))
		setValue(x(2))
		putRecord(hint [l m] x(15))
		setConstant('Second bit array')
		setValue(x(16))
		putRecord('#' 3 x(19))
		setValue(x(8))
		setConstant(' - ')
		setValue(x(9))
		putRecord(hint [l m] x(18))
		setConstant('Second bounds')
		setValue(x(19))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(14))
		setValue(x(15))
		setValue(x(17))
		putList(x(11))
		setValue(x(12))
		setValue(x(14))
		putList(x(10))
		setValue(x(3))
		setValue(x(11))
		move(x(10) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: BitArray' x(0))
		putConstant('Incompatible bounds in binary operation on BitArrays' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30575)	testRecord(y(2) kernel 2 30635)
lbl(30580)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoFloat 30635)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to float failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30635)	testRecord(y(2) kernel 2 30695)
lbl(30640)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoInt 30695)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to integer failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30695)	testRecord(y(2) kernel 2 30755)
lbl(30700)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoAtom 30755)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to atom failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30755)	testRecord(y(2) kernel 2 30815)
lbl(30760)	getVarVar(x(0) x(1))
		testLiteral(x(0) stringNoValue 30815)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('"')
		setValue(x(1))
		setConstant('"')
		putRecord(hint [l m] x(3))
		setConstant('String')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: representation fault' x(0))
		putConstant('Conversion to Oz value failed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30815)	testRecord(y(2) kernel 2 30918)
lbl(30820)	getVarVar(x(0) x(1))
		testLiteral(x(0) globalState 30918)
		createVariable(y(2))
		testLiteral(x(1) array 30838)
lbl(30833)	getLiteral('Assignment to global array' y(2))
		branch(30886)
lbl(30838)	testLiteral(x(1) dict 30847)
lbl(30842)	getLiteral('Assignment to global dictionary' y(2))
		branch(30886)
lbl(30847)	testLiteral(x(1) cell 30856)
lbl(30851)	getLiteral('Assignment to global cell' y(2))
		branch(30886)
lbl(30856)	testLiteral(x(1) io 30865)
lbl(30860)	getLiteral('Input/Output' y(2))
		branch(30886)
lbl(30865)	testLiteral(x(1) object 30874)
lbl(30869)	getLiteral('Assignment to global object' y(2))
		branch(30886)
lbl(30874)	testLiteral(x(1) 'lock' 30883)
lbl(30878)	getLiteral('Request of global lock' y(2))
		branch(30886)
lbl(30883)	unify(y(2) x(1))
lbl(30886)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 2 x(1))
		setValue(y(2))
		setConstant(' from local space')
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: space hierarchy' x(0))
		putConstant(nil x(2))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30918)	testRecord(y(2) kernel 2 30974)
lbl(30923)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceMerged 30974)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Space already merged' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(30974)	testRecord(y(2) kernel 2 31030)
lbl(30979)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceSuper 31030)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Merge of superordinated space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31030)	testRecord(y(2) kernel 2 31086)
lbl(31035)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceParent 31086)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('Current space must be parent space' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31086)	testRecord(y(2) kernel 2 31142)
lbl(31091)	getVarVar(x(0) x(1))
		testLiteral(x(0) spaceNoChoice 31142)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Space')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Space' x(0))
		putConstant('No choices left' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31142)	testRecord(y(2) kernel 2 31198)
lbl(31147)	getVarVar(x(0) x(1))
		testLiteral(x(0) portClosed 31198)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Port')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Port' x(0))
		putConstant('Port already closed' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31198)	testRecord(y(2) kernel 1 31214)
lbl(31203)	getVariable(x(0))
		testLiteral(x(0) terminate 31214)
		getLiteral(none y(1))
		deAllocateL10
		return
lbl(31214)	testRecord(y(2) kernel 2 31272)
lbl(31219)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) block 31272)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Thread')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Error: Thread' x(0))
		putConstant('Purely sequential thread blocked' x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(31272)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('Kernel' x(0))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(28329)
lbl(31295)	definition(x(3) 32387 pid('ObjectFormatter' 2 pos('./sp/ErrorRegistry.oz' 470 6) nil 16) <Q: 333> [x(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in object system' y(3))
		testRecord(y(2) object 4 31448)
lbl(31330)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) '<-' 31448)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(8))
		setValue(x(2))
		putRecord(oz 1 x(9))
		setValue(x(3))
		putRecord('#' 3 x(4))
		setValue(x(8))
		setConstant(' <- ')
		setValue(x(9))
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(4))
		putRecord(oz 1 x(12))
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Attribute does not exist')
		setValue(x(12))
		putRecord(list 2 x(15))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(14))
		setConstant('Expected Attribute(s)')
		setValue(x(15))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(13))
		putList(x(7))
		setValue(x(1))
		setValue(x(10))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31448)	testRecord(y(2) object 3 31564)
lbl(31453)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) '@' 31564)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		callBI('Arity' [x(1)]#[x(6)])
		putRecord(oz 1 x(4))
		setValue(x(2))
		putRecord('#' 3 x(3))
		setConstant('@')
		setValue(x(4))
		setConstant(' = _')
		putRecord(hint [l m] x(1))
		setConstant('In statement')
		setValue(x(3))
		putRecord(oz 1 x(10))
		setValue(x(2))
		putRecord(hint [l m] x(9))
		setConstant('Attribute does not exist')
		setValue(x(10))
		putRecord(list 2 x(13))
		setValue(x(6))
		setConstant(' ')
		putRecord(hint [l m] x(12))
		setConstant('Expected attribute(s)')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		move(y(3) x(0))
		move(x(7) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31564)	testRecord(y(2) object 5 31668)
lbl(31569)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		testLiteral(x(0) sharing 31668)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord('#' 3 x(8))
		setValue(x(1))
		setConstant(' and ')
		setValue(x(2))
		putRecord(hint [l m] x(7))
		setConstant('Classes')
		setValue(x(8))
		putRecord('#' 2 x(11))
		setConstant('Shared ')
		setValue(x(3))
		putRecord(oz 1 x(13))
		setValue(x(4))
		putRecord('#' 2 x(12))
		setValue(x(13))
		setConstant(' (is not redefined)')
		putRecord(hint [l m] x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes not ordered by inheritance' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31668)	testRecord(y(2) object 2 31832)
lbl(31673)	getVarVar(x(0) x(1))
		shallowGuard(31832)
		getLiteral(order x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31695)	shallowThen
lbl(31696)	definition(x(0) 31715 pid('Rel' 3 pos('./sp/ErrorRegistry.oz' 498 5) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' < ')
		unifyValue(x(1))
		return
		endDefinition(31696)
lbl(31715)	move(g(0) x(4))
		inlineDot(x(4) format x(5) cache)
		moveMoveXYXY(x(1) y(2) x(0) y(4))
		move(x(5) y(5))
		move(x(2) x(0))
		move(x(3) x(1))
		createVariableMove(y(6) x(2))
		call(y(4) 3)
lbl(31744)	definition(x(1) 31792 pid('' 2 pos('./sp/ErrorRegistry.oz' 503 16) nil 5) unit [y(4)])
		shallowGuard(31779)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(31760)	shallowThen
		getRecord(hint [m] x(1))
		unifyVariable(x(4))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		tailCall(g(0) 3)
lbl(31779)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(503)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(31744)
lbl(31792)	move(y(2) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		putRecord(hint [l m] x(0))
		setConstant('Relation found')
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(y(4))
		moveMoveYXYX(y(5) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Classes cannot be ordered' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31832)	testRecord(y(2) object 3 31928)
lbl(31837)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) lookup 31928)
		putRecord(oz 1 x(0))
		setValue(x(1))
		putRecord(hint [l m] y(2))
		setConstant('Class')
		setValue(x(0))
		putRecord(oz 1 x(0))
		setValue(x(2))
		putRecord(hint [l m] y(4))
		setConstant('Message')
		setValue(x(0))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('Method undefined and no otherwise method given' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method lookup in message sending' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(31928)	testRecord(y(2) object 3 32012)
lbl(31933)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) final 32012)
		putRecord(hint [l m] y(2))
		setConstant('Final class used as parent')
		setValue(x(1))
		putRecord(hint [l m] y(4))
		setConstant('Class to be created')
		setValue(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		putConstant('remove prop final from parent class or change inheritance relation' x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putList(x(1))
		setValue(y(4))
		setValue(y(5))
		putList(x(2))
		setValue(y(2))
		setValue(x(1))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Inheritance from final class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32012)	testRecord(y(2) object 3 32087)
lbl(32017)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) inheritanceFromNonClass 32087)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Non-class used as parent')
		setValue(x(4))
		putRecord(hint [l m] x(8))
		setConstant('Class to be created')
		setValue(x(2))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Inheritance from non-class' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32087)	testRecord(y(2) object 2 32143)
lbl(32092)	getVarVar(x(0) x(1))
		testLiteral(x(0) arityMismatchDefaultMethod 32143)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Unexpected feature')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Arity mismatch for method with defaults' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32143)	testRecord(y(2) object 1 32190)
lbl(32148)	getVariable(x(0))
		testLiteral(x(0) slaveNotFree 32190)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is not free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method becomeSlave' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32190)	testRecord(y(2) object 1 32237)
lbl(32195)	getVariable(x(0))
		testLiteral(x(0) slaveAlreadyFree 32237)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Slave is already free')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Method free' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32237)	testRecord(y(2) object 2 32293)
lbl(32242)	getVarVar(x(0) x(1))
		testLiteral(x(0) locking 32293)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Object')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Attempt to lock unlockable object' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32293)	testRecord(y(2) object 3 32364)
lbl(32298)	getVarVar(x(0) x(1))
		getVariable(x(2))
		createVariable(y(2))
		testLiteral(x(0) fromFinalClass 32364)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Final class')
		setValue(x(1))
		putRecord(hint [l m] x(7))
		setConstant('Operation')
		setValue(x(2))
		putList(x(4))
		setValue(x(7))
		setConstant(nil)
		putList(x(6))
		setValue(x(3))
		setValue(x(4))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Final class not allowed' x(1))
		deAllocateL7
		tailCall(x(5) 5)
lbl(32364)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(31295)
lbl(32387)	definition(x(4) 33160 pid('FailureFormatter' 2 pos('./sp/ErrorRegistry.oz' 574 6) nil 12) <Q: 334> [x(2)])
		allocateL8
		move(g(0) x(2))
		inlineDot(x(2) info x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testLiteral(y(2) unit 32439)
lbl(32418)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('failure' x(0))
		deAllocateL8
		tailCall(x(3) 3)
lbl(32439)	testLiteral(y(2) 'fail' 32481)
lbl(32443)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setConstant('fail')
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32481)	testRecord(y(2) apply 2 32958)
lbl(32486)	getVarVar(x(0) x(1))
		move(g(0) x(2))
		inlineDot(x(2) format x(3) cache)
		putRecord('#' 2 y(2))
		setValue(x(0))
		setValue(x(1))
		putConstant('failure' y(3))
		move(x(3) y(4))
		createVariable(y(5))
		moveMoveXYXY(x(0) y(6) x(1) y(7))
		testRecord(y(2) '#' 2 32585)
lbl(32524)	getVarVar(x(4) x(5))
		shallowGuard(32585)
		getLiteral('^' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(32544)	shallowThen
		getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Tell')
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyVariable(x(5))
		unifyLiteral(' ^ ')
		unifyVariable(x(7))
		unifyLiteral(' = _')
		getRecord(oz 1 x(5))
		unifyValue(x(4))
		getRecord(oz 1 x(7))
		unifyValue(x(6))
		branch(32938)
lbl(32585)	testRecord(y(2) '#' 2 32649)
lbl(32590)	getVarVar(x(0) x(1))
		shallowGuard(32649)
		getLiteral('=' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32610)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' = ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32649)	testRecord(y(2) '#' 2 32713)
lbl(32654)	getVarVar(x(0) x(1))
		shallowGuard(32713)
		getLiteral(fdPutList x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32674)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' :: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32713)	testRecord(y(2) '#' 2 32777)
lbl(32718)	getVarVar(x(0) x(1))
		shallowGuard(32777)
		getLiteral(fdPutGe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32738)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' >: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32777)	testRecord(y(2) '#' 2 32841)
lbl(32782)	getVarVar(x(0) x(1))
		shallowGuard(32841)
		getLiteral(fdPutLe x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32802)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' <: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32841)	testRecord(y(2) '#' 2 32907)
lbl(32846)	getVarVar(x(0) x(1))
		createVariable(y(2))
		shallowGuard(32907)
		getLiteral(fdPutNot x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(32868)	shallowThen
		getList(y(5))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Tell')
		unifyVariable(x(3))
		getRecord('#' 3 x(3))
		unifyVariable(x(4))
		unifyLiteral(' \\=: ')
		unifyVariable(x(5))
		getRecord(oz 1 x(4))
		unifyValue(x(0))
		getRecord(oz 1 x(5))
		unifyValue(x(2))
		branch(32938)
lbl(32907)	getList(y(5))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('In statement')
		unifyVariable(x(2))
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		call(x(3) 3)
lbl(32938)	moveMoveYXYX(y(4) x(5) y(3) x(0))
		moveMoveYXYX(y(5) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
lbl(32958)	testRecord(y(2) eq 2 33026)
lbl(32963)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33026)	testRecord(y(2) tell 2 33114)
lbl(33031)	getVarVar(x(5) x(6))
		move(g(0) x(0))
		inlineDot(x(0) format x(7) cache)
		putRecord(oz 1 x(4))
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(6))
		putRecord('#' 3 x(3))
		setValue(x(4))
		setConstant(' = ')
		setValue(x(8))
		putRecord(hint [l m] x(1))
		setConstant('Tell')
		setValue(x(3))
		putRecord(oz 1 x(11))
		setValue(x(5))
		putRecord(hint [l m] x(10))
		setConstant('Store')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(9))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(7) 5)
lbl(33114)	move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(1))
		setConstant('??? ')
		setValue(x(3))
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('failure' x(0))
		putConstant(unit x(1))
		deAllocateL8
		tailCall(x(5) 5)
		endDefinition(32387)
lbl(33160)	definition(x(5) 33330 pid('RecordCFormatter' 2 pos('./sp/ErrorRegistry.oz' 645 6) nil 7) <Q: 335> [x(2)])
		allocateL9
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: records' y(3))
		testRecord(y(2) record 5 33307)
lbl(33195)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) width 33307)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(x(5) y(6))
		move(x(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(7) x(2))
		call(x(6) 3)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(3))
		setConstant('Statement')
		setValue(y(7))
		putList(x(1))
		setValue(x(3))
		setValue(y(8))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(6) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL9
		tailCall(x(5) 5)
lbl(33307)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL9
		tailCall(x(3) 3)
		endDefinition(33160)
lbl(33330)	definition(x(6) 34066 pid('SystemFormatter' 2 pos('./sp/ErrorRegistry.oz' 670 6) nil 11) <Q: 336> [x(2)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('system error' y(3))
		testRecord(y(2) system 2 33416)
lbl(33365)	getVarVar(x(0) x(1))
		testLiteral(x(0) parameter 33416)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Illegal system parameter ')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33416)	testRecord(y(2) system 2 33466)
lbl(33421)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitInternal 33466)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Internal System Limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33466)	testRecord(y(2) system 2 33516)
lbl(33471)	getVarVar(x(0) x(1))
		testLiteral(x(0) limitExternal 33516)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('External system limit')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33516)	testRecord(y(2) system 2 33566)
lbl(33521)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackInstalledTwice 33566)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure installed twice')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33566)	testRecord(y(2) system 2 33616)
lbl(33571)	getVarVar(x(0) x(1))
		testLiteral(x(0) fallbackNotInstalled 33616)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Fallback procedure not installed')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33616)	testRecord(y(2) system 2 33666)
lbl(33621)	getVarVar(x(0) x(1))
		testLiteral(x(0) builtinUndefined 33666)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Requested')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Undefined builtin' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33666)	testRecord(y(2) system 4 33750)
lbl(33671)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) builtinArity 33750)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in Oz-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33750)	testRecord(y(2) system 4 33834)
lbl(33755)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) inconsistentArity 33834)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(4))
		setConstant('Builtin')
		setValue(x(1))
		putRecord(hint [l m] x(8))
		setConstant('Found')
		setValue(x(2))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(x(3))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(6))
		setValue(x(4))
		setValue(x(7))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal arity in emulator-declaration' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33834)	testRecord(y(2) system 1 33893)
lbl(33839)	getVariable(x(0))
		testLiteral(x(0) inconsistentFastcall 33893)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l] x(1))
		setConstant('Inconsistency in optimized application')
		putRecord(hint [l] x(4))
		setConstant('Maybe due to previous toplevel failure')
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal inconsistency' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33893)	testRecord(y(2) system 1 33931)
lbl(33898)	getVariable(x(0))
		testLiteral(x(0) onceOnlyFunctor 33931)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Procedure definition with flag `once\' executed more than once' x(1))
		putConstant(nil x(2))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33931)	testRecord(y(2) system 2 33991)
lbl(33936)	getVarVar(x(0) x(1))
		testLiteral(x(0) fatal 33991)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(line 1 x(3))
		setValue(x(1))
		putRecord(line 1 x(6))
		setConstant('Please send bug report to oz@ps.uni-sb.de')
		putList(x(4))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Fatal exception' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(33991)	testRecord(y(2) system 2 34043)
lbl(33996)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) reinstallFormatter 34043)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Exception name already in use')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Registration of error formatter failed' x(1))
		deAllocateL4
		tailCall(x(5) 5)
lbl(34043)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(33330)
lbl(34066)	definition(x(7) 34283 pid('OSFormatter' 2 pos('./sp/ErrorRegistry.oz' 796 6) nil 11) <Q: 337> [x(2)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) os 4 34260)
lbl(34098)	getVarVar(x(0) x(5))
		getVarVar(x(6) x(7))
		match(x(0) ht(34239 [onScalar(os 34107) onScalar(host 34173)]))
lbl(34107)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Operating system error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34173)	move(g(0) x(0))
		inlineDot(x(0) format x(8) cache)
		putRecord(hint [l m] x(1))
		setConstant('System call')
		setValue(x(5))
		putRecord(hint [l m] x(4))
		setConstant('Error number')
		setValue(x(6))
		putRecord(hint [l m] x(10))
		setConstant('Description')
		setValue(x(7))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(9))
		putList(x(2))
		setValue(x(1))
		setValue(x(3))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('error in OS module' x(0))
		putConstant('Network Error' x(1))
		deAllocateL3
		tailCall(x(8) 5)
lbl(34239)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(34260)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in OS module' x(0))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(34066)
lbl(34283)	definition(x(8) 34610 pid('DPFormatter' 2 pos('./sp/ErrorRegistry.oz' 834 6) nil 6) <Q: 338> [x(2)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('Error: distributed programming' y(3))
		testRecord(y(2) dp 3 34417)
lbl(34318)	getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(0) generic 34417)
		move(g(0) x(0))
		inlineDot(x(0) format x(3) cache)
lbl(34336)	definition(x(4) 34380 pid('' 2 pos('./sp/ErrorRegistry.oz' 843 17) nil 4) unit nil)
		shallowGuard(34367)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(34352)	shallowThen
		getRecord(hint [l m] x(1))
		unifyValVar(x(2) x(0))
		getRecord(oz 1 x(0))
		unifyValue(x(3))
		return
lbl(34367)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(843)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34336)
lbl(34380)	moveMoveXYXY(x(1) y(2) x(3) y(3))
		move(x(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(5) y(2) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34417)	testRecord(y(2) dp 1 34473)
lbl(34422)	getVariable(x(0))
		shallowGuard(34473)
		getRecord(connection 2 x(0))
		unifyLiteral(illegalTicket)
		unifyVariable(x(1))
lbl(34434)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Illegal ticket for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34473)	testRecord(y(2) dp 1 34529)
lbl(34478)	getVariable(x(0))
		shallowGuard(34529)
		getRecord(connection 2 x(0))
		unifyLiteral(refusedTicket)
		unifyVariable(x(1))
lbl(34490)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused for connection' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34529)	testRecord(y(2) dp 1 34587)
lbl(34534)	getVariable(x(0))
		createVariable(y(2))
		shallowGuard(34587)
		getRecord(connection 2 x(0))
		unifyLiteral(ticketToDeadSite)
		unifyVariable(x(1))
lbl(34548)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(hint [l m] x(3))
		setConstant('Ticket')
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ticket refused: refers to dead site' x(0))
		putConstant(unit x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(34587)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(34283)
lbl(34610)	callBI('NewDictionary' nil#[x(2)])
lbl(34613)	definition(x(9) 34672 pid('NewFormatter' 2 pos('./sp/ErrorRegistry.oz' 874 6) nil 3) <Q: 339> [g(7) g(8) x(2)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 341> 4)
		testBool(y(2) 34646 34659)
		putRecord(system 2 x(0))
		setConstant(reinstallFormatter)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(34646)	move(g(2) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(34659)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(876)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34613)
lbl(34672)	definition(x(10) 34690 pid('GetFormatter' 2 pos('./sp/ErrorRegistry.oz' 886 6) nil 4) <Q: 340> [g(9) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34672)
lbl(34690)	definition(x(11) 34708 pid('ExFormatter' 2 pos('./sp/ErrorRegistry.oz' 892 6) nil 4) <Q: 341> [g(10) x(2)])
		move(g(1) x(2))
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(34690)
lbl(34708)	moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(10) y(7))
		move(x(11) y(8))
		putConstant(kernel x(0))
		genFastCall(<Q: 339> 4)
		move(y(0) x(1))
		putConstant(object x(0))
		genFastCall(<Q: 339> 4)
		move(y(1) x(1))
		putConstant('failure' x(0))
		genFastCall(<Q: 339> 4)
		move(y(2) x(1))
		putConstant(recordC x(0))
		genFastCall(<Q: 339> 4)
		move(y(3) x(1))
		putConstant(system x(0))
		genFastCall(<Q: 339> 4)
		move(y(5) x(1))
		putConstant(dp x(0))
		genFastCall(<Q: 339> 4)
		move(y(4) x(1))
		putConstant(os x(0))
		genFastCall(<Q: 339> 4)
		getRecord('export' [exists get put] g(11))
		unifyValue(y(8))
		unifyValue(y(7))
		unifyValue(y(6))
		deAllocateL9
		return
		endDefinition(28313)
lbl(34805)	tailCall(x(3) 0)
		endDefinition(28247)
lbl(34810)	putList(x(9))
		setConstant(info)
		setConstant(nil)
		putList(x(8))
		setConstant(dispatch)
		setValue(x(9))
		putList(x(7))
		setConstant(format)
		setValue(x(8))
		putList(x(6))
		setConstant(formatHint)
		setValue(x(7))
		putList(x(5))
		setConstant(formatTypes)
		setValue(x(6))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord('import' ['Error'] x(0))
		setValue(x(1))
		putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/2' x(6))
		putRecord('export' [exists get put] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(191) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		createVariable(x(4))
lbl(34891)	definition(x(0) 34977 pid('VectorToType' 2 pos('./cp/FD.oz' 33 3) nil 3) <P: 342> [y(1) x(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 34918 34964)
		getLiteral(list y(1))
		deAllocateL3
		return
lbl(34918)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 34930)
		getLiteral(tuple y(1))
		deAllocateL3
		return
lbl(34930)	testBI('IsRecord' [x(0)]#[x(1)] 34939)
		getLiteral(record y(1))
		deAllocateL3
		return
lbl(34939)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setValue(g(1))
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('Vector as input argument expected.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(34964)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(34891)
lbl(34977)	unify(x(0) x(4))
lbl(34980)	definition(x(4) 35018 pid('VectorToList' 2 pos('./cp/FD.oz' 44 3) nil 2) <P: 343> [y(165)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) list 35007)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(35007)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
		endDefinition(34980)
lbl(35018)	definition(x(5) 35049 pid('VectorsToLists' 2 pos('./cp/FD.oz' 50 3) nil 3) <P: 344> [x(4)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(35018)
lbl(35049)	definition(x(4) 35098 pid('RecordToTuple' 4 pos('./cp/FD.oz' 55 6) nil 6) <P: 345> nil)
		match(x(0) ht(35083 [onScalar(nil 35058) onRecord('|' 2 35059)]))
lbl(35058)	return
lbl(35059)	getVarVar(x(0) x(4))
		callBI('.' [x(2) x(0)]#[x(5)])
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(5))
		inlinePlus1(x(1) x(5))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 345> 9)
lbl(35083)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(58)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35049)
lbl(35098)	definition(x(4) 35184 pid('VectorToTuple' 2 pos('./cp/FD.oz' 61 6) nil 5) <P: 346> [y(145)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(35169 [onScalar(list 35119) onScalar(tuple 35131) onScalar(record 35136)]))
lbl(35119)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL3
		genFastCall(<P: 77> 7)
lbl(35131)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(35136)	move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		unify(x(2) y(1))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		putConstant(1 x(1))
		deAllocateL3
		genFastCall(<P: 345> 9)
lbl(35169)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(67)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(35098)
lbl(35184)	definition(x(4) 35225 pid('CloneList' 2 pos('./cp/FD.oz' 71 3) nil 2) <P: 347> nil)
		match(x(0) ht(35210 [onScalar(nil 35193) onRecord('|' 2 35197)]))
lbl(35193)	getLiteral(nil x(1))
		return
lbl(35197)	getVoid(1)
		getVariable(x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		genFastCall(<P: 347> 5)
lbl(35210)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(74)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35184)
lbl(35225)	definition(x(5) 35255 pid('ExpandPair' 4 pos('./cp/FD.oz' 78 6) nil 5) <P: 348> nil)
		testLE(x(0) x(1) x(4) 35249)
		getListValVar(x(3) x(0) x(3))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		genFastCall(<P: 348> 9)
lbl(35249)	unify(x(3) x(2))
		return
		endDefinition(35225)
lbl(35255)	definition(x(5) 35331 pid('Expand' 2 pos('./cp/FD.oz' 82 6) nil 4) <P: 349> nil)
		match(x(0) ht(35316 [onScalar(nil 35264) onRecord('|' 2 35268)]))
lbl(35264)	getLiteral(nil x(1))
		return
lbl(35268)	getVarVar(x(0) x(2))
		testRecord(x(0) '#' 2 35306)
lbl(35276)	allocateL4
		getVarVar(y(0) y(1))
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 349> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<P: 348> 9)
lbl(35306)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 349> 5)
lbl(35316)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(88)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(35255)
lbl(35331)	putRecord(fwdRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(5))
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord(negRelTable ['<:' '=:' '=<:' '>:' '>=:' '\\=:'] x(6))
		setConstant('>=:')
		setConstant('\\=:')
		setConstant('>:')
		setConstant('=<:')
		setConstant('<:')
		setConstant('=:')
lbl(35363)	definition(x(7) 35375 pid('WaitStable' 0 pos('./cp/FD.oz' 110 3) nil 0) <P: 350> nil)
		createChoice
lbl(35370)	lastClause
		emptyClause
lbl(35372)	return
		endDefinition(35363)
lbl(35375)	putList(x(8))
		setConstant('>=:')
		setConstant(nil)
		putList(x(3))
		setConstant('>:')
		setValue(x(8))
		putList(x(2))
		setConstant('=<:')
		setValue(x(3))
		putList(x(1))
		setConstant('<:')
		setValue(x(2))
		putList(x(0))
		setConstant('\\=:')
		setValue(x(1))
		putList(x(7))
		setConstant('=:')
		setValue(x(0))
		putList(x(1))
		setConstant(nil)
		setConstant(nil)
		putList(x(0))
		setConstant('FD.atLeast')
		setValue(x(1))
		putList(x(3))
		setConstant(nil)
		setConstant(nil)
		putList(x(2))
		setConstant('FD.atMost')
		setValue(x(3))
		putList(x(10))
		setConstant(nil)
		setConstant(nil)
		putList(x(9))
		setConstant('FD.reified.card')
		setValue(x(10))
		putList(x(12))
		setConstant(nil)
		setConstant(nil)
		putList(x(11))
		setConstant('FD.conj')
		setValue(x(12))
		putList(x(14))
		setConstant(nil)
		setConstant(nil)
		putList(x(13))
		setConstant('FD.disj')
		setValue(x(14))
		putList(x(16))
		setConstant(nil)
		setConstant(nil)
		putList(x(15))
		setConstant('FD.disjoint')
		setValue(x(16))
		putList(x(18))
		setConstant(nil)
		setConstant(nil)
		putList(x(17))
		setConstant('FD.disjointC')
		setValue(x(18))
		putList(x(20))
		setConstant(nil)
		setConstant(nil)
		putList(x(19))
		setConstant('FD.distance')
		setValue(x(20))
		putList(x(22))
		setConstant(nil)
		setConstant(nil)
		putList(x(21))
		setConstant('FD.distinct')
		setValue(x(22))
		putList(x(24))
		setConstant(nil)
		setConstant(nil)
		putList(x(23))
		setConstant('FD.distinctOffset')
		setValue(x(24))
		putList(x(26))
		setConstant(nil)
		setConstant(nil)
		putList(x(25))
		setConstant('FD.divD')
		setValue(x(26))
		putList(x(28))
		setConstant(nil)
		setConstant(nil)
		putList(x(27))
		setConstant('FD.divI')
		setValue(x(28))
		putList(x(30))
		setConstant(nil)
		setConstant(nil)
		putList(x(29))
		setConstant('FD.element')
		setValue(x(30))
		putList(x(32))
		setConstant(nil)
		setConstant(nil)
		putList(x(31))
		setConstant('FD.equi')
		setValue(x(32))
		putList(x(34))
		setConstant(nil)
		setConstant(nil)
		putList(x(33))
		setConstant('FD.exactly')
		setValue(x(34))
		putList(x(36))
		setConstant(nil)
		setConstant(nil)
		putList(x(35))
		setConstant('FD.exor')
		setValue(x(36))
		putList(x(39))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(38))
		setValue(x(39))
		setConstant(nil)
		putList(x(37))
		setConstant(fdConstrDisj)
		setValue(x(38))
		putList(x(42))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(41))
		setValue(x(42))
		setConstant(nil)
		putList(x(40))
		setConstant(fdConstrDisjSetUp)
		setValue(x(41))
		putList(x(44))
		setConstant(nil)
		setConstant(nil)
		putList(x(43))
		setConstant('FD.reflect.size')
		setValue(x(44))
		putList(x(47))
		setConstant('FD.reflect.domList')
		setConstant(nil)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant('FD.reflect.dom')
		setValue(x(46))
		putList(x(49))
		setConstant(nil)
		setConstant(nil)
		putList(x(48))
		setConstant('FD.reflect.max')
		setValue(x(49))
		putList(x(51))
		setConstant(nil)
		setConstant(nil)
		putList(x(50))
		setConstant('FD.reflect.mid')
		setValue(x(51))
		putList(x(53))
		setConstant(nil)
		setConstant(nil)
		putList(x(52))
		setConstant('FD.reflect.min')
		setValue(x(53))
		putList(x(55))
		setConstant(nil)
		setConstant(nil)
		putList(x(54))
		setConstant('FD.reflect.nextLarger')
		setValue(x(55))
		putList(x(57))
		setConstant(nil)
		setConstant(nil)
		putList(x(56))
		setConstant('FD.reflect.nextSmaller')
		setValue(x(57))
		putList(x(59))
		setConstant(nil)
		setConstant(nil)
		putList(x(58))
		setConstant('FD.watch.max')
		setValue(x(59))
		putList(x(61))
		setConstant(nil)
		setConstant(nil)
		putList(x(60))
		setConstant('FD.watch.min')
		setValue(x(61))
		putList(x(63))
		setConstant(nil)
		setConstant(nil)
		putList(x(62))
		setConstant('FD.watch.size')
		setValue(x(63))
		putList(x(65))
		setConstant(nil)
		setConstant(nil)
		putList(x(64))
		setConstant('FD.impl')
		setValue(x(65))
		putList(x(68))
		setConstant('FD.reified.dom')
		setConstant(nil)
		putList(x(67))
		setValue(x(68))
		setConstant(nil)
		putList(x(66))
		setConstant('FD.refied.int')
		setValue(x(67))
		putList(x(70))
		setConstant(nil)
		setConstant(nil)
		putList(x(69))
		setConstant('FD.inter')
		setValue(x(70))
		putList(x(84))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(83))
		setConstant('FD.disjointC')
		setValue(x(84))
		putList(x(82))
		setConstant('FD.disjoint')
		setValue(x(83))
		putList(x(81))
		setConstant('FD.modI')
		setValue(x(82))
		putList(x(80))
		setConstant('FD.modD')
		setValue(x(81))
		putList(x(79))
		setConstant('FD.max')
		setValue(x(80))
		putList(x(78))
		setConstant('FD.min')
		setValue(x(79))
		putList(x(77))
		setConstant('>:')
		setValue(x(78))
		putList(x(76))
		setConstant('>=:')
		setValue(x(77))
		putList(x(75))
		setConstant('<:')
		setValue(x(76))
		putList(x(74))
		setConstant('=<:')
		setValue(x(75))
		putList(x(73))
		setConstant('FD.sumC')
		setValue(x(74))
		putList(x(72))
		setValue(x(73))
		setConstant(nil)
		putList(x(71))
		setConstant('FD.lesseq')
		setValue(x(72))
		putList(x(86))
		setConstant(nil)
		setConstant(nil)
		putList(x(85))
		setConstant('FD.max')
		setValue(x(86))
		putList(x(88))
		setConstant(nil)
		setConstant(nil)
		putList(x(87))
		setConstant('FD.min')
		setValue(x(88))
		putList(x(90))
		setConstant(nil)
		setConstant(nil)
		putList(x(89))
		setConstant('FD.minus')
		setValue(x(90))
		putList(x(92))
		setConstant(nil)
		setConstant(nil)
		putList(x(91))
		setConstant('FD.modD')
		setValue(x(92))
		putList(x(94))
		setConstant(nil)
		setConstant(nil)
		putList(x(93))
		setConstant('FD.modI')
		setValue(x(94))
		putList(x(99))
		setConstant('FD.equi')
		setConstant(nil)
		putList(x(98))
		setConstant('FD.impl')
		setValue(x(99))
		putList(x(97))
		setConstant('FD.exor')
		setValue(x(98))
		putList(x(96))
		setValue(x(97))
		setConstant(nil)
		putList(x(95))
		setConstant('FD.nega')
		setValue(x(96))
		putList(x(103))
		setConstant('\\=:')
		setConstant(nil)
		putList(x(102))
		setConstant('FD.sumC')
		setValue(x(103))
		putList(x(101))
		setValue(x(102))
		setConstant(nil)
		putList(x(100))
		setConstant(notEqOff)
		setValue(x(101))
		putList(x(106))
		setConstant('FD.distance')
		setConstant(nil)
		putList(x(105))
		setValue(x(106))
		setConstant(nil)
		putList(x(104))
		setConstant('FD.plus')
		setValue(x(105))
		putList(x(110))
		setConstant('+')
		setConstant(nil)
		putList(x(109))
		setConstant('FD.distance')
		setValue(x(110))
		putList(x(108))
		setValue(x(109))
		setConstant(nil)
		putList(x(107))
		setConstant('FD.plus')
		setValue(x(108))
		putList(x(112))
		setConstant(nil)
		setConstant(nil)
		putList(x(111))
		setConstant('FD.schedule.serialized')
		setValue(x(112))
		putList(x(114))
		setConstant(nil)
		setConstant(nil)
		putList(x(113))
		setConstant('FD.schedule.disjoint')
		setValue(x(114))
		putList(x(116))
		setConstant(nil)
		setConstant(nil)
		putList(x(115))
		setConstant('FD.schedule.serializedDisj')
		setValue(x(116))
		putList(x(119))
		setConstant('FD.times')
		setConstant(nil)
		putList(x(118))
		setValue(x(119))
		setConstant(nil)
		putList(x(117))
		setConstant(square)
		setValue(x(118))
		putList(x(123))
		setConstant('FD.inter')
		setConstant(nil)
		putList(x(122))
		setConstant('FD.union')
		setValue(x(123))
		putList(x(121))
		setValue(x(122))
		setConstant(nil)
		putList(x(120))
		setConstant(subset)
		setValue(x(121))
		putList(x(125))
		setConstant(nil)
		setConstant(nil)
		putList(x(124))
		setConstant('FD.sumAC')
		setValue(x(125))
		putList(x(129))
		setConstant('FD.reified.sumC')
		setValue(x(7))
		putList(x(128))
		setConstant('FD.sumCN')
		setValue(x(129))
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant('FD.sumC')
		setValue(x(127))
		putList(x(132))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(131))
		setValue(x(132))
		setConstant(nil)
		putList(x(130))
		setConstant(sumCCD)
		setValue(x(131))
		putList(x(135))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(134))
		setValue(x(135))
		setConstant(nil)
		putList(x(133))
		setConstant(sumCD)
		setValue(x(134))
		putList(x(137))
		setValue(x(7))
		setConstant(nil)
		putList(x(136))
		setConstant('FD.sumCN')
		setValue(x(137))
		putList(x(140))
		setConstant('condis ... end')
		setConstant(nil)
		putList(x(139))
		setValue(x(140))
		setConstant(nil)
		putList(x(138))
		setConstant(sumCNCD)
		setValue(x(139))
		putList(x(142))
		setValue(x(7))
		setConstant(nil)
		putList(x(141))
		setConstant('FD.reified.sumC')
		setValue(x(142))
		putList(x(144))
		setConstant(nil)
		setConstant(nil)
		putList(x(143))
		setConstant('FD.times')
		setValue(x(144))
		putList(x(148))
		setConstant('*')
		setConstant(nil)
		putList(x(147))
		setConstant('FD.distance')
		setValue(x(148))
		putList(x(146))
		setValue(x(147))
		setConstant(nil)
		putList(x(145))
		setConstant('FD.plus')
		setValue(x(146))
		putList(x(152))
		setConstant('FD.minus')
		setConstant(nil)
		putList(x(151))
		setConstant('FD.plus')
		setValue(x(152))
		putList(x(150))
		setValue(x(151))
		setConstant(nil)
		putList(x(149))
		setConstant(twice)
		setValue(x(150))
		putList(x(154))
		setConstant(nil)
		setConstant(nil)
		putList(x(153))
		setConstant('FD.union')
		setValue(x(154))
		putRecord(bi [atLeast atMost card conj disj disjoint disjointC distance distinct distinctOffset divD divI element equi exactly exor fdConstrDisj fdConstrDisjSetUp fdGetCard fdGetDom fdGetMax fdGetMid fdGetMin fdGetNextLarger fdGetNextSmaller fdWatchMax fdWatchMin fdWatchSize impl intR inter lessEqOff maximum minimum minus modD modI nega notEqOff plus plus_rel sched_cpIterate sched_disjoint_card sched_disjunctive square subset sumAC sumC sumCCD sumCD sumCN sumCNCD sumCR times times_rel twice union] x(8))
		setValue(x(0))
		setValue(x(2))
		setValue(x(9))
		setValue(x(11))
		setValue(x(13))
		setValue(x(15))
		setValue(x(17))
		setValue(x(19))
		setValue(x(21))
		setValue(x(23))
		setValue(x(25))
		setValue(x(27))
		setValue(x(29))
		setValue(x(31))
		setValue(x(33))
		setValue(x(35))
		setValue(x(37))
		setValue(x(40))
		setValue(x(43))
		setValue(x(45))
		setValue(x(48))
		setValue(x(50))
		setValue(x(52))
		setValue(x(54))
		setValue(x(56))
		setValue(x(58))
		setValue(x(60))
		setValue(x(62))
		setValue(x(64))
		setValue(x(66))
		setValue(x(69))
		setValue(x(71))
		setValue(x(85))
		setValue(x(87))
		setValue(x(89))
		setValue(x(91))
		setValue(x(93))
		setValue(x(95))
		setValue(x(100))
		setValue(x(104))
		setValue(x(107))
		setValue(x(111))
		setValue(x(113))
		setValue(x(115))
		setValue(x(117))
		setValue(x(120))
		setValue(x(124))
		setValue(x(126))
		setValue(x(130))
		setValue(x(133))
		setValue(x(136))
		setValue(x(138))
		setValue(x(141))
		setValue(x(143))
		setValue(x(145))
		setValue(x(149))
		setValue(x(153))
lbl(36429)	definition(x(7) 36473 pid('BIPrintName' 2 pos('./cp/FD.oz' 190 6) nil 4) <P: 351> [x(8)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('IsAtom' [x(0)]#[x(2)] 36466)
lbl(36445)	move(g(0) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 36466)
lbl(36452)	callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 1 x(0) cache)
		unify(x(0) y(1))
		deAllocateL2
		return
lbl(36466)	unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(36429)
lbl(36473)	definition(x(7) 36503 pid('BIOrigin' 2 pos('./cp/FD.oz' 197 6) nil 4) <P: 352> [x(8)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		inlineDot(x(3) 2 x(0) cache)
		inlineDot(x(0) 1 x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(36473)
lbl(36503)	definition(x(7) 36611 pid('FormatOrigin' 2 pos('./cp/FD.oz' 203 6) nil 7) <P: 353> [x(8)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 351> 4)
		move(g(0) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 36542)
lbl(36529)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 352> 4)
		testLiteral(y(2) nil 36547)
lbl(36542)	getLiteral(nil y(0))
		deAllocateL3
		return
lbl(36547)	getList(y(0))
		unifyLiteral(unit)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(hint [l m] x(1))
		unifyLiteral('Possible origin of procedure')
		unifyVariable(x(3))
		getRecord(oz 1 x(3))
		unifyVariable(x(4))
		getList(x(2))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(line 1 x(5))
		unifyVariable(x(6))
		getRecord(oz 1 x(6))
		unifyVariable(y(0))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 351> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<P: 352> 5)
		endDefinition(36503)
lbl(36611)	definition(x(2) 42111 pid('' 2 pos('./cp/FD.oz' 218 3) nil 4) <P: 354> [y(91) x(5) x(4) y(108) y(1) x(6) y(163) y(92) y(157)])
		putList(x(2))
		setPredicateRef(<Q: 355>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 356>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 357>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 358>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 359>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 360>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 361>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 362>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 363>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 364>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 365>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 366>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 367>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 368>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 369>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 370>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 371>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 372>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 373>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 374>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 375>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 376>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 377>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 378>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 379>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 380>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 381>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ForceClone>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 391>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 392>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 393>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 394>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 395>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 403>)
		setValue(x(2))
lbl(36917)	definitionCopy(x(3) 42106 pid('/body' 0 pos('./cp/FD.oz' 218 3) [once] 54) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(53)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(1) cache)
		inlineDot(x(0) 'FDP' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Error' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(2) plus x(6) cache)
		inlineDot(x(2) minus x(7) cache)
		inlineDot(x(2) times x(8) cache)
		inlineDot(x(2) power x(9) cache)
		inlineDot(x(2) divD x(10) cache)
		inlineDot(x(2) divI x(11) cache)
		inlineDot(x(2) modD x(12) cache)
		inlineDot(x(2) modI x(13) cache)
		inlineDot(x(2) conj x(14) cache)
		inlineDot(x(2) disj x(15) cache)
		inlineDot(x(2) exor x(16) cache)
		inlineDot(x(2) impl x(17) cache)
		inlineDot(x(2) nega x(18) cache)
		inlineDot(x(2) equi x(19) cache)
		inlineDot(x(2) intR x(20) cache)
		inlineDot(x(2) card x(21) cache)
		inlineDot(x(2) exactly x(22) cache)
		inlineDot(x(2) atLeast x(23) cache)
		inlineDot(x(2) atMost x(24) cache)
		inlineDot(x(2) element x(25) cache)
		inlineDot(x(2) lessEqOff x(26) cache)
		inlineDot(x(2) minimum x(27) cache)
		inlineDot(x(2) maximum x(28) cache)
		inlineDot(x(2) distinct x(29) cache)
		inlineDot(x(2) distinct2 x(30) cache)
		inlineDot(x(2) distinctD x(31) cache)
		inlineDot(x(2) distinctOffset x(32) cache)
		inlineDot(x(2) disjoint x(33) cache)
		inlineDot(x(2) disjointC x(34) cache)
		inlineDot(x(2) distance x(35) cache)
		inlineDot(x(2) sum x(36) cache)
		inlineDot(x(2) sumC x(37) cache)
		inlineDot(x(2) dsum x(38) cache)
		inlineDot(x(2) dsumC x(39) cache)
		inlineDot(x(2) sumAC x(40) cache)
		inlineDot(x(2) sumCN x(41) cache)
		inlineDot(x(2) sumR x(42) cache)
		inlineDot(x(2) sumCR x(43) cache)
		inlineDot(x(2) sumCNR x(44) cache)
		inlineDot(x(2) sumCD x(45) cache)
		inlineDot(x(2) sumCCD x(46) cache)
		inlineDot(x(2) sumCNCD x(47) cache)
		inlineDot(x(2) selVarMin x(48) cache)
		inlineDot(x(2) selVarMax x(49) cache)
		inlineDot(x(2) selVarSize x(50) cache)
		inlineDot(x(2) selVarNaive x(51) cache)
		inlineDot(x(2) selVarNbSusps x(2) cache)
		inlineDot(x(1) tellConstraint x(52) cache)
lbl(37246)	definition(x(53) 37290 pid('ListDom' 2 pos('./cp/FD.oz' 373 2) nil 2) <Q: 355> [x(52)])
		match(x(0) ht(37275 [onScalar(nil 37255) onRecord('|' 2 37256)]))
lbl(37255)	return
lbl(37256)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 355> 5)
lbl(37275)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(376)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37246)
lbl(37290)	definition(x(53) 37346 pid('TupleDom' 3 pos('./cp/FD.oz' 379 2) nil 5) <Q: 356> [x(52)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37343)
		allocateL3
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37343)	return
		endDefinition(37290)
lbl(37346)	definition(x(53) 37404 pid('RecordDom' 3 pos('./cp/FD.oz' 385 2) nil 4) <Q: 357> [x(52)])
		match(x(0) ht(37389 [onScalar(nil 37355) onRecord('|' 2 37356)]))
lbl(37355)	return
lbl(37356)	allocateL3
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) x(0))
		move(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37389)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(388)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37346)
lbl(37404)	inlineDot(x(1) getLimits x(53) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		moveMoveXYXY(x(8) y(6) x(9) y(7))
		moveMoveXYXY(x(10) y(8) x(11) y(9))
		moveMoveXYXY(x(12) y(10) x(13) y(11))
		moveMoveXYXY(x(14) y(12) x(15) y(13))
		moveMoveXYXY(x(16) y(14) x(17) y(15))
		moveMoveXYXY(x(18) y(16) x(19) y(17))
		moveMoveXYXY(x(20) y(18) x(21) y(19))
		moveMoveXYXY(x(22) y(20) x(23) y(21))
		moveMoveXYXY(x(24) y(22) x(25) y(23))
		moveMoveXYXY(x(26) y(24) x(27) y(25))
		moveMoveXYXY(x(28) y(26) x(29) y(27))
		moveMoveXYXY(x(30) y(28) x(31) y(29))
		moveMoveXYXY(x(32) y(30) x(33) y(31))
		moveMoveXYXY(x(34) y(32) x(35) y(33))
		moveMoveXYXY(x(36) y(34) x(37) y(35))
		moveMoveXYXY(x(38) y(36) x(39) y(37))
		moveMoveXYXY(x(40) y(38) x(41) y(39))
		moveMoveXYXY(x(42) y(40) x(43) y(41))
		moveMoveXYXY(x(44) y(42) x(45) y(43))
		moveMoveXYXY(x(46) y(44) x(47) y(45))
		moveMoveXYXY(x(48) y(46) x(49) y(47))
		moveMoveXYXY(x(50) y(48) x(51) y(49))
		moveMoveXYXY(x(2) y(50) x(52) y(51))
		createVariable(x(0))
		createVariableMove(y(52) x(1))
		call(x(53) 2)
lbl(37548)	definition(x(0) 37568 pid('FdInt' 2 pos('./cp/FD.oz' 393 2) nil 2) <Q: 358> [y(51)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37548)
lbl(37568)	putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		putList(x(2))
		setValue(x(1))
		setConstant(nil)
lbl(37582)	definition(x(1) 37596 pid('FdBool' 1 pos('./cp/FD.oz' 400 5) nil 2) <Q: 359> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37582)
lbl(37596)	putRecord('#' 2 x(3))
		setConstant(0)
		setValue(y(52))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
lbl(37610)	definition(x(3) 37624 pid('FdDecl' 1 pos('./cp/FD.oz' 408 5) nil 2) <Q: 360> [y(51) x(2)])
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(37610)
lbl(37624)	definition(x(2) 37708 pid('FdDom' 2 pos('./cp/FD.oz' 413 2) nil 4) <Q: 361> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		match(y(2) ht(37693 [onScalar(list 37648) onScalar(tuple 37657) onScalar(record 37675)]))
lbl(37648)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 355> 5)
lbl(37657)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 356> 7)
lbl(37675)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
lbl(37693)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(418)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(37624)
lbl(37708)	definition(x(4) 37764 pid('FdList' 3 pos('./cp/FD.oz' 421 2) nil 5) <Q: 362> [y(51)])
		putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 37758)
		allocateL3
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) x(0))
		genCall(gci(g(0) false '' false 2) 0)
		move(y(1) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 362> 7)
lbl(37758)	getLiteral(nil x(2))
		return
		endDefinition(37708)
lbl(37764)	definition(x(5) 37787 pid('FdTuple' 4 pos('./cp/FD.oz' 427 2) nil 5) <Q: 363> nil)
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 356> 7)
		endDefinition(37764)
lbl(37787)	definition(x(6) 37821 pid('FdRecord' 4 pos('./cp/FD.oz' 431 2) nil 4) <Q: 364> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 357> 7)
		endDefinition(37787)
lbl(37821)	move(y(0) x(7))
		inlineDot(x(7) is x(8) cache)
		inlineDot(x(7) getDom x(9) cache)
		putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] y(51))
		setValue(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		inlineDot(x(7) getMin x(18) cache)
		unify(x(18) x(13))
		inlineDot(x(7) getMid x(18) cache)
		unify(x(18) x(12))
		inlineDot(x(7) getMax x(18) cache)
		unify(x(18) x(11))
		inlineDot(x(7) getNextLarger x(18) cache)
		unify(x(18) x(15))
		inlineDot(x(7) getNextSmaller x(15) cache)
		unify(x(15) x(16))
		inlineDot(x(7) getCard x(15) cache)
		unify(x(15) x(17))
		move(y(3) x(15))
		inlineDot(x(15) nbSusps x(16) cache)
		unify(x(16) x(14))
lbl(37924)	definition(x(15) 37951 pid('FdReflect.domList' 2 pos('./cp/FD.oz' 453 23) nil 2) <Q: 365> [x(9)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 349> 5)
		endDefinition(37924)
lbl(37951)	unify(x(15) x(10))
		inlineDot(x(7) tellConstraintCD x(9) cache)
lbl(37960)	definition(x(10) 38009 pid('ListDomCD' 3 pos('./cp/FD.oz' 468 2) nil 3) <Q: 366> [x(9)])
		match(x(0) ht(37994 [onScalar(nil 37969) onRecord('|' 2 37970)]))
lbl(37969)	return
lbl(37970)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 366> 7)
lbl(37994)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(471)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(37960)
lbl(38009)	definition(x(10) 38072 pid('TupleDomCD' 4 pos('./cp/FD.oz' 474 2) nil 6) <Q: 367> [x(9)])
		putConstant(0 x(4))
		testLT(x(4) x(0) x(5) 38069)
		allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38069)	return
		endDefinition(38009)
lbl(38072)	definition(x(10) 38137 pid('RecordDomCD' 4 pos('./cp/FD.oz' 480 2) nil 5) <Q: 368> [x(9)])
		match(x(0) ht(38122 [onScalar(nil 38081) onRecord('|' 2 38082)]))
lbl(38081)	return
lbl(38082)	allocateL4
		getVarVar(x(0) y(0))
		callBI('.' [x(1) x(0)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38122)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(483)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(38072)
lbl(38137)	definition(x(10) 38157 pid('FdIntCD' 3 pos('./cp/FD.oz' 486 2) nil 3) <Q: 369> [x(9)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38137)
lbl(38157)	definition(x(9) 38252 pid('FdDomCD' 3 pos('./cp/FD.oz' 490 2) nil 5) <Q: 370> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 342> 4)
		match(y(3) ht(38237 [onScalar(list 38183) onScalar(tuple 38195) onScalar(record 38216)]))
lbl(38183)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 366> 7)
lbl(38195)	move(y(1) x(0))
		callBI('Width' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 367> 9)
lbl(38216)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 368> 9)
lbl(38237)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(495)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(38157)
lbl(38252)	putRecord(cd ['body' dom header int sum sumC sumCN] y(3))
		setVariable(x(15))
		setValue(x(9))
		setVariable(x(16))
		setValue(x(10))
		setValue(y(43))
		setValue(y(44))
		setValue(y(45))
		inlineDot(x(7) constrDisjSetUp x(9) cache)
		unify(x(9) x(16))
		inlineDot(x(7) constrDisj x(9) cache)
		unify(x(9) x(15))
lbl(38288)	definition(x(9) 38583 pid('GenSumACN' 4 pos('./cp/FD.oz' 515 6) nil 5) <Q: 371> [g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		thread(38579)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 38378 38568)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(2) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(2) false '' true 4) 0)
lbl(38378)	move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		move(g(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(8))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(11))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(4))
		setVariable(y(11))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(2))
		call(g(5) 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(8) x(3))
		move(y(4) x(4))
		call(g(6) 5)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(11) x(4))
		call(g(6) 5)
		putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(11))
		putRecord('#' 2 x(2))
		setValue(y(7))
		setValue(y(9))
		move(y(3) x(1))
		deAllocateL
		tailCall(g(7) 3)
lbl(38568)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(38579)	deAllocateL
		return
		endDefinition(38288)
lbl(38583)	definition(x(10) 38623 pid('FdIntR' 3 pos('./cp/FD.oz' 545 2) nil 3) <Q: 372> [y(18)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 359> 2)
		move(y(1) x(0))
		genFastCall(<Q: 360> 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(38583)
lbl(38623)	definition(x(18) 38662 pid('GenSumR' 4 pos('./cp/FD.oz' 549 2) nil 4) <Q: 373> [y(40)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL4
		genCall(gci(g(0) false '' true 4) 0)
		endDefinition(38623)
lbl(38662)	definition(x(19) 38706 pid('GenSumCR' 5 pos('./cp/FD.oz' 553 2) nil 5) <Q: 374> [y(41)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38662)
lbl(38706)	definition(x(20) 38750 pid('GenSumCNR' 5 pos('./cp/FD.oz' 557 2) nil 5) <Q: 375> [y(42)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(38706)
lbl(38750)	definition(x(21) 38813 pid('MapIntR' 4 pos('./cp/FD.oz' 562 5) nil 6) <Q: 376> nil)
		testNumber(x(0) 0 38761)
		return
lbl(38761)	allocateL4
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		move(x(4) x(1))
		move(x(5) x(2))
		genFastCall(<Q: 372> 6)
		move(y(0) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 376> 9)
		endDefinition(38750)
lbl(38813)	definition(x(21) 38886 pid('FdDomR' 3 pos('./cp/FD.oz' 568 5) nil 5) <Q: 377> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		thread(38882)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 346> 4)
		move(y(3) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(4))
		callBI('MakeTuple' [x(4) x(1)]#[x(2)])
		moveMoveXYXY(x(1) y(1) x(2) y(4))
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(3))
		genFastCall(<Q: 376> 8)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		putConstant('=:' x(1))
		deAllocateL5
		genFastCall(<Q: 373> 9)
lbl(38882)	deAllocateL5
		return
		endDefinition(38813)
lbl(38886)	definition(x(22) 39096 pid('Card' 4 pos('./cp/FD.oz' 580 2) nil 5) <Q: 378> [x(8) y(52) y(19) g(5)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		genFastCall(<Q: 359> 2)
		thread(39092)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38924)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(4) 39002 39081)
lbl(38937)	move(y(1) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 38982)
		createOr
lbl(38945)	nextClause(38957)
		clause
		getNumber(1 y(3))
		getNumber(0 y(0))
		waitTop
lbl(38955)	deAllocateL6
		return
lbl(38957)	lastClause
		clause
		thread(38979)
		getNumber(0 y(3))
		putRecord('#' 2 x(0))
		setConstant(1)
		setValue(g(1))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 358> 5)
lbl(38979)	waitTop
lbl(38980)	deAllocateL6
		return
lbl(38982)	createVariableMove(y(4) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(2) false '' true 4) 0)
lbl(39002)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createVariable(y(5))
		testBool(y(4) 39022 39027)
		getNumber(3 y(5))
		branch(39038)
lbl(39022)	getNumber(1 y(5))
		branch(39038)
lbl(39027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39038)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('FD.reified.card')
		setValue(x(1))
		setConstant(fd)
		setValue(y(5))
		setConstant('Cardinality limits must be finite domain.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(583)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(39092)	deAllocateL6
		return
		endDefinition(38886)
lbl(39096)	definition(x(23) 39487 pid('GenSumACR' 5 pos('./cp/FD.oz' 603 2) nil 5) <Q: 379> [g(6) g(7) g(1) g(2) y(35) g(8) x(16) y(44) x(15)])
		allocateL(16)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39483)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 161> 6)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39267 39472)
		createOr
lbl(39180)	nextClause(39218)
		clause
		thread(39215)
		getNumber(1 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39215)	waitTop
lbl(39216)	deAllocateL
		return
lbl(39218)	nextClause(39243)
		clause
		thread(39240)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39240)	waitTop
lbl(39241)	deAllocateL
		return
lbl(39243)	lastClause
		clause
		thread(39264)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39264)	waitTop
lbl(39265)	deAllocateL
		return
lbl(39267)	createOr
lbl(39268)	nextClause(39435)
		clause
		thread(39432)
		move(y(7) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(2)])
		putConstant('#' x(3))
		callBI('MakeTuple' [x(3) x(1)]#[x(4)])
		putRecord(v 1 x(3))
		setVariable(y(1))
		moveMoveXYXY(x(2) y(8) x(4) y(9))
		move(x(3) x(0))
		move(y(8) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setVariable(y(11))
		move(y(9) x(1))
		createVariableMove(y(12) x(2))
		genFastCall(<P: 14> 6)
		putRecord(v 1 x(0))
		setValue(y(3))
		move(y(7) x(1))
		createVariableMove(y(13) x(2))
		genFastCall(<P: 14> 6)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(2))
		call(g(6) 4)
		moveMoveYXYX(y(6) x(0) y(8) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(11) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(10))
		setValue(y(12))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39432)	waitTop
lbl(39433)	deAllocateL
		return
lbl(39435)	lastClause
		clause
		thread(39469)
		getNumber(0 y(4))
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(4) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(4) false '' true 4) 0)
lbl(39469)	waitTop
lbl(39470)	deAllocateL
		return
lbl(39472)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(611)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39483)	deAllocateL
		return
		endDefinition(39096)
lbl(39487)	definition(x(24) 39930 pid('GenSumACNR' 5 pos('./cp/FD.oz' 642 2) nil 5) <Q: 380> [g(6) g(1) g(2) y(39) g(3) g(4) x(16) y(45) x(15)])
		allocateL(17)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		thread(39926)
		move(g(0) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 344> 4)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 343> 4)
		move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		genFastCall(<Q: 359> 2)
		move(g(2) x(0))
		move(y(2) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBool(x(2) 39658 39915)
		createOr
lbl(39571)	nextClause(39609)
		clause
		thread(39606)
		getNumber(1 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39606)	waitTop
lbl(39607)	deAllocateL
		return
lbl(39609)	nextClause(39634)
		clause
		thread(39631)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39631)	waitTop
lbl(39632)	deAllocateL
		return
lbl(39634)	lastClause
		clause
		thread(39655)
		getNumber(0 y(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39655)	waitTop
lbl(39656)	deAllocateL
		return
lbl(39658)	createOr
lbl(39659)	nextClause(39878)
		clause
		thread(39875)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		move(g(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(7) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(10))
		setValue(y(9))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 346> 4)
		move(y(8) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setVariable(y(12))
		setValue(y(11))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 346> 4)
		move(y(6) x(0))
		move(g(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<P: 30> 8)
		putList(x(0))
		setValue(y(3))
		setValue(y(13))
		createVariableMove(y(13) x(1))
		genFastCall(<P: 346> 4)
		getNumber(1 y(4))
		putRecord('#' 2 x(0))
		setConstant(1)
		setConstant(1)
		putRecord('#' 2 x(1))
		setVariable(y(14))
		setVariable(y(15))
		putRecord('#' 2 x(3))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(2))
		call(g(6) 4)
		move(y(7) x(0))
		createVariableMove(y(16) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(1) x(0) y(16) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		move(y(14) x(4))
		call(g(7) 5)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 346> 4)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		moveMoveYXYX(y(2) x(2) y(12) x(3))
		move(y(15) x(4))
		call(g(7) 5)
		putRecord('#' 2 x(0))
		setValue(y(14))
		setValue(y(15))
		putRecord('#' 2 x(2))
		setValue(y(9))
		setValue(y(11))
		move(y(13) x(1))
		deAllocateL
		tailCall(g(8) 3)
lbl(39875)	waitTop
lbl(39876)	deAllocateL
		return
lbl(39878)	lastClause
		clause
		thread(39912)
		getNumber(0 y(4))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		genCall(gci(g(3) false '' false 4) 0)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		deAllocateL
		genCall(gci(g(3) false '' true 4) 0)
lbl(39912)	waitTop
lbl(39913)	deAllocateL
		return
lbl(39915)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(650)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(39926)	deAllocateL
		return
		endDefinition(39487)
lbl(39930)	definition(x(15) 39971 pid('DistanceR' 5 pos('./cp/FD.oz' 681 2) nil 8) <Q: 381> nil)
		putList(x(6))
		setConstant(~1)
		setConstant(nil)
		putList(x(5))
		setConstant(1)
		setValue(x(6))
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		putList(x(6))
		setValue(x(0))
		setValue(x(7))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 379> 11)
		endDefinition(39930)
lbl(39971)	putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] y(18))
		setValue(x(22))
		setValue(x(15))
		setValue(x(21))
		setValue(x(10))
		setValue(x(18))
		setValue(x(23))
		setValue(x(24))
		setValue(x(19))
		setValue(x(20))
lbl(39993)	definition(x(10) 40105 pid('MakeDistrTuple' 2 pos('./cp/FD.oz' 708 5) nil 4) <Q: 382> [g(9) x(8) g(5)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 342> 4)
		testLiteral(y(2) tuple 40029)
		move(y(0) x(0))
		putConstant(<M: ForceClone> x(3))
		callBI('Adjoin' [x(0) x(3)]#[x(1)])
		unify(x(1) y(1))
		branch(40037)
lbl(40029)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<P: 346> 4)
lbl(40037)	move(y(1) x(0))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 165> 6)
		testBool(y(2) 40055 40092)
		deAllocateL3
		return
lbl(40055)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(list 1 x(3))
		setConstant(fd)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setConstant('MakeDistrTuple')
		setValue(x(1))
		setValue(x(3))
		setConstant(1)
		setConstant('Distribution vector must contain finite domains.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40092)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(39993)
lbl(40105)	putRecord(map [max mid min splitMax splitMin] x(10))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		unify(x(18) x(13))
		unify(x(15) x(11))
		unify(x(16) x(12))
lbl(40128)	definition(x(15) 40147 pid('SelVal.splitMin' 2 pos('./cp/FD.oz' 726 14) nil 2) <Q: 383> [x(12)])
		getRecord('#' 2 x(1))
		unifyNumber(0)
		unifyVariable(x(1))
		tailCall(g(0) 2)
		endDefinition(40128)
lbl(40147)	unify(x(15) x(20))
lbl(40150)	definition(x(15) 40184 pid('SelVal.splitMax' 2 pos('./cp/FD.oz' 729 14) nil 2) <Q: 384> [y(52) x(12)])
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(g(0))
		createVariableMove(y(1) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(40150)
lbl(40184)	unify(x(15) x(19))
		putRecord(map [max min naive nbSusps size] x(12))
		setValue(y(47))
		setValue(y(46))
		setValue(y(49))
		setValue(y(50))
		setValue(y(48))
		putRecord(map [max min naive nbSusps size] x(15))
		setVariable(x(16))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		setVariable(x(21))
lbl(40215)	definition(x(22) 40227 pid('GenSelVar.naive' 3 pos('./cp/FD.oz' 741 30) nil 3) <Q: 385> nil)
		getLiteral(false x(2))
		return
		endDefinition(40215)
lbl(40227)	unify(x(22) x(19))
lbl(40230)	definition(x(19) 40272 pid('GenSelVar.size' 3 pos('./cp/FD.oz' 744 16) nil 3) <Q: 386> [x(17)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40230)
lbl(40272)	unify(x(19) x(21))
lbl(40275)	definition(x(19) 40362 pid('GenSelVar.nbSusps' 3 pos('./cp/FD.oz' 747 16) nil 3) <Q: 387> [x(14) x(17)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testLT(x(1) x(0) x(2) 40320)
		getLiteral(true y(2))
		deAllocateL5
		return
lbl(40320)	testBI('==' [x(0) x(1)]#[x(2)] 40355)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(1) 2)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL5
		return
lbl(40355)	getLiteral(false y(2))
		deAllocateL5
		return
		endDefinition(40275)
lbl(40362)	unify(x(19) x(20))
lbl(40365)	definition(x(14) 40407 pid('GenSelVar.min' 3 pos('./cp/FD.oz' 755 16) nil 3) <Q: 388> [x(13)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40365)
lbl(40407)	unify(x(14) x(18))
lbl(40410)	definition(x(13) 40452 pid('GenSelVar.max' 3 pos('./cp/FD.oz' 758 16) nil 3) <Q: 389> [x(11)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(40410)
lbl(40452)	unify(x(13) x(16))
		putRecord(map [undet] x(11))
		setVariable(x(13))
lbl(40461)	definition(x(14) 40493 pid('GenSelFil.undet' 2 pos('./cp/FD.oz' 762 29) nil 3) <Q: 390> [x(17)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(40461)
lbl(40493)	unify(x(14) x(13))
		putRecord(map [noProc] x(13))
		setVariable(x(14))
lbl(40502)	definition(x(16) 40511 pid('GenSelPro.noProc' 0 pos('./cp/FD.oz' 766 29) nil 0) <Q: 391> nil)
		return
		endDefinition(40502)
lbl(40511)	unify(x(16) x(14))
		putRecord(map [id] x(14))
		setVariable(x(16))
lbl(40520)	definition(x(17) 40532 pid('GenSelSel.id' 2 pos('./cp/FD.oz' 770 29) nil 2) <Q: 392> nil)
		unify(x(1) x(0))
		return
		endDefinition(40520)
lbl(40532)	unify(x(17) x(16))
lbl(40535)	definition(x(16) 40558 pid('MapSelect' 3 pos('./cp/FD.oz' 774 5) nil 4) <Q: 393> nil)
		testBI('IsAtom' [x(1)]#[x(3)] 40552)
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(40552)	unify(x(2) x(1))
		return
		endDefinition(40535)
lbl(40558)	definition(x(16) 40829 pid('PreProcessSpec' 2 pos('./cp/FD.oz' 780 5) nil 6) <Q: 394> [x(12) x(10) x(15) x(14) x(11) x(13)])
		allocateL5
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(40594 [onScalar(naive 40573) onScalar(ff 40581) onScalar(split 40586)]))
lbl(40573)	getRecord(generic [order] y(1))
		unifyLiteral(naive)
		branch(40597)
lbl(40581)	getLiteral(generic y(1))
		branch(40597)
lbl(40586)	getRecord(generic [value] y(1))
		unifyLiteral(splitMin)
		branch(40597)
lbl(40594)	unify(y(1) x(0))
lbl(40597)	putRecord(generic [filter order procedure select value] x(0))
		setConstant(undet)
		setConstant(size)
		setConstant(noProc)
		setConstant(id)
		setConstant(min)
		move(y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(2))
		testRecord(y(1) generic [filter order procedure select value] 40664)
lbl(40627)	getVarVar(x(0) x(1))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(40664)
		getLiteral(undet x(0))
		getLiteral(noProc x(3))
		getLiteral(id x(4))
lbl(40646)	shallowThen
		testBI('IsAtom' [x(1)]#[x(0)] 40659)
		callBI('IsAtom' [x(5)]#[x(0)])
		unify(x(0) y(2))
		branch(40667)
lbl(40659)	getLiteral(false y(2))
		branch(40667)
lbl(40664)	getLiteral(false y(2))
lbl(40667)	testBool(y(2) 40714 40816)
		getRecord(opt [order value] y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(1) x(2))
		inlineDot(x(2) order x(3) cache)
		move(g(0) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		unify(x(5) x(0))
		inlineDot(x(2) value x(0) cache)
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		deAllocateL5
		return
lbl(40714)	getRecord(gen [filter order procedure select value] y(0))
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		move(y(1) x(0))
		inlineDot(x(0) order x(1) cache)
		move(g(2) x(0))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(1) x(0))
		move(y(4) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) select x(1) cache)
		move(g(3) x(0))
		move(y(3) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) filter x(1) cache)
		move(g(4) x(0))
		move(y(0) x(2))
		genFastCall(<Q: 393> 6)
		move(y(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		move(g(5) x(0))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 393> 7)
lbl(40816)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(800)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40558)
lbl(40829)	definition(x(10) 40918 pid('Choose' 4 pos('./cp/FD.oz' 813 2) nil 4) <Q: 395> nil)
		match(x(0) ht(40903 [onScalar(nil 40838) onRecord('|' 2 40842)]))
lbl(40838)	unify(x(3) x(1))
		return
lbl(40842)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(2))
		call(y(3) 3)
		createVariable(y(6))
		testBool(y(5) 40873 40878)
		unify(y(6) y(0))
		branch(40889)
lbl(40873)	unify(y(6) y(2))
		branch(40889)
lbl(40878)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(815)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(40889)	moveMoveYXYX(y(1) x(0) y(6) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 395> 9)
lbl(40903)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(816)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(40829)
lbl(40918)	definition(x(10) 41204 pid('FdDistribute' 2 pos('./cp/FD.oz' 821 2) nil 7) <Q: 396> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genFastCall(<P: 350> 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 394> 4)
		match(y(2) ht(41189 [onRecord(opt [order value] 40945) onRecord(gen [filter order procedure select value] 41044)]))
lbl(40945)	getVarVar(y(0) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 382> 4)
		createVariable(x(0))
lbl(40959)	definition(x(1) 41021 pid('Do' 0 pos('./cp/FD.oz' 826 8) nil 2) unit [y(0) y(3) y(2) x(0)])
		allocateL2
		move(g(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		call(g(2) 2)
		createChoice
lbl(40985)	nextClause(40998)
		emptyClause
lbl(40988)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 358> 4)
		branch(41012)
lbl(40998)	lastClause
		emptyClause
lbl(41000)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		genFastCall(<Q: 358> 4)
lbl(41012)	genFastCall(<P: 350> 0)
		deAllocateL2
		tailCall(g(3) 0)
		endDefinition(40959)
lbl(41021)	unify(x(1) x(0))
		move(x(0) y(0))
		exHandler(41038)
		testNumber(x(0) ~1 41035)
lbl(41033)	deAllocateL4
		return
lbl(41035)	callBI('Exception.raise' [x(0)]#nil)
lbl(41038)	call(y(0) 0)
		popEx
		deAllocateL4
		return
lbl(41044)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		getVariable(x(6))
		createVariable(y(0))
lbl(41054)	definition(x(0) 41168 pid('Do' 1 pos('./cp/FD.oz' 844 8) nil 4) unit [x(2) x(3) x(5) x(6) x(4) y(0)])
		allocateL3
		move(g(0) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(0) nil 41076)
lbl(41074)	deAllocateL3
		return
lbl(41076)	testList(y(0) 41153)
lbl(41079)	getVarVar(x(1) x(0))
		move(g(1) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 395> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(2) 2)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(g(3) 2)
		call(g(4) 0)
		genFastCall(<P: 350> 0)
		createChoice
lbl(41116)	nextClause(41129)
		emptyClause
lbl(41119)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 358> 4)
		branch(41143)
lbl(41129)	lastClause
		emptyClause
lbl(41131)	putRecord(compl 1 x(0))
		setValue(y(1))
		move(y(2) x(1))
		genFastCall(<Q: 358> 4)
lbl(41143)	genFastCall(<P: 350> 0)
		move(y(0) x(0))
		deAllocateL3
		tailCall(g(5) 1)
lbl(41153)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(854)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(41054)
lbl(41168)	unify(x(0) y(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(0) x(1) y(2) x(0))
		deAllocateL4
		tailCall(x(1) 1)
lbl(41189)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(858)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(40918)
lbl(41204)	definition(x(11) 41418 pid('FdChoose' 4 pos('./cp/FD.oz' 862 2) nil 5) <Q: 397> [g(5)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		genFastCall(<P: 350> 0)
		exHandler(41274)
		testNumber(x(0) ~1 41271)
lbl(41230)	putList(x(4))
		setValue(y(3))
		setConstant(nil)
		putList(x(3))
		setValue(y(2))
		setValue(x(4))
		putList(x(2))
		setValue(y(1))
		setValue(x(3))
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fd 5 x(0))
		setConstant(noChoice)
		setConstant('FD.choose')
		setValue(x(1))
		setConstant(2)
		setConstant('Vector must contain non-determined elements.')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41271)	callBI('Exception.raise' [x(0)]#nil)
lbl(41274)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 394> 4)
		match(y(4) ht(41400 [onRecord(opt [order value] 41286) onRecord(gen [filter order procedure select value] 41316)]))
lbl(41286)	getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 382> 4)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		call(y(4) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(5) 2)
		branch(41413)
lbl(41316)	getVarVar(y(4) y(5))
		getVoid(1)
		getVarVar(y(6) y(7))
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 343> 4)
		moveMoveYXYX(y(8) x(0) y(4) x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 39> 6)
		testLiteral(y(9) nil 41354)
lbl(41348)	putConstant(~1 x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(41354)	testList(y(9) 41387)
lbl(41357)	getVarVar(x(1) x(0))
		move(y(5) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 395> 8)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(6) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		call(y(7) 2)
		branch(41413)
lbl(41387)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(880)
		setValue(y(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41400)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(881)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(41413)	popEx
		deAllocateL10
		return
		endDefinition(41204)
lbl(41418)	putRecord(watch [max min size] y(19))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		inlineDot(x(7) watchSize x(15) cache)
		unify(x(15) x(14))
		inlineDot(x(7) watchMin x(14) cache)
		unify(x(14) x(13))
		inlineDot(x(7) watchMax x(13) cache)
		unify(x(13) x(12))
lbl(41455)	definition(x(7) 41469 pid('FdLess' 2 pos('./cp/FD.oz' 904 6) nil 3) <Q: 398> [y(24)])
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41455)
lbl(41469)	definition(x(12) 41492 pid('FdGreater' 2 pos('./cp/FD.oz' 907 6) nil 3) <Q: 399> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(~1 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41469)
lbl(41492)	definition(x(13) 41506 pid('FdLesseq' 2 pos('./cp/FD.oz' 910 6) nil 3) <Q: 400> [y(24)])
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41492)
lbl(41506)	definition(x(14) 41529 pid('FdGreatereq' 2 pos('./cp/FD.oz' 913 6) nil 3) <Q: 401> [y(24)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		putConstant(0 x(2))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(41506)
lbl(41529)	definition(x(15) 41573 pid('FdDisjointC' 5 pos('./cp/FD.oz' 916 6) nil 5) <Q: 402> [y(32)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(4) x(0))
		genFastCall(<Q: 359> 2)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL5
		genCall(gci(g(0) false '' true 5) 0)
		endDefinition(41529)
lbl(41573)	move(y(1) x(16))
		inlineDot(x(16) put x(16) cache)
lbl(41582)	definition(x(17) 41943 pid('' 2 pos('./cp/FD.oz' 929 7) nil 8) <Q: 403> [y(2)])
		allocateL10
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('error in finite domain system' y(3))
		testRecord(y(2) fd 6 41781)
lbl(41617)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		testLiteral(x(0) scheduling 41781)
		move(g(0) x(0))
		inlineDot(x(0) format x(6) cache)
		inlineDot(x(0) formatTypes x(7) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		moveMoveXYXY(x(5) y(6) x(6) y(7))
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		call(x(7) 2)
		move(g(0) x(0))
		inlineDot(x(0) formatAppl x(3) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('In statement')
		setValue(y(9))
		putList(x(1))
		setValue(x(0))
		setValue(y(6))
		move(y(8) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putList(x(2))
		setValue(x(0))
		setValue(y(2))
		moveMoveYXYX(y(7) x(5) y(4) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41781)	testRecord(y(2) fd 5 41920)
lbl(41786)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		createVariable(y(2))
		testLiteral(x(0) noChoice 41920)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		inlineDot(x(0) formatAppl x(6) cache)
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		move(y(4) x(0))
		move(x(2) x(1))
		createVariableMove(y(8) x(2))
		call(x(6) 3)
		move(y(4) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<P: 353> 4)
		move(g(0) x(0))
		inlineDot(x(0) formatHint x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(9) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(hint [l m] x(0))
		setConstant('At argument')
		setValue(y(5))
		putRecord(hint [l m] x(3))
		setConstant('In statement')
		setValue(y(8))
		putList(x(1))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(7) x(5) y(3) x(0))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant(unit x(1))
		deAllocateL10
		tailCall(x(5) 5)
lbl(41920)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL10
		tailCall(x(3) 3)
		endDefinition(41582)
lbl(41943)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(3) y(2) x(2) y(24))
		moveMoveXYXY(x(4) y(32) x(5) y(40))
		moveMoveXYXY(x(6) y(41) x(8) y(42))
		moveMoveXYXY(x(9) y(43) x(10) y(44))
		moveMoveXYXY(x(11) y(45) x(7) y(46))
		moveMoveXYXY(x(12) y(47) x(13) y(48))
		moveMoveXYXY(x(14) y(49) x(15) y(50))
		move(x(17) x(1))
		putConstant(fd x(0))
		call(x(16) 2)
		getRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] g(10))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(1))
		unifyValue(y(3))
		unifyValue(y(45))
		unifyValue(y(12))
		unifyValue(y(2))
		unifyValue(y(13))
		unifyValue(y(31))
		unifyValue(y(50))
		unifyValue(y(33))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(44))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(24))
		unifyValue(y(23))
		unifyValue(y(17))
		unifyValue(y(20))
		unifyValue(y(14))
		unifyValue(y(47))
		unifyValue(y(49))
		unifyValue(y(15))
		unifyValue(y(0))
		unifyValue(y(42))
		unifyValue(y(46))
		unifyValue(y(48))
		unifyValue(y(32))
		unifyValue(y(26))
		unifyValue(y(25))
		unifyValue(y(5))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(16))
		unifyValue(y(4))
		unifyValue(y(7))
		unifyValue(y(41))
		unifyValue(y(51))
		unifyValue(y(18))
		unifyValue(y(34))
		unifyValue(y(38))
		unifyValue(y(43))
		unifyValue(y(35))
		unifyValue(y(37))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(6))
		unifyValue(y(40))
		unifyValue(y(19))
		deAllocateL
		return
		endDefinition(36917)
lbl(42106)	tailCall(x(3) 0)
		endDefinition(36611)
lbl(42111)	putRecord(reflect [dom domList max mid min nbSusps nextLarger nextSmaller size] x(4))
		setConstant(value)
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(watch [max min size] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(reified [card distance dom int sum sumAC sumACN sumC sumCN] x(4))
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(cd ['body' dom header int sum sumC sumCN] x(4))
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putList(x(12))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(11))
		setConstant(format)
		setValue(x(12))
		putList(x(10))
		setConstant(formatHint)
		setValue(x(11))
		putList(x(9))
		setConstant(formatTypes)
		setValue(x(10))
		putList(x(4))
		setConstant(formatAppl)
		setValue(x(9))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(14))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(13))
		setValue(x(14))
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FDB')
		setConstant(nil)
		putRecord(info ['from' type] x(16))
		setConstant('x-oz://boot/FDP')
		setConstant(nil)
		putList(x(18))
		setConstant(nbSusps)
		setConstant(nil)
		putRecord(info [type] x(17))
		setValue(x(18))
		putRecord('import' ['Error' 'ErrorRegistry' 'FDB' 'FDP' 'System'] x(0))
		setValue(x(1))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(value x(4))
		putConstant(value x(9))
		putConstant('procedure/1' x(10))
		putConstant('procedure/4' x(11))
		putConstant(value x(12))
		putConstant('procedure/1' x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant('procedure/5' x(16))
		putConstant(value x(17))
		putConstant(value x(18))
		putConstant(value x(19))
		putConstant(value x(20))
		putConstant(value x(21))
		putConstant('procedure/2' x(22))
		putConstant(value x(23))
		putConstant(value x(24))
		putConstant('procedure/2' x(25))
		putConstant(value x(26))
		putConstant(value x(27))
		putConstant(value x(28))
		putConstant(value x(29))
		putConstant('procedure/2' x(30))
		putConstant('procedure/2' x(31))
		putConstant(value x(32))
		putConstant('procedure/2' x(33))
		putConstant(value x(34))
		putConstant('procedure/2' x(35))
		putConstant('procedure/2' x(36))
		putConstant('procedure/3' x(37))
		putConstant(value x(38))
		putConstant(value x(39))
		putConstant(value x(40))
		putConstant(value x(41))
		putConstant(value x(42))
		putConstant(value x(43))
		putConstant(value x(44))
		putConstant(value x(45))
		putConstant('procedure/4' x(46))
		putConstant(value x(47))
		putConstant(value x(48))
		putConstant('procedure/4' x(49))
		putConstant(value x(50))
		putConstant(value x(51))
		putConstant(value x(52))
		putConstant(value x(53))
		putConstant(value x(54))
		putConstant(value x(55))
		putConstant('procedure/4' x(56))
		putRecord('export' [atLeast atMost bool cd choose conj decl disj disjoint disjointC distance distinct distinct2 distinctD distinctOffset distribute divD divI dom element equi exactly exor greater greatereq impl int is less lesseq list max min minus modD modI nega plus power record reflect reified sum sumAC sumACN sumC sumCD sumCN sumD sup times tuple watch] x(1))
		setValue(x(4))
		setValue(x(9))
		setValue(x(10))
		setValue(x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(5))
		setValue(x(7))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(6))
		createVariableMove(y(91) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(42566)	definition(x(2) 47983 pid('' 2 pos('./cp/FS.oz' 28 0) nil 4) <P: 404> [y(98) y(100) y(165) y(1) y(148) y(149) y(150) y(161)])
		putList(x(2))
		setPredicateRef(<Q: 405>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 406>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 407>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 408>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 409>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 410>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 411>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 412>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 413>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 414>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MINELEM>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MAXELEM>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 415>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 416>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 417>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 418>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 419>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 420>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 421>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 422>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 423>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 424>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 425>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 427>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 428>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 429>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 438>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 439>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 440>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 441>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 442>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 443>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 444>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 445>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 446>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 447>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 448>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 449>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 450>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 451>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 452>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 453>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 454>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 455>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 456>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 457>)
		setValue(x(3))
lbl(42902)	definitionCopy(x(2) 47978 pid('/body' 0 pos('./cp/FS.oz' 28 0) [once] 31) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(47)
		move(g(0) x(0))
		inlineDot(x(0) 'FSB' x(1) cache)
		inlineDot(x(0) 'FSP' x(2) cache)
		inlineDot(x(0) 'FD' x(3) cache)
lbl(42931)	definition(x(4) 42963 pid('Head' 2 pos('./cp/FS.oz' 87 10) nil 4) <Q: 405> nil)
		shallowGuard(42950)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42945)	shallowThen
		unify(x(1) x(2))
		return
lbl(42950)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(87)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42931)
lbl(42963)	definition(x(4) 42995 pid('Tail' 2 pos('./cp/FS.oz' 88 10) nil 4) <Q: 406> nil)
		shallowGuard(42982)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(42977)	shallowThen
		unify(x(1) x(3))
		return
lbl(42982)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(42963)
lbl(42995)	definition(x(4) 43068 pid('ExpandList' 2 pos('./cp/FS.oz' 91 3) nil 5) <Q: 407> [g(2)])
lbl(43001)	definition(x(4) 43054 pid('' 3 pos('./cp/FS.oz' 93 7) nil 5) unit [g(0)])
		testRecord(x(0) '#' 2 43045)
lbl(43012)	allocateL3
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(1 x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 80> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 21> 7)
lbl(43045)	getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(43001)
lbl(43054)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(42995)
lbl(43068)	inlineDot(x(2) include x(4) cache)
		inlineDot(x(2) exclude x(5) cache)
		inlineDot(x(2) 'match' x(6) cache)
		inlineDot(x(2) minN x(7) cache)
		inlineDot(x(2) maxN x(8) cache)
		inlineDot(x(2) seq x(9) cache)
		inlineDot(x(2) isIn x(10) cache)
		inlineDot(x(2) isInR x(11) cache)
lbl(43116)	definition(x(12) 43159 pid('FSIsInReif' 3 pos('./cp/FS.oz' 110 6) nil 5) <Q: 408> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43116)
lbl(43159)	inlineDot(x(2) equalR x(11) cache)
lbl(43165)	definition(x(12) 43208 pid('FSEqualReif' 3 pos('./cp/FS.oz' 119 6) nil 5) <Q: 409> [x(3) x(11)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(43165)
lbl(43208)	inlineDot(x(1) 'setValue' x(11) cache)
		inlineDot(x(1) set x(13) cache)
		inlineDot(x(2) disjoint x(14) cache)
		inlineDot(x(2) distinct x(15) cache)
lbl(43232)	definition(x(16) 43261 pid('FSDistinctWith' 2 pos('./cp/FS.oz' 134 3) nil 3) <Q: 410> [x(15)])
lbl(43238)	definition(x(2) 43255 pid('' 1 pos('./cp/FS.oz' 135 6) nil 2) unit [g(0) x(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(43238)
lbl(43255)	unify(x(2) x(1))
		return
		endDefinition(43232)
lbl(43261)	inlineDot(x(2) union x(16) cache)
		inlineDot(x(2) intersection x(17) cache)
		inlineDot(x(2) subsume x(18) cache)
		inlineDot(x(2) diff x(19) cache)
		inlineDot(x(2) min x(20) cache)
		inlineDot(x(2) max x(21) cache)
		inlineDot(x(2) convex x(22) cache)
		inlineDot(x(1) isVarB x(23) cache)
		inlineDot(x(1) isValueB x(24) cache)
		inlineDot(x(1) valueToString x(25) cache)
lbl(43321)	definition(x(26) 43482 pid('GetFeaturePath' 4 pos('./cp/FS.oz' 155 6) nil 5) <Q: 411> nil)
		allocateL10
		move(x(3) y(0))
		testList(x(2) 43475)
lbl(43334)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createCond(43475)
lbl(43344)	nextClause(43399)
		clause
		createVariable(y(5))
		createVariable(y(6))
		getRecord('#' 2 y(1))
		unifyValue(y(5))
		unifyValue(y(6))
		getLiteral(nil y(2))
		ask
lbl(43363)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 43386)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(0))
		callBI('.' [x(0) x(2)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL10
		return
lbl(43386)	moveMoveYXYX(y(3) x(0) y(6) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL10
		return
lbl(43399)	lastClause
		clause
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		getRecord('#' 2 y(1))
		unifyValue(y(7))
		unifyValue(y(8))
		unify(y(9) y(2))
		ask
lbl(43419)	moveMoveYXYX(y(4) x(0) y(7) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 43452)
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(3) x(1))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43452)	moveMoveYXYX(y(3) x(1) y(8) x(2))
		callBI('.' [x(1) x(2)]#[x(4)])
		move(x(4) x(0))
		moveMoveYXYX(y(4) x(1) y(9) x(2))
		move(y(0) x(3))
		deAllocateL10
		genFastCall(<Q: 411> 9)
lbl(43475)	getLiteral(found_nil_in_path y(0))
		deAllocateL10
		return
		endDefinition(43321)
lbl(43482)	definition(x(26) 43578 pid('Find' 3 pos('./cp/FS.oz' 168 6) nil 4) <Q: 412> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 406> 4)
lbl(43503)	definition(x(0) 43551 pid('' 3 pos('./cp/FS.oz' 170 3) nil 3) unit [y(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		call(g(0) 3)
		testBool(y(3) 43533 43538)
		unify(y(2) y(0))
		deAllocateL4
		return
lbl(43533)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(43538)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(170)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(43503)
lbl(43551)	moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(43482)
lbl(43578)	definition(x(26) 43613 pid('MinElement' 2 pos('./cp/FS.oz' 175 6) nil 2) <Q: 413> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 405> 4)
		testRecord(y(1) '#' 2 43606)
lbl(43599)	getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43606)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43578)
lbl(43613)	definition(x(26) 43650 pid('MaxElement' 2 pos('./cp/FS.oz' 180 6) nil 2) <Q: 414> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(1) '#' 2 43643)
lbl(43634)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		deAllocateL2
		return
lbl(43643)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(43613)
lbl(43650)	definition(x(26) 43802 pid('LESS' 3 pos('./cp/FS.oz' 188 6) nil 5) <Q: 415> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43695)
lbl(43678)	getVarVar(x(3) x(4))
		shallowGuard(43695)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43689)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43695)	testRecord(y(0) '#' 2 43711)
lbl(43700)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43711)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43711)	testRecord(y(0) '#' 2 43729)
lbl(43716)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43729)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43729)	testRecord(y(0) '#' 2 43751)
lbl(43734)	getVarVar(x(0) x(1))
		shallowGuard(43751)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43745)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43751)	testRecord(y(0) '#' 2 43767)
lbl(43756)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43767)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43767)	testRecord(y(0) '#' 2 43787)
lbl(43772)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43787)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43787)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43650)
lbl(43802)	definition(x(27) 43954 pid('GREATER' 3 pos('./cp/FS.oz' 201 6) nil 5) <Q: 416> nil)
		allocateL4
		putRecord('#' 2 y(0))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testRecord(y(0) '#' 2 43847)
lbl(43830)	getVarVar(x(3) x(4))
		shallowGuard(43847)
		getLiteral(<M: MINELEM> x(3))
		getLiteral(<M: MINELEM> x(4))
lbl(43841)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43847)	testRecord(y(0) '#' 2 43863)
lbl(43852)	getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43863)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43863)	testRecord(y(0) '#' 2 43881)
lbl(43868)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) <M: MINELEM> 43881)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43881)	testRecord(y(0) '#' 2 43903)
lbl(43886)	getVarVar(x(0) x(1))
		shallowGuard(43903)
		getLiteral(<M: MAXELEM> x(0))
		getLiteral(<M: MAXELEM> x(1))
lbl(43897)	shallowThen
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43903)	testRecord(y(0) '#' 2 43919)
lbl(43908)	getVariable(x(0))
		testLiteral(x(0) <M: MAXELEM> 43919)
		getLiteral(true y(3))
		deAllocateL4
		return
lbl(43919)	testRecord(y(0) '#' 2 43939)
lbl(43924)	getVoid(1)
		getVariable(x(0))
		createVariable(y(0))
		testLiteral(x(0) <M: MAXELEM> 43939)
		getLiteral(false y(3))
		deAllocateL4
		return
lbl(43939)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(3))
		deAllocateL4
		return
		endDefinition(43802)
lbl(43954)	definition(x(28) 44045 pid('WeightMin' 2 pos('./cp/FS.oz' 214 6) nil 3) <Q: 417> nil)
lbl(43960)	definition(x(2) 44039 pid('' 3 pos('./cp/FS.oz' 215 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 43974)
		unify(x(2) g(0))
		return
lbl(43974)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(43986)	definition(x(1) 44028 pid('' 3 pos('./cp/FS.oz' 217 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(43986)
lbl(44028)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(43960)
lbl(44039)	unify(x(2) x(1))
		return
		endDefinition(43954)
lbl(44045)	definition(x(28) 44136 pid('WeightMax' 2 pos('./cp/FS.oz' 223 6) nil 3) <Q: 418> nil)
lbl(44051)	definition(x(2) 44130 pid('' 3 pos('./cp/FS.oz' 224 2) nil 3) unit [x(0)])
		testLiteral(x(0) nil 44065)
		unify(x(2) g(0))
		return
lbl(44065)	allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 407> 4)
lbl(44077)	definition(x(1) 44119 pid('' 3 pos('./cp/FS.oz' 226 32) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(44077)
lbl(44119)	moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 412> 7)
		endDefinition(44051)
lbl(44130)	unify(x(2) x(1))
		return
		endDefinition(44045)
lbl(44136)	definition(x(28) 44215 pid('WeightSum' 3 pos('./cp/FS.oz' 232 6) nil 5) <Q: 419> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) sum x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 407> 4)
lbl(44166)	definition(x(1) 44177 pid('' 2 pos('./cp/FS.oz' 233 31) nil 2) unit [y(0)])
		tailCall(g(0) 2)
		endDefinition(44166)
lbl(44177)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant('=:' x(1))
		call(y(2) 3)
		move(g(0) x(0))
		inlineDot(x(0) decl x(1) cache)
		move(y(1) x(0))
		deAllocateL4
		tailCall(x(1) 1)
		endDefinition(44136)
lbl(44215)	createVariable(y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
lbl(44227)	definition(x(29) 44788 pid('OrderFun' 4 pos('./cp/FS.oz' 237 6) nil 9) <Q: 420> [y(0) y(1) y(2) y(3) y(4) y(5) x(28) x(27) x(26)])
		allocateL(11)
		putRecord(c [lowerBound unknown upperBound] x(4))
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
lbl(44245)	definition(x(8) 44272 pid('CardTable.unknown' 2 pos('./cp/FS.oz' 240 16) nil 2) unit [x(1) g(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44245)
lbl(44272)	unify(x(8) x(6))
lbl(44275)	definition(x(6) 44302 pid('CardTable.lowerBound' 2 pos('./cp/FS.oz' 241 16) nil 2) unit [x(1) g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44275)
lbl(44302)	unify(x(6) x(5))
lbl(44305)	definition(x(5) 44332 pid('CardTable.upperBound' 2 pos('./cp/FS.oz' 242 16) nil 2) unit [x(1) g(2)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(44305)
lbl(44332)	unify(x(5) x(7))
lbl(44335)	definition(x(5) 44483 pid('MakeCompTableWeight' 2 pos('./cp/FS.oz' 245 2) nil 5) unit [x(1) g(3) x(2) g(4) g(5)])
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(44351)	definition(x(4) 44391 pid('Result3.unknown' 2 pos('./cp/FS.oz' 246 19) nil 3) unit [g(0) g(1) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44351)
lbl(44391)	unify(x(4) x(2))
lbl(44394)	definition(x(2) 44434 pid('Result3.lowerBound' 2 pos('./cp/FS.oz' 247 19) nil 3) unit [g(0) g(3) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44394)
lbl(44434)	unify(x(2) x(1))
lbl(44437)	definition(x(1) 44477 pid('Result3.upperBound' 2 pos('./cp/FS.oz' 248 19) nil 3) unit [g(0) g(4) x(0) g(2)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailCall(g(2) 3)
		endDefinition(44437)
lbl(44477)	unify(x(1) x(3))
		return
		endDefinition(44335)
lbl(44483)	putRecord(c [card weightMax weightMin weightSum] x(1))
		setValue(x(4))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		putRecord(c [card weightMax weightMin weightSum] x(2))
		setValue(x(4))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		putRecord(s [max min] y(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(7) x(3) y(8))
		move(x(5) y(9))
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(10) x(0) y(5) x(1))
		call(y(9) 2)
		putConstant(<M: MAXELEM> x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(6) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 417> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(y(9) 2)
		putConstant(<M: MINELEM> x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(y(9) 2)
		move(g(6) x(0))
		move(y(3) x(1))
		call(y(9) 2)
		putRecord(s [max min] x(0))
		setValue(g(7))
		setValue(g(8))
		move(y(7) x(1))
		testBI('IsProcedure' [x(1)]#[x(2)] 44629)
		unify(y(8) y(7))
		deAllocateL
		return
lbl(44629)	testLiteral(y(7) naive 44650)
lbl(44633)	definition(x(0) 44645 pid('' 2 pos('./cp/FS.oz' 267 29) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(44633)
lbl(44645)	unify(x(0) y(8))
		deAllocateL
		return
lbl(44650)	putRecord('#' 2 x(3))
		setConstant(sel)
		setConstant(min)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 411> 8)
		putRecord('#' 2 x(0))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(3))
		setConstant(cost)
		setConstant(card)
		putRecord('#' 2 x(5))
		setConstant(comp)
		setConstant(unknown)
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(4))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 411> 8)
lbl(44723)	definition(x(0) 44781 pid('' 2 pos('./cp/FS.oz' 275 8) nil 4) unit [y(2) y(1)])
lbl(44729)	definition(x(3) 44770 pid('' 3 pos('./cp/FS.oz' 276 12) nil 3) unit [g(0) g(1)])
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		call(g(0) 2)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL4
		tailCall(g(1) 3)
		endDefinition(44729)
lbl(44770)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 44> 7)
		endDefinition(44723)
lbl(44781)	unify(x(0) y(8))
		deAllocateL
		return
		endDefinition(44227)
lbl(44788)	createVariable(y(6))
lbl(44790)	definition(x(26) 45107 pid('ElementFun' 4 pos('./cp/FS.oz' 283 6) nil 11) <Q: 421> [y(6)])
		putRecord(v [unknown weight] x(5))
		setVariable(x(6))
		setVariable(x(7))
		putRecord(v [unknown weight] x(8))
		setVariable(x(9))
		setVariable(x(10))
		putRecord(v [max min] x(4))
		setValue(x(5))
		setValue(x(8))
lbl(44820)	definition(x(5) 44867 pid('ElementFunTable.min.unknown' 2 pos('./cp/FS.oz' 285 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 413> 5)
		endDefinition(44820)
lbl(44867)	unify(x(5) x(9))
lbl(44870)	definition(x(5) 44937 pid('ElementFunTable.min.weight' 2 pos('./cp/FS.oz' 288 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 417> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44870)
lbl(44937)	unify(x(5) x(10))
lbl(44940)	definition(x(5) 44987 pid('ElementFunTable.max.unknown' 2 pos('./cp/FS.oz' 293 20) nil 4) unit [g(0) x(1)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unknown x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		call(g(1) 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 414> 5)
		endDefinition(44940)
lbl(44987)	unify(x(5) x(6))
lbl(44990)	definition(x(5) 45057 pid('ElementFunTable.max.weight' 2 pos('./cp/FS.oz' 296 13) nil 4) unit [g(0) x(1) x(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(error x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 418> 4)
		move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		call(g(1) 2)
		move(y(4) x(0))
		createVariableMove(y(0) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(g(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(44990)
lbl(45057)	unify(x(5) x(7))
		testBI('IsProcedure' [x(0)]#[x(1)] 45068)
		unify(x(3) x(0))
		return
lbl(45068)	putRecord('#' 2 x(1))
		setConstant(sel)
		setConstant(min)
		putRecord('#' 2 x(6))
		setConstant(wrt)
		setConstant(unknown)
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(x(1))
		setValue(x(5))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 411> 9)
		endDefinition(44790)
lbl(45107)	definition(x(26) 45220 pid('FilterFun' 3 pos('./cp/FS.oz' 309 6) nil 4) <Q: 422> [y(0)])
		testLiteral(x(0) true 45162)
lbl(45117)	definition(x(0) 45158 pid('' 2 pos('./cp/FS.oz' 312 5) nil 3) unit [x(1) g(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		callBI('<' [x(1) x(0)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL3
		return
		endDefinition(45117)
lbl(45158)	unify(x(0) x(2))
		return
lbl(45162)	definition(x(3) 45214 pid('' 2 pos('./cp/FS.oz' 314 5) nil 3) unit [x(1) g(0) x(0)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(2) x(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 45207)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		tailCall(g(2) 2)
lbl(45207)	getLiteral(false y(0))
		deAllocateL3
		return
		endDefinition(45162)
lbl(45214)	unify(x(3) x(2))
		return
		endDefinition(45107)
lbl(45220)	definition(x(26) 45252 pid('SelectFun' 2 pos('./cp/FS.oz' 321 6) nil 2) <Q: 423> nil)
		testLiteral(x(0) id 45246)
lbl(45230)	definition(x(0) 45242 pid('' 2 pos('./cp/FS.oz' 323 13) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45230)
lbl(45242)	unify(x(0) x(1))
		return
lbl(45246)	unify(x(1) x(0))
		return
		endDefinition(45220)
lbl(45252)	definition(x(26) 45341 pid('RRobinFun' 2 pos('./cp/FS.oz' 329 6) nil 2) <Q: 424> nil)
		testBool(x(0) 45312 45328)
lbl(45262)	definition(x(0) 45308 pid('' 2 pos('./cp/FS.oz' 330 17) nil 5) unit nil)
		shallowGuard(45295)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(45276)	shallowThen
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 21> 7)
lbl(45295)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45262)
lbl(45308)	unify(x(0) x(1))
		return
lbl(45312)	definition(x(0) 45324 pid('' 2 pos('./cp/FS.oz' 331 7) nil 2) unit nil)
		unify(x(1) x(0))
		return
		endDefinition(45312)
lbl(45324)	unify(x(0) x(1))
		return
lbl(45328)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(330)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45252)
lbl(45341)	definition(x(26) 45473 pid('FSDistNaive' 1 pos('./cp/FS.oz' 336 6) nil 2) <Q: 425> [y(6) x(4) x(5)])
		testLiteral(x(0) nil 45352)
		return
lbl(45352)	allocateL4
		move(x(0) y(0))
		createChoice
lbl(45357)	lastClause
		emptyClause
lbl(45359)	move(g(0) x(0))
		inlineDot(x(0) unknown x(1) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testLiteral(y(3) nil 45408)
lbl(45392)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 406> 4)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45408)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 413> 4)
		createChoice
lbl(45418)	nextClause(45445)
		emptyClause
lbl(45421)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
lbl(45445)	lastClause
		emptyClause
lbl(45447)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 405> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 425> 3)
		endDefinition(45341)
lbl(45473)	createVariable(y(7))
lbl(45475)	definition(x(26) 45660 pid('FSDistGeneric' 7 pos('./cp/FS.oz' 360 6) nil 7) <Q: 426> [y(7) x(4) x(5)])
		allocateL10
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		createChoice
lbl(45504)	lastClause
		emptyClause
lbl(45506)	call(y(5) 0)
		createChoice
lbl(45510)	lastClause
		emptyClause
lbl(45512)	moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 39> 6)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		call(y(0) 2)
		testLiteral(y(6) nil 45538)
		deAllocateL10
		return
lbl(45538)	move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 405> 4)
		move(y(7) x(0))
		createVariableMove(y(9) x(1))
		call(y(4) 2)
		createChoice
lbl(45575)	nextClause(45617)
		emptyClause
lbl(45578)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
lbl(45617)	lastClause
		emptyClause
lbl(45619)	moveMoveYXYX(y(8) x(0) y(9) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		call(y(3) 2)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		move(y(5) x(6))
		deAllocateL10
		genFastCall(<Q: 426> 15)
		endDefinition(45475)
lbl(45660)	createVariable(y(8))
lbl(45662)	definition(x(26) 45886 pid('FSDistribute' 2 pos('./cp/FS.oz' 390 6) nil 8) <Q: 427> [y(7) y(8)])
		allocateL7
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testLiteral(y(0) naive 45692)
lbl(45685)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<Q: 425> 3)
lbl(45692)	move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) generic 45873)
lbl(45702)	putConstant(select x(2))
		putConstant(id x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 423> 4)
		putConstant(nil x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		move(y(0) x(0))
		putConstant(weights x(4))
		move(y(3) x(1))
		callBI('CondSelect' [x(0) x(4) x(1)]#[x(2)])
		putConstant(order x(4))
		putConstant(order x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(2) y(3))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 420> 8)
		move(y(0) x(0))
		putConstant(filter x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(5)])
		move(x(5) x(0))
		move(y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 422> 6)
		move(y(0) x(0))
		putConstant(element x(4))
		putConstant(element x(5))
		callBI('CondSelect' [x(0) x(4) x(5)]#[x(6)])
		move(x(6) x(0))
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 421> 8)
		move(y(0) x(0))
		putConstant(rrobin x(2))
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(2) x(3)]#[x(4)])
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 424> 4)
lbl(45836)	definition(x(0) 45845 pid('' 0 pos('./cp/FS.oz' 404 42) nil 0) unit nil)
		return
		endDefinition(45836)
lbl(45845)	move(y(0) x(1))
		putConstant(procedure x(7))
		callBI('CondSelect' [x(1) x(7) x(0)]#[x(6)])
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(2) x(5))
		deAllocateL7
		genFastCall(<Q: 426> 15)
lbl(45873)	putRecord('#' 2 x(1))
		setConstant('Error in FSDistribute')
		setValue(y(0))
		callBI('Exception.raise' [x(1)]#nil)
		endDefinition(45662)
lbl(45886)	definition(x(27) 45986 pid('FDWatchMax' 2 pos('./cp/FS.oz' 423 3) nil 4) <Q: 428> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 45899)
		tailCall(x(1) 1)
lbl(45899)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) max x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 45971 45973)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 428> 5)
lbl(45971)	deAllocateL4
		return
lbl(45973)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(429)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45886)
lbl(45986)	definition(x(27) 46086 pid('FDWatchMin' 2 pos('./cp/FS.oz' 435 3) nil 4) <Q: 429> [x(3)])
		testBI('IsDet' [x(0)]#[x(2)] 45999)
		tailCall(x(1) 1)
lbl(45999)	allocateL4
		move(g(0) x(2))
		inlineDot(x(2) reflect x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(2) x(0))
		call(y(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) watch x(3) cache)
		inlineDot(x(3) min x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		call(x(3) 3)
		testBool(y(3) 46071 46073)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 429> 5)
lbl(46071)	deAllocateL4
		return
lbl(46073)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(45986)
lbl(46086)	inlineDot(x(2) card x(27) cache)
lbl(46092)	definition(x(28) 46130 pid('FSCard' 2 pos('./cp/FS.oz' 452 6) nil 4) <Q: 430> [x(3) x(27)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) decl x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		call(x(3) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(46092)
lbl(46130)	inlineDot(x(1) cardRange x(27) cache)
		inlineDot(x(1) getUnknown x(29) cache)
		unify(x(29) y(3))
		inlineDot(x(1) getGlb x(29) cache)
		unify(x(29) y(4))
		inlineDot(x(1) getLub x(29) cache)
		unify(x(29) y(5))
		inlineDot(x(1) getCard x(29) cache)
		inlineDot(x(1) getNumOfKnownIn x(30) cache)
		unify(x(30) y(1))
		inlineDot(x(1) getNumOfKnownNotIn x(30) cache)
		unify(x(30) y(2))
		inlineDot(x(1) getNumOfUnknown x(30) cache)
		unify(x(30) y(0))
		inlineDot(x(1) sup x(1) cache)
		moveMoveXYXY(x(2) y(9) x(3) y(10))
		moveMoveXYXY(x(4) y(11) x(5) y(12))
		moveMoveXYXY(x(6) y(13) x(7) y(14))
		moveMoveXYXY(x(8) y(15) x(9) y(16))
		moveMoveXYXY(x(10) y(17) x(12) y(18))
		moveMoveXYXY(x(11) y(19) x(13) y(20))
		moveMoveXYXY(x(14) y(21) x(15) y(22))
		moveMoveXYXY(x(16) y(23) x(17) y(24))
		moveMoveXYXY(x(18) y(25) x(19) y(26))
		moveMoveXYXY(x(20) y(27) x(21) y(28))
		moveMoveXYXY(x(22) y(29) x(23) y(30))
		moveMoveXYXY(x(24) y(31) x(25) y(32))
		moveMoveXYXY(x(26) y(33) x(28) y(34))
		moveMoveXYXY(x(27) y(35) x(29) y(36))
		createVariableMove(y(37) x(0))
		call(x(1) 1)
		putRecord('#' 2 x(0))
		setConstant(0)
		setValue(y(37))
		putList(y(38))
		setValue(x(0))
		setConstant(nil)
		move(y(38) x(0))
		createVariableMove(y(39) x(1))
		call(y(19) 2)
lbl(46301)	definition(x(0) 46380 pid('VectorToList' 2 pos('./cp/FS.oz' 479 3) nil 3) <Q: 431> [g(3) g(4)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 46328 46367)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(46328)	move(y(0) x(0))
		testBI('IsRecord' [x(0)]#[x(1)] 46342)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<P: 159> 5)
lbl(46342)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(1))
		setConstant(type)
		setConstant('VectorToTuple')
		setValue(x(2))
		setConstant(vector)
		setConstant(1)
		setConstant('A propagator expected a vector as input argument.')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(46367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(480)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46301)
lbl(46380)	unify(x(0) y(7))
lbl(46383)	definition(x(0) 46417 pid('FSIntersectN' 2 pos('./cp/FS.oz' 495 3) nil 4) <Q: 432> [y(24) y(39)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 431> 4)
		move(y(1) x(0))
		move(g(0) x(1))
		move(g(1) x(2))
		move(y(0) x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(46383)
lbl(46417)	definition(x(1) 46507 pid('FSUnionN' 2 pos('./cp/FS.oz' 500 3) nil 4) <Q: 433> [y(9) y(10)])
		allocateL4
		move(g(0) x(2))
		inlineDot(x(2) unionN x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) sum x(1) cache)
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 431> 4)
lbl(46461)	definition(x(1) 46472 pid('' 2 pos('./cp/FS.oz' 502 37) nil 2) unit nil)
		genFastCall(<Q: 430> 5)
		endDefinition(46461)
lbl(46472)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 430> 4)
		moveMoveYXYX(y(2) x(3) y(0) x(0))
		move(y(3) x(2))
		putConstant('=:' x(1))
		deAllocateL4
		tailCall(x(3) 3)
		endDefinition(46417)
lbl(46507)	move(y(9) x(2))
		inlineDot(x(2) disjointN x(3) cache)
lbl(46516)	definition(x(4) 46582 pid('FSDistinctN' 1 pos('./cp/FS.oz' 508 3) nil 2) <Q: 434> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 431> 4)
lbl(46529)	definition(x(1) 46573 pid('' 1 pos('./cp/FS.oz' 511 7) nil 2) unit nil)
		match(x(0) ht(46558 [onScalar(nil 46538) onRecord('|' 2 46539)]))
lbl(46538)	return
lbl(46539)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 410> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
lbl(46558)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(515)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(46529)
lbl(46573)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 37> 5)
		endDefinition(46516)
lbl(46582)	inlineDot(x(2) partition x(5) cache)
lbl(46588)	definition(x(6) 46829 pid('FSNewWeights' 2 pos('./cp/FS.oz' 521 3) nil 6) <Q: 435> [g(5) g(6) g(7)])
		allocateL2
		callBI('NewDictionary' nil#[x(2)])
		createVariable(x(3))
lbl(46600)	definition(x(4) 46772 pid('ScanWeightDescr' 1 pos('./cp/FS.oz' 524 6) nil 8) unit [g(0) x(2) x(3)])
		allocateL1
		move(x(0) y(0))
		testList(y(0) 46643)
lbl(46613)	getVarVar(x(1) x(2))
		shallowGuard(46643)
		getRecord('#' 2 x(1))
		unifyLiteral(default)
		unifyVariable(x(3))
lbl(46626)	shallowThen
		move(g(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		move(x(2) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46643)	testList(y(0) 46721)
lbl(46646)	getVarVar(x(0) x(1))
		shallowGuard(46721)
		getRecord('#' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(46667)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		createVariable(y(0))
		testLT(x(3) x(4) x(5) 46711)
		getList(y(0))
		unifyVariable(x(5))
		unifyValue(x(1))
		getRecord('#' 2 x(5))
		unifyVariable(x(6))
		unifyValue(x(2))
		getRecord('#' 2 x(6))
		unifyVariable(x(7))
		unifyValue(x(4))
		inlinePlus1(x(3) x(1))
		unify(x(1) x(7))
		branch(46714)
lbl(46711)	unify(y(0) x(1))
lbl(46714)	move(y(0) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46721)	testList(y(0) 46751)
lbl(46724)	getVarVar(x(0) x(1))
		shallowGuard(46751)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(46737)	shallowThen
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(3)]#nil)
		move(x(1) x(0))
		deAllocateL1
		tailCall(g(2) 1)
lbl(46751)	testLiteral(y(0) nil 46757)
lbl(46755)	deAllocateL1
		return
lbl(46757)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(538)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(46600)
lbl(46772)	unify(x(4) x(3))
		putConstant(default x(4))
		putConstant(0 x(5))
		callBI('Dictionary.put' [x(2) x(4) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(3) 1)
		move(y(1) x(0))
		putConstant(default x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
lbl(46801)	definition(x(1) 46822 pid('' 2 pos('./cp/FS.oz' 546 6) nil 5) unit [g(2) y(1) x(2)])
		move(g(1) x(2))
		move(g(2) x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(46801)
lbl(46822)	unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(46588)
lbl(46829)	unify(x(6) y(8))
lbl(46832)	definition(x(6) 46852 pid('FSCompl' 2 pos('./cp/FS.oz' 552 3) nil 3) <Q: 436> [y(26) y(39)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(g(1) x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46832)
lbl(46852)	definition(x(7) 46886 pid('FSComplIn' 3 pos('./cp/FS.oz' 556 3) nil 3) <Q: 437> [y(21) y(23)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(1) false '' true 3) 0)
		endDefinition(46852)
lbl(46886)	createVariable(y(7))
lbl(46888)	definition(x(8) 46915 pid('FSForAllIn' 2 pos('./cp/FS.oz' 562 3) nil 2) <Q: 438> [y(7)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(46888)
lbl(46915)	putRecord(l [decl lowerBound new upperBound] x(10))
		setVariable(x(11))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		putRecord(r [decl lowerBound new upperBound] x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
		setVariable(x(20))
		putRecord(t [decl lowerBound new upperBound] x(21))
		setVariable(x(22))
		setVariable(x(23))
		setVariable(x(24))
		setVariable(x(25))
		putRecord(v [decl is list lowerBound new record tuple upperBound] y(39))
		setVariable(x(9))
		setValue(y(30))
		setValue(x(10))
		setVariable(x(15))
		setValue(y(20))
		setValue(x(16))
		setValue(x(21))
		setVariable(x(26))
lbl(46971)	definition(x(10) 46991 pid('FSVar.decl' 1 pos('./cp/FS.oz' 568 14) nil 3) <Q: 439> [y(20) y(38)])
		move(x(0) x(2))
		move(g(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46971)
lbl(46991)	unify(x(10) x(9))
lbl(46994)	definition(x(10) 47014 pid('FSVar.upperBound' 2 pos('./cp/FS.oz' 572 10) nil 3) <Q: 440> [y(20)])
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(46994)
lbl(47014)	unify(x(10) x(26))
lbl(47017)	definition(x(10) 47034 pid('FSVar.lowerBound' 2 pos('./cp/FS.oz' 576 19) nil 3) <Q: 441> [y(20) y(38)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) false '' true 3) 0)
		endDefinition(47017)
lbl(47034)	unify(x(10) x(15))
lbl(47037)	definition(x(10) 47070 pid('FSVar.list.decl' 2 pos('./cp/FS.oz' 582 22) nil 2) <Q: 442> [x(9)])
		allocateL1
		move(x(1) y(0))
		genFastCall(<P: 19> 4)
lbl(47050)	definition(x(1) 47061 pid('' 1 pos('./cp/FS.oz' 585 12) nil 1) unit [g(0)])
		genFastCall(<Q: 439> 3)
		endDefinition(47050)
lbl(47061)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(47037)
lbl(47070)	unify(x(10) x(11))
lbl(47073)	definition(x(10) 47117 pid('FSVar.list.upperBound' 3 pos('./cp/FS.oz' 589 22) nil 3) <Q: 443> [x(26)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47091)	definition(x(1) 47108 pid('' 1 pos('./cp/FS.oz' 592 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47091)
lbl(47108)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47073)
lbl(47117)	unify(x(10) x(14))
lbl(47120)	definition(x(10) 47164 pid('FSVar.list.lowerBound' 3 pos('./cp/FS.oz' 596 22) nil 3) <Q: 444> [x(15)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(1) x(1))
		genFastCall(<P: 19> 4)
lbl(47138)	definition(x(1) 47155 pid('' 1 pos('./cp/FS.oz' 599 12) nil 2) unit [g(0) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47138)
lbl(47155)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(47120)
lbl(47164)	unify(x(10) x(12))
lbl(47167)	definition(x(10) 47216 pid('FSVar.list.new' 4 pos('./cp/FS.oz' 603 15) nil 4) <Q: 445> [y(20)])
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<P: 19> 4)
lbl(47187)	definition(x(1) 47207 pid('' 1 pos('./cp/FS.oz' 606 12) nil 3) unit [g(0) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47187)
lbl(47207)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 34> 5)
		endDefinition(47167)
lbl(47216)	unify(x(10) x(13))
lbl(47219)	definition(x(10) 47250 pid('FSVar.tuple.decl' 3 pos('./cp/FS.oz' 611 22) nil 4) <Q: 446> [g(8) x(9)])
		callBI('MakeTuple' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
lbl(47231)	definition(x(1) 47242 pid('' 1 pos('./cp/FS.oz' 614 12) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47231)
lbl(47242)	move(x(2) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47219)
lbl(47250)	unify(x(10) x(22))
lbl(47253)	definition(x(10) 47290 pid('FSVar.tuple.upperBound' 4 pos('./cp/FS.oz' 618 22) nil 5) <Q: 447> [g(8) x(26)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47265)	definition(x(1) 47282 pid('' 1 pos('./cp/FS.oz' 621 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47265)
lbl(47282)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47253)
lbl(47290)	unify(x(10) x(25))
lbl(47293)	definition(x(10) 47330 pid('FSVar.tuple.lowerBound' 4 pos('./cp/FS.oz' 625 22) nil 5) <Q: 448> [g(8) x(15)])
		callBI('MakeTuple' [x(0) x(1)]#[x(4)])
		unify(x(4) x(3))
lbl(47305)	definition(x(1) 47322 pid('' 1 pos('./cp/FS.oz' 628 12) nil 2) unit [g(1) x(2)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47305)
lbl(47322)	move(x(3) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47293)
lbl(47330)	unify(x(10) x(23))
lbl(47333)	definition(x(10) 47373 pid('FSVar.tuple.new' 5 pos('./cp/FS.oz' 632 15) nil 6) <Q: 449> [g(8) y(20)])
		callBI('MakeTuple' [x(0) x(1)]#[x(5)])
		unify(x(5) x(4))
lbl(47345)	definition(x(1) 47365 pid('' 1 pos('./cp/FS.oz' 635 12) nil 3) unit [g(1) x(2) x(3)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47345)
lbl(47365)	move(x(4) x(0))
		genFastCall(<P: 164> 5)
		endDefinition(47333)
lbl(47373)	unify(x(10) x(24))
lbl(47376)	definition(x(10) 47409 pid('FSVar.record.decl' 3 pos('./cp/FS.oz' 641 23) nil 3) <Q: 450> [g(8) x(9)])
		allocateL1
		move(x(2) y(0))
		genFastCall(<P: 110> 6)
lbl(47389)	definition(x(1) 47400 pid('' 1 pos('./cp/FS.oz' 644 6) nil 1) unit [g(1)])
		genFastCall(<Q: 439> 3)
		endDefinition(47389)
lbl(47400)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<P: 164> 5)
		endDefinition(47376)
lbl(47409)	unify(x(10) x(17))
lbl(47412)	definition(x(9) 47456 pid('FSVar.record.upperBound' 4 pos('./cp/FS.oz' 648 23) nil 4) <Q: 451> [g(8) x(26)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47430)	definition(x(1) 47447 pid('' 1 pos('./cp/FS.oz' 651 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 440> 5)
		endDefinition(47430)
lbl(47447)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47412)
lbl(47456)	unify(x(9) x(20))
lbl(47459)	definition(x(9) 47503 pid('FSVar.record.lowerBound' 4 pos('./cp/FS.oz' 655 23) nil 4) <Q: 452> [g(8) x(15)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(y(1) x(2))
		genFastCall(<P: 110> 6)
lbl(47477)	definition(x(1) 47494 pid('' 1 pos('./cp/FS.oz' 658 6) nil 2) unit [g(1) y(0)])
		move(x(0) x(1))
		move(g(1) x(0))
		genFastCall(<Q: 441> 5)
		endDefinition(47477)
lbl(47494)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 164> 5)
		endDefinition(47459)
lbl(47503)	unify(x(9) x(18))
lbl(47506)	definition(x(9) 47555 pid('FSVar.record.new' 5 pos('./cp/FS.oz' 662 16) nil 5) <Q: 453> [g(8) y(20)])
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYYX(x(4) y(2) y(2) x(2))
		genFastCall(<P: 110> 6)
lbl(47526)	definition(x(1) 47546 pid('' 1 pos('./cp/FS.oz' 665 6) nil 3) unit [g(1) y(0) y(1)])
		move(x(0) x(2))
		move(g(1) x(0))
		move(g(2) x(1))
		tailCall(g(0) 3)
		endDefinition(47526)
lbl(47546)	move(y(2) x(0))
		deAllocateL3
		genFastCall(<P: 164> 5)
		endDefinition(47506)
lbl(47555)	unify(x(9) x(19))
		putRecord(c [empty is new singl toString universal] y(20))
		setVariable(x(9))
		setValue(y(31))
		setValue(y(19))
		setVariable(y(30))
		setValue(y(32))
		setVariable(y(40))
		moveMoveXYXY(x(0) y(31) x(1) y(32))
		moveMoveXYXY(x(3) y(41) x(4) y(42))
		moveMoveXYXY(x(5) y(43) x(6) y(44))
		moveMoveXYXY(x(7) y(45) x(8) y(46))
		move(x(9) x(1))
		putConstant(nil x(0))
		call(y(19) 2)
		moveMoveYXYX(y(38) x(0) y(40) x(1))
		call(y(19) 2)
lbl(47611)	definition(x(0) 47631 pid('FSValue.singl' 2 pos('./cp/FS.oz' 674 14) nil 3) <Q: 454> [y(19)])
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		move(x(2) x(0))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(47611)
lbl(47631)	unify(x(0) y(30))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(0))
		setVariable(x(1))
		setVariable(x(2))
		setVariable(x(3))
		setValue(y(18))
		setVariable(x(4))
		setVariable(x(5))
		setVariable(x(6))
lbl(47652)	definition(x(7) 47695 pid('FSReified.isIn' 3 pos('./cp/FS.oz' 682 31) nil 5) <Q: 455> [y(10)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 408> 7)
		endDefinition(47652)
lbl(47695)	unify(x(7) x(5))
lbl(47698)	definition(x(5) 47774 pid('FSReified.areIn' 3 pos('./cp/FS.oz' 686 17) nil 5) <Q: 456> [y(10)])
		allocateL5
		move(g(0) x(3))
		inlineDot(x(3) list x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		putRecord('#' 2 x(1))
		setConstant(0)
		setConstant(1)
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		call(y(3) 3)
lbl(47746)	definition(x(1) 47763 pid('' 2 pos('./cp/FS.oz' 690 9) nil 3) unit [y(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 408> 7)
		endDefinition(47746)
lbl(47763)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(47698)
lbl(47774)	unify(x(5) x(1))
lbl(47777)	definition(x(1) 47829 pid('FSReified.include' 3 pos('./cp/FS.oz' 692 17) nil 5) <Q: 457> [y(10) y(9)])
		allocateL3
		move(g(0) x(3))
		inlineDot(x(3) bool x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		call(x(4) 1)
		move(g(1) x(0))
		inlineDot(x(0) includeR x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(47777)
lbl(47829)	unify(x(1) x(4))
		move(y(9) x(1))
		inlineDot(x(1) bounds x(4) cache)
		unify(x(4) x(2))
		inlineDot(x(1) boundsN x(2) cache)
		unify(x(2) x(3))
		inlineDot(x(1) partitionReified x(2) cache)
		unify(x(2) x(6))
		inlineDot(x(1) monitorIn x(2) cache)
		unify(x(2) y(7))
		getRecord(r [card cardOf lowerBound unknown upperBound] y(6))
		unifyValVar(y(36) x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		getRecord(c [lowerBound unknown upperBound] x(1))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		putRecord(i [convex 'match' max maxN min minN seq] x(1))
		setValue(y(29))
		setValue(y(13))
		setValue(y(28))
		setValue(y(15))
		setValue(y(27))
		setValue(y(14))
		setValue(y(16))
		getRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] g(9))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(44))
		unifyValue(y(45))
		unifyValue(y(26))
		unifyValue(y(21))
		unifyValue(y(41))
		unifyValue(y(22))
		unifyValue(y(42))
		unifyValue(y(33))
		unifyValue(y(12))
		unifyValue(y(46))
		unifyValue(y(11))
		unifyNumber(0)
		unifyValue(x(1))
		unifyValue(y(24))
		unifyValue(y(31))
		unifyValue(y(17))
		unifyValue(y(7))
		unifyValue(y(8))
		unifyValue(y(43))
		unifyValue(y(6))
		unifyValue(x(0))
		unifyValue(y(25))
		unifyValue(y(37))
		unifyValue(y(23))
		unifyValue(y(32))
		unifyValue(y(20))
		unifyValue(y(39))
		deAllocateL
		return
		endDefinition(42902)
lbl(47978)	tailCall(x(2) 0)
		endDefinition(42566)
lbl(47983)	putRecord(l [decl lowerBound new upperBound] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/3')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(r [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(t [decl lowerBound new upperBound] x(4))
		setConstant('procedure/3')
		setConstant('procedure/4')
		setConstant('procedure/5')
		setConstant('procedure/4')
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(v [decl is list lowerBound new record tuple upperBound] x(4))
		setConstant('procedure/1')
		setConstant(value)
		setValue(x(5))
		setConstant('procedure/2')
		setConstant(value)
		setValue(x(6))
		setValue(x(7))
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(c [empty is new singl toString universal] x(4))
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(r [areIn bounds boundsN equal include isIn partition] x(4))
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant('procedure/3')
		setConstant(value)
		putRecord(record 1 x(7))
		setValue(x(4))
		putRecord(c [lowerBound unknown upperBound] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(r [card cardOf lowerBound unknown upperBound] x(4))
		setConstant(value)
		setValue(x(8))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(8))
		setValue(x(4))
		putRecord(i [convex 'match' max maxN min minN seq] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		putRecord(record 1 x(9))
		setValue(x(4))
		putList(x(13))
		setConstant(watch)
		setConstant(nil)
		putList(x(12))
		setConstant(sum)
		setValue(x(13))
		putList(x(11))
		setConstant(reflect)
		setValue(x(12))
		putList(x(10))
		setConstant(list)
		setValue(x(11))
		putList(x(4))
		setConstant(decl)
		setValue(x(10))
		putList(x(3))
		setConstant(bool)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(14))
		setConstant('x-oz://boot/FSB')
		setConstant(nil)
		putRecord(info ['from' type] x(15))
		setConstant('x-oz://boot/FSP')
		setConstant(nil)
		putRecord('import' ['FD' 'FSB' 'FSP'] x(0))
		setValue(x(1))
		setValue(x(14))
		setValue(x(15))
		putConstant('procedure/2' x(4))
		putConstant(value x(10))
		putConstant('procedure/2' x(11))
		putConstant('procedure/3' x(12))
		putConstant(value x(13))
		putConstant(value x(14))
		putConstant(value x(15))
		putConstant(value x(16))
		putConstant('procedure/1' x(17))
		putConstant('procedure/2' x(18))
		putConstant(value x(19))
		putConstant('procedure/2' x(20))
		putConstant(value x(21))
		putConstant(char x(22))
		putConstant(value x(23))
		putConstant('procedure/2' x(24))
		putConstant(value x(25))
		putConstant(value x(26))
		putConstant('procedure/2' x(27))
		putConstant(value x(28))
		putConstant(value x(29))
		putConstant(value x(30))
		putConstant(value x(31))
		putConstant('procedure/2' x(32))
		putRecord('export' [card cardRange compl complIn diff disjoint disjointN distinct distinctN distribute exclude forAllIn include inf int intersect intersectN isIn monitorIn newWeights partition reflect reified subset sup union unionN value var] x(1))
		setValue(x(4))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(9))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(8))
		setValue(x(7))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(92) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(48377)	definition(x(7) 48401 pid('NewKiller' 2 pos('./cp/Search.oz' 27 3) nil 3) <P: 458> nil)
lbl(48383)	definition(x(2) 48395 pid('Killer' 0 pos('./cp/Search.oz' 28 6) nil 0) unit [x(1)])
		getLiteral(kill g(0))
		return
		endDefinition(48383)
lbl(48395)	unify(x(2) x(0))
		return
		endDefinition(48377)
lbl(48401)	definition(x(7) 48413 pid('WrapS' 2 pos('./cp/Search.oz' 36 3) nil 2) <P: 459> nil)
		unify(x(1) x(0))
		return
		endDefinition(48401)
lbl(48413)	definition(x(8) 48446 pid('WrapP' 2 pos('./cp/Search.oz' 40 3) nil 3) <P: 460> [y(186) y(185)])
lbl(48419)	definition(x(2) 48440 pid('' 1 pos('./cp/Search.oz' 41 6) nil 4) unit [g(0) g(1) x(0)])
		move(g(2) x(1))
		callBI('Space.clone' [x(1)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(48419)
lbl(48440)	unify(x(2) x(1))
		return
		endDefinition(48413)
lbl(48446)	definition(x(9) 48491 pid('ReDo' 2 pos('./cp/Search.oz' 50 6) nil 2) <P: 461> [y(188)])
		match(x(0) ht(48476 [onScalar(nil 48455) onRecord('|' 2 48456)]))
lbl(48455)	return
lbl(48456)	allocateL2
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		genFastCall(<P: 461> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(48476)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(53)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(48446)
lbl(48491)	definition(x(9) 48514 pid('Recompute' 3 pos('./cp/Search.oz' 56 6) nil 4) <P: 462> [y(185)])
		callBI('Space.clone' [x(0)]#[x(3)])
		unify(x(3) x(2))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 461> 5)
		endDefinition(48491)
lbl(48514)	definition(x(9) 48552 pid('Better' 3 pos('./cp/Search.oz' 64 3) nil 4) <P: 463> [y(185) y(187) y(186)])
		callBI('Space.clone' [x(2)]#[x(3)])
lbl(48523)	definition(x(2) 48546 pid('' 1 pos('./cp/Search.oz' 67 22) nil 3) unit [g(2) x(3) x(1)])
		move(g(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		move(x(0) x(1))
		move(x(2) x(0))
		tailCall(g(2) 2)
		endDefinition(48523)
lbl(48546)	callBI('Space.inject' [x(0) x(2)]#nil)
		return
		endDefinition(48514)
lbl(48552)	definition(x(9) 48653 pid('OneDepthNR' 3 pos('./cp/Search.oz' 74 3) nil 5) <P: 464> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(3)] 48647)
		callBI('Space.ask' [x(1)]#[x(3)])
		match(x(3) ht(48634 [onScalar(failed 48568) onScalar(succeeded 48572) onRecord(alternatives 1 48576)]))
lbl(48568)	getLiteral(nil x(2))
		return
lbl(48572)	unify(x(2) x(1))
		return
lbl(48576)	allocateL5
		getVariable(y(0))
		callBI('Space.clone' [x(1)]#[x(3)])
		putConstant(1 x(4))
		callBI('Space.commit' [x(1) x(4)]#nil)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(4) nil 48629)
lbl(48606)	putRecord('#' 2 x(0))
		setConstant(2)
		setValue(y(0))
		move(y(3) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL5
		genFastCall(<P: 464> 7)
lbl(48629)	unify(y(2) y(4))
		deAllocateL5
		return
lbl(48634)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(48647)	getLiteral(nil x(2))
		return
		endDefinition(48552)
lbl(48653)	definition(x(9) 48767 pid('AltCopy' 6 pos('./cp/Search.oz' 91 6) nil 8) <P: 465> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(6)] 48684)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 466> 15)
lbl(48684)	allocateL7
		callBI('Space.clone' [x(3)]#[x(6)])
		callBI('Space.commit' [x(6) x(1)]#nil)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(1))
		move(y(3) x(2))
		move(x(7) x(3))
		move(y(4) x(5))
		putConstant(1 x(4))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 48760)
lbl(48737)	move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		move(y(5) x(5))
		deAllocateL7
		genFastCall(<P: 465> 13)
lbl(48760)	unify(y(5) y(6))
		deAllocateL7
		return
		endDefinition(48653)
lbl(48767)	definition(x(9) 48906 pid('Alt' 9 pos('./cp/Search.oz' 104 6) nil 10) <P: 467> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(9)] 48807)
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(9) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		genFastCall(<P: 466> 15)
lbl(48807)	allocateL9
		putList(x(9))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		createVariableMove(y(8) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(8) nil 48899)
lbl(48858)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(8) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		deAllocateL9
		genFastCall(<P: 467> 19)
lbl(48899)	unify(y(7) y(8))
		deAllocateL9
		return
		endDefinition(48767)
lbl(48906)	definition(x(9) 49003 pid('OneDepthR' 7 pos('./cp/Search.oz' 114 6) nil 10) <P: 466> [y(184)])
		testBI('IsFree' [x(0)]#[x(7)] 48997)
		callBI('Space.ask' [x(1)]#[x(7)])
		match(x(7) ht(48984 [onScalar(failed 48922) onScalar(succeeded 48926) onRecord(alternatives 1 48930)]))
lbl(48922)	getLiteral(nil x(6))
		return
lbl(48926)	unify(x(6) x(1))
		return
lbl(48930)	getVariable(x(7))
		testBI('==' [x(4) x(5)]#[x(8)] 48954)
		move(x(1) x(3))
		move(x(7) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		putConstant(1 x(1))
		genFastCall(<P: 465> 13)
lbl(48954)	inlinePlus1(x(4) x(9))
		move(x(2) x(4))
		move(x(7) x(2))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(6) x(8))
		move(x(9) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 467> 19)
lbl(48984)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(123)
		setValue(x(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(48997)	getLiteral(nil x(6))
		return
		endDefinition(48906)
lbl(49003)	definition(x(9) 49069 pid('OneDepth' 4 pos('./cp/Search.oz' 130 6) nil 7) <P: 468> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 49046)
		moveMoveYXYX(y(3) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 464> 7)
lbl(49046)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(y(2) x(6))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 466> 15)
		endDefinition(49003)
lbl(49069)	definition(x(9) 49203 pid('AltCopy' 8 pos('./cp/Search.oz' 139 2) nil 10) <P: 469> [y(188) y(185) y(179)])
		testBI('==' [x(1) x(2)]#[x(8)] 49103)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		putConstant(nil x(3))
		genFastCall(<P: 470> 19)
lbl(49103)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(7) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		move(x(6) x(7))
		move(y(5) x(6))
		putConstant(1 x(5))
		createVariableMove(y(7) x(8))
		genFastCall(<P: 470> 18)
		move(y(7) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 49170)
		unify(y(6) y(7))
		deAllocateL8
		return
lbl(49170)	move(y(1) x(1))
		inlinePlus1(x(1) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(7) x(6) y(6) x(7))
		deAllocateL8
		genFastCall(<P: 469> 17)
		endDefinition(49069)
lbl(49203)	definition(x(9) 49366 pid('Alt' 11 pos('./cp/Search.oz' 154 2) nil 12) <P: 471> [y(188) y(179)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 49249)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 470> 19)
lbl(49249)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(10) y(8))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		move(y(7) x(6))
		move(x(9) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<P: 470> 18)
		move(y(9) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 49318)
		unify(y(8) y(9))
		deAllocateL
		return
lbl(49318)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(10) x(3) y(3) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(6) x(7) y(7) x(8))
		moveMoveYXYX(y(9) x(9) y(8) x(10))
		deAllocateL
		genFastCall(<P: 471> 23)
		endDefinition(49203)
lbl(49366)	definition(x(9) 49493 pid('OneBoundR' 9 pos('./cp/Search.oz' 165 2) nil 13) <P: 470> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 49487)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(49474 [onScalar(failed 49382) onScalar(succeeded 49386) onRecord(alternatives 1 49390)]))
lbl(49382)	unify(x(8) x(7))
		return
lbl(49386)	unify(x(8) x(1))
		return
lbl(49390)	getVariable(x(9))
		putConstant(0 x(10))
		testLE(x(4) x(10) x(11) 49404)
		getLiteral(cut x(8))
		return
lbl(49404)	testBI('==' [x(5) x(6)]#[x(10)] 49435)
		inlineMinus1(x(4) x(10))
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(10) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 469> 17)
lbl(49435)	inlineMinus1(x(4) x(11))
		inlinePlus1(x(5) x(12))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		move(x(7) x(9))
		move(x(12) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 471> 23)
lbl(49474)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(49487)	getLiteral(nil x(8))
		return
		endDefinition(49366)
lbl(49493)	definition(x(9) 49581 pid('OneIterR' 5 pos('./cp/Search.oz' 180 8) nil 10) <P: 472> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 49575)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(9)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(9) x(1))
		move(x(9) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(3) x(6))
		putConstant(nil x(3))
		putConstant(nil x(7))
		createVariableMove(y(5) x(8))
		genFastCall(<P: 470> 18)
		testLiteral(y(5) cut 49570)
lbl(49550)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<P: 472> 11)
lbl(49570)	unify(y(4) y(5))
		deAllocateL6
		return
lbl(49575)	getLiteral(nil x(4))
		return
		endDefinition(49493)
lbl(49581)	definition(x(9) 49640 pid('OneBound' 5 pos('./cp/Search.oz' 191 2) nil 9) <P: 473> [y(183)])
		allocateL5
		callBI('Space.new' [x(0)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(4))
		moveMoveYXYX(y(1) x(5) y(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 470> 19)
		endDefinition(49581)
lbl(49640)	definition(x(9) 49687 pid('OneIter' 4 pos('./cp/Search.oz' 197 2) nil 5) <P: 474> [y(183)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		moveMoveYXYX(y(3) x(0) y(1) x(3))
		move(y(2) x(4))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 472> 11)
		endDefinition(49640)
lbl(49687)	definition(x(9) 49802 pid('Probe' 3 pos('./cp/Search.oz' 203 2) nil 6) <P: 475> [y(184) y(188) y(185)])
		testBI('IsDet' [x(2)]#[x(3)] 49703)
		putConstant(killed x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(49703)	callBI('Space.ask' [x(0)]#[x(3)])
		match(x(3) ht(49787 [onScalar(failed 49709) onScalar(succeeded 49710) onRecord(alternatives 1 49719)]))
lbl(49709)	return
lbl(49710)	putRecord(succeeded 1 x(1))
		setValue(x(0))
		callBI('Exception.raise' [x(1)]#nil)
lbl(49719)	getVariable(x(3))
		testNumber(x(1) 0 49737)
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		putConstant(0 x(1))
		genFastCall(<P: 475> 7)
lbl(49737)	allocateL3
		callBI('Space.clone' [x(0)]#[x(4)])
		putRecord('#' 2 x(5))
		setConstant(2)
		setValue(x(3))
		callBI('Space.commit' [x(0) x(5)]#nil)
		inlineMinus1(x(1) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(x(3) x(1))
		genFastCall(<P: 475> 6)
		move(y(2) x(0))
		putConstant(1 x(3))
		callBI('Space.commit' [x(0) x(3)]#nil)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 475> 7)
lbl(49787)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(49687)
lbl(49802)	definition(x(9) 49861 pid('Iterate' 4 pos('./cp/Search.oz' 220 2) nil 5) <P: 476> [y(185)])
		testBI('==' [x(2) x(1)]#[x(4)] 49818)
		move(x(3) x(2))
		genFastCall(<P: 475> 7)
lbl(49818)	allocateL4
		callBI('Space.clone' [x(0)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(y(3) x(2))
		genFastCall(<P: 475> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<P: 476> 9)
		endDefinition(49802)
lbl(49861)	definition(x(9) 49902 pid('LDS' 3 pos('./cp/Search.oz' 226 2) nil 4) <P: 477> [y(183)])
		allocateL3
		callBI('Space.new' [x(0)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 458> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		move(y(2) x(3))
		putConstant(0 x(1))
		deAllocateL3
		genFastCall(<P: 476> 9)
		endDefinition(49861)
lbl(49902)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] y(100))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
		setVariable(y(187))
		setVariable(x(12))
		setVariable(x(13))
		setVariable(x(14))
		setVariable(x(15))
		setVariable(x(16))
		setVariable(x(17))
		setVariable(x(18))
		setVariable(x(19))
lbl(49930)	definition(x(0) 49974 pid('OneModule.depth' 4 pos('./cp/Search.oz' 233 32) nil 4) <P: 478> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 49955)
lbl(49950)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(49955)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(49930)
lbl(49974)	unify(x(0) y(187))
lbl(49977)	definition(x(0) 50017 pid('OneModule.depthP' 4 pos('./cp/Search.oz' 239 18) nil 4) <P: 479> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50002)
lbl(49997)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50002)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(49977)
lbl(50017)	unify(x(0) x(12))
lbl(50020)	definition(x(0) 50055 pid('OneModule.depthS' 4 pos('./cp/Search.oz' 245 18) nil 4) <P: 480> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 468> 8)
		testLiteral(y(1) nil 50045)
lbl(50040)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50045)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50020)
lbl(50055)	unify(x(0) x(13))
lbl(50058)	definition(x(0) 50106 pid('OneModule.bound' 5 pos('./cp/Search.oz' 252 18) nil 5) <P: 481> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50087 [onScalar(nil 50077) onScalar(cut 50082)]))
lbl(50077)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50082)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50087)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50058)
lbl(50106)	unify(x(0) x(9))
lbl(50109)	definition(x(0) 50153 pid('OneModule.boundP' 5 pos('./cp/Search.oz' 259 18) nil 5) <P: 482> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50138 [onScalar(nil 50128) onScalar(cut 50133)]))
lbl(50128)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50133)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50138)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50109)
lbl(50153)	unify(x(0) x(10))
lbl(50156)	definition(x(0) 50195 pid('OneModule.boundS' 5 pos('./cp/Search.oz' 266 18) nil 5) <P: 483> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 473> 10)
		match(y(1) ht(50185 [onScalar(nil 50175) onScalar(cut 50180)]))
lbl(50175)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50180)	getLiteral(cut y(0))
		deAllocateL2
		return
lbl(50185)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50156)
lbl(50195)	unify(x(0) x(11))
lbl(50198)	definition(x(0) 50242 pid('OneModule.iter' 4 pos('./cp/Search.oz' 274 18) nil 4) <P: 484> [y(186)])
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50223)
lbl(50218)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50223)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(50198)
lbl(50242)	unify(x(0) x(14))
lbl(50245)	definition(x(0) 50285 pid('OneModule.iterP' 4 pos('./cp/Search.oz' 280 18) nil 4) <P: 485> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50270)
lbl(50265)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50270)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(50245)
lbl(50285)	unify(x(0) x(15))
lbl(50288)	definition(x(0) 50323 pid('OneModule.iterS' 4 pos('./cp/Search.oz' 286 18) nil 4) <P: 486> nil)
		allocateL2
		move(x(3) y(0))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 474> 8)
		testLiteral(y(1) nil 50313)
lbl(50308)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(50313)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(50288)
lbl(50323)	unify(x(0) x(16))
lbl(50326)	definition(x(0) 50391 pid('OneModule.lds' 4 pos('./cp/Search.oz' 293 18) nil 4) <P: 487> [y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50372)
		match(x(0) ht(50369 [onScalar(killed 50348) onRecord(succeeded 1 50353)]))
lbl(50348)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50353)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.merge' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL4
		return
lbl(50369)	callBI('Exception.raise' [x(0)]#nil)
lbl(50372)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50326)
lbl(50391)	unify(x(0) x(17))
lbl(50394)	definition(x(0) 50455 pid('OneModule.ldsP' 4 pos('./cp/Search.oz' 299 18) nil 4) <P: 488> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50436)
		match(x(0) ht(50433 [onScalar(killed 50416) onRecord(succeeded 1 50421)]))
lbl(50416)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50421)	getVariable(x(0))
		getList(y(3))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL4
		genFastCall(<P: 460> 5)
lbl(50433)	callBI('Exception.raise' [x(0)]#nil)
lbl(50436)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50394)
lbl(50455)	unify(x(0) x(18))
lbl(50458)	definition(x(0) 50517 pid('OneModule.ldsS' 4 pos('./cp/Search.oz' 305 18) nil 4) <P: 489> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		exHandler(50498)
		match(x(0) ht(50495 [onScalar(killed 50480) onRecord(succeeded 1 50485)]))
lbl(50480)	getLiteral(nil y(3))
		deAllocateL4
		return
lbl(50485)	getVariable(x(0))
		getList(y(3))
		unifyValue(x(0))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(50495)	callBI('Exception.raise' [x(0)]#nil)
lbl(50498)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<P: 477> 6)
		getLiteral(nil y(3))
		popEx
		deAllocateL4
		return
		endDefinition(50458)
lbl(50517)	unify(x(0) x(19))
lbl(50520)	definition(x(9) 50630 pid('AllNR' 5 pos('./cp/Search.oz' 320 6) nil 8) <P: 490> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 50624)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(50611 [onScalar(failed 50536) onScalar(succeeded 50540) onRecord(alternatives 1 50555)]))
lbl(50536)	unify(x(4) x(3))
		return
lbl(50540)	getList(x(4))
		unifyVariable(x(4))
		unifyValue(x(3))
		move(x(1) x(0))
		move(x(4) x(1))
		tailCall(x(2) 2)
lbl(50555)	allocateL5
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 490> 10)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(4))
		deAllocateL5
		genFastCall(<P: 490> 11)
lbl(50611)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(329)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(50624)	unify(x(4) x(3))
		return
		endDefinition(50520)
lbl(50630)	definition(x(9) 50754 pid('AltCopy' 8 pos('./cp/Search.oz' 335 2) nil 10) <P: 491> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 50667)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 492> 19)
lbl(50667)	allocateL8
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(x(7) x(8))
		putConstant(1 x(4))
		createVariableMove(y(7) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		move(y(7) x(7))
		deAllocateL8
		genFastCall(<P: 491> 17)
		endDefinition(50630)
lbl(50754)	definition(x(9) 50908 pid('Alt' 11 pos('./cp/Search.oz' 346 2) nil 12) <P: 493> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 50800)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 492> 19)
lbl(50800)	allocateL(13)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		moveMoveXYXY(x(8) y(8) x(9) y(9))
		moveMoveXYYX(x(10) y(10) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(11) x(2))
		genFastCall(<P: 462> 6)
		putList(x(3))
		setValue(y(1))
		setValue(y(5))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(6) x(4))
		moveMoveYXYX(y(7) x(5) y(8) x(6))
		move(y(10) x(8))
		createVariableMove(y(12) x(7))
		genFastCall(<P: 492> 18)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		moveMoveYXYX(y(11) x(3) y(4) x(4))
		moveMoveYXYX(y(5) x(5) y(6) x(6))
		moveMoveYXYX(y(7) x(7) y(8) x(8))
		moveMoveYXYX(y(9) x(9) y(12) x(10))
		deAllocateL
		genFastCall(<P: 493> 23)
		endDefinition(50754)
lbl(50908)	definition(x(9) 51028 pid('AllR' 9 pos('./cp/Search.oz' 356 2) nil 12) <P: 492> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 51022)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51009 [onScalar(failed 50924) onScalar(succeeded 50928) onRecord(alternatives 1 50943)]))
lbl(50924)	unify(x(8) x(7))
		return
lbl(50928)	getList(x(8))
		unifyVariable(x(2))
		unifyValue(x(7))
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(6) 2)
lbl(50943)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 50973)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 491> 17)
lbl(50973)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 493> 23)
lbl(51009)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(365)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51022)	unify(x(8) x(7))
		return
		endDefinition(50908)
lbl(51028)	definition(x(0) 51107 pid('All' 4 pos('./cp/Search.oz' 371 6) nil 9) <P: 494> [y(183) y(186)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51078)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51078)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51028)
lbl(51107)	definition(x(1) 51186 pid('AllS' 4 pos('./cp/Search.oz' 379 6) nil 9) <P: 495> [y(183) x(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51157)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51157)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51107)
lbl(51186)	definition(x(2) 51265 pid('AllP' 4 pos('./cp/Search.oz' 387 6) nil 9) <P: 496> [y(183) x(8)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(1) 1 51236)
		move(y(3) x(0))
		move(g(1) x(2))
		move(y(2) x(4))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<P: 490> 11)
lbl(51236)	move(y(3) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(1) x(4) y(1) x(5))
		move(g(1) x(6))
		move(y(2) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL4
		genFastCall(<P: 492> 19)
		endDefinition(51186)
lbl(51265)	definition(x(7) 51413 pid('BABNR' 5 pos('./cp/Search.oz' 404 2) nil 8) <P: 497> [y(184) y(185) y(188)])
		testBI('IsFree' [x(0)]#[x(5)] 51407)
		callBI('Space.ask' [x(1)]#[x(5)])
		match(x(5) ht(51394 [onScalar(failed 51281) onScalar(succeeded 51285) onRecord(alternatives 1 51289)]))
lbl(51281)	unify(x(4) x(3))
		return
lbl(51285)	unify(x(4) x(1))
		return
lbl(51289)	allocateL6
		getVariable(x(5))
		callBI('Space.clone' [x(1)]#[x(6)])
		putConstant(1 x(7))
		callBI('Space.commit' [x(1) x(7)]#nil)
		putRecord('#' 2 x(7))
		setConstant(2)
		setValue(x(5))
		callBI('Space.commit' [x(6) x(7)]#nil)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(6) y(4))
		createVariableMove(y(5) x(4))
		genFastCall(<P: 497> 10)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51357)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51357)	testLiteral(y(5) nil 51366)
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(51366)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 497> 11)
lbl(51394)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(416)
		setValue(x(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51407)	getLiteral(nil x(4))
		return
		endDefinition(51265)
lbl(51413)	definition(x(7) 51618 pid('AltCopy' 8 pos('./cp/Search.oz' 422 5) nil 10) <P: 498> [y(188) y(185)])
		testBI('==' [x(1) x(2)]#[x(8)] 51450)
		callBI('Space.commit' [x(3) x(1)]#nil)
		move(x(3) x(1))
		move(x(3) x(2))
		move(x(7) x(8))
		move(x(6) x(7))
		move(x(5) x(6))
		move(x(4) x(5))
		putConstant(nil x(3))
		genFastCall(<P: 499> 19)
lbl(51450)	allocateL9
		callBI('Space.clone' [x(3)]#[x(8)])
		callBI('Space.commit' [x(8) x(1)]#nil)
		putList(x(9))
		setValue(x(1))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		move(x(8) x(1))
		move(y(3) x(2))
		move(x(9) x(3))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		move(y(6) x(7))
		putConstant(1 x(4))
		createVariableMove(y(8) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(8) x(0) y(6) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51549)
		move(y(1) x(0))
		inlinePlus1(x(0) x(8))
		move(y(0) x(0))
		move(x(8) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		moveMoveYXYX(y(6) x(6) y(7) x(7))
		deAllocateL9
		genFastCall(<P: 498> 17)
lbl(51549)	testLiteral(y(8) nil 51558)
		getLiteral(nil y(7))
		deAllocateL9
		return
lbl(51558)	move(y(1) x(1))
		inlinePlus1(x(1) x(3))
		putRecord('#' 2 x(1))
		setValue(x(3))
		setValue(y(2))
		move(y(3) x(2))
		callBI('Space.commit' [x(2) x(1)]#nil)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(8) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		moveMoveYXYX(y(4) x(5) y(5) x(6))
		moveMoveYXYX(y(8) x(7) y(7) x(8))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<P: 499> 19)
		endDefinition(51413)
lbl(51618)	definition(x(7) 51863 pid('Alt' 11 pos('./cp/Search.oz' 440 5) nil 12) <P: 500> [y(188)])
		callBI('Space.commit' [x(3) x(1)]#nil)
		testBI('==' [x(1) x(2)]#[x(11)] 51664)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(11) x(3))
		move(x(6) x(4))
		move(x(7) x(5))
		move(x(8) x(6))
		move(x(9) x(7))
		move(x(10) x(8))
		genFastCall(<P: 499> 19)
lbl(51664)	allocateL(11)
		putList(x(11))
		setValue(x(1))
		setValue(x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		move(x(3) x(1))
		move(y(3) x(2))
		move(x(11) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		moveMoveYXYX(y(7) x(6) y(8) x(7))
		createVariableMove(y(10) x(8))
		genFastCall(<P: 499> 18)
		moveMoveYXYX(y(10) x(0) y(8) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 51783)
		move(y(1) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 462> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(10) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		moveMoveYXYX(y(7) x(8) y(8) x(9))
		move(y(9) x(10))
		deAllocateL
		genFastCall(<P: 500> 23)
lbl(51783)	testLiteral(y(10) nil 51792)
		getLiteral(nil y(9))
		deAllocateL
		return
lbl(51792)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 462> 6)
		move(y(1) x(0))
		inlinePlus1(x(0) x(3))
		putRecord('#' 2 x(0))
		setValue(x(3))
		setValue(y(2))
		move(y(5) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(10) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(4))
		moveMoveYXYX(y(6) x(5) y(7) x(6))
		moveMoveYXYX(y(10) x(7) y(9) x(8))
		putConstant(nil x(3))
		deAllocateL
		genFastCall(<P: 499> 19)
		endDefinition(51618)
lbl(51863)	definition(x(7) 51972 pid('BABR' 9 pos('./cp/Search.oz' 458 5) nil 12) <P: 499> [y(184)])
		testBI('IsFree' [x(0)]#[x(9)] 51966)
		callBI('Space.ask' [x(1)]#[x(9)])
		match(x(9) ht(51953 [onScalar(failed 51879) onScalar(succeeded 51883) onRecord(alternatives 1 51887)]))
lbl(51879)	unify(x(8) x(7))
		return
lbl(51883)	unify(x(8) x(1))
		return
lbl(51887)	getVariable(x(9))
		testBI('==' [x(4) x(5)]#[x(10)] 51917)
		move(x(1) x(3))
		move(x(9) x(2))
		move(x(5) x(4))
		move(x(6) x(5))
		move(x(7) x(6))
		move(x(8) x(7))
		putConstant(1 x(1))
		genFastCall(<P: 498> 17)
lbl(51917)	inlinePlus1(x(4) x(11))
		move(x(2) x(4))
		move(x(9) x(2))
		move(x(7) x(9))
		move(x(5) x(7))
		move(x(3) x(5))
		move(x(1) x(3))
		move(x(8) x(10))
		move(x(6) x(8))
		move(x(11) x(6))
		putConstant(1 x(1))
		genFastCall(<P: 500> 23)
lbl(51953)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(467)
		setValue(x(9))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(51966)	getLiteral(nil x(8))
		return
		endDefinition(51863)
lbl(51972)	definition(x(7) 52051 pid('BestBAB' 5 pos('./cp/Search.oz' 474 2) nil 9) <P: 501> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52023)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 497> 11)
lbl(52023)	move(y(4) x(0))
		move(x(1) x(2))
		moveMoveYXYX(y(2) x(4) y(2) x(5))
		moveMoveYXYX(y(1) x(6) y(3) x(8))
		putConstant(nil x(3))
		putConstant(nil x(7))
		deAllocateL5
		genFastCall(<P: 499> 19)
		endDefinition(51972)
lbl(52051)	definition(x(7) 52127 pid('RestartNR' 5 pos('./cp/Search.oz' 484 2) nil 6) <P: 502> [y(185)])
		testBI('IsFree' [x(0)]#[x(5)] 52121)
		allocateL6
		callBI('Space.clone' [x(1)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 464> 6)
		testLiteral(y(5) nil 52093)
lbl(52088)	unify(y(3) y(2))
		deAllocateL6
		return
lbl(52093)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(5) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<P: 502> 11)
lbl(52121)	getLiteral(nil x(4))
		return
		endDefinition(52051)
lbl(52127)	definition(x(7) 52216 pid('RestartR' 6 pos('./cp/Search.oz' 494 2) nil 7) <P: 503> [y(185)])
		testBI('IsFree' [x(0)]#[x(6)] 52210)
		allocateL7
		callBI('Space.clone' [x(1)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(1) x(2))
		move(y(3) x(5))
		putConstant(nil x(3))
		createVariableMove(y(6) x(6))
		genFastCall(<P: 466> 14)
		testLiteral(y(6) nil 52180)
lbl(52175)	unify(y(4) y(2))
		deAllocateL7
		return
lbl(52180)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 463> 6)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(6) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL7
		genFastCall(<P: 503> 13)
lbl(52210)	getLiteral(nil x(5))
		return
		endDefinition(52127)
lbl(52216)	definition(x(7) 52286 pid('BestRestart' 5 pos('./cp/Search.oz' 504 2) nil 6) <P: 504> [y(183)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 458> 4)
		move(y(0) x(0))
		callBI('Space.new' [x(0)]#[x(1)])
		testNumber(y(2) 1 52267)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(3) x(4))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 502> 11)
lbl(52267)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(nil x(3))
		deAllocateL5
		genFastCall(<P: 503> 13)
		endDefinition(52216)
lbl(52286)	putRecord(best [bab babP babS restart restartP restartS] y(192))
		setVariable(y(208))
		setVariable(x(7))
		setVariable(x(8))
		setVariable(x(9))
		setVariable(x(10))
		setVariable(x(11))
lbl(52302)	definition(x(3) 52346 pid('BestModule.bab' 5 pos('./cp/Search.oz' 516 34) nil 5) <P: 505> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52327)
lbl(52322)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52327)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52302)
lbl(52346)	unify(x(3) y(208))
lbl(52349)	definition(x(3) 52389 pid('BestModule.babP' 5 pos('./cp/Search.oz' 522 13) nil 5) <P: 506> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52374)
lbl(52369)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52374)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52349)
lbl(52389)	unify(x(3) x(7))
lbl(52392)	definition(x(3) 52427 pid('BestModule.babS' 5 pos('./cp/Search.oz' 528 13) nil 5) <P: 507> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 501> 10)
		testLiteral(y(1) nil 52417)
lbl(52412)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52417)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52392)
lbl(52427)	unify(x(3) x(8))
lbl(52430)	definition(x(3) 52474 pid('BestModule.restart' 5 pos('./cp/Search.oz' 535 13) nil 5) <P: 508> [y(186)])
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52455)
lbl(52450)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52455)	getList(y(0))
		unifyVariable(x(0))
		unifyLiteral(nil)
		move(y(1) x(1))
		callBI('Space.merge' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL2
		return
		endDefinition(52430)
lbl(52474)	unify(x(3) x(9))
lbl(52477)	definition(x(3) 52517 pid('BestModule.restartP' 5 pos('./cp/Search.oz' 541 13) nil 5) <P: 509> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52502)
lbl(52497)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52502)	getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 460> 5)
		endDefinition(52477)
lbl(52517)	unify(x(3) x(10))
lbl(52520)	definition(x(3) 52555 pid('BestModule.restartS' 5 pos('./cp/Search.oz' 547 13) nil 5) <P: 510> nil)
		allocateL2
		move(x(4) y(0))
		createVariableMove(y(1) x(4))
		genFastCall(<P: 504> 10)
		testLiteral(y(1) nil 52545)
lbl(52540)	getLiteral(nil y(0))
		deAllocateL2
		return
lbl(52545)	getList(y(0))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL2
		return
		endDefinition(52520)
lbl(52555)	unify(x(3) x(11))
lbl(52558)	definition(x(7) 52626 pid('Recompute' 2 pos('./cp/Search.oz' 559 2) nil 4) <P: 511> [y(179) y(185) y(188)])
		shallowGuard(52613)
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(52572)	shallowThen
		testBI('IsSpace' [x(2)]#[x(0)] 52584)
		callBI('Space.clone' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(52584)	allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genFastCall(<P: 511> 4)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(0) x(1))
		callBI('Space.commit' [x(1) x(0)]#nil)
		deAllocateL2
		return
lbl(52613)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(559)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(52558)
lbl(52626)	putRecord('attr' [backtrack cur isStopped prev rd sol stack] x(7))
		setConstant(false)
		setConstant(<U: ooFreeFlag>)
		setConstant(false)
		setConstant(nil)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		setConstant(nil)
		putRecord('feat' [manager mrd order] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(52654)	definition(x(8) 52714 pid('ReClass,init/fast' 3 pos('./cp/Search.oz' 572 5) nil 4) <P: 512> [y(183)])
		callBI('Space.new' [x(0)]#[x(3)])
		inlineAssign(cur x(3) cache)
		inlineAssign(rd x(2) cache)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		putConstant(false x(0))
		inlineAssign(backtrack x(0) cache)
		getSelf(x(0))
		inlineDot(x(0) mrd x(3) cache)
		unify(x(3) x(2))
		getSelf(x(0))
		inlineDot(x(0) order x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(52654)
lbl(52714)	definition(x(9) 52755 pid('ReClass,init/slow' 1 pos('./cp/Search.oz' 572 5) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 512> 7)
		endDefinition(52714)
lbl(52755)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(52765)	definition(x(8) 52782 pid('ReClass,stop/fast' 0 pos('./cp/Search.oz' 581 5) nil 1) <P: 513> nil)
		putConstant(true x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52765)
lbl(52782)	definition(x(9) 52796 pid('ReClass,stop/slow' 1 pos('./cp/Search.oz' 581 5) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 513> 1)
		endDefinition(52782)
lbl(52796)	putRecord('#' [1 2 fast] x(11))
		setConstant(stop)
		setValue(x(9))
		setValue(x(8))
lbl(52806)	definition(x(8) 52823 pid('ReClass,resume/fast' 0 pos('./cp/Search.oz' 585 5) nil 1) <P: 514> nil)
		putConstant(false x(0))
		inlineAssign(isStopped x(0) cache)
		return
		endDefinition(52806)
lbl(52823)	definition(x(9) 52837 pid('ReClass,resume/slow' 1 pos('./cp/Search.oz' 585 5) nil 1) unit nil)
		getLiteral(resume x(0))
		genFastCall(<P: 514> 1)
		endDefinition(52823)
lbl(52837)	putRecord('#' [1 2 fast] x(12))
		setConstant(resume)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(209))
lbl(52849)	definition(x(8) 52905 pid('ReClass,last/fast' 1 pos('./cp/Search.oz' 589 5) nil 3) <P: 515> [y(209)])
		allocateL2
		move(x(0) y(0))
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(next x(2) 1 cache)
		match(y(1) ht(52888 [onScalar(stopped 52873) onScalar(nil 52878)]))
lbl(52873)	getLiteral(stopped y(0))
		deAllocateL2
		return
lbl(52878)	inlineAt(prev x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(52888)	move(y(1) x(0))
		inlineAssign(prev x(0) cache)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true last true 1) 0)
		endDefinition(52849)
lbl(52905)	definition(x(9) 52931 pid('ReClass,last/slow' 1 pos('./cp/Search.oz' 589 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 515> 3)
		endDefinition(52905)
lbl(52931)	putRecord('#' [1 2 fast] x(13))
		setConstant(last)
		setValue(x(9))
		setValue(x(8))
lbl(52941)	definition(x(8) 52998 pid('ReClass,next/fast' 1 pos('./cp/Search.oz' 597 5) nil 3) <P: 516> [y(209)])
		allocateL1
		inlineAt(backtrack x(1) cache)
		move(x(0) y(0))
		testBool(x(1) 52984 52973)
		genCall(gci(g(0) true backtrack false 0) 0)
		putConstant(false x(1))
		inlineAssign(backtrack x(1) cache)
		branch(52984)
lbl(52973)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(598)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(52984)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(explore x(2) 1 cache)
		endDefinition(52941)
lbl(52998)	definition(x(9) 53024 pid('ReClass,next/slow' 1 pos('./cp/Search.oz' 597 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 516> 3)
		endDefinition(52998)
lbl(53024)	putRecord('#' [1 2 fast] x(14))
		setConstant(next)
		setValue(x(9))
		setValue(x(8))
lbl(53034)	definition(x(8) 53158 pid('ReClass,push/fast' 1 pos('./cp/Search.oz' 606 5) nil 7) <P: 517> [y(185)])
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAt(rd x(2) cache)
		testBI('==' [x(1) x(2)]#[x(3)] 53111)
		putConstant(1 x(1))
		inlineAssign(rd x(1) cache)
		inlineAt(sol x(1) cache)
		inlineAt(cur x(2) cache)
		callBI('Space.clone' [x(2)]#[x(3)])
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(5))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(6))
		setValue(x(3))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		inlineAssign(stack x(4) cache)
		return
lbl(53111)	inlineAt(rd x(1) cache)
		inlinePlus1(x(1) x(2))
		inlineAssign(rd x(2) cache)
		inlineAt(sol x(1) cache)
		inlineAt(stack x(2) cache)
		putRecord('#' 3 x(4))
		setConstant(1)
		setValue(x(0))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(x(2))
		inlineAssign(stack x(3) cache)
		return
		endDefinition(53034)
lbl(53158)	definition(x(9) 53184 pid('ReClass,push/slow' 1 pos('./cp/Search.oz' 606 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 517> 3)
		endDefinition(53158)
lbl(53184)	putRecord('#' [1 2 fast] x(15))
		setConstant(push)
		setValue(x(9))
		setValue(x(8))
lbl(53194)	definition(x(8) 53491 pid('ReClass,backtrack/fast' 0 pos('./cp/Search.oz' 616 5) nil 7) <P: 518> [y(209) y(179) y(188)])
		inlineAt(stack x(0) cache)
		match(x(0) ht(53476 [onScalar(nil 53208) onRecord('|' 2 53217)]))
lbl(53208)	putConstant(false x(0))
		inlineAssign(cur x(0) cache)
		return
lbl(53217)	getVarVar(x(0) x(1))
		testRecord(x(0) '#' 3 53468)
lbl(53225)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testBI('==' [x(0) x(2)]#[x(4)] 53255)
		inlineAssign(stack x(1) cache)
		inlineAt(rd x(0) cache)
		inlineMinus1(x(0) x(1))
		inlineAssign(rd x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53255)	allocateL4
		inlinePlus1(x(0) x(4))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		testBI('==' [x(2) x(4)]#[x(6)] 53337)
lbl(53279)	testBI('IsSpace' [x(0)]#[x(6)] 53337)
lbl(53283)	callBI('Space.commit' [x(0) x(2)]#nil)
		inlineAssign(stack x(5) cache)
		getSelf(x(1))
		inlineDot(x(1) mrd x(1) cache)
		inlineAssign(rd x(1) cache)
		inlineAssign(cur x(0) cache)
		inlineAt(sol x(1) cache)
		testBI('==' [x(1) x(3)]#[x(2)] 53320)
		deAllocateL4
		return
lbl(53320)	getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		deAllocateL4
		genFastCall(<P: 463> 7)
lbl(53337)	inlineAt(sol x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 53391)
		putRecord('#' 3 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(2))
		putList(x(2))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(stack x(2) cache)
		inlineAt(stack x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 511> 4)
		move(y(0) x(0))
		inlineAssign(cur x(0) cache)
		deAllocateL4
		return
lbl(53391)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 511> 4)
		move(y(2) x(0))
		inlineAssign(cur x(0) cache)
		inlineAt(cur x(0) cache)
		putRecord('#' 2 x(1))
		setValue(y(3))
		setValue(y(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		inlineAt(cur x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) order x(1) cache)
		inlineAt(sol x(2) cache)
		genFastCall(<P: 463> 6)
		getSelf(x(0))
		inlineDot(x(0) mrd x(0) cache)
		inlineAssign(rd x(0) cache)
		move(y(0) x(0))
		inlineAssign(stack x(0) cache)
		deAllocateL4
		return
lbl(53468)	inlineAssign(stack x(1) cache)
		genCall(gci(g(0) true backtrack true 0) 0)
lbl(53476)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(646)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(53194)
lbl(53491)	definition(x(9) 53505 pid('ReClass,backtrack/slow' 1 pos('./cp/Search.oz' 616 5) nil 1) unit nil)
		getLiteral(backtrack x(0))
		genFastCall(<P: 518> 1)
		endDefinition(53491)
lbl(53505)	putRecord('#' [1 2 fast] x(16))
		setConstant(backtrack)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 7 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		moveMoveXYXY(x(0) y(232) x(1) y(233))
		move(x(2) y(234))
		move(x(8) x(1))
		move(x(7) x(2))
		move(y(209) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('ReClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(235))
lbl(53576)	definition(x(7) 53696 pid('All,explore/fast' 1 pos('./cp/Search.oz' 653 5) nil 3) <P: 519> [y(184) y(235) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53600 53683)
		getLiteral(stopped x(0))
		return
lbl(53600)	testLiteral(x(1) false 53608)
		getLiteral(nil x(0))
		return
lbl(53608)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53670 [onScalar(failed 53614) onScalar(succeeded 53628) onRecord(alternatives 1 53640)]))
lbl(53614)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53628)	unify(x(0) x(1))
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53640)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(1) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53670)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(665)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53683)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(656)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53576)
lbl(53696)	definition(x(8) 53722 pid('All,explore/slow' 1 pos('./cp/Search.oz' 653 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 519> 3)
		endDefinition(53696)
lbl(53722)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(235) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('All' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(209))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		createVariable(y(236))
lbl(53767)	definition(x(7) 53892 pid('Best,explore/fast' 1 pos('./cp/Search.oz' 670 5) nil 3) <P: 520> [y(184) y(236) y(209) y(188)])
		inlineAt(cur x(1) cache)
		inlineAt(isStopped x(2) cache)
		testBool(x(2) 53791 53879)
		getLiteral(stopped x(0))
		return
lbl(53791)	testLiteral(x(1) false 53799)
		getLiteral(nil x(0))
		return
lbl(53799)	callBI('Space.ask' [x(1)]#[x(2)])
		match(x(2) ht(53866 [onScalar(failed 53805) onScalar(succeeded 53819) onRecord(alternatives 1 53836)]))
lbl(53805)	allocateL1
		move(x(0) y(0))
		genCall(gci(g(1) true backtrack false 0) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true explore true 1) 0)
lbl(53819)	unify(x(0) x(1))
		inlineAssign(sol x(0) cache)
		putConstant(true x(0))
		inlineAssign(backtrack x(0) cache)
		return
lbl(53836)	allocateL2
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(2) true push false 1) 0)
		move(y(1) x(0))
		putConstant(1 x(1))
		callBI('Space.commit' [x(0) x(1)]#nil)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true explore true 1) 0)
lbl(53866)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(682)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(53879)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(673)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(53767)
lbl(53892)	definition(x(8) 53918 pid('Best,explore/slow' 1 pos('./cp/Search.oz' 670 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 520> 3)
		endDefinition(53892)
lbl(53918)	putRecord('#' [1 2 fast] x(9))
		setConstant(explore)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		move(y(236) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('Best' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(53949)	definition(x(7) 53958 pid('Dummy' 1 pos('./cp/Search.oz' 687 6) nil 1) <P: 521> nil)
		return
		endDefinition(53949)
lbl(53958)	putList(x(0))
		setValue(y(194))
		setConstant(nil)
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<N: MyAgent> <N: RCD>] x(2))
		setValue(x(7))
		setConstant(1)
lbl(53978)	definition(x(8) 54102 pid('SearchObject,script' 1 pos('./cp/Search.oz' 700 2) nil 5) unit [y(236) y(235)])
		allocateL3
		inlineDot(x(0) 1 x(3) cache)
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54098 x(1))
		inlineAt(<N: RCD> x(1) cache)
		putConstant(rcd x(2))
		callBI('CondSelect' [x(0) x(2) x(1)]#[x(4)])
		move(x(4) y(0))
		createVariable(y(1))
		putConstant(2 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 54054)
		inlineDot(x(0) 2 x(1) cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(2)])
		move(x(2) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
		branch(54081)
lbl(54054)	move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(2))
		putConstant(false x(1))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(1))
lbl(54081)	move(y(1) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<N: RCD> x(0) cache)
		return
lbl(54098)	deAllocateL3
		return
		endDefinition(53978)
lbl(54102)	putList(x(9))
		setConstant(script)
		setValue(x(8))
lbl(54108)	definition(x(8) 54153 pid('SearchObject,Next/fast' 1 pos('./cp/Search.oz' 711 2) nil 2) <P: 522> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54149 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(next y(1) 1 cache)
		return
lbl(54149)	deAllocateL2
		return
		endDefinition(54108)
lbl(54153)	definition(x(10) 54179 pid('SearchObject,Next/slow' 1 pos('./cp/Search.oz' 711 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 522> 3)
		endDefinition(54153)
lbl(54179)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Next>)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(184))
lbl(54191)	definition(x(8) 54238 pid('SearchObject,next/fast' 1 pos('./cp/Search.oz' 715 2) nil 3) <P: 523> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54231)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54231)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54191)
lbl(54238)	definition(x(10) 54264 pid('SearchObject,next/slow' 1 pos('./cp/Search.oz' 715 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 523> 3)
		endDefinition(54238)
lbl(54264)	putRecord('#' [1 2 fast] x(12))
		setConstant(next)
		setValue(x(10))
		setValue(x(8))
lbl(54274)	definition(x(8) 54318 pid('SearchObject,nextS/fast' 1 pos('./cp/Search.oz' 723 2) nil 3) <P: 524> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54311)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54311)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54274)
lbl(54318)	definition(x(10) 54344 pid('SearchObject,nextS/slow' 1 pos('./cp/Search.oz' 723 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 524> 3)
		endDefinition(54318)
lbl(54344)	putRecord('#' [1 2 fast] x(13))
		setConstant(nextS)
		setValue(x(10))
		setValue(x(8))
lbl(54354)	definition(x(8) 54394 pid('SearchObject,nextP/fast' 1 pos('./cp/Search.oz' 731 2) nil 2) <P: 525> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Next> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54387)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54387)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54354)
lbl(54394)	definition(x(10) 54420 pid('SearchObject,nextP/slow' 1 pos('./cp/Search.oz' 731 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 525> 3)
		endDefinition(54394)
lbl(54420)	putRecord('#' [1 2 fast] x(14))
		setConstant(nextP)
		setValue(x(10))
		setValue(x(8))
lbl(54430)	definition(x(8) 54475 pid('SearchObject,Last/fast' 1 pos('./cp/Search.oz' 739 2) nil 2) <P: 526> nil)
		allocateL2
		createVariable(x(1))
		callBI(ooGetLock [x(1)]#nil)
		lockThread(54471 x(1))
		inlineAt(<N: MyAgent> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(resume y(1) 0 cache)
		move(y(0) x(0))
		sendMsg(last y(1) 1 cache)
		return
lbl(54471)	deAllocateL2
		return
		endDefinition(54430)
lbl(54475)	definition(x(10) 54501 pid('SearchObject,Last/slow' 1 pos('./cp/Search.oz' 739 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 526> 3)
		endDefinition(54475)
lbl(54501)	putRecord('#' [1 2 fast] x(15))
		setConstant(<N: Last>)
		setValue(x(10))
		setValue(x(8))
lbl(54511)	definition(x(8) 54558 pid('SearchObject,last/fast' 1 pos('./cp/Search.oz' 743 2) nil 3) <P: 527> [y(184) y(179) y(186) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54551)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		callBI('Space.merge' [x(2)]#[x(0)])
		unify(x(0) x(1))
		deAllocateL2
		return
lbl(54551)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54511)
lbl(54558)	definition(x(10) 54584 pid('SearchObject,last/slow' 1 pos('./cp/Search.oz' 743 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 527> 3)
		endDefinition(54558)
lbl(54584)	putRecord('#' [1 2 fast] x(16))
		setConstant(last)
		setValue(x(10))
		setValue(x(8))
lbl(54594)	definition(x(8) 54638 pid('SearchObject,lastS/fast' 1 pos('./cp/Search.oz' 751 2) nil 3) <P: 528> [y(184) y(179) y(185)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54631)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		callBI('Space.clone' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL2
		return
lbl(54631)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54594)
lbl(54638)	definition(x(10) 54664 pid('SearchObject,lastS/slow' 1 pos('./cp/Search.oz' 751 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 528> 3)
		endDefinition(54638)
lbl(54664)	putRecord('#' [1 2 fast] x(17))
		setConstant(lastS)
		setValue(x(10))
		setValue(x(8))
lbl(54674)	definition(x(8) 54714 pid('SearchObject,lastP/fast' 1 pos('./cp/Search.oz' 759 2) nil 2) <P: 529> [y(184) y(179)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <N: Last> false 1) 0)
		move(y(1) x(0))
		testBI('IsSpace' [x(0)]#[x(1)] 54707)
		getList(y(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		deAllocateL2
		genFastCall(<P: 460> 5)
lbl(54707)	unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(54674)
lbl(54714)	definition(x(10) 54740 pid('SearchObject,lastP/slow' 1 pos('./cp/Search.oz' 759 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<P: 529> 3)
		endDefinition(54714)
lbl(54740)	putRecord('#' [1 2 fast] x(18))
		setConstant(lastP)
		setValue(x(10))
		setValue(x(8))
lbl(54750)	definition(x(8) 54769 pid('SearchObject,stop/fast' 0 pos('./cp/Search.oz' 767 2) nil 1) <P: 530> nil)
		inlineAt(<N: MyAgent> x(0) cache)
		tailSendMsg(stop x(0) 0 cache)
		endDefinition(54750)
lbl(54769)	definition(x(10) 54783 pid('SearchObject,stop/slow' 1 pos('./cp/Search.oz' 767 2) nil 1) unit nil)
		getLiteral(stop x(0))
		genFastCall(<P: 530> 1)
		endDefinition(54769)
lbl(54783)	putRecord('#' [1 2 fast] x(19))
		setConstant(stop)
		setValue(x(10))
		setValue(x(8))
lbl(54793)	definition(x(8) 54830 pid('SearchObject,clear/fast' 0 pos('./cp/Search.oz' 771 2) nil 1) <P: 531> [x(7)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(54827 x(0))
		inlineAt(<N: MyAgent> x(0) cache)
		sendMsg(stop x(0) 0 cache)
		move(g(0) x(0))
		inlineAssign(<N: MyAgent> x(0) cache)
		return
lbl(54827)	return
		endDefinition(54793)
lbl(54830)	definition(x(7) 54844 pid('SearchObject,clear/slow' 1 pos('./cp/Search.oz' 771 2) nil 1) unit nil)
		getLiteral(clear x(0))
		genFastCall(<P: 531> 1)
		endDefinition(54830)
lbl(54844)	putRecord('#' [1 2 fast] x(10))
		setConstant(clear)
		setValue(x(7))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(10))
		move(y(184) x(6))
		putConstant('feat' x(3))
		putConstant('SearchObject' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(54892)	definition(x(4) 54911 pid('SearchOne' 2 pos('./cp/Search.oz' 784 3) nil 4) <P: 532> [y(187)])
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 478> 9)
		endDefinition(54892)
lbl(54911)	definition(x(5) 54930 pid('SearchAll' 2 pos('./cp/Search.oz' 788 3) nil 4) <P: 533> nil)
		move(x(1) x(3))
		putConstant(1 x(1))
		createVariable(x(2))
		genFastCall(<P: 494> 9)
		endDefinition(54911)
lbl(54930)	definition(x(6) 54949 pid('SearchBest' 3 pos('./cp/Search.oz' 792 3) nil 5) <P: 534> [y(208)])
		move(x(2) x(4))
		putConstant(1 x(2))
		createVariable(x(3))
		genFastCall(<P: 505> 11)
		endDefinition(54930)
lbl(54949)	putRecord(base [all best one] x(7))
		setValue(x(5))
		setValue(x(6))
		setValue(x(4))
lbl(54959)	definition(x(2) 55000 pid('' 2 pos('./cp/Search.oz' 802 3) nil 2) <P: 535> [y(232) y(234) y(233) x(7) y(192) y(184) y(100)])
		putConstant(nil x(0))
lbl(54968)	definitionCopy(x(0) 54995 pid('/body' 0 pos('./cp/Search.oz' 802 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4) g(5) g(6)])
		getRecord('export' [all allP allS base best object one] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		unifyValue(g(6))
		unifyValue(g(7))
		return
		endDefinition(54968)
lbl(54995)	tailCall(x(0) 0)
		endDefinition(54959)
lbl(55000)	putRecord(one [bound boundP boundS depth depthP depthS iter iterP iterS lds ldsP ldsS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		setConstant('procedure/4')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord(best [bab babP babS restart restartP restartS] x(4))
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		setConstant('procedure/5')
		putRecord(record 1 x(6))
		setValue(x(4))
		putRecord(base [all best one] x(4))
		setConstant('procedure/2')
		setConstant('procedure/3')
		setConstant('procedure/2')
		putRecord(record 1 x(7))
		setValue(x(4))
		putConstant('procedure/4' x(4))
		putConstant('procedure/4' x(8))
		putConstant('procedure/4' x(9))
		putConstant('class' x(10))
		putRecord('export' [all allP allS base best object one] x(1))
		setValue(x(4))
		setValue(x(8))
		setValue(x(9))
		setValue(x(7))
		setValue(x(6))
		setValue(x(10))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(100) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(100) x(1))
		call(x(2) 2)
lbl(55129)	definition(x(2) 55205 pid('NewTagTest' 2 pos('./op/HtmlTable.oz' 25 3) nil 3) <P: 536> [y(2) y(165)])
		allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 159> 4)
lbl(55145)	definition(x(1) 55162 pid('' 2 pos('./op/HtmlTable.oz' 27 28) nil 2) unit nil)
		getRecord('#' 2 x(1))
		unifyValue(x(0))
		unifyLiteral(unit)
		return
		endDefinition(55145)
lbl(55162)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		putConstant(tags x(0))
		move(y(2) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
lbl(55180)	definition(x(0) 55198 pid('' 2 pos('./op/HtmlTable.oz' 29 6) nil 4) unit [x(2)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(55180)
lbl(55198)	unify(x(0) y(0))
		deAllocateL3
		return
		endDefinition(55129)
lbl(55205)	putRecord(tags 91 x(0))
		setConstant(a)
		setConstant(abbr)
		setConstant(acronym)
		setConstant(address)
		setConstant(applet)
		setConstant(area)
		setConstant(b)
		setConstant(base)
		setConstant(basefont)
		setConstant(bdo)
		setConstant(big)
		setConstant(blockquote)
		setConstant('body')
		setConstant(br)
		setConstant(button)
		setConstant(caption)
		setConstant(center)
		setConstant(cite)
		setConstant(code)
		setConstant(col)
		setConstant(colgroup)
		setConstant(dd)
		setConstant(del)
		setConstant(dfn)
		setConstant(dir)
		setConstant('div')
		setConstant(dl)
		setConstant(dt)
		setConstant(em)
		setConstant(fieldset)
		setConstant(font)
		setConstant(form)
		setConstant(frame)
		setConstant(frameset)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(hr)
		setConstant(html)
		setConstant(i)
		setConstant(iframe)
		setConstant(img)
		setConstant(input)
		setConstant(ins)
		setConstant(isindex)
		setConstant(kbd)
		setConstant(label)
		setConstant(legend)
		setConstant(li)
		setConstant(link)
		setConstant(map)
		setConstant(menu)
		setConstant(meta)
		setConstant(noframes)
		setConstant(noscript)
		setConstant(object)
		setConstant(ol)
		setConstant(optgroup)
		setConstant(option)
		setConstant(p)
		setConstant(param)
		setConstant(pre)
		setConstant(q)
		setConstant(s)
		setConstant(samp)
		setConstant(script)
		setConstant(select)
		setConstant(small)
		setConstant(span)
		setConstant(strike)
		setConstant(strong)
		setConstant(style)
		setConstant(sub)
		setConstant(sup)
		setConstant(table)
		setConstant(tbody)
		setConstant(td)
		setConstant(textarea)
		setConstant(tfoot)
		setConstant(th)
		setConstant(thead)
		setConstant(title)
		setConstant(tr)
		setConstant(tt)
		setConstant(u)
		setConstant(ul)
		setConstant(var)
		createVariableMove(y(184) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 13 x(0))
		setConstant(area)
		setConstant(base)
		setConstant(basefont)
		setConstant(br)
		setConstant(col)
		setConstant(frame)
		setConstant(hr)
		setConstant(img)
		setConstant(input)
		setConstant(isindex)
		setConstant(link)
		setConstant(meta)
		setConstant(param)
		createVariableMove(y(185) x(1))
		genFastCall(<P: 536> 4)
		putRecord(tags 19 x(0))
		setConstant(blockquote)
		setConstant('body')
		setConstant(center)
		setConstant(h1)
		setConstant(h2)
		setConstant(h3)
		setConstant(h4)
		setConstant(h5)
		setConstant(h6)
		setConstant(head)
		setConstant(html)
		setConstant(map)
		setConstant(menu)
		setConstant(p)
		setConstant(pre)
		setConstant(table)
		setConstant(td)
		setConstant(th)
		setConstant(title)
		createVariableMove(y(186) x(1))
		genFastCall(<P: 536> 4)
lbl(55481)	definition(x(4) 55538 pid('GetOptions' 4 pos('./op/Open.oz' 27 3) nil 7) <P: 537> nil)
		match(x(0) ht(55523 [onScalar(nil 55490) onRecord('|' 2 55497)]))
lbl(55490)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(55497)	getVarVar(x(4) x(5))
		testBI('IsInt' [x(4)]#[x(6)] 55516)
		inlinePlus1(x(1) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 537> 9)
lbl(55516)	unify(x(2) x(1))
		unify(x(0) x(3))
		return
lbl(55523)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(33)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55481)
lbl(55538)	definition(x(4) 55600 pid('BuildOptions' 3 pos('./op/Open.oz' 36 3) nil 6) <P: 538> nil)
		match(x(0) ht(55585 [onScalar(nil 55547) onRecord('|' 2 55551)]))
lbl(55547)	getLiteral('' x(2))
		return
lbl(55551)	getVarVar(x(0) x(3))
		getRecord('#' 6 x(2))
		unifyLiteral(' ')
		unifyValue(x(0))
		unifyLiteral('="')
		unifyVariable(x(2))
		unifyLiteral('"')
		unifyVariable(x(4))
		callBI('.' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		move(x(3) x(0))
		move(x(4) x(2))
		genFastCall(<P: 538> 7)
lbl(55585)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(55538)
lbl(55600)	putList(x(3))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(2))
		setConstant('S_IXGRP')
		setValue(x(3))
		putList(x(1))
		setConstant('S_IXUSR')
		setValue(x(2))
		putList(x(7))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(6))
		setConstant('S_IRGRP')
		setValue(x(7))
		putList(x(5))
		setConstant('S_IRUSR')
		setValue(x(6))
		putList(x(10))
		setConstant('S_IWOTH')
		setConstant(nil)
		putList(x(9))
		setConstant('S_IWGRP')
		setValue(x(10))
		putList(x(8))
		setConstant('S_IWUSR')
		setValue(x(9))
		putRecord(access [execute read write] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(8))
		putList(x(12))
		setConstant('S_IXGRP')
		setConstant(nil)
		putList(x(13))
		setConstant('S_IRGRP')
		setConstant(nil)
		putList(x(14))
		setConstant('S_IWGRP')
		setConstant(nil)
		putRecord(access [execute read write] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(16))
		setConstant('S_IXOTH')
		setConstant(nil)
		putList(x(17))
		setConstant('S_IROTH')
		setConstant(nil)
		putList(x(18))
		setConstant('S_IWOTH')
		setConstant(nil)
		putRecord(access [execute read write] x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(20))
		setConstant('S_IXUSR')
		setConstant(nil)
		putList(x(21))
		setConstant('S_IRUSR')
		setConstant(nil)
		putList(x(22))
		setConstant('S_IWUSR')
		setConstant(nil)
		putRecord(access [execute read write] x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		putRecord(map [all group others owner] x(4))
		setValue(x(0))
		setValue(x(11))
		setValue(x(15))
		setValue(x(19))
lbl(55760)	definition(x(5) 55858 pid('ModeToOS' 2 pos('./op/Open.oz' 77 6) nil 5) <P: 539> [y(159) x(4)])
lbl(55766)	definition(x(4) 55844 pid('' 4 pos('./op/Open.oz' 79 3) nil 5) unit [g(1)])
lbl(55772)	definition(x(4) 55830 pid('' 3 pos('./op/Open.oz' 81 7) nil 7) unit [g(0) x(0)])
		testLiteral(x(0) false 55786)
		getLiteral(false x(2))
		return
lbl(55786)	allocateL1
		move(x(2) y(0))
		move(g(0) x(3))
		move(g(1) x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 55823)
lbl(55800)	callBI('.' [x(3) x(4)]#[x(5)])
		testBI('HasFeature' [x(5) x(1)]#[x(6)] 55823)
lbl(55807)	callBI('.' [x(3) x(4)]#[x(5)])
		callBI('.' [x(5) x(1)]#[x(6)])
		move(x(0) x(1))
		move(x(6) x(0))
		deAllocateL1
		genFastCall(<P: 21> 7)
lbl(55823)	getLiteral(false y(0))
		deAllocateL1
		return
		endDefinition(55772)
lbl(55830)	move(x(2) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(55766)
lbl(55844)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 173> 9)
		endDefinition(55760)
lbl(55858)	putRecord(map [append create exclude truncate] x(4))
		setConstant('O_APPEND')
		setConstant('O_CREAT')
		setConstant('O_EXCL')
		setConstant('O_TRUNC')
lbl(55870)	definition(x(5) 56054 pid('FlagsToOS' 2 pos('./op/Open.oz' 100 6) nil 4) <P: 540> [x(4)])
		allocateL5
lbl(55877)	definition(x(2) 55940 pid('' 3 pos('./op/Open.oz' 102 3) nil 5) unit [g(0)])
		testLiteral(x(0) false 55891)
		getLiteral(false x(2))
		return
lbl(55891)	allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) read 55906)
lbl(55901)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(55906)	testLiteral(x(1) write 55912)
		branch(55901)
lbl(55912)	move(g(0) x(3))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 55933)
		getList(y(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		callBI('.' [x(3) x(1)]#[x(0)])
		unify(x(0) x(2))
		deAllocateL2
		return
lbl(55933)	getLiteral(false y(1))
		deAllocateL2
		return
		endDefinition(55877)
lbl(55940)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(1))
		putConstant(read x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		testBool(y(3) 55986 56023)
lbl(55965)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 55986 56023)
lbl(55981)	getLiteral('O_RDWR' y(4))
		branch(56034)
lbl(55986)	move(y(0) x(1))
		putConstant(write x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 56007 56012)
		getLiteral('O_WRONLY' y(4))
		branch(56034)
lbl(56007)	getLiteral('O_RDONLY' y(4))
		branch(56034)
lbl(56012)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(111)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56023)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(56034)	putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(55870)
lbl(56054)	putConstant(4096 x(4))
		putConstant(1024 x(5))
		putConstant(500 x(6))
lbl(56063)	definition(x(2) 63109 pid('' 2 pos('./op/Open.oz' 120 3) nil 4) <P: 541> [y(228) y(194) x(4) x(5) x(6) y(184) y(185) y(186)])
		putList(x(2))
		setPredicateRef(<Q: 542>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 543>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 544>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 545>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 546>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 547>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 548>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 549>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 550>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 551>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 552>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 553>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 554>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 555>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 556>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 557>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 558>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 559>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 560>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 561>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 562>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 563>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 564>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 565>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 566>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 567>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 568>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 569>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PID>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 570>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: WriteTagBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 571>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 572>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 573>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 574>)
		setValue(x(3))
lbl(56279)	definitionCopy(x(2) 63104 pid('/body' 0 pos('./op/Open.oz' 120 3) [once] 21) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL8
		move(g(0) x(0))
		inlineDot(x(0) 'OS' x(1) cache)
		inlineDot(x(0) 'Error' x(2) cache)
		inlineDot(x(0) 'ErrorRegistry' x(3) cache)
		inlineDot(x(0) 'Resolve' x(4) cache)
lbl(56313)	definition(x(7) 56347 pid('RaiseClosed' 2 pos('./op/Open.oz' 166 6) nil 3) <Q: 542> [g(1)])
		allocateL1
		putRecord(open 3 x(2))
		setConstant(alreadyClosed)
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(56313)
lbl(56347)	definition(x(7) 56426 pid('DoWrite' 4 pos('./op/Open.oz' 173 6) nil 6) <Q: 543> [x(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 56410)
lbl(56382)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 543> 9)
lbl(56410)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(56347)
lbl(56426)	putList(x(7))
		setConstant(0)
		setConstant(nil)
		putList(x(8))
		setValue(g(2))
		setConstant(nil)
		putList(x(9))
		setConstant(native)
		setConstant(nil)
		putRecord('attr' [<N: AtEnd> <N: Buff> <N: Last> <N: ReadDesc> <N: WriteDesc>] x(10))
		setConstant(false)
		setConstant(nil)
		setValue(x(7))
		setConstant(false)
		setConstant(false)
		putRecord('feat' [<N: ReadLock> <N: WriteLock>] x(7))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(56466)	definition(x(11) 56543 pid('DescClass,InitLocks/fast' 1 pos('./op/Open.oz' 193 2) nil 3) <Q: 544> [g(1)])
		allocateL1
		move(x(0) y(0))
		exHandler(56510)
		testRecord(x(0) 'failure' [debug] 56507)
lbl(56483)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(alreadyInitialized)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(56507)	callBI('Exception.raise' [x(0)]#nil)
lbl(56510)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		popEx
		deAllocateL1
		return
		endDefinition(56466)
lbl(56543)	definition(x(12) 56569 pid('DescClass,InitLocks/slow' 1 pos('./op/Open.oz' 193 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 544> 3)
		endDefinition(56543)
lbl(56569)	putRecord('#' [1 2 fast] x(13))
		setConstant(<N: InitLocks>)
		setValue(x(12))
		setValue(x(11))
		createVariable(y(0))
lbl(56581)	definition(x(11) 56627 pid('DescClass,dOpen/fast' 2 pos('./op/Open.oz' 203 2) nil 3) <Q: 545> [y(0)])
		allocateL2
		putRecord(dOpen 2 x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <N: InitLocks> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
		endDefinition(56581)
lbl(56627)	definition(x(12) 56662 pid('DescClass,dOpen/slow' 1 pos('./op/Open.oz' 203 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 545> 5)
		endDefinition(56627)
lbl(56662)	putRecord('#' [1 2 fast] x(14))
		setConstant(dOpen)
		setValue(x(12))
		setValue(x(11))
lbl(56672)	definition(x(11) 56721 pid('DescClass,getDesc/fast' 2 pos('./op/Open.oz' 209 2) nil 3) <Q: 546> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(56718 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(56717 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		unify(x(0) x(1))
		return
lbl(56717)	return
lbl(56718)	return
		endDefinition(56672)
lbl(56721)	definition(x(12) 56756 pid('DescClass,getDesc/slow' 1 pos('./op/Open.oz' 209 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 546> 5)
		endDefinition(56721)
lbl(56756)	putRecord('#' [1 2 fast] x(15))
		setConstant(getDesc)
		setValue(x(12))
		setValue(x(11))
lbl(56766)	definition(x(11) 56879 pid('DescClass,CloseDescs/fast' 0 pos('./op/Open.oz' 218 2) nil 4) <Q: 547> [x(1)])
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 56876)
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) deSelect x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 56858)
lbl(56828)	move(g(0) x(0))
		inlineDot(x(0) deSelect x(2) cache)
		move(y(1) x(0))
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) close x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
lbl(56858)	putConstant(true x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		putConstant(true x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL2
		return
lbl(56876)	return
		endDefinition(56766)
lbl(56879)	definition(x(12) 56893 pid('DescClass,CloseDescs/slow' 1 pos('./op/Open.oz' 218 2) nil 1) unit nil)
		getLiteral(<N: CloseDescs> x(0))
		genFastCall(<Q: 547> 1)
		endDefinition(56879)
lbl(56893)	putRecord('#' [1 2 fast] x(16))
		setConstant(<N: CloseDescs>)
		setValue(x(12))
		setValue(x(11))
lbl(56903)	definition(x(11) 56939 pid('DescClass,close/fast' 0 pos('./op/Open.oz' 232 2) nil 1) <Q: 548> [y(0)])
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(56936 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(56935 x(0))
		genCall(gci(g(0) true <N: CloseDescs> false 0) 0)
		return
lbl(56935)	return
lbl(56936)	return
		endDefinition(56903)
lbl(56939)	definition(x(12) 56953 pid('DescClass,close/slow' 1 pos('./op/Open.oz' 232 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 548> 1)
		endDefinition(56939)
lbl(56953)	putRecord('#' [1 2 fast] x(17))
		setConstant(close)
		setValue(x(12))
		setValue(x(11))
		putRecord('#' 5 x(11))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(8) x(0))
		move(x(11) x(1))
		move(x(10) x(2))
		move(x(7) x(3))
		move(x(9) x(4))
		move(y(0) x(6))
		putConstant('DescClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(57011)	definition(x(7) 57089 pid('DoReadAll' 5 pos('./op/Open.oz' 247 2) nil 7) <Q: 549> [y(1) g(3)])
		allocateL6
		move(g(0) x(5))
		inlineDot(x(5) read x(6) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		call(x(6) 5)
		testNumber(y(5) 0 57064)
lbl(57056)	unify(y(4) y(1))
		unify(y(2) y(3))
		deAllocateL6
		return
lbl(57064)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 549> 11)
		endDefinition(57011)
lbl(57089)	definition(x(7) 57168 pid('DoWrite' 4 pos('./op/Open.oz' 256 2) nil 6) <Q: 550> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) write x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(2))
		call(x(5) 3)
		testRecord(y(3) suspend 3 57152)
lbl(57124)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 550> 9)
lbl(57152)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(57089)
lbl(57168)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [flags mode name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57186)	definition(x(8) 57640 pid('File,init' 1 pos('./op/Open.oz' 268 5) nil 5) unit [x(7) y(0) g(1) y(1) y(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(flags x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57225)
		inlineDot(x(0) flags x(1) cache)
		unify(x(1) y(1))
		branch(57231)
lbl(57225)	getList(y(1))
		unifyLiteral(read)
		unifyLiteral(nil)
lbl(57231)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(mode x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57254)
		inlineDot(x(0) mode x(1) cache)
		unify(x(1) y(2))
		branch(57274)
lbl(57254)	putList(x(1))
		setConstant(read)
		setConstant(nil)
		putList(x(2))
		setConstant(write)
		setConstant(nil)
		getRecord(mode [all owner] y(2))
		unifyValue(x(1))
		unifyValue(x(2))
lbl(57274)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57297)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(57300)
lbl(57297)	getLiteral(<N: NoArg> y(3))
lbl(57300)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57323)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(57326)
lbl(57323)	getLiteral(<N: NoArg> y(4))
lbl(57326)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 540> 4)
		testLiteral(y(5) false 57369)
lbl(57345)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalFlags)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57369)	move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 539> 4)
		testLiteral(y(1) false 57406)
lbl(57382)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(illegalModes)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57406)	testLiteral(y(3) <N: NoArg> 57438)
lbl(57410)	testLiteral(y(4) <N: NoArg> 57438)
lbl(57414)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(nameOrUrl)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57438)	testLiteral(y(3) <N: NoArg> 57632)
lbl(57442)	createVariable(y(2))
		match(y(3) ht(57595 [onScalar(stdin 57447) onScalar(stdout 57467) onScalar(stderr 57487) onScalar(<N: NoArg> 57507)]))
lbl(57447)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDIN_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57467)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDOUT_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57487)	move(g(3) x(0))
		inlineDot(x(0) fileDesc x(2) cache)
		move(y(2) x(1))
		putConstant('STDERR_FILENO' x(0))
		call(x(2) 2)
		branch(57617)
lbl(57507)	move(y(5) x(1))
		putConstant('O_RDWR' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57547 57584)
lbl(57523)	getSelf(x(2))
		putRecord(open 3 x(0))
		setConstant(urlIsReadOnly)
		setValue(x(2))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 266> 4)
		move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(57547)	move(y(5) x(1))
		putConstant('O_WRONLY' x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 57565 57584)
		branch(57523)
lbl(57565)	move(g(4) x(0))
		inlineDot(x(0) open x(2) cache)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		call(x(2) 2)
		branch(57617)
lbl(57584)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(297)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(57595)	move(g(3) x(0))
		inlineDot(x(0) open x(4) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		call(x(4) 4)
lbl(57617)	move(y(2) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
lbl(57632)	testLiteral(y(4) <N: NoArg> 57414)
lbl(57636)	branch(57442)
		endDefinition(57186)
lbl(57640)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		putRecord(messagePattern [len list size tail] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(57658)	definition(x(9) 57854 pid('File,read' 1 pos('./op/Open.oz' 316 5) nil 6) unit [x(8) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 57706)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(57709)
lbl(57706)	getLiteral(nil y(2))
lbl(57709)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57730)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(57730)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 57753)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(57756)
lbl(57753)	getNumber(1024 y(4))
lbl(57756)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(57850 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(57849 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 57831)
		testLiteral(y(4) all 57807)
lbl(57791)	moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(3) x(4))
		putConstant(0 x(3))
		genFastCall(<Q: 549> 10)
		branch(57848)
lbl(57807)	move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		call(x(5) 5)
		branch(57848)
lbl(57831)	putRecord(read [len list size tail] x(1))
		setValue(y(3))
		setValue(y(1))
		setValue(y(4))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57848)	return
lbl(57849)	return
lbl(57850)	deAllocateL5
		return
		endDefinition(57658)
lbl(57854)	putList(x(8))
		setConstant(read)
		setValue(x(9))
lbl(57860)	definition(x(9) 57932 pid('File,write/fast' [len vs] pos('./op/Open.oz' 332 5) nil 4) <Q: 551> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(57929 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(57928 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 57911)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 550> 8)
		branch(57927)
lbl(57911)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(57927)	return
lbl(57928)	return
lbl(57929)	return
		endDefinition(57860)
lbl(57932)	putRecord(messagePattern [len vs] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(57940)	definition(x(11) 57995 pid('File,write/slow' 1 pos('./op/Open.oz' 332 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 57977)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(57977)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 551> 5)
		endDefinition(57940)
lbl(57995)	putRecord(write [len vs] x(10))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(write)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58015)	definition(x(9) 58140 pid('File,seek/fast' [offset whence] pos('./op/Open.oz' 342 5) nil 6) <Q: 552> [y(1)])
		allocateL4
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(58136 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58135 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 58118)
		move(g(0) x(3))
		inlineDot(x(3) lSeek x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		createVariable(y(3))
		match(x(1) ht(58090 [onScalar(set 58075) onScalar(current 58080) onScalar('end' 58085)]))
lbl(58075)	getLiteral('SEEK_SET' y(3))
		branch(58103)
lbl(58080)	getLiteral('SEEK_CUR' y(3))
		branch(58103)
lbl(58085)	getLiteral('SEEK_END' y(3))
		branch(58103)
lbl(58090)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(350)
		setValue(x(1))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(58103)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		call(y(2) 4)
		branch(58134)
lbl(58118)	putRecord(seek [offset whence] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58134)	return
lbl(58135)	return
lbl(58136)	deAllocateL4
		return
		endDefinition(58015)
lbl(58140)	putRecord(messagePattern [offset whence] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(58148)	definition(x(11) 58227 pid('File,seek/slow' 1 pos('./op/Open.oz' 342 5) nil 3) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(offset x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58187)
		inlineDot(x(0) offset x(1) cache)
		unify(x(1) y(1))
		branch(58190)
lbl(58187)	getNumber(0 y(1))
lbl(58190)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(whence x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 58213)
		inlineDot(x(0) whence x(1) cache)
		unify(x(1) y(2))
		branch(58216)
lbl(58213)	getLiteral(set y(2))
lbl(58216)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 552> 5)
		endDefinition(58148)
lbl(58227)	putRecord(seek [offset whence] x(10))
		setConstant(0)
		setConstant(set)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(seek)
		setValue(x(11))
		setValue(x(10))
		setValue(x(9))
lbl(58247)	definition(x(9) 58326 pid('File,tell/fast' [offset] pos('./op/Open.oz' 357 5) nil 5) <Q: 553> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(58323 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(58322 x(1))
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 58310)
		move(g(0) x(2))
		inlineDot(x(2) lSeek x(4) cache)
		move(x(0) x(3))
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant('SEEK_CUR' x(2))
		call(x(4) 4)
		branch(58321)
lbl(58310)	putRecord(tell [offset] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58321)	return
lbl(58322)	return
lbl(58323)	return
		endDefinition(58247)
lbl(58326)	definition(x(10) 58352 pid('File,tell/slow' 1 pos('./op/Open.oz' 357 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) offset x(0) cache)
		genFastCall(<Q: 553> 3)
		endDefinition(58326)
lbl(58352)	putRecord('#' [1 2 fast] x(11))
		setConstant(tell)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 5 x(1))
		setValue(x(7))
		setValue(x(8))
		setValue(x(12))
		setValue(x(13))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('File' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(messagePattern [len list size tail] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(58412)	definition(x(8) 58576 pid('SockAndPipe,read' 1 pos('./op/Open.oz' 378 2) nil 6) unit [x(7) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58449)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58449)	move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(2))
		createVariable(y(3))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 58481)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(3))
		branch(58484)
lbl(58481)	getLiteral(nil y(3))
lbl(58484)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58507)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(4))
		branch(58510)
lbl(58507)	getNumber(1024 y(4))
lbl(58510)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58572 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 58554)
		move(g(1) x(1))
		inlineDot(x(1) read x(5) cache)
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		moveMoveYXYX(y(3) x(3) y(1) x(4))
		call(x(5) 5)
		branch(58571)
lbl(58554)	putRecord(read [len list size tail] x(1))
		setValue(y(1))
		setValue(y(2))
		setValue(y(4))
		setValue(y(3))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58571)	return
lbl(58572)	deAllocateL5
		return
		endDefinition(58412)
lbl(58576)	putList(x(7))
		setConstant(read)
		setValue(x(8))
lbl(58582)	definition(x(8) 58642 pid('SockAndPipe,write/fast' [len vs] pos('./op/Open.oz' 391 2) nil 4) <Q: 554> nil)
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(58639 x(2))
		inlineAt(<N: WriteDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 58622)
		move(x(0) x(3))
		move(x(2) x(0))
		putConstant(0 x(2))
		genFastCall(<Q: 543> 8)
		branch(58638)
lbl(58622)	putRecord(write [len vs] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(58638)	return
lbl(58639)	return
		endDefinition(58582)
lbl(58642)	putRecord(messagePattern [len vs] x(9))
		setConstant(unit)
		setConstant(unit)
lbl(58650)	definition(x(10) 58705 pid('SockAndPipe,write/slow' 1 pos('./op/Open.oz' 391 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 58687)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(1))
lbl(58687)	move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 554> 5)
		endDefinition(58650)
lbl(58705)	putRecord(write [len vs] x(9))
		setConstant(<U: ooDefaultVar>)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(11))
		setConstant(write)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
lbl(58725)	definition(x(8) 58863 pid('SockAndPipe,flush/fast' [how] pos('./op/Open.oz' 399 2) nil 3) <Q: 555> nil)
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 58792 58850)
lbl(58762)	testBool(y(2) 58792 58850)
lbl(58766)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58790 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58789 x(0))
		return
lbl(58789)	return
lbl(58790)	deAllocateL3
		return
lbl(58792)	testBool(y(1) 58810 58839)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(58808 x(0))
		return
lbl(58808)	deAllocateL3
		return
lbl(58810)	testBool(y(2) 58826 58828)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(58826 x(0))
		return
lbl(58826)	deAllocateL3
		return
lbl(58828)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58839)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(58850)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(403)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(58725)
lbl(58863)	putRecord(messagePattern [how] x(9))
		setConstant(unit)
lbl(58869)	definition(x(10) 58929 pid('SockAndPipe,flush/slow' 1 pos('./op/Open.oz' 399 2) nil 3) unit [x(9)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 58908)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(58920)
lbl(58908)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(58920)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 555> 3)
		endDefinition(58869)
lbl(58929)	putRecord(flush [how] x(9))
		setVariable(x(12))
		putList(x(13))
		setConstant(send)
		setConstant(nil)
		getList(x(12))
		unifyLiteral(receive)
		unifyValue(x(13))
		putRecord('#' [1 2 default fast] x(12))
		setConstant(flush)
		setValue(x(10))
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 3 x(1))
		setValue(x(7))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SockAndPipe' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(58987)	definition(x(7) 59069 pid('DoSend' 4 pos('./op/Open.oz' 418 2) nil 6) <Q: 556> [y(1)])
		allocateL4
		move(g(0) x(4))
		inlineDot(x(4) send x(5) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		call(x(5) 4)
		testRecord(y(3) suspend 3 59053)
lbl(59025)	getVarVar(x(0) x(1))
		getVariable(x(4))
		callBI('Wait' [x(1)]#nil)
		move(y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(4) x(1))
		move(y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 556> 9)
lbl(59053)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(58987)
lbl(59069)	definition(x(7) 59166 pid('DoSendTo' 6 pos('./op/Open.oz' 425 2) nil 8) <Q: 557> [y(1)])
		allocateL6
		move(g(0) x(6))
		inlineDot(x(6) sendTo x(7) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYYX(x(5) y(4) y(1) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		createVariableMove(y(5) x(5))
		call(x(7) 6)
		testRecord(y(5) suspend 3 59150)
lbl(59117)	getVarVar(x(0) x(1))
		getVariable(x(6))
		callBI('Wait' [x(1)]#nil)
		move(y(3) x(1))
		inlinePlus(x(0) x(1) x(4))
		move(y(0) x(0))
		move(x(6) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 557> 13)
lbl(59150)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(4))
		deAllocateL6
		return
		endDefinition(59069)
lbl(59166)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<N: TimeOut>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [protocol time type] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(59188)	definition(x(8) 59373 pid('Socket,init' 1 pos('./op/Open.oz' 438 5) nil 4) unit [x(7) y(0) y(1)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(type x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59227)
		inlineDot(x(0) type x(1) cache)
		unify(x(1) y(1))
		branch(59230)
lbl(59227)	getLiteral(stream y(1))
lbl(59230)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(protocol x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59253)
		inlineDot(x(0) protocol x(1) cache)
		unify(x(1) y(2))
		branch(59256)
lbl(59253)	getLiteral(nil y(2))
lbl(59256)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(time x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59279)
		inlineDot(x(0) time x(1) cache)
		unify(x(1) y(3))
		branch(59282)
lbl(59279)	getNumber(~1 y(3))
lbl(59282)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		move(g(2) x(0))
		inlineDot(x(0) socket x(1) cache)
		move(x(1) y(0))
		putConstant('PF_INET' y(4))
		createVariable(y(5))
		match(y(1) ht(59318 [onScalar(stream 59308) onScalar(datagram 59313)]))
lbl(59308)	getLiteral('SOCK_STREAM' y(5))
		branch(59331)
lbl(59313)	getLiteral('SOCK_DGRAM' y(5))
		branch(59331)
lbl(59318)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(443)
		setValue(y(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(59331)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(1) x(3))
		call(y(0) 4)
		getSelf(x(0))
		inlineDot(x(0) <N: TimeOut> x(1) cache)
		unify(x(1) y(3))
		move(y(1) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL6
		return
		endDefinition(59188)
lbl(59373)	putList(x(7))
		setConstant(init)
		setValue(x(8))
		createVariable(y(6))
lbl(59381)	definition(x(8) 59478 pid('Socket,server' 1 pos('./op/Open.oz' 450 5) nil 3) unit [y(6)])
		allocateL3
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59409)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59409)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59430)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(2))
lbl(59430)	genCall(gci(g(0) true init false 0) 0)
		move(y(0) x(0))
		putConstant(takePort x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59457)
		inlineDot(x(0) takePort x(1) cache)
		move(y(1) x(0))
		genCall(gci(g(0) true bind false [port takePort]) 0)
		branch(59463)
lbl(59457)	move(y(1) x(0))
		genCall(gci(g(0) true bind false [port]) 0)
lbl(59463)	putConstant(1 x(0))
		genCall(gci(g(0) true listen false [backLog]) 0)
		move(y(2) x(0))
		deAllocateL3
		genCall(gci(g(0) true accept true [host]) 0)
		endDefinition(59381)
lbl(59478)	putList(x(9))
		setConstant(server)
		setValue(x(8))
lbl(59484)	definition(x(8) 59510 pid('Socket,client/fast' [host port] pos('./op/Open.oz' 461 5) nil 2) <Q: 558> [y(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true connect true [host port]) 0)
		endDefinition(59484)
lbl(59510)	putRecord(messagePattern [host port] x(10))
		setConstant(unit)
		setConstant(unit)
lbl(59518)	definition(x(11) 59578 pid('Socket,client/slow' 1 pos('./op/Open.oz' 461 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 59557)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(59560)
lbl(59557)	getLiteral(localhost y(1))
lbl(59560)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 558> 5)
		endDefinition(59518)
lbl(59578)	putRecord(client [host port] x(10))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(12))
		setConstant(client)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59598)	definition(x(8) 59674 pid('Socket,listen/fast' [backLog] pos('./op/Open.oz' 466 5) nil 4) <Q: 559> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(59671 x(1))
		getSelf(x(1))
		inlineDot(x(1) <N: WriteLock> x(1) cache)
		lockThread(59670 x(1))
		inlineAt(<N: ReadDesc> x(1) cache)
		testBI('IsInt' [x(1)]#[x(2)] 59658)
		move(g(0) x(2))
		inlineDot(x(2) listen x(3) cache)
		move(x(1) x(4))
		move(x(0) x(1))
		move(x(4) x(0))
		call(x(3) 2)
		branch(59669)
lbl(59658)	putRecord(listen [backLog] x(1))
		setValue(x(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59669)	return
lbl(59670)	return
lbl(59671)	return
		endDefinition(59598)
lbl(59674)	putRecord(messagePattern [backLog] x(10))
		setConstant(unit)
lbl(59680)	definition(x(11) 59731 pid('Socket,listen/slow' 1 pos('./op/Open.oz' 466 5) nil 3) unit [x(10)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(backLog x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59719)
		inlineDot(x(0) backLog x(1) cache)
		unify(x(1) y(1))
		branch(59722)
lbl(59719)	getNumber(5 y(1))
lbl(59722)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 559> 3)
		endDefinition(59680)
lbl(59731)	putRecord(listen [backLog] x(10))
		setConstant(5)
		putRecord('#' [1 2 default fast] x(13))
		setConstant(listen)
		setValue(x(11))
		setValue(x(10))
		setValue(x(8))
lbl(59749)	definition(x(8) 59904 pid('Socket,bind' 1 pos('./op/Open.oz' 476 5) nil 5) unit [y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59777)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(1))
lbl(59777)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(59900 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(59899 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 59890)
		move(y(0) x(1))
		putConstant(takePort x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 59853)
		move(g(0) x(2))
		inlineDot(x(2) bind x(3) cache)
		inlineDot(x(1) takePort x(4) cache)
		move(x(4) x(1))
		call(x(3) 2)
		move(y(0) x(0))
		inlineDot(x(0) takePort x(1) cache)
		unify(x(1) y(1))
		branch(59898)
lbl(59853)	move(g(0) x(1))
		inlineDot(x(1) bind x(2) cache)
		move(x(0) y(0))
		putConstant(0 x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) getSockName x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		call(x(2) 2)
		branch(59898)
lbl(59890)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(59898)	return
lbl(59899)	return
lbl(59900)	deAllocateL2
		return
		endDefinition(59749)
lbl(59904)	putList(x(10))
		setConstant(bind)
		setValue(x(8))
lbl(59910)	definition(x(8) 60157 pid('Socket,accept' 1 pos('./op/Open.oz' 493 5) nil 5) unit [y(1) y(0)])
		allocateL6
		move(x(0) y(0))
		createVariable(y(1))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59938)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
lbl(59938)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 59959)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(2))
lbl(59959)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60153 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60152 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60143)
		getSelf(x(1))
		inlineDot(x(1) <N: TimeOut> x(1) cache)
		move(x(0) y(3))
		createVariable(y(4))
		match(x(1) ht(60006 [onScalar(~1 60012)]))
lbl(60006)	move(y(4) x(2))
		callBI('Alarm' [x(1) x(2)]#nil)
lbl(60012)	createVariable(y(5))
		thread(60036)
		move(g(0) x(0))
		inlineDot(x(0) acceptSelect x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		getLiteral(unit y(5))
		deAllocateL6
		return
lbl(60036)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('WaitOr' [x(0) x(1)]#nil)
		testBI('IsDet' [x(1)]#[x(0)] 60135)
		move(g(0) x(0))
		inlineDot(x(0) accept x(4) cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		putConstant(accepted x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60117)
		inlineDot(x(0) accepted x(1) cache)
		inlineDot(x(0) acceptClass x(2) cache)
		callBI(newObject [x(2)]#[x(0)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveYXYX(y(4) x(0) y(4) x(1))
		sendMsg(dOpen y(1) 2 cache)
		unify(y(1) y(0))
		branch(60151)
lbl(60117)	genCall(gci(g(1) true <N: CloseDescs> false 0) 0)
		move(y(4) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		inlineAssign(<N: WriteDesc> x(0) cache)
		branch(60151)
lbl(60135)	getLiteral(false y(2))
		getLiteral(false y(1))
		branch(60151)
lbl(60143)	move(y(0) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60151)	return
lbl(60152)	return
lbl(60153)	deAllocateL6
		return
		endDefinition(59910)
lbl(60157)	putList(x(11))
		setConstant(accept)
		setValue(x(8))
lbl(60163)	definition(x(8) 60247 pid('Socket,connect/fast' [host port] pos('./op/Open.oz' 525 5) nil 5) <Q: 560> [y(1)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(2) cache)
		lockThread(60244 x(2))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(2) cache)
		lockThread(60243 x(2))
		inlineAt(<N: ReadDesc> x(2) cache)
		testBI('IsInt' [x(2)]#[x(3)] 60226)
		move(g(0) x(3))
		inlineDot(x(3) connect x(4) cache)
		move(x(2) x(5))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(5) x(0))
		call(x(4) 3)
		branch(60242)
lbl(60226)	putRecord(connect [host port] x(2))
		setValue(x(0))
		setValue(x(1))
		move(x(2) x(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60242)	return
lbl(60243)	return
lbl(60244)	return
		endDefinition(60163)
lbl(60247)	putRecord(messagePattern [host port] x(14))
		setConstant(unit)
		setConstant(unit)
lbl(60255)	definition(x(15) 60315 pid('Socket,connect/slow' 1 pos('./op/Open.oz' 525 5) nil 3) unit [x(14)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(host x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 60294)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(1))
		branch(60297)
lbl(60294)	getLiteral(localhost y(1))
lbl(60297)	move(y(0) x(0))
		inlineDot(x(0) port x(1) cache)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 560> 5)
		endDefinition(60255)
lbl(60315)	putRecord(connect [host port] x(14))
		setConstant(localhost)
		setConstant(<U: ooRequiredArg>)
		putRecord('#' [1 2 default fast] x(16))
		setConstant(connect)
		setValue(x(15))
		setValue(x(14))
		setValue(x(8))
		putRecord(messagePattern [host len port vs] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60347)	definition(x(14) 60522 pid('Socket,send' 1 pos('./op/Open.oz' 535 5) nil 6) unit [x(8)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) vs x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(len x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 60393)
		inlineDot(x(0) len x(2) cache)
		unify(x(2) y(2))
lbl(60393)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60416)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(3))
		branch(60419)
lbl(60416)	getLiteral(localhost y(3))
lbl(60419)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60442)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(4))
		branch(60445)
lbl(60442)	getLiteral(<N: Missing> y(4))
lbl(60445)	getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60518 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60500)
		testLiteral(y(4) <N: Missing> 60482)
lbl(60469)	moveMoveYXYX(y(1) x(1) y(2) x(3))
		putConstant(0 x(2))
		genFastCall(<Q: 556> 8)
		branch(60517)
lbl(60482)	moveMoveYXYX(y(1) x(1) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(2) x(5))
		putConstant(0 x(4))
		genFastCall(<Q: 557> 12)
		branch(60517)
lbl(60500)	putRecord(send [host len port vs] x(1))
		setValue(y(3))
		setValue(y(2))
		setValue(y(4))
		setValue(y(1))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60517)	return
lbl(60518)	deAllocateL5
		return
		endDefinition(60347)
lbl(60522)	putList(x(8))
		setConstant(send)
		setValue(x(14))
		putRecord(messagePattern [host len list port size tail] x(14))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(60544)	definition(x(15) 60762 pid('Socket,receive' 1 pos('./op/Open.oz' 546 5) nil 9) unit [x(14) y(1)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) list x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(tail x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 60592)
		inlineDot(x(0) tail x(2) cache)
		unify(x(2) y(2))
		branch(60595)
lbl(60592)	getLiteral(nil y(2))
lbl(60595)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(len x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60616)
		inlineDot(x(0) len x(1) cache)
		unify(x(1) y(3))
lbl(60616)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(host x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60637)
		inlineDot(x(0) host x(1) cache)
		unify(x(1) y(4))
lbl(60637)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(port x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60658)
		inlineDot(x(0) port x(1) cache)
		unify(x(1) y(5))
lbl(60658)	createVariable(y(6))
		move(y(0) x(0))
		putConstant(size x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 60681)
		inlineDot(x(0) size x(1) cache)
		unify(x(1) y(6))
		branch(60684)
lbl(60681)	getNumber(1024 y(6))
lbl(60684)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60758 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60736)
		move(g(1) x(1))
		inlineDot(x(1) receiveFrom x(8) cache)
		moveMoveYXYX(y(6) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(3) x(7))
		putConstant(nil x(2))
		call(x(8) 8)
		branch(60757)
lbl(60736)	putRecord(receive [host len list port size tail] x(1))
		setValue(y(4))
		setValue(y(3))
		setValue(y(1))
		setValue(y(5))
		setValue(y(6))
		setValue(y(2))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60757)	return
lbl(60758)	deAllocateL7
		return
		endDefinition(60544)
lbl(60762)	putList(x(14))
		setConstant(receive)
		setValue(x(15))
lbl(60768)	definition(x(15) 61071 pid('Socket,shutDown/fast' [how] pos('./op/Open.oz' 560 5) nil 4) <Q: 561> [y(1)])
		allocateL3
		moveMoveXYYX(x(0) y(0) y(0) x(1))
		putConstant(receive x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		move(y(0) x(1))
		putConstant(send x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 60926 61058)
lbl(60805)	testBool(y(2) 60926 61058)
lbl(60809)	getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60924 x(0))
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(60923 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		inlineAt(<N: WriteDesc> x(1) cache)
		testBI('IsInt' [x(0)]#[x(2)] 60911)
lbl(60845)	testBI('IsInt' [x(1)]#[x(2)] 60911)
lbl(60849)	testBI('==' [x(0) x(1)]#[x(2)] 60873)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(x(1) x(0))
		putConstant(2 x(1))
		call(x(2) 2)
		branch(60922)
lbl(60873)	move(g(0) x(2))
		inlineDot(x(2) shutDown x(3) cache)
		move(x(1) y(0))
		putConstant(0 x(1))
		call(x(3) 2)
		move(g(0) x(0))
		inlineDot(x(0) shutDown x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(60922)
lbl(60911)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60922)	return
lbl(60923)	return
lbl(60924)	deAllocateL3
		return
lbl(60926)	testBool(y(1) 60981 61047)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(60979 x(0))
		inlineAt(<N: ReadDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 60967)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(0 x(1))
		call(x(2) 2)
		branch(60978)
lbl(60967)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(60978)	return
lbl(60979)	deAllocateL3
		return
lbl(60981)	testBool(y(2) 61034 61036)
		getSelf(x(0))
		inlineDot(x(0) <N: WriteLock> x(0) cache)
		lockThread(61034 x(0))
		inlineAt(<N: WriteDesc> x(0) cache)
		testBI('IsInt' [x(0)]#[x(1)] 61022)
		move(g(0) x(1))
		inlineDot(x(1) shutDown x(2) cache)
		putConstant(1 x(1))
		call(x(2) 2)
		branch(61033)
lbl(61022)	putRecord(shutDown [how] x(1))
		setValue(y(0))
		getSelf(x(0))
		genFastCall(<Q: 542> 4)
lbl(61033)	return
lbl(61034)	deAllocateL3
		return
lbl(61036)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(585)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61047)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(579)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61058)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(60768)
lbl(61071)	putRecord(messagePattern [how] x(17))
		setConstant(unit)
lbl(61077)	definition(x(18) 61137 pid('Socket,shutDown/slow' 1 pos('./op/Open.oz' 560 5) nil 3) unit [x(17)])
		allocateL2
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(how x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 61116)
		inlineDot(x(0) how x(1) cache)
		unify(x(1) y(1))
		branch(61128)
lbl(61116)	putList(x(0))
		setConstant(send)
		setConstant(nil)
		getList(y(1))
		unifyLiteral(receive)
		unifyValue(x(0))
lbl(61128)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 561> 3)
		endDefinition(61077)
lbl(61137)	putRecord(shutDown [how] x(17))
		setVariable(x(19))
		putList(x(20))
		setConstant(send)
		setConstant(nil)
		getList(x(19))
		unifyLiteral(receive)
		unifyValue(x(20))
		putRecord('#' [1 2 default fast] x(19))
		setConstant(shutDown)
		setValue(x(18))
		setValue(x(17))
		setValue(x(15))
		putRecord('#' 10 x(1))
		setValue(x(7))
		setValue(x(9))
		setValue(x(12))
		setValue(x(13))
		setValue(x(10))
		setValue(x(11))
		setValue(x(16))
		setValue(x(8))
		setValue(x(14))
		setValue(x(19))
		move(y(6) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Socket' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(61206)	definition(x(7) 61327 pid('DoReadLine' 5 pos('./op/Open.oz' 604 2) nil 6) <Q: 562> [y(1) g(4)])
		match(x(0) ht(61312 [onScalar(nil 61215) onRecord('|' 2 61285)]))
lbl(61215)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61268)
lbl(61257)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(nil y(3))
		deAllocateL6
		return
lbl(61268)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 562> 11)
lbl(61285)	getVarVar(x(0) x(5))
		testNumber(x(0) 10 61302)
lbl(61292)	unify(x(2) x(5))
		getLiteral(false x(3))
		getLiteral(nil x(4))
		return
lbl(61302)	getListValVar(x(4) x(0) x(4))
		move(x(5) x(0))
		genFastCall(<Q: 562> 11)
lbl(61312)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(615)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61206)
lbl(61327)	definition(x(7) 61434 pid('DoReadOne' 5 pos('./op/Open.oz' 618 2) nil 6) <Q: 563> [y(1) g(4)])
		match(x(0) ht(61419 [onScalar(nil 61336) onRecord('|' 2 61406)]))
lbl(61336)	allocateL6
		move(g(0) x(0))
		inlineDot(x(0) read x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		createVariableMove(y(5) x(4))
		call(x(5) 5)
		testNumber(y(5) 0 61389)
lbl(61378)	getLiteral(nil y(1))
		getLiteral(true y(2))
		getLiteral(false y(3))
		deAllocateL6
		return
lbl(61389)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL6
		genFastCall(<Q: 563> 11)
lbl(61406)	getVarVar(x(0) x(1))
		unify(x(2) x(1))
		getLiteral(false x(3))
		unify(x(0) x(4))
		return
lbl(61419)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(626)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(61327)
lbl(61434)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(61440)	definition(x(7) 61558 pid('Text,getC/fast' 1 pos('./op/Open.oz' 633 5) nil 7) <Q: 564> nil)
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61554 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: Last> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		createVariable(x(6))
		inlineAssign(<N: Last> x(6) cache)
		testBool(x(1) 61512 61542)
		getLiteral(false x(0))
		getLiteral(true x(4))
		getLiteral(nil x(5))
		unify(x(6) x(3))
		branch(61553)
lbl(61512)	inlineAt(<N: ReadDesc> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(6) y(1))
		move(x(2) x(0))
		move(x(5) x(2))
		move(x(4) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 563> 10)
		unify(y(1) y(0))
		branch(61553)
lbl(61542)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61553)	return
lbl(61554)	deAllocateL2
		return
		endDefinition(61440)
lbl(61558)	definition(x(8) 61584 pid('Text,getC/slow' 1 pos('./op/Open.oz' 633 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 564> 3)
		endDefinition(61558)
lbl(61584)	putRecord('#' [1 2 fast] x(9))
		setConstant(getC)
		setValue(x(8))
		setValue(x(7))
lbl(61594)	definition(x(7) 61619 pid('Text,putC/fast' 1 pos('./op/Open.oz' 652 5) nil 4) <Q: 565> nil)
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61594)
lbl(61619)	definition(x(8) 61645 pid('Text,putC/slow' 1 pos('./op/Open.oz' 652 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 565> 3)
		endDefinition(61619)
lbl(61645)	putRecord('#' [1 2 fast] x(10))
		setConstant(putC)
		setValue(x(8))
		setValue(x(7))
lbl(61655)	definition(x(7) 61790 pid('Text,getS/fast' 1 pos('./op/Open.oz' 656 5) nil 6) <Q: 566> nil)
		allocateL3
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(61786 x(1))
		inlineAt(<N: AtEnd> x(1) cache)
		inlineAt(<N: Buff> x(2) cache)
		inlineAt(<N: ReadDesc> x(3) cache)
		createVariable(x(4))
		inlineAssign(<N: AtEnd> x(4) cache)
		createVariable(x(5))
		inlineAssign(<N: Buff> x(5) cache)
		testBool(x(1) 61717 61774)
		getLiteral(true x(4))
		getLiteral(nil x(5))
		getLiteral(false x(0))
		branch(61785)
lbl(61717)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(5) x(2))
		move(y(1) x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 562> 10)
		testBool(y(1) 61758 61763)
		testLiteral(y(2) nil 61753)
lbl(61748)	getLiteral(false y(0))
		branch(61785)
lbl(61753)	unify(y(0) y(2))
		branch(61785)
lbl(61758)	unify(y(0) y(2))
		branch(61785)
lbl(61763)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61774)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(61785)	return
lbl(61786)	deAllocateL3
		return
		endDefinition(61655)
lbl(61790)	definition(x(8) 61816 pid('Text,getS/slow' 1 pos('./op/Open.oz' 656 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 566> 3)
		endDefinition(61790)
lbl(61816)	putRecord('#' [1 2 fast] x(11))
		setConstant(getS)
		setValue(x(8))
		setValue(x(7))
lbl(61826)	definition(x(7) 61853 pid('Text,putS/fast' 1 pos('./op/Open.oz' 678 5) nil 4) <Q: 567> nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setConstant('\n')
		getSelf(x(3))
		move(x(2) x(0))
		tailSendMsg(write x(3) [vs] cache)
		endDefinition(61826)
lbl(61853)	definition(x(8) 61879 pid('Text,putS/slow' 1 pos('./op/Open.oz' 678 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 567> 3)
		endDefinition(61853)
lbl(61879)	putRecord('#' [1 2 fast] x(12))
		setConstant(putS)
		setValue(x(8))
		setValue(x(7))
lbl(61889)	definition(x(7) 61950 pid('Text,unGetC/fast' 0 pos('./op/Open.oz' 682 5) nil 3) <Q: 568> nil)
		getSelf(x(0))
		inlineDot(x(0) <N: ReadLock> x(0) cache)
		lockThread(61947 x(0))
		inlineAt(<N: Last> x(0) cache)
		inlineAt(<N: Buff> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<N: Buff> x(2) cache)
		putList(x(0))
		setConstant(0)
		setConstant(nil)
		inlineAssign(<N: Last> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<N: AtEnd> x(0) cache)
		return
lbl(61947)	return
		endDefinition(61889)
lbl(61950)	definition(x(8) 61964 pid('Text,unGetC/slow' 1 pos('./op/Open.oz' 682 5) nil 1) unit nil)
		getLiteral(unGetC x(0))
		genFastCall(<Q: 568> 1)
		endDefinition(61950)
lbl(61964)	putRecord('#' [1 2 fast] x(13))
		setConstant(unGetC)
		setValue(x(8))
		setValue(x(7))
lbl(61974)	definition(x(7) 62017 pid('Text,atEnd/fast' 1 pos('./op/Open.oz' 690 5) nil 2) <Q: 569> nil)
		getSelf(x(1))
		inlineDot(x(1) <N: ReadLock> x(1) cache)
		lockThread(62014 x(1))
		inlineAt(<N: Buff> x(1) cache)
		testLiteral(x(1) nil 62010)
		inlineAt(<N: AtEnd> x(1) cache)
		unify(x(1) x(0))
		branch(62013)
lbl(62010)	getLiteral(false x(0))
lbl(62013)	return
lbl(62014)	return
		endDefinition(61974)
lbl(62017)	definition(x(8) 62043 pid('Text,atEnd/slow' 1 pos('./op/Open.oz' 690 5) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 569> 3)
		endDefinition(62017)
lbl(62043)	putRecord('#' [1 2 fast] x(14))
		setConstant(atEnd)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Text' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('feat' [<M: PID>] x(3))
		setConstant(<U: ooFreeFlag>)
		putRecord(messagePattern [args cmd 'pid'] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(62109)	definition(x(8) 62246 pid('Pipe,init' 1 pos('./op/Open.oz' 706 2) nil 5) unit [x(7) y(0) y(1)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) cmd x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(args x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 62157)
		inlineDot(x(0) args x(2) cache)
		unify(x(2) y(2))
		branch(62160)
lbl(62157)	getLiteral(nil y(2))
lbl(62160)	createVariable(y(3))
		move(y(0) x(0))
		putConstant('pid' x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 62181)
		inlineDot(x(0) 'pid' x(1) cache)
		unify(x(1) y(3))
lbl(62181)	move(y(0) x(0))
		genCall(gci(g(1) true <N: InitLocks> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(0))
		setVariable(y(4))
		move(g(2) x(0))
		inlineDot(x(0) pipe x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		call(x(4) 4)
		getSelf(x(0))
		inlineDot(x(0) <M: PID> x(1) cache)
		unify(x(1) y(3))
		move(y(0) x(0))
		inlineAssign(<N: ReadDesc> x(0) cache)
		move(y(4) x(0))
		inlineAssign(<N: WriteDesc> x(0) cache)
		deAllocateL5
		return
		endDefinition(62109)
lbl(62246)	putList(x(7))
		setConstant(init)
		setValue(x(8))
lbl(62252)	definition(x(8) 62361 pid('Pipe,close/fast' 0 pos('./op/Open.oz' 715 2) nil 5) <Q: 570> [y(1) g(5) y(0)])
		getSelf(x(2))
		inlineDot(x(2) <N: ReadLock> x(0) cache)
		lockThread(62358 x(0))
		getSelf(x(2))
		inlineDot(x(2) <N: WriteLock> x(0) cache)
		lockThread(62357 x(0))
		move(g(0) x(0))
		inlineDot(x(0) system x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: PID> x(3) cache)
		putRecord('#' 3 x(4))
		setConstant('kill ')
		setValue(x(3))
		setConstant(' 2> /dev/null')
		move(x(4) x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(1) x(0))
		callBI('Delay' [x(0)]#nil)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		move(g(0) x(0))
		inlineDot(x(0) 'wait' x(2) cache)
		createVariable(x(0))
		createVariable(x(1))
		call(x(2) 2)
		genCall(gci(g(2) true close false 0) 0)
		return
lbl(62357)	return
lbl(62358)	return
		endDefinition(62252)
lbl(62361)	definition(x(9) 62375 pid('Pipe,close/slow' 1 pos('./op/Open.oz' 715 2) nil 1) unit nil)
		getLiteral(close x(0))
		genFastCall(<Q: 570> 1)
		endDefinition(62361)
lbl(62375)	putRecord('#' [1 2 fast] x(10))
		setConstant(close)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(1))
		setValue(x(7))
		setValue(x(10))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('Pipe' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(62408)	definition(x(7) 62427 pid('Html,header/fast' 0 pos('./op/Open.oz' 732 2) nil 3) <Q: 571> nil)
		getSelf(x(2))
		putConstant('Content-type: text/html\n\n' x(0))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62408)
lbl(62427)	definition(x(8) 62441 pid('Html,header/slow' 1 pos('./op/Open.oz' 732 2) nil 1) unit nil)
		getLiteral(header x(0))
		genFastCall(<Q: 571> 1)
		endDefinition(62427)
lbl(62441)	putRecord('#' [1 2 fast] x(9))
		setConstant(header)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(62453)	definition(x(7) 62503 pid('Html,WriteTagBody/fast' 3 pos('./op/Open.oz' 736 2) nil 4) <Q: 572> [y(1)])
		testLT(x(1) x(0) x(3) 62465)
		return
lbl(62465)	allocateL3
		callBI('.' [x(2) x(0)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true tag false 1) 0)
		move(y(0) x(0))
		inlinePlus1(x(0) x(3))
		move(x(3) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: WriteTagBody> true 3) 0)
		endDefinition(62453)
lbl(62503)	definition(x(8) 62544 pid('Html,WriteTagBody/slow' 1 pos('./op/Open.oz' 736 2) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 572> 7)
		endDefinition(62503)
lbl(62544)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: WriteTagBody>)
		setValue(x(8))
		setValue(x(7))
lbl(62554)	definition(x(7) 62829 pid('Html,tag/fast' 1 pos('./op/Open.oz' 742 2) nil 5) <Q: 573> [g(6) y(1) g(7) g(8)])
		testBI('IsRecord' [x(0)]#[x(1)] 62798)
		allocateL6
		callBI('Label' [x(0)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		call(g(0) 2)
		testBool(y(2) 62755 62787)
		getSelf(x(1))
		move(x(1) y(2))
		createVariable(y(3))
		createVariable(y(4))
		move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(2)] 62613)
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) y(3))
		getLiteral('' y(4))
		branch(62642)
lbl(62613)	callBI('Arity' [x(0)]#[x(4)])
		move(x(4) x(0))
		move(y(3) x(2))
		putConstant(0 x(1))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 537> 8)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 538> 6)
lbl(62642)	putRecord('#' 4 x(0))
		setConstant('<')
		setValue(y(1))
		setValue(y(4))
		setConstant('>')
		sendMsg(write y(2) [vs] cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		putConstant(1 x(0))
		genCall(gci(g(1) true <M: WriteTagBody> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(2) 2)
		testBool(y(0) 62686 62706)
		branch(62717)
lbl(62686)	putRecord('#' 3 x(0))
		setConstant('</')
		setValue(y(1))
		setConstant('>')
		getSelf(x(2))
		sendMsg(write x(2) [vs] cache)
		branch(62717)
lbl(62706)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62717)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		call(g(3) 2)
		testBool(y(0) 62742 62744)
		getSelf(x(2))
		putConstant('\n' x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62742)	deAllocateL6
		return
lbl(62744)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(761)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62755)	testLiteral(y(1) '#' 62775)
		move(y(0) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(y(0) x(2))
		putConstant(1 x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: WriteTagBody> true 3) 0)
lbl(62775)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(write x(2) [vs] cache)
lbl(62787)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(746)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(62798)	testBI('IsProcedure' [x(0)]#[x(1)] 62819)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(1) true tag true 1) 0)
lbl(62819)	getSelf(x(2))
		tailSendMsg(write x(2) [vs] cache)
		endDefinition(62554)
lbl(62829)	definition(x(8) 62855 pid('Html,tag/slow' 1 pos('./op/Open.oz' 742 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 573> 3)
		endDefinition(62829)
lbl(62855)	putRecord('#' [1 2 fast] x(11))
		setConstant(tag)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Html' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(3) x(0))
		inlineDot(x(0) put x(2) cache)
lbl(62905)	definition(x(1) 63080 pid('' 2 pos('./op/Open.oz' 785 7) nil 6) <Q: 574> [y(2)])
		allocateL7
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testRecord(y(2) open 3 63057)
lbl(62937)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) format x(4) cache)
		putConstant('error in Open module' y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(4) y(5))
		createVariable(y(6))
		match(x(0) ht(62997 [onScalar(alreadyClosed 62967) onScalar(alreadyInitialized 62972) onScalar(illegalFlags 62977) onScalar(illegalModes 62982) onScalar(nameOrUrl 62987) onScalar(urlIsReadOnly 62992)]))
lbl(62967)	getLiteral('Object already closed' y(6))
		branch(63000)
lbl(62972)	getLiteral('Object already initialized' y(6))
		branch(63000)
lbl(62977)	getLiteral('Illegal value for flags' y(6))
		branch(63000)
lbl(62982)	getLiteral('Illegal value for mode' y(6))
		branch(63000)
lbl(62987)	getLiteral('Exactly one of \'name\' or \'url\' feature needed' y(6))
		branch(63000)
lbl(62992)	getLiteral('Only reading access to url-files allowed' y(6))
		branch(63000)
lbl(62997)	getLiteral('Unknown' y(6))
lbl(63000)	putRecord(oz 1 x(3))
		setValue(y(3))
		putRecord(oz 1 x(4))
		setValue(y(4))
		putRecord('#' 5 x(1))
		setConstant('{')
		setValue(x(3))
		setConstant(' ')
		setValue(x(4))
		setConstant('}')
		putRecord(hint [l m] x(0))
		setConstant('Object Application')
		setValue(x(1))
		putList(x(2))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(5) x(5) y(2) x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(1) x(4))
		deAllocateL7
		tailCall(x(5) 5)
lbl(63057)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('error in Open module' x(0))
		deAllocateL7
		tailCall(x(3) 3)
		endDefinition(62905)
lbl(63080)	putConstant(open x(0))
		call(x(2) 2)
		getRecord('export' [file html pipe socket text] g(9))
		unifyValue(y(4))
		unifyValue(y(1))
		unifyValue(y(0))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL8
		return
		endDefinition(56279)
lbl(63104)	tailCall(x(2) 0)
		endDefinition(56063)
lbl(63109)	putList(x(5))
		setConstant(dispatch)
		setConstant(nil)
		putList(x(4))
		setConstant(format)
		setValue(x(5))
		putList(x(3))
		setConstant(formatGeneric)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putList(x(29))
		setConstant('wait')
		setConstant(nil)
		putList(x(28))
		setConstant(pipe)
		setValue(x(29))
		putList(x(27))
		setConstant(system)
		setValue(x(28))
		putList(x(26))
		setConstant(deSelect)
		setValue(x(27))
		putList(x(25))
		setConstant(acceptSelect)
		setValue(x(26))
		putList(x(24))
		setConstant(getSockName)
		setValue(x(25))
		putList(x(23))
		setConstant(receiveFrom)
		setValue(x(24))
		putList(x(22))
		setConstant(sendTo)
		setValue(x(23))
		putList(x(21))
		setConstant(send)
		setValue(x(22))
		putList(x(20))
		setConstant(shutDown)
		setValue(x(21))
		putList(x(19))
		setConstant(accept)
		setValue(x(20))
		putList(x(18))
		setConstant(connect)
		setValue(x(19))
		putList(x(17))
		setConstant(listen)
		setValue(x(18))
		putList(x(16))
		setConstant(bind)
		setValue(x(17))
		putList(x(15))
		setConstant(socket)
		setValue(x(16))
		putList(x(14))
		setConstant(lSeek)
		setValue(x(15))
		putList(x(13))
		setConstant(read)
		setValue(x(14))
		putList(x(12))
		setConstant(write)
		setValue(x(13))
		putList(x(11))
		setConstant(close)
		setValue(x(12))
		putList(x(10))
		setConstant(fileDesc)
		setValue(x(11))
		putList(x(9))
		setConstant(open)
		setValue(x(10))
		putRecord(info [type] x(8))
		setValue(x(9))
		putList(x(31))
		setConstant(open)
		setConstant(nil)
		putRecord(info [type] x(30))
		setValue(x(31))
		putRecord('import' ['Error' 'ErrorRegistry' 'OS' 'Resolve'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		setValue(x(30))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putRecord('export' [file html pipe socket text] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		createVariableMove(y(159) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(63336)	definition(x(4) 63359 pid('IsFeature' 2 pos('./support/Type.oz' 30 3) nil 3) <P: 575> nil)
		testBI('IsInt' [x(0)]#[x(2)] 63350)
		getLiteral(true x(1))
		return
lbl(63350)	callBI('IsLiteral' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63336)
lbl(63359)	definition(x(5) 63382 pid('IsOrdered' 2 pos('./support/Type.oz' 34 3) nil 3) <P: 576> nil)
		testBI('IsNumber' [x(0)]#[x(2)] 63373)
		getLiteral(true x(1))
		return
lbl(63373)	callBI('IsAtom' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63359)
lbl(63382)	definition(x(6) 63419 pid('IsUnary' 2 pos('./support/Type.oz' 38 3) nil 4) <P: 577> nil)
		testBI('IsObject' [x(0)]#[x(2)] 63396)
		getLiteral(true x(1))
		return
lbl(63396)	testBI('IsProcedure' [x(0)]#[x(2)] 63413)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(63413)	getLiteral(false x(1))
		return
		endDefinition(63382)
lbl(63419)	definition(x(7) 63440 pid('IsPair' 2 pos('./support/Type.oz' 43 3) nil 2) <P: 578> nil)
		testRecord(x(0) '#' 2 63434)
lbl(63430)	getLiteral(true x(1))
		return
lbl(63434)	getLiteral(false x(1))
		return
		endDefinition(63419)
lbl(63440)	definition(x(8) 63506 pid('IsListOf' 3 pos('./support/Type.oz' 47 3) nil 3) <P: 579> nil)
		match(x(0) ht(63500 [onScalar(nil 63449) onRecord('|' 2 63453)]))
lbl(63449)	getLiteral(true x(2))
		return
lbl(63453)	allocateL4
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 63484 63489)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<P: 579> 7)
lbl(63484)	getLiteral(false y(2))
		deAllocateL4
		return
lbl(63489)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63500)	getLiteral(false x(2))
		return
		endDefinition(63440)
lbl(63506)	definition(x(8) 63607 pid('IsPairOf' 4 pos('./support/Type.oz' 53 3) nil 4) <P: 580> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(4) 63589 63594)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(1) 2)
		testBool(y(4) 63573 63578)
		move(y(0) x(0))
		inlineDot(x(0) 2 x(0) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(1))
		deAllocateL5
		tailCall(x(2) 2)
lbl(63573)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63578)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63589)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(54)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63506)
lbl(63607)	definition(x(8) 63693 pid('IsRecordOf' 4 pos('./support/Type.oz' 57 3) nil 5) <P: 581> nil)
		match(x(1) ht(63678 [onScalar(nil 63616) onRecord('|' 2 63620)]))
lbl(63616)	getLiteral(true x(3))
		return
lbl(63620)	allocateL5
		getVarVar(x(1) y(0))
		callBI('.' [x(0) x(1)]#[x(4)])
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 63662 63667)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL5
		genFastCall(<P: 581> 9)
lbl(63662)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(63667)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(59)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(63678)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(60)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63607)
lbl(63693)	definition(x(8) 63767 pid('IsPropertyList' 2 pos('./support/Type.oz' 63 3) nil 4) <P: 582> nil)
lbl(63699)	definition(x(3) 63756 pid('' 2 pos('./support/Type.oz' 64 19) nil 2) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 578> 4)
		testBool(y(2) 63738 63743)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		callBI('IsLiteral' [x(0)]#[x(1)])
		unify(x(1) y(1))
		deAllocateL3
		return
lbl(63738)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(63743)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63699)
lbl(63756)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 579> 7)
		endDefinition(63693)
lbl(63767)	definition(x(9) 63858 pid('IsComplexDomSpec' 2 pos('./support/Type.oz' 68 6) nil 4) <P: 583> [y(57)])
		testBI('IsInt' [x(0)]#[x(2)] 63781)
		getLiteral(true x(1))
		return
lbl(63781)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(1))
		move(g(0) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 580> 8)
		testBool(y(2) 63808 63845)
		getLiteral(true y(1))
		deAllocateL3
		return
lbl(63808)	definition(x(1) 63836 pid('' 2 pos('./support/Type.oz' 71 15) nil 4) unit [g(0)])
		testBI('IsInt' [x(0)]#[x(2)] 63822)
		getLiteral(true x(1))
		return
lbl(63822)	move(x(1) x(3))
		move(g(0) x(1))
		move(g(0) x(2))
		genFastCall(<P: 580> 9)
		endDefinition(63808)
lbl(63836)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL3
		genFastCall(<P: 579> 7)
lbl(63845)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(63767)
lbl(63858)	definition(x(9) 63879 pid('IsDomainSpec' 2 pos('./support/Type.oz' 76 6) nil 2) <P: 584> nil)
		testRecord(x(0) compl 1 63874)
lbl(63869)	getVariable(x(0))
		genFastCall(<P: 583> 5)
lbl(63874)	genFastCall(<P: 583> 5)
		endDefinition(63858)
lbl(63879)	definition(x(10) 63897 pid('IsTrue' 2 pos('./support/Type.oz' 83 3) nil 4) <P: 585> nil)
		putConstant(true x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63879)
lbl(63897)	definition(x(11) 63915 pid('IsFalse' 2 pos('./support/Type.oz' 87 3) nil 4) <P: 586> nil)
		putConstant(false x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(63897)
lbl(63915)	definition(x(12) 63938 pid('IsComparable' 2 pos('./support/Type.oz' 91 3) nil 3) <P: 587> nil)
		testBI('IsNumber' [x(0)]#[x(2)] 63929)
		getLiteral(true x(1))
		return
lbl(63929)	callBI('IsAtom' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63915)
lbl(63938)	definition(x(13) 63961 pid('IsRecordOrChunk' 2 pos('./support/Type.oz' 95 3) nil 3) <P: 588> nil)
		testBI('IsRecord' [x(0)]#[x(2)] 63952)
		getLiteral(true x(1))
		return
lbl(63952)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63938)
lbl(63961)	definition(x(14) 63984 pid('IsRecordCOrChunk' 2 pos('./support/Type.oz' 99 3) nil 3) <P: 589> nil)
		testBI('IsRecordC' [x(0)]#[x(2)] 63975)
		getLiteral(true x(1))
		return
lbl(63975)	callBI('IsChunk' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63961)
lbl(63984)	definition(x(15) 64007 pid('IsProcedureOrObject' 2 pos('./support/Type.oz' 103 3) nil 3) <P: 590> nil)
		testBI('IsProcedure' [x(0)]#[x(2)] 63998)
		getLiteral(true x(1))
		return
lbl(63998)	callBI('IsObject' [x(0)]#[x(2)])
		unify(x(2) x(1))
		return
		endDefinition(63984)
lbl(64007)	definition(x(16) 64036 pid('IsProcedure0' 2 pos('./support/Type.oz' 107 3) nil 4) <P: 591> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64030)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(0 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64030)	getLiteral(false x(1))
		return
		endDefinition(64007)
lbl(64036)	definition(x(17) 64065 pid('IsProcedure1' 2 pos('./support/Type.oz' 111 3) nil 4) <P: 592> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64059)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64059)	getLiteral(false x(1))
		return
		endDefinition(64036)
lbl(64065)	definition(x(18) 64094 pid('IsProcedure2' 2 pos('./support/Type.oz' 115 3) nil 4) <P: 593> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64088)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(2 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64088)	getLiteral(false x(1))
		return
		endDefinition(64065)
lbl(64094)	definition(x(19) 64123 pid('IsProcedure3' 2 pos('./support/Type.oz' 119 3) nil 4) <P: 594> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64117)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(3 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64117)	getLiteral(false x(1))
		return
		endDefinition(64094)
lbl(64123)	definition(x(20) 64152 pid('IsProcedure4' 2 pos('./support/Type.oz' 123 3) nil 4) <P: 595> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64146)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(4 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64146)	getLiteral(false x(1))
		return
		endDefinition(64123)
lbl(64152)	definition(x(21) 64181 pid('IsProcedure5' 2 pos('./support/Type.oz' 127 3) nil 4) <P: 596> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64175)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64175)	getLiteral(false x(1))
		return
		endDefinition(64152)
lbl(64181)	definition(x(22) 64210 pid('IsProcedure6' 2 pos('./support/Type.oz' 131 3) nil 4) <P: 597> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64204)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64204)	getLiteral(false x(1))
		return
		endDefinition(64181)
lbl(64210)	definition(x(23) 64239 pid('IsProcedure7Plus' 2 pos('./support/Type.oz' 135 3) nil 4) <P: 598> [y(128)])
		testBI('IsProcedure' [x(0)]#[x(2)] 64233)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(6 x(0))
		callBI('<' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(64233)	getLiteral(false x(1))
		return
		endDefinition(64210)
lbl(64239)	definition(x(24) 64257 pid('IsNil' 2 pos('./support/Type.oz' 139 3) nil 4) <P: 599> nil)
		putConstant(nil x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(64239)
lbl(64257)	definition(x(25) 64276 pid('IsCons' 2 pos('./support/Type.oz' 143 3) nil 2) <P: 600> nil)
		testList(x(0) 64270)
lbl(64266)	getLiteral(true x(1))
		return
lbl(64270)	getLiteral(false x(1))
		return
		endDefinition(64257)
lbl(64276)	definition(x(2) 65418 pid('' 2 pos('./support/Type.oz' 149 3) nil 4) <P: 601> [y(176) y(38) y(202) y(42) y(30) y(50) y(173) y(201) x(12) x(25) y(131) x(9) x(11) x(4) y(64) y(203) y(57) y(107) y(26) y(28) y(40) x(24) y(86) y(180) x(5) x(7) y(35) y(127) x(16) x(17) x(18) x(19) x(20) x(21) x(22) x(23) x(15) x(8) y(133) y(138) x(14) x(13) y(179) y(46) y(204) x(10) y(90) x(6) y(27) y(174) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 602>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 603>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 604>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 605>)
		setValue(x(2))
lbl(64306)	definitionCopy(x(3) 65413 pid('/body' 0 pos('./support/Type.oz' 149 3) [once] 8) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) x(1)])
		allocateL(60)
		move(g(0) x(0))
		inlineDot(x(0) 'FDB' x(3) cache)
		inlineDot(x(0) 'FSB' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(3) is x(1) cache)
		inlineDot(x(4) isValueB x(2) cache)
		inlineDot(x(4) isVarB x(3) cache)
lbl(64353)	definition(x(4) 64400 pid('IsFDVector' 2 pos('./support/Type.oz' 170 6) nil 5) <Q: 602> [x(1)])
		testBI('IsRecord' [x(0)]#[x(2)] 64394)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) '|' 64379)
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 579> 7)
lbl(64379)	callBI('Arity' [x(0)]#[x(4)])
		move(x(1) x(3))
		move(x(4) x(1))
		move(g(0) x(2))
		genFastCall(<P: 581> 9)
lbl(64394)	getLiteral(false x(1))
		return
		endDefinition(64353)
lbl(64400)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(0))
		setValue(g(1))
		setValue(g(2))
		setValue(g(3))
		setValue(g(4))
		setValue(g(5))
		setValue(g(6))
		setValue(g(7))
		setValue(g(8))
		setValue(g(9))
		setValue(g(10))
		setValue(g(11))
		setValue(g(12))
		setValue(g(13))
		setValue(x(1))
		setValue(x(4))
		setValue(g(14))
		setValue(g(15))
		setValue(g(16))
		setValue(x(2))
		setValue(x(3))
		setValue(g(17))
		setValue(g(18))
		setValue(g(19))
		setValue(g(20))
		setValue(g(21))
		setValue(g(22))
		setValue(g(23))
		setValue(g(24))
		setValue(g(25))
		setValue(g(26))
		setValue(g(27))
		setValue(g(28))
		setValue(g(29))
		setValue(g(30))
		setValue(g(31))
		setValue(g(32))
		setValue(g(33))
		setValue(g(34))
		setValue(g(35))
		setValue(g(36))
		setValue(g(37))
		setValue(g(38))
		setValue(g(39))
		setValue(g(40))
		setValue(g(41))
		setValue(g(42))
		setValue(g(43))
		setValue(g(44))
		setValue(g(45))
		setValue(g(46))
		setValue(g(47))
		setValue(g(48))
		setValue(g(49))
		setVariable(x(6))
		setValue(g(50))
lbl(64514)	definition(x(7) 64526 pid('Is.value' 2 pos('./support/Type.oz' 232 28) nil 2) <Q: 603> nil)
		getLiteral(true x(1))
		return
		endDefinition(64514)
lbl(64526)	unify(x(7) x(6))
lbl(64529)	definition(x(6) 64619 pid('GenericAsk' 3 pos('./support/Type.oz' 237 2) nil 4) <Q: 604> [g(51) x(5)])
lbl(64535)	definition(x(3) 64613 pid('' 1 pos('./support/Type.oz' 238 5) nil 3) unit [x(0) g(0) g(1) x(1)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		call(g(0) 2)
		testBool(y(1) 64557 64600)
		deAllocateL2
		return
lbl(64557)	move(g(2) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(g(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putRecord(kernel 6 x(0))
		setConstant(type)
		setValue(y(1))
		setValue(x(1))
		setValue(g(3))
		setConstant(1)
		setConstant('Type.ask')
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(64600)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(239)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(64535)
lbl(64613)	unify(x(3) x(2))
		return
		endDefinition(64529)
lbl(64619)	putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] y(1))
		setVariable(x(5))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setValue(x(6))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		moveMoveXYXY(x(1) y(56) x(2) y(57))
		moveMoveXYXY(x(3) y(58) x(4) y(59))
		move(g(1) x(0))
		move(x(5) x(2))
		putConstant(array x(1))
		genFastCall(<Q: 604> 6)
		move(g(2) x(0))
		move(y(2) x(2))
		putConstant(atom x(1))
		genFastCall(<Q: 604> 6)
		move(g(3) x(0))
		move(y(3) x(2))
		putConstant(bitArray x(1))
		genFastCall(<Q: 604> 6)
		move(g(4) x(0))
		move(y(4) x(2))
		putConstant(bool x(1))
		genFastCall(<Q: 604> 6)
		move(g(5) x(0))
		move(y(5) x(2))
		putConstant(cell x(1))
		genFastCall(<Q: 604> 6)
		move(g(6) x(0))
		move(y(6) x(2))
		putConstant(char x(1))
		genFastCall(<Q: 604> 6)
		move(g(7) x(0))
		move(y(7) x(2))
		putConstant(chunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(8) x(0))
		move(y(8) x(2))
		putConstant('class' x(1))
		genFastCall(<Q: 604> 6)
		move(g(9) x(0))
		move(y(9) x(2))
		putConstant(comparable x(1))
		genFastCall(<Q: 604> 6)
		move(g(10) x(0))
		move(y(10) x(2))
		putConstant(cons x(1))
		genFastCall(<Q: 604> 6)
		move(g(11) x(0))
		move(y(11) x(2))
		putConstant(dictionary x(1))
		genFastCall(<Q: 604> 6)
		move(g(12) x(0))
		move(y(12) x(2))
		putConstant(domainSpec x(1))
		genFastCall(<Q: 604> 6)
		move(g(17) x(0))
		move(y(21) x(2))
		putConstant(int x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(56) x(0) y(14) x(2))
		putConstant(fd x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(59) x(0) y(15) x(2))
		putConstant(fdVector x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(13) x(2))
		putConstant('false' x(1))
		genFastCall(<Q: 604> 6)
		move(g(14) x(0))
		move(y(16) x(2))
		putConstant(feature x(1))
		genFastCall(<Q: 604> 6)
		move(g(15) x(0))
		move(y(17) x(2))
		putConstant(float x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(57) x(0) y(19) x(2))
		putConstant(fset x(1))
		genFastCall(<Q: 604> 6)
		moveMoveYXYX(y(58) x(0) y(20) x(2))
		putConstant(fsetC x(1))
		genFastCall(<Q: 604> 6)
		move(g(16) x(0))
		move(y(18) x(2))
		putConstant(foreignPointer x(1))
		genFastCall(<Q: 604> 6)
		move(g(18) x(0))
		move(y(22) x(2))
		putConstant(list x(1))
		genFastCall(<Q: 604> 6)
		move(g(19) x(0))
		move(y(23) x(2))
		putConstant(literal x(1))
		genFastCall(<Q: 604> 6)
		move(g(20) x(0))
		move(y(24) x(2))
		putConstant('lock' x(1))
		genFastCall(<Q: 604> 6)
		move(g(21) x(0))
		move(y(25) x(2))
		putConstant(name x(1))
		genFastCall(<Q: 604> 6)
		move(g(22) x(0))
		move(y(26) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 604> 6)
		move(g(23) x(0))
		move(y(27) x(2))
		putConstant(number x(1))
		genFastCall(<Q: 604> 6)
		move(g(24) x(0))
		move(y(28) x(2))
		putConstant(object x(1))
		genFastCall(<Q: 604> 6)
		move(g(25) x(0))
		move(y(29) x(2))
		putConstant(ordered x(1))
		genFastCall(<Q: 604> 6)
		move(g(26) x(0))
		move(y(30) x(2))
		putConstant(pair x(1))
		genFastCall(<Q: 604> 6)
		move(g(27) x(0))
		move(y(31) x(2))
		putConstant(port x(1))
		genFastCall(<Q: 604> 6)
		move(g(28) x(0))
		move(y(32) x(2))
		putConstant(procedure x(1))
		genFastCall(<Q: 604> 6)
		move(g(29) x(0))
		move(y(33) x(2))
		putConstant('procedure/0' x(1))
		genFastCall(<Q: 604> 6)
		move(g(30) x(0))
		move(y(34) x(2))
		putConstant('procedure/1' x(1))
		genFastCall(<Q: 604> 6)
		move(g(31) x(0))
		move(y(35) x(2))
		putConstant('procedure/2' x(1))
		genFastCall(<Q: 604> 6)
		move(g(32) x(0))
		move(y(36) x(2))
		putConstant('procedure/3' x(1))
		genFastCall(<Q: 604> 6)
		move(g(33) x(0))
		move(y(37) x(2))
		putConstant('procedure/4' x(1))
		genFastCall(<Q: 604> 6)
		move(g(34) x(0))
		move(y(38) x(2))
		putConstant('procedure/5' x(1))
		genFastCall(<Q: 604> 6)
		move(g(35) x(0))
		move(y(39) x(2))
		putConstant('procedure/6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(36) x(0))
		move(y(40) x(2))
		putConstant('procedure/>6' x(1))
		genFastCall(<Q: 604> 6)
		move(g(37) x(0))
		move(y(41) x(2))
		putConstant(procedureOrObject x(1))
		genFastCall(<Q: 604> 6)
		move(g(38) x(0))
		move(y(42) x(2))
		putConstant(propertyList x(1))
		genFastCall(<Q: 604> 6)
		move(g(39) x(0))
		move(y(43) x(2))
		putConstant(record x(1))
		genFastCall(<Q: 604> 6)
		move(g(40) x(0))
		move(y(44) x(2))
		putConstant(recordC x(1))
		genFastCall(<Q: 604> 6)
		move(g(42) x(0))
		move(y(46) x(2))
		putConstant(recordOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(41) x(0))
		move(y(45) x(2))
		putConstant(recordCOrChunk x(1))
		genFastCall(<Q: 604> 6)
		move(g(43) x(0))
		move(y(47) x(2))
		putConstant(space x(1))
		genFastCall(<Q: 604> 6)
		move(g(44) x(0))
		move(y(48) x(2))
		putConstant(string x(1))
		genFastCall(<Q: 604> 6)
		move(g(45) x(0))
		move(y(49) x(2))
		putConstant('thread' x(1))
		genFastCall(<Q: 604> 6)
		move(g(46) x(0))
		move(y(50) x(2))
		putConstant('true' x(1))
		genFastCall(<Q: 604> 6)
		move(g(47) x(0))
		move(y(51) x(2))
		putConstant(tuple x(1))
		genFastCall(<Q: 604> 6)
		move(g(48) x(0))
		move(y(52) x(2))
		putConstant(unary x(1))
		genFastCall(<Q: 604> 6)
		move(g(49) x(0))
		move(y(53) x(2))
		putConstant('unit' x(1))
		genFastCall(<Q: 604> 6)
lbl(65377)	definition(x(0) 65386 pid('Ask.value' 1 pos('./support/Type.oz' 308 24) nil 1) <Q: 605> nil)
		return
		endDefinition(65377)
lbl(65386)	unify(x(0) y(54))
		move(g(50) x(0))
		move(y(55) x(2))
		putConstant(virtualString x(1))
		genFastCall(<Q: 604> 6)
		getRecord('export' ['ask' is] g(52))
		unifyValue(y(1))
		unifyValue(y(0))
		deAllocateL
		return
		endDefinition(64306)
lbl(65413)	tailCall(x(3) 0)
		endDefinition(64276)
lbl(65418)	putRecord(is [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant(value)
		setConstant(value)
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		setConstant('procedure/2')
		putRecord(record 1 x(5))
		setValue(x(4))
		putRecord('ask' [array atom bitArray bool cell char chunk 'class' comparable cons dictionary domainSpec 'false' fdIntC fdVector feature float foreignPointer fset fsetC generic int list literal 'lock' name nilAtom number object ordered pair port procedure 'procedure/0' 'procedure/1' 'procedure/2' 'procedure/3' 'procedure/4' 'procedure/5' 'procedure/6' 'procedure/>6' procedureOrObject propertyList record recordC recordCOrChunk recordOrChunk space string 'thread' 'true' tuple unary 'unit' value virtualString] x(4))
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/3')
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant(value)
		setConstant('procedure/1')
		setConstant(value)
		putRecord(record 1 x(6))
		setValue(x(4))
		putList(x(3))
		setConstant(is)
		setConstant(nil)
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/FDB')
		setValue(x(3))
		putList(x(8))
		setConstant(isVarB)
		setConstant(nil)
		putList(x(7))
		setConstant(isValueB)
		setValue(x(8))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/FSB')
		setValue(x(7))
		putList(x(10))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['FDB' 'FSB' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(9))
		putRecord('export' ['ask' is] x(1))
		setValue(x(6))
		setValue(x(5))
		createVariableMove(y(184) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putList(x(4))
		setConstant(46)
		setConstant(nil)
		putList(x(0))
		setConstant(46)
		setConstant(nil)
		putList(x(5))
		setConstant(46)
		setValue(x(0))
lbl(65748)	definition(x(6) 65848 pid('Normalize' 3 pos('./dp/URL.oz' 29 6) nil 7) <P: 606> [x(4) x(5)])
		match(x(0) ht(65833 [onScalar(nil 65757) onRecord('|' 2 65766)]))
lbl(65757)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<P: 28> 5)
lbl(65766)	getVarVar(x(0) x(3))
		move(g(0) x(4))
		testBI('==' [x(0) x(4)]#[x(5)] 65782)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65782)	move(g(1) x(5))
		testBI('==' [x(0) x(5)]#[x(6)] 65818)
		testLiteral(x(1) nil 65806)
		getListValVar(x(2) g(1) x(2))
		move(x(3) x(0))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
lbl(65806)	inlineDot(x(1) 2 x(1) cache)
		move(x(3) x(0))
		genFastCall(<P: 606> 7)
lbl(65818)	putList(x(6))
		setValue(x(0))
		setValue(x(1))
		move(x(3) x(0))
		move(x(6) x(1))
		genFastCall(<P: 606> 7)
lbl(65833)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(39)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(65748)
lbl(65848)	definition(x(4) 65865 pid('NormalizePath' 2 pos('./dp/URL.oz' 42 6) nil 3) <P: 607> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<P: 606> 7)
		endDefinition(65848)
lbl(65865)	definition(x(4) 65926 pid('StripLast' 3 pos('./dp/URL.oz' 48 6) nil 5) <P: 608> nil)
		shallowGuard(65913)
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(65879)	shallowThen
		match(x(4) ht(65900 [onScalar(nil 65883) onRecord('|' 2 65890)]))
lbl(65883)	unify(x(1) x(3))
		getLiteral(nil x(2))
		return
lbl(65890)	getListValVar(x(2) x(3) x(2))
		move(x(4) x(0))
		genFastCall(<P: 608> 7)
lbl(65900)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(51)
		setValue(x(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(65913)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(48)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(65865)
lbl(65926)	definition(x(4) 66035 pid('PathResolve' 3 pos('./dp/URL.oz' 54 6) nil 6) <P: 609> nil)
		allocateL5
		callBI('Label' [x(0)]#[x(4)])
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(1) 1 x(1) cache)
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(2) x(3))
		putConstant(1 x(2))
		marshalledFastCall(<R: tuple> 8)
		createVariable(y(3))
		testLiteral(y(1) nil 65985)
		unify(y(3) y(2))
		branch(66024)
lbl(65985)	move(y(1) x(0))
		createVariable(x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 608> 6)
		createVariable(y(1))
		testLiteral(y(2) nil 66010)
		getList(y(1))
		unifyLiteral(nil)
		unifyLiteral(nil)
		branch(66013)
lbl(66010)	unify(y(1) y(2))
lbl(66013)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(66024)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<P: 607> 5)
		endDefinition(65926)
lbl(66035)	definition(x(4) 66098 pid('Split' 3 pos('./dp/URL.oz' 71 2) nil 4) <P: 610> nil)
		match(x(0) ht(66083 [onScalar(nil 66044) onRecord('|' 2 66051)]))
lbl(66044)	unify(x(1) x(2))
		getLiteral(nil x(1))
		return
lbl(66051)	getVarVar(x(0) x(3))
		testNumber(x(0) 47 66073)
		getLiteral(nil x(1))
		getList(x(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66073)	getListValVar(x(1) x(0) x(1))
		move(x(3) x(0))
		genFastCall(<P: 610> 7)
lbl(66083)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(77)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66035)
lbl(66098)	definition(x(4) 66115 pid('SplitPath' 2 pos('./dp/URL.oz' 80 2) nil 3) <P: 611> nil)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		genFastCall(<P: 610> 7)
		endDefinition(66098)
lbl(66115)	definition(x(4) 66693 pid('StringToUrl' 2 pos('./dp/URL.oz' 86 6) nil 4) <P: 612> [y(55) y(54) y(146) y(160) y(82)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(66153)
		move(x(0) y(2))
		createCond(66147)
lbl(66135)	lastClause
		clause
		ask
lbl(66138)	putRecord(illegalUrl 1 x(0))
		setValue(y(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66147)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(66153)	createVariable(y(2))
		testLiteral(y(0) nil 66164)
		getLiteral(url y(2))
		branch(66685)
lbl(66164)	move(y(0) x(1))
		putConstant(35 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(5))
		testBool(y(3) 66203 66211)
		getRecord(o [fragment] y(5))
		unifyVariable(x(3))
		moveMoveYXYX(y(0) x(0) y(4) x(2))
		putConstant(35 x(1))
		genFastCall(<P: 2> 8)
		branch(66222)
lbl(66203)	unify(y(4) y(0))
		getLiteral(o y(5))
		branch(66222)
lbl(66211)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(95)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66222)	createVariable(y(3))
		createVariable(y(6))
		testLiteral(y(4) nil 66238)
lbl(66230)	unify(y(3) y(4))
		getLiteral(o y(6))
		branch(66305)
lbl(66238)	move(y(4) x(0))
		inlineDot(x(0) 2 x(1) cache)
		putConstant(58 x(0))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(7) 66230 66294)
lbl(66260)	getRecord(o [scheme] y(6))
		unifyVariable(y(7))
		moveMoveYXYX(y(4) x(0) y(3) x(3))
		putConstant(58 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 2> 8)
		move(y(8) x(0))
		move(g(1) x(1))
		move(y(7) x(2))
		genFastCall(<P: 29> 6)
		branch(66305)
lbl(66294)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(101)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66305)	putList(x(1))
		setConstant(47)
		setConstant(nil)
		putList(x(0))
		setConstant(47)
		setValue(x(1))
		move(y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 78> 6)
		createVariable(y(7))
		createVariable(y(8))
		testBool(y(4) 66436 66444)
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		inlineDot(x(3) 2 x(0) cache)
		moveMoveXYYX(x(0) y(3) y(3) x(1))
		putConstant(47 x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 66405 66425)
		getList(y(7))
		unifyNumber(47)
		unifyVariable(x(3))
		getRecord(o [netloc] y(8))
		unifyVariable(y(4))
		move(y(3) x(0))
		putConstant(47 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 2> 8)
		move(y(9) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		branch(66455)
lbl(66405)	getLiteral(nil y(7))
		getRecord(o [netloc] y(8))
		unifyVariable(x(2))
		move(y(3) x(0))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		branch(66455)
lbl(66425)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66436)	unify(y(7) y(3))
		getLiteral(o y(8))
		branch(66455)
lbl(66444)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(108)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66455)	move(y(7) x(1))
		putConstant(63 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(4))
		createVariable(y(9))
		testBool(y(3) 66494 66502)
		getRecord(o [query] y(9))
		unifyVariable(x(3))
		moveMoveYXYX(y(7) x(0) y(4) x(2))
		putConstant(63 x(1))
		genFastCall(<P: 2> 8)
		branch(66513)
lbl(66494)	unify(y(4) y(7))
		getLiteral(o y(9))
		branch(66513)
lbl(66502)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66513)	move(y(4) x(1))
		putConstant(59 x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		createVariable(y(7))
		createVariable(y(10))
		testBool(y(3) 66552 66560)
		getRecord(o [parameter] y(10))
		unifyVariable(x(3))
		moveMoveYXYX(y(4) x(0) y(7) x(2))
		putConstant(59 x(1))
		genFastCall(<P: 2> 8)
		branch(66571)
lbl(66552)	unify(y(7) y(4))
		getLiteral(o y(10))
		branch(66571)
lbl(66560)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(125)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66571)	createVariable(y(3))
		match(y(7) ht(66644 [onScalar(nil 66576) onRecord('|' 2 66581)]))
lbl(66576)	getLiteral(o y(3))
		branch(66657)
lbl(66581)	getVarVar(x(0) x(2))
		getRecord(o [path] y(3))
		unifyVariable(x(3))
		testNumber(x(0) 47 66619)
		getRecord(abs 1 x(3))
		unifyVariable(y(4))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66657)
lbl(66619)	getRecord(rel 1 x(3))
		unifyVariable(y(4))
		move(y(7) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<P: 611> 4)
		moveMoveYXYX(y(11) x(0) y(4) x(1))
		genFastCall(<P: 607> 4)
		branch(66657)
lbl(66644)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(137)
		setValue(y(7))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(66657)	putRecord('#' 6 x(0))
		setValue(y(6))
		setValue(y(5))
		setValue(y(8))
		setValue(y(9))
		setValue(y(10))
		setValue(y(3))
		move(g(4) x(1))
		move(y(2) x(3))
		putConstant(url x(2))
		genFastCall(<P: 163> 8)
lbl(66685)	unify(y(1) y(2))
		popEx
		deAllocateL
		return
		endDefinition(66115)
lbl(66693)	definition(x(4) 66742 pid('UrlIsAbs' 2 pos('./dp/URL.oz' 148 3) nil 4) <P: 613> nil)
		putConstant(scheme x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66710)
		getLiteral(true x(1))
		return
lbl(66710)	putConstant(path x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 66736)
		inlineDot(x(0) path x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(abs x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(66736)	getLiteral(false x(1))
		return
		endDefinition(66693)
lbl(66742)	definition(x(5) 66785 pid('Copy' 3 pos('./dp/URL.oz' 154 6) nil 6) <P: 614> nil)
		match(x(0) ht(66770 [onScalar(nil 66751) onRecord('|' 2 66752)]))
lbl(66751)	return
lbl(66752)	getVarVar(x(0) x(3))
		callBI('.' [x(1) x(0)]#[x(4)])
		callBI('.' [x(2) x(0)]#[x(5)])
		unify(x(5) x(4))
		move(x(3) x(0))
		genFastCall(<P: 614> 7)
lbl(66770)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(157)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(66742)
lbl(66785)	definition(x(5) 66858 pid('Project' 3 pos('./dp/URL.oz' 160 6) nil 4) <P: 615> nil)
		allocateL3
lbl(66792)	definition(x(3) 66810 pid('' 2 pos('./dp/URL.oz' 161 16) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('HasFeature' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(66792)
lbl(66810)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(3)])
		move(x(3) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		genFastCall(<P: 110> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 614> 7)
		endDefinition(66785)
lbl(66858)	definition(x(5) 67157 pid('UrlResolve' 3 pos('./dp/URL.oz' 169 6) nil 6) <P: 616> nil)
		testLiteral(x(0) url 66872)
		unify(x(2) x(1))
		return
lbl(66872)	testLiteral(x(1) url 66880)
		unify(x(2) x(0))
		return
lbl(66880)	putConstant(scheme x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66891)
		unify(x(2) x(1))
		return
lbl(66891)	putConstant(netloc x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 66932)
		allocateL3
		putList(x(3))
		setConstant(scheme)
		setConstant(nil)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66932)	putConstant(path x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 67080)
		inlineDot(x(1) path x(3) cache)
		callBI('Label' [x(3)]#[x(4)])
		testLiteral(x(4) abs 66992)
		allocateL3
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(66992)	allocateL4
		putList(x(4))
		setConstant(netloc)
		setConstant(nil)
		putList(x(3))
		setConstant(scheme)
		setValue(x(4))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		putRecord(abs 1 x(1))
		setConstant(nil)
		move(y(0) x(3))
		putConstant(path x(4))
		callBI('CondSelect' [x(3) x(4) x(1)]#[x(5)])
		inlineDot(x(0) path x(1) cache)
		move(x(2) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 609> 6)
		move(y(0) x(0))
		putConstant(path x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL4
		return
lbl(67080)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		putConstant(parameter x(3))
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 67103)
		getLiteral(nil y(3))
		branch(67109)
lbl(67103)	getList(y(3))
		unifyLiteral(query)
		unifyLiteral(nil)
lbl(67109)	putList(x(3))
		setConstant(parameter)
		setValue(y(3))
		putList(x(2))
		setConstant(path)
		setValue(x(3))
		putList(x(0))
		setConstant(netloc)
		setValue(x(2))
		putList(x(1))
		setConstant(scheme)
		setValue(x(0))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 615> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(2))
		deAllocateL4
		return
		endDefinition(66858)
lbl(67157)	definition(x(6) 67461 pid('UrlToVs' 2 pos('./dp/URL.oz' 200 3) nil 9) <P: 617> nil)
		allocateL6
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		putConstant(scheme x(7))
		testBI('HasFeature' [x(0) x(7)]#[x(8)] 67221)
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral('://')
		inlineDot(x(0) scheme x(7) cache)
		unify(x(7) x(1))
		branch(67224)
lbl(67221)	getLiteral('' x(1))
lbl(67224)	move(y(0) x(0))
		putConstant(netloc x(1))
		putConstant('' x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		unify(x(3) y(1))
		putConstant(path x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67352)
		inlineDot(x(0) path x(1) cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		callBI('Label' [x(1)]#[x(4)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		testLiteral(x(4) abs 67277)
		getLiteral('/' x(2))
		branch(67280)
lbl(67277)	getLiteral('' x(2))
lbl(67280)	move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
		testLiteral(x(1) nil 67298)
		getLiteral('' y(2))
		branch(67355)
lbl(67298)	inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 2 x(4) cache)
lbl(67310)	definition(x(1) 67329 pid('' 3 pos('./dp/URL.oz' 207 18) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral('/')
		unifyValue(x(1))
		return
		endDefinition(67310)
lbl(67329)	inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(5) 1 x(2) cache)
		move(x(4) x(0))
		move(y(2) x(3))
		genFastCall(<P: 30> 8)
		branch(67355)
lbl(67352)	getLiteral('' y(2))
lbl(67355)	move(y(0) x(0))
		putConstant(parameter x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67384)
		getRecord('#' 2 y(3))
		unifyLiteral(';')
		unifyVariable(x(1))
		inlineDot(x(0) parameter x(2) cache)
		unify(x(2) x(1))
		branch(67387)
lbl(67384)	getLiteral('' y(3))
lbl(67387)	move(y(0) x(0))
		putConstant(query x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67416)
		getRecord('#' 2 y(4))
		unifyLiteral('?')
		unifyVariable(x(1))
		inlineDot(x(0) query x(2) cache)
		unify(x(2) x(1))
		branch(67419)
lbl(67416)	getLiteral('' y(4))
lbl(67419)	move(y(0) x(0))
		putConstant(fragment x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 67454)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(1))
		unifyNumber(35)
		unifyLiteral(nil)
		inlineDot(x(0) fragment x(1) cache)
		unify(x(1) x(2))
		deAllocateL6
		return
lbl(67454)	getLiteral('' y(5))
		deAllocateL6
		return
		endDefinition(67157)
lbl(67461)	definition(x(7) 67488 pid('VsToUrl' 2 pos('./dp/URL.oz' 217 3) nil 2) <P: 618> [y(170)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 194> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 612> 5)
		endDefinition(67461)
lbl(67488)	definition(x(8) 67515 pid('UrlToAtom' 2 pos('./dp/URL.oz' 221 3) nil 2) <P: 619> [y(169)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 617> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<P: 195> 5)
		endDefinition(67488)
lbl(67515)	definition(x(2) 67552 pid('' 2 pos('./dp/URL.oz' 227 3) nil 2) <P: 620> [x(4) x(7) x(5) x(8) x(6)])
		putConstant(nil x(0))
lbl(67524)	definitionCopy(x(0) 67547 pid('/body' 0 pos('./dp/URL.oz' 227 3) [once] 0) unit [x(1) g(0) g(1) g(2) g(3) g(4)])
		getRecord('export' [isAbsUrl make resolve toAtom toVs] g(0))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyValue(g(4))
		unifyValue(g(5))
		return
		endDefinition(67524)
lbl(67547)	tailCall(x(0) 0)
		endDefinition(67515)
lbl(67552)	putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/3' x(6))
		putConstant('procedure/2' x(7))
		putConstant('procedure/2' x(8))
		putRecord('export' [isAbsUrl make resolve toAtom toVs] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		putConstant('import' x(0))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		move(y(146) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant('import' x(0))
		createVariableMove(y(146) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) make x(2) cache)
		putList(x(18))
		setConstant(89)
		setConstant(nil)
		putList(x(17))
		setConstant(77)
		setValue(x(18))
		putList(x(16))
		setConstant(77)
		setValue(x(17))
		putList(x(15))
		setConstant(85)
		setValue(x(16))
		putList(x(14))
		setConstant(68)
		setValue(x(15))
		putList(x(13))
		setConstant(47)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(111)
		setValue(x(12))
		putList(x(10))
		setConstant(111)
		setValue(x(11))
		putList(x(9))
		setConstant(98)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(185) x(1))
		call(x(2) 2)
		move(y(146) x(0))
		inlineDot(x(0) make x(2) cache)
		putList(x(20))
		setConstant(89)
		setConstant(nil)
		putList(x(19))
		setConstant(77)
		setValue(x(20))
		putList(x(18))
		setConstant(77)
		setValue(x(19))
		putList(x(17))
		setConstant(85)
		setValue(x(18))
		putList(x(16))
		setConstant(68)
		setValue(x(17))
		putList(x(15))
		setConstant(47)
		setValue(x(16))
		putList(x(14))
		setConstant(109)
		setValue(x(15))
		putList(x(13))
		setConstant(101)
		setValue(x(14))
		putList(x(12))
		setConstant(116)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(121)
		setValue(x(11))
		putList(x(9))
		setConstant(115)
		setValue(x(10))
		putList(x(8))
		setConstant(47)
		setValue(x(9))
		putList(x(7))
		setConstant(47)
		setValue(x(8))
		putList(x(6))
		setConstant(58)
		setValue(x(7))
		putList(x(5))
		setConstant(122)
		setValue(x(6))
		putList(x(4))
		setConstant(111)
		setValue(x(5))
		putList(x(1))
		setConstant(45)
		setValue(x(4))
		putList(x(3))
		setConstant(120)
		setValue(x(1))
		move(x(3) x(0))
		createVariableMove(y(186) x(1))
		call(x(2) 2)
		move(y(185) x(0))
		inlineDot(x(0) scheme x(0) cache)
		move(y(186) x(1))
		inlineDot(x(1) scheme x(2) cache)
		unify(x(2) x(0))
		putRecord(url ['functor' home pickle] x(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
lbl(67891)	definition(x(1) 67900 pid('Swallow' 1 pos('./init/Module.oz' 41 3) nil 1) <P: 621> nil)
		return
		endDefinition(67891)
lbl(67900)	putList(x(26))
		setConstant('Misc')
		setConstant(nil)
		putList(x(25))
		setConstant('Type')
		setValue(x(26))
		putList(x(24))
		setConstant('RunTimeLibrary')
		setValue(x(25))
		putList(x(23))
		setConstant('Compiler')
		setValue(x(24))
		putList(x(22))
		setConstant('TkTools')
		setValue(x(23))
		putList(x(21))
		setConstant('Tk')
		setValue(x(22))
		putList(x(20))
		setConstant('Open')
		setValue(x(21))
		putList(x(19))
		setConstant('URL')
		setValue(x(20))
		putList(x(18))
		setConstant('VirtualSite')
		setValue(x(19))
		putList(x(17))
		setConstant('Remote')
		setValue(x(18))
		putList(x(16))
		setConstant('Connection')
		setValue(x(17))
		putList(x(15))
		setConstant('Fault')
		setValue(x(16))
		putList(x(14))
		setConstant('Foreign')
		setValue(x(15))
		putList(x(13))
		setConstant('Finalize')
		setValue(x(14))
		putList(x(12))
		setConstant('ErrorRegistry')
		setValue(x(13))
		putList(x(11))
		setConstant('Error')
		setValue(x(12))
		putList(x(10))
		setConstant('FS')
		setValue(x(11))
		putList(x(9))
		setConstant('Schedule')
		setValue(x(10))
		putList(x(8))
		setConstant('FD')
		setValue(x(9))
		putList(x(7))
		setConstant('Search')
		setValue(x(8))
		putList(x(6))
		setConstant('Servlet')
		setValue(x(7))
		putList(x(5))
		setConstant('Syslet')
		setValue(x(6))
		putList(x(4))
		setConstant('Applet')
		setValue(x(5))
		putList(x(3))
		setConstant('GetArgs')
		setValue(x(4))
		putList(x(2))
		setConstant('Application')
		setValue(x(3))
		putList(x(36))
		setConstant('GumpParser')
		setConstant(nil)
		putList(x(35))
		setConstant('GumpScanner')
		setValue(x(36))
		putList(x(34))
		setConstant('Gump')
		setValue(x(35))
		putList(x(33))
		setConstant('Profiler')
		setValue(x(34))
		putList(x(32))
		setConstant('Ozcar')
		setValue(x(33))
		putList(x(31))
		setConstant('Emacs')
		setValue(x(32))
		putList(x(30))
		setConstant('CompilerPanel')
		setValue(x(31))
		putList(x(29))
		setConstant('Explorer')
		setValue(x(30))
		putList(x(28))
		setConstant('Browser')
		setValue(x(29))
		putList(x(27))
		setConstant('Panel')
		setValue(x(28))
		putList(x(42))
		setConstant('System')
		setConstant(nil)
		putList(x(41))
		setConstant('Pickle')
		setValue(x(42))
		putList(x(40))
		setConstant('Property')
		setValue(x(41))
		putList(x(39))
		setConstant('OS')
		setValue(x(40))
		putList(x(38))
		setConstant('Resolve')
		setValue(x(39))
		putList(x(37))
		setConstant('Module')
		setValue(x(38))
		putRecord(defaults [lib tools volatile] y(185))
		setValue(x(2))
		setValue(x(27))
		setValue(x(37))
		move(y(146) x(2))
		inlineDot(x(2) make x(3) cache)
		putList(x(22))
		setConstant(89)
		setConstant(nil)
		putList(x(21))
		setConstant(77)
		setValue(x(22))
		putList(x(20))
		setConstant(77)
		setValue(x(21))
		putList(x(19))
		setConstant(85)
		setValue(x(20))
		putList(x(18))
		setConstant(68)
		setValue(x(19))
		putList(x(17))
		setConstant(47)
		setValue(x(18))
		putList(x(16))
		setConstant(109)
		setValue(x(17))
		putList(x(15))
		setConstant(101)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(115)
		setValue(x(14))
		putList(x(12))
		setConstant(121)
		setValue(x(13))
		putList(x(11))
		setConstant(115)
		setValue(x(12))
		putList(x(10))
		setConstant(47)
		setValue(x(11))
		putList(x(9))
		setConstant(47)
		setValue(x(10))
		putList(x(8))
		setConstant(58)
		setValue(x(9))
		putList(x(7))
		setConstant(122)
		setValue(x(8))
		putList(x(6))
		setConstant(111)
		setValue(x(7))
		putList(x(5))
		setConstant(45)
		setValue(x(6))
		putList(x(4))
		setConstant(120)
		setValue(x(5))
		moveMoveXYXY(x(0) y(186) x(1) y(187))
		move(x(4) x(0))
		createVariableMove(y(188) x(1))
		call(x(3) 2)
		move(y(185) x(0))
		inlineDot(x(0) volatile x(1) cache)
		inlineDot(x(0) lib x(3) cache)
		inlineDot(x(0) tools x(4) cache)
		move(x(1) y(185))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(192) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(185) x(0) y(192) x(1))
		createVariableMove(y(208) x(2))
		genFastCall(<P: 21> 6)
lbl(68340)	definition(x(1) 68395 pid('' 2 pos('./init/Module.oz' 56 3) nil 4) <P: 622> [y(146) y(188)])
		allocateL3
		getRecord('#' 2 x(1))
		unifyValVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) resolve x(2) cache)
		inlineDot(x(1) make x(3) cache)
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		move(y(1) x(3))
		move(g(1) x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		deAllocateL3
		tailCall(x(3) 3)
		endDefinition(68340)
lbl(68395)	move(y(208) x(0))
		createVariableMove(y(185) x(2))
		genFastCall(<P: 29> 6)
		putConstant(map x(7))
		move(y(185) x(0))
		callBI(record [x(7) x(0)]#[x(8)])
lbl(68413)	definition(x(7) 68476 pid('ModNameToUrl' 2 pos('./init/Module.oz' 63 3) nil 5) <P: 623> [y(169) x(8) y(146)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 68447)
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
lbl(68447)	move(g(2) x(2))
		inlineDot(x(2) make x(3) cache)
		putRecord('#' 2 x(4))
		setValue(y(1))
		setConstant('.ozf')
		move(x(4) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(68413)
lbl(68476)	definition(x(7) 68512 pid('NameOrUrlToUrl' 3 pos('./init/Module.oz' 75 3) nil 4) <P: 624> [y(146)])
		testLiteral(x(1) <N: NONE> 68492)
		move(x(2) x(1))
		genFastCall(<P: 623> 5)
lbl(68492)	move(g(0) x(0))
		inlineDot(x(0) make x(3) cache)
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
		endDefinition(68476)
lbl(68512)	putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('feat' [<N: ModuleMap>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(68524)	definition(x(7) 68547 pid('BaseManager,init/fast' 0 pos('./init/Module.oz' 88 6) nil 2) <P: 625> [y(132)])
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		return
		endDefinition(68524)
lbl(68547)	definition(x(8) 68561 pid('BaseManager,init/slow' 1 pos('./init/Module.oz' 88 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<P: 625> 1)
		endDefinition(68547)
lbl(68561)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(68571)	definition(x(7) 68737 pid('BaseManager,Link/fast' 2 pos('./init/Module.oz' 92 6) nil 4) <P: 626> [y(146) y(156) y(149) y(186) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intLink 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(68733 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 68661)
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(68732)
lbl(68661)	getSelf(x(2))
lbl(68663)	definition(x(3) 68723 pid('' 1 pos('./init/Module.oz' 100 7) nil 6) unit [x(2) y(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		putConstant(scheme x(3))
		putConstant(unit x(4))
		callBI('CondSelect' [x(2) x(3) x(4)]#[x(5)])
		move(g(2) x(3))
		testBI('==' [x(5) x(3)]#[x(4)] 68707)
		getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(system x(4) 2 cache)
lbl(68707)	getSelf(x(4))
		move(x(0) x(1))
		move(g(1) x(0))
		tailSendMsg(load x(4) 2 cache)
		endDefinition(68663)
lbl(68723)	callBI('ByNeed' [x(3)]#[x(2)])
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(1) x(2))
lbl(68732)	return
lbl(68733)	deAllocateL3
		return
		endDefinition(68571)
lbl(68737)	definition(x(8) 68772 pid('BaseManager,Link/slow' 1 pos('./init/Module.oz' 92 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 626> 5)
		endDefinition(68737)
lbl(68772)	putRecord('#' [1 2 fast] x(10))
		setConstant(<N: Link>)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(185))
lbl(68784)	definition(x(7) 68956 pid('BaseManager,Apply/fast' 3 pos('./init/Module.oz' 114 6) nil 5) <P: 627> [y(146) y(164) y(185)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) toAtom x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		call(x(4) 2)
		putRecord(intApply 1 x(0))
		setValue(y(3))
		getSelf(x(3))
		sendMsg(trace x(3) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) 'import' x(3) cache)
		getSelf(x(4))
lbl(68839)	definition(x(1) 68927 pid('' 3 pos('./init/Module.oz' 118 6) nil 6) unit [x(4) g(0) y(0) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		move(x(2) y(0))
		createVariable(y(1))
		putConstant('from' x(4))
		testBI('HasFeature' [x(1) x(4)]#[x(5)] 68889)
		move(g(1) x(0))
		inlineDot(x(0) make x(4) cache)
		inlineDot(x(1) 'from' x(5) cache)
		move(x(5) x(0))
		move(y(1) x(1))
		call(x(4) 2)
		branch(68895)
lbl(68889)	move(y(1) x(1))
		genFastCall(<P: 623> 4)
lbl(68895)	move(g(1) x(0))
		inlineDot(x(0) resolve x(3) cache)
		move(g(2) x(0))
		move(y(1) x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(3) true <N: Link> true 2) 0)
		endDefinition(68839)
lbl(68927)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailCall(x(2) 2)
		endDefinition(68784)
lbl(68956)	definition(x(8) 68997 pid('BaseManager,Apply/slow' 1 pos('./init/Module.oz' 114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<P: 627> 7)
		endDefinition(68956)
lbl(68997)	putRecord('#' [1 2 fast] x(11))
		setConstant(<N: Apply>)
		setValue(x(8))
		setValue(x(7))
lbl(69007)	definition(x(7) 69119 pid('BaseManager,Enter/fast' 2 pos('./init/Module.oz' 131 6) nil 4) <P: 628> [y(146) y(156) y(148)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(intEnter 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(69115 x(0))
		move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 69100)
		putRecord(module 2 x(0))
		setConstant(alreadyInstalled)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(69100)	getSelf(x(0))
		inlineDot(x(0) <N: ModuleMap> x(0) cache)
		move(y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(69114)	return
lbl(69115)	deAllocateL3
		return
		endDefinition(69007)
lbl(69119)	definition(x(8) 69154 pid('BaseManager,Enter/slow' 1 pos('./init/Module.oz' 131 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<P: 628> 5)
		endDefinition(69119)
lbl(69154)	putRecord('#' [1 2 fast] x(12))
		setConstant(<N: Enter>)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern [1 name url] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69174)	definition(x(8) 69305 pid('BaseManager,link' 1 pos('./init/Module.oz' 147 6) nil 4) unit [x(7) y(185)])
		allocateL5
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(1 x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69211)
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(1))
lbl(69211)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69234)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(2))
		branch(69237)
lbl(69234)	getLiteral(<N: NONE> y(2))
lbl(69237)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69260)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69263)
lbl(69260)	getLiteral(<N: NONE> y(3))
lbl(69263)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(1) true <N: Link> false 2) 0)
		move(y(0) x(0))
		putConstant(1 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 69301)
		move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(69301)	deAllocateL5
		return
		endDefinition(69174)
lbl(69305)	putList(x(7))
		setConstant(link)
		setValue(x(8))
		putRecord(messagePattern [1 2 name url] x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69323)	definition(x(13) 69466 pid('BaseManager,apply' 1 pos('./init/Module.oz' 156 6) nil 4) unit [x(8) y(185)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69369)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(69369)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(name x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 69392)
		inlineDot(x(0) name x(1) cache)
		unify(x(1) y(3))
		branch(69395)
lbl(69392)	getLiteral(<N: NONE> y(3))
lbl(69395)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69418)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(4))
		branch(69421)
lbl(69418)	getLiteral(<N: NONE> y(4))
lbl(69421)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(2) x(2))
		genCall(gci(g(1) true <N: Apply> false 3) 0)
		move(y(0) x(0))
		putConstant(2 x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(0)] 69462)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
lbl(69462)	deAllocateL6
		return
		endDefinition(69323)
lbl(69466)	putList(x(8))
		setConstant(apply)
		setValue(x(13))
		putRecord(messagePattern [1 name url] x(13))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(69482)	definition(x(14) 69581 pid('BaseManager,enter' 1 pos('./init/Module.oz' 166 6) nil 4) unit [x(13) y(185)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(name x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 69530)
		inlineDot(x(0) name x(2) cache)
		unify(x(2) y(2))
		branch(69533)
lbl(69530)	getLiteral(<N: NONE> y(2))
lbl(69533)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(url x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 69556)
		inlineDot(x(0) url x(1) cache)
		unify(x(1) y(3))
		branch(69559)
lbl(69556)	getLiteral(<N: NONE> y(3))
lbl(69559)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 624> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(1) true <N: Enter> true 2) 0)
		endDefinition(69482)
lbl(69581)	putList(x(13))
		setConstant(enter)
		setValue(x(14))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(7))
		setValue(x(8))
		setValue(x(13))
		move(y(185) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('BaseManager' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(69620)	definition(x(2) 70474 pid('' 2 pos('./init/Module.oz' 178 3) nil 4) <P: 629> [y(187) y(185) y(146) y(55)])
		putList(x(2))
		setPredicateRef(<Q: 630>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 631>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 632>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 633>)
		setValue(x(2))
lbl(69650)	definitionCopy(x(3) 70469 pid('/body' 0 pos('./init/Module.oz' 178 3) [once] 12) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL5
		move(g(0) x(0))
		inlineDot(x(0) 'Pickle' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'OS' x(3) cache)
		inlineDot(x(0) 'Boot' x(4) cache)
		inlineDot(x(3) getEnv x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		putConstant('OZ_TRACE_MODULE' x(0))
		createVariableMove(y(3) x(1))
		call(x(3) 2)
		createVariable(y(4))
		testLiteral(y(3) false 69718)
		unify(y(4) g(1))
		branch(69730)
lbl(69718)	move(y(1) x(0))
		inlineDot(x(0) show x(1) cache)
		unify(x(1) y(4))
lbl(69730)	putList(x(0))
		setValue(g(2))
		setConstant(nil)
lbl(69736)	definition(x(7) 69747 pid('RootManager,trace/fast' 1 pos('./init/Module.oz' 196 2) nil 1) <Q: 630> [y(4)])
		genCall(gci(g(0) false '' true 1) 0)
		endDefinition(69736)
lbl(69747)	definition(x(8) 69773 pid('RootManager,trace/slow' 1 pos('./init/Module.oz' 196 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 630> 3)
		endDefinition(69747)
lbl(69773)	putRecord('#' [1 2 fast] x(9))
		setConstant(trace)
		setValue(x(8))
		setValue(x(7))
lbl(69783)	definition(x(7) 69850 pid('RootManager,load/fast' 2 pos('./init/Module.oz' 200 2) nil 6) <Q: 631> [y(0) g(3)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) load x(3) cache)
		move(g(1) x(4))
		inlineDot(x(4) toVs x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg(<N: Apply> x(4) 3 cache)
		endDefinition(69783)
lbl(69850)	definition(x(8) 69885 pid('RootManager,load/slow' 1 pos('./init/Module.oz' 200 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 631> 5)
		endDefinition(69850)
lbl(69885)	putRecord('#' [1 2 fast] x(10))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(69895)	definition(x(7) 70280 pid('RootManager,system/fast' 2 pos('./init/Module.oz' 205 2) nil 5) <Q: 632> [g(3) g(4) y(2) y(0)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) toAtom x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putRecord(systemOrBoot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		exHandler(70076)
		move(x(0) y(2))
		createCond(70070)
lbl(69943)	nextClause(70007)
		clause
		thread(69977)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(url 2 x(1))
		unifyLiteral(load)
		unifyVoid(1)
		deAllocateL5
		return
lbl(69977)	ask
lbl(69978)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(systemNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70007)	lastClause
		clause
		thread(70040)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(system 2 x(1))
		unifyLiteral(unknownBootModule)
		unifyVoid(1)
		deAllocateL5
		return
lbl(70040)	ask
lbl(70041)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(module 2 x(0))
		setConstant(bootNotFound)
		setValue(y(2))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70070)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(70076)	move(y(0) x(0))
		inlineDot(x(0) netloc x(1) cache)
		callBI('StringToAtom' [x(1)]#[x(2)])
		inlineDot(x(0) path x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		inlineDot(x(4) 1 x(4) cache)
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(46 x(1))
		createVariableMove(y(3) x(2))
		createVariable(x(3))
		genFastCall(<P: 2> 8)
		createVariable(y(4))
		match(y(2) ht(70259 [onScalar(boot 70128) onScalar(system 70179)]))
lbl(70128)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(boot 1 x(0))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) manager x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		call(x(2) 2)
		branch(70272)
lbl(70179)	move(g(0) x(0))
		inlineDot(x(0) toAtom x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		putRecord(system 2 x(0))
		setValue(y(3))
		setValue(y(2))
		getSelf(x(2))
		sendMsg(trace x(2) 1 cache)
		move(g(3) x(0))
		inlineDot(x(0) load x(2) cache)
		putRecord('#' 3 x(3))
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setValue(y(3))
		setConstant('.ozf')
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		call(x(2) 2)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(<N: Apply> x(4) 3 cache)
		branch(70272)
lbl(70259)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(220)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70272)	unify(y(1) y(4))
		popEx
		deAllocateL5
		return
		endDefinition(69895)
lbl(70280)	definition(x(8) 70315 pid('RootManager,system/slow' 1 pos('./init/Module.oz' 205 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 632> 5)
		endDefinition(70280)
lbl(70315)	putRecord('#' [1 2 fast] x(11))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('RootManager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
lbl(70374)	definition(x(7) 70388 pid('Manager,system/fast' 2 pos('./init/Module.oz' 235 2) nil 3) <Q: 633> [y(1)])
		tailSendMsg(<N: Link> g(0) 2 cache)
		endDefinition(70374)
lbl(70388)	definition(x(8) 70423 pid('Manager,system/slow' 1 pos('./init/Module.oz' 235 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 633> 5)
		endDefinition(70388)
lbl(70423)	putRecord('#' [1 2 fast] x(9))
		setConstant(system)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Manager' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [manager root] g(5))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL5
		return
		endDefinition(69650)
lbl(70469)	tailCall(x(3) 0)
		endDefinition(69620)
lbl(70474)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		putConstant('class' x(4))
		putConstant(object x(5))
		putRecord('export' [manager root] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(146) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(70530)	definition(x(2) 70826 pid('' 2 pos('./compiler/PrintName.oz' 22 0) nil 3) <P: 634> [y(53) y(39) y(52) y(47) y(54)])
		putList(x(0))
		setPredicateRef(<Q: 635>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 636>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 637>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 638>)
		setValue(x(0))
lbl(70560)	definitionCopy(x(2) 70821 pid('/body' 0 pos('./compiler/PrintName.oz' 22 0) [once] 2) unit [g(0) g(1) g(2) g(3) g(4) x(1)])
lbl(70566)	definition(x(0) 70592 pid('IsIDChar' 2 pos('./compiler/PrintName.oz' 27 3) nil 4) <Q: 635> [g(0)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 70580)
		getLiteral(true x(1))
		return
lbl(70580)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(70566)
lbl(70592)	definition(x(1) 70663 pid('IsQuotedVariable' 2 pos('./compiler/PrintName.oz' 31 3) nil 3) <Q: 636> nil)
		match(x(0) ht(70648 [onScalar(nil 70601) onRecord('|' 2 70605)]))
lbl(70601)	getLiteral(false x(1))
		return
lbl(70605)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 70630)
lbl(70621)	testLiteral(y(2) nil 70630)
lbl(70625)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(70630)	testNumber(y(1) 0 70639)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(70639)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 636> 5)
lbl(70648)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(38)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(70592)
lbl(70663)	definition(x(1) 70735 pid('IsPrintName' 2 pos('./compiler/PrintName.oz' 41 3) nil 4) <Q: 637> [g(1) g(2) x(0)])
		testBI('IsAtom' [x(0)]#[x(2)] 70729)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70716 [onScalar(nil 70679) onRecord('|' 2 70683)]))
lbl(70679)	getLiteral(false x(1))
		return
lbl(70683)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 70696)
lbl(70690)	move(x(2) x(0))
		genFastCall(<Q: 636> 5)
lbl(70696)	testBI('Char.isUpper' [x(0)]#[x(3)] 70712)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(70712)	getLiteral(false x(1))
		return
lbl(70716)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(53)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70729)	getLiteral(false x(1))
		return
		endDefinition(70663)
lbl(70735)	definition(x(0) 70810 pid('DowncasePrintName' 2 pos('./compiler/PrintName.oz' 57 3) nil 5) <Q: 638> [g(1) g(2) g(3) g(4)])
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(70795 [onScalar(nil 70747) onRecord('|' 2 70751)]))
lbl(70747)	unify(x(1) x(0))
		return
lbl(70751)	getVarVar(x(2) x(3))
		testBI('Char.isUpper' [x(2)]#[x(4)] 70774)
		callBI('Char.toLower' [x(2)]#[x(0)])
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		callBI('StringToAtom' [x(2)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(70774)	testNumber(x(2) 96 70782)
lbl(70778)	unify(x(1) x(0))
		return
lbl(70782)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(62)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(70795)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(65)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(70735)
lbl(70810)	getRecord('export' [downcase is] g(5))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(70560)
lbl(70821)	tailCall(x(2) 0)
		endDefinition(70530)
lbl(70826)	putConstant('procedure/2' x(4))
		putConstant('procedure/2' x(5))
		putRecord('export' [downcase is] x(1))
		setValue(x(4))
		setValue(x(5))
		putConstant('import' x(0))
		createVariableMove(y(54) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(any 1 x(4))
		setConstant(det)
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setConstant(det)
		setValue(x(3))
		putList(x(1))
		setConstant(det)
		setValue(x(2))
		putList(x(6))
		setConstant(false)
		setConstant(nil)
		putList(x(5))
		setConstant(false)
		setValue(x(6))
		putList(x(9))
		setConstant(number)
		setConstant(nil)
		putList(x(8))
		setConstant(number)
		setValue(x(9))
		putList(x(7))
		setConstant(number)
		setValue(x(8))
		putRecord(builtin [det imods types] x(0))
		setValue(x(1))
		setValue(x(5))
		setValue(x(7))
		putRecord(any 1 x(14))
		setConstant(det)
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(12))
		setConstant(det)
		setValue(x(13))
		putList(x(11))
		setConstant(det)
		setValue(x(12))
		putList(x(16))
		setConstant(false)
		setConstant(nil)
		putList(x(15))
		setConstant(false)
		setValue(x(16))
		putList(x(19))
		setConstant(number)
		setConstant(nil)
		putList(x(18))
		setConstant(number)
		setValue(x(19))
		putList(x(17))
		setConstant(number)
		setValue(x(18))
		putRecord(builtin [det imods types] x(10))
		setValue(x(11))
		setValue(x(15))
		setValue(x(17))
		putRecord(any 1 x(23))
		setConstant(det)
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(21))
		setConstant(det)
		setValue(x(22))
		putList(x(24))
		setConstant(false)
		setConstant(nil)
		putList(x(26))
		setConstant(int)
		setConstant(nil)
		putList(x(25))
		setConstant(int)
		setValue(x(26))
		putRecord(builtin [det imods types] x(20))
		setValue(x(21))
		setValue(x(24))
		setValue(x(25))
		putList(x(29))
		setConstant(det)
		setConstant(nil)
		putList(x(28))
		setConstant(det)
		setValue(x(29))
		putList(x(31))
		setConstant(false)
		setConstant(nil)
		putList(x(30))
		setConstant(false)
		setValue(x(31))
		putList(x(33))
		setConstant(record)
		setConstant(nil)
		putList(x(32))
		setConstant('class')
		setValue(x(33))
		putRecord(builtin [det imods types] x(27))
		setValue(x(28))
		setValue(x(30))
		setValue(x(32))
		putRecord(any 1 x(38))
		setConstant(det)
		putList(x(37))
		setValue(x(38))
		setConstant(nil)
		putList(x(36))
		setConstant(det)
		setValue(x(37))
		putList(x(35))
		setConstant(det)
		setValue(x(36))
		putList(x(40))
		setConstant(false)
		setConstant(nil)
		putList(x(39))
		setConstant(false)
		setValue(x(40))
		putList(x(43))
		setConstant(number)
		setConstant(nil)
		putList(x(42))
		setConstant(number)
		setValue(x(43))
		putList(x(41))
		setConstant(number)
		setValue(x(42))
		putRecord(builtin [det imods types] x(34))
		setValue(x(35))
		setValue(x(39))
		setValue(x(41))
		putRecord(any 1 x(47))
		setConstant(det)
		putList(x(46))
		setValue(x(47))
		setConstant(nil)
		putList(x(45))
		setConstant(det)
		setValue(x(46))
		putList(x(48))
		setConstant(false)
		setConstant(nil)
		putList(x(50))
		setConstant(int)
		setConstant(nil)
		putList(x(49))
		setConstant(int)
		setValue(x(50))
		putRecord(builtin [det imods types] x(44))
		setValue(x(45))
		setValue(x(48))
		setValue(x(49))
		putList(x(54))
		setConstant(any)
		setConstant(nil)
		putList(x(53))
		setConstant(det)
		setValue(x(54))
		putList(x(52))
		setConstant(detOrKinded)
		setValue(x(53))
		putList(x(56))
		setConstant(false)
		setConstant(nil)
		putList(x(55))
		setConstant(false)
		setValue(x(56))
		putList(x(59))
		setConstant(value)
		setConstant(nil)
		putList(x(58))
		setConstant(feature)
		setValue(x(59))
		putList(x(57))
		setConstant(recordCOrChunk)
		setValue(x(58))
		putRecord(builtin [det imods types] x(51))
		setValue(x(52))
		setValue(x(55))
		setValue(x(57))
		putRecord(any 1 x(64))
		setConstant(det)
		putList(x(63))
		setValue(x(64))
		setConstant(nil)
		putList(x(62))
		setConstant(det)
		setValue(x(63))
		putList(x(61))
		setConstant(det)
		setValue(x(62))
		putList(x(66))
		setConstant(false)
		setConstant(nil)
		putList(x(65))
		setConstant(false)
		setValue(x(66))
		putList(x(69))
		setConstant(float)
		setConstant(nil)
		putList(x(68))
		setConstant(float)
		setValue(x(69))
		putList(x(67))
		setConstant(float)
		setValue(x(68))
		putRecord(builtin [det imods types] x(60))
		setValue(x(61))
		setValue(x(65))
		setValue(x(67))
		putRecord(any 1 x(74))
		setConstant(det)
		putList(x(73))
		setValue(x(74))
		setConstant(nil)
		putList(x(72))
		setConstant(det)
		setValue(x(73))
		putList(x(71))
		setConstant(det)
		setValue(x(72))
		putList(x(76))
		setConstant(false)
		setConstant(nil)
		putList(x(75))
		setConstant(false)
		setValue(x(76))
		putList(x(79))
		setConstant(bool)
		setConstant(nil)
		putList(x(78))
		setConstant(comparable)
		setValue(x(79))
		putList(x(77))
		setConstant(comparable)
		setValue(x(78))
		putRecord(builtin [det imods negated test types] x(70))
		setValue(x(71))
		setValue(x(75))
		setConstant('>=')
		setConstant(true)
		setValue(x(77))
		putList(x(82))
		setConstant(any)
		setConstant(nil)
		putList(x(81))
		setConstant(any)
		setValue(x(82))
		putList(x(84))
		setConstant(false)
		setConstant(nil)
		putList(x(83))
		setConstant(false)
		setValue(x(84))
		putList(x(86))
		setConstant(value)
		setConstant(nil)
		putList(x(85))
		setConstant(value)
		setValue(x(86))
		putRecord(builtin [det imods types] x(80))
		setValue(x(81))
		setValue(x(83))
		setValue(x(85))
		putList(x(89))
		setConstant(any)
		setConstant(nil)
		putList(x(88))
		setConstant(any)
		setValue(x(89))
		putList(x(91))
		setConstant(false)
		setConstant(nil)
		putList(x(90))
		setConstant(false)
		setValue(x(91))
		putList(x(93))
		setConstant(value)
		setConstant(nil)
		putList(x(92))
		setConstant(value)
		setValue(x(93))
		putRecord(builtin [det imods types] x(87))
		setValue(x(88))
		setValue(x(90))
		setValue(x(92))
		putRecord(any 1 x(98))
		setConstant(det)
		putList(x(97))
		setValue(x(98))
		setConstant(nil)
		putList(x(96))
		setConstant(det)
		setValue(x(97))
		putList(x(95))
		setConstant(det)
		setValue(x(96))
		putList(x(100))
		setConstant(false)
		setConstant(nil)
		putList(x(99))
		setConstant(false)
		setValue(x(100))
		putList(x(103))
		setConstant(bool)
		setConstant(nil)
		putList(x(102))
		setConstant(comparable)
		setValue(x(103))
		putList(x(101))
		setConstant(comparable)
		setValue(x(102))
		putRecord(builtin [det imods negated test types] x(94))
		setValue(x(95))
		setValue(x(99))
		setConstant('>')
		setConstant(true)
		setValue(x(101))
		putRecord(any 1 x(108))
		setConstant(det)
		putList(x(107))
		setValue(x(108))
		setConstant(nil)
		putList(x(106))
		setConstant(detOrKinded)
		setValue(x(107))
		putList(x(105))
		setConstant(detOrKinded)
		setValue(x(106))
		putList(x(110))
		setConstant(false)
		setConstant(nil)
		putList(x(109))
		setConstant(false)
		setValue(x(110))
		putList(x(113))
		setConstant(bool)
		setConstant(nil)
		putList(x(112))
		setConstant(value)
		setValue(x(113))
		putList(x(111))
		setConstant(value)
		setValue(x(112))
		putRecord(builtin [det imods negated test types] x(104))
		setValue(x(105))
		setValue(x(109))
		setConstant('\\=')
		setConstant(true)
		setValue(x(111))
		putRecord(any 1 x(118))
		setConstant(det)
		putList(x(117))
		setValue(x(118))
		setConstant(nil)
		putList(x(116))
		setConstant(det)
		setValue(x(117))
		putList(x(115))
		setConstant(det)
		setValue(x(116))
		putList(x(120))
		setConstant(false)
		setConstant(nil)
		putList(x(119))
		setConstant(false)
		setValue(x(120))
		putList(x(123))
		setConstant(bool)
		setConstant(nil)
		putList(x(122))
		setConstant(comparable)
		setValue(x(123))
		putList(x(121))
		setConstant(comparable)
		setValue(x(122))
		putRecord(builtin [det imods negated test types] x(114))
		setValue(x(115))
		setValue(x(119))
		setConstant('=<')
		setConstant(true)
		setValue(x(121))
		putRecord(any 1 x(128))
		setConstant(det)
		putList(x(127))
		setValue(x(128))
		setConstant(nil)
		putList(x(126))
		setConstant(det)
		setValue(x(127))
		putList(x(125))
		setConstant(det)
		setValue(x(126))
		putList(x(130))
		setConstant(false)
		setConstant(nil)
		putList(x(129))
		setConstant(false)
		setValue(x(130))
		putList(x(133))
		setConstant(bool)
		setConstant(nil)
		putList(x(132))
		setConstant(comparable)
		setValue(x(133))
		putList(x(131))
		setConstant(comparable)
		setValue(x(132))
		putRecord(builtin [det imods negated test types] x(124))
		setValue(x(125))
		setValue(x(129))
		setConstant('<')
		setConstant(true)
		setValue(x(131))
		putList(x(136))
		setConstant(any)
		setConstant(nil)
		putList(x(135))
		setConstant(any)
		setValue(x(136))
		putList(x(137))
		setConstant(false)
		setConstant(nil)
		putList(x(139))
		setConstant(value)
		setConstant(nil)
		putList(x(138))
		setConstant(value)
		setValue(x(139))
		putRecord(builtin [det imods types] x(134))
		setValue(x(135))
		setValue(x(137))
		setValue(x(138))
		putRecord(any 1 x(143))
		setConstant(det)
		putList(x(142))
		setValue(x(143))
		setConstant(nil)
		putList(x(141))
		setConstant(det)
		setValue(x(142))
		putList(x(144))
		setConstant(false)
		setConstant(nil)
		putList(x(146))
		setConstant(number)
		setConstant(nil)
		putList(x(145))
		setConstant(number)
		setValue(x(146))
		putRecord(builtin [det imods types] x(140))
		setValue(x(141))
		setValue(x(144))
		setValue(x(145))
		putList(x(149))
		setConstant(any)
		setConstant(nil)
		putList(x(148))
		setConstant(det)
		setValue(x(149))
		putList(x(150))
		setConstant(false)
		setConstant(nil)
		putList(x(152))
		setConstant(value)
		setConstant(nil)
		putList(x(151))
		setConstant(cell)
		setValue(x(152))
		putRecord(builtin [det imods types] x(147))
		setValue(x(148))
		setValue(x(150))
		setValue(x(151))
		putRecord(any 1 x(156))
		setConstant(det)
		putList(x(155))
		setValue(x(156))
		setConstant(nil)
		putList(x(154))
		setConstant(det)
		setValue(x(155))
		putList(x(157))
		setConstant(false)
		setConstant(nil)
		putList(x(159))
		setConstant(float)
		setConstant(nil)
		putList(x(158))
		setConstant(float)
		setValue(x(159))
		putRecord(builtin [det imods types] x(153))
		setValue(x(154))
		setValue(x(157))
		setValue(x(158))
		putRecord(any 1 x(164))
		setConstant(det)
		putList(x(163))
		setValue(x(164))
		setConstant(nil)
		putList(x(162))
		setConstant(det)
		setValue(x(163))
		putList(x(161))
		setConstant(det)
		setValue(x(162))
		putList(x(166))
		setConstant(false)
		setConstant(nil)
		putList(x(165))
		setConstant(false)
		setValue(x(166))
		putList(x(169))
		setConstant(record)
		setConstant(nil)
		putList(x(168))
		setConstant(record)
		setValue(x(169))
		putList(x(167))
		setConstant(record)
		setValue(x(168))
		putRecord(builtin [det imods types] x(160))
		setValue(x(161))
		setValue(x(165))
		setValue(x(167))
		putRecord(any 1 x(175))
		setConstant(det)
		putList(x(174))
		setValue(x(175))
		setConstant(nil)
		putList(x(173))
		setConstant(any)
		setValue(x(174))
		putList(x(172))
		setConstant(det)
		setValue(x(173))
		putList(x(171))
		setConstant(det)
		setValue(x(172))
		putList(x(178))
		setConstant(false)
		setConstant(nil)
		putList(x(177))
		setConstant(false)
		setValue(x(178))
		putList(x(176))
		setConstant(false)
		setValue(x(177))
		putList(x(182))
		setConstant(record)
		setConstant(nil)
		putList(x(181))
		setConstant(value)
		setValue(x(182))
		putList(x(180))
		setConstant(feature)
		setValue(x(181))
		putList(x(179))
		setConstant(record)
		setValue(x(180))
		putRecord(builtin [det imods types] x(170))
		setValue(x(171))
		setValue(x(176))
		setValue(x(179))
		putRecord(any 1 x(187))
		setConstant(det)
		putList(x(186))
		setValue(x(187))
		setConstant(nil)
		putList(x(185))
		setConstant(det)
		setValue(x(186))
		putList(x(184))
		setConstant(det)
		setValue(x(185))
		putList(x(189))
		setConstant(false)
		setConstant(nil)
		putList(x(188))
		setConstant(false)
		setValue(x(189))
		putRecord(pair 2 x(193))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(192))
		setValue(x(193))
		putList(x(194))
		setConstant(record)
		setConstant(nil)
		putList(x(191))
		setValue(x(192))
		setValue(x(194))
		putList(x(190))
		setConstant(record)
		setValue(x(191))
		putRecord(builtin [det imods types] x(183))
		setValue(x(184))
		setValue(x(188))
		setValue(x(190))
		putList(x(197))
		setConstant(any)
		setConstant(nil)
		putList(x(196))
		setConstant(det)
		setValue(x(197))
		putList(x(199))
		setConstant(false)
		setConstant(nil)
		putList(x(198))
		setConstant(false)
		setValue(x(199))
		putList(x(201))
		setConstant('unit')
		setConstant(nil)
		putList(x(200))
		setConstant(int)
		setValue(x(201))
		putRecord(builtin [det imods types] x(195))
		setValue(x(196))
		setValue(x(198))
		setValue(x(200))
		putRecord(any 1 x(206))
		setConstant(det)
		putList(x(205))
		setValue(x(206))
		setConstant(nil)
		putList(x(204))
		setConstant(det)
		setValue(x(205))
		putList(x(203))
		setConstant(det)
		setValue(x(204))
		putList(x(208))
		setConstant(false)
		setConstant(nil)
		putList(x(207))
		setConstant(false)
		setValue(x(208))
		putList(x(211))
		setConstant(bool)
		setConstant(nil)
		putList(x(210))
		setConstant(bool)
		setValue(x(211))
		putList(x(209))
		setConstant(bool)
		setValue(x(210))
		putRecord(builtin [det imods test types] x(202))
		setValue(x(203))
		setValue(x(207))
		setConstant(true)
		setValue(x(209))
		putRecord(any 1 x(215))
		setConstant(det)
		putList(x(214))
		setValue(x(215))
		setConstant(nil)
		putList(x(213))
		setConstant(det)
		setValue(x(214))
		putList(x(216))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(219))
		setConstant(feature)
		putList(x(218))
		setValue(x(219))
		setConstant(nil)
		putList(x(217))
		setConstant(record)
		setValue(x(218))
		putRecord(builtin [det imods types] x(212))
		setValue(x(213))
		setValue(x(216))
		setValue(x(217))
		putRecord(any 1 x(223))
		setConstant(det)
		putList(x(222))
		setValue(x(223))
		setConstant(nil)
		putList(x(221))
		setConstant(det)
		setValue(x(222))
		putList(x(224))
		setConstant(false)
		setConstant(nil)
		putList(x(226))
		setConstant(int)
		setConstant(nil)
		putList(x(225))
		setConstant(array)
		setValue(x(226))
		putRecord(builtin [det imods types] x(220))
		setValue(x(221))
		setValue(x(224))
		setValue(x(225))
		putRecord(any 1 x(230))
		setConstant(det)
		putList(x(229))
		setValue(x(230))
		setConstant(nil)
		putList(x(228))
		setConstant(det)
		setValue(x(229))
		putList(x(231))
		setConstant(false)
		setConstant(nil)
		putList(x(233))
		setConstant(int)
		setConstant(nil)
		putList(x(232))
		setConstant(array)
		setValue(x(233))
		putRecord(builtin [det imods types] x(227))
		setValue(x(228))
		setValue(x(231))
		setValue(x(232))
		putRecord(any 1 x(237))
		setConstant(det)
		putList(x(236))
		setValue(x(237))
		setConstant(nil)
		putList(x(235))
		setConstant(det)
		setValue(x(236))
		putList(x(238))
		setConstant(false)
		setConstant(nil)
		putList(x(240))
		setConstant(float)
		setConstant(nil)
		putList(x(239))
		setConstant(float)
		setValue(x(240))
		putRecord(builtin [det imods types] x(234))
		setValue(x(235))
		setValue(x(238))
		setValue(x(239))
		putList(x(243))
		setConstant(any)
		setConstant(nil)
		putList(x(242))
		setConstant(det)
		setValue(x(243))
		putList(x(245))
		setConstant(false)
		setConstant(nil)
		putList(x(244))
		setConstant(false)
		setValue(x(245))
		putList(x(247))
		setConstant(value)
		setConstant(nil)
		putList(x(246))
		setConstant(cell)
		setValue(x(247))
		putRecord(builtin [det imods types] x(241))
		setValue(x(242))
		setValue(x(244))
		setValue(x(246))
		putRecord(any 1 x(251))
		setConstant(det)
		putList(x(250))
		setValue(x(251))
		setConstant(nil)
		putList(x(249))
		setConstant(det)
		setValue(x(250))
		putList(x(252))
		setConstant(false)
		setConstant(nil)
		putList(x(254))
		setConstant(float)
		setConstant(nil)
		putList(x(253))
		setConstant(float)
		setValue(x(254))
		putRecord(builtin [det imods types] x(248))
		setValue(x(249))
		setValue(x(252))
		setValue(x(253))
		putRecord(any 1 x(259))
		setConstant(det)
		putList(x(258))
		setValue(x(259))
		setConstant(nil)
		putList(x(257))
		setConstant(det)
		setValue(x(258))
		putList(x(256))
		setConstant(det)
		setValue(x(257))
		putList(x(261))
		setConstant(false)
		setConstant(nil)
		putList(x(260))
		setConstant(false)
		setValue(x(261))
		putList(x(264))
		setConstant(float)
		setConstant(nil)
		putList(x(263))
		setConstant(float)
		setValue(x(264))
		putList(x(262))
		setConstant(float)
		setValue(x(263))
		putRecord(builtin [det imods types] x(255))
		setValue(x(256))
		setValue(x(260))
		setValue(x(262))
		putRecord(any 1 x(268))
		setConstant(det)
		putList(x(267))
		setValue(x(268))
		setConstant(nil)
		putList(x(266))
		setConstant(det)
		setValue(x(267))
		putList(x(269))
		setConstant(false)
		setConstant(nil)
		putList(x(271))
		setConstant(string)
		setConstant(nil)
		putList(x(270))
		setConstant(atom)
		setValue(x(271))
		putRecord(builtin [det imods types] x(265))
		setValue(x(266))
		setValue(x(269))
		setValue(x(270))
		putList(x(274))
		setConstant(det)
		setConstant(nil)
		putList(x(273))
		setConstant(det)
		setValue(x(274))
		putList(x(276))
		setConstant(false)
		setConstant(nil)
		putList(x(275))
		setConstant(false)
		setValue(x(276))
		putList(x(278))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(277))
		setConstant(bitArray)
		setValue(x(278))
		putRecord(builtin [det imods types] x(272))
		setValue(x(273))
		setValue(x(275))
		setValue(x(277))
		putRecord(any 1 x(282))
		setConstant(det)
		putList(x(281))
		setValue(x(282))
		setConstant(nil)
		putList(x(280))
		setConstant(det)
		setValue(x(281))
		putList(x(283))
		setConstant(false)
		setConstant(nil)
		putList(x(285))
		setConstant(int)
		setConstant(nil)
		putList(x(284))
		setConstant(bitArray)
		setValue(x(285))
		putRecord(builtin [det imods types] x(279))
		setValue(x(280))
		setValue(x(283))
		setValue(x(284))
		putList(x(288))
		setConstant(det)
		setConstant(nil)
		putList(x(287))
		setConstant(det)
		setValue(x(288))
		putList(x(290))
		setConstant(false)
		setConstant(nil)
		putList(x(289))
		setConstant(false)
		setValue(x(290))
		putList(x(292))
		setConstant(int)
		setConstant(nil)
		putList(x(291))
		setConstant(bitArray)
		setValue(x(292))
		putRecord(builtin [det imods types] x(286))
		setValue(x(287))
		setValue(x(289))
		setValue(x(291))
		putRecord(any 1 x(296))
		setConstant(det)
		putList(x(295))
		setValue(x(296))
		setConstant(nil)
		putList(x(294))
		setConstant(det)
		setValue(x(295))
		putList(x(297))
		setConstant(false)
		setConstant(nil)
		putList(x(299))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(298))
		setConstant(bitArray)
		setValue(x(299))
		putRecord(builtin [det imods types] x(293))
		setValue(x(294))
		setValue(x(297))
		setValue(x(298))
		putRecord(any 1 x(303))
		setConstant(det)
		putList(x(302))
		setValue(x(303))
		setConstant(nil)
		putList(x(301))
		setConstant(det)
		setValue(x(302))
		putList(x(304))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(307))
		setConstant(int)
		putList(x(306))
		setValue(x(307))
		setConstant(nil)
		putList(x(305))
		setConstant(bitArray)
		setValue(x(306))
		putRecord(builtin [det imods types] x(300))
		setValue(x(301))
		setValue(x(304))
		setValue(x(305))
		putRecord(any 1 x(312))
		setConstant(det)
		putList(x(311))
		setValue(x(312))
		setConstant(nil)
		putList(x(310))
		setConstant(det)
		setValue(x(311))
		putList(x(309))
		setConstant(det)
		setValue(x(310))
		putList(x(314))
		setConstant(false)
		setConstant(nil)
		putList(x(313))
		setConstant(false)
		setValue(x(314))
		putList(x(317))
		setConstant(bool)
		setConstant(nil)
		putList(x(316))
		setConstant(bitArray)
		setValue(x(317))
		putList(x(315))
		setConstant(bitArray)
		setValue(x(316))
		putRecord(builtin [det imods test types] x(308))
		setValue(x(309))
		setValue(x(313))
		setConstant(true)
		setValue(x(315))
		putRecord(any 1 x(321))
		setConstant(det)
		putList(x(320))
		setValue(x(321))
		setConstant(nil)
		putList(x(319))
		setConstant(det)
		setValue(x(320))
		putList(x(322))
		setConstant(false)
		setConstant(nil)
		putList(x(324))
		setConstant(int)
		setConstant(nil)
		putList(x(323))
		setConstant(bitArray)
		setValue(x(324))
		putRecord(builtin [det imods types] x(318))
		setValue(x(319))
		setValue(x(322))
		setValue(x(323))
		putRecord(any 1 x(328))
		setConstant(det)
		putList(x(327))
		setValue(x(328))
		setConstant(nil)
		putList(x(326))
		setConstant(det)
		setValue(x(327))
		putList(x(329))
		setConstant(false)
		setConstant(nil)
		putList(x(331))
		setConstant(bool)
		setConstant(nil)
		putList(x(330))
		setConstant(value)
		setValue(x(331))
		putRecord(builtin [det imods test types] x(325))
		setValue(x(326))
		setValue(x(329))
		setConstant(true)
		setValue(x(330))
		putRecord(any 1 x(335))
		setConstant(det)
		putList(x(334))
		setValue(x(335))
		setConstant(nil)
		putList(x(333))
		setConstant(det)
		setValue(x(334))
		putList(x(336))
		setConstant(false)
		setConstant(nil)
		putList(x(338))
		setConstant(int)
		setConstant(nil)
		putList(x(337))
		setConstant(bitArray)
		setValue(x(338))
		putRecord(builtin [det imods types] x(332))
		setValue(x(333))
		setValue(x(336))
		setValue(x(337))
		putRecord(any 1 x(343))
		setConstant(det)
		putList(x(342))
		setValue(x(343))
		setConstant(nil)
		putList(x(341))
		setConstant(det)
		setValue(x(342))
		putList(x(340))
		setConstant(det)
		setValue(x(341))
		putList(x(345))
		setConstant(false)
		setConstant(nil)
		putList(x(344))
		setConstant(false)
		setValue(x(345))
		putList(x(348))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(347))
		setConstant(int)
		setValue(x(348))
		putList(x(346))
		setConstant(int)
		setValue(x(347))
		putRecord(builtin [det imods types] x(339))
		setValue(x(340))
		setValue(x(344))
		setValue(x(346))
		putList(x(351))
		setConstant(det)
		setConstant(nil)
		putList(x(350))
		setConstant(det)
		setValue(x(351))
		putList(x(353))
		setConstant(false)
		setConstant(nil)
		putList(x(352))
		setConstant(false)
		setValue(x(353))
		putList(x(355))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(354))
		setConstant(bitArray)
		setValue(x(355))
		putRecord(builtin [det imods types] x(349))
		setValue(x(350))
		setValue(x(352))
		setValue(x(354))
		putList(x(358))
		setConstant(det)
		setConstant(nil)
		putList(x(357))
		setConstant(det)
		setValue(x(358))
		putList(x(360))
		setConstant(false)
		setConstant(nil)
		putList(x(359))
		setConstant(false)
		setValue(x(360))
		putList(x(362))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(361))
		setConstant(bitArray)
		setValue(x(362))
		putRecord(builtin [det imods types] x(356))
		setValue(x(357))
		setValue(x(359))
		setValue(x(361))
		putList(x(365))
		setConstant(det)
		setConstant(nil)
		putList(x(364))
		setConstant(det)
		setValue(x(365))
		putList(x(367))
		setConstant(false)
		setConstant(nil)
		putList(x(366))
		setConstant(false)
		setValue(x(367))
		putList(x(369))
		setConstant(int)
		setConstant(nil)
		putList(x(368))
		setConstant(bitArray)
		setValue(x(369))
		putRecord(builtin [det imods types] x(363))
		setValue(x(364))
		setValue(x(366))
		setValue(x(368))
		putRecord(any 1 x(374))
		setConstant(det)
		putList(x(373))
		setValue(x(374))
		setConstant(nil)
		putList(x(372))
		setConstant(det)
		setValue(x(373))
		putList(x(371))
		setConstant(det)
		setValue(x(372))
		putList(x(376))
		setConstant(false)
		setConstant(nil)
		putList(x(375))
		setConstant(false)
		setValue(x(376))
		putList(x(379))
		setConstant(bool)
		setConstant(nil)
		putList(x(378))
		setConstant(int)
		setValue(x(379))
		putList(x(377))
		setConstant(bitArray)
		setValue(x(378))
		putRecord(builtin [det imods test types] x(370))
		setValue(x(371))
		setValue(x(375))
		setConstant(true)
		setValue(x(377))
		putRecord(any 1 x(383))
		setConstant(det)
		putList(x(382))
		setValue(x(383))
		setConstant(nil)
		putList(x(381))
		setConstant(det)
		setValue(x(382))
		putList(x(384))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(387))
		setConstant(int)
		putList(x(386))
		setValue(x(387))
		setConstant(nil)
		putList(x(385))
		setConstant(bitArray)
		setValue(x(386))
		putRecord(builtin [det imods types] x(380))
		setValue(x(381))
		setValue(x(384))
		setValue(x(385))
		putRecord(any 1 x(391))
		setConstant(det)
		putList(x(390))
		setValue(x(391))
		setConstant(nil)
		putList(x(389))
		setConstant(det)
		setValue(x(390))
		putList(x(392))
		setConstant(false)
		setConstant(nil)
		putList(x(394))
		setConstant(record)
		setConstant(nil)
		putList(x(393))
		setConstant(virtualString)
		setValue(x(394))
		putRecord(builtin [det imods types] x(388))
		setValue(x(389))
		setValue(x(392))
		setValue(x(393))
		putList(x(397))
		setConstant(any)
		setConstant(nil)
		putList(x(396))
		setConstant(any)
		setValue(x(397))
		putList(x(398))
		setConstant(false)
		setConstant(nil)
		putList(x(400))
		setConstant(value)
		setConstant(nil)
		putList(x(399))
		setConstant(value)
		setValue(x(400))
		putRecord(builtin [det imods types] x(395))
		setValue(x(396))
		setValue(x(398))
		setValue(x(399))
		putRecord(any 1 x(404))
		setConstant(det)
		putList(x(403))
		setValue(x(404))
		setConstant(nil)
		putList(x(402))
		setConstant(det)
		setValue(x(403))
		putList(x(405))
		setConstant(false)
		setConstant(nil)
		putList(x(407))
		setConstant(float)
		setConstant(nil)
		putList(x(406))
		setConstant(float)
		setValue(x(407))
		putRecord(builtin [det imods types] x(401))
		setValue(x(402))
		setValue(x(405))
		setValue(x(406))
		putRecord(any 1 x(411))
		setConstant(det)
		putList(x(410))
		setValue(x(411))
		setConstant(nil)
		putList(x(409))
		setConstant(det)
		setValue(x(410))
		putList(x(412))
		setConstant(false)
		setConstant(nil)
		putList(x(414))
		setConstant(bool)
		setConstant(nil)
		putList(x(413))
		setConstant(char)
		setValue(x(414))
		putRecord(builtin [det imods test types] x(408))
		setValue(x(409))
		setValue(x(412))
		setConstant(true)
		setValue(x(413))
		putRecord(any 1 x(418))
		setConstant(det)
		putList(x(417))
		setValue(x(418))
		setConstant(nil)
		putList(x(416))
		setConstant(det)
		setValue(x(417))
		putList(x(419))
		setConstant(false)
		setConstant(nil)
		putList(x(421))
		setConstant(bool)
		setConstant(nil)
		putList(x(420))
		setConstant(char)
		setValue(x(421))
		putRecord(builtin [det imods test types] x(415))
		setValue(x(416))
		setValue(x(419))
		setConstant(true)
		setValue(x(420))
		putRecord(any 1 x(425))
		setConstant(det)
		putList(x(424))
		setValue(x(425))
		setConstant(nil)
		putList(x(423))
		setConstant(det)
		setValue(x(424))
		putList(x(426))
		setConstant(false)
		setConstant(nil)
		putList(x(428))
		setConstant(bool)
		setConstant(nil)
		putList(x(427))
		setConstant(char)
		setValue(x(428))
		putRecord(builtin [det imods test types] x(422))
		setValue(x(423))
		setValue(x(426))
		setConstant(true)
		setValue(x(427))
		putRecord(any 1 x(432))
		setConstant(det)
		putList(x(431))
		setValue(x(432))
		setConstant(nil)
		putList(x(430))
		setConstant(det)
		setValue(x(431))
		putList(x(433))
		setConstant(false)
		setConstant(nil)
		putList(x(435))
		setConstant(bool)
		setConstant(nil)
		putList(x(434))
		setConstant(char)
		setValue(x(435))
		putRecord(builtin [det imods test types] x(429))
		setValue(x(430))
		setValue(x(433))
		setConstant(true)
		setValue(x(434))
		putRecord(any 1 x(439))
		setConstant(det)
		putList(x(438))
		setValue(x(439))
		setConstant(nil)
		putList(x(437))
		setConstant(det)
		setValue(x(438))
		putList(x(440))
		setConstant(false)
		setConstant(nil)
		putList(x(442))
		setConstant(bool)
		setConstant(nil)
		putList(x(441))
		setConstant(char)
		setValue(x(442))
		putRecord(builtin [det imods test types] x(436))
		setValue(x(437))
		setValue(x(440))
		setConstant(true)
		setValue(x(441))
		putRecord(any 1 x(446))
		setConstant(det)
		putList(x(445))
		setValue(x(446))
		setConstant(nil)
		putList(x(444))
		setConstant(det)
		setValue(x(445))
		putList(x(447))
		setConstant(false)
		setConstant(nil)
		putList(x(449))
		setConstant(bool)
		setConstant(nil)
		putList(x(448))
		setConstant(char)
		setValue(x(449))
		putRecord(builtin [det imods test types] x(443))
		setValue(x(444))
		setValue(x(447))
		setConstant(true)
		setValue(x(448))
		putRecord(any 1 x(453))
		setConstant(det)
		putList(x(452))
		setValue(x(453))
		setConstant(nil)
		putList(x(451))
		setConstant(det)
		setValue(x(452))
		putList(x(454))
		setConstant(false)
		setConstant(nil)
		putList(x(456))
		setConstant(bool)
		setConstant(nil)
		putList(x(455))
		setConstant(char)
		setValue(x(456))
		putRecord(builtin [det imods test types] x(450))
		setValue(x(451))
		setValue(x(454))
		setConstant(true)
		setValue(x(455))
		putRecord(any 1 x(460))
		setConstant(det)
		putList(x(459))
		setValue(x(460))
		setConstant(nil)
		putList(x(458))
		setConstant(det)
		setValue(x(459))
		putList(x(461))
		setConstant(false)
		setConstant(nil)
		putList(x(463))
		setConstant(bool)
		setConstant(nil)
		putList(x(462))
		setConstant(char)
		setValue(x(463))
		putRecord(builtin [det imods test types] x(457))
		setValue(x(458))
		setValue(x(461))
		setConstant(true)
		setValue(x(462))
		putRecord(any 1 x(467))
		setConstant(det)
		putList(x(466))
		setValue(x(467))
		setConstant(nil)
		putList(x(465))
		setConstant(det)
		setValue(x(466))
		putList(x(468))
		setConstant(false)
		setConstant(nil)
		putList(x(470))
		setConstant(bool)
		setConstant(nil)
		putList(x(469))
		setConstant(char)
		setValue(x(470))
		putRecord(builtin [det imods test types] x(464))
		setValue(x(465))
		setValue(x(468))
		setConstant(true)
		setValue(x(469))
		putRecord(any 1 x(474))
		setConstant(det)
		putList(x(473))
		setValue(x(474))
		setConstant(nil)
		putList(x(472))
		setConstant(det)
		setValue(x(473))
		putList(x(475))
		setConstant(false)
		setConstant(nil)
		putList(x(477))
		setConstant(bool)
		setConstant(nil)
		putList(x(476))
		setConstant(char)
		setValue(x(477))
		putRecord(builtin [det imods test types] x(471))
		setValue(x(472))
		setValue(x(475))
		setConstant(true)
		setValue(x(476))
		putRecord(any 1 x(481))
		setConstant(det)
		putList(x(480))
		setValue(x(481))
		setConstant(nil)
		putList(x(479))
		setConstant(det)
		setValue(x(480))
		putList(x(482))
		setConstant(false)
		setConstant(nil)
		putList(x(484))
		setConstant(bool)
		setConstant(nil)
		putList(x(483))
		setConstant(char)
		setValue(x(484))
		putRecord(builtin [det imods test types] x(478))
		setValue(x(479))
		setValue(x(482))
		setConstant(true)
		setValue(x(483))
		putRecord(any 1 x(488))
		setConstant(det)
		putList(x(487))
		setValue(x(488))
		setConstant(nil)
		putList(x(486))
		setConstant(det)
		setValue(x(487))
		putList(x(489))
		setConstant(false)
		setConstant(nil)
		putList(x(491))
		setConstant(atom)
		setConstant(nil)
		putList(x(490))
		setConstant(char)
		setValue(x(491))
		putRecord(builtin [det imods types] x(485))
		setValue(x(486))
		setValue(x(489))
		setValue(x(490))
		putRecord(any 1 x(495))
		setConstant(det)
		putList(x(494))
		setValue(x(495))
		setConstant(nil)
		putList(x(493))
		setConstant(det)
		setValue(x(494))
		putList(x(496))
		setConstant(false)
		setConstant(nil)
		putList(x(498))
		setConstant(char)
		setConstant(nil)
		putList(x(497))
		setConstant(char)
		setValue(x(498))
		putRecord(builtin [det imods types] x(492))
		setValue(x(493))
		setValue(x(496))
		setValue(x(497))
		putRecord(any 1 x(502))
		setConstant(det)
		putList(x(501))
		setValue(x(502))
		setConstant(nil)
		putList(x(500))
		setConstant(det)
		setValue(x(501))
		putList(x(503))
		setConstant(false)
		setConstant(nil)
		putList(x(505))
		setConstant(char)
		setConstant(nil)
		putList(x(504))
		setConstant(char)
		setValue(x(505))
		putRecord(builtin [det imods types] x(499))
		setValue(x(500))
		setValue(x(503))
		setValue(x(504))
		putRecord(any 1 x(509))
		setConstant(det)
		putList(x(508))
		setValue(x(509))
		setConstant(nil)
		putList(x(507))
		setConstant(det)
		setValue(x(508))
		putList(x(510))
		setConstant(false)
		setConstant(nil)
		putList(x(512))
		setConstant(atom)
		setConstant(nil)
		putList(x(511))
		setConstant(char)
		setValue(x(512))
		putRecord(builtin [det imods types] x(506))
		setValue(x(507))
		setValue(x(510))
		setValue(x(511))
		putList(x(517))
		setConstant(any)
		setConstant(nil)
		putList(x(516))
		setConstant(any)
		setValue(x(517))
		putList(x(515))
		setConstant(det)
		setValue(x(516))
		putList(x(514))
		setConstant(detOrKinded)
		setValue(x(515))
		putList(x(520))
		setConstant(false)
		setConstant(nil)
		putList(x(519))
		setConstant(false)
		setValue(x(520))
		putList(x(518))
		setConstant(false)
		setValue(x(519))
		putList(x(524))
		setConstant(value)
		setConstant(nil)
		putList(x(523))
		setConstant(value)
		setValue(x(524))
		putList(x(522))
		setConstant(feature)
		setValue(x(523))
		putList(x(521))
		setConstant(recordCOrChunk)
		setValue(x(522))
		putRecord(builtin [det imods types] x(513))
		setValue(x(514))
		setValue(x(518))
		setValue(x(521))
		putRecord(any 1 x(528))
		setConstant(det)
		putList(x(527))
		setValue(x(528))
		setConstant(nil)
		putList(x(526))
		setConstant(det)
		setValue(x(527))
		putList(x(529))
		setConstant(false)
		setConstant(nil)
		putList(x(531))
		setConstant(float)
		setConstant(nil)
		putList(x(530))
		setConstant(float)
		setValue(x(531))
		putRecord(builtin [det imods types] x(525))
		setValue(x(526))
		setValue(x(529))
		setValue(x(530))
		putList(x(533))
		setConstant(det)
		setConstant(nil)
		putList(x(534))
		setConstant(true)
		setConstant(nil)
		putList(x(535))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(532))
		setValue(x(533))
		setValue(x(534))
		setValue(x(535))
		putRecord(any 1 x(539))
		setConstant(det)
		putList(x(538))
		setValue(x(539))
		setConstant(nil)
		putList(x(537))
		setConstant(det)
		setValue(x(538))
		putList(x(540))
		setConstant(false)
		setConstant(nil)
		putList(x(542))
		setConstant(dictionary)
		setConstant(nil)
		putList(x(541))
		setConstant(dictionary)
		setValue(x(542))
		putRecord(builtin [det imods types] x(536))
		setValue(x(537))
		setValue(x(540))
		setValue(x(541))
		putList(x(547))
		setConstant(any)
		setConstant(nil)
		putList(x(546))
		setConstant(any)
		setValue(x(547))
		putList(x(545))
		setConstant(det)
		setValue(x(546))
		putList(x(544))
		setConstant(det)
		setValue(x(545))
		putList(x(550))
		setConstant(false)
		setConstant(nil)
		putList(x(549))
		setConstant(false)
		setValue(x(550))
		putList(x(548))
		setConstant(false)
		setValue(x(549))
		putList(x(554))
		setConstant(value)
		setConstant(nil)
		putList(x(553))
		setConstant(value)
		setValue(x(554))
		putList(x(552))
		setConstant(feature)
		setValue(x(553))
		putList(x(551))
		setConstant(dictionary)
		setValue(x(552))
		putRecord(builtin [det imods types] x(543))
		setValue(x(544))
		setValue(x(548))
		setValue(x(551))
		putRecord(any 1 x(558))
		setConstant(det)
		putList(x(557))
		setValue(x(558))
		setConstant(nil)
		putList(x(556))
		setConstant(det)
		setValue(x(557))
		putList(x(559))
		setConstant(false)
		setConstant(nil)
		putRecord(pair 2 x(563))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(562))
		setValue(x(563))
		putList(x(561))
		setValue(x(562))
		setConstant(nil)
		putList(x(560))
		setConstant(dictionary)
		setValue(x(561))
		putRecord(builtin [det imods types] x(555))
		setValue(x(556))
		setValue(x(559))
		setValue(x(560))
		putList(x(567))
		setConstant(any)
		setConstant(nil)
		putList(x(566))
		setConstant(det)
		setValue(x(567))
		putList(x(565))
		setConstant(det)
		setValue(x(566))
		putList(x(569))
		setConstant(false)
		setConstant(nil)
		putList(x(568))
		setConstant(false)
		setValue(x(569))
		putList(x(572))
		setConstant(value)
		setConstant(nil)
		putList(x(571))
		setConstant(feature)
		setValue(x(572))
		putList(x(570))
		setConstant(dictionary)
		setValue(x(571))
		putRecord(builtin [det imods types] x(564))
		setValue(x(565))
		setValue(x(568))
		setValue(x(570))
		putRecord(any 1 x(576))
		setConstant(det)
		putList(x(575))
		setValue(x(576))
		setConstant(nil)
		putList(x(574))
		setConstant(det)
		setValue(x(575))
		putList(x(577))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(580))
		setConstant(value)
		putList(x(579))
		setValue(x(580))
		setConstant(nil)
		putList(x(578))
		setConstant(dictionary)
		setValue(x(579))
		putRecord(builtin [det imods types] x(573))
		setValue(x(574))
		setValue(x(577))
		setValue(x(578))
		putRecord(any 1 x(584))
		setConstant(det)
		putList(x(583))
		setValue(x(584))
		setConstant(nil)
		putList(x(582))
		setConstant(det)
		setValue(x(583))
		putList(x(585))
		setConstant(false)
		setConstant(nil)
		putRecord(list 1 x(588))
		setConstant(feature)
		putList(x(587))
		setValue(x(588))
		setConstant(nil)
		putList(x(586))
		setConstant(dictionary)
		setValue(x(587))
		putRecord(builtin [det imods types] x(581))
		setValue(x(582))
		setValue(x(585))
		setValue(x(586))
		putList(x(590))
		setConstant(det)
		setConstant(nil)
		putList(x(591))
		setConstant(false)
		setConstant(nil)
		putList(x(592))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(589))
		setValue(x(590))
		setValue(x(591))
		setValue(x(592))
		putRecord(any 1 x(597))
		setConstant(det)
		putList(x(596))
		setValue(x(597))
		setConstant(nil)
		putList(x(595))
		setConstant(det)
		setValue(x(596))
		putList(x(594))
		setConstant(det)
		setValue(x(595))
		putList(x(599))
		setConstant(false)
		setConstant(nil)
		putList(x(598))
		setConstant(false)
		setValue(x(599))
		putList(x(602))
		setConstant(bool)
		setConstant(nil)
		putList(x(601))
		setConstant(feature)
		setValue(x(602))
		putList(x(600))
		setConstant(dictionary)
		setValue(x(601))
		putRecord(builtin [det imods test types] x(593))
		setValue(x(594))
		setValue(x(598))
		setConstant(true)
		setValue(x(600))
		putList(x(606))
		setConstant(any)
		setConstant(nil)
		putList(x(605))
		setConstant(det)
		setValue(x(606))
		putList(x(604))
		setConstant(det)
		setValue(x(605))
		putList(x(609))
		setConstant(false)
		setConstant(nil)
		putList(x(608))
		setConstant(false)
		setValue(x(609))
		putList(x(607))
		setConstant(false)
		setValue(x(608))
		putList(x(612))
		setConstant(value)
		setConstant(nil)
		putList(x(611))
		setConstant(feature)
		setValue(x(612))
		putList(x(610))
		setConstant(dictionary)
		setValue(x(611))
		putRecord(builtin [det imods types] x(603))
		setValue(x(604))
		setValue(x(607))
		setValue(x(610))
		putList(x(615))
		setConstant(det)
		setConstant(nil)
		putList(x(614))
		setConstant(det)
		setValue(x(615))
		putList(x(617))
		setConstant(false)
		setConstant(nil)
		putList(x(616))
		setConstant(false)
		setValue(x(617))
		putList(x(619))
		setConstant(feature)
		setConstant(nil)
		putList(x(618))
		setConstant(dictionary)
		setValue(x(619))
		putRecord(builtin [det imods types] x(613))
		setValue(x(614))
		setValue(x(616))
		setValue(x(618))
		putList(x(621))
		setConstant(det)
		setConstant(nil)
		putList(x(622))
		setConstant(false)
		setConstant(nil)
		putList(x(623))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(620))
		setValue(x(621))
		setValue(x(622))
		setValue(x(623))
		putRecord(any 1 x(626))
		setConstant(det)
		putList(x(625))
		setValue(x(626))
		setConstant(nil)
		putRecord(list 1 x(628))
		setConstant(atom)
		putList(x(627))
		setValue(x(628))
		setConstant(nil)
		putRecord(builtin [det imods types] x(624))
		setValue(x(625))
		setConstant(nil)
		setValue(x(627))
		putList(x(630))
		setConstant(any)
		setConstant(nil)
		putList(x(631))
		setConstant(false)
		setConstant(nil)
		putList(x(632))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(629))
		setValue(x(630))
		setConstant(true)
		setValue(x(631))
		setValue(x(632))
		putList(x(634))
		setConstant(any)
		setConstant(nil)
		putList(x(635))
		setConstant(false)
		setConstant(nil)
		putList(x(636))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(633))
		setValue(x(634))
		setConstant(true)
		setValue(x(635))
		setValue(x(636))
		putRecord(any 1 x(640))
		setConstant(det)
		putList(x(639))
		setValue(x(640))
		setConstant(nil)
		putList(x(638))
		setConstant(any)
		setValue(x(639))
		putList(x(641))
		setConstant(false)
		setConstant(nil)
		putList(x(643))
		setConstant(bool)
		setConstant(nil)
		putList(x(642))
		setConstant(value)
		setValue(x(643))
		putRecord(builtin [det imods test types] x(637))
		setValue(x(638))
		setValue(x(641))
		setConstant(true)
		setValue(x(642))
		putList(x(645))
		setConstant(any)
		setConstant(nil)
		putList(x(646))
		setConstant(false)
		setConstant(nil)
		putList(x(647))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det doesNotReturn imods types] x(644))
		setValue(x(645))
		setConstant(true)
		setValue(x(646))
		setValue(x(647))
		putRecord(any 1 x(650))
		setConstant(det)
		putList(x(649))
		setValue(x(650))
		setConstant(nil)
		putRecord(list 1 x(652))
		setConstant(record)
		putList(x(651))
		setValue(x(652))
		setConstant(nil)
		putRecord(builtin [det imods types] x(648))
		setValue(x(649))
		setConstant(nil)
		setValue(x(651))
		putList(x(656))
		setConstant(any)
		setConstant(nil)
		putList(x(655))
		setConstant(any)
		setValue(x(656))
		putList(x(654))
		setConstant(det)
		setValue(x(655))
		putList(x(659))
		setConstant(false)
		setConstant(nil)
		putList(x(658))
		setConstant(false)
		setValue(x(659))
		putList(x(657))
		setConstant(false)
		setValue(x(658))
		putList(x(662))
		setConstant(value)
		setConstant(nil)
		putList(x(661))
		setConstant(value)
		setValue(x(662))
		putList(x(660))
		setConstant(cell)
		setValue(x(661))
		putRecord(builtin [det imods types] x(653))
		setValue(x(654))
		setValue(x(657))
		setValue(x(660))
		putRecord(any 1 x(666))
		setConstant(det)
		putList(x(665))
		setValue(x(666))
		setConstant(nil)
		putList(x(664))
		setConstant(det)
		setValue(x(665))
		putList(x(667))
		setConstant(false)
		setConstant(nil)
		putList(x(669))
		setConstant(float)
		setConstant(nil)
		putList(x(668))
		setConstant(float)
		setValue(x(669))
		putRecord(builtin [det imods types] x(663))
		setValue(x(664))
		setValue(x(667))
		setValue(x(668))
		putRecord(any 1 x(673))
		setConstant(det)
		putList(x(672))
		setValue(x(673))
		setConstant(nil)
		putList(x(671))
		setConstant(det)
		setValue(x(672))
		putList(x(674))
		setConstant(false)
		setConstant(nil)
		putList(x(676))
		setConstant(int)
		setConstant(nil)
		putList(x(675))
		setConstant(float)
		setValue(x(676))
		putRecord(builtin [det imods types] x(670))
		setValue(x(671))
		setValue(x(674))
		setValue(x(675))
		putRecord(any 1 x(680))
		setConstant(det)
		putList(x(679))
		setValue(x(680))
		setConstant(nil)
		putList(x(678))
		setConstant(det)
		setValue(x(679))
		putList(x(681))
		setConstant(false)
		setConstant(nil)
		putList(x(683))
		setConstant(string)
		setConstant(nil)
		putList(x(682))
		setConstant(float)
		setValue(x(683))
		putRecord(builtin [det imods types] x(677))
		setValue(x(678))
		setValue(x(681))
		setValue(x(682))
		putRecord(any 1 x(687))
		setConstant(det)
		putList(x(686))
		setValue(x(687))
		setConstant(nil)
		putList(x(685))
		setConstant(det)
		setValue(x(686))
		putList(x(688))
		setConstant(false)
		setConstant(nil)
		putList(x(690))
		setConstant(float)
		setConstant(nil)
		putList(x(689))
		setConstant(float)
		setValue(x(690))
		putRecord(builtin [det imods types] x(684))
		setValue(x(685))
		setValue(x(688))
		setValue(x(689))
		putRecord(any 1 x(694))
		setConstant(det)
		putList(x(693))
		setValue(x(694))
		setConstant(nil)
		putList(x(692))
		setConstant(det)
		setValue(x(693))
		putList(x(695))
		setConstant(false)
		setConstant(nil)
		putList(x(697))
		setConstant(int)
		setConstant(nil)
		putList(x(696))
		setConstant(foreignPointer)
		setValue(x(697))
		putRecord(builtin [det imods types] x(691))
		setValue(x(692))
		setValue(x(695))
		setValue(x(696))
		putList(x(700))
		setConstant(any)
		setConstant(nil)
		putList(x(699))
		setConstant(any)
		setValue(x(700))
		putList(x(701))
		setConstant(false)
		setConstant(nil)
		putList(x(703))
		setConstant(value)
		setConstant(nil)
		putList(x(702))
		setConstant(value)
		setValue(x(703))
		putRecord(builtin [det imods types] x(698))
		setValue(x(699))
		setValue(x(701))
		setValue(x(702))
		putList(x(707))
		setConstant(any)
		setConstant(nil)
		putList(x(706))
		setConstant(det)
		setValue(x(707))
		putList(x(705))
		setConstant(det)
		setValue(x(706))
		putList(x(709))
		setConstant(false)
		setConstant(nil)
		putList(x(708))
		setConstant(false)
		setValue(x(709))
		putList(x(712))
		setConstant(value)
		setConstant(nil)
		putList(x(711))
		setConstant(int)
		setValue(x(712))
		putList(x(710))
		setConstant(array)
		setValue(x(711))
		putRecord(builtin [det imods types] x(704))
		setValue(x(705))
		setValue(x(708))
		setValue(x(710))
		putRecord(any 1 x(717))
		setConstant(det)
		putList(x(716))
		setValue(x(717))
		setConstant(nil)
		putList(x(715))
		setConstant(det)
		setValue(x(716))
		putList(x(714))
		setConstant(detOrKinded)
		setValue(x(715))
		putList(x(719))
		setConstant(false)
		setConstant(nil)
		putList(x(718))
		setConstant(false)
		setValue(x(719))
		putList(x(722))
		setConstant(bool)
		setConstant(nil)
		putList(x(721))
		setConstant(feature)
		setValue(x(722))
		putList(x(720))
		setConstant(recordCOrChunk)
		setValue(x(721))
		putRecord(builtin [det imods test types] x(713))
		setValue(x(714))
		setValue(x(718))
		setConstant(true)
		setValue(x(720))
		putRecord(any 1 x(726))
		setConstant(det)
		putList(x(725))
		setValue(x(726))
		setConstant(nil)
		putList(x(724))
		setConstant(det)
		setValue(x(725))
		putList(x(727))
		setConstant(false)
		setConstant(nil)
		putList(x(729))
		setConstant(float)
		setConstant(nil)
		putList(x(728))
		setConstant(int)
		setValue(x(729))
		putRecord(builtin [det imods types] x(723))
		setValue(x(724))
		setValue(x(727))
		setValue(x(728))
		putRecord(any 1 x(733))
		setConstant(det)
		putList(x(732))
		setValue(x(733))
		setConstant(nil)
		putList(x(731))
		setConstant(det)
		setValue(x(732))
		putList(x(734))
		setConstant(false)
		setConstant(nil)
		putList(x(736))
		setConstant(string)
		setConstant(nil)
		putList(x(735))
		setConstant(int)
		setValue(x(736))
		putRecord(builtin [det imods types] x(730))
		setValue(x(731))
		setValue(x(734))
		setValue(x(735))
		putRecord(any 1 x(740))
		setConstant(det)
		putList(x(739))
		setValue(x(740))
		setConstant(nil)
		putList(x(738))
		setConstant(det)
		setValue(x(739))
		putList(x(741))
		setConstant(false)
		setConstant(nil)
		putList(x(743))
		setConstant(bool)
		setConstant(nil)
		putList(x(742))
		setConstant(value)
		setValue(x(743))
		putRecord(builtin [det imods test types] x(737))
		setValue(x(738))
		setValue(x(741))
		setConstant(true)
		setValue(x(742))
		putRecord(any 1 x(747))
		setConstant(det)
		putList(x(746))
		setValue(x(747))
		setConstant(nil)
		putList(x(745))
		setConstant(det)
		setValue(x(746))
		putList(x(748))
		setConstant(false)
		setConstant(nil)
		putList(x(750))
		setConstant(bool)
		setConstant(nil)
		putList(x(749))
		setConstant(value)
		setValue(x(750))
		putRecord(builtin [det imods test types] x(744))
		setValue(x(745))
		setValue(x(748))
		setConstant(true)
		setValue(x(749))
		putRecord(any 1 x(754))
		setConstant(det)
		putList(x(753))
		setValue(x(754))
		setConstant(nil)
		putList(x(752))
		setConstant(det)
		setValue(x(753))
		putList(x(755))
		setConstant(false)
		setConstant(nil)
		putList(x(757))
		setConstant(bool)
		setConstant(nil)
		putList(x(756))
		setConstant(value)
		setValue(x(757))
		putRecord(builtin [det imods test types] x(751))
		setValue(x(752))
		setValue(x(755))
		setConstant(true)
		setValue(x(756))
		putRecord(any 1 x(761))
		setConstant(det)
		putList(x(760))
		setValue(x(761))
		setConstant(nil)
		putList(x(759))
		setConstant(det)
		setValue(x(760))
		putList(x(762))
		setConstant(false)
		setConstant(nil)
		putList(x(764))
		setConstant(bool)
		setConstant(nil)
		putList(x(763))
		setConstant(value)
		setValue(x(764))
		putRecord(builtin [det imods test types] x(758))
		setValue(x(759))
		setValue(x(762))
		setConstant(true)
		setValue(x(763))
		putRecord(any 1 x(768))
		setConstant(det)
		putList(x(767))
		setValue(x(768))
		setConstant(nil)
		putList(x(766))
		setConstant(det)
		setValue(x(767))
		putList(x(769))
		setConstant(false)
		setConstant(nil)
		putList(x(771))
		setConstant(bool)
		setConstant(nil)
		putList(x(770))
		setConstant(value)
		setValue(x(771))
		putRecord(builtin [det imods test types] x(765))
		setValue(x(766))
		setValue(x(769))
		setConstant(true)
		setValue(x(770))
		putRecord(any 1 x(775))
		setConstant(det)
		putList(x(774))
		setValue(x(775))
		setConstant(nil)
		putList(x(773))
		setConstant(det)
		setValue(x(774))
		putList(x(776))
		setConstant(false)
		setConstant(nil)
		putList(x(778))
		setConstant(bool)
		setConstant(nil)
		putList(x(777))
		setConstant(value)
		setValue(x(778))
		putRecord(builtin [det imods test types] x(772))
		setValue(x(773))
		setValue(x(776))
		setConstant(true)
		setValue(x(777))
		putRecord(any 1 x(782))
		setConstant(det)
		putList(x(781))
		setValue(x(782))
		setConstant(nil)
		putList(x(780))
		setConstant(any)
		setValue(x(781))
		putList(x(783))
		setConstant(false)
		setConstant(nil)
		putList(x(785))
		setConstant(bool)
		setConstant(nil)
		putList(x(784))
		setConstant(value)
		setValue(x(785))
		putRecord(builtin [det imods test types] x(779))
		setValue(x(780))
		setValue(x(783))
		setConstant(true)
		setValue(x(784))
		putRecord(any 1 x(789))
		setConstant(det)
		putList(x(788))
		setValue(x(789))
		setConstant(nil)
		putList(x(787))
		setConstant(det)
		setValue(x(788))
		putList(x(790))
		setConstant(false)
		setConstant(nil)
		putList(x(792))
		setConstant(bool)
		setConstant(nil)
		putList(x(791))
		setConstant(value)
		setValue(x(792))
		putRecord(builtin [det imods test types] x(786))
		setValue(x(787))
		setValue(x(790))
		setConstant(true)
		setValue(x(791))
		putRecord(any 1 x(796))
		setConstant(det)
		putList(x(795))
		setValue(x(796))
		setConstant(nil)
		putList(x(794))
		setConstant(det)
		setValue(x(795))
		putList(x(797))
		setConstant(false)
		setConstant(nil)
		putList(x(799))
		setConstant(bool)
		setConstant(nil)
		putList(x(798))
		setConstant(value)
		setValue(x(799))
		putRecord(builtin [det imods test types] x(793))
		setValue(x(794))
		setValue(x(797))
		setConstant(true)
		setValue(x(798))
		putRecord(any 1 x(803))
		setConstant(det)
		putList(x(802))
		setValue(x(803))
		setConstant(nil)
		putList(x(801))
		setConstant(det)
		setValue(x(802))
		putList(x(804))
		setConstant(false)
		setConstant(nil)
		putList(x(806))
		setConstant(bool)
		setConstant(nil)
		putList(x(805))
		setConstant(value)
		setValue(x(806))
		putRecord(builtin [det imods test types] x(800))
		setValue(x(801))
		setValue(x(804))
		setConstant(true)
		setValue(x(805))
		putRecord(any 1 x(810))
		setConstant(det)
		putList(x(809))
		setValue(x(810))
		setConstant(nil)
		putList(x(808))
		setConstant(any)
		setValue(x(809))
		putList(x(811))
		setConstant(false)
		setConstant(nil)
		putList(x(813))
		setConstant(bool)
		setConstant(nil)
		putList(x(812))
		setConstant(value)
		setValue(x(813))
		putRecord(builtin [det imods test types] x(807))
		setValue(x(808))
		setValue(x(811))
		setConstant(true)
		setValue(x(812))
		putRecord(any 1 x(817))
		setConstant(det)
		putList(x(816))
		setValue(x(817))
		setConstant(nil)
		putList(x(815))
		setConstant(det)
		setValue(x(816))
		putList(x(818))
		setConstant(false)
		setConstant(nil)
		putList(x(820))
		setConstant(bool)
		setConstant(nil)
		putList(x(819))
		setConstant(value)
		setValue(x(820))
		putRecord(builtin [det imods test types] x(814))
		setValue(x(815))
		setValue(x(818))
		setConstant(true)
		setValue(x(819))
		putRecord(any 1 x(824))
		setConstant(det)
		putList(x(823))
		setValue(x(824))
		setConstant(nil)
		putList(x(822))
		setConstant(any)
		setValue(x(823))
		putList(x(825))
		setConstant(false)
		setConstant(nil)
		putList(x(827))
		setConstant(bool)
		setConstant(nil)
		putList(x(826))
		setConstant(value)
		setValue(x(827))
		putRecord(builtin [det imods test types] x(821))
		setValue(x(822))
		setValue(x(825))
		setConstant(true)
		setValue(x(826))
		putRecord(any 1 x(831))
		setConstant(det)
		putList(x(830))
		setValue(x(831))
		setConstant(nil)
		putList(x(829))
		setConstant(det)
		setValue(x(830))
		putList(x(832))
		setConstant(false)
		setConstant(nil)
		putList(x(834))
		setConstant(bool)
		setConstant(nil)
		putList(x(833))
		setConstant(value)
		setValue(x(834))
		putRecord(builtin [det imods test types] x(828))
		setValue(x(829))
		setValue(x(832))
		setConstant(true)
		setValue(x(833))
		putRecord(any 1 x(838))
		setConstant(det)
		putList(x(837))
		setValue(x(838))
		setConstant(nil)
		putList(x(836))
		setConstant(det)
		setValue(x(837))
		putList(x(839))
		setConstant(false)
		setConstant(nil)
		putList(x(841))
		setConstant(bool)
		setConstant(nil)
		putList(x(840))
		setConstant(value)
		setValue(x(841))
		putRecord(builtin [det imods test types] x(835))
		setValue(x(836))
		setValue(x(839))
		setConstant(true)
		setValue(x(840))
		putRecord(any 1 x(845))
		setConstant(det)
		putList(x(844))
		setValue(x(845))
		setConstant(nil)
		putList(x(843))
		setConstant(det)
		setValue(x(844))
		putList(x(846))
		setConstant(false)
		setConstant(nil)
		putList(x(848))
		setConstant(bool)
		setConstant(nil)
		putList(x(847))
		setConstant(value)
		setValue(x(848))
		putRecord(builtin [det imods test types] x(842))
		setValue(x(843))
		setValue(x(846))
		setConstant(true)
		setValue(x(847))
		putRecord(any 1 x(852))
		setConstant(det)
		putList(x(851))
		setValue(x(852))
		setConstant(nil)
		putList(x(850))
		setConstant(det)
		setValue(x(851))
		putList(x(853))
		setConstant(false)
		setConstant(nil)
		putList(x(855))
		setConstant(bool)
		setConstant(nil)
		putList(x(854))
		setConstant(value)
		setValue(x(855))
		putRecord(builtin [det imods test types] x(849))
		setValue(x(850))
		setValue(x(853))
		setConstant(true)
		setValue(x(854))
		putRecord(any 1 x(859))
		setConstant(det)
		putList(x(858))
		setValue(x(859))
		setConstant(nil)
		putList(x(857))
		setConstant(det)
		setValue(x(858))
		putList(x(860))
		setConstant(false)
		setConstant(nil)
		putList(x(862))
		setConstant(bool)
		setConstant(nil)
		putList(x(861))
		setConstant(value)
		setValue(x(862))
		putRecord(builtin [det imods test types] x(856))
		setValue(x(857))
		setValue(x(860))
		setConstant(true)
		setValue(x(861))
		putRecord(any 1 x(866))
		setConstant(det)
		putList(x(865))
		setValue(x(866))
		setConstant(nil)
		putList(x(864))
		setConstant(det)
		setValue(x(865))
		putList(x(867))
		setConstant(false)
		setConstant(nil)
		putList(x(869))
		setConstant(bool)
		setConstant(nil)
		putList(x(868))
		setConstant(value)
		setValue(x(869))
		putRecord(builtin [det imods test types] x(863))
		setValue(x(864))
		setValue(x(867))
		setConstant(true)
		setValue(x(868))
		putRecord(any 1 x(873))
		setConstant(det)
		putList(x(872))
		setValue(x(873))
		setConstant(nil)
		putList(x(871))
		setConstant(det)
		setValue(x(872))
		putList(x(874))
		setConstant(false)
		setConstant(nil)
		putList(x(876))
		setConstant(bool)
		setConstant(nil)
		putList(x(875))
		setConstant(value)
		setValue(x(876))
		putRecord(builtin [det imods test types] x(870))
		setValue(x(871))
		setValue(x(874))
		setConstant(true)
		setValue(x(875))
		putRecord(any 1 x(880))
		setConstant(det)
		putList(x(879))
		setValue(x(880))
		setConstant(nil)
		putList(x(878))
		setConstant(det)
		setValue(x(879))
		putList(x(881))
		setConstant(false)
		setConstant(nil)
		putList(x(883))
		setConstant(bool)
		setConstant(nil)
		putList(x(882))
		setConstant(value)
		setValue(x(883))
		putRecord(builtin [det imods test types] x(877))
		setValue(x(878))
		setValue(x(881))
		setConstant(true)
		setValue(x(882))
		putRecord(any 1 x(887))
		setConstant(det)
		putList(x(886))
		setValue(x(887))
		setConstant(nil)
		putList(x(885))
		setConstant(det)
		setValue(x(886))
		putList(x(888))
		setConstant(false)
		setConstant(nil)
		putList(x(890))
		setConstant(bool)
		setConstant(nil)
		putList(x(889))
		setConstant(value)
		setValue(x(890))
		putRecord(builtin [det imods test types] x(884))
		setValue(x(885))
		setValue(x(888))
		setConstant(true)
		setValue(x(889))
		putRecord(any 1 x(894))
		setConstant(det)
		putList(x(893))
		setValue(x(894))
		setConstant(nil)
		putList(x(892))
		setConstant(det)
		setValue(x(893))
		putList(x(895))
		setConstant(false)
		setConstant(nil)
		putList(x(897))
		setConstant(bool)
		setConstant(nil)
		putList(x(896))
		setConstant(value)
		setValue(x(897))
		putRecord(builtin [det imods test types] x(891))
		setValue(x(892))
		setValue(x(895))
		setConstant(true)
		setValue(x(896))
		putRecord(any 1 x(901))
		setConstant(det)
		putList(x(900))
		setValue(x(901))
		setConstant(nil)
		putList(x(899))
		setConstant(det)
		setValue(x(900))
		putList(x(902))
		setConstant(false)
		setConstant(nil)
		putList(x(904))
		setConstant(bool)
		setConstant(nil)
		putList(x(903))
		setConstant(value)
		setValue(x(904))
		putRecord(builtin [det imods test types] x(898))
		setValue(x(899))
		setValue(x(902))
		setConstant(true)
		setValue(x(903))
		putRecord(any 1 x(908))
		setConstant(det)
		putList(x(907))
		setValue(x(908))
		setConstant(nil)
		putList(x(906))
		setConstant(det)
		setValue(x(907))
		putList(x(909))
		setConstant(false)
		setConstant(nil)
		putList(x(911))
		setConstant(bool)
		setConstant(nil)
		putList(x(910))
		setConstant(value)
		setValue(x(911))
		putRecord(builtin [det imods test types] x(905))
		setValue(x(906))
		setValue(x(909))
		setConstant(true)
		setValue(x(910))
		putRecord(any 1 x(915))
		setConstant(det)
		putList(x(914))
		setValue(x(915))
		setConstant(nil)
		putList(x(913))
		setConstant(det)
		setValue(x(914))
		putList(x(916))
		setConstant(false)
		setConstant(nil)
		putList(x(918))
		setConstant(bool)
		setConstant(nil)
		putList(x(917))
		setConstant(value)
		setValue(x(918))
		putRecord(builtin [det imods test types] x(912))
		setValue(x(913))
		setValue(x(916))
		setConstant(true)
		setValue(x(917))
		putRecord(any 1 x(922))
		setConstant(det)
		putList(x(921))
		setValue(x(922))
		setConstant(nil)
		putList(x(920))
		setConstant(det)
		setValue(x(921))
		putList(x(923))
		setConstant(true)
		setConstant(nil)
		putList(x(925))
		setConstant(bool)
		setConstant(nil)
		putList(x(924))
		setConstant(value)
		setValue(x(925))
		putRecord(builtin [det imods test types] x(919))
		setValue(x(920))
		setValue(x(923))
		setConstant(true)
		setValue(x(924))
		putRecord(any 1 x(929))
		setConstant(det)
		putList(x(928))
		setValue(x(929))
		setConstant(nil)
		putList(x(927))
		setConstant(detOrKinded)
		setValue(x(928))
		putList(x(930))
		setConstant(false)
		setConstant(nil)
		putList(x(932))
		setConstant(literal)
		setConstant(nil)
		putList(x(931))
		setConstant(recordC)
		setValue(x(932))
		putRecord(builtin [det imods types] x(926))
		setValue(x(927))
		setValue(x(930))
		setValue(x(931))
		putList(x(934))
		setConstant(det)
		setConstant(nil)
		putList(x(935))
		setConstant(false)
		setConstant(nil)
		putList(x(936))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(933))
		setValue(x(934))
		setValue(x(935))
		setValue(x(936))
		putRecord(any 1 x(940))
		setConstant(det)
		putList(x(939))
		setValue(x(940))
		setConstant(nil)
		putList(x(938))
		setConstant(det)
		setValue(x(939))
		putList(x(941))
		setConstant(false)
		setConstant(nil)
		putList(x(943))
		setConstant(float)
		setConstant(nil)
		putList(x(942))
		setConstant(float)
		setValue(x(943))
		putRecord(builtin [det imods types] x(937))
		setValue(x(938))
		setValue(x(941))
		setValue(x(942))
		putRecord(any 1 x(948))
		setConstant(det)
		putList(x(947))
		setValue(x(948))
		setConstant(nil)
		putList(x(946))
		setConstant(det)
		setValue(x(947))
		putList(x(945))
		setConstant(det)
		setValue(x(946))
		putList(x(950))
		setConstant(false)
		setConstant(nil)
		putList(x(949))
		setConstant(false)
		setValue(x(950))
		putList(x(953))
		setConstant(tuple)
		setConstant(nil)
		putList(x(952))
		setConstant(int)
		setValue(x(953))
		putList(x(951))
		setConstant(literal)
		setValue(x(952))
		putRecord(builtin [det imods types] x(944))
		setValue(x(945))
		setValue(x(949))
		setValue(x(951))
		putRecord(any 1 x(958))
		setConstant(det)
		putList(x(957))
		setValue(x(958))
		setConstant(nil)
		putList(x(956))
		setConstant(det)
		setValue(x(957))
		putList(x(955))
		setConstant(det)
		setValue(x(956))
		putList(x(960))
		setConstant(false)
		setConstant(nil)
		putList(x(959))
		setConstant(false)
		setValue(x(960))
		putList(x(963))
		setConstant(comparable)
		setConstant(nil)
		putList(x(962))
		setConstant(comparable)
		setValue(x(963))
		putList(x(961))
		setConstant(comparable)
		setValue(x(962))
		putRecord(builtin [det imods types] x(954))
		setValue(x(955))
		setValue(x(959))
		setValue(x(961))
		putRecord(any 1 x(968))
		setConstant(det)
		putList(x(967))
		setValue(x(968))
		setConstant(nil)
		putList(x(966))
		setConstant(det)
		setValue(x(967))
		putList(x(965))
		setConstant(det)
		setValue(x(966))
		putList(x(970))
		setConstant(false)
		setConstant(nil)
		putList(x(969))
		setConstant(false)
		setValue(x(970))
		putList(x(973))
		setConstant(comparable)
		setConstant(nil)
		putList(x(972))
		setConstant(comparable)
		setValue(x(973))
		putList(x(971))
		setConstant(comparable)
		setValue(x(972))
		putRecord(builtin [det imods types] x(964))
		setValue(x(965))
		setValue(x(969))
		setValue(x(971))
		putList(x(977))
		setConstant(any)
		setConstant(nil)
		putList(x(976))
		setConstant(det)
		setValue(x(977))
		putList(x(975))
		setConstant(det)
		setValue(x(976))
		putList(x(980))
		setConstant(false)
		setConstant(nil)
		putList(x(979))
		setConstant(false)
		setValue(x(980))
		putList(x(978))
		setConstant(false)
		setValue(x(979))
		putList(x(983))
		setConstant(value)
		setConstant(nil)
		putList(x(982))
		setConstant(record)
		setValue(x(983))
		putList(x(981))
		setConstant('class')
		setValue(x(982))
		putRecord(builtin [det imods types] x(974))
		setValue(x(975))
		setValue(x(978))
		setValue(x(981))
		putRecord(any 1 x(989))
		setConstant(det)
		putList(x(988))
		setValue(x(989))
		setConstant(nil)
		putList(x(987))
		setConstant(any)
		setValue(x(988))
		putList(x(986))
		setConstant(det)
		setValue(x(987))
		putList(x(985))
		setConstant(det)
		setValue(x(986))
		putList(x(992))
		setConstant(false)
		setConstant(nil)
		putList(x(991))
		setConstant(false)
		setValue(x(992))
		putList(x(990))
		setConstant(false)
		setValue(x(991))
		putList(x(996))
		setConstant(array)
		setConstant(nil)
		putList(x(995))
		setConstant(value)
		setValue(x(996))
		putList(x(994))
		setConstant(int)
		setValue(x(995))
		putList(x(993))
		setConstant(int)
		setValue(x(994))
		putRecord(builtin [det imods types] x(984))
		setValue(x(985))
		setValue(x(990))
		setValue(x(993))
		putRecord(any 1 x(1000))
		setConstant(det)
		putList(x(999))
		setValue(x(1000))
		setConstant(nil)
		putList(x(998))
		setConstant(any)
		setValue(x(999))
		putList(x(1001))
		setConstant(false)
		setConstant(nil)
		putList(x(1003))
		setConstant(cell)
		setConstant(nil)
		putList(x(1002))
		setConstant(value)
		setValue(x(1003))
		putRecord(builtin [det imods types] x(997))
		setValue(x(998))
		setValue(x(1001))
		setValue(x(1002))
		putRecord(any 1 x(1007))
		setConstant(det)
		putList(x(1006))
		setValue(x(1007))
		setConstant(nil)
		putList(x(1005))
		setConstant(det)
		setValue(x(1006))
		putList(x(1008))
		setConstant(false)
		setConstant(nil)
		putList(x(1010))
		setConstant(chunk)
		setConstant(nil)
		putList(x(1009))
		setConstant(record)
		setValue(x(1010))
		putRecord(builtin [det imods types] x(1004))
		setValue(x(1005))
		setValue(x(1008))
		setValue(x(1009))
		putRecord(any 1 x(1013))
		setConstant(det)
		putList(x(1012))
		setValue(x(1013))
		setConstant(nil)
		putList(x(1014))
		setConstant(dictionary)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1011))
		setValue(x(1012))
		setConstant(nil)
		setValue(x(1014))
		putRecord(any 1 x(1017))
		setConstant(det)
		putList(x(1016))
		setValue(x(1017))
		setConstant(nil)
		putList(x(1018))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1015))
		setValue(x(1016))
		setConstant(nil)
		setValue(x(1018))
		putRecord(any 1 x(1021))
		setConstant(det)
		putList(x(1020))
		setValue(x(1021))
		setConstant(nil)
		putList(x(1022))
		setConstant(name)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1019))
		setValue(x(1020))
		setConstant(nil)
		setValue(x(1022))
		putRecord(any 1 x(1026))
		setConstant(det)
		putList(x(1025))
		setValue(x(1026))
		setConstant(nil)
		putList(x(1024))
		setConstant(any)
		setValue(x(1025))
		putList(x(1027))
		setConstant(false)
		setConstant(nil)
		putList(x(1029))
		setConstant(port)
		setConstant(nil)
		putList(x(1028))
		setConstant(value)
		setValue(x(1029))
		putRecord(builtin [det imods types] x(1023))
		setValue(x(1024))
		setValue(x(1027))
		setValue(x(1028))
		putRecord(any 1 x(1033))
		setConstant(det)
		putList(x(1032))
		setValue(x(1033))
		setConstant(nil)
		putList(x(1031))
		setConstant(det)
		setValue(x(1032))
		putList(x(1034))
		setConstant(false)
		setConstant(nil)
		putList(x(1036))
		setConstant(name)
		setConstant(nil)
		putList(x(1035))
		setConstant(atom)
		setValue(x(1036))
		putRecord(builtin [det imods types] x(1030))
		setValue(x(1031))
		setValue(x(1034))
		setValue(x(1035))
		putRecord(any 1 x(1040))
		setConstant(det)
		putList(x(1039))
		setValue(x(1040))
		setConstant(nil)
		putList(x(1038))
		setConstant(det)
		setValue(x(1039))
		putList(x(1041))
		setConstant(false)
		setConstant(nil)
		putList(x(1043))
		setConstant(bool)
		setConstant(nil)
		putList(x(1042))
		setConstant(bool)
		setValue(x(1043))
		putRecord(builtin [det imods test types] x(1037))
		setValue(x(1038))
		setValue(x(1041))
		setConstant(true)
		setValue(x(1042))
		putRecord(any 1 x(1048))
		setConstant(det)
		putList(x(1047))
		setValue(x(1048))
		setConstant(nil)
		putList(x(1046))
		setConstant(det)
		setValue(x(1047))
		putList(x(1045))
		setConstant(det)
		setValue(x(1046))
		putList(x(1050))
		setConstant(false)
		setConstant(nil)
		putList(x(1049))
		setConstant(false)
		setValue(x(1050))
		putList(x(1053))
		setConstant(bool)
		setConstant(nil)
		putList(x(1052))
		setConstant(bool)
		setValue(x(1053))
		putList(x(1051))
		setConstant(bool)
		setValue(x(1052))
		putRecord(builtin [det imods test types] x(1044))
		setValue(x(1045))
		setValue(x(1049))
		setConstant(true)
		setValue(x(1051))
		putRecord(any 1 x(1057))
		setConstant(det)
		putList(x(1056))
		setValue(x(1057))
		setConstant(nil)
		putList(x(1055))
		setConstant(det)
		setValue(x(1056))
		putList(x(1058))
		setConstant(false)
		setConstant(nil)
		putList(x(1060))
		setConstant(int)
		setConstant(nil)
		putList(x(1059))
		setConstant(procedure)
		setValue(x(1060))
		putRecord(builtin [det imods types] x(1054))
		setValue(x(1055))
		setValue(x(1058))
		setValue(x(1059))
		putList(x(1064))
		setConstant(any)
		setConstant(nil)
		putList(x(1063))
		setConstant(det)
		setValue(x(1064))
		putList(x(1062))
		setConstant(det)
		setValue(x(1063))
		putList(x(1067))
		setConstant(false)
		setConstant(nil)
		putList(x(1066))
		setConstant(false)
		setValue(x(1067))
		putList(x(1065))
		setConstant(false)
		setValue(x(1066))
		putList(x(1070))
		setConstant(value)
		setConstant(nil)
		putList(x(1069))
		setConstant(int)
		setValue(x(1070))
		putList(x(1068))
		setConstant(array)
		setValue(x(1069))
		putRecord(builtin [det imods types] x(1061))
		setValue(x(1062))
		setValue(x(1065))
		setValue(x(1068))
		putRecord(any 1 x(1074))
		setConstant(det)
		putList(x(1073))
		setValue(x(1074))
		setConstant(nil)
		putList(x(1072))
		setConstant(det)
		setValue(x(1073))
		putList(x(1075))
		setConstant(false)
		setConstant(nil)
		putList(x(1077))
		setConstant(float)
		setConstant(nil)
		putList(x(1076))
		setConstant(float)
		setValue(x(1077))
		putRecord(builtin [det imods types] x(1071))
		setValue(x(1072))
		setValue(x(1075))
		setValue(x(1076))
		putList(x(1080))
		setConstant(any)
		setConstant(nil)
		putList(x(1079))
		setConstant(det)
		setValue(x(1080))
		putList(x(1082))
		setConstant(false)
		setConstant(nil)
		putList(x(1081))
		setConstant(false)
		setValue(x(1082))
		putList(x(1084))
		setConstant(value)
		setConstant(nil)
		putList(x(1083))
		setConstant(port)
		setValue(x(1084))
		putRecord(builtin [det imods types] x(1078))
		setValue(x(1079))
		setValue(x(1081))
		setValue(x(1083))
		putRecord(any 1 x(1088))
		setConstant(det)
		putList(x(1087))
		setValue(x(1088))
		setConstant(nil)
		putList(x(1086))
		setConstant(det)
		setValue(x(1087))
		putList(x(1089))
		setConstant(false)
		setConstant(nil)
		putList(x(1091))
		setConstant(float)
		setConstant(nil)
		putList(x(1090))
		setConstant(float)
		setValue(x(1091))
		putRecord(builtin [det imods types] x(1085))
		setValue(x(1086))
		setValue(x(1089))
		setValue(x(1090))
		putRecord(any 1 x(1095))
		setConstant(det)
		putList(x(1094))
		setValue(x(1095))
		setConstant(nil)
		putList(x(1093))
		setConstant(det)
		setValue(x(1094))
		putList(x(1096))
		setConstant(false)
		setConstant(nil)
		putList(x(1098))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1097))
		setConstant(space)
		setValue(x(1098))
		putRecord(builtin [det imods types] x(1092))
		setValue(x(1093))
		setValue(x(1096))
		setValue(x(1097))
		putList(x(1101))
		setConstant(any)
		setConstant(nil)
		putList(x(1100))
		setConstant(det)
		setValue(x(1101))
		putList(x(1103))
		setConstant(true)
		setConstant(nil)
		putList(x(1102))
		setConstant(false)
		setValue(x(1103))
		putList(x(1105))
		setConstant(value)
		setConstant(nil)
		putList(x(1104))
		setConstant(space)
		setValue(x(1105))
		putRecord(builtin [det imods types] x(1099))
		setValue(x(1100))
		setValue(x(1102))
		setValue(x(1104))
		putRecord(any 1 x(1109))
		setConstant(det)
		putList(x(1108))
		setValue(x(1109))
		setConstant(nil)
		putList(x(1107))
		setConstant(det)
		setValue(x(1108))
		putList(x(1110))
		setConstant(false)
		setConstant(nil)
		putList(x(1112))
		setConstant(space)
		setConstant(nil)
		putList(x(1111))
		setConstant(space)
		setValue(x(1112))
		putRecord(builtin [det imods types] x(1106))
		setValue(x(1107))
		setValue(x(1110))
		setValue(x(1111))
		putList(x(1115))
		setConstant(det)
		setConstant(nil)
		putList(x(1114))
		setConstant(det)
		setValue(x(1115))
		putList(x(1117))
		setConstant(false)
		setConstant(nil)
		putList(x(1116))
		setConstant(false)
		setValue(x(1117))
		putList(x(1119))
		setConstant(value)
		setConstant(nil)
		putList(x(1118))
		setConstant(space)
		setValue(x(1119))
		putRecord(builtin [det imods types] x(1113))
		setValue(x(1114))
		setValue(x(1116))
		setValue(x(1118))
		putList(x(1122))
		setConstant(det)
		setConstant(nil)
		putList(x(1121))
		setConstant(det)
		setValue(x(1122))
		putList(x(1124))
		setConstant(false)
		setConstant(nil)
		putList(x(1123))
		setConstant(false)
		setValue(x(1124))
		putList(x(1126))
		setConstant('procedure/1')
		setConstant(nil)
		putList(x(1125))
		setConstant(space)
		setValue(x(1126))
		putRecord(builtin [det imods types] x(1120))
		setValue(x(1121))
		setValue(x(1123))
		setValue(x(1125))
		putRecord(any 1 x(1130))
		setConstant(det)
		putList(x(1129))
		setValue(x(1130))
		setConstant(nil)
		putList(x(1128))
		setConstant(det)
		setValue(x(1129))
		putList(x(1131))
		setConstant(false)
		setConstant(nil)
		putList(x(1133))
		setConstant(value)
		setConstant(nil)
		putList(x(1132))
		setConstant(space)
		setValue(x(1133))
		putRecord(builtin [det imods types] x(1127))
		setValue(x(1128))
		setValue(x(1131))
		setValue(x(1132))
		putRecord(any 1 x(1137))
		setConstant(det)
		putList(x(1136))
		setValue(x(1137))
		setConstant(nil)
		putList(x(1135))
		setConstant(det)
		setValue(x(1136))
		putList(x(1138))
		setConstant(false)
		setConstant(nil)
		putList(x(1140))
		setConstant(space)
		setConstant(nil)
		putList(x(1139))
		setConstant('procedure/1')
		setValue(x(1140))
		putRecord(builtin [det imods types] x(1134))
		setValue(x(1135))
		setValue(x(1138))
		setValue(x(1139))
		putRecord(any 1 x(1144))
		setConstant(det)
		putList(x(1143))
		setValue(x(1144))
		setConstant(nil)
		putList(x(1142))
		setConstant(det)
		setValue(x(1143))
		putList(x(1145))
		setConstant(false)
		setConstant(nil)
		putList(x(1147))
		setConstant(float)
		setConstant(nil)
		putList(x(1146))
		setConstant(float)
		setValue(x(1147))
		putRecord(builtin [det imods types] x(1141))
		setValue(x(1142))
		setValue(x(1145))
		setValue(x(1146))
		putRecord(any 1 x(1151))
		setConstant(det)
		putList(x(1150))
		setValue(x(1151))
		setConstant(nil)
		putList(x(1149))
		setConstant(det)
		setValue(x(1150))
		putList(x(1152))
		setConstant(false)
		setConstant(nil)
		putList(x(1154))
		setConstant(atom)
		setConstant(nil)
		putList(x(1153))
		setConstant(string)
		setValue(x(1154))
		putRecord(builtin [det imods types] x(1148))
		setValue(x(1149))
		setValue(x(1152))
		setValue(x(1153))
		putRecord(any 1 x(1158))
		setConstant(det)
		putList(x(1157))
		setValue(x(1158))
		setConstant(nil)
		putList(x(1156))
		setConstant(det)
		setValue(x(1157))
		putList(x(1159))
		setConstant(false)
		setConstant(nil)
		putList(x(1161))
		setConstant(float)
		setConstant(nil)
		putList(x(1160))
		setConstant(string)
		setValue(x(1161))
		putRecord(builtin [det imods types] x(1155))
		setValue(x(1156))
		setValue(x(1159))
		setValue(x(1160))
		putRecord(any 1 x(1165))
		setConstant(det)
		putList(x(1164))
		setValue(x(1165))
		setConstant(nil)
		putList(x(1163))
		setConstant(det)
		setValue(x(1164))
		putList(x(1166))
		setConstant(false)
		setConstant(nil)
		putList(x(1168))
		setConstant(int)
		setConstant(nil)
		putList(x(1167))
		setConstant(string)
		setValue(x(1168))
		putRecord(builtin [det imods types] x(1162))
		setValue(x(1163))
		setValue(x(1166))
		setValue(x(1167))
		putRecord(any 1 x(1172))
		setConstant(det)
		putList(x(1171))
		setValue(x(1172))
		setConstant(nil)
		putList(x(1170))
		setConstant(det)
		setValue(x(1171))
		putList(x(1173))
		setConstant(false)
		setConstant(nil)
		putList(x(1175))
		setConstant(float)
		setConstant(nil)
		putList(x(1174))
		setConstant(float)
		setValue(x(1175))
		putRecord(builtin [det imods types] x(1169))
		setValue(x(1170))
		setValue(x(1173))
		setValue(x(1174))
		putList(x(1178))
		setConstant(any)
		setConstant(nil)
		putList(x(1177))
		setConstant(det)
		setValue(x(1178))
		putList(x(1180))
		setConstant(false)
		setConstant(nil)
		putList(x(1179))
		setConstant(false)
		setValue(x(1180))
		putList(x(1182))
		setConstant(record)
		setConstant(nil)
		putList(x(1181))
		setConstant(literal)
		setValue(x(1182))
		putRecord(builtin [det imods types] x(1176))
		setValue(x(1177))
		setValue(x(1179))
		setValue(x(1181))
		putList(x(1184))
		setConstant(det)
		setConstant(nil)
		putList(x(1185))
		setConstant(false)
		setConstant(nil)
		putList(x(1186))
		setConstant(procedure)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1183))
		setValue(x(1184))
		setValue(x(1185))
		setValue(x(1186))
		putRecord(any 1 x(1190))
		setConstant(det)
		putList(x(1189))
		setValue(x(1190))
		setConstant(nil)
		putList(x(1188))
		setConstant(det)
		setValue(x(1189))
		putList(x(1191))
		setConstant(false)
		setConstant(nil)
		putList(x(1193))
		setConstant(atom)
		setConstant(nil)
		putList(x(1192))
		setConstant('thread')
		setValue(x(1193))
		putRecord(builtin [det imods types] x(1187))
		setValue(x(1188))
		setValue(x(1191))
		setValue(x(1192))
		putList(x(1196))
		setConstant(det)
		setConstant(nil)
		putList(x(1195))
		setConstant(det)
		setValue(x(1196))
		putList(x(1198))
		setConstant(false)
		setConstant(nil)
		putList(x(1197))
		setConstant(false)
		setValue(x(1198))
		putList(x(1200))
		setConstant(value)
		setConstant(nil)
		putList(x(1199))
		setConstant('thread')
		setValue(x(1200))
		putRecord(builtin [det imods types] x(1194))
		setValue(x(1195))
		setValue(x(1197))
		setValue(x(1199))
		putRecord(any 1 x(1204))
		setConstant(det)
		putList(x(1203))
		setValue(x(1204))
		setConstant(nil)
		putList(x(1202))
		setConstant(det)
		setValue(x(1203))
		putList(x(1205))
		setConstant(false)
		setConstant(nil)
		putList(x(1207))
		setConstant(bool)
		setConstant(nil)
		putList(x(1206))
		setConstant(value)
		setValue(x(1207))
		putRecord(builtin [det imods test types] x(1201))
		setValue(x(1202))
		setValue(x(1205))
		setConstant(true)
		setValue(x(1206))
		putRecord(any 1 x(1211))
		setConstant(det)
		putList(x(1210))
		setValue(x(1211))
		setConstant(nil)
		putList(x(1209))
		setConstant(det)
		setValue(x(1210))
		putList(x(1212))
		setConstant(false)
		setConstant(nil)
		putList(x(1214))
		setConstant(bool)
		setConstant(nil)
		putList(x(1213))
		setConstant('thread')
		setValue(x(1214))
		putRecord(builtin [det imods test types] x(1208))
		setValue(x(1209))
		setValue(x(1212))
		setConstant(true)
		setValue(x(1213))
		putList(x(1216))
		setConstant(det)
		setConstant(nil)
		putList(x(1217))
		setConstant(false)
		setConstant(nil)
		putList(x(1218))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1215))
		setValue(x(1216))
		setValue(x(1217))
		setValue(x(1218))
		putList(x(1220))
		setConstant(det)
		setConstant(nil)
		putList(x(1221))
		setConstant(false)
		setConstant(nil)
		putList(x(1222))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1219))
		setValue(x(1220))
		setValue(x(1221))
		setValue(x(1222))
		putList(x(1225))
		setConstant(det)
		setConstant(nil)
		putList(x(1224))
		setConstant(det)
		setValue(x(1225))
		putList(x(1227))
		setConstant(false)
		setConstant(nil)
		putList(x(1226))
		setConstant(false)
		setValue(x(1227))
		putList(x(1229))
		setConstant(atom)
		setConstant(nil)
		putList(x(1228))
		setConstant('thread')
		setValue(x(1229))
		putRecord(builtin [det imods types] x(1223))
		setValue(x(1224))
		setValue(x(1226))
		setValue(x(1228))
		putRecord(any 1 x(1233))
		setConstant(det)
		putList(x(1232))
		setValue(x(1233))
		setConstant(nil)
		putList(x(1231))
		setConstant(det)
		setValue(x(1232))
		putList(x(1234))
		setConstant(false)
		setConstant(nil)
		putList(x(1236))
		setConstant(atom)
		setConstant(nil)
		putList(x(1235))
		setConstant('thread')
		setValue(x(1236))
		putRecord(builtin [det imods types] x(1230))
		setValue(x(1231))
		setValue(x(1234))
		setValue(x(1235))
		putList(x(1238))
		setConstant(det)
		setConstant(nil)
		putList(x(1239))
		setConstant(false)
		setConstant(nil)
		putList(x(1240))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1237))
		setValue(x(1238))
		setValue(x(1239))
		setValue(x(1240))
		putRecord(any 1 x(1243))
		setConstant(det)
		putList(x(1242))
		setValue(x(1243))
		setConstant(nil)
		putList(x(1244))
		setConstant('thread')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1241))
		setValue(x(1242))
		setConstant(nil)
		setValue(x(1244))
		putRecord(any 1 x(1247))
		setConstant(det)
		putList(x(1246))
		setValue(x(1247))
		setConstant(nil)
		putList(x(1248))
		setConstant(int)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1245))
		setValue(x(1246))
		setConstant(nil)
		setValue(x(1248))
		putList(x(1250))
		setConstant(det)
		setConstant(nil)
		putList(x(1251))
		setConstant(false)
		setConstant(nil)
		putList(x(1252))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1249))
		setValue(x(1250))
		setValue(x(1251))
		setValue(x(1252))
		putRecord(any 1 x(1256))
		setConstant(det)
		putList(x(1255))
		setValue(x(1256))
		setConstant(nil)
		putList(x(1254))
		setConstant(any)
		setValue(x(1255))
		putList(x(1257))
		setConstant(false)
		setConstant(nil)
		putList(x(1259))
		setConstant(tuple)
		setConstant(nil)
		putList(x(1258))
		setConstant(value)
		setValue(x(1259))
		putRecord(builtin [det imods types] x(1253))
		setValue(x(1254))
		setValue(x(1257))
		setValue(x(1258))
		putRecord(any 1 x(1263))
		setConstant(det)
		putList(x(1262))
		setValue(x(1263))
		setConstant(nil)
		putList(x(1261))
		setConstant(det)
		setValue(x(1262))
		putList(x(1264))
		setConstant(false)
		setConstant(nil)
		putList(x(1266))
		setConstant(atom)
		setConstant(nil)
		putList(x(1265))
		setConstant(value)
		setValue(x(1266))
		putRecord(builtin [det imods types] x(1260))
		setValue(x(1261))
		setValue(x(1264))
		setValue(x(1265))
		putList(x(1268))
		setConstant(det)
		setConstant(nil)
		putList(x(1269))
		setConstant(false)
		setConstant(nil)
		putList(x(1270))
		setConstant(value)
		setConstant(nil)
		putRecord(builtin [det imods types] x(1267))
		setValue(x(1268))
		setValue(x(1269))
		setValue(x(1270))
		putList(x(1273))
		setConstant(any)
		setConstant(nil)
		putList(x(1272))
		setConstant(any)
		setValue(x(1273))
		putList(x(1275))
		setConstant(false)
		setConstant(nil)
		putList(x(1274))
		setConstant(false)
		setValue(x(1275))
		putList(x(1277))
		setConstant(value)
		setConstant(nil)
		putList(x(1276))
		setConstant(value)
		setValue(x(1277))
		putRecord(builtin [det imods types] x(1271))
		setValue(x(1272))
		setValue(x(1274))
		setValue(x(1276))
		putRecord(any 1 x(1281))
		setConstant(det)
		putList(x(1280))
		setValue(x(1281))
		setConstant(nil)
		putList(x(1279))
		setConstant(det)
		setValue(x(1280))
		putList(x(1282))
		setConstant(false)
		setConstant(nil)
		putList(x(1284))
		setConstant(int)
		setConstant(nil)
		putList(x(1283))
		setConstant(record)
		setValue(x(1284))
		putRecord(builtin [det imods types] x(1278))
		setValue(x(1279))
		setValue(x(1282))
		setValue(x(1283))
		putList(x(1287))
		setConstant(any)
		setConstant(nil)
		putList(x(1286))
		setConstant(detOrKinded)
		setValue(x(1287))
		putList(x(1289))
		setConstant(false)
		setConstant(nil)
		putList(x(1288))
		setConstant(false)
		setValue(x(1289))
		putList(x(1291))
		setConstant(int)
		setConstant(nil)
		putList(x(1290))
		setConstant(record)
		setValue(x(1291))
		putRecord(builtin [det imods types] x(1285))
		setValue(x(1286))
		setValue(x(1288))
		setValue(x(1290))
		putRecord(any 1 x(1296))
		setConstant(det)
		putList(x(1295))
		setValue(x(1296))
		setConstant(nil)
		putList(x(1294))
		setConstant(detOrKinded)
		setValue(x(1295))
		putList(x(1293))
		setConstant(detOrKinded)
		setValue(x(1294))
		putList(x(1298))
		setConstant(false)
		setConstant(nil)
		putList(x(1297))
		setConstant(false)
		setValue(x(1298))
		putList(x(1301))
		setConstant(bool)
		setConstant(nil)
		putList(x(1300))
		setConstant(value)
		setValue(x(1301))
		putList(x(1299))
		setConstant(value)
		setValue(x(1300))
		putRecord(builtin [det imods negated test types] x(1292))
		setValue(x(1293))
		setValue(x(1297))
		setConstant('==')
		setConstant(true)
		setValue(x(1299))
		putList(x(1305))
		setConstant(any)
		setConstant(nil)
		putList(x(1304))
		setConstant(det)
		setValue(x(1305))
		putList(x(1303))
		setConstant(detOrKinded)
		setValue(x(1304))
		putList(x(1307))
		setConstant(false)
		setConstant(nil)
		putList(x(1306))
		setConstant(false)
		setValue(x(1307))
		putList(x(1310))
		setConstant(value)
		setConstant(nil)
		putList(x(1309))
		setConstant(feature)
		setValue(x(1310))
		putList(x(1308))
		setConstant(recordCOrChunk)
		setValue(x(1309))
		putRecord(builtin [det imods types] x(1302))
		setValue(x(1303))
		setValue(x(1306))
		setValue(x(1308))
		putRecord(any 1 x(1315))
		setConstant(det)
		putList(x(1314))
		setValue(x(1315))
		setConstant(nil)
		putList(x(1313))
		setConstant(det)
		setValue(x(1314))
		putList(x(1312))
		setConstant(det)
		setValue(x(1313))
		putList(x(1317))
		setConstant(false)
		setConstant(nil)
		putList(x(1316))
		setConstant(false)
		setValue(x(1317))
		putList(x(1320))
		setConstant(procedure)
		setConstant(nil)
		putList(x(1319))
		setConstant(int)
		setValue(x(1320))
		putList(x(1318))
		setConstant(virtualString)
		setValue(x(1319))
		putRecord(builtin [det imods types] x(1311))
		setValue(x(1312))
		setValue(x(1316))
		setValue(x(1318))
		putRecord(any 1 x(1324))
		setConstant(det)
		putList(x(1323))
		setValue(x(1324))
		setConstant(nil)
		putList(x(1322))
		setConstant(det)
		setValue(x(1323))
		putList(x(1325))
		setConstant(false)
		setConstant(nil)
		putList(x(1327))
		setConstant(record)
		setConstant(nil)
		putList(x(1326))
		setConstant(record)
		setValue(x(1327))
		putRecord(builtin [det imods types] x(1321))
		setValue(x(1322))
		setValue(x(1325))
		setValue(x(1326))
		putRecord(any 1 x(1332))
		setConstant(det)
		putList(x(1331))
		setValue(x(1332))
		setConstant(nil)
		putList(x(1330))
		setConstant(det)
		setValue(x(1331))
		putList(x(1329))
		setConstant(det)
		setValue(x(1330))
		putList(x(1334))
		setConstant(false)
		setConstant(nil)
		putList(x(1333))
		setConstant(false)
		setValue(x(1334))
		putList(x(1337))
		setConstant(int)
		setConstant(nil)
		putList(x(1336))
		setConstant(int)
		setValue(x(1337))
		putList(x(1335))
		setConstant(int)
		setValue(x(1336))
		putRecord(builtin [det imods types] x(1328))
		setValue(x(1329))
		setValue(x(1333))
		setValue(x(1335))
		putRecord(any 1 x(1342))
		setConstant(det)
		putList(x(1341))
		setValue(x(1342))
		setConstant(nil)
		putList(x(1340))
		setConstant(det)
		setValue(x(1341))
		putList(x(1339))
		setConstant(det)
		setValue(x(1340))
		putList(x(1344))
		setConstant(false)
		setConstant(nil)
		putList(x(1343))
		setConstant(false)
		setValue(x(1344))
		putList(x(1347))
		setConstant(float)
		setConstant(nil)
		putList(x(1346))
		setConstant(float)
		setValue(x(1347))
		putList(x(1345))
		setConstant(float)
		setValue(x(1346))
		putRecord(builtin [det imods types] x(1338))
		setValue(x(1339))
		setValue(x(1343))
		setValue(x(1345))
		putRecord(any 1 x(1351))
		setConstant(det)
		putList(x(1350))
		setValue(x(1351))
		setConstant(nil)
		putList(x(1349))
		setConstant(det)
		setValue(x(1350))
		putList(x(1352))
		setConstant(false)
		setConstant(nil)
		putList(x(1354))
		setConstant('class')
		setConstant(nil)
		putList(x(1353))
		setConstant(object)
		setValue(x(1354))
		putRecord(builtin [det imods types] x(1348))
		setValue(x(1349))
		setValue(x(1352))
		setValue(x(1353))
		putRecord(any 1 x(1358))
		setConstant(det)
		putList(x(1357))
		setValue(x(1358))
		setConstant(nil)
		putList(x(1356))
		setConstant(any)
		setValue(x(1357))
		putList(x(1359))
		setConstant(false)
		setConstant(nil)
		putList(x(1361))
		setConstant(bool)
		setConstant(nil)
		putList(x(1360))
		setConstant(value)
		setValue(x(1361))
		putRecord(builtin [det imods test types] x(1355))
		setValue(x(1356))
		setValue(x(1359))
		setConstant(true)
		setValue(x(1360))
		putRecord(any 1 x(1370))
		setConstant(det)
		putList(x(1369))
		setValue(x(1370))
		setConstant(nil)
		putList(x(1368))
		setConstant(det)
		setValue(x(1369))
		putList(x(1367))
		setConstant(det)
		setValue(x(1368))
		putList(x(1366))
		setConstant(det)
		setValue(x(1367))
		putList(x(1365))
		setConstant(det)
		setValue(x(1366))
		putList(x(1364))
		setConstant(det)
		setValue(x(1365))
		putList(x(1363))
		setConstant(det)
		setValue(x(1364))
		putList(x(1376))
		setConstant(false)
		setConstant(nil)
		putList(x(1375))
		setConstant(false)
		setValue(x(1376))
		putList(x(1374))
		setConstant(false)
		setValue(x(1375))
		putList(x(1373))
		setConstant(false)
		setValue(x(1374))
		putList(x(1372))
		setConstant(false)
		setValue(x(1373))
		putList(x(1371))
		setConstant(false)
		setValue(x(1372))
		putList(x(1383))
		setConstant('class')
		setConstant(nil)
		putList(x(1382))
		setConstant(bool)
		setValue(x(1383))
		putList(x(1381))
		setConstant(bool)
		setValue(x(1382))
		putList(x(1380))
		setConstant(dictionary)
		setValue(x(1381))
		putList(x(1379))
		setConstant(record)
		setValue(x(1380))
		putList(x(1378))
		setConstant(record)
		setValue(x(1379))
		putList(x(1377))
		setConstant(dictionary)
		setValue(x(1378))
		putRecord(builtin [det imods types] x(1362))
		setValue(x(1363))
		setValue(x(1371))
		setValue(x(1377))
		putRecord(any 1 x(1388))
		setConstant(det)
		putList(x(1387))
		setValue(x(1388))
		setConstant(nil)
		putList(x(1386))
		setConstant(det)
		setValue(x(1387))
		putList(x(1385))
		setConstant(det)
		setValue(x(1386))
		putList(x(1390))
		setConstant(false)
		setConstant(nil)
		putList(x(1389))
		setConstant(false)
		setValue(x(1390))
		putList(x(1393))
		setConstant(int)
		setConstant(nil)
		putList(x(1392))
		setConstant(int)
		setValue(x(1393))
		putList(x(1391))
		setConstant(int)
		setValue(x(1392))
		putRecord(builtin [det imods types] x(1384))
		setValue(x(1385))
		setValue(x(1389))
		setValue(x(1391))
		putList(x(1397))
		setConstant(any)
		setConstant(nil)
		putList(x(1396))
		setConstant(any)
		setValue(x(1397))
		putList(x(1395))
		setConstant(detOrKinded)
		setValue(x(1396))
		putList(x(1400))
		setConstant(false)
		setConstant(nil)
		putList(x(1399))
		setConstant(false)
		setValue(x(1400))
		putList(x(1398))
		setConstant(false)
		setValue(x(1399))
		putRecord(list 1 x(1404))
		setConstant(feature)
		putList(x(1403))
		setValue(x(1404))
		setConstant(nil)
		putList(x(1402))
		setConstant(value)
		setValue(x(1403))
		putList(x(1401))
		setConstant(recordC)
		setValue(x(1402))
		putRecord(builtin [det imods types] x(1394))
		setValue(x(1395))
		setValue(x(1398))
		setValue(x(1401))
		putRecord(any 1 x(1408))
		setConstant(det)
		putList(x(1407))
		setValue(x(1408))
		setConstant(nil)
		putList(x(1406))
		setConstant(det)
		setValue(x(1407))
		putList(x(1409))
		setConstant(false)
		setConstant(nil)
		putList(x(1411))
		setConstant(object)
		setConstant(nil)
		putList(x(1410))
		setConstant('class')
		setValue(x(1411))
		putRecord(builtin [det imods types] x(1405))
		setValue(x(1406))
		setValue(x(1409))
		setValue(x(1410))
		putList(x(1415))
		setConstant(any)
		setConstant(nil)
		putList(x(1414))
		setConstant(any)
		setValue(x(1415))
		putList(x(1413))
		setConstant(any)
		setValue(x(1414))
		putList(x(1417))
		setConstant(false)
		setConstant(nil)
		putList(x(1416))
		setConstant(false)
		setValue(x(1417))
		putList(x(1420))
		setConstant(value)
		setConstant(nil)
		putList(x(1419))
		setConstant(value)
		setValue(x(1420))
		putList(x(1418))
		setConstant(value)
		setValue(x(1419))
		putRecord(builtin [det imods types] x(1412))
		setValue(x(1413))
		setValue(x(1416))
		setValue(x(1418))
		putList(x(1422))
		setConstant(any)
		setConstant(nil)
		putList(x(1423))
		setConstant(false)
		setConstant(nil)
		putList(x(1424))
		setConstant('lock')
		setConstant(nil)
		putRecord(builtin [det imods types] x(1421))
		setValue(x(1422))
		setValue(x(1423))
		setValue(x(1424))
		putRecord(any 1 x(1429))
		setConstant(det)
		putList(x(1428))
		setValue(x(1429))
		setConstant(nil)
		putList(x(1427))
		setConstant(det)
		setValue(x(1428))
		putList(x(1426))
		setConstant(det)
		setValue(x(1427))
		putList(x(1431))
		setConstant(false)
		setConstant(nil)
		putList(x(1430))
		setConstant(false)
		setValue(x(1431))
		putRecord(pair 2 x(1435))
		setConstant(feature)
		setConstant(value)
		putRecord(list 1 x(1434))
		setValue(x(1435))
		putList(x(1436))
		setConstant(record)
		setConstant(nil)
		putList(x(1433))
		setValue(x(1434))
		setValue(x(1436))
		putList(x(1432))
		setConstant(literal)
		setValue(x(1433))
		putRecord(builtin [det imods types] x(1425))
		setValue(x(1426))
		setValue(x(1430))
		setValue(x(1432))
		putList(x(1440))
		setConstant(det)
		setConstant(nil)
		putList(x(1439))
		setConstant(det)
		setValue(x(1440))
		putList(x(1438))
		setConstant(det)
		setValue(x(1439))
		putList(x(1443))
		setConstant(false)
		setConstant(nil)
		putList(x(1442))
		setConstant(false)
		setValue(x(1443))
		putList(x(1441))
		setConstant(false)
		setValue(x(1442))
		putList(x(1446))
		setConstant(object)
		setConstant(nil)
		putList(x(1445))
		setConstant('class')
		setValue(x(1446))
		putList(x(1444))
		setConstant(record)
		setValue(x(1445))
		putRecord(builtin [det imods types] x(1437))
		setValue(x(1438))
		setValue(x(1441))
		setValue(x(1444))
		putList(x(1450))
		setConstant(any)
		setConstant(nil)
		putList(x(1449))
		setConstant(det)
		setValue(x(1450))
		putList(x(1448))
		setConstant(det)
		setValue(x(1449))
		putList(x(1453))
		setConstant(false)
		setConstant(nil)
		putList(x(1452))
		setConstant(false)
		setValue(x(1453))
		putList(x(1451))
		setConstant(false)
		setValue(x(1452))
		putList(x(1456))
		setConstant(record)
		setConstant(nil)
		putList(x(1455))
		setConstant(int)
		setValue(x(1456))
		putList(x(1454))
		setConstant(literal)
		setValue(x(1455))
		putRecord(builtin [det imods types] x(1447))
		setValue(x(1448))
		setValue(x(1451))
		setValue(x(1454))
		putRecord(any 1 x(1461))
		setConstant(det)
		putList(x(1460))
		setValue(x(1461))
		setConstant(nil)
		putList(x(1459))
		setConstant(det)
		setValue(x(1460))
		putList(x(1458))
		setConstant(any)
		setValue(x(1459))
		putList(x(1463))
		setConstant(true)
		setConstant(nil)
		putList(x(1462))
		setConstant(true)
		setValue(x(1463))
		putList(x(1466))
		setConstant(int)
		setConstant(nil)
		putList(x(1465))
		setConstant(int)
		setValue(x(1466))
		putList(x(1464))
		setConstant(virtualString)
		setValue(x(1465))
		putRecord(builtin [det imods types] x(1457))
		setValue(x(1458))
		setValue(x(1462))
		setValue(x(1464))
		putRecord(any 1 x(1470))
		setConstant(det)
		putList(x(1469))
		setValue(x(1470))
		setConstant(nil)
		putList(x(1468))
		setConstant(det)
		setValue(x(1469))
		putList(x(1471))
		setConstant(false)
		setConstant(nil)
		putList(x(1473))
		setConstant(number)
		setConstant(nil)
		putList(x(1472))
		setConstant(number)
		setValue(x(1473))
		putRecord(builtin [det imods types] x(1467))
		setValue(x(1468))
		setValue(x(1471))
		setValue(x(1472))
		putRecord(builtinTable ['*' '+' '+1' ',' '-' '-1' '.' '/' '<' '<-' '=' '=<' '==' '>' '>=' '@' 'Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'And' 'Arity' 'Array.high' 'Array.low' 'Asin' 'Assign' 'Atan' 'Atan2' 'AtomToString' 'BitArray.and' 'BitArray.card' 'BitArray.clear' 'BitArray.clone' 'BitArray.complementToList' 'BitArray.disjoint' 'BitArray.high' 'BitArray.is' 'BitArray.low' 'BitArray.new' 'BitArray.nimpl' 'BitArray.or' 'BitArray.set' 'BitArray.test' 'BitArray.toList' 'BootManager' 'ByNeed' 'Ceil' 'Char.isAlNum' 'Char.isAlpha' 'Char.isCntrl' 'Char.isDigit' 'Char.isGraph' 'Char.isLower' 'Char.isPrint' 'Char.isPunct' 'Char.isSpace' 'Char.isUpper' 'Char.isXDigit' 'Char.toAtom' 'Char.toLower' 'Char.toUpper' 'Char.type' 'CondSelect' 'Cos' 'Delay' 'Dictionary.clone' 'Dictionary.condGet' 'Dictionary.entries' 'Dictionary.get' 'Dictionary.items' 'Dictionary.keys' 'Dictionary.markSafe' 'Dictionary.member' 'Dictionary.put' 'Dictionary.remove' 'Dictionary.removeAll' 'Exception.location' 'Exception.raise' 'Exception.raiseDebug' 'Exception.raiseDebugCheck' 'Exception.raiseError' 'Exception.taskStackError' 'Exchange' 'Exp' 'FloatToInt' 'FloatToString' 'Floor' 'ForeignPointer.toInt' 'Future' 'Get' 'HasFeature' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Lock' 'Log' 'MakeTuple' 'Max' 'Min' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Put' 'Round' 'Send' 'Sin' 'Space.ask' 'Space.askVerbose' 'Space.clone' 'Space.commit' 'Space.inject' 'Space.merge' 'Space.new' 'Sqrt' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread.create' 'Thread.getPriority' 'Thread.injectException' 'Thread.is' 'Thread.isSuspended' 'Thread.preempt' 'Thread.resume' 'Thread.setPriority' 'Thread.state' 'Thread.suspend' 'Thread.this' 'Time.time' 'Unlock' 'Value.status' 'Value.type' 'Wait' 'WaitOr' 'Width' 'WidthC' '\\=' '^' builtin copyRecord 'div' fPow getClass hasLabel makeClass 'mod' monitorArity newObject ooExch ooGetLock record send tellRecordSize virtualStringLength '~'] y(185))
		setValue(x(0))
		setValue(x(10))
		setValue(x(20))
		setValue(x(27))
		setValue(x(34))
		setValue(x(44))
		setValue(x(51))
		setValue(x(60))
		setValue(x(70))
		setValue(x(80))
		setValue(x(87))
		setValue(x(94))
		setValue(x(104))
		setValue(x(114))
		setValue(x(124))
		setValue(x(134))
		setValue(x(140))
		setValue(x(147))
		setValue(x(153))
		setValue(x(160))
		setValue(x(170))
		setValue(x(183))
		setValue(x(195))
		setValue(x(202))
		setValue(x(212))
		setValue(x(220))
		setValue(x(227))
		setValue(x(234))
		setValue(x(241))
		setValue(x(248))
		setValue(x(255))
		setValue(x(265))
		setValue(x(272))
		setValue(x(279))
		setValue(x(286))
		setValue(x(293))
		setValue(x(300))
		setValue(x(308))
		setValue(x(318))
		setValue(x(325))
		setValue(x(332))
		setValue(x(339))
		setValue(x(349))
		setValue(x(356))
		setValue(x(363))
		setValue(x(370))
		setValue(x(380))
		setValue(x(388))
		setValue(x(395))
		setValue(x(401))
		setValue(x(408))
		setValue(x(415))
		setValue(x(422))
		setValue(x(429))
		setValue(x(436))
		setValue(x(443))
		setValue(x(450))
		setValue(x(457))
		setValue(x(464))
		setValue(x(471))
		setValue(x(478))
		setValue(x(485))
		setValue(x(492))
		setValue(x(499))
		setValue(x(506))
		setValue(x(513))
		setValue(x(525))
		setValue(x(532))
		setValue(x(536))
		setValue(x(543))
		setValue(x(555))
		setValue(x(564))
		setValue(x(573))
		setValue(x(581))
		setValue(x(589))
		setValue(x(593))
		setValue(x(603))
		setValue(x(613))
		setValue(x(620))
		setValue(x(624))
		setValue(x(629))
		setValue(x(633))
		setValue(x(637))
		setValue(x(644))
		setValue(x(648))
		setValue(x(653))
		setValue(x(663))
		setValue(x(670))
		setValue(x(677))
		setValue(x(684))
		setValue(x(691))
		setValue(x(698))
		setValue(x(704))
		setValue(x(713))
		setValue(x(723))
		setValue(x(730))
		setValue(x(737))
		setValue(x(744))
		setValue(x(751))
		setValue(x(758))
		setValue(x(765))
		setValue(x(772))
		setValue(x(779))
		setValue(x(786))
		setValue(x(793))
		setValue(x(800))
		setValue(x(807))
		setValue(x(814))
		setValue(x(821))
		setValue(x(828))
		setValue(x(835))
		setValue(x(842))
		setValue(x(849))
		setValue(x(856))
		setValue(x(863))
		setValue(x(870))
		setValue(x(877))
		setValue(x(884))
		setValue(x(891))
		setValue(x(898))
		setValue(x(905))
		setValue(x(912))
		setValue(x(919))
		setValue(x(926))
		setValue(x(933))
		setValue(x(937))
		setValue(x(944))
		setValue(x(954))
		setValue(x(964))
		setValue(x(974))
		setValue(x(984))
		setValue(x(997))
		setValue(x(1004))
		setValue(x(1011))
		setValue(x(1015))
		setValue(x(1019))
		setValue(x(1023))
		setValue(x(1030))
		setValue(x(1037))
		setValue(x(1044))
		setValue(x(1054))
		setValue(x(1061))
		setValue(x(1071))
		setValue(x(1078))
		setValue(x(1085))
		setValue(x(1092))
		setValue(x(1099))
		setValue(x(1106))
		setValue(x(1113))
		setValue(x(1120))
		setValue(x(1127))
		setValue(x(1134))
		setValue(x(1141))
		setValue(x(1148))
		setValue(x(1155))
		setValue(x(1162))
		setValue(x(1169))
		setValue(x(1176))
		setValue(x(1183))
		setValue(x(1187))
		setValue(x(1194))
		setValue(x(1201))
		setValue(x(1208))
		setValue(x(1215))
		setValue(x(1219))
		setValue(x(1223))
		setValue(x(1230))
		setValue(x(1237))
		setValue(x(1241))
		setValue(x(1245))
		setValue(x(1249))
		setValue(x(1253))
		setValue(x(1260))
		setValue(x(1267))
		setValue(x(1271))
		setValue(x(1278))
		setValue(x(1285))
		setValue(x(1292))
		setValue(x(1302))
		setValue(x(1311))
		setValue(x(1321))
		setValue(x(1328))
		setValue(x(1338))
		setValue(x(1348))
		setValue(x(1355))
		setValue(x(1362))
		setValue(x(1384))
		setValue(x(1394))
		setValue(x(1405))
		setValue(x(1412))
		setValue(x(1421))
		setValue(x(1425))
		setValue(x(1437))
		setValue(x(1447))
		setValue(x(1457))
		setValue(x(1467))
lbl(81009)	definition(x(2) 81030 pid('E' 2 pos('./compiler/Builtins.oz' 58 3) nil 3) <P: 639> [y(1)])
		putRecord(compiler 3 x(2))
		setConstant(badBuiltinTableEntry)
		setValue(x(0))
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(81009)
lbl(81030)	definition(x(1) 81471 pid('' 2 pos('./compiler/Builtins.oz' 67 4) nil 5) <P: 640> [y(185)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(types x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 81070)
lbl(81049)	inlineDot(x(1) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81070 81081)
		branch(81092)
lbl(81070)	move(y(0) x(0))
		putConstant(types x(1))
		genFastCall(<P: 639> 4)
		branch(81092)
lbl(81081)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(68)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81092)	move(y(1) x(0))
		putConstant(det x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 81123)
lbl(81102)	inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81123 81134)
		branch(81145)
lbl(81123)	move(y(0) x(0))
		putConstant(det x(1))
		genFastCall(<P: 639> 4)
		branch(81145)
lbl(81134)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(71)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81145)	move(y(1) x(0))
		inlineDot(x(0) types x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) det x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 81199)
lbl(81190)	move(y(0) x(0))
		putConstant(typesdet x(1))
		genFastCall(<P: 639> 4)
lbl(81199)	move(y(1) x(0))
		putConstant(imods x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81214)
		branch(81292)
lbl(81214)	inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 81235 81281)
		branch(81292)
lbl(81235)	move(y(1) x(0))
		inlineDot(x(0) imods x(2) cache)
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		inlineDot(x(0) iarity x(1) cache)
		move(y(2) x(2))
		testLT(x(1) x(2) x(3) 81292)
lbl(81270)	move(y(0) x(0))
		putConstant(imods x(1))
		genFastCall(<P: 639> 4)
		branch(81292)
lbl(81281)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(78)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(81292)	move(y(1) x(0))
		putConstant(test x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81307)
		branch(81328)
lbl(81307)	inlineDot(x(0) test x(1) cache)
		testBI('IsBool' [x(1)]#[x(2)] 81319)
		branch(81328)
lbl(81319)	move(y(0) x(0))
		putConstant(test x(1))
		genFastCall(<P: 639> 4)
lbl(81328)	move(y(1) x(0))
		putConstant(negated x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 81432 81421)
		inlineDot(x(0) negated x(1) cache)
		testBI('IsAtom' [x(1)]#[x(2)] 81410)
		putConstant(test x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 81399)
		move(g(0) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 81388)
		callBI('.' [x(2) x(1)]#[x(3)])
		putConstant(test x(1))
		testBI('HasFeature' [x(3) x(1)]#[x(4)] 81377)
		branch(81432)
lbl(81377)	move(y(0) x(0))
		putConstant(negatedNotTest2 x(1))
		genFastCall(<P: 639> 4)
		branch(81432)
lbl(81388)	move(y(0) x(0))
		putConstant(undefinedNegatedBuiltin x(1))
		genFastCall(<P: 639> 4)
		branch(81432)
lbl(81399)	move(y(0) x(0))
		putConstant(negatedNotTest x(1))
		genFastCall(<P: 639> 4)
		branch(81432)
lbl(81410)	move(y(0) x(0))
		putConstant(negated x(1))
		genFastCall(<P: 639> 4)
		branch(81432)
lbl(81421)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(86)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(81432)	move(y(1) x(0))
		putConstant(doesNotReturn x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBI('Not' [x(2)]#[x(1)] 81447)
		deAllocateL4
		return
lbl(81447)	inlineDot(x(0) doesNotReturn x(0) cache)
		testBI('IsBool' [x(0)]#[x(1)] 81459)
		deAllocateL4
		return
lbl(81459)	move(y(0) x(0))
		putConstant(doesNotReturn x(1))
		deAllocateL4
		genFastCall(<P: 639> 5)
		endDefinition(81030)
lbl(81471)	move(y(185) x(0))
		genFastCall(<P: 175> 4)
lbl(81477)	definition(x(2) 81530 pid('' 2 pos('./compiler/Builtins.oz' 107 3) nil 2) <P: 641> [y(185)])
		putList(x(0))
		setPredicateRef(<Q: 642>)
		setConstant(nil)
lbl(81489)	definitionCopy(x(0) 81525 pid('/body' 0 pos('./compiler/Builtins.oz' 107 3) [once] 1) unit [g(0) x(1)])
lbl(81495)	definition(x(0) 81516 pid('GetBuiltinInfo' 2 pos('./compiler/Builtins.oz' 111 6) nil 5) <Q: 642> [g(0)])
		move(g(0) x(2))
		putConstant(noInformation x(3))
		callBI('CondSelect' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(81495)
lbl(81516)	getRecord('export' [getInfo] g(1))
		unifyValue(x(0))
		return
		endDefinition(81489)
lbl(81525)	tailCall(x(0) 0)
		endDefinition(81477)
lbl(81530)	putConstant('procedure/2' x(4))
		putRecord('export' [getInfo] x(1))
		setValue(x(4))
		putConstant('import' x(0))
		createVariableMove(y(185) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant(false y(186))
		putConstant(true y(187))
		putConstant(unit x(4))
lbl(81557)	definition(x(2) 126399 pid('' 2 pos('./compiler/StaticAnalysis.oz' 37 0) nil 4) <P: 643> [y(134) y(161) y(205) y(129) y(206) y(100) y(89) y(211) y(1) y(213) y(216) y(210) y(202) y(170) y(174) y(142) y(215) y(189) y(157) y(163) y(176) y(38) y(42) y(30) y(50) y(173) y(7) y(131) y(64) y(57) y(107) y(26) y(28) y(40) y(86) y(180) y(35) y(127) y(133) y(138) y(179) y(90) y(27) y(214) y(108) y(212) y(145) y(193) y(194) y(186) y(187) y(165) y(166) y(190) y(99) y(2) y(128) y(175) y(132) y(183) x(4) y(219) y(220) y(221) y(222) y(218) y(47)])
		putList(x(2))
		setPredicateRef(<Q: 644>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 645>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 646>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 647>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 648>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 649>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 650>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 651>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 652>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAVariableOccurrence>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAValueNode>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ImAConstruction>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ImAToken>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 653>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 654>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 655>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 656>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 657>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 658>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 659>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 660>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 661>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 662>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 663>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 664>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 665>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 666>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 667>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 668>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 669>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 670>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 671>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 672>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 673>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 674>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 675>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 676>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 677>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 692>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 693>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 694>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 695>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 696>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 697>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 698>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 699>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 700>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 701>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 702>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 703>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 704>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 705>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 706>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 707>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 708>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 709>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 710>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 711>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 712>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 713>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 721>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 722>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 723>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 724>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 725>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 726>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 727>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 728>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 729>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 730>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaDo>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaLookahead>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 731>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 732>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 733>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 734>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 735>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 736>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 737>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 738>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 740>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 742>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 743>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstruction>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 744>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 745>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 746>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 747>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 748>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 749>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 750>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 751>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 752>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 753>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 754>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 755>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 756>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 757>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 758>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 759>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 760>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 761>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 762>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 763>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 764>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 765>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 766>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 767>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 768>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AssertTypes>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoDetType>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoRecDetType>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoKindedType>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 769>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 770>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 771>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 772>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 773>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 774>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 775>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 776>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 777>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 778>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 779>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 780>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 781>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 782>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 783>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 784>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 785>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 786>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 787>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 788>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 789>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 790>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 791>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 792>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 793>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 794>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 795>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 796>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 797>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 798>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 799>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 800>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 801>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AssertArity>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 802>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 803>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 804>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 805>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 806>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 807>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 808>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 809>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 810>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 811>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 812>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 813>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 814>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 815>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 816>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 817>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 818>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 819>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 820>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 821>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 822>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 823>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 824>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 825>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 826>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 827>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 828>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 829>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 830>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 831>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 832>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 833>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 834>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 835>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 836>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 837>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 838>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 839>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 840>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 841>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritProperties>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritAttributes>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InheritFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InheritMethods>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: SaBody>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 842>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 843>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 844>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 845>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 846>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 847>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 848>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 849>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 850>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 851>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 852>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 853>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 854>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 855>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 856>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 857>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 858>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 859>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 860>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 861>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 862>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 863>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 864>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 865>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 866>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 867>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 868>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 869>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 870>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 871>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 872>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 873>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 874>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 875>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 876>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ValToSubst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TypeToSubst>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RecordToSubst>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 877>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 878>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 879>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 880>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 881>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 882>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 883>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 884>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 885>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 886>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 887>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 888>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 889>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 890>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 891>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 892>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 893>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 894>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 895>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 896>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UpdateValue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnifyDeref>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 897>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 898>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 899>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 900>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 901>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 902>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 903>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 904>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 905>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 906>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 907>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 908>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 909>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 910>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 911>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 912>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 913>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 914>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 915>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 916>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 917>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 918>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 919>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 920>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 921>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 922>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 923>)
		setValue(x(2))
lbl(83375)	definitionCopy(x(3) 126394 pid('/body' 0 pos('./compiler/StaticAnalysis.oz' 37 0) [once] 82) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) g(35) g(36) g(37) g(38) g(39) g(40) g(41) g(42) g(43) g(44) g(45) g(46) g(47) g(48) g(49) g(50) g(51) g(52) g(53) g(54) g(55) g(56) g(57) g(58) g(59) g(60) g(61) g(62) g(63) g(64) g(65) g(66) x(1)])
		allocateL(36)
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
		inlineDot(x(0) 'FD' x(2) cache)
		inlineDot(x(0) 'FS' x(3) cache)
		inlineDot(x(0) 'System' x(4) cache)
		inlineDot(x(0) 'Type' x(5) cache)
		inlineDot(x(0) 'Core' x(6) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'RunTime' x(8) cache)
lbl(83434)	definition(x(9) 83485 pid('Add' 3 pos('./compiler/POTypes.oz' 33 3) nil 3) <Q: 644> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 83464 83472)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(83464)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(83472)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(34)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83434)
lbl(83485)	definition(x(9) 83562 pid('GetNames' 2 pos('./compiler/POTypes.oz' 39 3) nil 5) <Q: 645> nil)
lbl(83491)	definition(x(4) 83548 pid('' 3 pos('./compiler/POTypes.oz' 41 7) nil 5) unit nil)
		shallowGuard(83535)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(83507)	shallowThen
		allocateL3
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 644> 6)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 644> 7)
lbl(83535)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(41)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83491)
lbl(83548)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 32> 9)
		endDefinition(83485)
lbl(83562)	definition(x(9) 84678 pid('PartialOrder' 3 pos('./compiler/POTypes.oz' 45 3) nil 5) <Q: 646> [g(1) g(2) x(2) g(3) x(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 645> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
lbl(83592)	definition(x(1) 83626 pid('' 2 pos('./compiler/POTypes.oz' 49 23) nil 4) unit nil)
		shallowGuard(83613)
		getRecord(def 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(83608)	shallowThen
		unify(x(1) x(2))
		return
lbl(83613)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(49)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83592)
lbl(83626)	move(y(1) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(83646)	definition(x(0) 83807 pid('IdxMapping' 1 pos('./compiler/POTypes.oz' 53 6) nil 3) unit [g(0) y(3) g(1) g(2) y(4) y(0)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2i x(0))
		genFastCall(<P: 110> 6)
lbl(83668)	definition(x(1) 83702 pid('' 1 pos('./compiler/POTypes.oz' 58 3) nil 4) unit [g(3) g(4)])
		move(g(0) x(1))
		inlineDot(x(1) int x(2) cache)
		putRecord('#' 2 x(3))
		setConstant(1)
		setValue(g(1))
		move(x(0) x(1))
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(83668)
lbl(83702)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83708)	definition(x(1) 83765 pid('' 1 pos('./compiler/POTypes.oz' 64 3) nil 6) unit [g(3) y(0)])
		shallowGuard(83752)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83724)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) less x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(2)]#[x(5)])
		callBI('.' [x(4) x(1)]#[x(2)])
		move(x(5) x(0))
		move(x(2) x(1))
		tailCall(x(3) 2)
lbl(83752)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(64)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83708)
lbl(83765)	move(g(5) x(0))
		genFastCall(<P: 34> 4)
		move(g(3) x(0))
		inlineDot(x(0) distinct x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(3) x(0))
		inlineDot(x(0) distribute x(2) cache)
		move(y(0) x(1))
		putConstant(naive x(0))
		deAllocateL1
		tailCall(x(2) 2)
		endDefinition(83646)
lbl(83807)	createVariable(y(5))
lbl(83809)	definition(x(1) 84176 pid('BitMapping' 1 pos('./compiler/POTypes.oz' 76 6) nil 3) unit [g(0) y(6) g(1) g(3) y(4) g(4) y(5) y(3) y(0) g(5) g(6)])
		allocateL2
		move(x(0) y(0))
		move(g(1) x(1))
		putConstant(n2s x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 110> 6)
		move(g(1) x(1))
		move(y(0) x(2))
		putConstant(n2b x(0))
		genFastCall(<P: 110> 6)
lbl(83843)	definition(x(1) 83864 pid('' 1 pos('./compiler/POTypes.oz' 84 3) nil 4) unit [g(3) g(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(83843)
lbl(83864)	move(y(0) x(0))
		genFastCall(<P: 164> 4)
lbl(83870)	definition(x(1) 83957 pid('' 1 pos('./compiler/POTypes.oz' 90 3) nil 6) unit [g(5) g(4) y(1) g(6)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) var x(2) cache)
		inlineDot(x(2) upperBound x(2) cache)
		putRecord('#' 2 x(4))
		setConstant(1)
		setValue(g(1))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(g(2) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		move(g(0) x(2))
		inlineDot(x(2) include x(3) cache)
		move(g(3) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		move(x(5) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailCall(x(3) 2)
		endDefinition(83870)
lbl(83957)	move(g(7) x(0))
		genFastCall(<P: 34> 4)
lbl(83963)	definition(x(1) 84017 pid('' 1 pos('./compiler/POTypes.oz' 99 3) nil 6) unit [g(5) y(1)])
		shallowGuard(84004)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(83979)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) subset x(3) cache)
		move(g(1) x(4))
		callBI('.' [x(4) x(1)]#[x(5)])
		callBI('.' [x(4) x(2)]#[x(1)])
		move(x(5) x(0))
		tailCall(x(3) 2)
lbl(84004)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(83963)
lbl(84017)	move(g(8) x(0))
		genFastCall(<P: 34> 4)
lbl(84023)	definition(x(1) 84167 pid('' 1 pos('./compiler/POTypes.oz' 105 3) nil 4) unit [y(1) g(5) g(9) g(10) y(0) g(4)])
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createChoice
lbl(84042)	lastClause
		emptyClause
lbl(84044)	move(g(1) x(0))
		inlineDot(x(0) value x(2) cache)
		inlineDot(x(2) new x(1) cache)
		inlineDot(x(0) reflect x(2) cache)
		inlineDot(x(2) lowerBound x(2) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		call(y(2) 2)
lbl(84090)	definition(x(3) 84152 pid('' 1 pos('./compiler/POTypes.oz' 111 3) nil 4) unit [g(1) y(1) g(3) g(4) y(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) isIn x(3) cache)
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		call(x(3) 3)
		testBool(y(1) 84137 84139)
		move(g(3) x(0))
		move(g(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(3))
		callBI('BitArray.set' [x(2) x(3)]#nil)
lbl(84137)	deAllocateL2
		return
lbl(84139)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(112)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84090)
lbl(84152)	move(g(5) x(1))
		putConstant(1 x(0))
		putConstant(1 x(2))
		deAllocateL4
		genFastCall(<P: 100> 9)
		endDefinition(84023)
lbl(84167)	move(g(7) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(83809)
lbl(84176)	move(g(7) x(2))
		inlineDot(x(2) base x(3) cache)
		inlineDot(x(3) one x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(6) x(1))
		call(x(3) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		move(y(5) x(0))
		callBI('Width' [x(0)]#[x(1)])
		putConstant(i2n x(2))
		callBI('MakeTuple' [x(2) x(1)]#[x(3)])
lbl(84224)	definition(x(1) 84248 pid('' 1 pos('./compiler/POTypes.oz' 125 7) nil 5) unit [y(5) x(3)])
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		unify(x(4) x(0))
		return
		endDefinition(84224)
lbl(84248)	moveMoveXYYX(x(3) y(5) y(3) x(0))
		genFastCall(<P: 34> 4)
		move(g(7) x(0))
		inlineDot(x(0) base x(2) cache)
		inlineDot(x(2) one x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(x(2) 2)
		move(y(6) x(0))
		inlineDot(x(0) 1 x(2) cache)
lbl(84289)	definition(x(3) 84403 pid('Constrain' 3 pos('./compiler/POTypes.oz' 133 6) nil 5) unit [g(9) x(2) g(10) g(11)])
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testBI('IsAtom' [x(0)]#[x(3)] 84316)
		move(g(1) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('BitArray.or' [x(2) x(4)]#nil)
		branch(84358)
lbl(84316)	definition(x(3) 84352 pid('' 1 pos('./compiler/POTypes.oz' 138 6) nil 3) unit [g(1) g(0) y(1) g(2)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84339)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		return
lbl(84339)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(constrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84316)
lbl(84352)	move(x(3) x(1))
		genFastCall(<P: 34> 4)
lbl(84358)	definition(x(1) 84394 pid('' 1 pos('./compiler/POTypes.oz' 146 3) nil 3) unit [g(1) g(3) y(1) g(2)])
		move(g(0) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(2)] 84381)
		callBI('.' [x(1) x(0)]#[x(2)])
		move(g(2) x(0))
		callBI('BitArray.nimpl' [x(0) x(2)]#nil)
		return
lbl(84381)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(contrain)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84358)
lbl(84394)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(84289)
lbl(84403)	definition(x(0) 84441 pid('Encode' 3 pos('./compiler/POTypes.oz' 154 6) nil 6) unit [g(10) g(3) y(4) x(3)])
		testLiteral(x(0) nil 84424)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalType)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84424)	putConstant(1 x(3))
		move(g(2) x(4))
		callBI('BitArray.new' [x(3) x(4)]#[x(5)])
		unify(x(5) x(2))
		tailCall(g(3) 3)
		endDefinition(84403)
lbl(84441)	createVariable(x(4))
lbl(84443)	definition(x(1) 84502 pid('DecodeAux' 2 pos('./compiler/POTypes.oz' 167 2) nil 6) unit [g(12) y(5) g(11) x(2) x(4)])
		callBI('BitArray.toList' [x(0)]#[x(2)])
		testLiteral(x(2) nil 84460)
lbl(84456)	getLiteral(nil x(1))
		return
lbl(84460)	testList(x(2) 84487)
lbl(84463)	getVariable(x(2))
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(g(3) x(2))
		callBI('.' [x(2) x(4)]#[x(5)])
		callBI('BitArray.nimpl' [x(0) x(5)]#nil)
		getListValVar(x(1) x(4) x(1))
		tailCall(g(4) 2)
lbl(84487)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(175)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84443)
lbl(84502)	unify(x(1) x(4))
lbl(84505)	definition(x(1) 84533 pid('Decode' 2 pos('./compiler/POTypes.oz' 178 2) nil 3) unit [g(13) x(4)])
		testBI('IsFree' [x(0)]#[x(2)] 84522)
		getList(x(1))
		unifyLiteral(value)
		unifyLiteral(nil)
		return
lbl(84522)	callBI('BitArray.clone' [x(0)]#[x(2)])
		move(x(2) x(0))
		tailCall(g(1) 2)
		endDefinition(84505)
lbl(84533)	definition(x(4) 84626 pid('' 1 pos('./compiler/POTypes.oz' 193 7) nil 3) unit [y(3) g(10) x(2) x(3)])
		shallowGuard(84613)
		getRecord(def 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(84549)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(y(0) x(0))
		move(g(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 84583 84602)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(illegalPartialOrderSpecification)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84583)	move(g(2) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(g(3) 3)
lbl(84602)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(194)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(84613)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(84533)
lbl(84626)	moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		getRecord(po [decl decode encode] y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(0))
lbl(84650)	definition(x(1) 84671 pid('' 1 pos('./compiler/POTypes.oz' 206 12) nil 4) unit [g(3) y(4)])
		putConstant(1 x(1))
		move(g(1) x(2))
		callBI('BitArray.new' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(84650)
lbl(84671)	unify(x(1) x(0))
		deAllocateL7
		return
		endDefinition(83562)
lbl(84678)	putRecord('#' 2 x(9))
		setConstant('thread')
		setConstant(value)
		putRecord('#' 2 x(11))
		setConstant(space)
		setConstant(value)
		putRecord('#' 2 x(13))
		setConstant(chunk)
		setConstant(value)
		putRecord('#' 2 x(15))
		setConstant(cell)
		setConstant(value)
		putRecord('#' 2 x(17))
		setConstant(foreignPointer)
		setConstant(value)
		putRecord('#' 2 x(19))
		setConstant(fset)
		setConstant(value)
		putRecord('#' 2 x(21))
		setConstant(recordC)
		setConstant(value)
		putRecord('#' 2 x(23))
		setConstant(record)
		setConstant(recordC)
		putRecord('#' 2 x(25))
		setConstant(number)
		setConstant(value)
		putRecord('#' 2 x(27))
		setConstant(int)
		setConstant(number)
		putRecord('#' 2 x(29))
		setConstant(float)
		setConstant(number)
		putRecord('#' 2 x(31))
		setConstant(char)
		setConstant(fdIntC)
		putRecord('#' 2 x(33))
		setConstant(fdIntC)
		setConstant(int)
		putRecord('#' 2 x(35))
		setConstant(tuple)
		setConstant(record)
		putRecord('#' 2 x(37))
		setConstant(literal)
		setConstant(tuple)
		putRecord('#' 2 x(39))
		setConstant(atom)
		setConstant(literal)
		putRecord('#' 2 x(41))
		setConstant(name)
		setConstant(literal)
		putRecord('#' 2 x(43))
		setConstant(nilAtom)
		setConstant(atom)
		putRecord('#' 2 x(45))
		setConstant(cons)
		setConstant(tuple)
		putRecord('#' 2 x(47))
		setConstant(bool)
		setConstant(name)
		putRecord('#' 2 x(49))
		setConstant('unit')
		setConstant(name)
		putRecord('#' 2 x(51))
		setConstant(bitArray)
		setConstant(chunk)
		putRecord('#' 2 x(53))
		setConstant(array)
		setConstant(chunk)
		putRecord('#' 2 x(55))
		setConstant(dictionary)
		setConstant(chunk)
		putRecord('#' 2 x(57))
		setConstant('class')
		setConstant(chunk)
		putRecord('#' 2 x(59))
		setConstant(object)
		setConstant(chunk)
		putRecord('#' 2 x(61))
		setConstant('lock')
		setConstant(chunk)
		putRecord('#' 2 x(63))
		setConstant(port)
		setConstant(chunk)
		putRecord('#' 2 x(65))
		setConstant('procedure/0')
		setConstant(value)
		putRecord('#' 2 x(67))
		setConstant('procedure/1')
		setConstant(value)
		putRecord('#' 2 x(69))
		setConstant('procedure/2')
		setConstant(value)
		putRecord('#' 2 x(71))
		setConstant('procedure/3')
		setConstant(value)
		putRecord('#' 2 x(73))
		setConstant('procedure/4')
		setConstant(value)
		putRecord('#' 2 x(75))
		setConstant('procedure/5')
		setConstant(value)
		putRecord('#' 2 x(77))
		setConstant('procedure/6')
		setConstant(value)
		putRecord('#' 2 x(79))
		setConstant('procedure/>6')
		setConstant(value)
		putRecord('#' 2 x(81))
		setConstant(pair)
		setConstant(tuple)
		putList(x(80))
		setValue(x(81))
		setConstant(nil)
		putList(x(78))
		setValue(x(79))
		setValue(x(80))
		putList(x(76))
		setValue(x(77))
		setValue(x(78))
		putList(x(74))
		setValue(x(75))
		setValue(x(76))
		putList(x(72))
		setValue(x(73))
		setValue(x(74))
		putList(x(70))
		setValue(x(71))
		setValue(x(72))
		putList(x(68))
		setValue(x(69))
		setValue(x(70))
		putList(x(66))
		setValue(x(67))
		setValue(x(68))
		putList(x(64))
		setValue(x(65))
		setValue(x(66))
		putList(x(62))
		setValue(x(63))
		setValue(x(64))
		putList(x(60))
		setValue(x(61))
		setValue(x(62))
		putList(x(58))
		setValue(x(59))
		setValue(x(60))
		putList(x(56))
		setValue(x(57))
		setValue(x(58))
		putList(x(54))
		setValue(x(55))
		setValue(x(56))
		putList(x(52))
		setValue(x(53))
		setValue(x(54))
		putList(x(50))
		setValue(x(51))
		setValue(x(52))
		putList(x(48))
		setValue(x(49))
		setValue(x(50))
		putList(x(46))
		setValue(x(47))
		setValue(x(48))
		putList(x(44))
		setValue(x(45))
		setValue(x(46))
		putList(x(42))
		setValue(x(43))
		setValue(x(44))
		putList(x(40))
		setValue(x(41))
		setValue(x(42))
		putList(x(38))
		setValue(x(39))
		setValue(x(40))
		putList(x(36))
		setValue(x(37))
		setValue(x(38))
		putList(x(34))
		setValue(x(35))
		setValue(x(36))
		putList(x(32))
		setValue(x(33))
		setValue(x(34))
		putList(x(30))
		setValue(x(31))
		setValue(x(32))
		putList(x(28))
		setValue(x(29))
		setValue(x(30))
		putList(x(26))
		setValue(x(27))
		setValue(x(28))
		putList(x(24))
		setValue(x(25))
		setValue(x(26))
		putList(x(22))
		setValue(x(23))
		setValue(x(24))
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(3))
		setValue(x(9))
		setValue(x(10))
		putList(x(12))
		setConstant(literal)
		setConstant(nil)
		putList(x(11))
		setConstant(int)
		setValue(x(12))
		putRecord(def 2 x(10))
		setConstant(feature)
		setValue(x(11))
		putList(x(16))
		setConstant(atom)
		setConstant(nil)
		putList(x(15))
		setConstant(number)
		setValue(x(16))
		putRecord(def 2 x(14))
		setConstant(comparable)
		setValue(x(15))
		putList(x(20))
		setConstant(chunk)
		setConstant(nil)
		putList(x(19))
		setConstant(record)
		setValue(x(20))
		putRecord(def 2 x(18))
		setConstant(recordOrChunk)
		setValue(x(19))
		putList(x(24))
		setConstant(chunk)
		setConstant(nil)
		putList(x(23))
		setConstant(recordC)
		setValue(x(24))
		putRecord(def 2 x(22))
		setConstant(recordCOrChunk)
		setValue(x(23))
		putList(x(28))
		setConstant(cons)
		setConstant(nil)
		putList(x(27))
		setConstant(nilAtom)
		setValue(x(28))
		putRecord(def 2 x(26))
		setConstant(list)
		setValue(x(27))
		putList(x(32))
		setConstant(cons)
		setConstant(nil)
		putList(x(31))
		setConstant(nilAtom)
		setValue(x(32))
		putRecord(def 2 x(30))
		setConstant(string)
		setValue(x(31))
		putList(x(42))
		setConstant('procedure/>6')
		setConstant(nil)
		putList(x(41))
		setConstant('procedure/6')
		setValue(x(42))
		putList(x(40))
		setConstant('procedure/5')
		setValue(x(41))
		putList(x(39))
		setConstant('procedure/4')
		setValue(x(40))
		putList(x(38))
		setConstant('procedure/3')
		setValue(x(39))
		putList(x(37))
		setConstant('procedure/2')
		setValue(x(38))
		putList(x(36))
		setConstant('procedure/1')
		setValue(x(37))
		putList(x(35))
		setConstant('procedure/0')
		setValue(x(36))
		putRecord(def 2 x(34))
		setConstant(procedure)
		setValue(x(35))
		putList(x(46))
		setConstant(record)
		setConstant(nil)
		putList(x(45))
		setConstant(number)
		setValue(x(46))
		putRecord(def 2 x(44))
		setConstant(virtualString)
		setValue(x(45))
		putList(x(50))
		setConstant(object)
		setConstant(nil)
		putList(x(49))
		setConstant(procedure)
		setValue(x(50))
		putRecord(def 2 x(48))
		setConstant(procedureOrObject)
		setValue(x(49))
		putList(x(54))
		setConstant(object)
		setConstant(nil)
		putList(x(53))
		setConstant('procedure/1')
		setValue(x(54))
		putRecord(def 2 x(52))
		setConstant(unaryProcOrObject)
		setValue(x(53))
		putList(x(51))
		setValue(x(52))
		setConstant(nil)
		putList(x(47))
		setValue(x(48))
		setValue(x(51))
		putList(x(43))
		setValue(x(44))
		setValue(x(47))
		putList(x(33))
		setValue(x(34))
		setValue(x(43))
		putList(x(29))
		setValue(x(30))
		setValue(x(33))
		putList(x(25))
		setValue(x(26))
		setValue(x(29))
		putList(x(21))
		setValue(x(22))
		setValue(x(25))
		putList(x(17))
		setValue(x(18))
		setValue(x(21))
		putList(x(13))
		setValue(x(14))
		setValue(x(17))
		putList(x(9))
		setValue(x(10))
		setValue(x(13))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		move(x(8) y(6))
		move(x(3) x(0))
		move(x(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 646> 6)
lbl(85522)	definition(x(3) 86660 pid('OzValueToType' 2 pos('./compiler/POTypes.oz' 277 3) nil 11) <Q: 647> [y(7) y(1) g(13)])
		testBI('IsDet' [x(0)]#[x(2)] 86515)
		testBI('IsInt' [x(0)]#[x(2)] 85639)
		testBI('IsChar' [x(0)]#[x(2)] 85561)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(char x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85561)	allocateL2
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		testBool(y(1) 85606 85628)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85606)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(int x(0))
		putConstant(nil x(1))
		deAllocateL2
		tailCall(x(3) 3)
lbl(85628)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(285)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(85639)	testBI('IsFloat' [x(0)]#[x(2)] 85664)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(float x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85664)	testBI('IsAtom' [x(0)]#[x(2)] 85714)
		testLiteral(x(0) nil 85693)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(nilAtom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85693)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(atom x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85714)	testBI('IsName' [x(0)]#[x(2)] 85802)
		allocateL1
		move(x(1) y(0))
		testLiteral(x(0) true 85748)
lbl(85726)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(bool x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85748)	testLiteral(x(0) false 85754)
		branch(85726)
lbl(85754)	testLiteral(x(0) unit 85780)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant('unit' x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85780)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(0) x(2))
		putConstant(name x(0))
		putConstant(nil x(1))
		deAllocateL1
		tailCall(x(3) 3)
lbl(85802)	testBI('IsTuple' [x(0)]#[x(2)] 85872)
		match(x(0) ht(85851 [onRecord('|' 2 85809) onRecord('#' 2 85830)]))
lbl(85809)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cons x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85830)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(pair x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85851)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(tuple x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85872)	testBI('IsRecord' [x(0)]#[x(2)] 85897)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(record x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85897)	testBI('IsProcedure' [x(0)]#[x(2)] 86100)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		testNumber(x(2) 0 85929)
lbl(85908)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85929)	testNumber(x(2) 1 85954)
lbl(85933)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/1' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85954)	testNumber(x(2) 2 85979)
lbl(85958)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(85979)	testNumber(x(2) 3 86004)
lbl(85983)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86004)	testNumber(x(2) 4 86029)
lbl(86008)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86029)	testNumber(x(2) 5 86054)
lbl(86033)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86054)	testNumber(x(2) 6 86079)
lbl(86058)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86079)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86100)	testBI('IsCell' [x(0)]#[x(2)] 86125)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(cell x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86125)	testBI('IsChunk' [x(0)]#[x(2)] 86396)
		testBI('IsArray' [x(0)]#[x(2)] 86154)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(array x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86154)	testBI('IsDictionary' [x(0)]#[x(2)] 86179)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(dictionary x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86179)	allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(2) 86217 86385)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('class' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86217)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 86246)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(object x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86246)	testBI('IsLock' [x(0)]#[x(1)] 86272)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant('lock' x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86272)	testBI('IsPort' [x(0)]#[x(1)] 86298)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(port x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86298)	testBI('BitArray.is' [x(0)]#[x(1)] 86324)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(bitArray x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86324)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(8))
		setConstant(bitArray)
		setConstant(nil)
		putList(x(7))
		setConstant(port)
		setValue(x(8))
		putList(x(6))
		setConstant('lock')
		setValue(x(7))
		putList(x(5))
		setConstant(object)
		setValue(x(6))
		putList(x(4))
		setConstant('class')
		setValue(x(5))
		putList(x(2))
		setConstant(dictionary)
		setValue(x(4))
		putList(x(1))
		setConstant(array)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(chunk x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86385)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(336)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86396)	testBI('IsSpace' [x(0)]#[x(2)] 86421)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(space x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86421)	testBI('Thread.is' [x(0)]#[x(2)] 86446)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant('thread' x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
lbl(86446)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(10))
		setConstant('thread')
		setConstant(nil)
		putList(x(9))
		setConstant(space)
		setValue(x(10))
		putList(x(8))
		setConstant(chunk)
		setValue(x(9))
		putList(x(7))
		setConstant(cell)
		setValue(x(8))
		putList(x(6))
		setConstant(procedure)
		setValue(x(7))
		putList(x(5))
		setConstant(record)
		setValue(x(6))
		putList(x(2))
		setConstant(float)
		setValue(x(5))
		putList(x(4))
		setConstant(int)
		setValue(x(2))
		move(x(1) x(2))
		move(x(4) x(1))
		putConstant(value x(0))
		tailCall(x(3) 3)
lbl(86515)	testBI('IsKinded' [x(0)]#[x(2)] 86637)
		allocateL3
		move(g(1) x(2))
		inlineDot(x(2) is x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		testBool(y(2) 86566 86626)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(fdIntC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86566)	move(y(0) x(0))
		testBI('IsRecordC' [x(0)]#[x(1)] 86595)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(1) x(2))
		putConstant(recordC x(0))
		putConstant(nil x(1))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86595)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putList(x(2))
		setConstant(recordC)
		setConstant(nil)
		putList(x(1))
		setConstant(fdIntC)
		setValue(x(2))
		move(y(1) x(2))
		putConstant(value x(0))
		deAllocateL3
		tailCall(x(3) 3)
lbl(86626)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(360)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(86637)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(x(1) x(2))
		putConstant(value x(0))
		putConstant(nil x(1))
		tailCall(x(3) 3)
		endDefinition(85522)
lbl(86660)	definition(x(3) 86714 pid('NormalizeCoord' 2 pos('./compiler/StaticAnalysis.oz' 108 3) nil 5) <Q: 648> nil)
		testLiteral(x(0) unit 86674)
lbl(86670)	getLiteral(unit x(1))
		return
lbl(86674)	getRecord('pos' 3 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineDot(x(0) 1 x(4) cache)
		unify(x(4) x(1))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(2))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(3))
		return
		endDefinition(86660)
lbl(86714)	definition(x(3) 86735 pid('IsMinimalType' 2 pos('./compiler/StaticAnalysis.oz' 114 3) nil 4) <Q: 649> [g(17)])
		callBI('BitArray.card' [x(0)]#[x(2)])
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(86714)
lbl(86735)	definition(x(0) 86758 pid('FirstOrId' 2 pos('./compiler/StaticAnalysis.oz' 120 3) nil 2) <Q: 650> nil)
		testRecord(x(0) '#' 2 86752)
lbl(86746)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(86752)	unify(x(1) x(0))
		return
		endDefinition(86735)
lbl(86758)	definition(x(3) 86795 pid('LabelToVS' 2 pos('./compiler/StaticAnalysis.oz' 124 3) nil 5) <Q: 651> [y(2)])
		testBI('IsDet' [x(0)]#[x(2)] 86789)
		move(g(0) x(2))
		inlineDot(x(2) valueToVirtualString x(4) cache)
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(86789)	getLiteral('_' x(1))
		return
		endDefinition(86758)
lbl(86795)	definition(x(3) 86856 pid('Bool2Token' 2 pos('./compiler/StaticAnalysis.oz' 128 3) nil 4) <Q: 652> [y(6)])
		testBool(x(0) 86824 86843)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86824)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(3) cache)
		unify(x(3) x(1))
		return
lbl(86843)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(129)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(86795)
lbl(86856)	definition(x(3) 86875 pid('CurrentArity' 2 pos('./compiler/StaticAnalysis.oz' 142 3) nil 3) <Q: 653> [g(18)])
		testBI('IsFree' [x(0)]#[x(2)] 86870)
		getLiteral(nil x(1))
		return
lbl(86870)	genFastCall(<P: 114> 5)
		endDefinition(86856)
lbl(86875)	definition(x(3) 86907 pid('HasFeatureNow' 3 pos('./compiler/StaticAnalysis.oz' 150 3) nil 3) <Q: 654> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<P: 22> 7)
		endDefinition(86875)
lbl(86907)	definition(x(3) 87002 pid('GetClassData' 2 pos('./compiler/StaticAnalysis.oz' 160 3) nil 3) <Q: 655> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 86995)
lbl(86935)	testBI('IsObject' [x(0)]#[x(1)] 86995)
lbl(86939)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 86951)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(86951)	putConstant(<M: ImAToken> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 86973)
lbl(86958)	inlineDot(x(0) kind x(1) cache)
		testLiteral(x(1) 'class' 86973)
lbl(86968)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(86973)	move(y(2) x(0))
		putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 86990)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 655> 5)
lbl(86990)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(86995)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(86907)
lbl(87002)	definition(x(3) 87105 pid('GetClassOfObjectData' 2 pos('./compiler/StaticAnalysis.oz' 188 3) nil 3) <Q: 656> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87098)
lbl(87030)	testBI('IsObject' [x(0)]#[x(1)] 87098)
lbl(87034)	move(y(0) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 87046)
		getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87046)	putConstant(<M: ImAToken> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87076)
lbl(87053)	inlineDot(x(0) kind x(1) cache)
		testLiteral(x(1) object 87076)
lbl(87063)	move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(getClassNode x(1) 1 cache)
lbl(87076)	move(y(2) x(0))
		putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87093)
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 656> 5)
lbl(87093)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(87098)	getLiteral(unit y(1))
		deAllocateL3
		return
		endDefinition(87002)
lbl(87105)	definition(x(3) 87125 pid('GetDataObject' 2 pos('./compiler/StaticAnalysis.oz' 217 3) nil 3) <Q: 657> nil)
		move(x(0) x(2))
		putConstant(true x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87105)
lbl(87125)	definition(x(1) 87145 pid('GetData' 2 pos('./compiler/StaticAnalysis.oz' 227 3) nil 3) <Q: 658> nil)
		move(x(0) x(2))
		putConstant(false x(0))
		tailSendMsg(getData x(2) 2 cache)
		endDefinition(87125)
lbl(87145)	definition(x(3) 87171 pid('GetFullData' 2 pos('./compiler/StaticAnalysis.oz' 237 3) nil 4) <Q: 659> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(true x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87145)
lbl(87171)	definition(x(3) 87197 pid('GetPrintData' 2 pos('./compiler/StaticAnalysis.oz' 241 3) nil 4) <Q: 660> nil)
		move(x(0) x(3))
		move(x(1) x(2))
		putConstant(3 x(0))
		putConstant(false x(1))
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(87171)
lbl(87197)	definition(x(3) 87223 pid('IsToken' 2 pos('./compiler/StaticAnalysis.oz' 248 3) nil 4) <Q: 661> nil)
		testBI('IsObject' [x(0)]#[x(2)] 87217)
		putConstant(<M: ImAToken> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(87217)	getLiteral(false x(1))
		return
		endDefinition(87197)
lbl(87223)	move(y(3) x(2))
		inlineDot(x(2) is x(2) cache)
lbl(87232)	definition(x(3) 87298 pid('' 2 pos('./compiler/StaticAnalysis.oz' 253 2) nil 4) <Q: 662> nil)
		testBI('IsObject' [x(0)]#[x(2)] 87292)
		allocateL2
		move(x(1) y(0))
		createVariable(y(1))
		putConstant(<M: ImAConstruction> x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 87260)
		getLiteral(true y(1))
		branch(87281)
lbl(87260)	putConstant(<M: ImAValueNode> x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 87272)
		getLiteral(true y(1))
		branch(87281)
lbl(87272)	putConstant(<M: ImAToken> x(2))
		callBI('HasFeature' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
lbl(87281)	move(y(1) x(0))
		callBI('Not' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(87292)	getLiteral(false x(1))
		return
		endDefinition(87232)
lbl(87298)	putConstant(object x(4))
		callBI('AdjoinAt' [x(2) x(4) x(3)]#[x(5)])
		putRecord(dt [any det detOrKinded] y(1))
		setVariable(x(3))
		setVariable(y(3))
		setVariable(y(8))
lbl(87314)	definition(x(2) 87326 pid('DetTests.any' 2 pos('./compiler/StaticAnalysis.oz' 264 16) nil 2) <Q: 663> nil)
		getLiteral(true x(1))
		return
		endDefinition(87314)
lbl(87326)	unify(x(2) x(3))
lbl(87329)	definition(x(2) 87382 pid('DetTests.det' 2 pos('./compiler/StaticAnalysis.oz' 267 9) nil 3) <Q: 664> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87375)
		testBI('IsObject' [x(0)]#[x(1)] 87370)
		putConstant(<M: ImAVariableOccurrence> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87370)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87375)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(87329)
lbl(87382)	unify(x(2) y(3))
lbl(87385)	definition(x(2) 87441 pid('DetTests.detOrKinded' 2 pos('./compiler/StaticAnalysis.oz' 274 2) nil 3) <Q: 665> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87431)
		testBI('IsObject' [x(0)]#[x(1)] 87426)
		putConstant(<M: ImAVariableOccurrence> x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(0)])
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(87426)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87431)	callBI('IsKinded' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
		endDefinition(87385)
lbl(87441)	unify(x(2) y(8))
lbl(87444)	definition(x(3) 87482 pid('IsListNow' 2 pos('./compiler/StaticAnalysis.oz' 286 3) nil 3) <Q: 666> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87476)
		testLiteral(x(0) nil 87462)
lbl(87458)	getLiteral(true x(1))
		return
lbl(87462)	testList(x(0) 87472)
lbl(87465)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 666> 5)
lbl(87472)	getLiteral(false x(1))
		return
lbl(87476)	getLiteral(unit x(1))
		return
		endDefinition(87444)
lbl(87482)	definition(x(2) 87538 pid('IsStringNow' 2 pos('./compiler/StaticAnalysis.oz' 296 3) nil 4) <Q: 667> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87532)
		testLiteral(x(0) nil 87500)
lbl(87496)	getLiteral(true x(1))
		return
lbl(87500)	testList(x(0) 87528)
lbl(87503)	getVarVar(x(0) x(2))
		testBI('IsDet' [x(0)]#[x(3)] 87524)
		testBI('IsChar' [x(0)]#[x(3)] 87520)
		move(x(2) x(0))
		genFastCall(<Q: 667> 5)
lbl(87520)	getLiteral(false x(1))
		return
lbl(87524)	getLiteral(false x(1))
		return
lbl(87528)	getLiteral(false x(1))
		return
lbl(87532)	getLiteral(unit x(1))
		return
		endDefinition(87482)
lbl(87538)	definition(x(3) 87629 pid('IsVirtualStringNow' 2 pos('./compiler/StaticAnalysis.oz' 310 3) nil 3) <Q: 668> nil)
		testBI('IsDet' [x(0)]#[x(2)] 87623)
		allocateL3
		move(x(1) y(0))
		testBI('IsAtom' [x(0)]#[x(2)] 87561)
lbl(87556)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(87561)	testBI('IsInt' [x(0)]#[x(2)] 87567)
		branch(87556)
lbl(87567)	testBI('IsFloat' [x(0)]#[x(2)] 87573)
		branch(87556)
lbl(87573)	move(x(0) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 667> 4)
		testBool(y(2) 87588 87612)
		branch(87556)
lbl(87588)	move(y(1) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 87607)
lbl(87595)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 87607)
lbl(87602)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(87607)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(87612)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(312)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87623)	getLiteral(unit x(1))
		return
		endDefinition(87538)
lbl(87629)	definition(x(4) 87696 pid('Maybe' 2 pos('./compiler/StaticAnalysis.oz' 328 6) nil 3) <Q: 669> nil)
lbl(87635)	definition(x(2) 87690 pid('' 2 pos('./compiler/StaticAnalysis.oz' 329 2) nil 3) unit [x(0)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87683)
		testBI('IsObject' [x(0)]#[x(1)] 87674)
lbl(87662)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87674)
lbl(87669)	getLiteral(true y(0))
		deAllocateL2
		return
lbl(87674)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailCall(g(0) 2)
lbl(87683)	getLiteral(true y(0))
		deAllocateL2
		return
		endDefinition(87635)
lbl(87690)	unify(x(2) x(1))
		return
		endDefinition(87629)
lbl(87696)	createVariable(y(9))
lbl(87698)	definition(x(6) 87806 pid('MaybePairOf' 4 pos('./compiler/StaticAnalysis.oz' 341 6) nil 4) <Q: 670> [y(9)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87799)
		testBI('IsObject' [x(0)]#[x(1)] 87745)
lbl(87733)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87745)
lbl(87740)	getLiteral(true y(2))
		deAllocateL5
		return
lbl(87745)	testRecord(y(3) '#' 2 87794)
lbl(87750)	getVarVar(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		testBool(y(4) 87778 87783)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) false '' true 3) 0)
lbl(87778)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87783)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87794)	getLiteral(false y(2))
		deAllocateL5
		return
lbl(87799)	getLiteral(true y(2))
		deAllocateL5
		return
		endDefinition(87698)
lbl(87806)	definition(x(7) 87914 pid('MaybeListOf' 3 pos('./compiler/StaticAnalysis.oz' 355 6) nil 3) <Q: 671> [y(9)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 87907)
		testBI('IsObject' [x(0)]#[x(1)] 87850)
lbl(87838)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87850)
lbl(87845)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87850)	match(y(2) ht(87902 [onScalar(nil 87853) onRecord('|' 2 87858)]))
lbl(87853)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87858)	getVarVar(x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		testBool(y(3) 87886 87891)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 671> 7)
lbl(87886)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(87891)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(365)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(87902)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(87907)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(87806)
lbl(87914)	definition(x(8) 87934 pid('MaybeList' 2 pos('./compiler/StaticAnalysis.oz' 370 6) nil 3) <Q: 672> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(value x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(87914)
lbl(87934)	definition(x(9) 87954 pid('MaybeString' 2 pos('./compiler/StaticAnalysis.oz' 373 6) nil 3) <Q: 673> nil)
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(char x(0))
		genFastCall(<Q: 671> 7)
		endDefinition(87934)
lbl(87954)	createVariable(x(10))
lbl(87956)	definition(x(11) 88083 pid('MaybeVirtualString' 2 pos('./compiler/StaticAnalysis.oz' 376 6) nil 3) <Q: 674> [g(19) x(10)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 88076)
		testBI('IsObject' [x(0)]#[x(1)] 87997)
lbl(87985)	putConstant(<M: ImAVariableOccurrence> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 87997)
lbl(87992)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(87997)	move(y(2) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 88009)
lbl(88004)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(88009)	testBI('IsInt' [x(0)]#[x(1)] 88015)
		branch(88004)
lbl(88015)	testBI('IsFloat' [x(0)]#[x(1)] 88021)
		branch(88004)
lbl(88021)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 673> 4)
		testBool(y(3) 88036 88065)
		branch(88004)
lbl(88036)	move(y(2) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 88060)
lbl(88043)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 88060)
lbl(88050)	move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 165> 7)
lbl(88060)	getLiteral(false y(1))
		deAllocateL4
		return
lbl(88065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(383)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88076)	getLiteral(true y(1))
		deAllocateL4
		return
		endDefinition(87956)
lbl(88083)	unify(x(11) x(10))
		putRecord(dtt [list listOf pairOf string virtualString] y(10))
		setValue(x(8))
		setValue(x(7))
		setValue(x(6))
		setValue(x(9))
		setValue(x(10))
		moveMoveXYXY(x(0) y(11) x(1) y(12))
		moveMoveXYXY(x(5) y(13) x(2) y(14))
		moveMoveXYYX(x(3) y(15) y(13) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 161> 6)
		moveMoveYXYX(y(16) x(0) y(10) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
lbl(88132)	definition(x(0) 88223 pid('DetTypeTest' 3 pos('./compiler/StaticAnalysis.oz' 407 6) nil 6) <Q: 675> [x(2) g(9)])
		callBI('Width' [x(0)]#[x(3)])
		testNumber(x(3) 0 88163)
		callBI('Label' [x(0)]#[x(3)])
		move(g(0) x(0))
		callBI('.' [x(0) x(3)]#[x(4)])
		move(x(1) x(0))
		move(x(2) x(1))
		tailCall(x(4) 2)
lbl(88163)	match(x(0) ht(88204 [onRecord(list 1 88166) onRecord(pair 2 88180)]))
lbl(88166)	getVariable(x(0))
		move(g(0) x(3))
		inlineDot(x(3) listOf x(4) cache)
		tailCall(x(4) 3)
lbl(88180)	getVarVar(x(0) x(4))
		move(g(0) x(3))
		inlineDot(x(3) pairOf x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		tailCall(x(5) 4)
lbl(88204)	putRecord(illegalTypeDeclaration 1 x(3))
		setValue(x(0))
		putRecord(compiler 2 x(1))
		setConstant(internal)
		setValue(x(3))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(88132)
lbl(88223)	unify(x(0) y(9))
		putRecord(doCheckType 2 x(0))
		setConstant(det)
		setValue(g(21))
		putRecord(doCheckType 2 x(1))
		setConstant(det)
		setValue(g(22))
		putRecord(doCheckType 2 x(3))
		setConstant(det)
		setValue(g(23))
		putRecord(doCheckType 2 x(4))
		setConstant(det)
		setValue(g(24))
		putRecord(doCheckType 2 x(5))
		setConstant(det)
		setValue(g(25))
		putRecord(doCheckType 2 x(6))
		setConstant(det)
		setValue(g(26))
		putRecord(doCheckType 2 x(7))
		setConstant(det)
		setValue(g(27))
		putRecord(doCheckType 2 x(8))
		setConstant(det)
		setValue(g(28))
		putRecord(doCheckType 2 x(9))
		setConstant(det)
		setValue(g(29))
		putRecord(doCheckType 2 x(10))
		setConstant(det)
		setValue(g(30))
		putRecord(doCheckType 2 x(11))
		setConstant(rec)
		setValue(g(31))
		putRecord(doCheckType 2 x(12))
		setConstant(det)
		setValue(g(32))
		putRecord(doCheckType 2 x(13))
		setConstant(det)
		setValue(g(33))
		putRecord(doCheckType 2 x(14))
		setConstant(det)
		setValue(g(34))
		putRecord(doCheckType 2 x(15))
		setConstant(det)
		setValue(g(35))
		putRecord(doCheckType 2 x(16))
		setConstant(det)
		setValue(g(36))
		putRecord(doCheckType 2 x(17))
		setConstant(det)
		setValue(g(37))
		putRecord(doCheckType 2 x(18))
		setConstant(det)
		setValue(g(38))
		putRecord(doCheckType 2 x(19))
		setConstant(det)
		setValue(g(39))
		putRecord(doCheckType 2 x(20))
		setConstant(kind)
		setValue(g(40))
		putRecord(doCheckType 2 x(21))
		setConstant(det)
		setValue(g(41))
		putRecord(doCheckType 2 x(22))
		setConstant(rec)
		setValue(y(14))
		putRecord(doCheckType 2 x(23))
		setConstant(det)
		setValue(g(42))
		putRecord(doCheckType 2 x(24))
		setConstant(det)
		setValue(g(43))
		putRecord(doCheckType 2 x(25))
		setConstant(rec)
		setValue(y(15))
		putRecord(bi [',' '.' '<-' '=' '@' 'And' 'IsArray' 'IsAtom' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsDet' 'IsDictionary' 'IsFloat' 'IsInt' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNumber' 'IsObject' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'NewUniqueName' 'Not' 'Or' 'ProcedureArity' 'Space.new' 'Width' '^' builtin] y(9))
		setConstant(doComma)
		setConstant(doDot)
		setConstant(doAssignAccess)
		setConstant(doEq)
		setConstant(doAssignAccess)
		setConstant(doAnd)
		setValue(x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setConstant(doLabel)
		setConstant(doNew)
		setConstant(doNewArray)
		setConstant(doNewCell)
		setConstant(doNewChunk)
		setConstant(doNewDictionary)
		setConstant(doNewLock)
		setConstant(doNewName)
		setConstant(doNewPort)
		setConstant(doNewUniqueName)
		setConstant(doNot)
		setConstant(doOr)
		setConstant(doProcedureArity)
		setConstant(doNewSpace)
		setConstant(doWidth)
		setConstant(doHat)
		setConstant(doBuiltin)
lbl(88526)	definition(x(7) 88882 pid('GetReachable' 2 pos('./compiler/StaticAnalysis.oz' 481 3) nil 2) <Q: 676> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getType y(0) 1 cache)
		testLiteral(y(2) unit 88621)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88583 88610)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88583)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88610)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(493)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88621)	createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(4) 88709 88869)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88664 88698)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88664)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88698)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88709)	createVariableMove(y(4) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(4) 88797 88858)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88752 88786)
		getRecord(env [data last var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88752)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [data last type var] y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 657> 5)
lbl(88786)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(521)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88797)	move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 649> 4)
		testBool(y(4) 88820 88847)
		getRecord(env [last var] y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88820)	move(y(3) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		move(x(1) x(0))
		sendMsg(setType y(0) 1 cache)
		getRecord(env [last type var] y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL5
		return
lbl(88847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(532)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(515)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(88869)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(501)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(88526)
lbl(88882)	definition(x(8) 88902 pid('AppendReachable' 3 pos('./compiler/StaticAnalysis.oz' 545 3) nil 4) <Q: 677> nil)
		move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(88882)
lbl(88902)	definition(x(9) 89006 pid('InstallEntry' 1 pos('./compiler/StaticAnalysis.oz' 549 3) nil 3) <Q: 678> nil)
		allocateL3
		inlineDot(x(0) var x(1) cache)
		inlineDot(x(0) last x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		sendMsg(setLastValue y(1) 1 cache)
		move(y(0) x(0))
		putConstant(data x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 88962)
		inlineDot(x(0) data x(1) cache)
		move(x(1) x(0))
		sendMsg('setValue' y(2) 1 cache)
lbl(88962)	move(y(0) x(0))
		putConstant(type x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		testBool(x(2) 88991 88993)
		inlineDot(x(0) type x(0) cache)
		move(y(1) x(1))
		deAllocateL3
		tailSendMsg(setType x(1) 1 cache)
lbl(88991)	deAllocateL3
		return
lbl(88993)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(88902)
lbl(89006)	definition(x(10) 89043 pid('GetGlobalEnv' 2 pos('./compiler/StaticAnalysis.oz' 567 3) nil 4) <Q: 679> [x(8) x(7)])
		allocateL2
		move(x(1) y(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
		endDefinition(89006)
lbl(89043)	definition(x(7) 89057 pid('InstallGlobalEnv' 1 pos('./compiler/StaticAnalysis.oz' 578 3) nil 2) <Q: 680> [x(9)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(89043)
lbl(89057)	definition(x(7) 89183 pid('ValueToErrorLine' 3 pos('./compiler/StaticAnalysis.oz' 591 3) nil 5) <Q: 681> nil)
		testLiteral(x(1) unit 89071)
		getLiteral(nil x(2))
		return
lbl(89071)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(4) 89149 89170)
		getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(pn 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyValue(y(3))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL5
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(89149)	getList(y(2))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyValVar(y(0) x(1))
		getRecord(oz 1 x(1))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(89170)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(599)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89057)
lbl(89183)	definition(x(7) 89481 pid('IssueTypeError' 6 pos('./compiler/StaticAnalysis.oz' 609 3) nil 8) <Q: 682> [g(45)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getErrorMsg y(4) 1 cache)
		createVariableMove(y(7) x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getUnifier y(4) 2 cache)
		putRecord(hint [l m] x(1))
		setConstant('First type')
		setVariable(x(2))
		putRecord(hint [l m] x(4))
		setConstant('Second type')
		setVariable(y(10))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(0))
		setValue(x(1))
		setValue(x(3))
		putList(x(7))
		setVariable(y(13))
		setConstant(nil)
		putList(x(6))
		setVariable(y(12))
		setValue(x(7))
		putList(x(5))
		setVariable(y(11))
		setValue(x(6))
		putList(y(9))
		setValue(x(0))
		setValue(x(5))
		move(y(0) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		genFastCall(<Q: 696> 4)
		moveMoveYXYX(y(2) x(1) y(11) x(2))
		putConstant('First value' x(0))
		genFastCall(<Q: 681> 6)
		moveMoveYXYX(y(3) x(1) y(12) x(2))
		putConstant('Second value' x(0))
		genFastCall(<Q: 681> 6)
		testLiteral(y(7) unit 89327)
lbl(89322)	getLiteral(nil y(13))
		branch(89386)
lbl(89327)	testLiteral(y(8) unit 89333)
lbl(89331)	branch(89322)
lbl(89333)	getList(y(13))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord(hint [l m] x(0))
		unifyLiteral('Original assertion')
		unifyVariable(x(1))
		getRecord('#' 3 x(1))
		unifyVariable(x(2))
		unifyLiteral(' = ')
		unifyVariable(x(3))
		getRecord(oz 1 x(2))
		unifyVariable(x(4))
		getRecord(oz 1 x(3))
		unifyVariable(y(0))
		move(y(7) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 660> 4)
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		genFastCall(<Q: 660> 4)
lbl(89386)	move(y(9) x(0))
		move(g(0) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(4) 1 cache)
		testBool(y(1) 89441 89468)
		move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('type error' x(2))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(89441)	move(y(4) x(0))
		inlineDot(x(0) rep x(4) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(6) x(3))
		putConstant('static analysis warning' x(2))
		deAllocateL
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(89468)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(634)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89183)
lbl(89481)	definition(x(7) 89559 pid('UnifyTypesOf' 5 pos('./compiler/StaticAnalysis.oz' 647 3) nil 6) <Q: 683> [g(46)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getType y(0) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getType y(1) 1 cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(2)] 89546)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		genFastCall(<Q: 682> 12)
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(89546)	callBI('BitArray.and' [x(0) x(1)]#nil)
		callBI('BitArray.and' [x(1) x(0)]#nil)
		getLiteral(true y(4))
		deAllocateL7
		return
		endDefinition(89481)
lbl(89559)	definition(x(7) 89582 pid('ConstrainTypes' 3 pos('./compiler/StaticAnalysis.oz' 667 3) nil 4) <Q: 684> [g(46)])
		testBI('BitArray.disjoint' [x(0) x(1)]#[x(3)] 89573)
		getLiteral(false x(2))
		return
lbl(89573)	callBI('BitArray.and' [x(0) x(1)]#nil)
		getLiteral(true x(2))
		return
		endDefinition(89559)
lbl(89582)	createVariable(x(7))
lbl(89584)	definition(x(0) 89700 pid('OptimizeTypeRepr' 2 pos('./compiler/StaticAnalysis.oz' 684 3) nil 4) <Q: 685> [g(47) y(7) g(20) x(7)])
		match(x(0) ht(89685 [onRecord(type 1 89593) onRecord(value 1 89626) onRecord(record 1 89671)]))
lbl(89593)	allocateL2
		getVariable(y(0))
		move(x(1) y(1))
		testList(y(0) 89614)
lbl(89602)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 89614)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(89614)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('#' x(0))
		deAllocateL2
		genFastCall(<P: 77> 7)
lbl(89626)	allocateL4
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) decode x(3) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 647> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		putRecord(type 1 x(0))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 685> 5)
lbl(89671)	getVariable(x(0))
		getRecord(record 1 x(1))
		unifyVariable(x(2))
		move(g(3) x(1))
		genFastCall(<P: 161> 7)
lbl(89685)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(693)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(89584)
lbl(89700)	unify(x(0) x(7))
lbl(89703)	definition(x(7) 89997 pid('IssueUnificationFailure' 3 pos('./compiler/StaticAnalysis.oz' 699 3) nil 5) <Q: 686> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getErrorMsg y(0) 1 cache)
		createVariableMove(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getUnifier y(0) 2 cache)
		putRecord(hint [l m] y(7))
		setConstant('Offending expression in')
		setVariable(x(1))
		move(y(1) x(0))
		genFastCall(<Q: 648> 4)
		createVariable(y(8))
		testLiteral(y(5) unit 89773)
lbl(89768)	unify(y(8) y(2))
		branch(89841)
lbl(89773)	testLiteral(y(6) unit 89779)
lbl(89777)	branch(89768)
lbl(89779)	move(y(5) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 660> 4)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(3))
		setValue(y(9))
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 3 x(2))
		setValue(x(3))
		setConstant(' = ')
		setValue(x(4))
		putRecord(hint [l m] x(0))
		setConstant('Original assertion')
		setValue(x(2))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 21> 6)
lbl(89841)	createVariable(y(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 89857)
lbl(89852)	unify(y(2) y(8))
		branch(89877)
lbl(89857)	testLiteral(y(1) unit 89863)
		branch(89852)
lbl(89863)	putList(x(1))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(8) x(0) y(2) x(2))
		genFastCall(<P: 21> 6)
lbl(89877)	createVariableMove(y(1) x(0))
		sendMsg(getNeeded y(0) 1 cache)
		testBool(y(1) 89937 89984)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 89913)
lbl(89908)	getLiteral('unification error in needed statement' y(1))
		branch(89916)
lbl(89913)	unify(y(1) y(4))
lbl(89916)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(89937)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(y(4) unit 89960)
lbl(89955)	getLiteral('unification error in possibly unneeded statement' y(1))
		branch(89963)
lbl(89960)	unify(y(1) y(4))
lbl(89963)	moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(3))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(89984)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(723)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(89703)
lbl(89997)	definition(x(7) 90281 pid('MakeDummyProcedure' 3 pos('./compiler/StaticAnalysis.oz' 743 3) nil 3) <Q: 687> nil)
		match(x(0) ht(90278 [onScalar(0 90006) onScalar(1 90019) onScalar(2 90032) onScalar(3 90045) onScalar(4 90058) onScalar(5 90071) onScalar(6 90084) onScalar(7 90097) onScalar(8 90110) onScalar(9 90123) onScalar(10 90136) onScalar(11 90149) onScalar(12 90162) onScalar(13 90175) onScalar(14 90188) onScalar(15 90201) onScalar(16 90214) onScalar(17 90227) onScalar(18 90240) onScalar(19 90253) onScalar(20 90266)]))
lbl(90006)	definition(x(0) 90015 pid('' 0 pos('./compiler/StaticAnalysis.oz' 745 17) nil 0) unit nil)
		return
		endDefinition(90006)
lbl(90015)	unify(x(0) x(2))
		return
lbl(90019)	definition(x(0) 90028 pid('' 1 pos('./compiler/StaticAnalysis.oz' 746 17) nil 1) unit nil)
		return
		endDefinition(90019)
lbl(90028)	unify(x(0) x(2))
		return
lbl(90032)	definition(x(0) 90041 pid('' 2 pos('./compiler/StaticAnalysis.oz' 747 17) nil 2) unit nil)
		return
		endDefinition(90032)
lbl(90041)	unify(x(0) x(2))
		return
lbl(90045)	definition(x(0) 90054 pid('' 3 pos('./compiler/StaticAnalysis.oz' 748 17) nil 3) unit nil)
		return
		endDefinition(90045)
lbl(90054)	unify(x(0) x(2))
		return
lbl(90058)	definition(x(0) 90067 pid('' 4 pos('./compiler/StaticAnalysis.oz' 749 17) nil 4) unit nil)
		return
		endDefinition(90058)
lbl(90067)	unify(x(0) x(2))
		return
lbl(90071)	definition(x(0) 90080 pid('' 5 pos('./compiler/StaticAnalysis.oz' 750 17) nil 5) unit nil)
		return
		endDefinition(90071)
lbl(90080)	unify(x(0) x(2))
		return
lbl(90084)	definition(x(0) 90093 pid('' 6 pos('./compiler/StaticAnalysis.oz' 751 17) nil 6) unit nil)
		return
		endDefinition(90084)
lbl(90093)	unify(x(0) x(2))
		return
lbl(90097)	definition(x(0) 90106 pid('' 7 pos('./compiler/StaticAnalysis.oz' 752 17) nil 7) unit nil)
		return
		endDefinition(90097)
lbl(90106)	unify(x(0) x(2))
		return
lbl(90110)	definition(x(0) 90119 pid('' 8 pos('./compiler/StaticAnalysis.oz' 753 17) nil 8) unit nil)
		return
		endDefinition(90110)
lbl(90119)	unify(x(0) x(2))
		return
lbl(90123)	definition(x(0) 90132 pid('' 9 pos('./compiler/StaticAnalysis.oz' 754 17) nil 9) unit nil)
		return
		endDefinition(90123)
lbl(90132)	unify(x(0) x(2))
		return
lbl(90136)	definition(x(0) 90145 pid('' 10 pos('./compiler/StaticAnalysis.oz' 755 17) nil 10) unit nil)
		return
		endDefinition(90136)
lbl(90145)	unify(x(0) x(2))
		return
lbl(90149)	definition(x(0) 90158 pid('' 11 pos('./compiler/StaticAnalysis.oz' 756 17) nil 11) unit nil)
		return
		endDefinition(90149)
lbl(90158)	unify(x(0) x(2))
		return
lbl(90162)	definition(x(0) 90171 pid('' 12 pos('./compiler/StaticAnalysis.oz' 757 17) nil 12) unit nil)
		return
		endDefinition(90162)
lbl(90171)	unify(x(0) x(2))
		return
lbl(90175)	definition(x(0) 90184 pid('' 13 pos('./compiler/StaticAnalysis.oz' 758 17) nil 13) unit nil)
		return
		endDefinition(90175)
lbl(90184)	unify(x(0) x(2))
		return
lbl(90188)	definition(x(0) 90197 pid('' 14 pos('./compiler/StaticAnalysis.oz' 759 17) nil 14) unit nil)
		return
		endDefinition(90188)
lbl(90197)	unify(x(0) x(2))
		return
lbl(90201)	definition(x(0) 90210 pid('' 15 pos('./compiler/StaticAnalysis.oz' 760 17) nil 15) unit nil)
		return
		endDefinition(90201)
lbl(90210)	unify(x(0) x(2))
		return
lbl(90214)	definition(x(0) 90223 pid('' 16 pos('./compiler/StaticAnalysis.oz' 761 17) nil 16) unit nil)
		return
		endDefinition(90214)
lbl(90223)	unify(x(0) x(2))
		return
lbl(90227)	definition(x(0) 90236 pid('' 17 pos('./compiler/StaticAnalysis.oz' 762 17) nil 17) unit nil)
		return
		endDefinition(90227)
lbl(90236)	unify(x(0) x(2))
		return
lbl(90240)	definition(x(0) 90249 pid('' 18 pos('./compiler/StaticAnalysis.oz' 763 17) nil 18) unit nil)
		return
		endDefinition(90240)
lbl(90249)	unify(x(0) x(2))
		return
lbl(90253)	definition(x(0) 90262 pid('' 19 pos('./compiler/StaticAnalysis.oz' 764 17) nil 19) unit nil)
		return
		endDefinition(90253)
lbl(90262)	unify(x(0) x(2))
		return
lbl(90266)	definition(x(0) 90275 pid('' 20 pos('./compiler/StaticAnalysis.oz' 765 17) nil 20) unit nil)
		return
		endDefinition(90266)
lbl(90275)	unify(x(0) x(2))
lbl(90278)	return
		endDefinition(89997)
lbl(90281)	definition(x(7) 90343 pid('MakeDummyObject' 2 pos('./compiler/StaticAnalysis.oz' 771 3) nil 8) <Q: 688> [g(48) g(49)])
		allocateL3
		putList(x(7))
		setValue(g(1))
		setConstant(nil)
		move(x(1) y(0))
		move(x(0) x(5))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		createVariableMove(y(1) x(6))
		genFastCall(<P: 229> 14)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		sendMsg(noop y(2) 0 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90281)
lbl(90343)	definition(x(7) 90375 pid('MakeDummyClass' 2 pos('./compiler/StaticAnalysis.oz' 775 3) nil 7) <Q: 689> [g(48)])
		move(x(0) x(5))
		move(x(1) x(6))
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		genFastCall(<P: 229> 15)
		endDefinition(90343)
lbl(90375)	definition(x(7) 90501 pid('ListToVS' 5 pos('./compiler/StaticAnalysis.oz' 782 3) nil 7) <Q: 690> nil)
		testLiteral(x(0) nil 90394)
lbl(90385)	getRecord('#' 2 x(4))
		unifyValue(x(1))
		unifyValue(x(3))
		return
lbl(90394)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testList(y(0) 90430)
lbl(90411)	getVarVar(x(5) x(6))
		testLiteral(x(6) nil 90430)
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValue(x(5))
		unifyValue(y(3))
		deAllocateL5
		return
lbl(90430)	testList(y(0) 90486)
lbl(90433)	getVarVar(x(0) x(1))
		shallowGuard(90486)
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(90444)	shallowThen
		getRecord('#' 3 y(4))
		unifyValue(y(1))
		unifyValVar(x(0) x(3))
lbl(90454)	definition(x(4) 90473 pid('' 3 pos('./compiler/StaticAnalysis.oz' 791 3) nil 3) unit [y(2)])
		getRecord('#' 3 x(2))
		unifyValue(g(0))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(90454)
lbl(90473)	move(x(1) x(0))
		move(x(4) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 32> 9)
lbl(90486)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(793)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(90375)
lbl(90501)	definition(x(7) 90524 pid('SetToVS' 2 pos('./compiler/StaticAnalysis.oz' 796 3) nil 5) <Q: 691> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(', ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90501)
lbl(90524)	definition(x(7) 90547 pid('ProdToVS' 2 pos('./compiler/StaticAnalysis.oz' 800 3) nil 5) <Q: 692> nil)
		move(x(1) x(4))
		putConstant('' x(1))
		putConstant(' x ' x(2))
		putConstant('' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90524)
lbl(90547)	definition(x(7) 90570 pid('ApplToVS' 2 pos('./compiler/StaticAnalysis.oz' 804 3) nil 5) <Q: 693> nil)
		move(x(1) x(4))
		putConstant('{' x(1))
		putConstant(' ' x(2))
		putConstant('}' x(3))
		genFastCall(<Q: 690> 11)
		endDefinition(90547)
lbl(90570)	definition(x(7) 90616 pid('FormatArity' 2 pos('./compiler/StaticAnalysis.oz' 808 3) nil 5) <Q: 694> nil)
		callBI('Arity' [x(0)]#[x(3)])
lbl(90579)	definition(x(4) 90602 pid('' 2 pos('./compiler/StaticAnalysis.oz' 810 7) nil 3) unit nil)
		testBI('IsLiteral' [x(0)]#[x(2)] 90596)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
lbl(90596)	unify(x(1) x(0))
		return
		endDefinition(90579)
lbl(90602)	move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90570)
lbl(90616)	definition(x(7) 90659 pid('Ozify' 2 pos('./compiler/StaticAnalysis.oz' 813 3) nil 4) <Q: 695> nil)
lbl(90622)	definition(x(3) 90648 pid('' 2 pos('./compiler/StaticAnalysis.oz' 815 7) nil 4) unit nil)
		move(x(0) x(2))
		testBI('IsVirtualString' [x(2)]#[x(3)] 90639)
		unify(x(1) x(0))
		return
lbl(90639)	getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(90622)
lbl(90648)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(90616)
lbl(90659)	definition(x(7) 90709 pid('TypeToVS' 2 pos('./compiler/StaticAnalysis.oz' 818 3) nil 5) <Q: 696> [y(7)])
		allocateL3
		move(g(0) x(2))
		inlineDot(x(2) decode x(3) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		putConstant('' x(1))
		putConstant(' ++ ' x(2))
		putConstant('' x(3))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 690> 10)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(90659)
lbl(90709)	definition(x(7) 90806 pid('AllUpToAux' 5 pos('./compiler/StaticAnalysis.oz' 833 6) nil 5) <Q: 697> nil)
		match(x(0) ht(90791 [onScalar(nil 90718) onRecord('|' 2 90725)]))
lbl(90718)	unify(x(3) x(2))
		getLiteral(true x(4))
		return
lbl(90725)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		call(y(2) 2)
		testBool(y(6) 90772 90780)
		move(y(3) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		deAllocateL7
		genFastCall(<Q: 697> 11)
lbl(90772)	unify(y(4) y(0))
		getLiteral(false y(5))
		deAllocateL7
		return
lbl(90780)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(839)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(90791)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(842)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90709)
lbl(90806)	definition(x(7) 90826 pid('AllUpTo' 4 pos('./compiler/StaticAnalysis.oz' 845 6) nil 5) <Q: 698> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 697> 11)
		endDefinition(90806)
lbl(90826)	definition(x(7) 90920 pid('SomeUpToNAux' 5 pos('./compiler/StaticAnalysis.oz' 856 6) nil 5) <Q: 699> nil)
		match(x(0) ht(90905 [onScalar(nil 90835) onRecord('|' 2 90842)]))
lbl(90835)	unify(x(3) x(2))
		getLiteral(false x(4))
		return
lbl(90842)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		createVariableMove(y(5) x(1))
		call(y(1) 2)
		testBool(y(5) 90874 90894)
		unify(y(3) y(2))
		getLiteral(true y(4))
		deAllocateL6
		return
lbl(90874)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(4) x(4))
		deAllocateL6
		genFastCall(<Q: 699> 11)
lbl(90894)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(862)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(90905)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(865)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90826)
lbl(90920)	definition(x(7) 90940 pid('SomeUpToN' 4 pos('./compiler/StaticAnalysis.oz' 868 6) nil 5) <Q: 700> nil)
		move(x(3) x(4))
		move(x(2) x(3))
		putConstant(1 x(2))
		genFastCall(<Q: 699> 11)
		endDefinition(90920)
lbl(90940)	definition(x(7) 91008 pid('AllDistinct' 2 pos('./compiler/StaticAnalysis.oz' 873 3) nil 3) <Q: 701> nil)
		testLiteral(x(0) nil 90954)
lbl(90950)	getLiteral(true x(1))
		return
lbl(90954)	testList(x(0) 90993)
lbl(90957)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 90988)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 701> 5)
lbl(90988)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(90993)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(877)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(90940)
lbl(91008)	definition(x(7) 91059 pid('Add' 3 pos('./compiler/StaticAnalysis.oz' 880 3) nil 3) <Q: 702> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 91038 91046)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(91038)	getList(y(2))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(91046)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(881)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91008)
lbl(91059)	definition(x(7) 91150 pid('Union' 3 pos('./compiler/StaticAnalysis.oz' 885 3) nil 3) <Q: 703> nil)
		testLiteral(x(0) nil 91073)
lbl(91069)	unify(x(2) x(1))
		return
lbl(91073)	testList(x(0) 91135)
lbl(91076)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 91110 91124)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91110)	getList(y(3))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 703> 7)
lbl(91124)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(888)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91135)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(892)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91059)
lbl(91150)	definition(x(8) 91194 pid('UnionAll' 2 pos('./compiler/StaticAnalysis.oz' 895 3) nil 4) <Q: 704> [x(7)])
		testLiteral(x(0) nil 91164)
lbl(91160)	getLiteral(nil x(1))
		return
lbl(91164)	testList(x(0) 91179)
lbl(91167)	getVarVar(x(2) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<P: 32> 9)
lbl(91179)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(898)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(91150)
lbl(91194)	definition(x(7) 91286 pid('PLDotEQ' 3 pos('./compiler/StaticAnalysis.oz' 904 3) nil 5) <Q: 705> [y(2)])
		match(x(1) ht(91271 [onScalar(nil 91203) onRecord('|' 2 91207)]))
lbl(91203)	getLiteral(unit x(2))
		return
lbl(91207)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(g(0) x(3))
		inlineDot(x(3) eq x(4) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		call(x(4) 3)
		testBool(y(4) 91248 91260)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(91248)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 705> 7)
lbl(91260)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(910)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(91271)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(917)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91194)
lbl(91286)	definition(x(7) 91391 pid('ApproxInheritance' 3 pos('./compiler/StaticAnalysis.oz' 932 3) nil 5) <Q: 706> nil)
		allocateL3
lbl(91293)	definition(x(4) 91359 pid('' 3 pos('./compiler/StaticAnalysis.oz' 935 1) nil 6) unit nil)
		callBI('Arity' [x(1)]#[x(4)])
lbl(91302)	definition(x(5) 91342 pid('' 3 pos('./compiler/StaticAnalysis.oz' 937 5) nil 6) unit [x(1)])
		testBI('HasFeature' [x(0) x(1)]#[x(3)] 91327)
		putRecord('#' 2 x(3))
		setConstant(nil)
		setConstant(unit)
		callBI('AdjoinAt' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
lbl(91327)	move(g(0) x(3))
		callBI('.' [x(3) x(1)]#[x(4)])
		callBI('AdjoinAt' [x(0) x(1) x(4)]#[x(5)])
		unify(x(5) x(2))
		return
		endDefinition(91302)
lbl(91342)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(91293)
lbl(91359)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		putConstant(m x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(91286)
lbl(91391)	putConstant('NewUniqueName' x(7))
		putConstant(2 x(8))
		callBI(builtin [x(7) x(8)]#[x(9)])
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord errorMsg needed savedToCopy 'self' toCopy top unifierLeft unifierRight] x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(true)
		setConstant(nil)
		setConstant(nil)
		setConstant(unit)
		setConstant(true)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [rep switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(91436)	definition(x(8) 91539 pid('Control,init/fast' 2 pos('./compiler/StaticAnalysis.oz' 972 6) nil 4) <Q: 707> nil)
		getSelf(x(2))
		inlineDot(x(2) rep x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) switches x(2) cache)
		unify(x(2) x(1))
		putConstant(nil x(0))
		inlineAssign('self' x(0) cache)
		putConstant(unit x(0))
		inlineAssign(coord x(0) cache)
		putConstant(true x(0))
		inlineAssign(top x(0) cache)
		putConstant(true x(0))
		inlineAssign(needed x(0) cache)
		putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		putConstant(nil x(0))
		inlineAssign(savedToCopy x(0) cache)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(91436)
lbl(91539)	definition(x(9) 91574 pid('Control,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 972 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 707> 5)
		endDefinition(91539)
lbl(91574)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(91584)	definition(x(8) 91609 pid('Control,pushSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 986 6) nil 3) <Q: 708> nil)
		inlineAt('self' x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign('self' x(2) cache)
		return
		endDefinition(91584)
lbl(91609)	definition(x(9) 91635 pid('Control,pushSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 986 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 708> 3)
		endDefinition(91609)
lbl(91635)	putRecord('#' [1 2 fast] x(11))
		setConstant(pushSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91645)	definition(x(8) 91682 pid('Control,popSelf/fast' 0 pos('./compiler/StaticAnalysis.oz' 989 6) nil 1) <Q: 709> [g(9)])
		inlineAt('self' x(0) cache)
		testList(x(0) 91669)
lbl(91659)	getVoid(1)
		getVariable(x(0))
		inlineAssign('self' x(0) cache)
		return
lbl(91669)	putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(popEmptyStack)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91645)
lbl(91682)	definition(x(9) 91696 pid('Control,popSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 989 6) nil 1) unit nil)
		getLiteral(popSelf x(0))
		genFastCall(<Q: 709> 1)
		endDefinition(91682)
lbl(91696)	putRecord('#' [1 2 fast] x(12))
		setConstant(popSelf)
		setValue(x(9))
		setValue(x(8))
lbl(91706)	definition(x(8) 91745 pid('Control,getSelf/fast' 1 pos('./compiler/StaticAnalysis.oz' 996 6) nil 2) <Q: 710> nil)
		inlineAt('self' x(1) cache)
		match(x(1) ht(91730 [onScalar(nil 91720) onRecord('|' 2 91724)]))
lbl(91720)	getLiteral(unit x(0))
		return
lbl(91724)	getVariable(x(1))
		unify(x(0) x(1))
		return
lbl(91730)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(999)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(91706)
lbl(91745)	definition(x(9) 91771 pid('Control,getSelf/slow' 1 pos('./compiler/StaticAnalysis.oz' 996 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 710> 3)
		endDefinition(91745)
lbl(91771)	putRecord('#' [1 2 fast] x(13))
		setConstant('getSelf')
		setValue(x(9))
		setValue(x(8))
lbl(91781)	definition(x(8) 91795 pid('Control,setCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1002 6) nil 1) <Q: 711> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(91781)
lbl(91795)	definition(x(9) 91821 pid('Control,setCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1002 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 711> 3)
		endDefinition(91795)
lbl(91821)	putRecord('#' [1 2 fast] x(14))
		setConstant(setCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91831)	definition(x(8) 91848 pid('Control,getCoord/fast' 1 pos('./compiler/StaticAnalysis.oz' 1005 6) nil 2) <Q: 712> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91831)
lbl(91848)	definition(x(9) 91874 pid('Control,getCoord/slow' 1 pos('./compiler/StaticAnalysis.oz' 1005 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 712> 3)
		endDefinition(91848)
lbl(91874)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(91884)	definition(x(8) 91901 pid('Control,getTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1009 6) nil 2) <Q: 713> nil)
		inlineAt(top x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91884)
lbl(91901)	definition(x(9) 91927 pid('Control,getTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1009 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 713> 3)
		endDefinition(91901)
lbl(91927)	putRecord('#' [1 2 fast] x(16))
		setConstant(getTop)
		setValue(x(9))
		setValue(x(8))
lbl(91937)	definition(x(8) 91951 pid('Control,setTop/fast' 1 pos('./compiler/StaticAnalysis.oz' 1012 6) nil 1) <Q: 714> nil)
		inlineAssign(top x(0) cache)
		return
		endDefinition(91937)
lbl(91951)	definition(x(9) 91977 pid('Control,setTop/slow' 1 pos('./compiler/StaticAnalysis.oz' 1012 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 714> 3)
		endDefinition(91951)
lbl(91977)	putRecord('#' [1 2 fast] x(17))
		setConstant(setTop)
		setValue(x(9))
		setValue(x(8))
lbl(91987)	definition(x(8) 92004 pid('Control,getNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1016 6) nil 2) <Q: 715> nil)
		inlineAt(needed x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(91987)
lbl(92004)	definition(x(9) 92030 pid('Control,getNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 715> 3)
		endDefinition(92004)
lbl(92030)	putRecord('#' [1 2 fast] x(18))
		setConstant(getNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92040)	definition(x(8) 92054 pid('Control,setNeeded/fast' 1 pos('./compiler/StaticAnalysis.oz' 1019 6) nil 1) <Q: 716> nil)
		inlineAssign(needed x(0) cache)
		return
		endDefinition(92040)
lbl(92054)	definition(x(9) 92080 pid('Control,setNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1019 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 716> 3)
		endDefinition(92054)
lbl(92080)	putRecord('#' [1 2 fast] x(19))
		setConstant(setNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92090)	definition(x(8) 92115 pid('Control,getTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 3) <Q: 717> nil)
		inlineAt(top x(2) cache)
		unify(x(2) x(0))
		inlineAt(needed x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92090)
lbl(92115)	definition(x(9) 92150 pid('Control,getTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1023 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 717> 5)
		endDefinition(92115)
lbl(92150)	putRecord('#' [1 2 fast] x(20))
		setConstant(getTopNeeded)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(10))
lbl(92162)	definition(x(8) 92184 pid('Control,setTopNeeded/fast' 2 pos('./compiler/StaticAnalysis.oz' 1027 6) nil 2) <Q: 718> [y(10)])
		allocateL1
		move(x(1) y(0))
		genCall(gci(g(0) true setTop false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setNeeded true 1) 0)
		endDefinition(92162)
lbl(92184)	definition(x(9) 92219 pid('Control,setTopNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1027 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 718> 5)
		endDefinition(92184)
lbl(92219)	putRecord('#' [1 2 fast] x(21))
		setConstant(setTopNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92229)	definition(x(8) 92246 pid('Control,notTopNotNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1031 6) nil 2) <Q: 719> [y(10) g(50)])
		move(g(1) x(0))
		move(g(1) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92229)
lbl(92246)	definition(x(9) 92260 pid('Control,notTopNotNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1031 6) nil 1) unit nil)
		getLiteral(notTopNotNeeded x(0))
		genFastCall(<Q: 719> 1)
		endDefinition(92246)
lbl(92260)	putRecord('#' [1 2 fast] x(22))
		setConstant(notTopNotNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92270)	definition(x(8) 92287 pid('Control,notTopButNeeded/fast' 0 pos('./compiler/StaticAnalysis.oz' 1034 6) nil 2) <Q: 720> [y(10) g(50) g(51)])
		move(g(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(0) true setTopNeeded true 2) 0)
		endDefinition(92270)
lbl(92287)	definition(x(9) 92301 pid('Control,notTopButNeeded/slow' 1 pos('./compiler/StaticAnalysis.oz' 1034 6) nil 1) unit nil)
		getLiteral(notTopButNeeded x(0))
		genFastCall(<Q: 720> 1)
		endDefinition(92287)
lbl(92301)	putRecord('#' [1 2 fast] x(23))
		setConstant(notTopButNeeded)
		setValue(x(9))
		setValue(x(8))
lbl(92311)	definition(x(8) 92352 pid('Control,beginVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1038 6) nil 3) <Q: 721> nil)
		inlineAt(toCopy x(0) cache)
		match(x(0) ht(92325 [onScalar(unit 92341)]))
lbl(92325)	inlineAt(savedToCopy x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedToCopy x(2) cache)
lbl(92341)	putConstant(nil x(0))
		inlineAssign(toCopy x(0) cache)
		return
		endDefinition(92311)
lbl(92352)	definition(x(9) 92378 pid('Control,beginVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1038 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 721> 3)
		endDefinition(92352)
lbl(92378)	putRecord('#' [1 2 fast] x(24))
		setConstant(beginVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92388)	definition(x(8) 92448 pid('Control,declareToplevelName/fast' 2 pos('./compiler/StaticAnalysis.oz' 1045 6) nil 5) <Q: 722> [y(0)])
		inlineAt(toCopy x(2) cache)
		testLiteral(x(2) unit 92415)
lbl(92403)	move(g(0) x(2))
		inlineDot(x(2) newNamedName x(3) cache)
		tailCall(x(3) 2)
lbl(92415)	allocateL2
		move(g(0) x(3))
		inlineDot(x(3) newCopyableName x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		call(x(4) 2)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92388)
lbl(92448)	definition(x(9) 92483 pid('Control,declareToplevelName/slow' 1 pos('./compiler/StaticAnalysis.oz' 1045 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 722> 5)
		endDefinition(92448)
lbl(92483)	putRecord('#' [1 2 fast] x(25))
		setConstant(declareToplevelName)
		setValue(x(9))
		setValue(x(8))
lbl(92493)	definition(x(8) 92553 pid('Control,declareToplevelProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 4) <Q: 723> [y(0)])
		inlineAt(toCopy x(1) cache)
		testLiteral(x(1) unit 92520)
lbl(92508)	move(g(0) x(1))
		inlineDot(x(1) newPredicateRef x(2) cache)
		tailCall(x(2) 1)
lbl(92520)	allocateL2
		move(g(0) x(2))
		inlineDot(x(2) newCopyablePredicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		call(x(3) 1)
		putList(x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(toCopy x(0) cache)
		deAllocateL2
		return
		endDefinition(92493)
lbl(92553)	definition(x(9) 92579 pid('Control,declareToplevelProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 1053 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 723> 3)
		endDefinition(92553)
lbl(92579)	putRecord('#' [1 2 fast] x(26))
		setConstant(declareToplevelProcedure)
		setValue(x(9))
		setValue(x(8))
lbl(92589)	definition(x(8) 92649 pid('Control,endVirtualToplevel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 2) <Q: 724> nil)
		inlineAt(toCopy x(1) cache)
		unify(x(1) x(0))
		inlineAt(savedToCopy x(0) cache)
		match(x(0) ht(92634 [onScalar(nil 92611) onRecord('|' 2 92620)]))
lbl(92611)	putConstant(unit x(0))
		inlineAssign(toCopy x(0) cache)
		return
lbl(92620)	getVarVar(x(0) x(1))
		inlineAssign(toCopy x(0) cache)
		inlineAssign(savedToCopy x(1) cache)
		return
lbl(92634)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1068)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(92589)
lbl(92649)	definition(x(9) 92675 pid('Control,endVirtualToplevel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1061 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 724> 3)
		endDefinition(92649)
lbl(92675)	putRecord('#' [1 2 fast] x(27))
		setConstant(endVirtualToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(92685)	definition(x(8) 92699 pid('Control,setErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1071 6) nil 1) <Q: 725> nil)
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92685)
lbl(92699)	definition(x(9) 92725 pid('Control,setErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1071 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 725> 3)
		endDefinition(92699)
lbl(92725)	putRecord('#' [1 2 fast] x(28))
		setConstant(setErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92735)	definition(x(8) 92752 pid('Control,resetErrorMsg/fast' 0 pos('./compiler/StaticAnalysis.oz' 1074 6) nil 1) <Q: 726> nil)
		putConstant(unit x(0))
		inlineAssign(errorMsg x(0) cache)
		return
		endDefinition(92735)
lbl(92752)	definition(x(9) 92766 pid('Control,resetErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1074 6) nil 1) unit nil)
		getLiteral(resetErrorMsg x(0))
		genFastCall(<Q: 726> 1)
		endDefinition(92752)
lbl(92766)	putRecord('#' [1 2 fast] x(29))
		setConstant(resetErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92776)	definition(x(8) 92793 pid('Control,getErrorMsg/fast' 1 pos('./compiler/StaticAnalysis.oz' 1077 6) nil 2) <Q: 727> nil)
		inlineAt(errorMsg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(92776)
lbl(92793)	definition(x(9) 92819 pid('Control,getErrorMsg/slow' 1 pos('./compiler/StaticAnalysis.oz' 1077 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 727> 3)
		endDefinition(92793)
lbl(92819)	putRecord('#' [1 2 fast] x(30))
		setConstant(getErrorMsg)
		setValue(x(9))
		setValue(x(8))
lbl(92829)	definition(x(8) 92848 pid('Control,setUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1081 6) nil 2) <Q: 728> nil)
		inlineAssign(unifierLeft x(0) cache)
		inlineAssign(unifierRight x(1) cache)
		return
		endDefinition(92829)
lbl(92848)	definition(x(9) 92883 pid('Control,setUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1081 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 728> 5)
		endDefinition(92848)
lbl(92883)	putRecord('#' [1 2 fast] x(31))
		setConstant(setUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(92893)	definition(x(8) 92918 pid('Control,resetUnifier/fast' 0 pos('./compiler/StaticAnalysis.oz' 1085 6) nil 1) <Q: 729> nil)
		putConstant(unit x(0))
		inlineAssign(unifierLeft x(0) cache)
		putConstant(unit x(0))
		inlineAssign(unifierRight x(0) cache)
		return
		endDefinition(92893)
lbl(92918)	definition(x(9) 92932 pid('Control,resetUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1085 6) nil 1) unit nil)
		getLiteral(resetUnifier x(0))
		genFastCall(<Q: 729> 1)
		endDefinition(92918)
lbl(92932)	putRecord('#' [1 2 fast] x(32))
		setConstant(resetUnifier)
		setValue(x(9))
		setValue(x(8))
lbl(92942)	definition(x(8) 92967 pid('Control,getUnifier/fast' 2 pos('./compiler/StaticAnalysis.oz' 1089 6) nil 3) <Q: 730> nil)
		inlineAt(unifierLeft x(2) cache)
		unify(x(2) x(0))
		inlineAt(unifierRight x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(92942)
lbl(92967)	definition(x(9) 93002 pid('Control,getUnifier/slow' 1 pos('./compiler/StaticAnalysis.oz' 1089 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 730> 5)
		endDefinition(92967)
lbl(93002)	putRecord('#' [1 2 fast] x(33))
		setConstant(getUnifier)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 24 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		move(x(2) y(14))
		move(x(7) x(2))
		move(y(10) x(6))
		putConstant(nil x(0))
		putConstant('Control' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(true)
lbl(93088)	definition(x(7) 93127 pid('SAStatement,staticAnalysis/fast' 3 pos('./compiler/StaticAnalysis.oz' 1114 6) nil 4) <Q: 731> [y(10)])
		allocateL1
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 2 cache)
		getSelf(x(3))
		move(y(0) x(0))
		putConstant(true x(1))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(3) 2 cache)
		endDefinition(93088)
lbl(93127)	definition(x(8) 93168 pid('SAStatement,staticAnalysis/slow' 1 pos('./compiler/StaticAnalysis.oz' 1114 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 731> 7)
		endDefinition(93127)
lbl(93168)	putRecord('#' [1 2 fast] x(9))
		setConstant(staticAnalysis)
		setValue(x(8))
		setValue(x(7))
lbl(93178)	definition(x(7) 93309 pid('SAStatement,SaDo/fast' 2 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 4) <Q: 732> nil)
		allocateL1
		move(x(0) y(0))
		testBool(x(1) 93213 93202)
		getSelf(x(1))
		sendMsg(<M: SaLookahead> x(1) 1 cache)
		branch(93213)
lbl(93202)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1120)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(93213)	inlineAt(coord x(0) cache)
		sendMsg(setCoord y(0) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		getSelf(x(1))
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		getSelf(x(2))
		move(y(0) x(0))
		sendMsg(saDescend x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		testBool(x(2) 93294 93296)
		inlineAt(next x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) isComplex x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93294)	deAllocateL1
		return
lbl(93296)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1131)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93178)
lbl(93309)	definition(x(8) 93344 pid('SAStatement,SaDo/slow' 1 pos('./compiler/StaticAnalysis.oz' 1119 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 732> 5)
		endDefinition(93309)
lbl(93344)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: SaDo>)
		setValue(x(8))
		setValue(x(7))
lbl(93354)	definition(x(7) 93426 pid('SAStatement,SaLookahead/fast' 1 pos('./compiler/StaticAnalysis.oz' 1137 6) nil 3) <Q: 733> nil)
		getSelf(x(1))
		inlineDot(x(1) isComplex x(1) cache)
		testBool(x(1) 93373 93413)
		return
lbl(93373)	allocateL1
		move(x(0) y(0))
		getSelf(x(2))
		sendMsg(saSimple x(2) 1 cache)
		inlineAt(next x(0) cache)
		getSelf(x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 93411)
		inlineAt(next x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(<M: SaLookahead> x(1) 1 cache)
lbl(93411)	deAllocateL1
		return
lbl(93413)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1138)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93354)
lbl(93426)	definition(x(8) 93452 pid('SAStatement,SaLookahead/slow' 1 pos('./compiler/StaticAnalysis.oz' 1137 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 733> 3)
		endDefinition(93426)
lbl(93452)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: SaLookahead>)
		setValue(x(8))
		setValue(x(7))
lbl(93462)	definition(x(7) 93497 pid('SAStatement,saBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 1153 6) nil 3) <Q: 734> nil)
		testList(x(1) 93482)
lbl(93471)	getVariable(x(2))
		putConstant(true x(1))
		tailSendMsg(<M: SaDo> x(2) 2 cache)
lbl(93482)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1160)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93462)
lbl(93497)	definition(x(8) 93532 pid('SAStatement,saBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 1153 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 734> 5)
		endDefinition(93497)
lbl(93532)	putRecord('#' [1 2 fast] x(12))
		setConstant(saBody)
		setValue(x(8))
		setValue(x(7))
lbl(93542)	definition(x(7) 93551 pid('SAStatement,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1163 6) nil 1) <Q: 735> nil)
		return
		endDefinition(93542)
lbl(93551)	definition(x(8) 93577 pid('SAStatement,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1163 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 735> 3)
		endDefinition(93551)
lbl(93577)	putRecord('#' [1 2 fast] x(13))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(93587)	definition(x(7) 93596 pid('SAStatement,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1169 6) nil 1) <Q: 736> nil)
		return
		endDefinition(93587)
lbl(93596)	definition(x(8) 93622 pid('SAStatement,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1169 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 736> 3)
		endDefinition(93596)
lbl(93622)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(93632)	definition(x(7) 93641 pid('SAStatement,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 1) <Q: 737> nil)
		return
		endDefinition(93632)
lbl(93641)	definition(x(8) 93667 pid('SAStatement,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 737> 3)
		endDefinition(93641)
lbl(93667)	putRecord('#' [1 2 fast] x(15))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAStatement' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93713)	definition(x(7) 93758 pid('SATypeOf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1178 6) nil 3) <Q: 738> nil)
		allocateL2
		inlineAt(arg x(2) cache)
		putConstant(3 x(0))
		createVariableMove(y(0) x(1))
		sendMsg(reflectType x(2) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 685> 4)
		move(y(1) x(0))
		inlineAssign(value x(0) cache)
		deAllocateL2
		return
		endDefinition(93713)
lbl(93758)	definition(x(8) 93784 pid('SATypeOf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 738> 3)
		endDefinition(93758)
lbl(93784)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATypeOf' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93821)	definition(x(7) 93837 pid('SAStepPoint,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1186 6) nil 2) <Q: 739> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(93821)
lbl(93837)	definition(x(8) 93863 pid('SAStepPoint,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1186 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 739> 3)
		endDefinition(93837)
lbl(93863)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAStepPoint' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(93900)	definition(x(7) 93967 pid('SADeclaration,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1192 6) nil 2) <Q: 740> nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getTop x(1) 1 cache)
		testBool(y(0) 93952 93954)
		inlineAt(localVars x(0) cache)
lbl(93928)	definition(x(1) 93948 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1199 24) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(true x(0))
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(93928)
lbl(93948)	deAllocateL1
		genFastCall(<P: 34> 5)
lbl(93952)	deAllocateL1
		return
lbl(93954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1198)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(93900)
lbl(93967)	definition(x(8) 93993 pid('SADeclaration,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1192 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 740> 3)
		endDefinition(93967)
lbl(93993)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94003)	definition(x(7) 94019 pid('SADeclaration,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 2) <Q: 741> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(94003)
lbl(94019)	definition(x(8) 94045 pid('SADeclaration,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 741> 3)
		endDefinition(94019)
lbl(94045)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SADeclaration' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(94084)	definition(x(7) 94167 pid('SAEquation,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1209 6) nil 3) <Q: 742> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		putConstant('equality constraint failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(left x(0) cache)
		inlineAt(right x(1) cache)
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(94084)
lbl(94167)	definition(x(8) 94193 pid('SAEquation,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1209 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 742> 3)
		endDefinition(94167)
lbl(94193)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(94203)	definition(x(7) 94241 pid('SAEquation,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1223 6) nil 2) <Q: 743> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(94203)
lbl(94241)	definition(x(8) 94267 pid('SAEquation,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1223 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 743> 3)
		endDefinition(94241)
lbl(94267)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquation' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(<U: ooFreeFlag>)
lbl(94316)	definition(x(7) 94356 pid('SAConstructionOrPattern,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 1235 6) nil 4) <Q: 744> [y(7)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(record x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(94316)
lbl(94356)	definition(x(8) 94370 pid('SAConstructionOrPattern,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 1235 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 744> 1)
		endDefinition(94356)
lbl(94370)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(94380)	definition(x(7) 94397 pid('SAConstructionOrPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1238 6) nil 2) <Q: 745> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94380)
lbl(94397)	definition(x(8) 94423 pid('SAConstructionOrPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 745> 3)
		endDefinition(94397)
lbl(94423)	putRecord('#' [1 2 fast] x(10))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(94433)	definition(x(7) 94447 pid('SAConstructionOrPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1241 6) nil 1) <Q: 746> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(94433)
lbl(94447)	definition(x(8) 94473 pid('SAConstructionOrPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1241 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 746> 3)
		endDefinition(94447)
lbl(94473)	putRecord('#' [1 2 fast] x(11))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(94483)	definition(x(7) 94500 pid('SAConstructionOrPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1244 6) nil 2) <Q: 747> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94483)
lbl(94500)	definition(x(8) 94526 pid('SAConstructionOrPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 747> 3)
		endDefinition(94500)
lbl(94526)	putRecord('#' [1 2 fast] x(12))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94536)	definition(x(7) 94550 pid('SAConstructionOrPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 1247 6) nil 1) <Q: 748> nil)
		inlineAssign(lastValue x(0) cache)
		return
		endDefinition(94536)
lbl(94550)	definition(x(8) 94576 pid('SAConstructionOrPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 1247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 748> 3)
		endDefinition(94550)
lbl(94576)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(94586)	definition(x(7) 94603 pid('SAConstructionOrPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 1250 6) nil 2) <Q: 749> nil)
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94586)
lbl(94603)	definition(x(8) 94629 pid('SAConstructionOrPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 1250 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 749> 3)
		endDefinition(94603)
lbl(94629)	putRecord('#' [1 2 fast] x(14))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(94639)	definition(x(7) 94656 pid('SAConstructionOrPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 1253 6) nil 2) <Q: 750> nil)
		inlineAt(args x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94639)
lbl(94656)	definition(x(8) 94682 pid('SAConstructionOrPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 1253 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 750> 3)
		endDefinition(94656)
lbl(94682)	putRecord('#' [1 2 fast] x(15))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(94692)	definition(x(7) 94709 pid('SAConstructionOrPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 1256 6) nil 2) <Q: 751> nil)
		inlineAt(isOpen x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94692)
lbl(94709)	definition(x(8) 94735 pid('SAConstructionOrPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 1256 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 751> 3)
		endDefinition(94709)
lbl(94735)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(94745)	definition(x(7) 94762 pid('SAConstructionOrPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1259 6) nil 2) <Q: 752> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(94745)
lbl(94762)	definition(x(8) 94788 pid('SAConstructionOrPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1259 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 752> 3)
		endDefinition(94762)
lbl(94788)	putRecord('#' [1 2 fast] x(17))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(94798)	definition(x(7) 95259 pid('SAConstructionOrPattern,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 5) <Q: 753> [g(52) g(53) y(2) g(54)])
		putConstant(0 x(2))
		testLE(x(0) x(2) x(3) 94820)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
lbl(94820)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 95086)
		inlineAt(value x(0) cache)
		testBI('IsTuple' [x(0)]#[x(1)] 94938)
		inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 159> 4)
lbl(94865)	definition(x(1) 94891 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1275 5) nil 5) unit [y(0)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		tailSendMsg(getPrintType x(4) 2 cache)
		endDefinition(94865)
lbl(94891)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(94938)	inlineAt(value x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 160> 4)
lbl(94949)	definition(x(1) 95039 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1280 5) nil 6) unit [g(2) y(0)])
		shallowGuard(95026)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(94965)	shallowThen
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(4))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(5) cache)
		move(x(3) y(1))
		move(x(2) x(0))
		move(x(4) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(5) 4)
		move(g(1) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
lbl(95026)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1280)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(94949)
lbl(95039)	move(y(2) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(2) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant(' )' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
lbl(95086)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 95107)
		inlineAt(type x(0) cache)
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 696> 5)
lbl(95107)	inlineAt(value x(0) cache)
		createVariable(y(2))
		testBI(hasLabel [x(0)]#[x(1)] 95129)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
lbl(95129)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(3))
lbl(95142)	definition(x(1) 95218 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1295 9) nil 5) unit [x(3) g(2) y(0)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(0))
		move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(0) y(1))
		putConstant(0 x(1))
		putConstant(0 x(2))
		call(x(4) 4)
		inlineAt(value x(0) cache)
		move(y(1) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(95142)
lbl(95218)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 651> 4)
		putList(x(0))
		setConstant('(')
		setValue(y(0))
		moveMoveYXYX(y(3) x(1) y(1) x(4))
		putConstant(' ' x(2))
		putConstant('...)' x(3))
		deAllocateL4
		genFastCall(<Q: 690> 11)
		endDefinition(94798)
lbl(95259)	definition(x(8) 95294 pid('SAConstructionOrPattern,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1262 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 753> 5)
		endDefinition(95259)
lbl(95294)	putRecord('#' [1 2 fast] x(18))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(95304)	definition(x(7) 95579 pid('SAConstructionOrPattern,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 1303 6) nil 5) <Q: 754> [y(7) g(55) g(56)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(95375)
		move(x(0) y(2))
		createCond(95369)
lbl(95323)	lastClause
		clause
		thread(95341)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(2) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(95341)	ask
lbl(95342)	getRecord(type 1 y(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL6
		tailCall(x(2) 2)
lbl(95369)	move(y(2) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(95375)	putConstant(decode x(0))
		move(x(0) y(2))
		putConstant(type x(1))
		moveMoveXYYX(x(1) y(3) y(0) x(2))
		putConstant(0 x(3))
		testLE(x(2) x(3) x(4) 95398)
lbl(95397)	failure
lbl(95398)	inlineAt(isOpen x(3) cache)
		testBool(x(3) 95420 95409)
		branch(95397)
lbl(95409)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(95420)	inlineAt(label x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(reflectType x(2) 2 cache)
		createVariable(y(5))
		testRecord(y(4) value 1 95451)
lbl(95444)	getVariable(x(0))
		unify(y(5) x(0))
		branch(95452)
lbl(95451)	failure
lbl(95452)	inlineAt(args x(0) cache)
lbl(95457)	definition(x(1) 95551 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1310 6) nil 5) unit [y(0)])
		testRecord(x(1) '#' 2 95521)
lbl(95468)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(reflectType x(3) 2 cache)
		testRecord(y(2) value 1 95520)
lbl(95492)	getVariable(x(2))
		getRecord('#' 2 y(1))
		unifyValVar(x(2) x(1))
		move(g(0) x(0))
		inlineMinus1(x(0) x(2))
		move(x(2) x(0))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reflectType x(2) 2 cache)
lbl(95520)	failure
lbl(95521)	getRecord('#' 2 x(2))
		unifyValVar(x(0) x(2))
		move(g(0) x(0))
		inlineMinus1(x(0) x(3))
		move(x(1) x(4))
		move(x(3) x(0))
		move(x(2) x(1))
		tailSendMsg(reflectType x(4) 2 cache)
		endDefinition(95457)
lbl(95551)	createVariableMove(y(0) x(2))
		genFastCall(<P: 81> 6)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		putRecord(record 1 x(0))
		setValue(x(2))
		unify(y(1) x(0))
		popEx
		deAllocateL6
		return
		endDefinition(95304)
lbl(95579)	definition(x(8) 95614 pid('SAConstructionOrPattern,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1303 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 754> 5)
		endDefinition(95579)
lbl(95614)	putRecord('#' [1 2 fast] x(19))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(95624)	definition(x(7) 95638 pid('SAConstructionOrPattern,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 1326 6) nil 1) <Q: 755> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(95624)
lbl(95638)	definition(x(8) 95664 pid('SAConstructionOrPattern,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 755> 3)
		endDefinition(95638)
lbl(95664)	putRecord('#' [1 2 fast] x(20))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(95674)	definition(x(7) 95706 pid('SAConstructionOrPattern,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 1329 6) nil 3) <Q: 756> nil)
		allocateL1
		move(x(1) y(0))
		getSelf(x(2))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL1
		return
		endDefinition(95674)
lbl(95706)	definition(x(8) 95741 pid('SAConstructionOrPattern,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1329 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 756> 5)
		endDefinition(95706)
lbl(95741)	putRecord('#' [1 2 fast] x(21))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(95751)	definition(x(7) 95986 pid('SAConstructionOrPattern,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 1333 6) nil 5) <Q: 757> [g(20) g(54)])
		putConstant(0 x(3))
		testLE(x(0) x(3) x(4) 95766)
		return
lbl(95766)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		getSelf(x(3))
		getSelf(x(0))
		sendMsg(deref x(3) 1 cache)
		inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 95838)
		inlineAt(value x(0) cache)
lbl(95799)	definition(x(1) 95831 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1343 27) nil 5) unit [y(0) y(1)])
		move(g(0) x(2))
		inlineMinus1(x(2) x(3))
		move(x(0) x(4))
		move(x(3) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		tailSendMsg(getFullData x(4) 3 cache)
		endDefinition(95799)
lbl(95831)	move(y(2) x(2))
		deAllocateL5
		genFastCall(<P: 161> 7)
lbl(95838)	inlineAt(value x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 95857)
		inlineAt(value x(0) cache)
		unify(x(0) y(2))
		deAllocateL5
		return
lbl(95857)	inlineAt(value x(0) cache)
		createVariable(y(3))
		testBI(hasLabel [x(0)]#[x(1)] 95879)
		inlineAt(value x(0) cache)
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(3))
lbl(95879)	move(y(3) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		createVariable(y(4))
		testBool(x(1) 95910 95899)
		move(y(4) x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		branch(95910)
lbl(95899)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1352)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(95910)	inlineAt(value x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(95923)	definition(x(1) 95973 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1356 2) nil 6) unit [x(2) y(4) y(0) y(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		inlineUparrow(x(2) x(0) x(3))
		inlineAt(value x(4) cache)
		inlineUparrow(x(4) x(0) x(5))
		move(g(2) x(0))
		inlineMinus1(x(0) x(4))
		move(x(4) x(0))
		move(g(3) x(1))
		move(x(3) x(2))
		tailSendMsg(getFullData x(5) 3 cache)
		endDefinition(95923)
lbl(95973)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		unify(y(4) y(2))
		deAllocateL5
		return
		endDefinition(95751)
lbl(95986)	definition(x(8) 96027 pid('SAConstructionOrPattern,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 1333 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 757> 7)
		endDefinition(95986)
lbl(96027)	putRecord('#' [1 2 fast] x(22))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(19))
lbl(96039)	definition(x(7) 96156 pid('SAConstructionOrPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 1363 6) nil 3) <Q: 758> [y(19)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 96057)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(96057)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 96141 96143)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 96107)
		deAllocateL2
		return
lbl(96107)	testLiteral(y(1) unit 96128)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(96128)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(96141)	deAllocateL2
		return
lbl(96143)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1368)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96039)
lbl(96156)	definition(x(8) 96182 pid('SAConstructionOrPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 1363 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 758> 3)
		endDefinition(96156)
lbl(96182)	putRecord('#' [1 2 fast] x(23))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(96192)	definition(x(7) 96298 pid('SAConstructionOrPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 1389 6) nil 5) <Q: 759> nil)
		allocateL4
		inlineAt(args x(2) cache)
lbl(96204)	definition(x(3) 96260 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1394 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96246)
lbl(96215)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(96246)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(reachable x(3) 2 cache)
		endDefinition(96204)
lbl(96260)	inlineAt(label x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		sendMsg(reachable x(4) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(96192)
lbl(96298)	definition(x(8) 96333 pid('SAConstructionOrPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 1389 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 759> 5)
		endDefinition(96298)
lbl(96333)	putRecord('#' [1 2 fast] x(24))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(96343)	definition(x(7) 96373 pid('SAConstructionOrPattern,makeType/fast' 0 pos('./compiler/StaticAnalysis.oz' 1404 6) nil 2) <Q: 760> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(96343)
lbl(96373)	definition(x(8) 96387 pid('SAConstructionOrPattern,makeType/slow' 1 pos('./compiler/StaticAnalysis.oz' 1404 6) nil 1) unit nil)
		getLiteral(makeType x(0))
		genFastCall(<Q: 760> 1)
		endDefinition(96373)
lbl(96387)	putRecord('#' [1 2 fast] x(25))
		setConstant(makeType)
		setValue(x(8))
		setValue(x(7))
lbl(96397)	definition(x(7) 96988 pid('SAConstructionOrPattern,MakeConstruction/fast' 1 pos('./compiler/StaticAnalysis.oz' 1408 6) nil 7) <Q: 761> [y(14) g(55) y(3) g(56)])
		allocateL7
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(96426)	definition(x(1) 96452 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1411 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 96446)
lbl(96437)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(96446)	unify(x(2) x(0))
		return
		endDefinition(96426)
lbl(96452)	putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		move(g(0) x(0))
		inlineDot(x(0) literal x(2) cache)
		inlineAt(label x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 96910 96975)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 96840 96899)
		inlineAt(label x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(args x(0) cache)
lbl(96529)	definition(x(1) 96565 pid('' 3 pos('./compiler/StaticAnalysis.oz' 1427 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 96554)
lbl(96540)	getVarVar(x(0) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(3))
		genFastCall(<Q: 658> 5)
lbl(96554)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(96529)
lbl(96565)	createVariableMove(y(4) x(2))
		genFastCall(<P: 81> 6)
lbl(96571)	definition(x(1) 96605 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1430 27) nil 4) unit nil)
		shallowGuard(96592)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96587)	shallowThen
		unify(x(1) x(2))
		return
lbl(96592)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1430)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96571)
lbl(96605)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 96776 96829)
		inlineAt(label x(3) cache)
		putList(x(0))
		setValue(x(3))
		setValue(y(2))
		move(g(2) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(0) 96756 96765)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 96730 96745)
		move(y(3) x(0))
		createVariable(x(1))
		callBI('TellRecord' [x(0) x(1)]#nil)
		inlineAssign(value x(1) cache)
		getSelf(x(2))
lbl(96675)	definition(x(1) 96723 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1445 17) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(96710)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(96696)	shallowThen
		inlineAt(value x(0) cache)
		inlineUparrow(x(0) x(2) x(4))
		unify(x(4) x(3))
		return
lbl(96710)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1445)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96675)
lbl(96723)	move(y(4) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(96730)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		inlineAssign(value x(2) cache)
		deAllocateL7
		return
lbl(96745)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96756)	createVariable(x(0))
		inlineAssign(value x(0) cache)
		deAllocateL7
		return
lbl(96765)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1438)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96776)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(2))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in record construction' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96829)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1435)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96840)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96899)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1422)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(96910)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(label x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal record label ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(96975)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(96397)
lbl(96988)	definition(x(8) 97014 pid('SAConstructionOrPattern,MakeConstruction/slow' 1 pos('./compiler/StaticAnalysis.oz' 1408 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 761> 3)
		endDefinition(96988)
lbl(97014)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: MakeConstruction>)
		setValue(x(8))
		setValue(x(7))
lbl(97024)	definition(x(7) 97092 pid('SAConstructionOrPattern,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 1481 6) nil 5) <Q: 762> [y(19)])
		allocateL4
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 97077 97079)
		move(y(1) x(0))
		deAllocateL4
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(97077)	deAllocateL4
		return
lbl(97079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1485)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97024)
lbl(97092)	definition(x(8) 97127 pid('SAConstructionOrPattern,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 1481 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 762> 5)
		endDefinition(97092)
lbl(97127)	putRecord('#' [1 2 fast] x(27))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(97137)	definition(x(7) 98183 pid('SAConstructionOrPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 1497 6) nil 12) <Q: 763> nil)
		allocateL8
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getCoord x(2) 1 cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		move(y(2) x(3))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 97188)
		deAllocateL8
		return
lbl(97188)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 97880 98170)
		createVariableMove(y(3) x(0))
		sendMsg(getLabel y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getArgs y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(isOpen y(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 97273 97453)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		sendMsg('unify' x(2) 2 cache)
		branch(97464)
lbl(97273)	createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(3) 1 cache)
		testBool(y(1) 97302 97442)
		inlineAt(label x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(3) 2 cache)
		branch(97464)
lbl(97302)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 97464)
lbl(97331)	inlineAt(label x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(value x(3) cache)
		putRecord(oz 1 x(4))
		setValue(y(1))
		putRecord(oz 1 x(5))
		setValue(y(7))
		putRecord('#' 3 x(1))
		setValue(x(4))
		setConstant(' and ')
		setValue(x(5))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible labels')
		setValue(x(1))
		putRecord(oz 1 x(8))
		setValue(x(3))
		putRecord(hint [l m] x(7))
		setConstant('First value')
		setValue(x(8))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Second value')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(2))
		setValue(x(0))
		setValue(x(6))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
		branch(97464)
lbl(97442)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1519)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97453)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1515)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97464)	inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 97606)
lbl(97473)	move(y(5) x(0))
		testBI('Not' [x(0)]#[x(1)] 97606)
lbl(97480)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 97606)
lbl(97509)	inlineAt(args x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(3) cache)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' and ')
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(6))
		setValue(x(3))
		putRecord(hint [l m] x(5))
		setConstant('First value')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Second value')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putList(x(2))
		setValue(x(0))
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 686> 6)
lbl(97606)	inlineAt(value x(0) cache)
		testBI('IsDet' [x(0)]#[x(1)] 97728)
lbl(97615)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 97728)
lbl(97622)	inlineAt(value x(1) cache)
		callBI('Arity' [x(1)]#[x(2)])
		getSelf(x(3))
lbl(97632)	definition(x(1) 97721 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1558 2) nil 5) unit [x(3) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(value x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		move(g(1) x(2))
		callBI('.' [x(2) x(0)]#[x(4)])
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97692 97708)
		move(g(2) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97692)	move(g(2) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97708)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97632)
lbl(97721)	move(x(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97728)	inlineAt(value x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 653> 4)
		move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 653> 4)
		getSelf(x(2))
lbl(97750)	definition(x(1) 97873 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1575 2) nil 4) unit [x(2) y(1) y(6) y(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 97858 97860)
		inlineAt(value x(0) cache)
		move(y(0) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(g(2) x(0))
		inlineUparrow(x(0) x(1) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(2) 97831 97847)
		move(g(3) x(0))
		move(y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97831)	move(g(3) x(0))
		move(y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg('unify' x(2) 2 cache)
lbl(97847)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1582)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(97858)	deAllocateL3
		return
lbl(97860)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1576)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97750)
lbl(97873)	move(y(2) x(0))
		deAllocateL8
		genFastCall(<P: 34> 5)
lbl(97880)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 98063 98159)
lbl(97893)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 97919 98052)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(97919)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(3) 0 97951)
lbl(97934)	inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL8
		tailSendMsg('unify' x(2) 2 cache)
lbl(97951)	inlineAt(args x(0) cache)
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(value x(0) cache)
		move(x(0) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord('#' 3 x(1))
		setValue(y(3))
		setConstant(' and ')
		setConstant(0)
		putRecord(hint [l m] x(0))
		setConstant('Incompatible widths')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('First value')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Second value')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(3))
		setValue(x(4))
		setValue(x(6))
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98052)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1602)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98063)	createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 98081)
		branch(97893)
lbl(98081)	inlineAt(value x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(line 1 x(0))
		setConstant('record = number')
		putRecord(oz 1 x(4))
		setValue(y(3))
		putRecord(hint [1 l] x(3))
		setValue(x(4))
		setConstant('First value')
		putRecord(oz 1 x(7))
		setValue(y(4))
		putRecord(hint [1 l] x(6))
		setValue(x(7))
		setConstant('Second value')
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(5))
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL8
		genFastCall(<Q: 686> 7)
lbl(98159)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1597)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98170)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1507)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(97137)
lbl(98183)	definition(x(8) 98218 pid('SAConstructionOrPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 1497 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 763> 5)
		endDefinition(98183)
lbl(98218)	putRecord('#' [1 2 fast] x(28))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(98228)	definition(x(7) 98299 pid('SAConstructionOrPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 1625 6) nil 3) <Q: 764> [y(19)])
		allocateL1
		inlineAt(args x(2) cache)
lbl(98240)	definition(x(1) 98278 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1632 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 98264)
lbl(98251)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
lbl(98264)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(sa x(1) 1 cache)
		endDefinition(98240)
lbl(98278)	move(x(0) y(0))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: MakeConstruction> false 1) 0)
		deAllocateL1
		genCall(gci(g(0) true makeType true 0) 0)
		endDefinition(98228)
lbl(98299)	definition(x(8) 98325 pid('SAConstructionOrPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 1625 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 764> 3)
		endDefinition(98299)
lbl(98325)	putRecord('#' [1 2 fast] x(29))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(98335)	definition(x(7) 98418 pid('SAConstructionOrPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1642 6) nil 2) <Q: 765> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(98361)	definition(x(1) 98412 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1645 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 98398)
lbl(98372)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(98398)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(98361)
lbl(98412)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(98335)
lbl(98418)	definition(x(8) 98444 pid('SAConstructionOrPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1642 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 765> 3)
		endDefinition(98418)
lbl(98444)	putRecord('#' [1 2 fast] x(30))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 22 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		move(y(19) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstructionOrPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(19))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAConstruction' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
lbl(98553)	definition(x(7) 98775 pid('SADefinition,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 1663 6) nil 3) <Q: 766> [y(4)])
		allocateL4
		inlineAt(formalArgs x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 687> 6)
		getSelf(x(2))
		createVariableMove(y(1) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		createVariable(y(2))
		testBool(y(1) 98664 98745)
		move(g(0) x(0))
		inlineDot(x(0) clauseBodyToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyStatements x(1) cache)
		inlineAt(statements x(2) cache)
		unify(x(2) x(1))
		branch(98756)
lbl(98664)	move(g(0) x(0))
		inlineDot(x(0) procedureToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(3) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(2))
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 98756 98734)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(1))
		move(y(1) x(1))
		inlineAssign(predicateRef x(1) cache)
		branch(98756)
lbl(98734)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1675)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98745)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1670)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98756)	inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(98553)
lbl(98775)	definition(x(8) 98801 pid('SADefinition,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 1663 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 766> 3)
		endDefinition(98775)
lbl(98801)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(98811)	definition(x(7) 98968 pid('SADefinition,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 1688 6) nil 3) <Q: 767> [y(10)])
		allocateL5
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		inlineAt(procFlags x(1) cache)
		putConstant(instantiate x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 98918 98937)
		inlineAt(coord x(0) cache)
		sendMsg(beginVirtualToplevel y(0) 1 cache)
		putConstant(true x(0))
		putConstant(false x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		createVariableMove(y(4) x(0))
		sendMsg(endVirtualToplevel y(0) 1 cache)
		move(y(4) x(0))
		inlineAssign(toCopy x(0) cache)
		branch(98948)
lbl(98918)	sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		branch(98948)
lbl(98937)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1693)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(98948)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(98811)
lbl(98968)	definition(x(8) 98994 pid('SADefinition,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 1688 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 767> 3)
		endDefinition(98968)
lbl(98994)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(99004)	definition(x(7) 99023 pid('SADefinition,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 1705 6) nil 2) <Q: 768> nil)
		inlineAt(designator x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(99004)
lbl(99023)	definition(x(8) 99049 pid('SADefinition,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 1705 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 768> 3)
		endDefinition(99023)
lbl(99049)	putRecord('#' [1 2 fast] x(11))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SADefinition' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(22))
lbl(99089)	definition(x(7) 99269 pid('SABuiltinApplication,typeCheckN/fast' 5 pos('./compiler/StaticAnalysis.oz' 1712 6) nil 6) <Q: 769> [g(9) y(22)])
		match(x(2) ht(99254 [onScalar(nil 99098) onRecord('|' 2 99147)]))
lbl(99098)	allocateL1
		move(x(4) y(0))
		testLiteral(x(3) nil 99108)
		branch(99142)
lbl(99108)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99142)	getNumber(0 y(0))
		deAllocateL1
		return
lbl(99147)	allocateL6
		getVarVar(x(5) y(0))
		testList(x(3) 99217)
lbl(99154)	getVarVar(x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(4) y(4))
		move(x(3) x(0))
		move(x(5) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 675> 6)
		testBool(y(5) 99201 99206)
		move(y(3) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		deAllocateL6
		genCall(gci(g(1) true typeCheckN true 5) 0)
lbl(99201)	unify(y(4) y(3))
		deAllocateL6
		return
lbl(99206)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1725)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99217)	inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(0) cache)
		move(x(4) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(typeCheckN)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99254)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1737)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99089)
lbl(99269)	definition(x(8) 99322 pid('SABuiltinApplication,typeCheckN/slow' 1 pos('./compiler/StaticAnalysis.oz' 1712 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 769> 11)
		endDefinition(99269)
lbl(99322)	putRecord('#' [1 2 fast] x(9))
		setConstant(typeCheckN)
		setValue(x(8))
		setValue(x(7))
lbl(99332)	definition(x(7) 99355 pid('SABuiltinApplication,typeCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1740 6) nil 5) <Q: 770> [y(22)])
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant(1 x(1))
		genCall(gci(g(0) true typeCheckN true 5) 0)
		endDefinition(99332)
lbl(99355)	definition(x(8) 99402 pid('SABuiltinApplication,typeCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1740 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 770> 9)
		endDefinition(99355)
lbl(99402)	putRecord('#' [1 2 fast] x(10))
		setConstant(typeCheck)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(23))
lbl(99414)	definition(x(7) 99591 pid('SABuiltinApplication,detCheck/fast' 4 pos('./compiler/StaticAnalysis.oz' 1744 6) nil 6) <Q: 771> [g(9) y(1) y(23)])
		match(x(1) ht(99576 [onScalar(nil 99423) onRecord('|' 2 99472)]))
lbl(99423)	allocateL1
		move(x(3) y(0))
		testLiteral(x(2) nil 99433)
		branch(99467)
lbl(99433)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99467)	getLiteral(true y(0))
		deAllocateL1
		return
lbl(99472)	allocateL5
		getVarVar(x(4) y(0))
		testList(x(2) 99539)
lbl(99479)	getVarVar(x(1) y(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(1) x(1))
		callBI('.' [x(1) x(2)]#[x(5)])
		moveMoveXYXY(x(0) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		call(x(5) 2)
		testBool(y(4) 99523 99528)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL5
		genCall(gci(g(2) true detCheck true 4) 0)
lbl(99523)	getLiteral(false y(3))
		deAllocateL5
		return
lbl(99528)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1758)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99539)	inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		move(x(3) y(0))
		putConstant('static analysis fatal error' x(1))
		putConstant('builtin arity does not match declaration' x(2))
		sendMsg(error x(4) [coord kind msg] cache)
		putRecord(compiler 2 x(0))
		setConstant(internal)
		setConstant(detCheck)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(99576)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1767)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99414)
lbl(99591)	definition(x(8) 99638 pid('SABuiltinApplication,detCheck/slow' 1 pos('./compiler/StaticAnalysis.oz' 1744 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 771> 9)
		endDefinition(99591)
lbl(99638)	putRecord('#' [1 2 fast] x(11))
		setConstant(detCheck)
		setValue(x(8))
		setValue(x(7))
lbl(99648)	definition(x(7) 100141 pid('SABuiltinApplication,AssertTypes/fast' 5 pos('./compiler/StaticAnalysis.oz' 1770 6) nil 19) <Q: 772> [y(7) y(22)])
		testLiteral(x(2) nil 99659)
lbl(99658)	return
lbl(99659)	testList(x(2) 100126)
lbl(99662)	allocateL(11)
		getVarVar(x(2) x(5))
		putRecord('#' 2 x(6))
		setValue(x(3))
		setValue(x(4))
		testRecord(x(6) '#' 2 100124)
lbl(99680)	getVarVar(x(3) x(4))
		createVariable(y(0))
		shallowGuard(100122)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(99699)	shallowThen
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(5) y(4))
		moveMoveXYXY(x(3) y(5) x(6) y(6))
		move(x(8) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getType y(3) 1 cache)
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(5) x(1))
		callBI('Label' [x(1)]#[x(4)])
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(9) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(10) 99789 100111)
		move(y(2) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		moveMoveYXYX(y(6) x(3) y(7) x(4))
		deAllocateL
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
lbl(99789)	putRecord(pn 1 y(4))
		setVariable(x(0))
		inlineAt(designator x(1) cache)
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(99811)	definition(x(1) 99837 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1791 27) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(99811)
lbl(99837)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99848)	definition(x(1) 99865 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1792 27) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(99848)
lbl(99865)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(99876)	definition(x(1) 99909 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1793 27) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(2) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 696> 5)
		endDefinition(99876)
lbl(99909)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(9))
		createVariableMove(y(10) x(0))
		sendMsg(getType y(3) 1 cache)
		move(y(10) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 696> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(7))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putList(x(0))
		setValue(y(4))
		setValue(y(8))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('At argument')
		setValue(y(2))
		putRecord(oz 1 x(10))
		setValue(y(5))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setValue(x(10))
		putRecord(hint [l m] x(12))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(14))
		setConstant('Application (names)')
		setValue(y(6))
		putRecord(hint [l m] x(16))
		setConstant('Application (values)')
		setValue(y(7))
		putRecord(hint [l m] x(18))
		setConstant('Application (types)')
		setValue(y(8))
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(8))
		setValue(x(9))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(9) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100111)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1783)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(100122)	deAllocateL
		return
lbl(100124)	deAllocateL
		return
lbl(100126)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1813)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(99648)
lbl(100141)	definition(x(8) 100194 pid('SABuiltinApplication,AssertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1770 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 772> 11)
		endDefinition(100141)
lbl(100194)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AssertTypes>)
		setValue(x(8))
		setValue(x(7))
lbl(100204)	definition(x(7) 100264 pid('SABuiltinApplication,assertTypes/fast' 2 pos('./compiler/StaticAnalysis.oz' 1816 6) nil 5) <Q: 773> [y(5) y(22)])
		allocateL2
		move(g(0) x(2))
		inlineDot(x(2) getInfo x(3) cache)
		move(x(0) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		call(x(3) 2)
		move(y(1) x(0))
		inlineDot(x(0) types x(3) cache)
		inlineDot(x(0) det x(4) cache)
		inlineAt(actualArgs x(2) cache)
		move(y(0) x(0))
		putConstant(1 x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: AssertTypes> true 5) 0)
		endDefinition(100204)
lbl(100264)	definition(x(8) 100299 pid('SABuiltinApplication,assertTypes/slow' 1 pos('./compiler/StaticAnalysis.oz' 1816 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 773> 5)
		endDefinition(100264)
lbl(100299)	putRecord('#' [1 2 fast] x(13))
		setConstant(assertTypes)
		setValue(x(8))
		setValue(x(7))
lbl(100309)	definition(x(7) 100900 pid('SABuiltinApplication,checkMessage/fast' 5 pos('./compiler/StaticAnalysis.oz' 1830 6) nil 12) <Q: 774> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 658> 4)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 660> 4)
		createVariable(y(1))
		createVariable(y(7))
		testLiteral(y(3) object 100362)
lbl(100354)	getLiteral('Object' y(1))
		getLiteral('object application' y(7))
		branch(100392)
lbl(100362)	testLiteral(y(3) new 100374)
lbl(100366)	getLiteral('Object' y(1))
		getLiteral('object creation' y(7))
		branch(100392)
lbl(100374)	testLiteral(y(3) 'class' 100386)
lbl(100378)	getLiteral('Class' y(1))
		getLiteral('class application' y(7))
		branch(100392)
lbl(100386)	getLiteral('???' y(1))
		getLiteral('???' y(7))
lbl(100392)	testLiteral(y(2) unit 100398)
		deAllocateL9
		return
lbl(100398)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 100896)
lbl(100405)	testBI('IsRecord' [x(0)]#[x(1)] 100894)
lbl(100409)	callBI('Label' [x(0)]#[x(1)])
		move(y(2) x(2))
		testBI('HasFeature' [x(2) x(1)]#[x(3)] 100770)
		putRecord('#' 2 x(1))
		setVariable(y(3))
		setVariable(y(8))
		callBI('Label' [x(0)]#[x(3)])
		callBI('.' [x(2) x(3)]#[x(4)])
		unify(x(4) x(1))
		getSelf(x(2))
lbl(100438)	definition(x(1) 100553 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1867 2) nil 15) unit [x(2) y(5) y(0) y(7) y(1) y(4) y(6)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(1) x(2))
		testBI('HasFeature' [x(2) x(0)]#[x(3)] 100457)
		return
lbl(100457)	move(g(2) x(3))
		inlineDot(x(3) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord('#' 2 x(6))
		setConstant('missing message feature in ')
		setValue(g(3))
		putRecord(pn 1 x(9))
		setValue(g(5))
		putRecord(hint [l m] x(8))
		setValue(g(4))
		setValue(x(9))
		putRecord(hint [l m] x(11))
		setConstant('Required feature')
		setValue(x(0))
		putRecord(oz 1 x(14))
		setValue(g(6))
		putRecord(hint [l m] x(13))
		setConstant('Message found')
		setValue(x(14))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(7))
		setValue(x(8))
		setValue(x(10))
		move(x(5) x(0))
		move(x(7) x(1))
		move(x(6) x(3))
		putConstant('static analysis error' x(2))
		tailSendMsg(error x(4) [coord items kind msg] cache)
		endDefinition(100438)
lbl(100553)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(8) unit 100565)
		deAllocateL9
		return
lbl(100565)	move(y(5) x(0))
		callBI('Arity' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(100573)	definition(x(1) 100763 pid('' 1 pos('./compiler/StaticAnalysis.oz' 1885 5) nil 14) unit [x(3) y(3) y(8) y(0) y(7) y(1) y(4) y(6)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		move(g(1) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100603 100750)
		deAllocateL4
		return
lbl(100603)	move(y(0) x(0))
		move(g(2) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 100621 100750)
		deAllocateL4
		return
lbl(100621)	move(g(3) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		move(g(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message feature in ')
		setValue(g(4))
		putRecord(pn 1 x(6))
		setValue(g(6))
		putRecord(hint [l m] x(5))
		setValue(g(5))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Required features')
		setValue(y(2))
		putRecord(hint [l m] x(10))
		setConstant('Optional features')
		setValue(y(3))
		putRecord(oz 1 x(13))
		setValue(g(7))
		putRecord(hint [l m] x(12))
		setConstant('Message found')
		setValue(x(13))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL4
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100750)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(100573)
lbl(100763)	move(x(2) x(0))
		deAllocateL9
		genFastCall(<P: 34> 5)
lbl(100770)	putConstant(otherwise x(0))
		testBI('HasFeature' [x(2) x(0)]#[x(1)] 100779)
		deAllocateL9
		return
lbl(100779)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 694> 4)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 2 x(3))
		setConstant('illegal message label in ')
		setValue(y(7))
		putRecord(pn 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setValue(y(1))
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(11))
		setValue(y(6))
		putRecord(hint [l m] x(10))
		setConstant('Message found')
		setValue(x(11))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		move(y(0) x(4))
		deAllocateL9
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(100894)	deAllocateL9
		return
lbl(100896)	deAllocateL9
		return
		endDefinition(100309)
lbl(100900)	definition(x(8) 100953 pid('SABuiltinApplication,checkMessage/slow' 1 pos('./compiler/StaticAnalysis.oz' 1830 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 774> 11)
		endDefinition(100900)
lbl(100953)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkMessage)
		setValue(x(8))
		setValue(x(7))
lbl(100963)	definition(x(7) 101606 pid('SABuiltinApplication,checkArguments/fast' 3 pos('./compiler/StaticAnalysis.oz' 1924 6) nil 15) <Q: 775> [y(2) y(5) g(57) y(22)])
		allocateL9
		move(g(0) x(3))
		inlineDot(x(3) printName x(4) cache)
		inlineAt(designator x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		call(y(3) 2)
		move(g(1) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(designator x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(y(6) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		move(y(4) x(0))
		testBI('==' [x(0) x(1)]#[x(2)] 101382)
		inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) types x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true typeCheck false 4) 0)
		testNumber(y(4) 0 101127)
lbl(101092)	move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 101104)
		getLiteral(true y(2))
		deAllocateL9
		return
lbl(101104)	inlineAt(actualArgs x(1) cache)
		move(y(3) x(0))
		inlineDot(x(0) det x(2) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		deAllocateL9
		genCall(gci(g(3) true detCheck true 4) 0)
lbl(101127)	inlineAt(actualArgs x(0) cache)
lbl(101132)	definition(x(1) 101158 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1950 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101132)
lbl(101158)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101169)	definition(x(1) 101186 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1951 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101169)
lbl(101186)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		inlineDot(x(0) types x(0) cache)
lbl(101201)	definition(x(1) 101216 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1952 32) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyValue(x(0))
		return
		endDefinition(101201)
lbl(101216)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(7))
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 692> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(5))
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('At argument')
		setValue(y(4))
		putRecord(hint [l m] x(10))
		setConstant('Expected types')
		setValue(y(8))
		putRecord(hint [l m] x(12))
		setConstant('Argument names')
		setValue(y(1))
		putRecord(hint [l m] x(14))
		setConstant('Argument values')
		setValue(y(3))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(7) x(0))
		putConstant('type error' x(2))
		putConstant('ill-typed application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
lbl(101382)	inlineAt(actualArgs x(3) cache)
lbl(101387)	definition(x(4) 101413 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1965 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(101387)
lbl(101413)	move(x(1) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(101433)	definition(x(1) 101450 pid('' 2 pos('./compiler/StaticAnalysis.oz' 1966 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(101433)
lbl(101450)	createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		putRecord(pn 1 x(3))
		setValue(y(5))
		putList(x(2))
		setValue(x(3))
		setValue(y(3))
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(5))
		putList(x(0))
		setValue(x(1))
		setValue(y(6))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(hint [l m] x(5))
		setConstant('Builtin')
		setValue(y(5))
		putRecord(hint [l m] x(7))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(9))
		setConstant('Found')
		setValue(y(4))
		putRecord(hint [l m] x(11))
		setConstant('Argument names')
		setValue(y(7))
		putRecord(hint [l m] x(13))
		setConstant('Argument values')
		setValue(y(6))
		putList(x(12))
		setValue(x(13))
		setConstant(nil)
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal arity in application' x(3))
		sendMsg(error y(0) [coord items kind msg] cache)
		getLiteral(false y(2))
		deAllocateL9
		return
		endDefinition(100963)
lbl(101606)	definition(x(8) 101647 pid('SABuiltinApplication,checkArguments/slow' 1 pos('./compiler/StaticAnalysis.oz' 1924 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 775> 7)
		endDefinition(101606)
lbl(101647)	putRecord('#' [1 2 fast] x(15))
		setConstant(checkArguments)
		setValue(x(8))
		setValue(x(7))
lbl(101657)	definition(x(7) 101976 pid('SABuiltinApplication,doBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 1982 6) nil 9) <Q: 776> [y(4)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		exHandler(101928)
		move(x(0) y(1))
		createCond(101922)
lbl(101737)	lastClause
		clause
		createVariable(y(4))
		thread(101783)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(1) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		putConstant(system x(0))
		putConstant(1 x(3))
		callBI(tellRecordSize [x(0) x(3) x(1)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(1) x(0) x(3))
		unify(x(3) y(4))
		deAllocateL5
		return
lbl(101783)	ask
lbl(101784)	match(y(4) ht(101909 [onScalar(builtinUndefined 101787) onScalar(builtinArity 101848)]))
lbl(101787)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin undefined' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(101848)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(0) cache)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Name')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Arity')
		setValue(y(3))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		putConstant('static analysis warning' x(2))
		putConstant('builtin has wrong arity' x(3))
		deAllocateL5
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(101909)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2019)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(101922)	move(y(1) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(101928)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI(builtin [x(0) x(1)]#[x(2)])
		move(g(0) x(3))
		inlineDot(x(3) builtinToken x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		move(x(5) y(4))
		move(x(2) x(0))
		sendMsg(init y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		popEx
		deAllocateL5
		return
		endDefinition(101657)
lbl(101976)	definition(x(8) 102002 pid('SABuiltinApplication,doBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 1982 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 776> 3)
		endDefinition(101976)
lbl(102002)	putRecord('#' [1 2 fast] x(16))
		setConstant(doBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(102012)	definition(x(7) 102219 pid('SABuiltinApplication,doNewName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 4) <Q: 777> [y(0) y(4)])
		allocateL6
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getTop y(0) 1 cache)
		createVariable(y(5))
		testBool(y(4) 102085 102117)
lbl(102072)	createVariableMove(y(4) x(0))
		sendMsg(getOrigin y(2) 1 cache)
		testLiteral(y(4) generated 102104)
lbl(102085)	move(g(0) x(0))
		inlineDot(x(0) newNamedName x(2) cache)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		call(x(2) 2)
		branch(102128)
lbl(102104)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		sendMsg(declareToplevelName y(0) 2 cache)
		branch(102128)
lbl(102117)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2029)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(102128)	move(g(1) x(0))
		inlineDot(x(0) nameToken x(1) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(5) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 102204 102206)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(5))
lbl(102204)	deAllocateL6
		return
lbl(102206)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2036)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(102012)
lbl(102219)	definition(x(8) 102245 pid('SABuiltinApplication,doNewName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2023 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 777> 3)
		endDefinition(102219)
lbl(102245)	putRecord('#' [1 2 fast] x(17))
		setConstant(doNewName)
		setValue(x(8))
		setValue(x(7))
lbl(102255)	definition(x(7) 102366 pid('SABuiltinApplication,doNewUniqueName/fast' 1 pos('./compiler/StaticAnalysis.oz' 2040 6) nil 4) <Q: 778> [y(4)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		callBI('NewUniqueName' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) codeGenMakeEquateLiteral x(1) cache)
		unify(x(1) y(1))
		deAllocateL4
		return
		endDefinition(102255)
lbl(102366)	definition(x(8) 102392 pid('SABuiltinApplication,doNewUniqueName/slow' 1 pos('./compiler/StaticAnalysis.oz' 2040 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 778> 3)
		endDefinition(102366)
lbl(102392)	putRecord('#' [1 2 fast] x(18))
		setConstant(doNewUniqueName)
		setValue(x(8))
		setValue(x(7))
lbl(102402)	definition(x(7) 102469 pid('SABuiltinApplication,doNewLock/fast' 1 pos('./compiler/StaticAnalysis.oz' 2053 6) nil 5) <Q: 779> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI('NewLock' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102402)
lbl(102469)	definition(x(8) 102495 pid('SABuiltinApplication,doNewLock/slow' 1 pos('./compiler/StaticAnalysis.oz' 2053 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 779> 3)
		endDefinition(102469)
lbl(102495)	putRecord('#' [1 2 fast] x(19))
		setConstant(doNewLock)
		setValue(x(8))
		setValue(x(7))
lbl(102505)	definition(x(7) 102574 pid('SABuiltinApplication,doNewPort/fast' 1 pos('./compiler/StaticAnalysis.oz' 2060 6) nil 5) <Q: 780> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) portToken x(2) cache)
		createVariable(x(3))
		callBI('NewPort' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102505)
lbl(102574)	definition(x(8) 102600 pid('SABuiltinApplication,doNewPort/slow' 1 pos('./compiler/StaticAnalysis.oz' 2060 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 780> 3)
		endDefinition(102574)
lbl(102600)	putRecord('#' [1 2 fast] x(20))
		setConstant(doNewPort)
		setValue(x(8))
		setValue(x(7))
lbl(102610)	definition(x(7) 102679 pid('SABuiltinApplication,doNewCell/fast' 1 pos('./compiler/StaticAnalysis.oz' 2067 6) nil 5) <Q: 781> [y(4)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		createVariable(x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102610)
lbl(102679)	definition(x(8) 102705 pid('SABuiltinApplication,doNewCell/slow' 1 pos('./compiler/StaticAnalysis.oz' 2067 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 781> 3)
		endDefinition(102679)
lbl(102705)	putRecord('#' [1 2 fast] x(21))
		setConstant(doNewCell)
		setValue(x(8))
		setValue(x(7))
lbl(102715)	definition(x(7) 102839 pid('SABuiltinApplication,doNewArray/fast' 1 pos('./compiler/StaticAnalysis.oz' 2074 6) nil 6) <Q: 782> [y(4) g(58)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) arrayToken x(1) cache)
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		createVariable(x(4))
		callBI('NewArray' [x(2) x(3) x(4)]#[x(5)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(5) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(4 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102715)
lbl(102839)	definition(x(8) 102865 pid('SABuiltinApplication,doNewArray/slow' 1 pos('./compiler/StaticAnalysis.oz' 2074 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 782> 3)
		endDefinition(102839)
lbl(102865)	putRecord('#' [1 2 fast] x(22))
		setConstant(doNewArray)
		setValue(x(8))
		setValue(x(7))
lbl(102875)	definition(x(7) 102942 pid('SABuiltinApplication,doNewDictionary/fast' 1 pos('./compiler/StaticAnalysis.oz' 2083 6) nil 5) <Q: 783> [y(4) g(59)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI('NewDictionary' nil#[x(3)])
		callBI(newObject [x(2)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102875)
lbl(102942)	definition(x(8) 102968 pid('SABuiltinApplication,doNewDictionary/slow' 1 pos('./compiler/StaticAnalysis.oz' 2083 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 783> 3)
		endDefinition(102942)
lbl(102968)	putRecord('#' [1 2 fast] x(23))
		setConstant(doNewDictionary)
		setValue(x(8))
		setValue(x(7))
lbl(102978)	definition(x(7) 103075 pid('SABuiltinApplication,doNewChunk/fast' 1 pos('./compiler/StaticAnalysis.oz' 2090 6) nil 4) <Q: 784> [y(4)])
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(g(0) x(0))
		inlineDot(x(0) chunkToken x(1) cache)
		move(y(2) x(2))
		callBI('NewChunk' [x(2)]#[x(3)])
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(1))
		move(x(3) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(102978)
lbl(103075)	definition(x(8) 103101 pid('SABuiltinApplication,doNewChunk/slow' 1 pos('./compiler/StaticAnalysis.oz' 2090 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 784> 3)
		endDefinition(103075)
lbl(103101)	putRecord('#' [1 2 fast] x(24))
		setConstant(doNewChunk)
		setValue(x(8))
		setValue(x(7))
lbl(103111)	definition(x(7) 103187 pid('SABuiltinApplication,doNewSpace/fast' 1 pos('./compiler/StaticAnalysis.oz' 2098 6) nil 5) <Q: 785> [y(4) g(60)])
		allocateL3
		move(g(0) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
lbl(103127)	definition(x(3) 103136 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2099 46) nil 1) unit nil)
		return
		endDefinition(103127)
lbl(103136)	callBI('Space.new' [x(3)]#[x(4)])
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(4) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(unifyVal x(2) 2 cache)
		endDefinition(103111)
lbl(103187)	definition(x(8) 103213 pid('SABuiltinApplication,doNewSpace/slow' 1 pos('./compiler/StaticAnalysis.oz' 2098 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 785> 3)
		endDefinition(103187)
lbl(103213)	putRecord('#' [1 2 fast] x(25))
		setConstant(doNewSpace)
		setValue(x(8))
		setValue(x(7))
lbl(103223)	definition(x(7) 103387 pid('SABuiltinApplication,doNew/fast' 1 pos('./compiler/StaticAnalysis.oz' 2109 6) nil 5) <Q: 786> [y(4) y(22)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 688> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(g(0) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(5) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		testLiteral(y(3) unit 103359)
		deAllocateL6
		return
lbl(103359)	createVariableMove(y(2) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(5) x(4))
		putConstant(new x(3))
		deAllocateL6
		genCall(gci(g(1) true checkMessage true 5) 0)
		endDefinition(103223)
lbl(103387)	definition(x(8) 103413 pid('SABuiltinApplication,doNew/slow' 1 pos('./compiler/StaticAnalysis.oz' 2109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 786> 3)
		endDefinition(103387)
lbl(103413)	putRecord('#' [1 2 fast] x(26))
		setConstant(doNew)
		setValue(x(8))
		setValue(x(7))
lbl(103423)	definition(x(7) 103513 pid('SABuiltinApplication,doEq/fast' 1 pos('./compiler/StaticAnalysis.oz' 2130 6) nil 4) <Q: 787> nil)
		allocateL3
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		putConstant('equation failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(103423)
lbl(103513)	definition(x(8) 103539 pid('SABuiltinApplication,doEq/slow' 1 pos('./compiler/StaticAnalysis.oz' 2130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 787> 3)
		endDefinition(103513)
lbl(103539)	putRecord('#' [1 2 fast] x(27))
		setConstant(doEq)
		setValue(x(8))
		setValue(x(7))
lbl(103549)	definition(x(7) 104327 pid('SABuiltinApplication,doDot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 9) <Q: 788> [y(13)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 103782)
lbl(103615)	move(g(0) x(1))
		inlineDot(x(1) object x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 103782 104314)
lbl(103634)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 656> 4)
		testLiteral(y(2) unit 103649)
lbl(103647)	deAllocateL5
		return
lbl(103649)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103664)
		deAllocateL5
		return
lbl(103664)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103681 103771)
		deAllocateL5
		return
lbl(103681)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from object' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(103771)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2168)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103782)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 103956)
lbl(103789)	move(g(0) x(1))
		inlineDot(x(1) 'class' x(2) cache)
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 103956 104303)
lbl(103808)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		testLiteral(y(2) unit 103823)
lbl(103821)	deAllocateL5
		return
lbl(103823)	createVariableMove(y(1) x(0))
		sendMsg(getFeatures y(2) 1 cache)
		testLiteral(y(1) unit 103838)
		deAllocateL5
		return
lbl(103838)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 103855 103945)
		deAllocateL5
		return
lbl(103855)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 695> 4)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(1))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from class' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(103945)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2191)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(103956)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104160)
lbl(103963)	move(g(0) x(1))
		inlineDot(x(1) record x(2) cache)
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104160 104292)
lbl(103982)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 104073)
		inlineAt(actualArgs x(3) cache)
		move(x(3) x(0))
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104073)	move(y(0) x(2))
		inlineDot(x(2) rep x(2) cache)
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 694> 4)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(4))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104160)	move(g(0) x(0))
		inlineDot(x(0) recordC x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 104290 104279)
lbl(104182)	moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104277 104279)
lbl(104197)	inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (.) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104277)	deAllocateL5
		return
lbl(104279)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104290)	deAllocateL5
		return
lbl(104292)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2204)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104303)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2182)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(104314)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2155)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(103549)
lbl(104327)	definition(x(8) 104353 pid('SABuiltinApplication,doDot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2143 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 788> 3)
		endDefinition(104327)
lbl(104353)	putRecord('#' [1 2 fast] x(28))
		setConstant(doDot)
		setValue(x(8))
		setValue(x(7))
lbl(104363)	definition(x(7) 104627 pid('SABuiltinApplication,doHat/fast' 1 pos('./compiler/StaticAnalysis.oz' 2244 6) nil 9) <Q: 789> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 654> 6)
		testBool(y(1) 104518 104614)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		putConstant('feature selection (^) failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(1) x(0))
		move(x(2) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		inlineUparrow(x(0) x(1) x(2))
		move(y(0) x(0))
		move(x(2) x(1))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(104518)	move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 104612)
		move(y(0) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 694> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Expected')
		setValue(y(2))
		putRecord(oz 1 x(8))
		setValue(y(3))
		putRecord(hint [l m] x(7))
		setConstant('Found')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal feature selection from record' x(3))
		move(y(0) x(4))
		deAllocateL5
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(104612)	deAllocateL5
		return
lbl(104614)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2254)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104363)
lbl(104627)	definition(x(8) 104653 pid('SABuiltinApplication,doHat/slow' 1 pos('./compiler/StaticAnalysis.oz' 2244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 789> 3)
		endDefinition(104627)
lbl(104653)	putRecord('#' [1 2 fast] x(29))
		setConstant(doHat)
		setValue(x(8))
		setValue(x(7))
lbl(104663)	definition(x(7) 104770 pid('SABuiltinApplication,doComma/fast' 1 pos('./compiler/StaticAnalysis.oz' 2280 6) nil 5) <Q: 790> [y(22)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 655> 4)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		testLiteral(y(2) unit 104742)
		deAllocateL5
		return
lbl(104742)	createVariableMove(y(3) x(0))
		sendMsg(getMethods y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(4))
		putConstant('class' x(3))
		deAllocateL5
		genCall(gci(g(0) true checkMessage true 5) 0)
		endDefinition(104663)
lbl(104770)	definition(x(8) 104796 pid('SABuiltinApplication,doComma/slow' 1 pos('./compiler/StaticAnalysis.oz' 2280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 790> 3)
		endDefinition(104770)
lbl(104796)	putRecord('#' [1 2 fast] x(30))
		setConstant(doComma)
		setValue(x(8))
		setValue(x(7))
lbl(104806)	definition(x(7) 105359 pid('SABuiltinApplication,doAssignAccess/fast' 1 pos('./compiler/StaticAnalysis.oz' 2293 6) nil 13) <Q: 791> [y(3) y(2)])
		allocateL10
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getSelf' y(0) 1 cache)
		inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		createVariableMove(y(4) x(0))
		sendMsg(getAttributes y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getProperties y(1) 1 cache)
		testLiteral(y(4) unit 104872)
		deAllocateL10
		return
lbl(104872)	move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 664> 4)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 104890)
		deAllocateL10
		return
lbl(104890)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 104907 105346)
		deAllocateL10
		return
lbl(104907)	inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 658> 4)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 658> 4)
		move(y(7) x(0))
		createVariableMove(y(8) x(1))
		call(y(2) 2)
		createVariable(y(2))
		testLiteral(y(8) '<-' 104995)
lbl(104971)	getRecord('#' 3 y(2))
		unifyVariable(x(0))
		unifyLiteral(' <- ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105038)
lbl(104995)	testLiteral(y(8) '@' 105025)
lbl(104999)	getRecord('#' 4 y(2))
		unifyLiteral('@')
		unifyVariable(x(0))
		unifyLiteral(' = ')
		unifyVariable(x(1))
		getRecord(oz 1 x(0))
		unifyValue(y(3))
		getRecord(oz 1 x(1))
		unifyValue(y(6))
		branch(105038)
lbl(105025)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2311)
		setValue(y(8))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105038)	createVariable(y(3))
		testLiteral(y(5) unit 105049)
lbl(105044)	getLiteral(false y(3))
		branch(105060)
lbl(105049)	moveMoveYXYX(y(5) x(1) y(3) x(2))
		putConstant(final x(0))
		genFastCall(<P: 22> 6)
lbl(105060)	createVariable(y(5))
		testBool(y(3) 105071 105076)
		getLiteral('(correct use requires method application)' y(5))
		branch(105087)
lbl(105071)	getLiteral('(may be a correct forward declaration)' y(5))
		branch(105087)
lbl(105076)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2313)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105087)	createVariable(y(6))
		testBool(y(3) 105098 105103)
		getLiteral('In final class' y(6))
		branch(105114)
lbl(105098)	getLiteral('In class' y(6))
		branch(105114)
lbl(105103)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2317)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105114)	testBool(y(3) 105306 105335)
lbl(105118)	move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(1) x(2))
		inlineDot(x(2) printName x(3) cache)
		inlineAt(designator x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		move(x(3) y(7))
		move(x(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 658> 4)
		move(y(8) x(0))
		createVariableMove(y(9) x(1))
		call(y(7) 2)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(8) x(0))
		createVariableMove(y(1) x(1))
		call(y(7) 2)
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 695> 4)
		move(y(7) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 691> 4)
		putRecord('#' 3 x(3))
		setConstant('applying ')
		setValue(y(9))
		setConstant(' to unavailable attribute')
		putRecord(hint [l m] x(5))
		setConstant('Expression')
		setValue(y(2))
		putRecord(pn 1 x(8))
		setValue(y(1))
		putRecord(hint [l m] x(7))
		setValue(y(6))
		setValue(x(8))
		putRecord(hint [l m] x(10))
		setConstant('Expected')
		setValue(y(4))
		putRecord(line 1 x(12))
		setValue(y(5))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(6))
		setValue(x(7))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(6))
		move(y(3) x(0))
		putConstant('static analysis warning' x(2))
		move(y(0) x(4))
		deAllocateL10
		tailSendMsg(warn x(4) [coord items kind msg] cache)
lbl(105306)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnforward x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 105333 105335)
		branch(105118)
lbl(105333)	deAllocateL10
		return
lbl(105335)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(105346)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2301)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(104806)
lbl(105359)	definition(x(8) 105385 pid('SABuiltinApplication,doAssignAccess/slow' 1 pos('./compiler/StaticAnalysis.oz' 2293 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 791> 3)
		endDefinition(105359)
lbl(105385)	putRecord('#' [1 2 fast] x(31))
		setConstant(doAssignAccess)
		setValue(x(8))
		setValue(x(7))
lbl(105395)	definition(x(7) 105547 pid('SABuiltinApplication,doAnd/fast' 1 pos('./compiler/StaticAnalysis.oz' 2341 6) nil 4) <Q: 792> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105543)
lbl(105475)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 105541)
lbl(105482)	callBI('And' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105541)	deAllocateL5
		return
lbl(105543)	deAllocateL5
		return
		endDefinition(105395)
lbl(105547)	definition(x(8) 105573 pid('SABuiltinApplication,doAnd/slow' 1 pos('./compiler/StaticAnalysis.oz' 2341 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 792> 3)
		endDefinition(105547)
lbl(105573)	putRecord('#' [1 2 fast] x(32))
		setConstant(doAnd)
		setValue(x(8))
		setValue(x(7))
lbl(105583)	definition(x(7) 105735 pid('SABuiltinApplication,doOr/fast' 1 pos('./compiler/StaticAnalysis.oz' 2365 6) nil 4) <Q: 793> nil)
		allocateL5
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(3 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105731)
lbl(105663)	move(y(1) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 105729)
lbl(105670)	callBI('Or' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean and failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(3) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105729)	deAllocateL5
		return
lbl(105731)	deAllocateL5
		return
		endDefinition(105583)
lbl(105735)	definition(x(8) 105761 pid('SABuiltinApplication,doOr/slow' 1 pos('./compiler/StaticAnalysis.oz' 2365 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 793> 3)
		endDefinition(105735)
lbl(105761)	putRecord('#' [1 2 fast] x(33))
		setConstant(doOr)
		setValue(x(8))
		setValue(x(7))
lbl(105771)	definition(x(7) 105891 pid('SABuiltinApplication,doNot/fast' 1 pos('./compiler/StaticAnalysis.oz' 2389 6) nil 4) <Q: 794> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 105887)
		callBI('Not' [x(0)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 652> 4)
		putConstant('boolean not failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(105887)	deAllocateL4
		return
		endDefinition(105771)
lbl(105891)	definition(x(8) 105917 pid('SABuiltinApplication,doNot/slow' 1 pos('./compiler/StaticAnalysis.oz' 2389 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 794> 3)
		endDefinition(105891)
lbl(105917)	putRecord('#' [1 2 fast] x(34))
		setConstant(doNot)
		setValue(x(8))
		setValue(x(7))
lbl(105927)	definition(x(7) 106047 pid('SABuiltinApplication,doLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2409 6) nil 4) <Q: 795> nil)
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		move(y(3) x(0))
		putConstant(<M: ImAConstruction> x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 106043)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(3) 1 cache)
		putConstant('label assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106043)	deAllocateL4
		return
		endDefinition(105927)
lbl(106047)	definition(x(8) 106073 pid('SABuiltinApplication,doLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2409 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 795> 3)
		endDefinition(106047)
lbl(106073)	putRecord('#' [1 2 fast] x(35))
		setConstant(doLabel)
		setValue(x(8))
		setValue(x(7))
lbl(106083)	definition(x(7) 106226 pid('SABuiltinApplication,doWidth/fast' 1 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 5) <Q: 796> [y(4)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106222)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('Width' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('width assertion failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106222)	deAllocateL4
		return
		endDefinition(106083)
lbl(106226)	definition(x(8) 106252 pid('SABuiltinApplication,doWidth/slow' 1 pos('./compiler/StaticAnalysis.oz' 2429 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 796> 3)
		endDefinition(106226)
lbl(106252)	putRecord('#' [1 2 fast] x(36))
		setConstant(doWidth)
		setValue(x(8))
		setValue(x(7))
lbl(106262)	definition(x(7) 106405 pid('SABuiltinApplication,doProcedureArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2449 6) nil 5) <Q: 797> [y(4) g(57)])
		allocateL4
		inlineAt(actualArgs x(3) cache)
		move(x(0) y(0))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 106401)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI('ProcedureArity' [x(0)]#[x(3)])
		inlineAt(coord x(4) cache)
		callBI(newObject [x(2)]#[x(0)])
		move(x(0) y(1))
		move(x(3) x(0))
		move(x(4) x(1))
		sendMsg(init y(1) 2 cache)
		putConstant('assertion of procedure arity failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(unifyVal y(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL4
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106401)	deAllocateL4
		return
		endDefinition(106262)
lbl(106405)	definition(x(8) 106431 pid('SABuiltinApplication,doProcedureArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2449 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 797> 3)
		endDefinition(106405)
lbl(106431)	putRecord('#' [1 2 fast] x(37))
		setConstant(doProcedureArity)
		setValue(x(8))
		setValue(x(7))
lbl(106441)	definition(x(7) 106492 pid('SABuiltinApplication,doCheckType/fast' 3 pos('./compiler/StaticAnalysis.oz' 2469 6) nil 3) <Q: 798> [y(22)])
		match(x(0) ht(106477 [onScalar(det 106450) onScalar(rec 106459) onScalar(kind 106468)]))
lbl(106450)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoDetType> true 2) 0)
lbl(106459)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoRecDetType> true 2) 0)
lbl(106468)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: DoKindedType> true 2) 0)
lbl(106477)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2477)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(106441)
lbl(106492)	definition(x(8) 106533 pid('SABuiltinApplication,doCheckType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2469 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 798> 7)
		endDefinition(106492)
lbl(106533)	putRecord('#' [1 2 fast] x(38))
		setConstant(doCheckType)
		setValue(x(8))
		setValue(x(7))
lbl(106543)	definition(x(7) 106772 pid('SABuiltinApplication,DoDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2480 6) nil 4) <Q: 799> [y(3) y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(4) 106757 106759)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 106680 106730)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106741)
lbl(106680)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(106741)
lbl(106730)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2490)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(106741)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
lbl(106757)	deAllocateL5
		return
lbl(106759)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(106543)
lbl(106772)	definition(x(8) 106807 pid('SABuiltinApplication,DoDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2480 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 799> 5)
		endDefinition(106772)
lbl(106807)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: DoDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(106817)	definition(x(7) 107029 pid('SABuiltinApplication,DoRecDetType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2503 6) nil 4) <Q: 800> [y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 659> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testLiteral(y(2) true 106941)
lbl(106891)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107011)
lbl(106941)	testLiteral(y(2) false 106995)
lbl(106945)	move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(0) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107011)
lbl(106995)	match(y(2) ht(106998 [onScalar(unit 107011)]))
lbl(106998)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2524)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107011)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(106817)
lbl(107029)	definition(x(8) 107064 pid('SABuiltinApplication,DoRecDetType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2503 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 800> 5)
		endDefinition(107029)
lbl(107064)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: DoRecDetType>)
		setValue(x(8))
		setValue(x(7))
lbl(107074)	definition(x(7) 107301 pid('SABuiltinApplication,DoKindedType/fast' 2 pos('./compiler/StaticAnalysis.oz' 2529 6) nil 4) <Q: 801> [y(8) y(6)])
		allocateL5
		inlineAt(actualArgs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		inlineAt(actualArgs x(0) cache)
		putConstant(2 x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 26> 6)
		putConstant('type test failed' x(0))
		sendMsg(setErrorMsg y(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 665> 4)
		testBool(y(4) 107283 107272)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 658> 4)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		call(y(0) 2)
		testBool(y(2) 107211 107261)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'true' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107283)
lbl(107211)	move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(3) x(0))
		sendMsg(setUnifier y(1) 2 cache)
		move(g(1) x(0))
		inlineDot(x(0) tokens x(2) cache)
		inlineDot(x(2) 'false' x(1) cache)
		move(y(1) x(0))
		sendMsg(unifyVal y(3) 2 cache)
		branch(107283)
lbl(107261)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2536)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107272)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2535)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(107283)	sendMsg(resetUnifier y(1) 0 cache)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(107074)
lbl(107301)	definition(x(8) 107336 pid('SABuiltinApplication,DoKindedType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2529 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 801> 5)
		endDefinition(107301)
lbl(107336)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: DoKindedType>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 33 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		move(y(22) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABuiltinApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(22))
		setConstant(nil)
lbl(107443)	definition(x(7) 107935 pid('SAApplication,AssertArity/fast' 1 pos('./compiler/StaticAnalysis.oz' 2552 6) nil 13) <Q: 802> [y(7)])
		allocateL7
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		createVariable(y(3))
		match(y(2) ht(107644 [onScalar(0 107483) onScalar(1 107506) onScalar(2 107529) onScalar(3 107552) onScalar(4 107575) onScalar(5 107598) onScalar(6 107621)]))
lbl(107483)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/0' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107506)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant(unaryProcOrObject x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107529)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/2' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107552)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/3' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107575)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/4' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107598)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/5' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107621)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
		branch(107665)
lbl(107644)	move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		move(y(3) x(2))
		putConstant('procedure/>6' x(0))
		putConstant(nil x(1))
		call(x(3) 3)
lbl(107665)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(2) 107682 107922)
		deAllocateL7
		return
lbl(107682)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(107701)	definition(x(1) 107727 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2570 28) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(107701)
lbl(107727)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(107738)	definition(x(1) 107755 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2571 28) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(107738)
lbl(107755)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 696> 4)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<P: 24> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(3))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(4))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(5))
		setValue(y(2))
		putRecord('#' 2 x(3))
		setConstant('wrong arity in application of ')
		setValue(x(5))
		putRecord(hint [l m] x(6))
		setConstant('Procedure type')
		setValue(y(6))
		putRecord(hint [l m] x(8))
		setConstant('Application arity')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Application (names)')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (values)')
		setValue(y(4))
		putList(x(11))
		setValue(x(12))
		setConstant(nil)
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(6))
		setValue(x(7))
		move(y(5) x(0))
		putConstant('type error' x(2))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(107922)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2564)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107443)
lbl(107935)	definition(x(8) 107961 pid('SAApplication,AssertArity/slow' 1 pos('./compiler/StaticAnalysis.oz' 2552 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 802> 3)
		endDefinition(107935)
lbl(107961)	putRecord('#' [1 2 fast] x(9))
		setConstant(<M: AssertArity>)
		setValue(x(8))
		setValue(x(7))
lbl(107971)	definition(x(7) 108732 pid('SAApplication,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2586 6) nil 15) <Q: 803> [y(23) y(2) y(9) y(22) g(50) g(51) g(57) y(3)])
		allocateL8
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorBuiltin false 1) 0)
		testBool(y(1) 108136 108719)
		move(g(1) x(0))
		inlineDot(x(0) printName x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		move(g(2) x(0))
		move(y(3) x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(1))
		testLiteral(x(3) unit 108058)
lbl(108044)	move(y(0) x(0))
		move(g(4) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		branch(108110)
lbl(108058)	moveMoveXYYX(x(3) y(2) y(0) x(0))
		move(g(5) x(1))
		move(y(1) x(2))
		genCall(gci(g(3) true checkArguments false 3) 0)
		testBool(y(1) 108110 108099)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		inlinePlus1(x(1) x(2))
		move(y(0) x(1))
		callBI('AdjoinAt' [x(0) x(2) x(1)]#[x(3)])
		move(g(3) x(0))
		callBI(',' [x(0) x(3)]#nil)
		branch(108110)
lbl(108099)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2614)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108110)	testBool(y(1) 108123 108125)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL8
		genCall(gci(g(3) true assertTypes true 2) 0)
lbl(108123)	deAllocateL8
		return
lbl(108125)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2633)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108136)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorProcedure false 1) 0)
		testBool(y(1) 108426 108708)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 658> 4)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		callBI('ProcedureArity' [x(0)]#[x(1)])
		inlineAt(actualArgs x(0) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		testBI('\\=' [x(0) x(1)]#[x(2)] 108424)
		inlineAt(actualArgs x(3) cache)
lbl(108205)	definition(x(4) 108231 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2648 31) nil 3) unit nil)
		getRecord(pn 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(108205)
lbl(108231)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(actualArgs x(0) cache)
lbl(108248)	definition(x(1) 108265 pid('' 2 pos('./compiler/StaticAnalysis.oz' 2649 31) nil 2) unit nil)
		getRecord(oz 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 660> 5)
		endDefinition(108248)
lbl(108265)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putList(x(3))
		setValue(x(4))
		setValue(y(4))
		moveMoveXYXY(x(1) y(4) x(2) y(6))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(5))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 693> 4)
		putRecord(pn 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Procedure')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Expected')
		setValue(y(1))
		putRecord(hint [l m] x(10))
		setConstant('Found')
		setValue(y(3))
		putRecord(hint [l m] x(12))
		setConstant('Application (names)')
		setValue(y(7))
		putRecord(hint [l m] x(14))
		setConstant('Application (values)')
		setValue(y(5))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(6) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in application' x(3))
		move(y(4) x(4))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108424)	deAllocateL8
		return
lbl(108426)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true checkDesignatorObject false 1) 0)
		testBool(y(1) 108612 108697)
		inlineAt(designator x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getClassNode y(2) 1 cache)
		inlineAt(actualArgs x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		testNumber(y(2) 1 108534)
lbl(108488)	testLiteral(y(3) unit 108494)
		deAllocateL8
		return
lbl(108494)	inlineAt(actualArgs x(0) cache)
		putConstant(1 x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(4) x(0))
		sendMsg(getMethods y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(4))
		putConstant(object x(3))
		deAllocateL8
		genCall(gci(g(0) true checkMessage true 5) 0)
lbl(108534)	move(y(0) x(0))
		inlineDot(x(0) rep x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(pn 1 x(7))
		setValue(y(1))
		putRecord(hint [l m] x(6))
		setConstant('Object')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('Expected')
		setConstant(1)
		putRecord(hint [l m] x(11))
		setConstant('Found')
		setValue(y(2))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(1))
		setValue(x(6))
		setValue(x(8))
		move(x(5) x(0))
		putConstant('static analysis error' x(2))
		putConstant('illegal number of arguments in object application' x(3))
		deAllocateL8
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(108612)	inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108679 108686)
		inlineAt(designator x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(3) cache)
		inlineAt(coord x(4) cache)
		putRecord(oz 1 x(5))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('applying non-procedure and non-object ')
		setValue(x(5))
		move(x(4) x(0))
		putConstant('static analysis error' x(1))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(108679)	move(y(0) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: AssertArity> true 1) 0)
lbl(108686)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2692)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108697)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2664)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108708)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2637)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(108719)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2592)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(107971)
lbl(108732)	definition(x(8) 108758 pid('SAApplication,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2586 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 803> 3)
		endDefinition(108732)
lbl(108758)	putRecord('#' [1 2 fast] x(10))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(108768)	definition(x(7) 108852 pid('SAApplication,checkDesignatorBuiltin/fast' 1 pos('./compiler/StaticAnalysis.oz' 2706 6) nil 3) <Q: 804> [y(3) y(0)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108834 108839)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(108834)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(108839)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2708)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108768)
lbl(108852)	definition(x(8) 108878 pid('SAApplication,checkDesignatorBuiltin/slow' 1 pos('./compiler/StaticAnalysis.oz' 2706 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 804> 3)
		endDefinition(108852)
lbl(108878)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkDesignatorBuiltin)
		setValue(x(8))
		setValue(x(7))
lbl(108888)	definition(x(7) 108972 pid('SAApplication,checkDesignatorProcedure/fast' 1 pos('./compiler/StaticAnalysis.oz' 2710 6) nil 3) <Q: 805> [y(3) y(13)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 108954 108959)
		move(g(1) x(0))
		inlineDot(x(0) procedure x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(108954)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(108959)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2712)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(108888)
lbl(108972)	definition(x(8) 108998 pid('SAApplication,checkDesignatorProcedure/slow' 1 pos('./compiler/StaticAnalysis.oz' 2710 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 805> 3)
		endDefinition(108972)
lbl(108998)	putRecord('#' [1 2 fast] x(12))
		setConstant(checkDesignatorProcedure)
		setValue(x(8))
		setValue(x(7))
lbl(109008)	definition(x(7) 109092 pid('SAApplication,checkDesignatorObject/fast' 1 pos('./compiler/StaticAnalysis.oz' 2714 6) nil 3) <Q: 806> [y(3) y(13)])
		allocateL3
		inlineAt(designator x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109074 109079)
		move(g(1) x(0))
		inlineDot(x(0) object x(1) cache)
		inlineAt(designator x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(1) x(2) y(2) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(109074)	getLiteral(false y(0))
		deAllocateL3
		return
lbl(109079)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2716)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109008)
lbl(109092)	definition(x(8) 109118 pid('SAApplication,checkDesignatorObject/slow' 1 pos('./compiler/StaticAnalysis.oz' 2714 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 806> 3)
		endDefinition(109092)
lbl(109118)	putRecord('#' [1 2 fast] x(13))
		setConstant(checkDesignatorObject)
		setValue(x(8))
		setValue(x(7))
lbl(109128)	definition(x(7) 109180 pid('SAApplication,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2718 6) nil 2) <Q: 807> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(actualArgs x(0) cache)
lbl(109154)	definition(x(1) 109174 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2721 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(109154)
lbl(109174)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(109128)
lbl(109180)	definition(x(8) 109206 pid('SAApplication,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2718 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 807> 3)
		endDefinition(109180)
lbl(109206)	putRecord('#' [1 2 fast] x(14))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(23) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAApplication' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(109250)	definition(x(7) 109934 pid('SABoolCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2729 6) nil 9) <Q: 808> [y(3) y(13) y(7) y(6)])
		allocateL6
		inlineAt(arbiter x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(1) 109605 109921)
lbl(109278)	move(g(1) x(0))
		inlineDot(x(0) bool x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		call(y(1) 2)
		testBool(y(3) 109605 109921)
lbl(109317)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) 'true' x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 658> 4)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		call(y(2) 2)
		testBool(y(4) 109482 109594)
		move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always true')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109482)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(arbiter x(2) cache)
		move(x(1) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getCoord x(2) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 3 x(2))
		setConstant('boolean guard ')
		setValue(x(4))
		setConstant(' is always false')
		move(y(3) x(0))
		putConstant('static analysis warning' x(1))
		sendMsg(warn y(2) [coord kind msg] cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(saDescendAndCommit x(1) 1 cache)
lbl(109594)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2740)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109605)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getType x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(bool x(0))
		putConstant(nil x(1))
		createVariableMove(y(2) x(2))
		call(x(3) 3)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 684> 6)
		testBool(y(3) 109756 109910)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(consequent x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'true' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		inlineAt(arbiter x(1) cache)
		move(g(3) x(0))
		inlineDot(x(0) tokens x(4) cache)
		inlineDot(x(4) 'false' x(2) cache)
		move(y(0) x(0))
		sendMsg(saDescendWithValue x(3) 3 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL6
		tailSendMsg(setTopNeeded x(2) 2 cache)
lbl(109756)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		inlineAt(arbiter x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		move(y(0) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		inlineAt(arbiter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getType x(2) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 696> 4)
		createVariable(y(4))
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 109837)
		getLiteral(nil y(4))
		branch(109857)
lbl(109837)	getList(y(4))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(hint [l m] x(1))
		unifyLiteral('Name')
		unifyVariable(x(2))
		getRecord(pn 1 x(2))
		unifyValue(y(1))
lbl(109857)	putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Value')
		setValue(x(6))
		putRecord(hint [l m] x(8))
		setConstant('Type')
		setValue(y(5))
		putList(x(7))
		setValue(x(8))
		setValue(y(4))
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(3) x(0))
		putConstant('type error' x(2))
		putConstant('Non-boolean arbiter in boolean case statement' x(3))
		move(y(0) x(4))
		deAllocateL6
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(109910)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2773)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(109921)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2732)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(109250)
lbl(109934)	definition(x(8) 109960 pid('SABoolCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2729 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 808> 3)
		endDefinition(109934)
lbl(109960)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(109970)	definition(x(7) 109989 pid('SABoolCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2803 6) nil 2) <Q: 809> nil)
		inlineAt(arbiter x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(109970)
lbl(109989)	definition(x(8) 110015 pid('SABoolCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2803 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 809> 3)
		endDefinition(109989)
lbl(110015)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolCase' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110054)	definition(x(7) 110161 pid('SABoolClause,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2809 6) nil 3) <Q: 810> [y(10)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(4) x(0))
		createVariableMove(y(5) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL6
		genFastCall(<Q: 680> 3)
		endDefinition(110054)
lbl(110161)	definition(x(8) 110202 pid('SABoolClause,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2809 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 810> 7)
		endDefinition(110161)
lbl(110202)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(110212)	definition(x(7) 110285 pid('SABoolClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2824 6) nil 3) <Q: 811> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(110212)
lbl(110285)	definition(x(8) 110311 pid('SABoolClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2824 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 811> 3)
		endDefinition(110285)
lbl(110311)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110321)	definition(x(7) 110337 pid('SABoolClause,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 2837 6) nil 2) <Q: 812> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(110321)
lbl(110337)	definition(x(8) 110363 pid('SABoolClause,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 2837 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 812> 3)
		endDefinition(110337)
lbl(110363)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SABoolClause' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110404)	definition(x(7) 110511 pid('SAPatternCase,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2850 6) nil 3) <Q: 813> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(2))
lbl(110439)	definition(x(1) 110472 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2858 3) nil 4) unit [x(2) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(arbiter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(saDescendWith x(3) 2 cache)
		endDefinition(110439)
lbl(110472)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescendWith x(2) 2 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110404)
lbl(110511)	definition(x(8) 110537 pid('SAPatternCase,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2850 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 813> 3)
		endDefinition(110511)
lbl(110537)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(110547)	definition(x(7) 110634 pid('SAPatternCase,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2863 6) nil 3) <Q: 814> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(110594)	definition(x(1) 110614 pid('' 1 pos('./compiler/StaticAnalysis.oz' 2870 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110594)
lbl(110614)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(110547)
lbl(110634)	definition(x(8) 110660 pid('SAPatternCase,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2863 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 814> 3)
		endDefinition(110634)
lbl(110660)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternCase' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(110699)	definition(x(7) 110855 pid('SAPatternClause,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 2877 6) nil 3) <Q: 815> [y(10)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 679> 4)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg(sa x(1) 1 cache)
		createVariableMove(y(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		putConstant('pattern never matches' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(pattern x(1) cache)
		move(y(1) x(0))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(pattern x(1) cache)
		move(y(0) x(0))
		sendMsg('unify' y(1) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		sendMsg(resetErrorMsg y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(2) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(110699)
lbl(110855)	definition(x(8) 110890 pid('SAPatternClause,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 2877 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 815> 5)
		endDefinition(110855)
lbl(110890)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(110900)	definition(x(7) 110919 pid('SAPatternClause,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2903 6) nil 2) <Q: 816> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(110900)
lbl(110919)	definition(x(8) 110945 pid('SAPatternClause,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2903 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 816> 3)
		endDefinition(110919)
lbl(110945)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAPatternClause' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(19))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SARecordPattern' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111011)	definition(x(7) 111030 pid('SAEquationPattern,getValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2918 6) nil 2) <Q: 817> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(111011)
lbl(111030)	definition(x(8) 111056 pid('SAEquationPattern,getValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2918 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 817> 3)
		endDefinition(111030)
lbl(111056)	putRecord('#' [1 2 fast] x(9))
		setConstant(getValue)
		setValue(x(8))
		setValue(x(7))
lbl(111066)	definition(x(7) 111085 pid('SAEquationPattern,setValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2921 6) nil 2) <Q: 818> nil)
		inlineAt(right x(1) cache)
		tailSendMsg('setValue' x(1) 1 cache)
		endDefinition(111066)
lbl(111085)	definition(x(8) 111111 pid('SAEquationPattern,setValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2921 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 818> 3)
		endDefinition(111085)
lbl(111111)	putRecord('#' [1 2 fast] x(10))
		setConstant('setValue')
		setValue(x(8))
		setValue(x(7))
lbl(111121)	definition(x(7) 111140 pid('SAEquationPattern,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2924 6) nil 2) <Q: 819> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(111121)
lbl(111140)	definition(x(8) 111166 pid('SAEquationPattern,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2924 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 819> 3)
		endDefinition(111140)
lbl(111166)	putRecord('#' [1 2 fast] x(11))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111176)	definition(x(7) 111195 pid('SAEquationPattern,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 2) <Q: 820> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(setLastValue x(1) 1 cache)
		endDefinition(111176)
lbl(111195)	definition(x(8) 111221 pid('SAEquationPattern,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2927 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 820> 3)
		endDefinition(111195)
lbl(111221)	putRecord('#' [1 2 fast] x(12))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(111231)	definition(x(7) 111250 pid('SAEquationPattern,getLabel/fast' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 2) <Q: 821> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getLabel x(1) 1 cache)
		endDefinition(111231)
lbl(111250)	definition(x(8) 111276 pid('SAEquationPattern,getLabel/slow' 1 pos('./compiler/StaticAnalysis.oz' 2930 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 821> 3)
		endDefinition(111250)
lbl(111276)	putRecord('#' [1 2 fast] x(13))
		setConstant(getLabel)
		setValue(x(8))
		setValue(x(7))
lbl(111286)	definition(x(7) 111305 pid('SAEquationPattern,getArgs/fast' 1 pos('./compiler/StaticAnalysis.oz' 2933 6) nil 2) <Q: 822> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getArgs x(1) 1 cache)
		endDefinition(111286)
lbl(111305)	definition(x(8) 111331 pid('SAEquationPattern,getArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 2933 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 822> 3)
		endDefinition(111305)
lbl(111331)	putRecord('#' [1 2 fast] x(14))
		setConstant(getArgs)
		setValue(x(8))
		setValue(x(7))
lbl(111341)	definition(x(7) 111360 pid('SAEquationPattern,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 2936 6) nil 2) <Q: 823> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(111341)
lbl(111360)	definition(x(8) 111386 pid('SAEquationPattern,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 2936 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 823> 3)
		endDefinition(111360)
lbl(111386)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(111396)	definition(x(7) 111415 pid('SAEquationPattern,isOpen/fast' 1 pos('./compiler/StaticAnalysis.oz' 2939 6) nil 2) <Q: 824> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isOpen x(1) 1 cache)
		endDefinition(111396)
lbl(111415)	definition(x(8) 111441 pid('SAEquationPattern,isOpen/slow' 1 pos('./compiler/StaticAnalysis.oz' 2939 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 824> 3)
		endDefinition(111415)
lbl(111441)	putRecord('#' [1 2 fast] x(16))
		setConstant(isOpen)
		setValue(x(8))
		setValue(x(7))
lbl(111451)	definition(x(7) 111470 pid('SAEquationPattern,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 2) <Q: 825> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(111451)
lbl(111470)	definition(x(8) 111496 pid('SAEquationPattern,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 2943 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 825> 3)
		endDefinition(111470)
lbl(111496)	putRecord('#' [1 2 fast] x(17))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(111506)	definition(x(7) 111549 pid('SAEquationPattern,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 2947 6) nil 3) <Q: 826> nil)
		allocateL1
		inlineAt(right x(1) cache)
		move(x(0) y(0))
		sendMsg(sa x(1) 1 cache)
		inlineAt(left x(2) cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111506)
lbl(111549)	definition(x(8) 111575 pid('SAEquationPattern,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 2947 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 826> 3)
		endDefinition(111549)
lbl(111575)	putRecord('#' [1 2 fast] x(18))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(111585)	definition(x(7) 111633 pid('SAEquationPattern,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 4) <Q: 827> nil)
		allocateL3
		inlineAt(right x(2) cache)
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		sendMsg(reachable x(3) 2 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
		endDefinition(111585)
lbl(111633)	definition(x(8) 111668 pid('SAEquationPattern,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 2955 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 827> 5)
		endDefinition(111633)
lbl(111668)	putRecord('#' [1 2 fast] x(19))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(111678)	definition(x(7) 111697 pid('SAEquationPattern,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 2964 6) nil 3) <Q: 828> nil)
		inlineAt(right x(2) cache)
		tailSendMsg('unify' x(2) 2 cache)
		endDefinition(111678)
lbl(111697)	definition(x(8) 111732 pid('SAEquationPattern,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 2964 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 828> 5)
		endDefinition(111697)
lbl(111732)	putRecord('#' [1 2 fast] x(20))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(111742)	definition(x(7) 111780 pid('SAEquationPattern,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 2971 6) nil 2) <Q: 829> nil)
		allocateL1
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(right x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(111742)
lbl(111780)	definition(x(8) 111806 pid('SAEquationPattern,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 2971 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 829> 3)
		endDefinition(111780)
lbl(111806)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAEquationPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(111867)	definition(x(7) 111940 pid('SAElseNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 2978 6) nil 3) <Q: 830> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(111867)
lbl(111940)	definition(x(8) 111966 pid('SAElseNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 2978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 830> 3)
		endDefinition(111940)
lbl(111966)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(111976)	definition(x(7) 112083 pid('SAElseNode,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 2989 6) nil 3) <Q: 831> [y(10)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 702> 6)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 679> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		sendMsg(unifyVal y(1) 2 cache)
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(3) x(0))
		deAllocateL5
		genFastCall(<Q: 680> 3)
		endDefinition(111976)
lbl(112083)	definition(x(8) 112124 pid('SAElseNode,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 2989 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 831> 7)
		endDefinition(112083)
lbl(112124)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112134)	definition(x(7) 112225 pid('SAElseNode,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3003 6) nil 3) <Q: 832> [y(10)])
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		inlineAt(globalVars x(1) cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 702> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112134)
lbl(112225)	definition(x(8) 112260 pid('SAElseNode,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 832> 5)
		endDefinition(112225)
lbl(112260)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112270)	definition(x(7) 112286 pid('SAElseNode,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3016 6) nil 2) <Q: 833> [y(10)])
		inlineAt(statements x(1) cache)
		genCall(gci(g(0) true saBody true 2) 0)
		endDefinition(112270)
lbl(112286)	definition(x(8) 112312 pid('SAElseNode,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3016 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 833> 3)
		endDefinition(112286)
lbl(112312)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAElseNode' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112355)	definition(x(7) 112364 pid('SANoElse,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3021 6) nil 1) <Q: 834> nil)
		return
		endDefinition(112355)
lbl(112364)	definition(x(8) 112390 pid('SANoElse,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3021 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 834> 3)
		endDefinition(112364)
lbl(112390)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(112400)	definition(x(7) 112409 pid('SANoElse,saDescendWithValue/fast' 3 pos('./compiler/StaticAnalysis.oz' 3024 6) nil 3) <Q: 835> nil)
		return
		endDefinition(112400)
lbl(112409)	definition(x(8) 112450 pid('SANoElse,saDescendWithValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3024 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 835> 7)
		endDefinition(112409)
lbl(112450)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescendWithValue)
		setValue(x(8))
		setValue(x(7))
lbl(112460)	definition(x(7) 112469 pid('SANoElse,saDescendWith/fast' 2 pos('./compiler/StaticAnalysis.oz' 3027 6) nil 2) <Q: 836> nil)
		return
		endDefinition(112460)
lbl(112469)	definition(x(8) 112504 pid('SANoElse,saDescendWith/slow' 1 pos('./compiler/StaticAnalysis.oz' 3027 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 836> 5)
		endDefinition(112469)
lbl(112504)	putRecord('#' [1 2 fast] x(11))
		setConstant(saDescendWith)
		setValue(x(8))
		setValue(x(7))
lbl(112514)	definition(x(7) 112523 pid('SANoElse,saDescendAndCommit/fast' 1 pos('./compiler/StaticAnalysis.oz' 3030 6) nil 1) <Q: 837> nil)
		return
		endDefinition(112514)
lbl(112523)	definition(x(8) 112549 pid('SANoElse,saDescendAndCommit/slow' 1 pos('./compiler/StaticAnalysis.oz' 3030 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 837> 3)
		endDefinition(112523)
lbl(112549)	putRecord('#' [1 2 fast] x(12))
		setConstant(saDescendAndCommit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANoElse' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112592)	definition(x(7) 112665 pid('SAThreadNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3036 6) nil 3) <Q: 838> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112592)
lbl(112665)	definition(x(8) 112691 pid('SAThreadNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3036 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 838> 3)
		endDefinition(112665)
lbl(112691)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAThreadNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112728)	definition(x(7) 112846 pid('SATryNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3050 6) nil 3) <Q: 839> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(tryStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(catchStatements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(112728)
lbl(112846)	definition(x(8) 112872 pid('SATryNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3050 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 839> 3)
		endDefinition(112846)
lbl(112872)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SATryNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(112909)	definition(x(7) 112965 pid('SALockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3083 6) nil 3) <Q: 840> [y(10)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(112909)
lbl(112965)	definition(x(8) 112991 pid('SALockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3083 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 840> 3)
		endDefinition(112965)
lbl(112991)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(113001)	definition(x(7) 113020 pid('SALockNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3090 6) nil 2) <Q: 841> nil)
		inlineAt(lockVar x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(113001)
lbl(113020)	definition(x(8) 113046 pid('SALockNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3090 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 841> 3)
		endDefinition(113020)
lbl(113046)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SALockNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [isComplex] x(3))
		setConstant(false)
		createVariable(y(28))
lbl(113093)	definition(x(7) 113419 pid('SAClassNode,saSimple/fast' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 5) <Q: 842> [y(4) y(14) y(3) y(28)])
		allocateL6
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 689> 4)
		move(g(0) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getTop y(0) 1 cache)
		move(y(2) x(0))
		inlineAssign(isToplevel x(0) cache)
		inlineAt(parents x(0) cache)
		move(g(1) x(1))
		inlineDot(x(1) 'class' x(4) cache)
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(3) 113295 113351)
		inlineAt(parents x(0) cache)
lbl(113201)	definition(x(1) 113221 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3118 25) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getValue x(2) 1 cache)
		endDefinition(113201)
lbl(113221)	createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(parents x(0) cache)
		move(g(2) x(1))
		createVariable(x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 698> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		genCall(gci(g(3) true <M: InheritProperties> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritAttributes> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritFeatures> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		genCall(gci(g(3) true <M: InheritMethods> false 4) 0)
		branch(113362)
lbl(113295)	move(y(0) x(0))
		inlineDot(x(0) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(4))
		setValue(y(5))
		putRecord('#' 2 x(2))
		setConstant('inheriting from non-class ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant('type error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		branch(113362)
lbl(113351)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3115)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113362)	putConstant('class definition failed' x(0))
		sendMsg(setErrorMsg y(0) 1 cache)
		inlineAt(designator x(0) cache)
		move(y(1) x(1))
		sendMsg(setUnifier y(0) 2 cache)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg('unify' x(2) 2 cache)
		sendMsg(resetUnifier y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(resetErrorMsg x(0) 0 cache)
		endDefinition(113093)
lbl(113419)	definition(x(8) 113445 pid('SAClassNode,saSimple/slow' 1 pos('./compiler/StaticAnalysis.oz' 3099 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 842> 3)
		endDefinition(113419)
lbl(113445)	putRecord('#' [1 2 fast] x(9))
		setConstant(saSimple)
		setValue(x(8))
		setValue(x(7))
lbl(113455)	definition(x(7) 113865 pid('SAClassNode,InheritProperties/fast' 3 pos('./compiler/StaticAnalysis.oz' 3172 6) nil 6) <Q: 843> [y(14) y(12) y(13) y(3) y(2)])
		allocateL7
		inlineAt(properties x(4) cache)
		move(g(0) x(3))
		inlineDot(x(3) atom x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(4) 113794 113852)
		inlineAt(properties x(0) cache)
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) atom x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 39> 6)
lbl(113535)	definition(x(1) 113588 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3188 21) nil 2) unit [g(3)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 664> 4)
		testBool(y(2) 113570 113575)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getProperties x(1) 1 cache)
lbl(113570)	getLiteral(unit y(1))
		deAllocateL3
		return
lbl(113575)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3189)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113535)
lbl(113588)	move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(113597)	definition(x(1) 113625 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3196 6) nil 3) unit nil)
		testLiteral(x(0) unit 113611)
lbl(113607)	getLiteral(false x(1))
		return
lbl(113611)	move(x(1) x(2))
		move(x(0) x(1))
		putConstant(final x(0))
		genFastCall(<P: 22> 7)
		endDefinition(113597)
lbl(113625)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 700> 8)
		testBool(y(6) 113731 113783)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		move(g(4) x(2))
		inlineDot(x(2) printName x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(3) y(3) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 26> 6)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(4) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		call(y(3) 2)
		putRecord(pn 1 x(4))
		setValue(y(4))
		putRecord('#' 2 x(2))
		setConstant('inheritance from final class ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113731)	definition(x(1) 113749 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3207 34) nil 4) unit nil)
		putConstant(unit x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(113731)
lbl(113749)	move(y(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 39> 6)
		putList(x(0))
		setValue(y(4))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setProperties x(1) 1 cache)
lbl(113783)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3199)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(113794)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(pn 1 x(4))
		setValue(y(2))
		putRecord('#' 2 x(2))
		setConstant('non-atomic class property ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('type error' x(1))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(113852)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3183)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113455)
lbl(113865)	definition(x(8) 113906 pid('SAClassNode,InheritProperties/slow' 1 pos('./compiler/StaticAnalysis.oz' 3172 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 843> 7)
		endDefinition(113865)
lbl(113906)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: InheritProperties>)
		setValue(x(8))
		setValue(x(7))
lbl(113916)	definition(x(7) 114288 pid('SAClassNode,InheritAttributes/fast' 4 pos('./compiler/StaticAnalysis.oz' 3221 6) nil 7) <Q: 844> [y(11) y(14) y(12) y(13)])
		allocateL7
		inlineAt(attributes x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114208 114275)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114127 114197)
		testBool(y(3) 114114 114116)
lbl(114004)	definition(x(1) 114024 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3242 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getAttributes x(2) 1 cache)
		endDefinition(114004)
lbl(114024)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 114112)
lbl(114052)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114099 114101)
lbl(114074)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setAttributes x(1) 1 cache)
lbl(114099)	deAllocateL7
		return
lbl(114101)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3246)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114112)	deAllocateL7
		return
lbl(114114)	deAllocateL7
		return
lbl(114116)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3241)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114127)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Attributes found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate attributes in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114197)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114208)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Attribute found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class attribute ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114275)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3231)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(113916)
lbl(114288)	definition(x(8) 114335 pid('SAClassNode,InheritAttributes/slow' 1 pos('./compiler/StaticAnalysis.oz' 3221 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 844> 9)
		endDefinition(114288)
lbl(114335)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: InheritAttributes>)
		setValue(x(8))
		setValue(x(7))
lbl(114345)	definition(x(7) 114717 pid('SAClassNode,InheritFeatures/fast' 4 pos('./compiler/StaticAnalysis.oz' 3280 6) nil 7) <Q: 845> [y(11) y(14) y(12) y(13)])
		allocateL7
		inlineAt(features x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(g(0) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(1) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 114637 114704)
		move(y(4) x(0))
		move(g(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(4) 114556 114626)
		testBool(y(3) 114543 114545)
lbl(114433)	definition(x(1) 114453 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3301 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFeatures x(2) 1 cache)
		endDefinition(114433)
lbl(114453)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 114541)
lbl(114481)	move(g(3) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(y(5) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 114528 114530)
lbl(114503)	putList(x(0))
		setValue(y(5))
		setValue(y(1))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 704> 4)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(setFeatures x(1) 1 cache)
lbl(114528)	deAllocateL7
		return
lbl(114530)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3305)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114541)	deAllocateL7
		return
lbl(114543)	deAllocateL7
		return
lbl(114545)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3300)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114556)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Features found')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate features in class definition' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114626)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(114637)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Feature found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('illegal class feature ' x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(114704)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3290)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114345)
lbl(114717)	definition(x(8) 114764 pid('SAClassNode,InheritFeatures/slow' 1 pos('./compiler/StaticAnalysis.oz' 3280 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 845> 9)
		endDefinition(114717)
lbl(114764)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: InheritFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(114774)	definition(x(7) 115798 pid('SAClassNode,InheritMethods/fast' 4 pos('./compiler/StaticAnalysis.oz' 3338 6) nil 10) <Q: 846> [y(14) y(12) y(13) g(56)])
		allocateL(11)
		inlineAt(methods x(4) cache)
lbl(114787)	definition(x(5) 114807 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3339 23) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPattern x(2) 1 cache)
		endDefinition(114787)
lbl(114807)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
lbl(114829)	definition(x(1) 114874 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3349 3) nil 4) unit [g(0)])
		shallowGuard(114861)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(114845)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) literal x(3) cache)
		move(x(2) x(0))
		tailCall(x(3) 2)
lbl(114861)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3349)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114829)
lbl(114874)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 698> 8)
lbl(114886)	definition(x(1) 114945 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3351 3) nil 6) unit [g(0)])
		shallowGuard(114932)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(114910)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(114932)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3351)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114886)
lbl(114945)	move(y(4) x(0))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genFastCall(<Q: 698> 8)
lbl(114957)	definition(x(1) 115024 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3353 3) nil 6) unit [g(0)])
		shallowGuard(115011)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(114981)	shallowThen
		testLiteral(x(5) unit 114990)
		getLiteral(true x(1))
		return
lbl(114990)	move(g(0) x(0))
		inlineDot(x(0) feature x(3) cache)
		move(x(5) x(0))
		move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 35> 7)
lbl(115011)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3353)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114957)
lbl(115024)	move(y(4) x(0))
		createVariableMove(y(9) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 698> 8)
		testBool(y(6) 115713 115785)
		testBool(y(8) 115570 115702)
		testBool(y(10) 115427 115559)
lbl(115048)	definition(x(1) 115148 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3365 6) nil 6) unit [g(1)])
		shallowGuard(115135)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(115072)	shallowThen
		allocateL4
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(2) x(0))
		genFastCall(<Q: 658> 4)
		move(y(2) x(0))
		move(g(0) x(1))
		move(y(0) x(2))
		genFastCall(<P: 29> 6)
		testLiteral(y(3) unit 115122)
		unify(y(1) y(3))
		deAllocateL4
		return
lbl(115122)	move(y(3) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
lbl(115135)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3365)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115048)
lbl(115148)	move(y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
lbl(115157)	definition(x(1) 115191 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3371 27) nil 4) unit nil)
		shallowGuard(115178)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(115173)	shallowThen
		unify(x(1) x(2))
		return
lbl(115178)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(3371)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(115157)
lbl(115191)	move(y(5) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 701> 4)
		testBool(y(6) 115346 115416)
		testBool(y(3) 115333 115335)
lbl(115217)	definition(x(1) 115237 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3379 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getMethods x(2) 1 cache)
		endDefinition(115217)
lbl(115237)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		move(g(2) x(0))
		inlineDot(x(0) literal x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(2) 115320 115322)
lbl(115268)	move(y(1) x(1))
		putConstant(unit x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		move(y(2) x(0))
		testBI('Not' [x(0)]#[x(1)] 115318)
lbl(115287)	putConstant(m x(3))
		move(y(5) x(0))
		callBI(record [x(3) x(0)]#[x(1)])
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 706> 6)
		move(y(2) x(0))
		move(y(0) x(1))
		deAllocateL
		tailSendMsg(setMethods x(1) 1 cache)
lbl(115318)	deAllocateL
		return
lbl(115320)	deAllocateL
		return
lbl(115322)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3383)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115333)	deAllocateL
		return
lbl(115335)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115346)	move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 695> 4)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 691> 4)
		putRecord(hint [l m] x(5))
		setConstant('Method names')
		setValue(y(3))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('static analysis error' x(2))
		putConstant('duplicate method names in class definition' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115416)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115427)	getRecord('#' 2 y(9))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message label')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115559)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3361)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115570)	getRecord('#' 2 y(7))
		unifyVariable(y(0))
		unifyVariable(x(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		move(g(0) x(0))
		inlineDot(x(0) feature x(1) cache)
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariable(x(3))
		genFastCall(<Q: 698> 8)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 660> 4)
		move(y(1) x(0))
		inlineDot(x(0) rep x(0) cache)
		inlineAt(coord x(1) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(4))
		putRecord(hint [l m] x(5))
		setConstant('Message found')
		setValue(x(6))
		putRecord(oz 1 x(9))
		setValue(y(3))
		putRecord(hint [l m] x(8))
		setConstant('Illegal feature')
		setValue(x(9))
		putList(x(7))
		setValue(x(8))
		setConstant(nil)
		putList(x(1))
		setValue(x(5))
		setValue(x(7))
		move(y(2) x(0))
		putConstant('type error' x(2))
		putConstant('illegal feature in method definition' x(3))
		move(y(1) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(115713)	getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineDot(x(1) rep x(1) cache)
		inlineAt(coord x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 660> 4)
		putRecord(oz 1 x(6))
		setValue(y(2))
		putRecord(hint [l m] x(5))
		setConstant('Label found')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('type error' x(2))
		putConstant('non-literal method label ' x(3))
		move(y(0) x(4))
		deAllocateL
		tailSendMsg(error x(4) [coord items kind msg] cache)
lbl(115785)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3355)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(114774)
lbl(115798)	definition(x(8) 115845 pid('SAClassNode,InheritMethods/slow' 1 pos('./compiler/StaticAnalysis.oz' 3338 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 846> 9)
		endDefinition(115798)
lbl(115845)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: InheritMethods>)
		setValue(x(8))
		setValue(x(7))
lbl(115855)	definition(x(7) 115911 pid('SAClassNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3443 6) nil 2) <Q: 847> [y(28)])
		allocateL2
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		sendMsg(pushSelf y(0) 1 cache)
		inlineAt(methods x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(0) true <M: SaBody> false 2) 0)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(popSelf x(0) 0 cache)
		endDefinition(115855)
lbl(115911)	definition(x(8) 115937 pid('SAClassNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3443 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 847> 3)
		endDefinition(115911)
lbl(115937)	putRecord('#' [1 2 fast] x(14))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(115947)	definition(x(7) 115996 pid('SAClassNode,SaBody/fast' 2 pos('./compiler/StaticAnalysis.oz' 3452 6) nil 3) <Q: 848> [y(28)])
		match(x(0) ht(115981 [onScalar(nil 115956) onRecord('|' 2 115957)]))
lbl(115956)	return
lbl(115957)	allocateL2
		getVarVar(x(2) y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		sendMsg(saDescend x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: SaBody> true 2) 0)
lbl(115981)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(3457)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(115947)
lbl(115996)	definition(x(8) 116031 pid('SAClassNode,SaBody/slow' 1 pos('./compiler/StaticAnalysis.oz' 3452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 848> 5)
		endDefinition(115996)
lbl(116031)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: SaBody>)
		setValue(x(8))
		setValue(x(7))
lbl(116041)	definition(x(7) 116267 pid('SAClassNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3459 6) nil 2) <Q: 849> nil)
		allocateL1
		inlineAt(designator x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(parents x(0) cache)
lbl(116067)	definition(x(1) 116087 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3463 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116067)
lbl(116087)	genFastCall(<P: 34> 4)
		inlineAt(properties x(0) cache)
lbl(116095)	definition(x(1) 116115 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3467 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116095)
lbl(116115)	genFastCall(<P: 34> 4)
		inlineAt(attributes x(0) cache)
lbl(116123)	definition(x(1) 116174 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3469 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116160)
lbl(116134)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116160)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116123)
lbl(116174)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(116182)	definition(x(1) 116233 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3476 3) nil 2) unit [y(0)])
		testRecord(x(0) '#' 2 116219)
lbl(116193)	allocateL1
		getVarVar(x(1) y(0))
		move(g(0) x(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(applyEnvSubst x(1) 1 cache)
lbl(116219)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116182)
lbl(116233)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
lbl(116241)	definition(x(1) 116261 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3483 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(preApplyEnvSubst x(1) 1 cache)
		endDefinition(116241)
lbl(116261)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116041)
lbl(116267)	definition(x(8) 116293 pid('SAClassNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3459 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 849> 3)
		endDefinition(116267)
lbl(116293)	putRecord('#' [1 2 fast] x(16))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(y(28) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('SAClassNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(116341)	definition(x(7) 116500 pid('SAMethod,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3488 6) nil 4) <Q: 850> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116353)	definition(x(1) 116373 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3491 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116353)
lbl(116373)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116385)	definition(x(1) 116406 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3492 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116385)
lbl(116406)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116418)	definition(x(1) 116436 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3494 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116418)
lbl(116436)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116445)	definition(x(1) 116463 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3495 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116445)
lbl(116463)	move(y(3) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116341)
lbl(116500)	definition(x(8) 116526 pid('SAMethod,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3488 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 850> 3)
		endDefinition(116500)
lbl(116526)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(116536)	definition(x(7) 116651 pid('SAMethod,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3499 6) nil 3) <Q: 851> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		genFastCall(<Q: 680> 2)
		createVariableMove(y(1) x(0))
		sendMsg(getTop y(0) 1 cache)
		testBool(y(1) 116636 116638)
		createVariableMove(y(1) x(0))
		sendMsg(declareToplevelProcedure y(0) 1 cache)
		move(y(1) x(0))
		inlineAssign(predicateRef x(0) cache)
lbl(116636)	deAllocateL4
		return
lbl(116638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3509)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(116536)
lbl(116651)	definition(x(8) 116677 pid('SAMethod,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3499 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 851> 3)
		endDefinition(116651)
lbl(116677)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
lbl(116687)	definition(x(7) 116739 pid('SAMethod,preApplyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 2) <Q: 852> nil)
		allocateL1
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		sendMsg(applyEnvSubst x(1) 1 cache)
		inlineAt(formalArgs x(0) cache)
lbl(116713)	definition(x(1) 116733 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3516 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(116713)
lbl(116733)	deAllocateL1
		genFastCall(<P: 34> 5)
		endDefinition(116687)
lbl(116739)	definition(x(8) 116765 pid('SAMethod,preApplyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3513 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 852> 3)
		endDefinition(116739)
lbl(116765)	putRecord('#' [1 2 fast] x(11))
		setConstant(preApplyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethod' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(116806)	definition(x(7) 116993 pid('SAMethodWithDesignator,getPattern/fast' 1 pos('./compiler/StaticAnalysis.oz' 3520 6) nil 4) <Q: 853> nil)
		allocateL4
		inlineAt(formalArgs x(3) cache)
lbl(116818)	definition(x(1) 116838 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3523 24) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getFormal x(2) 1 cache)
		endDefinition(116818)
lbl(116838)	move(x(0) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
lbl(116850)	definition(x(1) 116871 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3524 16) nil 4) unit nil)
		callBI('Label' [x(0)]#[x(2)])
		putConstant(required x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(116850)
lbl(116871)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 54> 8)
lbl(116883)	definition(x(1) 116901 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3526 15) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116883)
lbl(116901)	move(y(2) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(isOpen x(0) cache)
		createVariable(y(2))
		testBool(x(0) 116926 116954)
		getLiteral(unit y(2))
		branch(116965)
lbl(116926)	definition(x(1) 116944 pid('' 2 pos('./compiler/StaticAnalysis.oz' 3527 43) nil 3) unit nil)
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(116926)
lbl(116944)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		genFastCall(<P: 29> 6)
		branch(116965)
lbl(116954)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3527)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(116965)	getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyValue(y(1))
		unifyValue(y(2))
		inlineAt(label x(1) cache)
		unify(x(1) x(0))
		deAllocateL4
		return
		endDefinition(116806)
lbl(116993)	definition(x(8) 117019 pid('SAMethodWithDesignator,getPattern/slow' 1 pos('./compiler/StaticAnalysis.oz' 3520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 853> 3)
		endDefinition(116993)
lbl(117019)	putRecord('#' [1 2 fast] x(9))
		setConstant(getPattern)
		setValue(x(8))
		setValue(x(7))
lbl(117029)	definition(x(7) 117102 pid('SAMethodWithDesignator,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3531 6) nil 3) <Q: 854> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(117029)
lbl(117102)	definition(x(8) 117128 pid('SAMethodWithDesignator,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3531 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 854> 3)
		endDefinition(117102)
lbl(117128)	putRecord('#' [1 2 fast] x(10))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethodWithDesignator' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117167)	definition(x(7) 117190 pid('SAMethFormal,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3545 6) nil 2) <Q: 855> nil)
		getRecord(required 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117167)
lbl(117190)	definition(x(8) 117216 pid('SAMethFormal,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3545 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 855> 3)
		endDefinition(117190)
lbl(117216)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
lbl(117226)	definition(x(7) 117245 pid('SAMethFormal,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3548 6) nil 2) <Q: 856> nil)
		inlineAt(feature x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117226)
lbl(117245)	definition(x(8) 117271 pid('SAMethFormal,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3548 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 856> 3)
		endDefinition(117245)
lbl(117271)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormal' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117310)	definition(x(7) 117333 pid('SAMethFormalOptional,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3553 6) nil 2) <Q: 857> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117310)
lbl(117333)	definition(x(8) 117359 pid('SAMethFormalOptional,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3553 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 857> 3)
		endDefinition(117333)
lbl(117359)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalOptional' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117396)	definition(x(7) 117419 pid('SAMethFormalWithDefault,getFormal/fast' 1 pos('./compiler/StaticAnalysis.oz' 3558 6) nil 2) <Q: 858> nil)
		getRecord(optional 1 x(0))
		unifyVariable(x(0))
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(117396)
lbl(117419)	definition(x(8) 117445 pid('SAMethFormalWithDefault,getFormal/slow' 1 pos('./compiler/StaticAnalysis.oz' 3558 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 858> 3)
		endDefinition(117419)
lbl(117445)	putRecord('#' [1 2 fast] x(9))
		setConstant(getFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAMethFormalWithDefault' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117482)	definition(x(7) 117538 pid('SAObjectLockNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) <Q: 859> [y(10)])
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopButNeeded y(0) 0 cache)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117482)
lbl(117538)	definition(x(8) 117564 pid('SAObjectLockNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3564 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 859> 3)
		endDefinition(117538)
lbl(117564)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAObjectLockNode' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117601)	definition(x(7) 117610 pid('SAGetSelf,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3575 6) nil 1) <Q: 860> nil)
		return
		endDefinition(117601)
lbl(117610)	definition(x(8) 117636 pid('SAGetSelf,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3575 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 860> 3)
		endDefinition(117610)
lbl(117636)	putRecord('#' [1 2 fast] x(9))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(117646)	definition(x(7) 117665 pid('SAGetSelf,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3578 6) nil 2) <Q: 861> nil)
		inlineAt(destination x(1) cache)
		tailSendMsg(applyEnvSubst x(1) 1 cache)
		endDefinition(117646)
lbl(117665)	definition(x(8) 117691 pid('SAGetSelf,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3578 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 861> 3)
		endDefinition(117665)
lbl(117691)	putRecord('#' [1 2 fast] x(10))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAGetSelf' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117730)	definition(x(7) 117817 pid('SAIfNode,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3584 6) nil 3) <Q: 862> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(117763)	definition(x(1) 117783 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3592 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(117763)
lbl(117783)	genFastCall(<P: 34> 4)
		inlineAt(alternative x(1) cache)
		move(y(0) x(0))
		sendMsg(saDescend x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117730)
lbl(117817)	definition(x(8) 117843 pid('SAIfNode,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3584 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 862> 3)
		endDefinition(117817)
lbl(117843)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAIfNode' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(117880)	definition(x(7) 117953 pid('SAChoicesAndDisjunctions,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3600 6) nil 3) <Q: 863> nil)
		allocateL3
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(clauses x(0) cache)
lbl(117913)	definition(x(1) 117933 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3608 3) nil 2) unit [y(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(saDescend x(1) 1 cache)
		endDefinition(117913)
lbl(117933)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(setTopNeeded x(2) 2 cache)
		endDefinition(117880)
lbl(117953)	definition(x(8) 117979 pid('SAChoicesAndDisjunctions,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3600 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 863> 3)
		endDefinition(117953)
lbl(117979)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAChoicesAndDisjunctions' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(118016)	definition(x(7) 118100 pid('SAClause,saDescend/fast' 1 pos('./compiler/StaticAnalysis.oz' 3615 6) nil 3) <Q: 864> [y(10)])
		allocateL4
		inlineAt(globalVars x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 679> 4)
		createVariableMove(y(2) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getTopNeeded y(0) 2 cache)
		sendMsg(notTopNotNeeded y(0) 0 cache)
		inlineAt(guard x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		inlineAt(statements x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(0) true saBody false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		sendMsg(setTopNeeded y(0) 2 cache)
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 680> 3)
		endDefinition(118016)
lbl(118100)	definition(x(8) 118126 pid('SAClause,saDescend/slow' 1 pos('./compiler/StaticAnalysis.oz' 3615 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 864> 3)
		endDefinition(118100)
lbl(118126)	putRecord('#' [1 2 fast] x(9))
		setConstant(saDescend)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAClause' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(118169)	definition(x(7) 118199 pid('SAValueNode,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3633 6) nil 2) <Q: 865> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(118169)
lbl(118199)	definition(x(8) 118213 pid('SAValueNode,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3633 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 865> 1)
		endDefinition(118199)
lbl(118213)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(118223)	definition(x(7) 118240 pid('SAValueNode,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3636 6) nil 2) <Q: 866> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118223)
lbl(118240)	definition(x(8) 118266 pid('SAValueNode,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3636 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 866> 3)
		endDefinition(118240)
lbl(118266)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(118276)	definition(x(7) 118292 pid('SAValueNode,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3639 6) nil 2) <Q: 867> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(118276)
lbl(118292)	definition(x(8) 118327 pid('SAValueNode,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3639 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 867> 5)
		endDefinition(118292)
lbl(118327)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(118337)	definition(x(7) 118360 pid('SAValueNode,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3642 6) nil 2) <Q: 868> nil)
		getRecord(value 1 x(1))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(118337)
lbl(118360)	definition(x(8) 118395 pid('SAValueNode,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3642 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 868> 5)
		endDefinition(118360)
lbl(118395)	putRecord('#' [1 2 fast] x(12))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(118405)	definition(x(7) 118422 pid('SAValueNode,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 3645 6) nil 2) <Q: 869> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(118405)
lbl(118422)	definition(x(8) 118457 pid('SAValueNode,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3645 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 869> 5)
		endDefinition(118422)
lbl(118457)	putRecord('#' [1 2 fast] x(13))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(118467)	definition(x(7) 118484 pid('SAValueNode,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 3648 6) nil 3) <Q: 870> nil)
		inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(118467)
lbl(118484)	definition(x(8) 118525 pid('SAValueNode,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 3648 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 870> 7)
		endDefinition(118484)
lbl(118525)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(118535)	definition(x(7) 118549 pid('SAValueNode,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 2) <Q: 871> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(118535)
lbl(118549)	definition(x(8) 118575 pid('SAValueNode,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3652 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 871> 3)
		endDefinition(118549)
lbl(118575)	putRecord('#' [1 2 fast] x(15))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(118585)	definition(x(7) 118594 pid('SAValueNode,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 1) <Q: 872> nil)
		return
		endDefinition(118585)
lbl(118594)	definition(x(8) 118620 pid('SAValueNode,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3655 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 872> 3)
		endDefinition(118594)
lbl(118620)	putRecord('#' [1 2 fast] x(16))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(118630)	definition(x(7) 118642 pid('SAValueNode,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 2) <Q: 873> nil)
		unify(x(0) x(1))
		return
		endDefinition(118630)
lbl(118642)	definition(x(8) 118677 pid('SAValueNode,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 3658 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 873> 5)
		endDefinition(118642)
lbl(118677)	putRecord('#' [1 2 fast] x(17))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(118687)	definition(x(7) 118835 pid('SAValueNode,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 6) <Q: 874> nil)
		allocateL5
		inlineAt(coord x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(2) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(2) 118820 118822)
		inlineAt(value x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 118747)
		deAllocateL5
		return
lbl(118747)	inlineAt(coord x(0) cache)
		inlineAt(value x(1) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(3))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(4))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(118820)	deAllocateL5
		return
lbl(118822)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3665)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(118687)
lbl(118835)	definition(x(8) 118870 pid('SAValueNode,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 3664 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 874> 5)
		endDefinition(118835)
lbl(118870)	putRecord('#' [1 2 fast] x(18))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(118880)	definition(x(7) 118889 pid('SAValueNode,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 3682 6) nil 1) <Q: 875> nil)
		return
		endDefinition(118880)
lbl(118889)	definition(x(8) 118915 pid('SAValueNode,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 3682 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 875> 3)
		endDefinition(118889)
lbl(118915)	putRecord('#' [1 2 fast] x(19))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
lbl(118925)	definition(x(7) 118934 pid('SAValueNode,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3685 6) nil 1) <Q: 876> nil)
		return
		endDefinition(118925)
lbl(118934)	definition(x(8) 118960 pid('SAValueNode,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3685 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 876> 3)
		endDefinition(118934)
lbl(118960)	putRecord('#' [1 2 fast] x(20))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAValueNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [lastValue type] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(119024)	definition(x(7) 119064 pid('SAVariable,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 3694 6) nil 4) <Q: 877> [y(7)])
		allocateL1
		move(g(0) x(0))
		inlineDot(x(0) encode x(3) cache)
		putConstant(value x(0))
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(119024)
lbl(119064)	definition(x(8) 119078 pid('SAVariable,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 3694 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 877> 1)
		endDefinition(119064)
lbl(119078)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(119088)	definition(x(7) 119105 pid('SAVariable,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3697 6) nil 2) <Q: 878> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119088)
lbl(119105)	definition(x(8) 119131 pid('SAVariable,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3697 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 878> 3)
		endDefinition(119105)
lbl(119131)	putRecord('#' [1 2 fast] x(10))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(119141)	definition(x(7) 119155 pid('SAVariable,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3700 6) nil 1) <Q: 879> nil)
		inlineAssign(type x(0) cache)
		return
		endDefinition(119141)
lbl(119155)	definition(x(8) 119181 pid('SAVariable,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3700 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 879> 3)
		endDefinition(119155)
lbl(119181)	putRecord('#' [1 2 fast] x(11))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(119191)	definition(x(7) 119207 pid('SAVariable,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 3703 6) nil 2) <Q: 880> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(119191)
lbl(119207)	definition(x(8) 119242 pid('SAVariable,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3703 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 880> 5)
		endDefinition(119207)
lbl(119242)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(119252)	definition(x(7) 119300 pid('SAVariable,outputDebugType/fast' 1 pos('./compiler/StaticAnalysis.oz' 3706 6) nil 3) <Q: 881> nil)
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 119281)
		inlineAt(type x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 696> 5)
lbl(119281)	inlineAt(lastValue x(2) cache)
		move(x(0) x(1))
		putConstant(3 x(0))
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(119252)
lbl(119300)	definition(x(8) 119326 pid('SAVariable,outputDebugType/slow' 1 pos('./compiler/StaticAnalysis.oz' 3706 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 881> 3)
		endDefinition(119300)
lbl(119326)	putRecord('#' [1 2 fast] x(13))
		setConstant(outputDebugType)
		setValue(x(8))
		setValue(x(7))
lbl(119336)	definition(x(7) 119470 pid('SAVariable,outputDebugMeths/fast' 1 pos('./compiler/StaticAnalysis.oz' 3711 6) nil 4) <Q: 882> nil)
		allocateL3
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119360)
lbl(119355)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119360)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119355)
lbl(119372)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119463 [onScalar('class' 119386) onScalar(object 119420)]))
lbl(119386)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getMethods x(1) 1 cache)
		testLiteral(y(1) unit 119409)
lbl(119404)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119409)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119420)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getMethods y(1) 1 cache)
		testLiteral(y(2) unit 119452)
lbl(119447)	getLiteral(unit y(0))
		deAllocateL3
		return
lbl(119452)	move(y(2) x(0))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL3
		return
lbl(119463)	getLiteral(unit y(0))
		deAllocateL3
		return
		endDefinition(119336)
lbl(119470)	definition(x(8) 119496 pid('SAVariable,outputDebugMeths/slow' 1 pos('./compiler/StaticAnalysis.oz' 3711 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 882> 3)
		endDefinition(119470)
lbl(119496)	putRecord('#' [1 2 fast] x(14))
		setConstant(outputDebugMeths)
		setValue(x(8))
		setValue(x(7))
lbl(119506)	definition(x(7) 119602 pid('SAVariable,outputDebugAttrs/fast' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 4) <Q: 883> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119530)
lbl(119525)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119530)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119525)
lbl(119542)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119595 [onScalar('class' 119556) onScalar(object 119568)]))
lbl(119556)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119568)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getAttributes x(1) 1 cache)
lbl(119595)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119506)
lbl(119602)	definition(x(8) 119628 pid('SAVariable,outputDebugAttrs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3727 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 883> 3)
		endDefinition(119602)
lbl(119628)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputDebugAttrs)
		setValue(x(8))
		setValue(x(7))
lbl(119638)	definition(x(7) 119734 pid('SAVariable,outputDebugFeats/fast' 1 pos('./compiler/StaticAnalysis.oz' 3737 6) nil 4) <Q: 884> nil)
		allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119662)
lbl(119657)	getLiteral(unit y(0))
		deAllocateL2
		return
lbl(119662)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119657)
lbl(119674)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		match(x(1) ht(119727 [onScalar('class' 119688) onScalar(object 119700)]))
lbl(119688)	inlineAt(lastValue x(1) cache)
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119700)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getClassNode x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getFeatures x(1) 1 cache)
lbl(119727)	getLiteral(unit y(0))
		deAllocateL2
		return
		endDefinition(119638)
lbl(119734)	definition(x(8) 119760 pid('SAVariable,outputDebugFeats/slow' 1 pos('./compiler/StaticAnalysis.oz' 3737 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 884> 3)
		endDefinition(119734)
lbl(119760)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputDebugFeats)
		setValue(x(8))
		setValue(x(7))
lbl(119770)	definition(x(7) 119840 pid('SAVariable,outputDebugProps/fast' 1 pos('./compiler/StaticAnalysis.oz' 3747 6) nil 4) <Q: 885> nil)
		allocateL1
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		testLiteral(x(1) unit 119794)
lbl(119789)	getLiteral(unit y(0))
		deAllocateL1
		return
lbl(119794)	inlineAt(lastValue x(1) cache)
		putConstant(kind x(2))
		testBI('HasFeature' [x(1) x(2)]#[x(3)] 119789)
lbl(119806)	inlineAt(lastValue x(1) cache)
		inlineDot(x(1) kind x(1) cache)
		testLiteral(x(1) 'class' 119833)
lbl(119821)	inlineAt(lastValue x(1) cache)
		deAllocateL1
		tailSendMsg(getProperties x(1) 1 cache)
lbl(119833)	getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(119770)
lbl(119840)	definition(x(8) 119866 pid('SAVariable,outputDebugProps/slow' 1 pos('./compiler/StaticAnalysis.oz' 3747 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 885> 3)
		endDefinition(119840)
lbl(119866)	putRecord('#' [1 2 fast] x(17))
		setConstant(outputDebugProps)
		setValue(x(8))
		setValue(x(7))
lbl(119876)	definition(x(7) 119893 pid('SAVariable,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3756 6) nil 2) <Q: 886> nil)
		inlineAt(lastValue x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(119876)
lbl(119893)	definition(x(8) 119919 pid('SAVariable,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3756 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 886> 3)
		endDefinition(119893)
lbl(119919)	putRecord('#' [1 2 fast] x(18))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(119929)	definition(x(7) 119970 pid('SAVariable,setLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 3759 6) nil 2) <Q: 887> nil)
		inlineAssign(lastValue x(0) cache)
		testLiteral(x(0) unit 119945)
		return
lbl(119945)	allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg(getType x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(119929)
lbl(119970)	definition(x(8) 119996 pid('SAVariable,setLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 3759 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 887> 3)
		endDefinition(119970)
lbl(119996)	putRecord('#' [1 2 fast] x(19))
		setConstant(setLastValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(35))
lbl(120008)	definition(x(7) 120209 pid('SAVariable,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 3764 6) nil 3) <Q: 888> [y(35)])
		inlineAt(lastValue x(1) cache)
		testLiteral(x(1) unit 120026)
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120026)	allocateL2
		inlineAt(lastValue x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(1) 120089 120196)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue x(1) 1 cache)
		move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120082)
		deAllocateL2
		return
lbl(120082)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120089)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(1) 120183 120185)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120135)
		deAllocateL2
		return
lbl(120135)	testLiteral(y(1) unit 120156)
		inlineAt(lastValue x(1) cache)
		inlineAt(lastValue x(0) cache)
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(120156)	move(y(1) x(0))
		genCall(gci(g(0) true setLastValue false 1) 0)
		inlineAt(lastValue x(0) cache)
		move(y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 120176)
		deAllocateL2
		return
lbl(120176)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(0) true deref true 1) 0)
lbl(120183)	deAllocateL2
		return
lbl(120185)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3780)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(120196)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3770)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(120008)
lbl(120209)	definition(x(8) 120235 pid('SAVariable,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 3764 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 888> 3)
		endDefinition(120209)
lbl(120235)	putRecord('#' [1 2 fast] x(20))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
lbl(120245)	definition(x(7) 120278 pid('SAVariable,valToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 3806 6) nil 6) <Q: 889> nil)
		inlineAt(printName x(4) cache)
		getSelf(x(5))
		move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(1))
		putConstant(3 x(2))
		tailSendMsg(<M: ValToSubst> x(5) 4 cache)
		endDefinition(120245)
lbl(120278)	definition(x(8) 120304 pid('SAVariable,valToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3806 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 889> 3)
		endDefinition(120278)
lbl(120304)	putRecord('#' [1 2 fast] x(21))
		setConstant(valToSubst)
		setValue(x(8))
		setValue(x(7))
lbl(120314)	definition(x(7) 121456 pid('SAVariable,ValToSubst/fast' 4 pos('./compiler/StaticAnalysis.oz' 3809 6) nil 8) <Q: 890> [y(35) g(61) y(4) g(53) g(56) y(0) g(1) g(62) g(63) g(64) g(65) g(2) g(66) g(13)])
		putConstant(0 x(4))
		testLE(x(2) x(4) x(5) 120334)
		move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120334)	testBI('IsDet' [x(3)]#[x(4)] 121448)
		testBI('IsInt' [x(3)]#[x(4)] 120377)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120377)	testBI('IsFloat' [x(3)]#[x(4)] 120416)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120416)	testBI('IsAtom' [x(3)]#[x(4)] 120455)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(unit x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120455)	testBI('IsName' [x(3)]#[x(4)] 120494)
		allocateL1
		move(g(2) x(0))
		inlineDot(x(0) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		move(x(1) y(0))
		move(x(3) x(0))
		putConstant(true x(1))
		sendMsg(init y(0) 2 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120494)	testBI('IsRecord' [x(3)]#[x(4)] 120710)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		move(y(3) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(x(1) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(1)]#[x(2)] 120564)
		move(g(2) x(2))
		inlineDot(x(2) atomNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120610)
lbl(120564)	testBI('IsName' [x(1)]#[x(2)] 120599)
		move(g(2) x(2))
		inlineDot(x(2) nameToken x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYYX(x(4) y(7) y(5) x(0))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(120610)
lbl(120599)	putRecord(kernel 2 x(2))
		setConstant(noElse)
		setConstant(3856)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(120610)	getSelf(x(2))
		putRecord('#' 2 x(7))
		setValue(y(3))
		setValue(x(2))
		putList(x(1))
		setValue(x(7))
		setValue(y(1))
		getSelf(x(3))
		move(x(3) x(6))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		move(y(0) x(3))
		createVariableMove(y(7) x(4))
		createVariableMove(y(8) x(5))
		sendMsg(recordValToArgs x(6) 6 cache)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(7) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(5) x(0) y(8) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL9
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120710)	allocateL7
		move(g(5) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		moveMoveXYYX(x(3) y(0) y(0) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		testBool(y(1) 120765 121437)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120765)	move(y(0) x(0))
		testBI('IsProcedure' [x(0)]#[x(1)] 120809)
		move(g(2) x(1))
		inlineDot(x(1) procedureToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) predicateRef x(1) cache)
		unify(x(1) y(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120809)	createVariableMove(y(1) x(1))
		genFastCall(<P: 247> 4)
		testBool(y(1) 120956 121426)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		sendMsg(init y(1) 1 cache)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
lbl(120890)	definition(x(1) 120907 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3896 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(120890)
lbl(120907)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(1) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(120956)	move(y(0) x(0))
		testBI('IsObject' [x(0)]#[x(1)] 121131)
		callBI(getClass [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 251> 4)
		move(y(2) x(1))
		putConstant(m x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 110> 6)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 252> 4)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 253> 4)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 254> 4)
		move(g(2) x(0))
		inlineDot(x(0) classToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(6) y(1) x(0))
		sendMsg(init y(6) 1 cache)
lbl(121039)	definition(x(1) 121056 pid('' 1 pos('./compiler/StaticAnalysis.oz' 3913 29) nil 1) unit nil)
		getRecord('#' 2 x(0))
		unifyLiteral(nil)
		unifyLiteral(unit)
		return
		endDefinition(121039)
lbl(121056)	move(y(3) x(0))
		genFastCall(<P: 164> 4)
		move(y(3) x(0))
		sendMsg(setMethods y(6) 1 cache)
		move(y(2) x(0))
		sendMsg(setAttributes y(6) 1 cache)
		move(y(4) x(0))
		sendMsg(setFeatures y(6) 1 cache)
		move(y(5) x(0))
		sendMsg(setProperties y(6) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) objectToken x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(y(6) x(1))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121131)	testBI('IsCell' [x(0)]#[x(1)] 121163)
		move(g(2) x(1))
		inlineDot(x(1) cellToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121163)	testBI('IsLock' [x(0)]#[x(1)] 121195)
		move(g(2) x(1))
		inlineDot(x(1) lockToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121195)	testBI('IsPort' [x(0)]#[x(1)] 121227)
		move(g(2) x(1))
		inlineDot(x(1) portToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121227)	testBI('IsArray' [x(0)]#[x(1)] 121259)
		move(g(2) x(1))
		inlineDot(x(1) arrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121259)	testBI('IsDictionary' [x(0)]#[x(1)] 121291)
		move(g(2) x(1))
		inlineDot(x(1) dictionaryToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121291)	testBI('IsSpace' [x(0)]#[x(1)] 121323)
		move(g(2) x(1))
		inlineDot(x(1) spaceToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121323)	testBI('Thread.is' [x(0)]#[x(1)] 121355)
		move(g(2) x(1))
		inlineDot(x(1) threadToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121355)	testBI('BitArray.is' [x(0)]#[x(1)] 121387)
		move(g(2) x(1))
		inlineDot(x(1) bitArrayToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121387)	testBI('IsChunk' [x(0)]#[x(1)] 121419)
		move(g(2) x(1))
		inlineDot(x(1) chunkToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		move(y(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121419)	move(g(1) x(0))
		deAllocateL7
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(121426)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3887)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121437)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(3872)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(121448)	move(g(1) x(0))
		genCall(gci(g(0) true setLastValue true 1) 0)
		endDefinition(120314)
lbl(121456)	definition(x(8) 121503 pid('SAVariable,ValToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 3809 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 890> 9)
		endDefinition(121456)
lbl(121503)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ValToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(121513)	definition(x(7) 121877 pid('SAVariable,recordValToArgs/fast' 6 pos('./compiler/StaticAnalysis.oz' 3975 6) nil 10) <Q: 891> [y(4) g(67)])
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(5) y(2))
		testList(y(0) 121850)
lbl(121532)	getVarVar(x(6) x(7))
		shallowGuard(121850)
		getRecord('#' 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(121545)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(8) y(5))
		moveMoveXYXY(x(9) y(6) x(7) y(7))
		move(y(6) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 705> 6)
		createVariable(y(9))
		move(y(5) x(0))
		testBI('IsAtom' [x(0)]#[x(1)] 121608)
		move(g(0) x(1))
		inlineDot(x(1) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121685)
lbl(121608)	testBI('IsName' [x(0)]#[x(1)] 121641)
		move(g(0) x(1))
		inlineDot(x(1) nameToken x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(true x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121685)
lbl(121641)	testBI('IsInt' [x(0)]#[x(1)] 121674)
		move(g(0) x(1))
		inlineDot(x(1) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(10))
		putConstant(unit x(1))
		sendMsg(init y(10) 2 cache)
		unify(y(10) y(9))
		branch(121685)
lbl(121674)	putRecord(kernel 2 x(1))
		setConstant(noElse)
		setConstant(3987)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(121685)	createVariable(y(10))
		testLiteral(y(8) unit 121785)
		putRecord('#' 3 x(0))
		setValue(y(4))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 194> 4)
		move(y(8) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(2)])
		moveMoveXYXY(x(1) y(8) x(2) y(11))
		move(y(8) x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(11) 3 cache)
		move(y(3) x(0))
		inlineMinus1(x(0) x(2))
		moveMoveYXYX(y(8) x(0) y(0) x(1))
		move(y(6) x(3))
		sendMsg(<M: ValToSubst> y(11) 4 cache)
		move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(11) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
		branch(121803)
lbl(121785)	move(y(10) x(1))
		putConstant(unit x(0))
		sendMsg(occ y(8) 2 cache)
		sendMsg(updateValue y(10) 0 cache)
lbl(121803)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(10))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(10))
		getSelf(x(7))
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		tailSendMsg(recordValToArgs x(7) 6 cache)
lbl(121850)	testLiteral(y(0) nil 121862)
lbl(121854)	getLiteral(nil y(1))
		getLiteral(nil y(2))
		deAllocateL
		return
lbl(121862)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(4015)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(121513)
lbl(121877)	definition(x(8) 121936 pid('SAVariable,recordValToArgs/slow' 1 pos('./compiler/StaticAnalysis.oz' 3975 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 891> 13)
		endDefinition(121877)
lbl(121936)	putRecord('#' [1 2 fast] x(23))
		setConstant(recordValToArgs)
		setValue(x(8))
		setValue(x(7))
		putConstant(3 x(7))
lbl(121949)	definition(x(8) 121963 pid('SAVariable,typeToSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4017 6) nil 2) <Q: 892> [y(35) x(7)])
		move(g(1) x(1))
		genCall(gci(g(0) true <M: TypeToSubst> true 2) 0)
		endDefinition(121949)
lbl(121963)	definition(x(7) 121989 pid('SAVariable,typeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4017 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 892> 3)
		endDefinition(121963)
lbl(121989)	putRecord('#' [1 2 fast] x(24))
		setConstant(typeToSubst)
		setValue(x(7))
		setValue(x(8))
lbl(121999)	definition(x(7) 122235 pid('SAVariable,TypeToSubst/fast' 2 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 6) <Q: 893> [y(35) y(7) y(4) g(56)])
		match(x(0) ht(122220 [onRecord(value 1 122008) onRecord(type 1 122013) onRecord(record 1 122041)]))
lbl(122008)	getVariable(x(0))
		genCall(gci(g(0) true valToSubst true 1) 0)
lbl(122013)	allocateL1
		getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) encode x(3) cache)
		putConstant(nil x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true setType true 1) 0)
lbl(122041)	allocateL6
		getVariable(x(0))
		callBI('Label' [x(0)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		testBI('IsAtom' [x(2)]#[x(3)] 122092)
		move(g(2) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(unit x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122138)
lbl(122092)	testBI('IsName' [x(2)]#[x(3)] 122127)
		move(g(2) x(3))
		inlineDot(x(3) nameToken x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYYX(x(5) y(4) y(2) x(0))
		putConstant(true x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(3))
		branch(122138)
lbl(122127)	putRecord(kernel 2 x(3))
		setConstant(noElse)
		setConstant(4032)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(122138)	move(y(1) x(0))
		callBI('Arity' [x(0)]#[x(5)])
		move(x(5) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: RecordToSubst> false 5) 0)
		move(g(2) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		sendMsg('setValue' y(0) 1 cache)
		sendMsg(makeType y(0) 0 cache)
		move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true setLastValue true 1) 0)
lbl(122220)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4038)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(121999)
lbl(122235)	definition(x(8) 122270 pid('SAVariable,TypeToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4020 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 893> 5)
		endDefinition(122235)
lbl(122270)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: TypeToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122280)	definition(x(7) 122554 pid('SAVariable,RecordToSubst/fast' 5 pos('./compiler/StaticAnalysis.oz' 4040 6) nil 8) <Q: 894> [y(4) y(35)])
		match(x(0) ht(122539 [onScalar(nil 122289) onRecord('|' 2 122296)]))
lbl(122289)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(122296)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(0) y(5))
		createVariable(y(6))
		testBI('IsAtom' [x(0)]#[x(5)] 122348)
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122425)
lbl(122348)	testBI('IsName' [x(0)]#[x(5)] 122381)
		move(g(0) x(5))
		inlineDot(x(5) nameToken x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(true x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122425)
lbl(122381)	testBI('IsInt' [x(0)]#[x(5)] 122414)
		move(g(0) x(5))
		inlineDot(x(5) intNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		move(x(7) y(7))
		putConstant(unit x(1))
		sendMsg(init y(7) 2 cache)
		unify(y(7) y(6))
		branch(122425)
lbl(122414)	putRecord(kernel 2 x(5))
		setConstant(noElse)
		setConstant(4048)
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(122425)	move(g(0) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(7))
		putConstant('' x(0))
		putConstant(generated x(1))
		putConstant(unit x(2))
		sendMsg(init y(7) 3 cache)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(3))
		inlineMinus1(x(3) x(4))
		move(x(2) x(0))
		move(x(4) x(1))
		sendMsg(<M: TypeToSubst> y(7) 2 cache)
		putConstant(unit x(0))
		createVariableMove(y(8) x(1))
		sendMsg(occ y(7) 2 cache)
		sendMsg(updateValue y(8) 0 cache)
		getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(8))
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(8))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL9
		genCall(gci(g(1) true <M: RecordToSubst> true 5) 0)
lbl(122539)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(4059)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(122280)
lbl(122554)	definition(x(8) 122607 pid('SAVariable,RecordToSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4040 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 894> 11)
		endDefinition(122554)
lbl(122607)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: RecordToSubst>)
		setValue(x(8))
		setValue(x(7))
lbl(122617)	definition(x(7) 122699 pid('SAVariable,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4061 6) nil 5) <Q: 895> [y(7)])
		inlineAt(lastValue x(2) cache)
		testLiteral(x(2) unit 122658)
lbl(122632)	getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(122658)	putConstant(<M: ImAVariableOccurrence> x(3))
		testBI('HasFeature' [x(2) x(3)]#[x(4)] 122691)
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
lbl(122691)	tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(122617)
lbl(122699)	definition(x(8) 122734 pid('SAVariable,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4061 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 895> 5)
		endDefinition(122699)
lbl(122734)	putRecord('#' [1 2 fast] x(27))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(122744)	definition(x(7) 122929 pid('SAVariable,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4071 6) nil 3) <Q: 896> [y(35)])
		allocateL4
		inlineAt(lastValue x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(0) cache)
		testLiteral(x(0) unit 122787)
lbl(122776)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122787)	inlineAt(lastValue x(0) cache)
		genCall(gci(g(0) true deref false 1) 0)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 122849 122916)
		inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		getSelf(x(0))
		deAllocateL4
		genFastCall(<Q: 702> 7)
lbl(122849)	inlineAt(lastValue x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isConstruction x(1) 1 cache)
		testBool(y(2) 122900 122905)
		inlineAt(lastValue x(0) cache)
		moveMoveXYYX(x(0) y(2) y(0) x(1))
		getSelf(x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 702> 6)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(reachable x(2) 2 cache)
lbl(122900)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(122905)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4091)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(122916)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4086)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(122744)
lbl(122929)	definition(x(8) 122964 pid('SAVariable,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4071 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 896> 5)
		endDefinition(122929)
lbl(122964)	putRecord('#' [1 2 fast] x(28))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 20 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		move(y(35) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(123036)	definition(x(7) 123130 pid('SAVariableOccurrence,outputDebugValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4108 6) nil 5) <Q: 897> [y(2)])
		allocateL4
		getRecord('#' 3 x(0))
		unifyVariable(y(0))
		unifyLiteral(' // ')
		unifyVariable(y(1))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(2))
		getSelf(x(4))
		createVariableMove(y(3) x(0))
		sendMsg(getValue x(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(y(2) 4)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(1) cache)
		move(x(1) y(0))
		getSelf(x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 658> 4)
		moveMoveYXYX(y(0) x(4) y(2) x(0))
		move(y(1) x(3))
		putConstant(10 x(1))
		putConstant(10 x(2))
		deAllocateL4
		tailCall(x(4) 4)
		endDefinition(123036)
lbl(123130)	definition(x(8) 123156 pid('SAVariableOccurrence,outputDebugValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4108 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 897> 3)
		endDefinition(123130)
lbl(123156)	putRecord('#' [1 2 fast] x(9))
		setConstant(outputDebugValue)
		setValue(x(8))
		setValue(x(7))
lbl(123166)	definition(x(7) 123206 pid('SAVariableOccurrence,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4114 6) nil 2) <Q: 898> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		move(x(0) y(0))
		getSelf(x(0))
		sendMsg(deref x(1) 1 cache)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getLastValue x(1) 1 cache)
		endDefinition(123166)
lbl(123206)	definition(x(8) 123232 pid('SAVariableOccurrence,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4114 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 898> 3)
		endDefinition(123206)
lbl(123232)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(123242)	definition(x(7) 123261 pid('SAVariableOccurrence,deref/fast' 1 pos('./compiler/StaticAnalysis.oz' 4118 6) nil 2) <Q: 899> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(deref x(1) 1 cache)
		endDefinition(123242)
lbl(123261)	definition(x(8) 123287 pid('SAVariableOccurrence,deref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 899> 3)
		endDefinition(123261)
lbl(123287)	putRecord('#' [1 2 fast] x(11))
		setConstant(deref)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(123299)	definition(x(7) 123329 pid('SAVariableOccurrence,updateValue/fast' 0 pos('./compiler/StaticAnalysis.oz' 4128 6) nil 2) <Q: 900> [y(2)])
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getLastValue x(1) 1 cache)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
		endDefinition(123299)
lbl(123329)	definition(x(8) 123343 pid('SAVariableOccurrence,updateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4128 6) nil 1) unit nil)
		getLiteral(updateValue x(0))
		genFastCall(<Q: 900> 1)
		endDefinition(123329)
lbl(123343)	putRecord('#' [1 2 fast] x(12))
		setConstant(updateValue)
		setValue(x(8))
		setValue(x(7))
lbl(123353)	definition(x(7) 123701 pid('SAVariableOccurrence,UpdateValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4131 6) nil 4) <Q: 901> [y(2) y(4)])
		testLiteral(x(0) unit 123373)
		getSelf(x(2))
		getSelf(x(0))
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123373)	allocateL6
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(isVariableOccurrence y(0) 1 cache)
		testBool(y(1) 123448 123688)
		createVariableMove(y(1) x(0))
		sendMsg(getLastValue y(0) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123420)
lbl(123408)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123420)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		inlineAt(variable x(0) cache)
		move(y(2) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 123408)
lbl(123441)	move(y(1) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: UpdateValue> true 1) 0)
lbl(123448)	createVariableMove(y(1) x(0))
		sendMsg(isConstruction y(0) 1 cache)
		testBool(y(1) 123665 123677)
		createVariableMove(y(1) x(0))
		sendMsg(getLabel y(0) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getArgs y(0) 1 cache)
lbl(123488)	definition(x(1) 123544 pid('' 2 pos('./compiler/StaticAnalysis.oz' 4161 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 123530)
lbl(123499)	allocateL2
		getVarVar(x(2) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(getLastValue x(2) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(getLastValue x(1) 1 cache)
lbl(123530)	move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getLastValue x(2) 1 cache)
		endDefinition(123488)
lbl(123544)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 123583)
lbl(123562)	moveMoveYXYX(y(1) x(0) y(2) x(2))
		testBI('==' [x(0) x(2)]#[x(3)] 123583)
lbl(123571)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123583)	move(g(1) x(0))
		inlineDot(x(0) construction x(1) cache)
		move(x(1) y(1))
		createVariableMove(y(3) x(0))
		sendMsg(isOpen y(0) 1 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(3) x(2))
		sendMsg(init y(5) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getValue y(0) 1 cache)
		move(y(1) x(0))
		sendMsg('setValue' y(5) 1 cache)
		move(y(5) x(0))
		sendMsg(setLastValue y(5) 1 cache)
		getSelf(x(2))
		move(y(5) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123665)	getSelf(x(2))
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg('setValue' x(2) 1 cache)
lbl(123677)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4151)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(123688)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(123353)
lbl(123701)	definition(x(8) 123727 pid('SAVariableOccurrence,UpdateValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 901> 3)
		endDefinition(123701)
lbl(123727)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: UpdateValue>)
		setValue(x(8))
		setValue(x(7))
lbl(123737)	definition(x(7) 123756 pid('SAVariableOccurrence,setType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4203 6) nil 2) <Q: 902> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(setType x(1) 1 cache)
		endDefinition(123737)
lbl(123756)	definition(x(8) 123782 pid('SAVariableOccurrence,setType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4203 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 902> 3)
		endDefinition(123756)
lbl(123782)	putRecord('#' [1 2 fast] x(14))
		setConstant(setType)
		setValue(x(8))
		setValue(x(7))
lbl(123792)	definition(x(7) 123811 pid('SAVariableOccurrence,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4206 6) nil 2) <Q: 903> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getType x(1) 1 cache)
		endDefinition(123792)
lbl(123811)	definition(x(8) 123837 pid('SAVariableOccurrence,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4206 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 903> 3)
		endDefinition(123811)
lbl(123837)	putRecord('#' [1 2 fast] x(15))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(123847)	definition(x(7) 123866 pid('SAVariableOccurrence,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4209 6) nil 3) <Q: 904> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(getPrintType x(2) 2 cache)
		endDefinition(123847)
lbl(123866)	definition(x(8) 123901 pid('SAVariableOccurrence,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4209 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 904> 5)
		endDefinition(123866)
lbl(123901)	putRecord('#' [1 2 fast] x(16))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(123911)	definition(x(7) 123930 pid('SAVariableOccurrence,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4212 6) nil 3) <Q: 905> nil)
		inlineAt(variable x(2) cache)
		tailSendMsg(reflectType x(2) 2 cache)
		endDefinition(123911)
lbl(123930)	definition(x(8) 123965 pid('SAVariableOccurrence,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4212 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 905> 5)
		endDefinition(123930)
lbl(123965)	putRecord('#' [1 2 fast] x(17))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(123975)	definition(x(7) 124015 pid('SAVariableOccurrence,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4216 6) nil 3) <Q: 906> nil)
		allocateL1
		inlineAt(variable x(2) cache)
		move(x(1) y(0))
		getSelf(x(0))
		sendMsg(deref x(2) 1 cache)
		inlineAt(value x(1) cache)
		move(y(0) x(0))
		deAllocateL1
		tailSendMsg(getValue x(1) 1 cache)
		endDefinition(123975)
lbl(124015)	definition(x(8) 124050 pid('SAVariableOccurrence,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4216 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 906> 5)
		endDefinition(124015)
lbl(124050)	putRecord('#' [1 2 fast] x(18))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(124060)	definition(x(7) 124148 pid('SAVariableOccurrence,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4220 6) nil 6) <Q: 907> [y(0)])
		inlineAt(value x(3) cache)
		putConstant(<M: ImAVariableOccurrence> x(4))
		testBI('HasFeature' [x(3) x(4)]#[x(5)] 124135)
		testBool(x(1) 124083 124124)
		return
lbl(124083)	allocateL3
		move(g(0) x(0))
		inlineDot(x(0) nameVariable x(1) cache)
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(2) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		moveMoveYXYX(y(1) x(2) y(0) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailCall(x(2) 2)
lbl(124124)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4224)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124135)	inlineAt(value x(3) cache)
		tailSendMsg(getFullData x(3) 3 cache)
		endDefinition(124060)
lbl(124148)	definition(x(8) 124189 pid('SAVariableOccurrence,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4220 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 907> 7)
		endDefinition(124148)
lbl(124189)	putRecord('#' [1 2 fast] x(19))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
lbl(124199)	definition(x(7) 124218 pid('SAVariableOccurrence,getPrintName/fast' 1 pos('./compiler/StaticAnalysis.oz' 4233 6) nil 2) <Q: 908> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(124199)
lbl(124218)	definition(x(8) 124244 pid('SAVariableOccurrence,getPrintName/slow' 1 pos('./compiler/StaticAnalysis.oz' 4233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 908> 3)
		endDefinition(124218)
lbl(124244)	putRecord('#' [1 2 fast] x(20))
		setConstant(getPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(124254)	definition(x(7) 124265 pid('SAVariableOccurrence,applyEnvSubst/fast' 1 pos('./compiler/StaticAnalysis.oz' 4236 6) nil 1) <Q: 909> [y(2)])
		genCall(gci(g(0) true updateValue true 0) 0)
		endDefinition(124254)
lbl(124265)	definition(x(8) 124291 pid('SAVariableOccurrence,applyEnvSubst/slow' 1 pos('./compiler/StaticAnalysis.oz' 4236 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 909> 3)
		endDefinition(124265)
lbl(124291)	putRecord('#' [1 2 fast] x(21))
		setConstant(applyEnvSubst)
		setValue(x(8))
		setValue(x(7))
lbl(124301)	definition(x(7) 124369 pid('SAVariableOccurrence,reachable/fast' 2 pos('./compiler/StaticAnalysis.oz' 4240 6) nil 4) <Q: 910> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 124339 124356)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(124339)	inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(reachable x(2) 2 cache)
lbl(124356)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4244)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124301)
lbl(124369)	definition(x(8) 124404 pid('SAVariableOccurrence,reachable/slow' 1 pos('./compiler/StaticAnalysis.oz' 4240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 910> 5)
		endDefinition(124369)
lbl(124404)	putRecord('#' [1 2 fast] x(22))
		setConstant(reachable)
		setValue(x(8))
		setValue(x(7))
lbl(124414)	definition(x(7) 124715 pid('SAVariableOccurrence,unifyVal/fast' 2 pos('./compiler/StaticAnalysis.oz' 4255 6) nil 6) <Q: 911> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		getSelf(x(0))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		move(y(3) x(0))
		testBI('Not' [x(0)]#[x(1)] 124459)
		deAllocateL5
		return
lbl(124459)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 124481 124702)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genCall(gci(g(0) true bind true 2) 0)
lbl(124481)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 124509 124691)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124509)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124665 124680)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 124639 124654)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 124564)
		deAllocateL5
		return
lbl(124564)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(getValue y(1) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(2))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 686> 7)
lbl(124639)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124654)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4278)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124665)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		tailSendMsg('unify' x(2) 2 cache)
lbl(124680)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124691)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4271)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124702)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4267)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124414)
lbl(124715)	definition(x(8) 124750 pid('SAVariableOccurrence,unifyVal/slow' 1 pos('./compiler/StaticAnalysis.oz' 4255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 911> 5)
		endDefinition(124715)
lbl(124750)	putRecord('#' [1 2 fast] x(23))
		setConstant(unifyVal)
		setValue(x(8))
		setValue(x(7))
lbl(124760)	definition(x(7) 124820 pid('SAVariableOccurrence,bind/fast' 2 pos('./compiler/StaticAnalysis.oz' 4304 6) nil 5) <Q: 912> nil)
		allocateL2
		inlineAt(coord x(3) cache)
		move(x(1) y(0))
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(1) 124805 124807)
		inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL2
		tailSendMsg(setLastValue x(1) 1 cache)
lbl(124805)	deAllocateL2
		return
lbl(124807)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4308)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124760)
lbl(124820)	definition(x(8) 124855 pid('SAVariableOccurrence,bind/slow' 1 pos('./compiler/StaticAnalysis.oz' 4304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 912> 5)
		endDefinition(124820)
lbl(124855)	putRecord('#' [1 2 fast] x(24))
		setConstant(bind)
		setValue(x(8))
		setValue(x(7))
lbl(124865)	definition(x(7) 125019 pid('SAVariableOccurrence,unify/fast' 2 pos('./compiler/StaticAnalysis.oz' 4320 6) nil 5) <Q: 913> [y(2)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true getLastValue false 1) 0)
		inlineAt(coord x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 683> 10)
		testBool(y(3) 125004 125006)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		createVariable(y(4))
		testBool(y(3) 124932 124981)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(124992)
lbl(124932)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 124965 124970)
		move(y(1) x(0))
		sendMsg(deref y(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getLastValue y(1) 1 cache)
		branch(124992)
lbl(124965)	unify(y(4) y(1))
		branch(124992)
lbl(124970)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4343)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124981)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4338)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(124992)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnifyDeref> true 3) 0)
lbl(125004)	deAllocateL5
		return
lbl(125006)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4335)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(124865)
lbl(125019)	definition(x(8) 125054 pid('SAVariableOccurrence,unify/slow' 1 pos('./compiler/StaticAnalysis.oz' 4320 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 913> 5)
		endDefinition(125019)
lbl(125054)	putRecord('#' [1 2 fast] x(25))
		setConstant('unify')
		setValue(x(8))
		setValue(x(7))
lbl(125064)	definition(x(7) 125461 pid('SAVariableOccurrence,UnifyDeref/fast' 3 pos('./compiler/StaticAnalysis.oz' 4360 6) nil 6) <Q: 914> nil)
		testBI('==' [x(1) x(2)]#[x(3)] 125075)
		return
lbl(125075)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(1) 1 cache)
		testBool(y(3) 125112 125448)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125112)	createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence y(2) 1 cache)
		testBool(y(3) 125140 125437)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(bind x(2) 2 cache)
lbl(125140)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(1) 1 cache)
		testBool(y(3) 125205 125426)
		createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125190 125179)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(bind y(2) 2 cache)
		branch(125190)
lbl(125179)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125190)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125205)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 125233 125415)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125233)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125389 125404)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 661> 4)
		testBool(y(3) 125363 125378)
		createVariableMove(y(3) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(2) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 125288)
		deAllocateL6
		return
lbl(125288)	inlineAt(coord x(0) cache)
		move(x(0) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getValue y(1) 1 cache)
		createVariableMove(y(5) x(0))
		sendMsg(getValue y(2) 1 cache)
		putRecord(oz 1 x(1))
		setValue(y(4))
		putRecord(hint [l m] x(0))
		setConstant('First value')
		setValue(x(1))
		putRecord(oz 1 x(5))
		setValue(y(5))
		putRecord(hint [l m] x(4))
		setConstant('Second value')
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(2))
		setValue(x(0))
		setValue(x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL6
		genFastCall(<Q: 686> 7)
lbl(125363)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125378)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4396)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125389)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg('unify' x(2) 2 cache)
lbl(125404)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4393)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125415)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4389)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125426)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4377)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125437)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(125448)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4369)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125064)
lbl(125461)	definition(x(8) 125502 pid('SAVariableOccurrence,UnifyDeref/slow' 1 pos('./compiler/StaticAnalysis.oz' 4360 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 914> 7)
		endDefinition(125461)
lbl(125502)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: UnifyDeref>)
		setValue(x(8))
		setValue(x(7))
lbl(125512)	definition(x(7) 125521 pid('SAVariableOccurrence,sa/fast' 1 pos('./compiler/StaticAnalysis.oz' 4421 6) nil 1) <Q: 915> nil)
		return
		endDefinition(125512)
lbl(125521)	definition(x(8) 125547 pid('SAVariableOccurrence,sa/slow' 1 pos('./compiler/StaticAnalysis.oz' 4421 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 915> 3)
		endDefinition(125521)
lbl(125547)	putRecord('#' [1 2 fast] x(27))
		setConstant(sa)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 19 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [type] x(2))
		setConstant(unit)
lbl(125626)	definition(x(7) 125656 pid('SAToken,init/fast' 0 pos('./compiler/StaticAnalysis.oz' 4431 6) nil 2) <Q: 916> nil)
		allocateL1
		inlineAt(value x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 647> 4)
		move(y(0) x(0))
		inlineAssign(type x(0) cache)
		deAllocateL1
		return
		endDefinition(125626)
lbl(125656)	definition(x(8) 125670 pid('SAToken,init/slow' 1 pos('./compiler/StaticAnalysis.oz' 4431 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 916> 1)
		endDefinition(125656)
lbl(125670)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(125680)	definition(x(7) 125694 pid('SAToken,getLastValue/fast' 1 pos('./compiler/StaticAnalysis.oz' 4434 6) nil 2) <Q: 917> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(125680)
lbl(125694)	definition(x(8) 125720 pid('SAToken,getLastValue/slow' 1 pos('./compiler/StaticAnalysis.oz' 4434 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 917> 3)
		endDefinition(125694)
lbl(125720)	putRecord('#' [1 2 fast] x(10))
		setConstant(getLastValue)
		setValue(x(8))
		setValue(x(7))
lbl(125730)	definition(x(7) 125747 pid('SAToken,getType/fast' 1 pos('./compiler/StaticAnalysis.oz' 4437 6) nil 2) <Q: 918> nil)
		inlineAt(type x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(125730)
lbl(125747)	definition(x(8) 125773 pid('SAToken,getType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4437 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 918> 3)
		endDefinition(125747)
lbl(125773)	putRecord('#' [1 2 fast] x(11))
		setConstant(getType)
		setValue(x(8))
		setValue(x(7))
lbl(125783)	definition(x(7) 125799 pid('SAToken,getPrintType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 2) <Q: 919> nil)
		inlineAt(type x(0) cache)
		genFastCall(<Q: 696> 5)
		endDefinition(125783)
lbl(125799)	definition(x(8) 125834 pid('SAToken,getPrintType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4440 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 919> 5)
		endDefinition(125799)
lbl(125834)	putRecord('#' [1 2 fast] x(12))
		setConstant(getPrintType)
		setValue(x(8))
		setValue(x(7))
lbl(125844)	definition(x(7) 125878 pid('SAToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4443 6) nil 4) <Q: 920> [y(7)])
		getRecord(type 1 x(1))
		unifyVariable(x(1))
		move(g(0) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		tailCall(x(2) 2)
		endDefinition(125844)
lbl(125878)	definition(x(8) 125913 pid('SAToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4443 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 920> 5)
		endDefinition(125878)
lbl(125913)	putRecord('#' [1 2 fast] x(13))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
lbl(125923)	definition(x(7) 125961 pid('SAToken,getData/fast' 2 pos('./compiler/StaticAnalysis.oz' 4446 6) nil 2) <Q: 921> nil)
		testBool(x(0) 125939 125948)
		getSelf(x(0))
		unify(x(0) x(1))
		return
lbl(125939)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
lbl(125948)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(125923)
lbl(125961)	definition(x(8) 125996 pid('SAToken,getData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4446 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 921> 5)
		endDefinition(125961)
lbl(125996)	putRecord('#' [1 2 fast] x(14))
		setConstant(getData)
		setValue(x(8))
		setValue(x(7))
lbl(126006)	definition(x(7) 126044 pid('SAToken,getFullData/fast' 3 pos('./compiler/StaticAnalysis.oz' 4450 6) nil 3) <Q: 922> nil)
		testBool(x(1) 126022 126031)
		getSelf(x(0))
		unify(x(0) x(2))
		return
lbl(126022)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
lbl(126031)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4451)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126006)
lbl(126044)	definition(x(8) 126085 pid('SAToken,getFullData/slow' 1 pos('./compiler/StaticAnalysis.oz' 4450 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 922> 7)
		endDefinition(126044)
lbl(126085)	putRecord('#' [1 2 fast] x(15))
		setConstant(getFullData)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 7 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SAToken' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(126131)	definition(x(7) 126236 pid('SANameToken,reflectType/fast' 2 pos('./compiler/StaticAnalysis.oz' 4457 6) nil 4) <Q: 923> [y(0) y(7)])
		allocateL2
		inlineAt(isToplevel x(0) cache)
		move(x(1) y(0))
		testBool(x(0) 126196 126223)
lbl(126150)	move(g(0) x(0))
		inlineDot(x(0) isCopyableName x(2) cache)
		inlineAt(value x(3) cache)
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		testBI('Not' [x(0)]#[x(1)] 126196)
lbl(126180)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		deAllocateL2
		return
lbl(126196)	getRecord(type 1 y(0))
		unifyVariable(x(1))
		move(g(1) x(0))
		inlineDot(x(0) decode x(2) cache)
		inlineAt(type x(3) cache)
		move(x(3) x(0))
		deAllocateL2
		tailCall(x(2) 2)
lbl(126223)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(4458)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(126131)
lbl(126236)	definition(x(8) 126271 pid('SANameToken,reflectType/slow' 1 pos('./compiler/StaticAnalysis.oz' 4457 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 923> 5)
		endDefinition(126236)
lbl(126271)	putRecord('#' [1 2 fast] x(9))
		setConstant(reflectType)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('SANameToken' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(68))
		unifyValue(y(23))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(32))
		unifyValue(y(28))
		unifyValue(y(33))
		unifyValue(y(20))
		unifyValue(y(17))
		unifyValue(y(21))
		unifyValue(y(22))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyLiteral(<M: ImAConstruction>)
		unifyLiteral(<M: ImAToken>)
		unifyLiteral(<M: ImAValueNode>)
		unifyLiteral(<M: ImAVariableOccurrence>)
		unifyValue(y(27))
		unifyValue(y(12))
		unifyValue(y(13))
		unifyValue(y(14))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(0))
		unifyValue(y(24))
		unifyValue(y(29))
		unifyValue(y(6))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(16))
		unifyValue(y(25))
		unifyValue(y(4))
		unifyValue(y(26))
		unifyValue(y(15))
		unifyValue(y(34))
		unifyValue(y(35))
		unifyValue(y(2))
		deAllocateL
		return
		endDefinition(83375)
lbl(126394)	tailCall(x(3) 0)
		endDefinition(81557)
lbl(126399)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(11))
		setConstant(isBuiltin)
		setConstant(nil)
		putList(x(10))
		setConstant(nameVariable)
		setValue(x(11))
		putList(x(9))
		setConstant(newCopyablePredicateRef)
		setValue(x(10))
		putList(x(8))
		setConstant(newPredicateRef)
		setValue(x(9))
		putList(x(7))
		setConstant(isCopyableName)
		setValue(x(8))
		putList(x(6))
		setConstant(newCopyableName)
		setValue(x(7))
		putList(x(5))
		setConstant(newNamedName)
		setValue(x(6))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putRecord(info [type] x(12))
		setConstant(nil)
		putList(x(18))
		setConstant(distribute)
		setConstant(nil)
		putList(x(17))
		setConstant(distinct)
		setValue(x(18))
		putList(x(16))
		setConstant(less)
		setValue(x(17))
		putList(x(15))
		setConstant(is)
		setValue(x(16))
		putList(x(14))
		setConstant(int)
		setValue(x(15))
		putRecord(info [type] x(13))
		setValue(x(14))
		putList(x(25))
		setConstant(isIn)
		setConstant(nil)
		putList(x(24))
		setConstant(reflect)
		setValue(x(25))
		putList(x(23))
		setConstant(value)
		setValue(x(24))
		putList(x(22))
		setConstant(subset)
		setValue(x(23))
		putList(x(21))
		setConstant(var)
		setValue(x(22))
		putList(x(20))
		setConstant(include)
		setValue(x(21))
		putRecord(info [type] x(19))
		setValue(x(20))
		putList(x(27))
		setConstant(tokens)
		setConstant(nil)
		putRecord(info [type] x(26))
		setValue(x(27))
		putList(x(31))
		setConstant(printName)
		setConstant(nil)
		putList(x(30))
		setConstant(valueToVirtualString)
		setValue(x(31))
		putList(x(29))
		setConstant(eq)
		setValue(x(30))
		putRecord(info [type] x(28))
		setValue(x(29))
		putList(x(33))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(32))
		setValue(x(33))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'RunTime' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(12))
		setValue(x(13))
		setValue(x(19))
		setValue(x(26))
		setValue(x(28))
		setValue(x(32))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant(name x(18))
		putConstant(name x(19))
		putConstant(name x(20))
		putConstant(name x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putRecord('export' [application boolCase boolClause choicesAndDisjunctions classNode 'clause' construction declaration 'definition' elseNode equation equationPattern 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode patternCase patternClause recordPattern statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		createVariableMove(y(100) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(126818)	definition(x(2) 183450 pid('' 2 pos('./compiler/CodeGen.oz' 35 0) nil 4) <P: 924> [y(156) y(150) y(206) y(96) y(149) y(154) y(148) y(213) y(216) y(153) y(98) y(186) y(187) y(169) y(95) y(97) y(210) y(207) y(155) y(151) y(205) y(211) y(212) y(99) y(7) y(144) y(2) y(166) y(94) y(203) y(1) y(163) y(165) y(47) y(170)])
		putList(x(2))
		setPredicateRef(<Q: 925>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 926>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 927>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 928>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 929>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 930>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Temporaries>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Permanents>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LastAliveRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ShortLivedTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UsedX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LowestFreeX>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HighestEverX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UsedY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LowestFreeY>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestEverY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GRegRef>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HighestUsedG>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvSize>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LocalVarnames>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeHd>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CodeTl>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LocalEnvsInhibited>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AdjDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DelayedInitsDict>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DoneDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentID>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stack>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arity>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LetDie>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: LetDieSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVInstr>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DebugEntry>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DebugExit>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitSendMsg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GenericEmitCall>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SetArguments>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OrderMoves>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetCycle>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitRecordRead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitUnifies>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitDisjunction>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitTestConstant>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrepareShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PushContLabel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PopContLabel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dereference>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: DereferenceSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsFirst>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: IsLast>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitInitialization>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GetTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ReserveTemps>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AllocatePerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CopyTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CopyPerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FreeX>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FreeY>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictTemp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegSub>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictArgReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForCall>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictRegForInits>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PredictPermReg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Emit>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: EmitMultiple>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 931>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 932>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 933>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 934>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 935>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 936>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 937>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 938>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 939>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 940>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 941>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 942>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 943>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 944>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 945>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 946>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 947>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 948>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 949>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 950>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 951>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 952>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 953>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 954>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 955>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 956>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 957>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 958>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 959>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 960>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 961>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 962>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 963>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 964>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 965>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 966>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 967>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 968>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 969>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 970>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 971>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 972>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 973>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 974>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 975>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 976>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 977>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 978>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 979>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 980>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 981>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 982>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 983>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 984>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 985>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 986>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 987>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 988>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 989>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 990>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 991>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 992>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 993>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 994>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 995>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 996>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 997>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 998>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 999>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1000>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1001>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1002>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1003>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1004>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: EmptyRS>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextReg>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Saved>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GetOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ComputeOccs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOcc>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegOccVArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRegOccs>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1005>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1006>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1007>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1008>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1009>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1010>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1011>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1012>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1013>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1014>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1015>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1016>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1017>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1018>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1019>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1020>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1021>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1022>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1023>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1024>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1025>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1026>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1027>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1028>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1029>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1030>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1031>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1032>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1033>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1034>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1035>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1036>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1037>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1038>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1039>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1040>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1041>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1042>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1043>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1044>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1045>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1046>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Scalars>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Records>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AltNode>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Arbiter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: WarnedCatchAll>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Reg>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AddRecord>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CodeGenRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1047>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1048>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1049>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1050>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1051>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1052>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1053>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1054>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1055>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1056>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1057>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1058>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1059>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1060>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1061>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1062>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1063>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1064>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Val>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1065>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1066>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1067>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1068>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1069>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1070>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1071>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1072>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1073>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1074>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1075>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1076>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1077>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1078>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1079>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1080>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1081>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1082>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1083>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1084>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1085>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1086>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1087>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1088>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1089>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1090>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1091>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1092>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1093>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1094>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1095>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1096>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1097>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1098>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1099>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1100>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1101>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1102>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1103>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1104>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1105>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1106>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1107>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1108>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1109>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1110>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1111>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1112>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1113>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1114>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1115>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1116>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1117>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1118>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1119>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1120>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MessagePatternVO>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1121>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1122>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1123>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1124>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1125>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1126>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1127>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1128>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1129>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1130>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1131>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1132>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1133>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1134>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1135>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1136>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1137>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1138>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1139>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1140>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1141>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1142>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1143>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1144>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1145>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1146>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1147>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1148>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1149>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1150>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1151>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1152>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1153>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1154>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1155>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1156>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1157>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1158>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1159>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1160>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1161>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1162>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1163>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1164>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1165>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1166>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1167>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1168>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1169>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1170>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1171>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1172>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1173>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1174>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1175>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1176>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1177>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ClauseBodyShared>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1178>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1179>)
		setValue(x(3))
lbl(129074)	definitionCopy(x(2) 183445 pid('/body' 0 pos('./compiler/CodeGen.oz' 35 0) [once] 84) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) g(28) g(29) g(30) g(31) g(32) g(33) g(34) x(1)])
		allocateL(51)
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(1) cache)
		inlineDot(x(0) 'System' x(2) cache)
		inlineDot(x(0) 'Builtins' x(7) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(129115)	definition(x(8) 129140 pid('NextFreeIndex' 3 pos('./compiler/CodeEmitter.oz' 25 3) nil 4) <Q: 925> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129134)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 925> 7)
lbl(129134)	unify(x(2) x(1))
		return
		endDefinition(129115)
lbl(129140)	definition(x(8) 129192 pid('NextFreeIndexWithoutPrintName' 4 pos('./compiler/CodeEmitter.oz' 31 3) nil 5) <Q: 926> [g(1)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129179)
lbl(129161)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 926> 9)
lbl(129179)	testBI('Dictionary.member' [x(1) x(2)]#[x(4)] 129185)
		branch(129161)
lbl(129185)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129140)
lbl(129192)	definition(x(8) 129248 pid('NextFreeIndexWithEmptyPrintName' 4 pos('./compiler/CodeEmitter.oz' 38 3) nil 6) <Q: 927> [g(1) g(2)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('Dictionary.member' [x(0) x(2)]#[x(4)] 129231)
lbl(129213)	move(y(2) x(0))
		inlinePlus1(x(0) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(3) x(3))
		deAllocateL4
		genFastCall(<Q: 927> 9)
lbl(129231)	putConstant('' x(4))
		callBI('Dictionary.condGet' [x(1) x(2) x(4)]#[x(5)])
		testLiteral(x(5) '' 129213)
lbl(129241)	unify(y(3) y(2))
		deAllocateL4
		return
		endDefinition(129192)
lbl(129248)	definition(x(8) 129285 pid('LastUsedIndex' 3 pos('./compiler/CodeEmitter.oz' 46 3) nil 5) <Q: 928> [g(1)])
		testBI('Dictionary.member' [x(0) x(1)]#[x(3)] 129262)
		unify(x(2) x(1))
		return
lbl(129262)	putConstant(0 x(3))
		testLE(x(1) x(3) x(4) 129274)
		getNumber(~1 x(2))
		return
lbl(129274)	inlineMinus1(x(1) x(3))
		move(x(3) x(1))
		genFastCall(<Q: 928> 7)
		endDefinition(129248)
lbl(129285)	definition(x(8) 129405 pid('OccursInVArgs' 3 pos('./compiler/CodeEmitter.oz' 53 3) nil 4) <Q: 929> nil)
		match(x(0) ht(129390 [onScalar(nil 129294) onRecord('|' 2 129298)]))
lbl(129294)	getLiteral(false x(2))
		return
lbl(129298)	allocateL4
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testRecord(y(0) value 1 129328)
lbl(129315)	getVariable(x(3))
		shallowGuard(129328)
		unify(y(1) x(3))
lbl(129322)	shallowThen
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129328)	testRecord(y(0) record 3 129378)
lbl(129333)	getVoid(2)
		getVariable(x(0))
		move(y(1) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(0) 129355 129367)
		getLiteral(true y(2))
		deAllocateL4
		return
lbl(129355)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129367)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(57)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(129378)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 929> 7)
lbl(129390)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(61)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(129285)
lbl(129405)	definition(x(8) 129431 pid('IsStep' 2 pos('./compiler/CodeEmitter.oz' 64 3) nil 3) <Q: 930> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(129425 [onScalar('pos' 129417) onScalar(unit 129421)]))
lbl(129417)	getLiteral(false x(1))
		return
lbl(129421)	getLiteral(false x(1))
		return
lbl(129425)	getLiteral(true x(1))
		return
		endDefinition(129405)
lbl(129431)	putRecord('attr' [<M: AdjDict> <M: Arity> <M: CodeHd> <M: CodeTl> <M: CurrentID> <M: DelayedInitsDict> <M: DoneDict> <M: GRegRef> <M: HighestEverX> <M: HighestEverY> <M: HighestUsedG> <M: LastAliveRS> <M: LocalEnvSize> <M: LocalEnvsInhibited> <M: LocalVarnames> <M: LowestFreeX> <M: LowestFreeY> <M: Permanents> <M: ShortLivedTemps> <M: Stack> <M: Temporaries> <M: UsedX> <M: UsedY> contLabels continuations] x(8))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(129485)	definition(x(9) 129534 pid('Emitter,init/fast' 0 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) <Q: 931> nil)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: GRegRef> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: LocalVarnames> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DelayedInitsDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: AdjDict> x(0) cache)
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(<M: DoneDict> x(0) cache)
		return
		endDefinition(129485)
lbl(129534)	definition(x(10) 129548 pid('Emitter,init/slow' 1 pos('./compiler/CodeEmitter.oz' 92 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 931> 1)
		endDefinition(129534)
lbl(129548)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(0))
		createVariable(y(1))
lbl(129562)	definition(x(9) 130224 pid('Emitter,doEmit/fast' 6 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) <Q: 932> [y(0) g(3) g(4) y(1) g(5) g(2) g(6)])
		allocateL7
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Temporaries> x(6) cache)
		callBI('NewDictionary' nil#[x(6)])
		inlineAssign(<M: Permanents> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(6) x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
lbl(129614)	definition(x(1) 129629 pid('' 1 pos('./compiler/CodeEmitter.oz' 106 21) nil 2) unit [g(1) y(6)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(129614)
lbl(129629)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		putConstant(nil x(2))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedX> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeX> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverX> x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: UsedY> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: LowestFreeY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestEverY> x(2) cache)
		putConstant(~1 x(2))
		inlineAssign(<M: HighestUsedG> x(2) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: LocalEnvSize> x(2) cache)
		putRecord('allocateL' 1 x(0))
		setValue(x(2))
		putList(x(3))
		setValue(x(0))
		setVariable(x(4))
		inlineAssign(<M: CodeHd> x(3) cache)
		inlineAssign(<M: CodeTl> x(4) cache)
		putConstant(false x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(continuations x(2) cache)
		putConstant(nil x(2))
		inlineAssign(contLabels x(2) cache)
		getSelf(x(2))
lbl(129759)	definition(x(1) 129783 pid('' 2 pos('./compiler/CodeEmitter.oz' 122 3) nil 4) unit [x(2) g(3)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineMinus1(x(0) x(3))
		move(x(3) x(0))
		createVariable(x(2))
		genCall(gci(g(1) true <M: AllocateThisTemp> true 3) 0)
		endDefinition(129759)
lbl(129783)	move(y(0) x(0))
		genFastCall(<P: 86> 4)
		getSelf(x(2))
lbl(129791)	definition(x(1) 129809 pid('' 1 pos('./compiler/CodeEmitter.oz' 124 3) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(x(1))
		genCall(gci(g(1) true <M: GetPerm> true 2) 0)
		endDefinition(129791)
lbl(129809)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		genCall(gci(g(3) true <M: EmitAddr> false 1) 0)
		inlineAt(<M: HighestUsedG> x(0) cache)
		getSelf(x(6))
lbl(129828)	definition(x(3) 129859 pid('' 3 pos('./compiler/CodeEmitter.oz' 127 4) nil 5) unit [x(6) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(129828)
lbl(129859)	move(y(4) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(nil x(0))
		inlineAt(<M: CodeTl> x(1) cache)
		unify(x(1) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		testBool(x(0) 130084 130102)
		inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 129956)
lbl(129922)	testLiteral(y(4) nil 129956)
lbl(129926)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('localVarname' 1 x(2))
		unifyLiteral('')
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130113)
lbl(129956)	getRecord('#' 2 y(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: CodeHd> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: HighestEverY> x(0) cache)
		getSelf(x(3))
lbl(129979)	definition(x(1) 130013 pid('' 3 pos('./compiler/CodeEmitter.oz' 140 2) nil 6) unit [x(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: LocalVarnames> x(4) cache)
		callBI('Dictionary.get' [x(4) x(1)]#[x(5)])
		getList(x(2))
		unifyVariable(x(1))
		unifyValue(x(0))
		getRecord('localVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(129979)
lbl(130013)	getSelf(x(3))
lbl(130015)	definition(x(4) 130046 pid('' 2 pos('./compiler/CodeEmitter.oz' 145 3) nil 6) unit [x(3) g(5)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		putConstant('' x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getRecord('globalVarname' 1 x(1))
		unifyValue(x(5))
		return
		endDefinition(130015)
lbl(130046)	moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(0) x(5))
		putConstant(0 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(130113)
lbl(130084)	getRecord('#' 2 y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		inlineAt(<M: CodeHd> x(1) cache)
		unify(x(1) x(0))
		branch(130113)
lbl(130102)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(130)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(130113)	inlineAt(<M: HighestEverX> x(0) cache)
		inlinePlus1(x(0) x(1))
		unify(x(1) y(5))
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Temporaries> x(0) cache)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: Permanents> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: LastAliveRS> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: CodeHd> x(0) cache)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedX> x(0) cache)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(unit x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		inlineAt(<M: GRegRef> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: LocalVarnames> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL7
		return
		endDefinition(129562)
lbl(130224)	definition(x(10) 130283 pid('Emitter,doEmit/slow' 1 pos('./compiler/CodeEmitter.oz' 99 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 932> 13)
		endDefinition(130224)
lbl(130283)	putRecord('#' [1 2 fast] x(12))
		setConstant(doEmit)
		setValue(x(10))
		setValue(x(9))
lbl(130293)	definition(x(9) 130318 pid('Emitter,newLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 2) <Q: 933> nil)
		inlineAt(nextLabel x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(nextLabel x(1) cache)
		return
		endDefinition(130293)
lbl(130318)	definition(x(10) 130344 pid('Emitter,newLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 168 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 933> 3)
		endDefinition(130318)
lbl(130344)	putRecord('#' [1 2 fast] x(13))
		setConstant(newLabel)
		setValue(x(10))
		setValue(x(9))
		createVariable(y(2))
lbl(130356)	definition(x(9) 130618 pid('Emitter,EmitAddr/fast' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 5) <Q: 934> [y(1) g(1) g(7) y(2)])
		match(x(0) ht(130520 [onScalar(nil 130365) onRecord(vShared 4 130400)]))
lbl(130365)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130387 [onScalar(nil 130373) onRecord('|' 2 130376)]))
lbl(130373)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130376)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130387)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130400)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		testLiteral(x(2) nil 130446)
lbl(130411)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(130433 [onScalar(nil 130419) onRecord('|' 2 130422)]))
lbl(130419)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(130422)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130433)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(209)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(130446)	inlineAt(sharedDone x(3) cache)
		testBI('Dictionary.member' [x(3) x(0)]#[x(4)] 130467)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(130467)	allocateL2
		inlineAt(sharedDone x(3) cache)
		putConstant(true x(4))
		callBI('Dictionary.put' [x(3) x(0) x(4)]#nil)
		putRecord('lbl' 1 x(3))
		setValue(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putConstant(1 x(2))
		testLT(x(2) x(1) x(0) 130513)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
lbl(130513)	move(y(1) x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130520)	allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(3) x(2))
		callBI('.' [x(2) x(1)]#[x(3)])
		callBI('.' [x(0) x(3)]#[x(1)])
		testLiteral(x(1) nil 130571)
lbl(130561)	genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		putConstant(nil x(0))
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(130571)	inlineAt(continuations x(3) cache)
		putList(x(4))
		setValue(x(1))
		setValue(x(3))
		inlineAssign(continuations x(4) cache)
		move(x(3) y(1))
		genCall(gci(g(0) true <M: EmitVInstr> false 1) 0)
		inlineAt(continuations x(1) cache)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		move(y(1) x(1))
		inlineAssign(continuations x(1) cache)
		deAllocateL2
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(130356)
lbl(130618)	definition(x(10) 130644 pid('Emitter,EmitAddr/slow' 1 pos('./compiler/CodeEmitter.oz' 173 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 934> 3)
		endDefinition(130618)
lbl(130644)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: EmitAddr>)
		setValue(x(10))
		setValue(x(9))
lbl(130654)	definition(x(9) 130703 pid('Emitter,FlushShortLivedTemps/fast' 0 pos('./compiler/CodeEmitter.oz' 239 6) nil 2) <Q: 935> [y(1)])
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		match(x(0) ht(130688 [onScalar(nil 130668) onRecord('|' 2 130669)]))
lbl(130668)	return
lbl(130669)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL1
		genCall(gci(g(0) true <M: FlushShortLivedTemps> true 0) 0)
lbl(130688)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130654)
lbl(130703)	definition(x(10) 130717 pid('Emitter,FlushShortLivedTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 239 6) nil 1) unit nil)
		getLiteral(<M: FlushShortLivedTemps> x(0))
		genFastCall(<Q: 935> 1)
		endDefinition(130703)
lbl(130717)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: FlushShortLivedTemps>)
		setValue(x(10))
		setValue(x(9))
lbl(130727)	definition(x(9) 130759 pid('Emitter,LetDie/fast' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) <Q: 936> [g(8) g(9) y(1)])
		inlineAt(<M: LastAliveRS> x(1) cache)
		testBI('\\=' [x(1) x(0)]#[x(2)] 130756)
		inlineAssign(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.nimpl' [x(1) x(0)]#nil)
		callBI('BitArray.toList' [x(1)]#[x(0)])
		genCall(gci(g(2) true <M: LetDieSub> true 1) 0)
lbl(130756)	return
		endDefinition(130727)
lbl(130759)	definition(x(10) 130785 pid('Emitter,LetDie/slow' 1 pos('./compiler/CodeEmitter.oz' 247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 936> 3)
		endDefinition(130759)
lbl(130785)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: LetDie>)
		setValue(x(10))
		setValue(x(9))
lbl(130795)	definition(x(9) 130904 pid('Emitter,LetDieSub/fast' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 4) <Q: 937> [g(2) y(1) g(10)])
		match(x(0) ht(130889 [onScalar(nil 130804) onRecord('|' 2 130805)]))
lbl(130804)	return
lbl(130805)	allocateL2
		getVarVar(x(0) y(0))
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(1))
		testRecord(x(3) x 1 130847)
lbl(130828)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(130847)	inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 130882)
lbl(130866)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(130882)	move(y(0) x(0))
		deAllocateL2
		genCall(gci(g(1) true <M: LetDieSub> true 1) 0)
lbl(130889)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(269)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130795)
lbl(130904)	definition(x(10) 130930 pid('Emitter,LetDieSub/slow' 1 pos('./compiler/CodeEmitter.oz' 255 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 937> 3)
		endDefinition(130904)
lbl(130930)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: LetDieSub>)
		setValue(x(10))
		setValue(x(9))
lbl(130940)	definition(x(9) 136160 pid('Emitter,EmitVInstr/fast' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 9) <Q: 938> [y(1) g(1) g(5) g(7) x(7) g(11) g(2) g(12) g(10) g(13)])
		match(x(0) ht(136145 [onRecord(vStepPoint 5 130949) onRecord(vMakePermanent 3 130993) onRecord(vClear 3 131189) onRecord(vUnify 4 131319) onRecord(vFailure 2 131502) onRecord(vEquateNumber 4 131508) onRecord(vEquateLiteral 4 131590) onRecord(vEquateRecord 6 131757) onRecord(vGetVariable 3 131951) onRecord(vCallBuiltin 5 132032) onRecord(vGenCall 8 132746) onRecord(vCall 5 132953) onRecord(vFastCall 5 133028) onRecord(vApplMeth 7 133125) onRecord(vInlineDot 7 133208) onRecord(vInlineAt 4 133419) onRecord(vInlineAssign 4 133492) onRecord(vGetSelf 3 133518) onRecord(vSetSelf 3 133614) onRecord(vDefinition 7 133635) onRecord(vDefinitionCopy 8 133932) onRecord(vExHandler 7 134209) onRecord(vPopEx 3 134342) onRecord(vCreateCond 7 134358) onRecord(vCreateOr 6 134647) onRecord(vCreateEnumOr 6 134667) onRecord(vCreateChoice 6 134687) onRecord(vAsk 2 134707) onRecord(vWait 2 134726) onRecord(vWaitTop 2 134745) onRecord(vShallowGuard 8 134764) onRecord(vTestBool 8 134921) onRecord(vTestBuiltin 7 135214) onRecord(vTestNumber 8 135413) onRecord(vTestLiteral 8 135435) onRecord(vMatch 7 135457) onRecord(vThread 5 135784) onRecord(vLockThread 5 135952) onRecord(vLockEnd 4 136055)]))
lbl(130949)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(130993)	getVoid(1)
		getVariable(x(0))
		getSelf(x(2))
lbl(130999)	definition(x(1) 131186 pid('' 1 pos('./compiler/CodeEmitter.oz' 282 6) nil 4) unit [x(2) g(1) g(0) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(regNames x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 131183)
		allocateL4
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131181)
lbl(131033)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131169)
lbl(131055)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoNameVarsSwitch x(0) cache)
		testBool(x(0) 131156 131158)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		createVariableMove(y(3) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		putList(x(3))
		setValue(y(3))
		setConstant(nil)
		putList(x(2))
		setValue(y(2))
		setValue(x(3))
		putRecord('#' 2 x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord('callBI' 2 x(0))
		setConstant(nameVariable)
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131156)	deAllocateL4
		return
lbl(131158)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(288)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131169)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(131181)	deAllocateL4
		return
lbl(131183)	return
		endDefinition(130999)
lbl(131186)	genFastCall(<P: 34> 5)
lbl(131189)	getVoid(1)
		getVariable(x(0))
		inlineAt(continuations x(1) cache)
		testLiteral(x(1) nil 131203)
		return
lbl(131203)	getSelf(x(2))
lbl(131205)	definition(x(1) 131316 pid('' 1 pos('./compiler/CodeEmitter.oz' 306 2) nil 2) unit [x(2) g(0)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 131232)
lbl(131230)	deAllocateL3
		return
lbl(131232)	testRecord(y(1) y 1 131301)
lbl(131237)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: IsLast> false 2) 0)
		testBool(y(2) 131252 131280)
		branch(131291)
lbl(131252)	move(y(0) x(0))
		genCall(gci(g(1) true <M: FreeReg> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocateUnnamedPerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(131291)
lbl(131280)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(309)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131291)	putRecord(clear 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(131301)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(316)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(131205)
lbl(131316)	genFastCall(<P: 34> 5)
lbl(131319)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 131371)
lbl(131347)	testLiteral(y(3) none 131385)
lbl(131351)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(131385)
lbl(131371)	match(y(3) ht(131374 [onScalar(none 131385)]))
lbl(131374)	putRecord('unify' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
lbl(131385)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 131420)
lbl(131398)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		match(y(2) ht(131410 [onScalar(none 131441)]))
lbl(131410)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
		branch(131441)
lbl(131420)	move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(3) none 131441)
lbl(131433)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: CopyTemp> false 2) 0)
lbl(131441)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131478)
lbl(131454)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 131469)
lbl(131467)	deAllocateL4
		return
lbl(131469)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131478)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(0) none 131500)
lbl(131491)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: CopyPerm> true 2) 0)
lbl(131500)	deAllocateL4
		return
lbl(131502)	putConstant('failure' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131508)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(3) none 131578)
lbl(131529)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(0) 131544 131567)
		deAllocateL4
		return
lbl(131544)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(131567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131578)	putRecord('getNumber' 2 x(0))
		setValue(y(0))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131590)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131745)
lbl(131613)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 131646 131734)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('putConstant' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131646)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131661 131723)
		deAllocateL5
		return
lbl(131661)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(5))
		putConstant(0 x(3))
		putConstant(nil x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131689 131712)
		deAllocateL5
		return
lbl(131689)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL5
		return
lbl(131712)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(374)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131723)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(373)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131734)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131745)	putRecord('getLiteral' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL5
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131757)	allocateL6
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(x(5))
		moveMoveYXYX(y(2) x(1) y(0) x(2))
		moveMoveYXYX(y(1) x(3) y(3) x(4))
		createVariableMove(y(4) x(6))
		genCall(gci(g(0) true <M: TryToUseAsSendMsg> false 7) 0)
		testBool(y(4) 131790 131940)
		deAllocateL6
		return
lbl(131790)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(3) x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 131866)
lbl(131817)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 131832 131855)
		deAllocateL6
		return
lbl(131832)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordWrite> true 4) 0)
lbl(131855)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(391)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131866)	move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 131926 131915)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 929> 6)
		testBool(y(5) 131896 131904)
		branch(131926)
lbl(131896)	move(y(2) x(0))
		genCall(gci(g(0) true <M: FreeReg> false 1) 0)
		branch(131926)
lbl(131904)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(398)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131915)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(397)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131926)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(3) x(3))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitRecordRead> true 4) 0)
lbl(131940)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(131951)	allocateL2
		getVoid(1)
		getVariable(y(0))
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132022)
lbl(131969)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(1) 131992 132011)
		putRecord('getVoid' 1 x(0))
		setConstant(1)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(131992)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132011)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132022)	putRecord('unifyValue' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132032)	allocateL(14)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		move(y(5) x(0))
		putConstant(test x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		createVariable(y(6))
		testBool(x(3) 132562 132567)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<P: 79> 4)
		testRecord(y(4) vTestBool 8 132557)
lbl(132092)	getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		getVoid(1)
		getVarVar(x(3) x(4))
		getVariable(x(5))
		createVariable(y(4))
		shallowGuard(132557)
		unify(y(7) x(0))
lbl(132113)	shallowThen
		getSelf(x(6))
		inlineDot(x(6) debugInfoControlSwitch x(6) cache)
		testBI('Not' [x(6)]#[x(7)] 132541)
lbl(132126)	moveMoveXYXY(x(1) y(8) x(2) y(9))
		moveMoveXYXY(x(3) y(10) x(4) y(11))
		move(x(5) y(12))
		createVariableMove(y(13) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(13) 132541 132546)
lbl(132149)	moveMoveYXYX(y(7) x(0) y(8) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132541 132546)
lbl(132164)	moveMoveYXYX(y(7) x(0) y(9) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132541 132546)
lbl(132179)	moveMoveYXYX(y(7) x(0) y(11) x(1))
		createVariableMove(y(13) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(13) 132541 132546)
lbl(132194)	createVariable(y(7))
		match(y(1) ht(132509 [onScalar('==' 132199) onScalar('\\=' 132354)]))
lbl(132199)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132283 [onRecord(vEquateNumber 4 132231) onRecord(vEquateLiteral 4 132257)]))
lbl(132231)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132257)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132283)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132349 [onRecord(vEquateNumber 4 132297) onRecord(vEquateLiteral 4 132323)]))
lbl(132297)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132323)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132349)	getNumber(~1 y(7))
		branch(132512)
lbl(132354)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(0) x(3)]#[x(4)])
		match(x(4) ht(132438 [onRecord(vEquateNumber 4 132386) onRecord(vEquateLiteral 4 132412)]))
lbl(132386)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132412)	getVoid(1)
		getVariable(x(0))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(2))
		unifyValue(x(0))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132438)	inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		match(x(4) ht(132504 [onRecord(vEquateNumber 4 132452) onRecord(vEquateLiteral 4 132478)]))
lbl(132452)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestNumber 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132478)	getVoid(1)
		getVariable(x(1))
		getRecord(vTestLiteral 8 y(7))
		unifyValue(y(0))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(y(9))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132512)
lbl(132504)	getNumber(~1 y(7))
		branch(132512)
lbl(132509)	getNumber(~1 y(7))
lbl(132512)	testNumber(y(7) ~1 132536)
lbl(132516)	getRecord(vTestBuiltin 7 y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(8))
		unifyValue(y(9))
		unifyValue(y(11))
		unifyValue(y(12))
		branch(132578)
lbl(132536)	unify(y(6) y(7))
		branch(132578)
lbl(132541)	getNumber(~1 y(6))
		branch(132578)
lbl(132546)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(426)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132557)	getNumber(~1 y(6))
		branch(132578)
lbl(132562)	getNumber(~1 y(6))
		branch(132578)
lbl(132567)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(421)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(132578)	testNumber(y(6) ~1 132722)
lbl(132582)	testLiteral(y(1) 'getReturn' 132651)
lbl(132586)	getList(y(2))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(1) none 132624)
lbl(132605)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(1))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132624)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getReturn' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(132651)	move(y(5) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(2) x(0))
		move(g(7) x(3))
		createVariableMove(y(0) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('#' 2 x(1))
		setValue(y(0))
		setValue(y(4))
		putRecord('callBI' 2 x(0))
		setValue(y(1))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: EmitUnifies> false 1) 0)
		move(y(3) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(132722)	inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		putList(x(1))
		setValue(y(6))
		setValue(x(0))
		inlineAssign(continuations x(1) cache)
		deAllocateL
		return
lbl(132746)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testRecord(y(6) g 1 132814)
lbl(132772)	putRecord('gci' 5 x(0))
		setVariable(x(4))
		setValue(y(1))
		setValue(y(2))
		setConstant(false)
		setValue(y(3))
		putRecord('genCall' 2 x(3))
		setValue(x(0))
		setConstant(0)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		move(y(5) x(6))
		putConstant(any x(0))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132814)	testBool(y(1) 132882 132942)
		putRecord('ami' 2 x(1))
		setValue(y(2))
		setValue(y(3))
		putRecord('applMeth' 2 x(0))
		setValue(x(1))
		setVariable(x(2))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariable(y(3))
		testLiteral(x(1) nil 132855)
lbl(132850)	getLiteral(non_y y(3))
		branch(132858)
lbl(132855)	getLiteral(any y(3))
lbl(132858)	moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132882)	putRecord('call' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		inlineAt(continuations x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariable(y(6))
		testLiteral(x(3) nil 132914)
lbl(132909)	getLiteral(non_y y(6))
		branch(132917)
lbl(132914)	getLiteral(any y(6))
lbl(132917)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		move(y(5) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(132942)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(507)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(132953)	allocateL7
		getVoid(1)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		putRecord('call' 2 x(3))
		setVariable(x(4))
		setVariable(x(5))
		inlineAt(continuations x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariable(y(6))
		testLiteral(x(6) nil 133000)
lbl(132995)	getLiteral(non_y y(6))
		branch(133003)
lbl(133000)	getLiteral(any y(6))
lbl(133003)	moveMoveYXYX(y(6) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(5) x(5))
		move(y(2) x(6))
		putConstant(nil x(7))
		deAllocateL7
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133028)	allocateL5
		getVoid(1)
		getVarVar(x(0) y(0))
		getVariable(y(1))
		createVariable(y(2))
		testBI('IsProcedure' [x(0)]#[x(1)] 133072)
		getRecord('marshalledFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
		branch(133100)
lbl(133072)	getRecord('genFastCall' 2 y(2))
		unifyValVar(x(0) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		move(y(4) x(0))
		putConstant(2 x(8))
		callBI('*' [x(0) x(8)]#[x(1)])
		unify(x(1) y(3))
lbl(133100)	moveMoveYXYX(y(0) x(2) y(2) x(3))
		move(y(1) x(6))
		putConstant(none x(0))
		putConstant(~1 x(1))
		createVariable(x(4))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL5
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133125)	allocateL6
		getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord('ami' 2 x(6))
		setValue(x(1))
		setValue(x(2))
		putRecord('applMeth' 2 x(5))
		setValue(x(6))
		setVariable(x(7))
		inlineAt(continuations x(1) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) y(4))
		createVariable(y(5))
		testLiteral(x(1) nil 133181)
lbl(133176)	getLiteral(non_y y(5))
		branch(133184)
lbl(133181)	getLiteral(any y(5))
lbl(133184)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		moveMoveYXYX(y(4) x(4) y(2) x(6))
		createVariable(x(5))
		putConstant(nil x(7))
		deAllocateL6
		genCall(gci(g(0) true <M: GenericEmitCall> true 8) 0)
lbl(133208)	allocateL6
		getVoid(1)
		getVarVar(y(0) x(0))
		getVarVar(x(1) x(2))
		getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		testBool(y(3) 133233 133289)
		branch(133300)
lbl(133233)	moveMoveXYYX(x(3) y(4) y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133300 133278)
		getSelf(x(3))
		inlineDot(x(3) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('dot access on undetermined variable suspends ')
		setConstant(forever)
		move(y(4) x(0))
		putConstant('code generation warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(133300)
lbl(133278)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(545)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133289)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(133300)	move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 133377)
lbl(133313)	testBool(y(3) 133332 133366)
lbl(133317)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(3) 133332 133366)
		deAllocateL6
		return
lbl(133332)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(3))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133366)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(552)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133377)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineDot' 4 x(0))
		setValue(y(2))
		setValue(y(1))
		setValue(y(0))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(4))
		deAllocateL6
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133419)	allocateL3
		getVoid(1)
		getVarVar(y(0) y(1))
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133461)
lbl(133438)	move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: PredictBuiltinOutput> false 2) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(2))
		setConstant(cache)
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133461)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('inlineAt' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133492)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('inlineAssign' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setConstant(cache)
		deAllocateL2
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133518)	allocateL3
		getVoid(1)
		getVariable(y(0))
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133587)
lbl(133538)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(2) 133553 133576)
		deAllocateL3
		return
lbl(133553)	inlineAt(<M: Temporaries> x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(133576)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133587)	createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('getSelf' 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('unify' 2 x(0))
		setValue(y(0))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133614)	allocateL1
		getVoid(1)
		getVariable(x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		putRecord('setSelf' 1 x(0))
		setValue(y(0))
		deAllocateL1
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133635)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(5) 133678 133921)
lbl(133659)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 133678 133921)
lbl(133672)	testLiteral(y(2) unit 133678)
		deAllocateL9
		return
lbl(133678)	getSelf(x(3))
lbl(133680)	definition(x(1) 133732 pid('' 2 pos('./compiler/CodeEmitter.oz' 597 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 133725)
lbl(133707)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(133725)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(133680)
lbl(133732)	move(y(3) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		createVariable(y(6))
		createVariable(y(7))
		testBool(y(3) 133771 133782)
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		getLiteral(false y(7))
		branch(133793)
lbl(133771)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getLiteral(true y(7))
		branch(133793)
lbl(133782)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133793)	createVariableMove(y(3) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(1))
		unifyVariable(y(4))
		putRecord('definition' 6 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(1))
		setValue(y(2))
		setValue(y(5))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(133852)	definition(x(1) 133868 pid('' 1 pos('./compiler/CodeEmitter.oz' 618 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(133852)
lbl(133868)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		testBool(y(7) 133908 133910)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		putRecord('unify' 2 x(0))
		setValue(y(6))
		setValue(y(1))
		deAllocateL9
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(133908)	deAllocateL9
		return
lbl(133910)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(620)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133921)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(592)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(133932)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 133976 134198)
lbl(133957)	move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(6) 133976 134198)
lbl(133970)	testLiteral(y(3) unit 133976)
		deAllocateL10
		return
lbl(133976)	getSelf(x(3))
lbl(133978)	definition(x(1) 134030 pid('' 2 pos('./compiler/CodeEmitter.oz' 631 7) nil 3) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: GetReg> false 2) 0)
		testLiteral(y(2) none 134023)
lbl(134005)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(1) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(134023)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(133978)
lbl(134030)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(4))
		getRecord(x 1 y(4))
		unifyVariable(y(7))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(9) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		getRecord('#' 2 y(5))
		unifyVariable(x(1))
		unifyVariable(y(5))
		putRecord('definitionCopy' 6 x(0))
		setValue(y(4))
		setValue(y(9))
		setValue(y(2))
		setValue(y(3))
		setValue(y(6))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('endDefinition' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(2))
lbl(134114)	definition(x(1) 134130 pid('' 1 pos('./compiler/CodeEmitter.oz' 646 22) nil 2) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: Emit> true 1) 0)
		endDefinition(134114)
lbl(134130)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(0) none 134186)
lbl(134175)	moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariable(x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(134186)	putRecord('unify' 2 x(0))
		setValue(y(4))
		setValue(y(0))
		deAllocateL10
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134198)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(626)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134209)	allocateL8
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(x(2) y(4))
		move(x(0) y(5))
		move(x(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putRecord('exHandler' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		move(y(1) x(1))
		putConstant(0 x(0))
		createVariable(x(2))
		genCall(gci(g(0) true <M: AllocateThisTemp> false 3) 0)
		inlineAt(<M: LocalEnvsInhibited> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYYX(x(0) y(1) y(2) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(3) x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(6) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(134342)	getVoid(1)
		getVariable(x(0))
		putConstant('exception handler' x(1))
		genCall(gci(g(0) true <M: DebugExit> false 2) 0)
		putConstant('popEx' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(134358)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVoid(1)
		getVariable(x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('createCond' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(134432)	definition(x(0) 134582 pid('' 3 pos('./compiler/CodeEmitter.oz' 689 6) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(134569)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(134461)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(134516 [onScalar(nil 134491) onRecord('|' 2 134499)]))
lbl(134491)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134529)
lbl(134499)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(134529)
lbl(134516)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(696)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(134529)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(134569)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(134432)
lbl(134582)	move(x(0) y(5))
		createVariableMove(y(6) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(134647)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134667)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createEnumOr' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134687)	getVoid(1)
		getVarVar(x(1) x(2))
		getVariable(x(3))
		getVoid(1)
		getVariable(x(4))
		move(x(0) x(5))
		putConstant('createChoice' x(0))
		genCall(gci(g(0) true <M: EmitDisjunction> true 6) 0)
lbl(134707)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('ask' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134726)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('wait' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134745)	getVoid(1)
		getVariable(x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		putConstant('waitTop' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> true 0) 0)
lbl(134764)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		getVoid(1)
		getVariable(x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('shallowGuard' 1 x(0))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitGuard> false 1) 0)
		putConstant('shallowThen' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(134921)	allocateL(11)
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) y(5))
		getVariable(x(0))
		move(y(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		callBI('And' [x(0) x(1)]#[x(2)])
		move(y(8) x(0))
		callBI('And' [x(2) x(0)]#[x(1)])
		move(y(5) x(0))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(8))
		testLiteral(y(7) none 135062)
lbl(135007)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135065)
lbl(135062)	unify(y(8) y(7))
lbl(135065)	move(y(5) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('testBool' 3 x(0))
		setValue(y(8))
		setValue(y(7))
		setValue(y(10))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(7) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(9))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(4) x(0))
		putConstant(conditional x(1))
		deAllocateL
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135214)	allocateL10
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(g(4) x(0))
		inlineDot(x(0) getInfo x(2) cache)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(y(8) x(0))
		inlineDot(x(0) imods x(1) cache)
		move(y(1) x(0))
		move(g(9) x(3))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> false 6) 0)
		putRecord('#' 2 x(1))
		setValue(y(8))
		setValue(y(9))
		putRecord('testBI' 3 x(0))
		setValue(y(0))
		setValue(x(1))
		setValue(y(7))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(6) x(0))
		deAllocateL10
		genCall(gci(g(0) true <M: PopContLabel> true 1) 0)
lbl(135413)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testNumber' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135435)	getVoid(1)
		getVarVar(x(1) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		move(x(0) x(8))
		putConstant('testLiteral' x(0))
		genCall(gci(g(0) true <M: EmitTestConstant> true 9) 0)
lbl(135457)	allocateL9
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVarVar(y(4) x(0))
		move(y(4) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(7))
		testLiteral(y(5) none 135565)
lbl(135510)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as pattern case arbiter')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(3) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(135568)
lbl(135565)	unify(y(7) y(5))
lbl(135568)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('ht' 2 x(1))
		setValue(y(5))
		setVariable(y(8))
		putRecord('match' 2 x(0))
		setValue(y(7))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getSelf(x(3))
lbl(135619)	definition(x(1) 135731 pid('' 2 pos('./compiler/CodeEmitter.oz' 844 6) nil 5) unit [x(3) g(0) y(6)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		createVariable(y(0))
		createVariable(y(1))
		match(x(0) ht(135674 [onRecord('onScalar' 2 135638) onRecord('onRecord' 3 135654)]))
lbl(135638)	getVarVar(x(0) x(3))
		unify(y(0) x(3))
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(y(1))
		branch(135687)
lbl(135654)	getVarVar(x(0) x(3))
		getVariable(x(4))
		unify(y(0) x(4))
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		branch(135687)
lbl(135674)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(851)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(135687)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: Dereference> false 3) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		createVariableMove(y(1) x(0))
		genCall(gci(g(1) true <M: SaveAllRegisterMappings> false 1) 0)
		move(y(0) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(1) x(0))
		deAllocateL3
		genCall(gci(g(1) true <M: RestoreAllRegisterMappings> true 1) 0)
		endDefinition(135619)
lbl(135731)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL9
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135784)	allocateL7
		getVoid(1)
		getVarVar(y(0) y(1))
		getVarVar(y(2) x(2))
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		move(g(9) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('thread' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(contLabels x(0) cache)
		putConstant(nil x(1))
		inlineAssign(contLabels x(1) cache)
		inlineAt(<M: LocalEnvsInhibited> x(1) cache)
		moveMoveXYXY(x(0) y(5) x(1) y(6))
		testBool(y(3) 135882 135892)
		branch(135903)
lbl(135882)	putConstant(true x(2))
		inlineAssign(<M: LocalEnvsInhibited> x(2) cache)
		branch(135903)
lbl(135892)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(878)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(135903)	moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(6) x(0))
		inlineAssign(<M: LocalEnvsInhibited> x(0) cache)
		move(y(5) x(0))
		inlineAssign(contLabels x(0) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant('thread' x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(135952)	allocateL4
		getVoid(1)
		getVarVar(y(0) y(1))
		getVoid(1)
		getVariable(y(2))
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(3) 136025 136014)
		getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setConstant('undetermined variable used as lock')
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('code generation warning' x(2))
		putConstant('lock suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		branch(136025)
lbl(136014)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(889)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136025)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(1) x(0))
		putConstant('lock' x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putRecord('lockThread' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		deAllocateL4
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(136055)	allocateL5
		getVoid(1)
		getVarVar(y(0) y(1))
		getVariable(y(2))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136092 136097)
		unify(y(2) y(3))
		branch(136108)
lbl(136092)	unify(y(2) y(4))
		branch(136108)
lbl(136097)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136108)	move(y(1) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		putConstant('lock' x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
lbl(136145)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(130940)
lbl(136160)	definition(x(7) 136186 pid('Emitter,EmitVInstr/slow' 1 pos('./compiler/CodeEmitter.oz' 271 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 938> 3)
		endDefinition(136160)
lbl(136186)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: EmitVInstr>)
		setValue(x(7))
		setValue(x(9))
lbl(136196)	definition(x(7) 136365 pid('Emitter,DebugEntry/fast' 2 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) <Q: 939> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136350 136352)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136305 [onRecord(fineStep 3 136229) onRecord(fineStep 6 136248) onRecord(coarseStep 3 136267) onRecord(coarseStep 6 136286)]))
lbl(136229)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136318)
lbl(136248)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136318)
lbl(136267)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136318)
lbl(136286)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136318)
lbl(136305)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(926)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136318)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugEntry' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136350)	deAllocateL6
		return
lbl(136352)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(917)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136196)
lbl(136365)	definition(x(9) 136400 pid('Emitter,DebugEntry/slow' 1 pos('./compiler/CodeEmitter.oz' 916 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 939> 5)
		endDefinition(136365)
lbl(136400)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: DebugEntry>)
		setValue(x(9))
		setValue(x(7))
lbl(136410)	definition(x(7) 136583 pid('Emitter,DebugExit/fast' 2 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) <Q: 940> [g(14) y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(2) 136568 136570)
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(136523 [onRecord(fineStep 3 136443) onRecord(fineStep 6 136462) onRecord(coarseStep 3 136483) onRecord(coarseStep 6 136502)]))
lbl(136443)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136536)
lbl(136462)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(f y(5))
		branch(136536)
lbl(136483)	getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136536)
lbl(136502)	getVoid(3)
		getVarVar(x(0) x(1))
		getVariable(x(2))
		unify(y(2) x(0))
		unify(y(3) x(1))
		unify(y(4) x(2))
		getLiteral(c y(5))
		branch(136536)
lbl(136523)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(942)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136536)	putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('/')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 195> 4)
		putRecord('debugExit' 4 x(0))
		setValue(y(2))
		setValue(y(3))
		setValue(y(4))
		setValue(y(0))
		deAllocateL6
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(136568)	deAllocateL6
		return
lbl(136570)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(933)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136410)
lbl(136583)	definition(x(9) 136618 pid('Emitter,DebugExit/slow' 1 pos('./compiler/CodeEmitter.oz' 932 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 940> 5)
		endDefinition(136583)
lbl(136618)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: DebugExit>)
		setValue(x(9))
		setValue(x(7))
lbl(136628)	definition(x(7) 137039 pid('Emitter,TryToUseAsSendMsg/fast' 7 pos('./compiler/CodeEmitter.oz' 949 6) nil 7) <Q: 941> [y(1)])
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 136650 137026)
		getLiteral(false x(6))
		return
lbl(136650)	allocateL(11)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: IsFirst> false 2) 0)
		testBool(y(6) 137010 137015)
		testRecord(y(4) vCall 5 136764)
lbl(136685)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(136764)
		getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136701)	shallowThen
		moveMoveXYXY(x(0) y(4) x(2) y(6))
		moveMoveXYYX(x(3) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136748 136753)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136748)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136753)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(957)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136764)	testRecord(y(4) vGenCall 8 136855)
lbl(136769)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(136855)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
lbl(136792)	shallowThen
		moveMoveXYXY(x(0) y(4) x(3) y(6))
		moveMoveXYYX(x(4) y(7) y(0) x(0))
		move(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(8) 136839 136844)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136839)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136844)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(964)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(136855)	testRecord(y(4) vCallBuiltin 5 137005)
lbl(136860)	getVoid(1)
		getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		createVariable(y(4))
		shallowGuard(137005)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getListValVar(x(1) y(0) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(136891)	shallowThen
		moveMoveXYXY(x(0) y(6) x(4) y(7))
		moveMoveXYXY(x(2) y(8) x(3) y(9))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		genCall(gci(g(0) true <M: DoesNotOccurIn> false 3) 0)
		testBool(y(10) 136989 136994)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putList(x(3))
		setValue(y(6))
		setConstant(nil)
		putRecord('#' 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord('callBI' 2 x(0))
		setConstant(newObject)
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		moveMoveYXYX(y(8) x(4) y(9) x(5))
		genCall(gci(g(0) true <M: EmitSendMsg> false 6) 0)
		getLiteral(true y(5))
		deAllocateL
		return
lbl(136989)	getLiteral(false y(5))
		deAllocateL
		return
lbl(136994)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(972)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137005)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137010)	getLiteral(false y(5))
		deAllocateL
		return
lbl(137015)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(955)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137026)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(954)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(136628)
lbl(137039)	definition(x(9) 137104 pid('Emitter,TryToUseAsSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 949 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 941> 15)
		endDefinition(137039)
lbl(137104)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TryToUseAsSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137114)	definition(x(7) 137664 pid('Emitter,EmitSendMsg/fast' 6 pos('./compiler/CodeEmitter.oz' 989 6) nil 8) <Q: 942> [y(1) g(15) g(1)])
		allocateL9
		putRecord('sendMsg' 4 x(6))
		setValue(x(1))
		setVariable(x(7))
		setValue(x(2))
		setConstant(cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(7) y(5))
		createVariable(y(6))
		testBI('IsInt' [x(2)]#[x(1)] 137159)
		unify(y(6) x(2))
		branch(137168)
lbl(137159)	move(x(2) x(0))
		move(y(6) x(1))
		genFastCall(<P: 24> 4)
lbl(137168)	move(y(6) x(0))
		inlinePlus1(x(0) x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: ReserveTemps> false 1) 0)
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setVariable(y(7))
		getSelf(x(4))
lbl(137190)	definition(x(1) 137573 pid('' 4 pos('./compiler/CodeEmitter.oz' 999 3) nil 13) unit [x(4) g(2) g(0)])
		move(g(0) x(4))
		setSelf(x(4))
		shallowGuard(137560)
		getRecord('#' 2 x(2))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(137211)	shallowThen
		match(x(1) ht(137547 [onRecord(number 1 137215) onRecord(literal 1 137277) onRecord(value 1 137339) onRecord(record 3 137356)]))
lbl(137215)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137277)	getVariable(x(1))
		getRecord('#' 2 x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(2))
		unifyVariable(x(7))
		unifyValue(x(5))
		getList(x(3))
		unifyVariable(x(8))
		unifyValue(x(6))
		getRecord('#' 2 x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord('putConstant' 2 x(10))
		unifyValVar(x(1) x(11))
		getRecord(x 1 x(11))
		unifyVariable(x(12))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(9))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(12))
		return
lbl(137339)	getVariable(x(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(1))
		unifyValue(x(6))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(137356)	allocateL8
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(0) x(2))
		testBI('Dictionary.member' [x(1) x(2)]#[x(7)] 137467)
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(2) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('move' 2 x(5))
		unifyValVar(y(7) x(6))
		getRecord(x 1 x(6))
		unifyVariable(x(7))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(7))
		deAllocateL8
		return
lbl(137467)	inlineMinus1(x(0) x(2))
		moveMoveXYXY(x(0) y(3) x(3) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(2) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(2) true <M: AllocateThisShortLivedTemp> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		genCall(gci(g(2) true <M: EmitRecordWrite> false 4) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(5))
		getList(x(1))
		unifyVariable(x(3))
		unifyValue(y(6))
		getRecord('#' 2 x(3))
		unifyVariable(x(4))
		unifyLiteral('skip')
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineMinus1(x(0) x(1))
		unify(x(1) x(4))
		deAllocateL8
		return
lbl(137547)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1016)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(137560)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(999)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137190)
lbl(137573)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 83> 8)
		inlineAt(continuations x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(x(0) y(1))
		createVariable(y(8))
		testLiteral(y(3) nil 137612)
lbl(137607)	unify(y(8) y(1))
		branch(137618)
lbl(137612)	getList(y(8))
		unifyValue(y(3))
		unifyValue(y(1))
lbl(137618)	move(y(8) x(0))
		inlineAssign(continuations x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		moveMoveYXYX(y(4) x(3) y(5) x(4))
		moveMoveYXYX(y(2) x(6) y(7) x(7))
		putConstant(any x(0))
		createVariable(x(5))
		genCall(gci(g(0) true <M: GenericEmitCall> false 8) 0)
		putList(x(0))
		setValue(y(3))
		setValue(y(1))
		inlineAssign(continuations x(0) cache)
		deAllocateL9
		return
		endDefinition(137114)
lbl(137664)	definition(x(9) 137723 pid('Emitter,EmitSendMsg/slow' 1 pos('./compiler/CodeEmitter.oz' 989 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 942> 13)
		endDefinition(137664)
lbl(137723)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: EmitSendMsg>)
		setValue(x(9))
		setValue(x(7))
lbl(137733)	definition(x(7) 138495 pid('Emitter,GenericEmitCall/fast' 8 pos('./compiler/CodeEmitter.oz' 1026 6) nil 11) <Q: 943> [g(9) g(2) y(1)])
		allocateL(11)
		inlineAt(continuations x(8) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		moveMoveXYXY(x(6) y(6) x(7) y(7))
		match(x(8) ht(137935 [onScalar(nil 137948) onRecord('|' 2 137769)]))
lbl(137769)	getVariable(x(8))
		inlineDot(x(8) 1 x(8) cache)
		callBI('BitArray.toList' [x(8)]#[x(9)])
		getSelf(x(8))
lbl(137782)	definition(x(10) 137924 pid('' 1 pos('./compiler/CodeEmitter.oz' 1061 6) nil 5) unit [x(8) g(1) g(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(137847 [onScalar(none 137807) onRecord(x 1 137808)]))
lbl(137807)	return
lbl(137808)	allocateL3
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 137845)
lbl(137824)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(137845)	deAllocateL3
		return
lbl(137847)	allocateL3
		move(x(0) y(0))
		move(g(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 137909 137911)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 137907)
lbl(137877)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(137907)	deAllocateL3
		return
lbl(137909)	deAllocateL3
		return
lbl(137911)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1073)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(137782)
lbl(137924)	move(x(9) x(0))
		move(x(10) x(1))
		genFastCall(<P: 34> 4)
		branch(137948)
lbl(137935)	putRecord(kernel 3 x(9))
		setConstant(noElse)
		setConstant(1088)
		setValue(x(8))
		callBI('Exception.raiseError' [x(9)]#nil)
lbl(137948)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		genFastCall(<P: 24> 4)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		createVariable(y(8))
		testLiteral(y(0) none 137973)
lbl(137968)	getLiteral(none y(8))
		branch(138379)
lbl(137973)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testLiteral(y(9) none 138092)
lbl(137986)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable called ')
		setConstant('as procedure')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(6) x(0))
		putConstant('code generation warning' x(2))
		putConstant('application suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138054 138070)
lbl(138044)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		branch(138081)
lbl(138054)	testLiteral(y(0) non_y 138060)
		branch(138044)
lbl(138060)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		branch(138081)
lbl(138070)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1114)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138081)	putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138295)
lbl(138092)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: IsLast> false 2) 0)
		testBool(y(9) 138240 138284)
		move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138178)
lbl(138118)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(9) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(y(5) x(2))
		testLT(x(1) x(2) x(3) 138295)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138295)
lbl(138178)	testLiteral(y(0) non_y 138295)
lbl(138182)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testRecord(y(9) x 1 138295)
lbl(138196)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(0) x(1) x(2) 138295)
		move(y(1) x(0))
		genCall(gci(g(2) true <M: FreeReg> false 1) 0)
		move(y(5) x(0))
		genCall(gci(g(2) true <M: ReserveTemps> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138295)
lbl(138240)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetPerm> false 2) 0)
		testLiteral(y(9) none 138295)
lbl(138253)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(10) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(9))
		setValue(y(10))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138295)
lbl(138284)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1121)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138295)	match(y(0) ht(138366 [onScalar(non_y 138298) onScalar(any 138356)]))
lbl(138298)	move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		testRecord(y(0) y 1 138351)
lbl(138312)	move(y(1) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(2) true <M: GetTemp> false 2) 0)
		testLiteral(y(9) none 138346)
lbl(138325)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(0))
		setValue(y(8))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138379)
lbl(138346)	unify(y(8) y(9))
		branch(138379)
lbl(138351)	unify(y(8) y(0))
		branch(138379)
lbl(138356)	moveMoveYXYX(y(1) x(0) y(8) x(1))
		genCall(gci(g(2) true <M: GetReg> false 2) 0)
		branch(138379)
lbl(138366)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1177)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138379)	moveMoveYXYX(y(5) x(0) y(7) x(1))
		move(y(2) x(2))
		genCall(gci(g(2) true <M: SetArguments> false 3) 0)
		getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 138452 138457)
		testRecord(y(8) x 1 138447)
lbl(138407)	getVariable(x(0))
		move(y(5) x(1))
		testLT(x(1) x(0) x(2) 138436)
		getRecord(x 1 y(4))
		unifyValue(y(5))
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(4))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		branch(138439)
lbl(138436)	unify(y(4) y(8))
lbl(138439)	move(y(5) x(0))
		inlinePlus1(x(0) x(2))
		branch(138468)
lbl(138447)	unify(y(4) y(8))
		branch(138468)
lbl(138452)	unify(y(4) y(8))
		branch(138468)
lbl(138457)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1184)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(138468)	move(y(6) x(0))
		putConstant('call' x(1))
		genCall(gci(g(2) true <M: DebugEntry> false 2) 0)
		move(y(3) x(0))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		move(y(6) x(0))
		putConstant('call' x(1))
		deAllocateL
		genCall(gci(g(2) true <M: DebugExit> true 2) 0)
		endDefinition(137733)
lbl(138495)	definition(x(9) 138566 pid('Emitter,GenericEmitCall/slow' 1 pos('./compiler/CodeEmitter.oz' 1026 6) nil 9) unit nil)
		putConstant(8 x(8))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(8))
		inlineDot(x(0) 1 x(8) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		move(x(8) x(0))
		genFastCall(<Q: 943> 17)
		endDefinition(138495)
lbl(138566)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: GenericEmitCall>)
		setValue(x(9))
		setValue(x(7))
lbl(138576)	definition(x(7) 139331 pid('Emitter,SetArguments/fast' 3 pos('./compiler/CodeEmitter.oz' 1207 6) nil 5) <Q: 944> [y(1) g(16) g(1) g(3) g(2) g(10) g(7) g(5) g(6)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: EnterDelayedInits> false 1) 0)
		move(y(0) x(0))
		inlineAssign(<M: Arity> x(0) cache)
		getSelf(x(2))
lbl(138604)	definition(x(1) 139158 pid('' 2 pos('./compiler/CodeEmitter.oz' 1233 3) nil 7) unit [x(2) g(2) g(3) g(4) g(5) g(6) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(139145)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(138623)	shallowThen
		inlineMinus1(x(0) x(1))
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(5)] 138653)
		putConstant(0 x(0))
		testLE(x(0) x(3) x(1) 138652)
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.set' [x(0) x(3)]#nil)
lbl(138652)	return
lbl(138653)	inlineAt(<M: Temporaries> x(0) cache)
		putConstant(none x(5))
		callBI('Dictionary.condGet' [x(0) x(3) x(5)]#[x(6)])
		match(x(6) ht(138790 [onRecord(vEquateNumber 4 138667) onRecord(vEquateLiteral 4 138710) onRecord(vGetSelf 3 138753)]))
lbl(138667)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138710)	getVoid(1)
		getVariable(x(0))
		inlineAt(<M: Temporaries> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: Permanents> x(4) cache)
		callBI('Dictionary.remove' [x(4) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(3) cache)
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord('putConstant' 2 x(4))
		setValue(x(0))
		setValue(x(5))
		callBI('Dictionary.put' [x(3) x(1) x(4)]#nil)
		return
lbl(138753)	inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.remove' [x(0) x(3)]#nil)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		putRecord(x 1 x(4))
		setValue(x(1))
		putRecord('getSelf' 1 x(3))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		return
lbl(138790)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(6) true <M: GetTemp> false 2) 0)
		putRecord(x 1 x(0))
		setValue(y(2))
		createVariable(y(4))
		move(y(3) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 138827)
		getLiteral('skip' y(4))
		branch(139130)
lbl(138827)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(6) true <M: GetPerm> false 2) 0)
		testLiteral(y(5) none 139117)
lbl(138840)	match(y(3) ht(139104 [onScalar(none 138843) onRecord(x 1 139062)]))
lbl(138843)	inlineAt(<M: LastAliveRS> x(0) cache)
		move(y(0) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 138998 139051)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 138945)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: AllocateAnyTemp> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		getRecord(x 1 y(1))
		unifyVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(1) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139130)
lbl(138945)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(6) true <M: AllocateThisTemp> false 3) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		genCall(gci(g(6) true <M: Emit> false 1) 0)
		inlineAt(<M: AdjDict> x(0) cache)
		inlineAt(<M: AdjDict> x(1) cache)
		move(y(2) x(2))
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(1) x(2) x(3)]#[x(4)])
		putList(x(1))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
		getLiteral('skip' y(4))
		branch(139130)
lbl(138998)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(6) true <M: IsLast> false 2) 0)
		testBool(y(1) 139025 139040)
		getRecord('createVariable' 1 y(4))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139130)
lbl(139025)	getRecord(delayedCreateVariableMove 2 y(4))
		unifyValVar(y(0) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139130)
lbl(139040)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1281)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139051)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1265)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139062)	getVariable(x(0))
		inlineAt(<M: AdjDict> x(1) cache)
		inlineAt(<M: AdjDict> x(2) cache)
		putConstant(nil x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		putList(x(2))
		setValue(y(2))
		setValue(x(4))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		getRecord('move' 2 y(4))
		unifyValVar(y(3) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
		branch(139130)
lbl(139104)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1290)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139117)	getRecord('move' 2 y(4))
		unifyValVar(y(5) x(0))
		getRecord(x 1 x(0))
		unifyValue(y(2))
lbl(139130)	inlineAt(<M: DelayedInitsDict> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(139145)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1233)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(138604)
lbl(139158)	move(y(1) x(0))
		genFastCall(<P: 89> 4)
		putConstant(0 x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		putConstant(nil x(4))
		inlineAssign(<M: Stack> x(4) cache)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139190)	definition(x(3) 139218 pid('' 1 pos('./compiler/CodeEmitter.oz' 1305 3) nil 4) unit [x(4) g(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DoneDict> x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 139211)
		return
lbl(139211)	createVariable(x(1))
		genCall(gci(g(2) true <M: OrderMoves> true 2) 0)
		endDefinition(139190)
lbl(139218)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		inlineAt(<M: Arity> x(0) cache)
		inlineMinus1(x(0) x(1))
		getSelf(x(4))
lbl(139240)	definition(x(3) 139294 pid('' 1 pos('./compiler/CodeEmitter.oz' 1313 3) nil 4) unit [x(4) g(7) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: DelayedInitsDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		match(x(3) ht(139286 [onScalar('skip' 139262) onRecord('move' 2 139263) onRecord(delayedCreateVariableMove 2 139264)]))
lbl(139262)	return
lbl(139263)	return
lbl(139264)	allocateL2
		getVarVar(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariableMove' 2 x(0))
		setValue(y(1))
		setValue(y(0))
		deAllocateL2
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139286)	move(x(3) x(0))
		genCall(gci(g(2) true <M: Emit> true 1) 0)
		endDefinition(139240)
lbl(139294)	putConstant(0 x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: AdjDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(<M: DoneDict> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		deAllocateL2
		return
		endDefinition(138576)
lbl(139331)	definition(x(9) 139372 pid('Emitter,SetArguments/slow' 1 pos('./compiler/CodeEmitter.oz' 1207 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 944> 7)
		endDefinition(139331)
lbl(139372)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: SetArguments>)
		setValue(x(9))
		setValue(x(7))
lbl(139382)	definition(x(7) 139441 pid('Emitter,EnterDelayedInits/fast' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 5) <Q: 945> [g(7) y(1)])
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(139426 [onScalar(nil 139395) onRecord('|' 2 139397)]))
lbl(139395)	deAllocateL1
		return
lbl(139397)	getVarVar(x(1) x(2))
		shallowGuard(139426)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(139410)	shallowThen
		inlineAt(<M: DelayedInitsDict> x(0) cache)
		callBI('Dictionary.put' [x(0) x(3) x(4)]#nil)
		move(x(2) x(0))
		deAllocateL1
		genCall(gci(g(1) true <M: EnterDelayedInits> true 1) 0)
lbl(139426)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1331)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(139382)
lbl(139441)	definition(x(9) 139467 pid('Emitter,EnterDelayedInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1326 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 945> 3)
		endDefinition(139441)
lbl(139467)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: EnterDelayedInits>)
		setValue(x(9))
		setValue(x(7))
lbl(139477)	definition(x(7) 139807 pid('Emitter,OrderMoves/fast' 2 pos('./compiler/CodeEmitter.oz' 1333 6) nil 7) <Q: 946> [g(7) g(2) y(1) g(5)])
		allocateL4
		inlineAt(<M: CurrentID> x(2) cache)
		inlineAt(<M: DoneDict> x(3) cache)
		callBI('Dictionary.put' [x(3) x(0) x(2)]#nil)
		inlinePlus1(x(2) x(4))
		inlineAssign(<M: CurrentID> x(4) cache)
		inlineAt(<M: Stack> x(4) cache)
		putList(x(5))
		setValue(x(0))
		setValue(x(4))
		inlineAssign(<M: Stack> x(5) cache)
		inlineAt(<M: AdjDict> x(3) cache)
		putConstant(nil x(4))
		callBI('Dictionary.condGet' [x(3) x(0) x(4)]#[x(5)])
		getSelf(x(4))
lbl(139534)	definition(x(6) 139597 pid('' 3 pos('./compiler/CodeEmitter.oz' 1338 4) nil 7) unit [x(4) g(1) g(2)])
		allocateL3
		move(g(0) x(3))
		setSelf(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		putConstant(~1 x(5))
		callBI('Dictionary.condGet' [x(4) x(1) x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testNumber(x(6) ~1 139579)
lbl(139568)	move(x(1) x(0))
		move(y(2) x(1))
		genCall(gci(g(2) true <M: OrderMoves> false 2) 0)
		branch(139582)
lbl(139579)	unify(y(2) x(6))
lbl(139582)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Min' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
		endDefinition(139534)
lbl(139597)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(6) x(1))
		move(y(1) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 139803)
		inlineAt(<M: Stack> x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(1) x(2))
		genCall(gci(g(2) true <M: GetCycle> false 3) 0)
		testList(y(1) 139672)
lbl(139643)	getVarVar(x(0) x(1))
		testLiteral(x(1) nil 139672)
		inlineAt(<M: DelayedInitsDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) 'move' 2 139670)
lbl(139663)	move(x(2) x(0))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139670)	deAllocateL4
		return
lbl(139672)	testList(y(1) 139790)
lbl(139675)	getVarVar(y(0) y(1))
		putRecord(x 1 y(2))
		setVariable(x(1))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(1))
		putRecord(x 1 x(1))
		setValue(y(0))
		putRecord('move' 2 x(0))
		setValue(x(1))
		setValue(y(2))
		genCall(gci(g(2) true <M: Emit> false 1) 0)
		getSelf(x(4))
lbl(139711)	definition(x(1) 139761 pid('' 3 pos('./compiler/CodeEmitter.oz' 1358 7) nil 7) unit [x(4) g(2)])
		allocateL2
		move(g(0) x(3))
		setSelf(x(3))
		putRecord(x 1 x(5))
		setValue(x(1))
		putRecord(x 1 x(6))
		setValue(x(0))
		putRecord('move' 2 x(4))
		setValue(x(5))
		setValue(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(139711)
lbl(139761)	moveMoveYXYX(y(1) x(0) y(0) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		putRecord(x 1 x(1))
		setValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(x(1))
		deAllocateL4
		genCall(gci(g(2) true <M: Emit> true 1) 0)
lbl(139790)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1360)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(139803)	deAllocateL4
		return
		endDefinition(139477)
lbl(139807)	definition(x(9) 139842 pid('Emitter,OrderMoves/slow' 1 pos('./compiler/CodeEmitter.oz' 1333 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 946> 5)
		endDefinition(139807)
lbl(139842)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: OrderMoves>)
		setValue(x(9))
		setValue(x(7))
lbl(139852)	definition(x(7) 139905 pid('Emitter,GetCycle/fast' 3 pos('./compiler/CodeEmitter.oz' 1363 6) nil 6) <Q: 947> [g(7) y(1)])
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: DoneDict> x(4) cache)
		inlineAt(<M: Arity> x(5) cache)
		callBI('Dictionary.put' [x(4) x(1) x(5)]#nil)
		testBI('==' [x(0) x(1)]#[x(4)] 139893)
		getList(x(2))
		unifyValue(x(1))
		unifyLiteral(nil)
		inlineAssign(<M: Stack> x(3) cache)
		return
lbl(139893)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(1) true <M: GetCycle> true 3) 0)
		endDefinition(139852)
lbl(139905)	definition(x(9) 139946 pid('Emitter,GetCycle/slow' 1 pos('./compiler/CodeEmitter.oz' 1363 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 947> 7)
		endDefinition(139905)
lbl(139946)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: GetCycle>)
		setValue(x(9))
		setValue(x(7))
lbl(139956)	definition(x(7) 140129 pid('Emitter,CreateNonlinearRegs/fast' 3 pos('./compiler/CodeEmitter.oz' 1374 6) nil 3) <Q: 948> [y(1)])
		match(x(0) ht(140114 [onScalar(nil 139965) onRecord('|' 2 139969)]))
lbl(139965)	unify(x(2) x(1))
		return
lbl(139969)	allocateL5
		getVarVar(x(0) y(0))
		match(x(0) ht(140107 [onRecord(value 1 139976) onRecord(record 3 140082)]))
lbl(139976)	getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 140067)
lbl(139996)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 140041 140056)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140041)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140056)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140067)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140082)	getVoid(2)
		getVariable(x(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: CreateNonlinearRegs> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140107)	move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(0) true <M: CreateNonlinearRegs> true 3) 0)
lbl(140114)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(139956)
lbl(140129)	definition(x(9) 140170 pid('Emitter,CreateNonlinearRegs/slow' 1 pos('./compiler/CodeEmitter.oz' 1374 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 948> 7)
		endDefinition(140129)
lbl(140170)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: CreateNonlinearRegs>)
		setValue(x(9))
		setValue(x(7))
lbl(140180)	definition(x(7) 140231 pid('Emitter,EmitRecordWrite/fast' 4 pos('./compiler/CodeEmitter.oz' 1397 6) nil 4) <Q: 949> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: EmitVArgsWrite> false 3) 0)
		putRecord('putRecord' 3 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: EmitMultiple> true 2) 0)
		endDefinition(140180)
lbl(140231)	definition(x(9) 140278 pid('Emitter,EmitRecordWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1397 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 949> 9)
		endDefinition(140231)
lbl(140278)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: EmitRecordWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140288)	definition(x(7) 140536 pid('Emitter,EmitVArgsWrite/fast' 3 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) <Q: 950> [y(1)])
		match(x(0) ht(140521 [onScalar(nil 140297) onRecord('|' 2 140301)]))
lbl(140297)	unify(x(1) x(2))
		return
lbl(140301)	allocateL8
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(140496 [onRecord(number 1 140315) onRecord(literal 1 140331) onRecord(predicateRef 1 140347) onRecord(value 1 140363) onRecord(record 3 140455)]))
lbl(140315)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140509)
lbl(140331)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setConstant' 1 x(1))
		unifyValue(x(0))
		branch(140509)
lbl(140347)	getVariable(x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord('setPredicateRef' 1 x(1))
		unifyValue(x(0))
		branch(140509)
lbl(140363)	getVariable(y(3))
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(5) none 140441)
lbl(140380)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(5) 140407 140430)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVoid' 1 x(0))
		unifyNumber(1)
		branch(140509)
lbl(140407)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setVariable' 1 x(0))
		unifyValue(y(5))
		branch(140509)
lbl(140430)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1415)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140441)	getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(5))
		branch(140509)
lbl(140455)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(x(1) y(6))
		createVariableMove(y(7) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(7) x(2) y(5) x(3))
		genCall(gci(g(0) true <M: EmitRecordWrite> false 4) 0)
		getList(y(6))
		unifyVariable(x(0))
		unifyValue(y(2))
		getRecord('setValue' 1 x(0))
		unifyValue(y(7))
		branch(140509)
lbl(140496)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1428)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(140509)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL8
		genCall(gci(g(0) true <M: EmitVArgsWrite> true 3) 0)
lbl(140521)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1432)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140288)
lbl(140536)	definition(x(9) 140577 pid('Emitter,EmitVArgsWrite/slow' 1 pos('./compiler/CodeEmitter.oz' 1405 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 950> 7)
		endDefinition(140536)
lbl(140577)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: EmitVArgsWrite>)
		setValue(x(9))
		setValue(x(7))
lbl(140587)	definition(x(7) 140693 pid('Emitter,EmitRecordRead/fast' 4 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) <Q: 951> [y(1)])
		allocateL2
		putRecord('getRecord' 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(3) y(0))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		genCall(gci(g(0) true <M: EmitVArgsRead> false 3) 0)
		getSelf(x(2))
lbl(140627)	definition(x(1) 140684 pid('' 1 pos('./compiler/CodeEmitter.oz' 1441 3) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(140671)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(record 3 x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(140658)	shallowThen
		move(x(4) x(0))
		move(x(5) x(1))
		move(x(6) x(3))
		genCall(gci(g(1) true <M: EmitRecordRead> true 4) 0)
lbl(140671)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1441)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(140627)
lbl(140684)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(140587)
lbl(140693)	definition(x(9) 140740 pid('Emitter,EmitRecordRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1434 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 951> 9)
		endDefinition(140693)
lbl(140740)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: EmitRecordRead>)
		setValue(x(9))
		setValue(x(7))
lbl(140750)	definition(x(7) 140967 pid('Emitter,EmitVArgsRead/fast' 3 pos('./compiler/CodeEmitter.oz' 1445 6) nil 5) <Q: 952> [y(1)])
		match(x(0) ht(140952 [onScalar(nil 140759) onRecord('|' 2 140763)]))
lbl(140759)	unify(x(1) x(2))
		return
lbl(140763)	allocateL6
		getVarVar(y(0) x(3))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariable(y(3))
		match(y(0) ht(140927 [onRecord(number 1 140777) onRecord(literal 1 140793) onRecord(value 1 140809) onRecord(record 3 140893)]))
lbl(140777)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyNumber' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140940)
lbl(140793)	getVariable(x(4))
		unify(x(1) y(3))
		putRecord('unifyLiteral' 1 x(0))
		setValue(x(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140940)
lbl(140809)	getVariable(y(0))
		unify(x(1) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(4) none 140882)
lbl(140827)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: IsLast> false 2) 0)
		testBool(y(4) 140851 140871)
		putRecord('unifyVoid' 1 x(0))
		setConstant(1)
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140940)
lbl(140851)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140940)
lbl(140871)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140882)	putRecord('unifyValue' 1 x(0))
		setValue(y(4))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(140940)
lbl(140893)	move(x(1) y(4))
		createVariableMove(y(5) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		putRecord('unifyVariable' 1 x(0))
		setValue(y(5))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		branch(140940)
lbl(140927)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1469)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(140940)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(0) true <M: EmitVArgsRead> true 3) 0)
lbl(140952)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1473)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(140750)
lbl(140967)	definition(x(9) 141008 pid('Emitter,EmitVArgsRead/slow' 1 pos('./compiler/CodeEmitter.oz' 1445 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 952> 7)
		endDefinition(140967)
lbl(141008)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: EmitVArgsRead>)
		setValue(x(9))
		setValue(x(7))
lbl(141018)	definition(x(7) 141175 pid('Emitter,AllocateBuiltinArgs/fast' 6 pos('./compiler/CodeEmitter.oz' 1475 6) nil 6) <Q: 953> [y(1)])
		testList(x(1) 141158)
lbl(141027)	allocateL9
		getVarVar(x(1) y(0))
		getList(x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		getList(x(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(5) y(7))
		testBool(x(1) 141118 141128)
		move(y(3) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(8) none 141105)
lbl(141074)	move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PredictReg> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(8))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141139)
lbl(141105)	putRecord('move' 2 x(0))
		setValue(y(8))
		setValue(y(3))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(141139)
lbl(141118)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(141139)
lbl(141128)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1480)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141139)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		moveMoveYXYX(y(6) x(4) y(7) x(5))
		deAllocateL9
		genCall(gci(g(0) true <M: AllocateBuiltinArgs> true 6) 0)
lbl(141158)	getLiteral(nil x(2))
		move(x(3) x(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
		endDefinition(141018)
lbl(141175)	definition(x(9) 141234 pid('Emitter,AllocateBuiltinArgs/slow' 1 pos('./compiler/CodeEmitter.oz' 1475 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 953> 13)
		endDefinition(141175)
lbl(141234)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: AllocateBuiltinArgs>)
		setValue(x(9))
		setValue(x(7))
lbl(141244)	definition(x(7) 141386 pid('Emitter,AllocateBuiltinOutputs/fast' 4 pos('./compiler/CodeEmitter.oz' 1499 6) nil 4) <Q: 954> [y(1)])
		match(x(0) ht(141371 [onScalar(nil 141253) onRecord('|' 2 141260)]))
lbl(141253)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(141260)	allocateL8
		getVarVar(x(0) y(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(x(1) y(2))
		createVariable(y(3))
		testBool(y(2) 141293 141346)
		move(x(3) y(4))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		unify(y(4) y(3))
		branch(141357)
lbl(141293)	moveMoveXYXY(x(3) y(4) x(0) y(5))
		move(x(2) y(6))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		testLiteral(y(7) none 141324)
lbl(141311)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: PredictTemp> false 2) 0)
		unify(y(4) y(3))
		branch(141357)
lbl(141324)	move(y(6) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> false 1) 0)
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(3))
		getRecord('#' 2 x(0))
		unifyValue(y(6))
		unifyValue(y(7))
		branch(141357)
lbl(141346)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1501)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141357)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AllocateBuiltinOutputs> true 4) 0)
lbl(141371)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1518)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141244)
lbl(141386)	definition(x(9) 141433 pid('Emitter,AllocateBuiltinOutputs/slow' 1 pos('./compiler/CodeEmitter.oz' 1499 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 954> 9)
		endDefinition(141386)
lbl(141433)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: AllocateBuiltinOutputs>)
		setValue(x(9))
		setValue(x(7))
lbl(141443)	definition(x(7) 141498 pid('Emitter,EmitUnifies/fast' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) <Q: 955> [y(1)])
		match(x(0) ht(141483 [onScalar(nil 141452) onRecord('|' 2 141453)]))
lbl(141452)	return
lbl(141453)	allocateL1
		getVarVar(x(1) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		putRecord('unify' 2 x(0))
		setValue(x(1))
		setValue(x(2))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitUnifies> true 1) 0)
lbl(141483)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1525)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(141443)
lbl(141498)	definition(x(9) 141524 pid('Emitter,EmitUnifies/slow' 1 pos('./compiler/CodeEmitter.oz' 1520 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 955> 3)
		endDefinition(141498)
lbl(141524)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: EmitUnifies>)
		setValue(x(9))
		setValue(x(7))
lbl(141534)	definition(x(7) 141624 pid('Emitter,EmitGuard/fast' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 6) <Q: 956> [g(17) y(1)])
		allocateL4
		inlineAt(continuations x(1) cache)
		putRecord(vDummy 1 x(2))
		setVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testLiteral(y(0) nil 141569)
lbl(141564)	getLiteral(nil x(3))
		branch(141581)
lbl(141569)	inlineDot(x(0) 1 x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(3))
lbl(141581)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: PushContLabel> false 2) 0)
		putList(x(1))
		setValue(y(2))
		setValue(y(1))
		inlineAssign(continuations x(1) cache)
		move(y(0) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(1) x(0))
		inlineAssign(continuations x(0) cache)
		move(y(3) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: PopContLabel> true 1) 0)
		endDefinition(141534)
lbl(141624)	definition(x(9) 141650 pid('Emitter,EmitGuard/slow' 1 pos('./compiler/CodeEmitter.oz' 1527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 956> 3)
		endDefinition(141624)
lbl(141650)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: EmitGuard>)
		setValue(x(9))
		setValue(x(7))
lbl(141660)	definition(x(7) 141905 pid('Emitter,EmitDisjunction/fast' 6 pos('./compiler/CodeEmitter.oz' 1541 6) nil 6) <Q: 957> [y(1)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		genCall(gci(g(0) true <M: KillAllTemporaries> false 0) 0)
		getSelf(x(1))
lbl(141715)	definition(x(0) 141865 pid('' 3 pos('./compiler/CodeEmitter.oz' 1550 3) nil 9) unit [x(1) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(141852)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('#' 3 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
lbl(141744)	shallowThen
		allocateL5
		putRecord('lbl' 1 x(1))
		setValue(x(0))
		moveMoveXYXY(x(2) y(0) x(6) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		match(y(4) ht(141799 [onScalar(nil 141774) onRecord('|' 2 141782)]))
lbl(141774)	putConstant('lastClause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141812)
lbl(141782)	move(y(0) x(0))
		genCall(gci(g(1) true newLabel false 1) 0)
		putRecord('nextClause' 1 x(0))
		setValue(y(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		branch(141812)
lbl(141799)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1557)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(141812)	putConstant('clause' x(0))
		genCall(gci(g(1) true <M: Emit> false 1) 0)
		move(y(1) x(0))
		putConstant(nil x(1))
		genCall(gci(g(1) true <M: DoInits> false 2) 0)
		move(y(2) x(0))
		genCall(gci(g(1) true <M: EmitGuard> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(1) true <M: SaveRegisterMapping> false 1) 0)
		move(y(3) x(0))
		genCall(gci(g(1) true <M: EmitAddr> false 1) 0)
		move(y(0) x(0))
		deAllocateL5
		genCall(gci(g(1) true <M: RestoreRegisterMapping> true 1) 0)
lbl(141852)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(141715)
lbl(141865)	move(x(0) y(0))
		createVariableMove(y(2) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		createVariable(x(3))
		genFastCall(<P: 31> 8)
		move(y(4) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(3) x(0))
		putConstant(conditional x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(141660)
lbl(141905)	definition(x(9) 141964 pid('Emitter,EmitDisjunction/slow' 1 pos('./compiler/CodeEmitter.oz' 1541 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 957> 13)
		endDefinition(141905)
lbl(141964)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: EmitDisjunction>)
		setValue(x(9))
		setValue(x(7))
lbl(141974)	definition(x(7) 142281 pid('Emitter,EmitTestConstant/fast' 9 pos('./compiler/CodeEmitter.oz' 1568 6) nil 9) <Q: 958> [y(1)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		move(x(7) x(0))
		move(y(6) x(1))
		genCall(gci(g(0) true <M: DoInits> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: PrepareShared> false 2) 0)
		moveMoveYXYX(y(7) x(0) y(8) x(1))
		callBI('And' [x(0) x(1)]#[x(3)])
		move(y(6) x(0))
		move(x(3) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: MayAllocateEnvLocally> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		createVariable(y(9))
		testLiteral(y(8) none 142116)
lbl(142061)	getSelf(x(4))
		inlineDot(x(4) reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('undetermined variable used ')
		setConstant('as boolean guard')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(5) x(0))
		putConstant('code generation warning' x(2))
		putConstant('conditional suspends forever' x(3))
		sendMsg(warn x(4) [coord items kind msg] cache)
		moveMoveYXYX(y(1) x(0) y(9) x(1))
		genCall(gci(g(0) true <M: AllocateAndInitializeAnyTemp> false 2) 0)
		branch(142119)
lbl(142116)	unify(y(9) y(8))
lbl(142119)	move(y(6) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: PushContLabel> false 2) 0)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: Dereference> false 3) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		genCall(gci(g(0) true <M: DebugEntry> false 2) 0)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariable(x(3))
		marshalledFastCall(<R: tuple> 8)
		putList(x(4))
		setValue(y(8))
		setConstant(nil)
		putList(x(5))
		setValue(y(2))
		setValue(x(4))
		putList(x(1))
		setValue(y(9))
		setValue(x(5))
		move(y(0) x(0))
		putConstant(3 x(2))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: tuple> 8)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveAllRegisterMappings> false 1) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreAllRegisterMappings> false 1) 0)
		putRecord('lbl' 1 x(0))
		setValue(y(6))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		createVariableMove(y(0) x(0))
		genCall(gci(g(0) true <M: SaveRegisterMapping> false 1) 0)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: EmitAddrInLocalEnv> false 2) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: RestoreRegisterMapping> false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: PopContLabel> false 1) 0)
		move(y(5) x(0))
		putConstant(conditional x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: DebugExit> true 2) 0)
		endDefinition(141974)
lbl(142281)	definition(x(9) 142358 pid('Emitter,EmitTestConstant/slow' 1 pos('./compiler/CodeEmitter.oz' 1568 6) nil 10) unit nil)
		putConstant(9 x(9))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(9))
		inlineDot(x(0) 1 x(9) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		inlineDot(x(0) 8 x(7) cache)
		inlineDot(x(0) 9 x(8) cache)
		move(x(9) x(0))
		genFastCall(<Q: 958> 19)
		endDefinition(142281)
lbl(142358)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: EmitTestConstant>)
		setValue(x(9))
		setValue(x(7))
lbl(142368)	definition(x(7) 142593 pid('Emitter,DoInits/fast' 2 pos('./compiler/CodeEmitter.oz' 1603 6) nil 4) <Q: 959> [g(9) y(1)])
		allocateL2
		move(x(0) y(0))
		createVariable(y(1))
		testLiteral(x(1) nil 142426)
lbl(142384)	inlineAt(continuations x(1) cache)
		match(x(1) ht(142413 [onScalar(nil 142392) onRecord('|' 2 142397)]))
lbl(142392)	getLiteral(nil y(1))
		branch(142438)
lbl(142397)	getVariable(x(1))
		inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
		branch(142438)
lbl(142413)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1610)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(142426)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.toList' [x(1)]#[x(2)])
		unify(x(2) y(1))
lbl(142438)	getSelf(x(2))
lbl(142440)	definition(x(1) 142505 pid('' 1 pos('./compiler/CodeEmitter.oz' 1614 3) nil 2) unit [x(2) g(1)])
		allocateL3
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetPerm> false 2) 0)
		testLiteral(y(1) none 142501)
lbl(142465)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: GetTemp> false 2) 0)
		testLiteral(y(1) none 142480)
lbl(142478)	deAllocateL3
		return
lbl(142480)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142501)	deAllocateL3
		return
		endDefinition(142440)
lbl(142505)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		testLiteral(y(0) nil 142517)
lbl(142515)	deAllocateL2
		return
lbl(142517)	move(y(0) x(0))
		callBI('BitArray.toList' [x(0)]#[x(2)])
		getSelf(x(3))
lbl(142525)	definition(x(1) 142584 pid('' 1 pos('./compiler/CodeEmitter.oz' 1628 6) nil 2) unit [x(3) g(1)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: IsFirst> false 2) 0)
		testBool(y(1) 142569 142571)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(1) true <M: AllocatePerm> false 2) 0)
		putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL2
		genCall(gci(g(1) true <M: Emit> true 1) 0)
lbl(142569)	deAllocateL2
		return
lbl(142571)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1629)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142525)
lbl(142584)	move(x(2) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(142368)
lbl(142593)	definition(x(9) 142628 pid('Emitter,DoInits/slow' 1 pos('./compiler/CodeEmitter.oz' 1603 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 959> 5)
		endDefinition(142593)
lbl(142628)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: DoInits>)
		setValue(x(9))
		setValue(x(7))
lbl(142638)	definition(x(7) 142689 pid('Emitter,PrepareShared/fast' 2 pos('./compiler/CodeEmitter.oz' 1636 6) nil 6) <Q: 960> [y(1)])
		testRecord(x(0) vShared 4 142683)
lbl(142649)	getVoid(2)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		putConstant(1 x(2))
		testLT(x(2) x(4) x(5) 142677)
		getLiteral(false x(1))
		move(x(0) x(1))
		putConstant(nil x(0))
		genCall(gci(g(0) true <M: DoInits> true 2) 0)
lbl(142677)	move(x(3) x(0))
		genCall(gci(g(0) true <M: PrepareShared> true 2) 0)
lbl(142683)	getLiteral(true x(1))
		return
		endDefinition(142638)
lbl(142689)	definition(x(9) 142724 pid('Emitter,PrepareShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1636 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 960> 5)
		endDefinition(142689)
lbl(142724)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: PrepareShared>)
		setValue(x(9))
		setValue(x(7))
lbl(142734)	definition(x(7) 142802 pid('Emitter,PushContLabel/fast' 2 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) <Q: 961> [y(1)])
		allocateL2
		inlineAt(contLabels x(2) cache)
		unify(x(2) x(1))
		move(x(1) y(0))
		testLiteral(x(0) nil 142768)
lbl(142756)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBool(x(0) 142787 142789)
lbl(142768)	createVariableMove(y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		putList(x(0))
		setValue(y(1))
		setValue(y(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL2
		return
lbl(142787)	deAllocateL2
		return
lbl(142789)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1650)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(142734)
lbl(142802)	definition(x(9) 142837 pid('Emitter,PushContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1648 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 961> 5)
		endDefinition(142802)
lbl(142837)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: PushContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(142847)	definition(x(7) 142915 pid('Emitter,PopContLabel/fast' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) <Q: 962> [y(1)])
		allocateL1
		inlineAt(contLabels x(1) cache)
		move(x(0) y(0))
		testBI('\\=' [x(1) x(0)]#[x(2)] 142903)
lbl(142866)	inlineAt(contLabels x(1) cache)
		testList(x(1) 142890)
lbl(142874)	getVariable(x(1))
		putRecord('lbl' 1 x(2))
		setValue(x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		branch(142903)
lbl(142890)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1659)
		setValue(x(1))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(142903)	move(y(0) x(0))
		inlineAssign(contLabels x(0) cache)
		deAllocateL1
		return
		endDefinition(142847)
lbl(142915)	definition(x(9) 142941 pid('Emitter,PopContLabel/slow' 1 pos('./compiler/CodeEmitter.oz' 1654 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 962> 3)
		endDefinition(142915)
lbl(142941)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: PopContLabel>)
		setValue(x(9))
		setValue(x(7))
lbl(142951)	definition(x(7) 142985 pid('Emitter,Dereference/fast' 3 pos('./compiler/CodeEmitter.oz' 1663 6) nil 3) <Q: 963> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		genCall(gci(g(0) true newLabel false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
		endDefinition(142951)
lbl(142985)	definition(x(9) 143026 pid('Emitter,Dereference/slow' 1 pos('./compiler/CodeEmitter.oz' 1663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 963> 7)
		endDefinition(142985)
lbl(143026)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: Dereference>)
		setValue(x(9))
		setValue(x(7))
lbl(143036)	definition(x(7) 143129 pid('Emitter,DereferenceSub/fast' 3 pos('./compiler/CodeEmitter.oz' 1667 6) nil 5) <Q: 964> [y(1)])
		match(x(0) ht(143123 [onScalar(nil 143045) onRecord(vShared 4 143076)]))
lbl(143045)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143063 [onScalar(nil 143053) onRecord('|' 2 143057)]))
lbl(143053)	unify(x(2) x(1))
		return
lbl(143057)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(143063)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1673)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143076)	allocateL3
		getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(3))
		moveMoveXYXY(x(2) y(0) x(0) y(1))
		move(x(3) y(2))
		testLiteral(y(2) nil 143111)
lbl(143097)	inlineAt(contLabels x(4) cache)
		testLiteral(x(4) nil 143111)
lbl(143106)	unify(y(0) x(1))
		deAllocateL3
		return
lbl(143111)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: DereferenceSub> true 3) 0)
lbl(143123)	unify(x(2) x(1))
		return
		endDefinition(143036)
lbl(143129)	definition(x(9) 143170 pid('Emitter,DereferenceSub/slow' 1 pos('./compiler/CodeEmitter.oz' 1667 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 964> 7)
		endDefinition(143129)
lbl(143170)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: DereferenceSub>)
		setValue(x(9))
		setValue(x(7))
lbl(143180)	definition(x(7) 143208 pid('Emitter,DeallocateAndReturn/fast' 0 pos('./compiler/CodeEmitter.oz' 1684 6) nil 2) <Q: 965> [y(1)])
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('deAllocateL' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		putConstant('return' x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
		endDefinition(143180)
lbl(143208)	definition(x(9) 143222 pid('Emitter,DeallocateAndReturn/slow' 1 pos('./compiler/CodeEmitter.oz' 1684 6) nil 1) unit nil)
		getLiteral(<M: DeallocateAndReturn> x(0))
		genFastCall(<Q: 965> 1)
		endDefinition(143208)
lbl(143222)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: DeallocateAndReturn>)
		setValue(x(9))
		setValue(x(7))
lbl(143232)	definition(x(7) 143345 pid('Emitter,MayAllocateEnvLocally/fast' 3 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) <Q: 966> nil)
		inlineAt(<M: LocalEnvsInhibited> x(3) cache)
		testBool(x(3) 143251 143332)
		getLiteral(false x(2))
		return
lbl(143251)	allocateL1
		move(x(2) y(0))
		testBool(x(1) 143316 143321)
lbl(143259)	testLiteral(x(0) nil 143316)
lbl(143263)	inlineAt(contLabels x(0) cache)
		testLiteral(x(0) nil 143316)
lbl(143272)	inlineAt(<M: HighestEverY> x(0) cache)
		testNumber(x(0) ~1 143316)
lbl(143281)	getSelf(x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 143316)
lbl(143293)	putConstant(0 x(0))
		inlineAt(<M: LocalEnvSize> x(1) cache)
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		getLiteral(true y(0))
		deAllocateL1
		return
lbl(143316)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(143321)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1690)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(143332)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143232)
lbl(143345)	definition(x(9) 143386 pid('Emitter,MayAllocateEnvLocally/slow' 1 pos('./compiler/CodeEmitter.oz' 1688 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 966> 7)
		endDefinition(143345)
lbl(143386)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: MayAllocateEnvLocally>)
		setValue(x(9))
		setValue(x(7))
lbl(143396)	definition(x(7) 143492 pid('Emitter,EmitAddrInLocalEnv/fast' 2 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) <Q: 967> [y(1)])
		testBool(x(1) 143476 143479)
		allocateL1
		testRecord(x(0) vShared 4 143417)
lbl(143412)	genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> false 1) 0)
		branch(143443)
lbl(143417)	inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		genCall(gci(g(0) true <M: EmitAddr> false 1) 0)
lbl(143443)	inlineAt(<M: LocalEnvSize> x(0) cache)
		inlineAt(<M: HighestEverY> x(1) cache)
		inlinePlus1(x(1) x(2))
		unify(x(2) x(0))
		putConstant(~1 x(0))
		inlineAssign(<M: HighestEverY> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: LocalEnvSize> x(0) cache)
		deAllocateL1
		return
lbl(143476)	genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
lbl(143479)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1707)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(143396)
lbl(143492)	definition(x(9) 143527 pid('Emitter,EmitAddrInLocalEnv/slow' 1 pos('./compiler/CodeEmitter.oz' 1702 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 967> 5)
		endDefinition(143492)
lbl(143527)	putRecord('#' [1 2 fast] x(46))
		setConstant(<M: EmitAddrInLocalEnv>)
		setValue(x(9))
		setValue(x(7))
lbl(143537)	definition(x(7) 143680 pid('Emitter,EmitAddrInLocalEnvShared/fast' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 4) <Q: 968> [y(1) g(1) g(7)])
		testRecord(x(0) vShared 4 143650)
lbl(143548)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(1) nil 143595)
lbl(143560)	inlineAt(contLabels x(0) cache)
		match(x(0) ht(143582 [onScalar(nil 143568) onRecord('|' 2 143571)]))
lbl(143568)	genCall(gci(g(0) true <M: DeallocateAndReturn> true 0) 0)
lbl(143571)	getVariable(x(1))
		putRecord('branch' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143582)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1728)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(143595)	inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 143616)
		putRecord('branch' 1 x(1))
		setValue(x(0))
		move(x(1) x(0))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(143616)	allocateL1
		inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		putRecord('lbl' 1 x(2))
		setValue(x(0))
		move(x(1) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddrInLocalEnvShared> true 1) 0)
lbl(143650)	allocateL1
		inlineAt(<M: LocalEnvSize> x(1) cache)
		putRecord('allocateL' 1 x(2))
		setValue(x(1))
		move(x(0) y(0))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: Emit> false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: EmitAddr> true 1) 0)
		endDefinition(143537)
lbl(143680)	definition(x(9) 143706 pid('Emitter,EmitAddrInLocalEnvShared/slow' 1 pos('./compiler/CodeEmitter.oz' 1721 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 968> 3)
		endDefinition(143680)
lbl(143706)	putRecord('#' [1 2 fast] x(47))
		setConstant(<M: EmitAddrInLocalEnvShared>)
		setValue(x(9))
		setValue(x(7))
lbl(143716)	definition(x(7) 143748 pid('Emitter,IsFirst/fast' 2 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) <Q: 969> [y(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: GetReg> false 2) 0)
		move(y(1) x(0))
		putConstant(none x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(143716)
lbl(143748)	definition(x(9) 143783 pid('Emitter,IsFirst/slow' 1 pos('./compiler/CodeEmitter.oz' 1748 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 969> 5)
		endDefinition(143748)
lbl(143783)	putRecord('#' [1 2 fast] x(48))
		setConstant(<M: IsFirst>)
		setValue(x(9))
		setValue(x(7))
lbl(143793)	definition(x(7) 143845 pid('Emitter,IsLast/fast' 2 pos('./compiler/CodeEmitter.oz' 1751 6) nil 4) <Q: 970> [g(18)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 143813)
		getLiteral(false x(1))
		return
lbl(143813)	inlineAt(continuations x(2) cache)
		testList(x(2) 143839)
lbl(143821)	getVariable(x(2))
		inlineDot(x(2) 1 x(2) cache)
		callBI('BitArray.test' [x(2) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(1))
		return
lbl(143839)	getLiteral(true x(1))
		return
		endDefinition(143793)
lbl(143845)	definition(x(9) 143880 pid('Emitter,IsLast/slow' 1 pos('./compiler/CodeEmitter.oz' 1751 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 970> 5)
		endDefinition(143845)
lbl(143880)	putRecord('#' [1 2 fast] x(49))
		setConstant(<M: IsLast>)
		setValue(x(9))
		setValue(x(7))
lbl(143890)	definition(x(7) 143936 pid('Emitter,DoesNotOccurIn/fast' 3 pos('./compiler/CodeEmitter.oz' 1760 6) nil 5) <Q: 971> [g(18)])
		inlineAt(minReg x(3) cache)
		testLT(x(0) x(3) x(4) 143910)
		getLiteral(false x(2))
		return
lbl(143910)	testLiteral(x(1) nil 143918)
lbl(143914)	getLiteral(true x(2))
		return
lbl(143918)	inlineDot(x(1) 1 x(1) cache)
		callBI('BitArray.test' [x(1) x(0)]#[x(3)])
		callBI('Not' [x(3)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(143890)
lbl(143936)	definition(x(9) 143977 pid('Emitter,DoesNotOccurIn/slow' 1 pos('./compiler/CodeEmitter.oz' 1760 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 971> 7)
		endDefinition(143936)
lbl(143977)	putRecord('#' [1 2 fast] x(50))
		setConstant(<M: DoesNotOccurIn>)
		setValue(x(9))
		setValue(x(7))
lbl(143987)	definition(x(7) 144056 pid('Emitter,EmitInitialization/fast' 2 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) <Q: 972> [y(1)])
		match(x(0) ht(144041 [onRecord(vEquateNumber 4 143996) onRecord(vEquateLiteral 4 144011) onRecord(vGetSelf 3 144026)]))
lbl(143996)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144011)	getVoid(1)
		getVariable(x(2))
		putRecord('putConstant' 2 x(0))
		setValue(x(2))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144026)	getRecord(x 1 x(1))
		unifyVoid(1)
		putRecord('getSelf' 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(144041)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1776)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(143987)
lbl(144056)	definition(x(9) 144091 pid('Emitter,EmitInitialization/slow' 1 pos('./compiler/CodeEmitter.oz' 1769 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 972> 5)
		endDefinition(144056)
lbl(144091)	putRecord('#' [1 2 fast] x(51))
		setConstant(<M: EmitInitialization>)
		setValue(x(9))
		setValue(x(7))
lbl(144101)	definition(x(7) 144236 pid('Emitter,GetReg/fast' 2 pos('./compiler/CodeEmitter.oz' 1779 6) nil 5) <Q: 973> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144190 [onScalar(none 144121) onRecord(y 1 144182) onRecord(g 1 144186)]))
lbl(144121)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144167)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144167)	inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
lbl(144182)	unify(x(1) x(4))
		return
lbl(144186)	unify(x(1) x(4))
		return
lbl(144190)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		testRecord(y(1) vGetSelf 3 144222)
lbl(144217)	genCall(gci(g(3) true <M: PredictTemp> false 2) 0)
		branch(144225)
lbl(144222)	genCall(gci(g(3) true <M: PredictReg> false 2) 0)
lbl(144225)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144101)
lbl(144236)	definition(x(9) 144271 pid('Emitter,GetReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1779 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 973> 5)
		endDefinition(144236)
lbl(144271)	putRecord('#' [1 2 fast] x(52))
		setConstant(<M: GetReg>)
		setValue(x(9))
		setValue(x(7))
lbl(144281)	definition(x(7) 144404 pid('Emitter,GetPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1806 6) nil 5) <Q: 974> [g(2) g(7) g(10) y(1)])
		inlineAt(<M: Permanents> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144359 [onScalar(none 144301) onRecord(y 1 144351) onRecord(g 1 144355)]))
lbl(144301)	inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 144347)
		inlineAt(<M: HighestUsedG> x(2) cache)
		inlinePlus1(x(2) x(3))
		inlineAssign(<M: HighestUsedG> x(3) cache)
		inlineAt(<M: GRegRef> x(2) cache)
		callBI('Dictionary.put' [x(2) x(3) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		getRecord(g 1 x(1))
		unifyValue(x(3))
		callBI('Dictionary.put' [x(2) x(0) x(1)]#nil)
		return
lbl(144347)	getLiteral(none x(1))
		return
lbl(144351)	unify(x(1) x(4))
		return
lbl(144355)	unify(x(1) x(4))
		return
lbl(144359)	testRecord(x(4) vGetSelf 3 144368)
lbl(144364)	getLiteral(none x(1))
		return
lbl(144368)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(3) true <M: AllocatePerm> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(3) true <M: EmitInitialization> true 2) 0)
		endDefinition(144281)
lbl(144404)	definition(x(9) 144439 pid('Emitter,GetPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1806 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 974> 5)
		endDefinition(144404)
lbl(144439)	putRecord('#' [1 2 fast] x(53))
		setConstant(<M: GetPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(144449)	definition(x(7) 144513 pid('Emitter,GetTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1829 6) nil 5) <Q: 975> [g(2) g(10) y(1)])
		inlineAt(<M: Temporaries> x(2) cache)
		putConstant(none x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		match(x(4) ht(144477 [onScalar(none 144469) onRecord(x 1 144473)]))
lbl(144469)	getLiteral(none x(1))
		return
lbl(144473)	unify(x(1) x(4))
		return
lbl(144477)	allocateL2
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		inlineAt(<M: Permanents> x(2) cache)
		callBI('Dictionary.remove' [x(2) x(0)]#nil)
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		genCall(gci(g(2) true <M: PredictTemp> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(2) true <M: EmitInitialization> true 2) 0)
		endDefinition(144449)
lbl(144513)	definition(x(9) 144548 pid('Emitter,GetTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1829 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 975> 5)
		endDefinition(144513)
lbl(144548)	putRecord('#' [1 2 fast] x(54))
		setConstant(<M: GetTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144558)	definition(x(7) 144629 pid('Emitter,ReserveTemps/fast' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 4) <Q: 976> nil)
		inlineAt(<M: HighestEverX> x(1) cache)
		testLE(x(0) x(1) x(2) 144613)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(1) x(0) x(2) 144612)
		allocateL1
		inlineAt(<M: UsedX> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 925> 6)
		move(y(0) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		deAllocateL1
		return
lbl(144612)	return
lbl(144613)	inlineMinus1(x(0) x(1))
		inlineAssign(<M: HighestEverX> x(1) cache)
		inlineAssign(<M: LowestFreeX> x(0) cache)
		return
		endDefinition(144558)
lbl(144629)	definition(x(9) 144655 pid('Emitter,ReserveTemps/slow' 1 pos('./compiler/CodeEmitter.oz' 1842 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 976> 3)
		endDefinition(144629)
lbl(144655)	putRecord('#' [1 2 fast] x(55))
		setConstant(<M: ReserveTemps>)
		setValue(x(9))
		setValue(x(7))
lbl(144665)	definition(x(7) 144780 pid('Emitter,AllocateAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1855 6) nil 4) <Q: 977> [y(1) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 144773)
lbl(144687)	inlineAt(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(1))
		move(x(0) y(2))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		inlineAt(<M: HighestEverX> x(0) cache)
		move(y(2) x(1))
		testLT(x(0) x(1) x(2) 144738)
lbl(144733)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(144738)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(144773)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(144665)
lbl(144780)	definition(x(9) 144815 pid('Emitter,AllocateAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1855 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 977> 5)
		endDefinition(144780)
lbl(144815)	putRecord('#' [1 2 fast] x(56))
		setConstant(<M: AllocateAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144825)	definition(x(7) 144932 pid('Emitter,AllocateThisTemp/fast' 3 pos('./compiler/CodeEmitter.oz' 1867 6) nil 5) <Q: 978> [g(7)])
		allocateL4
		inlineAt(<M: LowestFreeX> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBI('==' [x(3) x(0)]#[x(4)] 144877)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(144877)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		testLT(x(0) x(1) x(2) 144895)
lbl(144890)	inlineAssign(<M: HighestEverX> x(1) cache)
lbl(144895)	inlineAt(<M: Temporaries> x(0) cache)
		getRecord(x 1 y(2))
		unifyValue(y(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(144825)
lbl(144932)	definition(x(9) 144973 pid('Emitter,AllocateThisTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1867 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 978> 7)
		endDefinition(144932)
lbl(144973)	putRecord('#' [1 2 fast] x(57))
		setConstant(<M: AllocateThisTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(144983)	definition(x(7) 145005 pid('Emitter,AllocateShortLivedTemp/fast' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) <Q: 979> [y(1)])
		inlineAt(<M: LowestFreeX> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genCall(gci(g(0) true <M: AllocateThisShortLivedTemp> true 2) 0)
		endDefinition(144983)
lbl(145005)	definition(x(9) 145031 pid('Emitter,AllocateShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1878 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 979> 3)
		endDefinition(145005)
lbl(145031)	putRecord('#' [1 2 fast] x(58))
		setConstant(<M: AllocateShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145041)	definition(x(7) 145163 pid('Emitter,AllocateThisShortLivedTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1881 6) nil 5) <Q: 980> [g(7)])
		allocateL3
		inlineAt(<M: LowestFreeX> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testBI('==' [x(2) x(0)]#[x(3)] 145090)
		inlineAt(<M: UsedX> x(3) cache)
		inlinePlus1(x(0) x(4))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(145090)	inlineAt(<M: HighestEverX> x(0) cache)
		move(y(0) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145123 145112)
		inlineAssign(<M: HighestEverX> x(1) cache)
		branch(145123)
lbl(145112)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1886)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145123)	inlineAt(<M: UsedX> x(0) cache)
		move(y(0) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(x 1 y(1))
		unifyValue(y(0))
		inlineAt(<M: ShortLivedTemps> x(0) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(<M: ShortLivedTemps> x(2) cache)
		deAllocateL3
		return
		endDefinition(145041)
lbl(145163)	definition(x(9) 145198 pid('Emitter,AllocateThisShortLivedTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1881 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 980> 5)
		endDefinition(145163)
lbl(145198)	putRecord('#' [1 2 fast] x(59))
		setConstant(<M: AllocateThisShortLivedTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145208)	definition(x(7) 145280 pid('Emitter,AllocateAndInitializeAnyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1893 6) nil 2) <Q: 981> [y(1)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetTemp> false 2) 0)
		testLiteral(y(2) none 145273)
lbl(145230)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145261)
lbl(145251)	putRecord('createVariable' 1 x(0))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145261)	putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(1))
		deAllocateL3
		genCall(gci(g(0) true <M: Emit> true 1) 0)
lbl(145273)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145208)
lbl(145280)	definition(x(9) 145315 pid('Emitter,AllocateAndInitializeAnyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1893 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 981> 5)
		endDefinition(145280)
lbl(145315)	putRecord('#' [1 2 fast] x(60))
		setConstant(<M: AllocateAndInitializeAnyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145325)	definition(x(7) 145439 pid('Emitter,AllocateUnnamedPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1904 6) nil 4) <Q: 982> [y(1) g(7)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145432)
lbl(145347)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(1) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: HighestEverY> x(0) cache)
		testLT(x(0) x(1) x(2) 145397)
		inlineAssign(<M: HighestEverY> x(1) cache)
lbl(145397)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL3
		return
lbl(145432)	unify(y(1) y(2))
		deAllocateL3
		return
		endDefinition(145325)
lbl(145439)	definition(x(9) 145474 pid('Emitter,AllocateUnnamedPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1904 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 982> 5)
		endDefinition(145439)
lbl(145474)	putRecord('#' [1 2 fast] x(61))
		setConstant(<M: AllocateUnnamedPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145484)	definition(x(7) 145781 pid('Emitter,AllocatePerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1917 6) nil 5) <Q: 983> [y(1) g(2) g(7)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: GetPerm> false 2) 0)
		testLiteral(y(2) none 145774)
lbl(145506)	getSelf(x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(0) cache)
		createVariable(y(2))
		testBool(x(0) 145657 145695)
		inlineAt(regNames x(0) cache)
		move(y(0) x(1))
		putConstant('' x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) '' 145578)
lbl(145538)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 927> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		move(y(2) x(1))
		putConstant('' x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		branch(145618)
lbl(145578)	inlineAt(<M: UsedY> x(0) cache)
		inlineAt(<M: LocalVarnames> x(4) cache)
		inlineAt(<M: LowestFreeY> x(2) cache)
		move(x(3) y(3))
		move(x(4) x(1))
		move(y(2) x(3))
		genFastCall(<Q: 926> 8)
		inlineAt(<M: LocalVarnames> x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
lbl(145618)	inlineAt(<M: LowestFreeY> x(0) cache)
		move(y(2) x(1))
		testBI('==' [x(1) x(0)]#[x(2)] 145706)
		inlineAt(<M: UsedY> x(0) cache)
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145706)
lbl(145657)	inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) y(2))
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		inlinePlus1(x(1) x(3))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		move(y(3) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		branch(145706)
lbl(145695)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1919)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145706)	inlineAt(<M: HighestEverY> x(0) cache)
		move(y(2) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		testBool(x(2) 145739 145728)
		inlineAssign(<M: HighestEverY> x(1) cache)
		branch(145739)
lbl(145728)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1936)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(145739)	inlineAt(<M: Permanents> x(0) cache)
		getRecord(y 1 y(1))
		unifyValue(y(2))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		inlineAt(<M: UsedY> x(0) cache)
		move(y(2) x(1))
		putConstant(1 x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(145774)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(145484)
lbl(145781)	definition(x(9) 145816 pid('Emitter,AllocatePerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1917 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 983> 5)
		endDefinition(145781)
lbl(145816)	putRecord('#' [1 2 fast] x(62))
		setConstant(<M: AllocatePerm>)
		setValue(x(9))
		setValue(x(7))
lbl(145826)	definition(x(7) 145868 pid('Emitter,CopyTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 1944 6) nil 6) <Q: 984> [g(7) g(5)])
		getRecord(x 1 x(0))
		unifyVariable(x(2))
		inlineAt(<M: UsedX> x(3) cache)
		inlineAt(<M: UsedX> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		inlineAt(<M: Temporaries> x(2) cache)
		callBI('Dictionary.put' [x(2) x(1) x(0)]#nil)
		return
		endDefinition(145826)
lbl(145868)	definition(x(9) 145903 pid('Emitter,CopyTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 1944 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 984> 5)
		endDefinition(145868)
lbl(145903)	putRecord('#' [1 2 fast] x(63))
		setConstant(<M: CopyTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(145913)	definition(x(7) 145983 pid('Emitter,CopyPerm/fast' 2 pos('./compiler/CodeEmitter.oz' 1948 6) nil 6) <Q: 985> [g(7) g(5)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(145953 [onRecord(y 1 145928) onRecord(g 1 145951)]))
lbl(145928)	getVariable(x(2))
		inlineAt(<M: UsedY> x(3) cache)
		inlineAt(<M: UsedY> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlinePlus1(x(5) x(4))
		callBI('Dictionary.put' [x(3) x(2) x(4)]#nil)
		branch(145966)
lbl(145951)	branch(145966)
lbl(145953)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1952)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(145966)	inlineAt(<M: Permanents> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
		endDefinition(145913)
lbl(145983)	definition(x(9) 146018 pid('Emitter,CopyPerm/slow' 1 pos('./compiler/CodeEmitter.oz' 1948 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 985> 5)
		endDefinition(145983)
lbl(146018)	putRecord('#' [1 2 fast] x(64))
		setConstant(<M: CopyPerm>)
		setValue(x(9))
		setValue(x(7))
lbl(146028)	definition(x(7) 146112 pid('Emitter,FreeReg/fast' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 4) <Q: 986> [g(2) y(1) g(10)])
		allocateL1
		inlineAt(<M: Temporaries> x(1) cache)
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		move(x(0) y(0))
		testRecord(x(3) x 1 146073)
lbl(146054)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(1) true <M: FreeX> false 1) 0)
		inlineAt(<M: Temporaries> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146073)	inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		putConstant(none x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testRecord(x(3) y 1 146108)
lbl(146092)	getVariable(x(0))
		genCall(gci(g(1) true <M: FreeY> false 1) 0)
		inlineAt(<M: Permanents> x(0) cache)
		move(y(0) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
lbl(146108)	deAllocateL1
		return
		endDefinition(146028)
lbl(146112)	definition(x(9) 146138 pid('Emitter,FreeReg/slow' 1 pos('./compiler/CodeEmitter.oz' 1955 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 986> 3)
		endDefinition(146112)
lbl(146138)	putRecord('#' [1 2 fast] x(65))
		setConstant(<M: FreeReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146148)	definition(x(7) 146207 pid('Emitter,FreeX/fast' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 4) <Q: 987> [g(2) g(10) g(7)])
		inlineAt(<M: UsedX> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146193 [onScalar(0 146168) onScalar(1 146169)]))
lbl(146168)	return
lbl(146169)	inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeX> x(1) cache)
		testLT(x(0) x(1) x(2) 146192)
		inlineAssign(<M: LowestFreeX> x(0) cache)
lbl(146192)	return
lbl(146193)	inlineAt(<M: UsedX> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146148)
lbl(146207)	definition(x(9) 146233 pid('Emitter,FreeX/slow' 1 pos('./compiler/CodeEmitter.oz' 1967 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 987> 3)
		endDefinition(146207)
lbl(146233)	putRecord('#' [1 2 fast] x(66))
		setConstant(<M: FreeX>)
		setValue(x(9))
		setValue(x(7))
lbl(146243)	definition(x(7) 146302 pid('Emitter,FreeY/fast' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 4) <Q: 988> [g(2) g(10) g(7)])
		inlineAt(<M: UsedY> x(1) cache)
		putConstant(0 x(2))
		callBI('Dictionary.condGet' [x(1) x(0) x(2)]#[x(3)])
		match(x(3) ht(146288 [onScalar(0 146263) onScalar(1 146264)]))
lbl(146263)	return
lbl(146264)	inlineAt(<M: UsedY> x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(<M: LowestFreeY> x(1) cache)
		testLT(x(0) x(1) x(2) 146287)
		inlineAssign(<M: LowestFreeY> x(0) cache)
lbl(146287)	return
lbl(146288)	inlineAt(<M: UsedY> x(1) cache)
		inlineMinus1(x(3) x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(146243)
lbl(146302)	definition(x(9) 146328 pid('Emitter,FreeY/slow' 1 pos('./compiler/CodeEmitter.oz' 1978 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 988> 3)
		endDefinition(146302)
lbl(146328)	putRecord('#' [1 2 fast] x(67))
		setConstant(<M: FreeY>)
		setValue(x(9))
		setValue(x(7))
lbl(146338)	definition(x(7) 146420 pid('Emitter,PredictBuiltinOutput/fast' 2 pos('./compiler/CodeEmitter.oz' 1990 6) nil 4) <Q: 989> [y(1) g(3)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146405 [onScalar(nil 146352) onRecord('|' 2 146358)]))
lbl(146352)	move(x(1) x(0))
		genCall(gci(g(0) true <M: AllocateShortLivedTemp> true 1) 0)
lbl(146358)	allocateL3
		getVariable(y(0))
		move(y(0) x(2))
		inlineDot(x(2) 1 x(3) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: LetDie> false 1) 0)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		callBI('BitArray.set' [x(0) x(1)]#nil)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictTemp> true 2) 0)
lbl(146405)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2001)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146338)
lbl(146420)	definition(x(9) 146455 pid('Emitter,PredictBuiltinOutput/slow' 1 pos('./compiler/CodeEmitter.oz' 1990 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 989> 5)
		endDefinition(146420)
lbl(146455)	putRecord('#' [1 2 fast] x(68))
		setConstant(<M: PredictBuiltinOutput>)
		setValue(x(9))
		setValue(x(7))
lbl(146465)	definition(x(7) 146532 pid('Emitter,PredictTemp/fast' 2 pos('./compiler/CodeEmitter.oz' 2003 6) nil 4) <Q: 990> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146517 [onScalar(nil 146479) onRecord('|' 2 146482)]))
lbl(146479)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146482)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146512)
lbl(146503)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146512)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146517)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2014)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146465)
lbl(146532)	definition(x(9) 146567 pid('Emitter,PredictTemp/slow' 1 pos('./compiler/CodeEmitter.oz' 2003 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 990> 5)
		endDefinition(146532)
lbl(146567)	putRecord('#' [1 2 fast] x(69))
		setConstant(<M: PredictTemp>)
		setValue(x(9))
		setValue(x(7))
lbl(146577)	definition(x(7) 146644 pid('Emitter,PredictReg/fast' 2 pos('./compiler/CodeEmitter.oz' 2016 6) nil 4) <Q: 991> [y(1)])
		inlineAt(continuations x(2) cache)
		match(x(2) ht(146629 [onScalar(nil 146591) onRecord('|' 2 146594)]))
lbl(146591)	genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146594)	allocateL3
		getVariable(x(3))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: PredictRegSub> false 3) 0)
		testLiteral(y(2) anyperm 146624)
lbl(146615)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true <M: AllocatePerm> true 2) 0)
lbl(146624)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(146629)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2025)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(146577)
lbl(146644)	definition(x(9) 146679 pid('Emitter,PredictReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2016 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 991> 5)
		endDefinition(146644)
lbl(146679)	putRecord('#' [1 2 fast] x(70))
		setConstant(<M: PredictReg>)
		setValue(x(9))
		setValue(x(7))
lbl(146689)	definition(x(7) 147627 pid('Emitter,PredictRegSub/fast' 3 pos('./compiler/CodeEmitter.oz' 2027 6) nil 11) <Q: 992> [y(1) y(2)])
		match(x(1) ht(147607 [onScalar(nil 146698) onRecord(vMakePermanent 3 146704) onRecord(vEquateLiteral 4 146753) onRecord(vEquateRecord 6 146915) onRecord(vCallBuiltin 5 147080) onRecord(vGenCall 8 147136) onRecord(vCall 5 147156) onRecord(vFastCall 5 147174) onRecord(vApplMeth 7 147194) onRecord(vShared 4 147214) onRecord(vExHandler 7 147220) onRecord(vCreateCond 7 147250) onRecord(vCreateOr 6 147253) onRecord(vCreateEnumOr 6 147256) onRecord(vCreateChoice 6 147259) onRecord(vAsk 2 147262) onRecord(vWait 2 147269) onRecord(vWaitTop 2 147276) onRecord(vShallowGuard 8 147283) onRecord(vTestBool 8 147331) onRecord(vTestNumber 8 147376) onRecord(vTestLiteral 8 147413) onRecord(vMatch 7 147450) onRecord(vThread 5 147550) onRecord(vLockThread 5 147570) onRecord(vLockEnd 4 147594) onRecord(vDummy 1 147601)]))
lbl(146698)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(146704)	allocateL4
		getVoid(1)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 146730 146742)
		getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(146730)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(146742)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2032)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(146753)	allocateL4
		getVoid(2)
		getVarVar(x(1) y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) vCall 5 146806)
lbl(146772)	getVoid(1)
		getVarVar(x(3) x(4))
		getVoid(1)
		getVariable(x(5))
		shallowGuard(146806)
		getList(x(4))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146789)	shallowThen
		move(x(3) x(1))
		move(x(5) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146806)	testRecord(y(0) vGenCall 8 146851)
lbl(146811)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(146851)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146835)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146851)	testRecord(y(0) vCallBuiltin 5 146903)
lbl(146856)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(146903)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(146886)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		move(y(2) x(4))
		putConstant(nil x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146903)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(146915)	allocateL5
		getVoid(3)
		getVarVar(x(1) x(3))
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testRecord(y(0) vCall 5 146972)
lbl(146938)	getVoid(1)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVariable(x(6))
		shallowGuard(146972)
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(146955)	shallowThen
		move(x(4) x(1))
		move(y(4) x(2))
		move(x(6) x(3))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(146972)	testRecord(y(0) vGenCall 8 147017)
lbl(146977)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(2)
		getVariable(x(2))
		getVoid(1)
		getVariable(x(3))
		shallowGuard(147017)
		getLiteral(false x(1))
		getList(x(2))
		unifyValue(y(3))
		unifyLiteral(nil)
lbl(147001)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(4) x(2))
		move(y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147017)	testRecord(y(0) vCallBuiltin 5 147068)
lbl(147022)	getVoid(1)
		getVarVar(x(0) x(1))
		getVoid(1)
		getVariable(x(2))
		shallowGuard(147068)
		getLiteral('New' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getListValVar(x(0) y(3) x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(147052)	shallowThen
		move(y(1) x(0))
		move(x(2) x(3))
		moveMoveYXYX(y(4) x(2) y(2) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147068)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147080)	allocateL4
		getVoid(2)
		getVariable(x(1))
		getVoid(1)
		getVariable(y(0))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 147113 147125)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147113)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147125)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2058)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(147136)	getVoid(5)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147156)	getVoid(1)
		getVarVar(x(1) x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147174)	getVoid(2)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147194)	getVoid(4)
		getVariable(x(5))
		getVoid(1)
		getVariable(x(3))
		move(x(2) x(4))
		move(x(5) x(2))
		putConstant(~1 x(1))
		genCall(gci(g(0) true <M: PredictRegForCall> true 5) 0)
lbl(147214)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147220)	getVoid(1)
		getVariable(x(4))
		getVoid(3)
		getVarVar(x(5) x(1))
		putList(x(3))
		setValue(x(5))
		setConstant(nil)
		putList(x(6))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(6) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147250)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147253)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147256)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147259)	genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147262)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147269)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147276)	getVoid(1)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147283)	getVoid(1)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVariable(x(7))
		getVoid(1)
		getVariable(x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147331)	getVoid(2)
		getVarVar(x(4) x(5))
		getVariable(x(6))
		getVoid(1)
		getVarVar(x(7) x(1))
		putList(x(10))
		setValue(x(7))
		setConstant(nil)
		putList(x(9))
		setValue(x(6))
		setValue(x(10))
		putList(x(3))
		setValue(x(5))
		setValue(x(9))
		putList(x(8))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(8) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147376)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147413)	getVoid(3)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) x(1))
		putList(x(8))
		setValue(x(6))
		setConstant(nil)
		putList(x(3))
		setValue(x(5))
		setValue(x(8))
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		move(x(2) x(3))
		move(x(7) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147450)	allocateL4
		getVoid(2)
		getVarVar(x(4) x(5))
		getVoid(1)
		getVarVar(x(6) y(0))
lbl(147461)	definition(x(1) 147507 pid('' 3 pos('./compiler/CodeEmitter.oz' 2103 7) nil 3) unit nil)
		match(x(0) ht(147492 [onRecord('onScalar' 2 147470) onRecord('onRecord' 3 147481)]))
lbl(147470)	getVoid(1)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147481)	getVoid(2)
		getVariable(x(0))
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(147492)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(147461)
lbl(147507)	putList(x(3))
		setValue(x(6))
		setConstant(nil)
		putList(x(7))
		setValue(x(4))
		setValue(x(3))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(5) x(0))
		move(x(7) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 32> 8)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147550)	getVoid(3)
		getVarVar(x(4) x(1))
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(2) x(3))
		move(x(5) x(2))
		genCall(gci(g(0) true <M: PredictRegForInits> true 4) 0)
lbl(147570)	getVoid(1)
		getVariable(x(1))
		getVoid(1)
		getVariable(x(3))
		testBI('==' [x(0) x(1)]#[x(4)] 147588)
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147588)	move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(147594)	getVoid(2)
		getVariable(x(1))
		genCall(gci(g(0) true <M: PredictPermReg> true 3) 0)
lbl(147601)	move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(147607)	callBI('Label' [x(1)]#[x(3)])
		move(g(1) x(4))
		callBI('.' [x(4) x(3)]#[x(5)])
		callBI('.' [x(1) x(5)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
		endDefinition(146689)
lbl(147627)	definition(x(9) 147668 pid('Emitter,PredictRegSub/slow' 1 pos('./compiler/CodeEmitter.oz' 2027 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 992> 7)
		endDefinition(147627)
lbl(147668)	putRecord('#' [1 2 fast] x(71))
		setConstant(<M: PredictRegSub>)
		setValue(x(9))
		setValue(x(7))
lbl(147678)	definition(x(7) 147841 pid('Emitter,PredictArgReg/fast' 5 pos('./compiler/CodeEmitter.oz' 2127 6) nil 8) <Q: 993> [y(1) g(18) g(1)])
		match(x(1) ht(147826 [onScalar(nil 147687) onRecord('|' 2 147741)]))
lbl(147687)	allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) y(2))
		testLiteral(x(3) nil 147726)
lbl(147700)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147726)	inlineDot(x(3) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 147700)
lbl(147736)	getLiteral(anyperm y(2))
		deAllocateL4
		return
lbl(147741)	allocateL5
		getVarVar(x(1) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('==' [x(1) x(0)]#[x(6)] 147803)
lbl(147762)	inlineAt(<M: UsedX> x(0) cache)
		move(y(1) x(1))
		testBI('Dictionary.member' [x(0) x(1)]#[x(2)] 147791)
		inlinePlus1(x(1) x(2))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147791)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147803)	putRecord(value 1 x(6))
		setValue(y(0))
		testBI('\\=' [x(1) x(6)]#[x(7)] 147762)
lbl(147813)	inlinePlus1(x(2) x(6))
		move(y(4) x(1))
		move(x(6) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147826)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2145)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(147678)
lbl(147841)	definition(x(9) 147894 pid('Emitter,PredictArgReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2127 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 993> 11)
		endDefinition(147841)
lbl(147894)	putRecord('#' [1 2 fast] x(72))
		setConstant(<M: PredictArgReg>)
		setValue(x(9))
		setValue(x(7))
lbl(147904)	definition(x(7) 148008 pid('Emitter,PredictRegForCall/fast' 5 pos('./compiler/CodeEmitter.oz' 2147 6) nil 7) <Q: 994> [y(1) g(18)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testLiteral(y(3) nil 147991)
lbl(147928)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		testBI('==' [x(0) x(1)]#[x(2)] 147976)
		inlineAt(<M: UsedX> x(1) cache)
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 925> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(4) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: AllocateThisTemp> true 3) 0)
lbl(147976)	moveMoveYXYX(y(2) x(1) y(3) x(3))
		move(y(4) x(4))
		putConstant(0 x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: PredictArgReg> true 5) 0)
lbl(147991)	inlineDot(x(3) 1 x(5) cache)
		testBI('BitArray.test' [x(5) x(0)]#[x(6)] 147928)
lbl(148001)	getLiteral(anyperm y(4))
		deAllocateL5
		return
		endDefinition(147904)
lbl(148008)	definition(x(9) 148061 pid('Emitter,PredictRegForCall/slow' 1 pos('./compiler/CodeEmitter.oz' 2147 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 994> 11)
		endDefinition(148008)
lbl(148061)	putRecord('#' [1 2 fast] x(73))
		setConstant(<M: PredictRegForCall>)
		setValue(x(9))
		setValue(x(7))
lbl(148071)	definition(x(7) 148099 pid('Emitter,PredictRegForInits/fast' 4 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) <Q: 995> [g(18) y(1)])
		testBI('BitArray.test' [x(1) x(0)]#[x(4)] 148085)
		getLiteral(anyperm x(3))
		return
lbl(148085)	move(x(0) x(1))
		move(x(2) x(0))
		move(x(3) x(2))
		genCall(gci(g(1) true <M: PredictRegForBranches> true 3) 0)
		endDefinition(148071)
lbl(148099)	definition(x(9) 148146 pid('Emitter,PredictRegForInits/slow' 1 pos('./compiler/CodeEmitter.oz' 2157 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 995> 9)
		endDefinition(148099)
lbl(148146)	putRecord('#' [1 2 fast] x(74))
		setConstant(<M: PredictRegForInits>)
		setValue(x(9))
		setValue(x(7))
lbl(148156)	definition(x(7) 148237 pid('Emitter,PredictRegForBranches/fast' 3 pos('./compiler/CodeEmitter.oz' 2164 6) nil 6) <Q: 996> [y(1) g(18)])
		match(x(0) ht(148222 [onScalar(nil 148165) onRecord('|' 2 148174)]))
lbl(148165)	move(x(1) x(0))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148174)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) nil 148202)
lbl(148190)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegForBranches> true 3) 0)
lbl(148202)	inlineDot(x(0) 1 x(4) cache)
		testBI('BitArray.test' [x(4) x(1)]#[x(5)] 148190)
lbl(148212)	move(x(0) x(1))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(0) true <M: PredictRegSub> true 3) 0)
lbl(148222)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2173)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(148156)
lbl(148237)	definition(x(9) 148278 pid('Emitter,PredictRegForBranches/slow' 1 pos('./compiler/CodeEmitter.oz' 2164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 996> 7)
		endDefinition(148237)
lbl(148278)	putRecord('#' [1 2 fast] x(75))
		setConstant(<M: PredictRegForBranches>)
		setValue(x(9))
		setValue(x(7))
lbl(148288)	definition(x(7) 148330 pid('Emitter,PredictPermReg/fast' 3 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) <Q: 997> [y(1) g(18)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testLiteral(x(1) nil 148313)
lbl(148304)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AllocateAnyTemp> true 2) 0)
lbl(148313)	inlineDot(x(1) 1 x(1) cache)
		testBI('BitArray.test' [x(1) x(0)]#[x(3)] 148304)
lbl(148323)	getLiteral(anyperm y(1))
		deAllocateL2
		return
		endDefinition(148288)
lbl(148330)	definition(x(9) 148371 pid('Emitter,PredictPermReg/slow' 1 pos('./compiler/CodeEmitter.oz' 2175 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 997> 7)
		endDefinition(148330)
lbl(148371)	putRecord('#' [1 2 fast] x(76))
		setConstant(<M: PredictPermReg>)
		setValue(x(9))
		setValue(x(7))
lbl(148381)	definition(x(7) 148461 pid('Emitter,SaveRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 7) <Q: 998> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 5 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		inlineAt(<M: Permanents> x(5) cache)
		callBI('Dictionary.clone' [x(5)]#[x(6)])
		unify(x(6) x(0))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(5)])
		unify(x(5) x(1))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(2))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(4))
		deAllocateL1
		return
		endDefinition(148381)
lbl(148461)	definition(x(9) 148487 pid('Emitter,SaveRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2183 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 998> 3)
		endDefinition(148461)
lbl(148487)	putRecord('#' [1 2 fast] x(77))
		setConstant(<M: SaveRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148497)	definition(x(7) 148605 pid('Emitter,RestoreRegisterMapping/fast' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 6) <Q: 999> [g(7) g(5) y(1)])
		allocateL2
		getRecord('#' 5 x(0))
		unifyVariable(x(4))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(x(5))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(5) cache)
		inlineAssign(<M: Permanents> x(4) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148538)	definition(x(3) 148574 pid('' 1 pos('./compiler/CodeEmitter.oz' 2195 3) nil 5) unit [x(5) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148538)
lbl(148574)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		deAllocateL2
		genCall(gci(g(2) true <M: KillAllTemporaries> true 0) 0)
		endDefinition(148497)
lbl(148605)	definition(x(9) 148631 pid('Emitter,RestoreRegisterMapping/slow' 1 pos('./compiler/CodeEmitter.oz' 2188 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 999> 3)
		endDefinition(148605)
lbl(148631)	putRecord('#' [1 2 fast] x(78))
		setConstant(<M: RestoreRegisterMapping>)
		setValue(x(9))
		setValue(x(7))
lbl(148641)	definition(x(7) 148757 pid('Emitter,SaveAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 10) <Q: 1000> [y(1) g(19) g(17)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FlushShortLivedTemps> false 0) 0)
		getRecord('#' 8 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		inlineAt(<M: Temporaries> x(8) cache)
		callBI('Dictionary.clone' [x(8)]#[x(9)])
		unify(x(9) x(0))
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(8)])
		unify(x(8) x(1))
		inlineAt(<M: Permanents> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.clone' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineAt(<M: LowestFreeX> x(0) cache)
		unify(x(0) x(4))
		inlineAt(<M: LowestFreeY> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: LastAliveRS> x(0) cache)
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineAt(<M: HighestUsedG> x(0) cache)
		unify(x(0) x(7))
		deAllocateL1
		return
		endDefinition(148641)
lbl(148757)	definition(x(9) 148783 pid('Emitter,SaveAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2202 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1000> 3)
		endDefinition(148757)
lbl(148783)	putRecord('#' [1 2 fast] x(79))
		setConstant(<M: SaveAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(148793)	definition(x(7) 148963 pid('Emitter,RestoreAllRegisterMappings/fast' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 8) <Q: 1001> [g(6) g(7) g(5)])
		allocateL3
		getRecord('#' 8 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(x(7))
		unifyVariable(x(0))
		inlineAssign(<M: LastAliveRS> x(7) cache)
		inlineAt(<M: Temporaries> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Temporaries> x(4) cache)
		inlineAt(<M: UsedX> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: UsedX> x(5) cache)
		inlineAt(<M: Permanents> x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		inlineAssign(<M: Permanents> x(6) cache)
		inlinePlus1(x(0) x(4))
		inlineAt(<M: HighestUsedG> x(1) cache)
		getSelf(x(5))
lbl(148874)	definition(x(3) 148910 pid('' 1 pos('./compiler/CodeEmitter.oz' 2221 3) nil 5) unit [x(5) g(1) g(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: Permanents> x(2) cache)
		inlineAt(<M: GRegRef> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		putRecord(g 1 x(3))
		setValue(x(0))
		callBI('Dictionary.put' [x(2) x(4) x(3)]#nil)
		return
		endDefinition(148874)
lbl(148910)	move(x(4) x(0))
		putConstant(1 x(2))
		genFastCall(<P: 100> 8)
		inlineAt(<M: UsedY> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		move(y(0) x(0))
		inlineAssign(<M: UsedY> x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: LowestFreeY> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		deAllocateL3
		return
		endDefinition(148793)
lbl(148963)	definition(x(9) 148989 pid('Emitter,RestoreAllRegisterMappings/slow' 1 pos('./compiler/CodeEmitter.oz' 2208 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1001> 3)
		endDefinition(148963)
lbl(148989)	putRecord('#' [1 2 fast] x(80))
		setConstant(<M: RestoreAllRegisterMappings>)
		setValue(x(9))
		setValue(x(7))
lbl(148999)	definition(x(7) 149069 pid('Emitter,KillAllTemporaries/fast' 0 pos('./compiler/CodeEmitter.oz' 2230 6) nil 3) <Q: 1002> [g(20) g(5) g(10) g(6)])
		inlineAt(<M: Temporaries> x(0) cache)
		callBI('Dictionary.keys' [x(0)]#[x(2)])
lbl(149013)	definition(x(1) 149036 pid('' 1 pos('./compiler/CodeEmitter.oz' 2232 3) nil 3) unit [g(1) x(0) g(2)])
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		testRecord(x(2) x 1 149033)
lbl(149030)	callBI('Dictionary.remove' [x(1) x(0)]#nil)
lbl(149033)	return
		endDefinition(149013)
lbl(149036)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: UsedX> x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		putConstant(0 x(0))
		inlineAssign(<M: LowestFreeX> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: ShortLivedTemps> x(0) cache)
		return
		endDefinition(148999)
lbl(149069)	definition(x(9) 149083 pid('Emitter,KillAllTemporaries/slow' 1 pos('./compiler/CodeEmitter.oz' 2230 6) nil 1) unit nil)
		getLiteral(<M: KillAllTemporaries> x(0))
		genFastCall(<Q: 1002> 1)
		endDefinition(149069)
lbl(149083)	putRecord('#' [1 2 fast] x(81))
		setConstant(<M: KillAllTemporaries>)
		setValue(x(9))
		setValue(x(7))
lbl(149093)	definition(x(7) 149121 pid('Emitter,Emit/fast' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) <Q: 1003> nil)
		putList(x(1))
		setValue(x(0))
		setVariable(x(2))
		inlineAt(<M: CodeTl> x(0) cache)
		unify(x(0) x(1))
		inlineAssign(<M: CodeTl> x(2) cache)
		return
		endDefinition(149093)
lbl(149121)	definition(x(9) 149147 pid('Emitter,Emit/slow' 1 pos('./compiler/CodeEmitter.oz' 2246 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1003> 3)
		endDefinition(149121)
lbl(149147)	putRecord('#' [1 2 fast] x(82))
		setConstant(<M: Emit>)
		setValue(x(9))
		setValue(x(7))
lbl(149157)	definition(x(7) 149179 pid('Emitter,EmitMultiple/fast' 2 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) <Q: 1004> nil)
		inlineAt(<M: CodeTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: CodeTl> x(1) cache)
		return
		endDefinition(149157)
lbl(149179)	definition(x(9) 149214 pid('Emitter,EmitMultiple/slow' 1 pos('./compiler/CodeEmitter.oz' 2253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1004> 5)
		endDefinition(149179)
lbl(149214)	putRecord('#' [1 2 fast] x(83))
		setConstant(<M: EmitMultiple>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 74 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(10))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		setValue(x(71))
		setValue(x(72))
		setValue(x(73))
		setValue(x(74))
		setValue(x(75))
		setValue(x(76))
		setValue(x(77))
		setValue(x(78))
		setValue(x(79))
		setValue(x(80))
		setValue(x(81))
		setValue(x(82))
		setValue(x(83))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYXY(x(3) y(5) x(4) y(6))
		move(x(7) x(1))
		move(x(8) x(2))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Emitter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		getRecord(c [vApplMeth vAsk vBranch vCall vCallBuiltin vClear vCreateChoice vCreateCond vCreateEnumOr vCreateOr vDefinition vDefinitionCopy vEquateLiteral vEquateNumber vEquateRecord vExHandler vFailure vFastCall vGenCall vGetSelf vGetVariable vInlineAssign vInlineAt vInlineDot vLockEnd vLockThread vMakePermanent vMatch vPopEx vSetSelf vShallowGuard vShared vStepPoint vTestBool vTestBuiltin vTestLiteral vTestNumber vThread vUnify vWait vWaitTop] y(2))
		unifyNumber(7)
		unifyNumber(2)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(5)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(7)
		unifyNumber(8)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(6)
		unifyNumber(6)
		unifyNumber(2)
		unifyNumber(5)
		unifyNumber(8)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(7)
		unifyNumber(3)
		unifyNumber(4)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(3)
		unifyNumber(3)
		unifyNumber(6)
		unifyNumber(~1)
		unifyNumber(5)
		unifyNumber(7)
		unifyNumber(6)
		unifyNumber(7)
		unifyNumber(7)
		unifyNumber(4)
		unifyNumber(4)
		unifyNumber(2)
		unifyNumber(2)
		putList(x(0))
		setValue(y(1))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: EmptyRS> <M: NextReg> <M: Saved> minReg nextLabel regNames sharedDone] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [debugInfoControlSwitch debugInfoNameVarsSwitch debugInfoVarnamesSwitch reporter switches] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(149540)	definition(x(7) 149672 pid('CodeStore,init/fast' 2 pos('./compiler/CodeStore.oz' 77 3) nil 3) <Q: 1005> [y(1)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true init false 0) 0)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(regNames x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Saved> x(2) cache)
		putConstant(1 x(2))
		inlineAssign(nextLabel x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(sharedDone x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoControlSwitch x(1) cache)
		putConstant(debuginfocontrol x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoVarnamesSwitch x(1) cache)
		putConstant(debuginfovarnames x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(2))
		inlineDot(x(2) debugInfoNameVarsSwitch x(1) cache)
		putConstant(debuginfonamevars x(0))
		sendMsg(getSwitch y(0) 2 cache)
		getSelf(x(0))
		inlineDot(x(0) switches x(1) cache)
		unify(x(1) y(0))
		getSelf(x(0))
		inlineDot(x(0) reporter x(1) cache)
		unify(x(1) y(1))
		deAllocateL2
		return
		endDefinition(149540)
lbl(149672)	definition(x(8) 149707 pid('CodeStore,init/slow' 1 pos('./compiler/CodeStore.oz' 77 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1005> 5)
		endDefinition(149672)
lbl(149707)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(149717)	definition(x(7) 149757 pid('CodeStore,makeRegSet/fast' 1 pos('./compiler/CodeStore.oz' 94 3) nil 4) <Q: 1006> [g(21)])
		inlineAt(minReg x(1) cache)
		inlineAt(<M: NextReg> x(2) cache)
		inlineMinus1(x(2) x(3))
		testLE(x(1) x(3) x(2) 149748)
		callBI('BitArray.new' [x(1) x(3)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(149748)	callBI('BitArray.new' [x(1) x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(149717)
lbl(149757)	definition(x(8) 149783 pid('CodeStore,makeRegSet/slow' 1 pos('./compiler/CodeStore.oz' 94 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1006> 3)
		endDefinition(149757)
lbl(149783)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRegSet)
		setValue(x(8))
		setValue(x(7))
lbl(149793)	definition(x(7) 149862 pid('CodeStore,enterVs/fast' 2 pos('./compiler/CodeStore.oz' 104 3) nil 3) <Q: 1007> [g(3) y(0)])
		match(x(0) ht(149847 [onScalar(nil 149802) onRecord('|' 2 149803)]))
lbl(149802)	return
lbl(149803)	allocateL3
		getVarVar(x(2) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(reg x(2) 1 cache)
		inlineAt(minReg x(0) cache)
		move(y(2) x(1))
		testLE(x(0) x(1) x(2) 149838)
		move(y(1) x(0))
		callBI('BitArray.set' [x(0) x(1)]#nil)
lbl(149838)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(1) true enterVs true 2) 0)
lbl(149847)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(110)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(149793)
lbl(149862)	definition(x(8) 149897 pid('CodeStore,enterVs/slow' 1 pos('./compiler/CodeStore.oz' 104 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1007> 5)
		endDefinition(149862)
lbl(149897)	putRecord('#' [1 2 fast] x(11))
		setConstant(enterVs)
		setValue(x(8))
		setValue(x(7))
lbl(149907)	definition(x(7) 149947 pid('CodeStore,startDefinition/fast' 0 pos('./compiler/CodeStore.oz' 113 3) nil 3) <Q: 1008> nil)
		inlineAt(minReg x(0) cache)
		inlineAt(<M: Saved> x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(<M: Saved> x(2) cache)
		inlineAt(<M: NextReg> x(0) cache)
		inlineAssign(minReg x(0) cache)
		return
		endDefinition(149907)
lbl(149947)	definition(x(8) 149961 pid('CodeStore,startDefinition/slow' 1 pos('./compiler/CodeStore.oz' 113 3) nil 1) unit nil)
		getLiteral(startDefinition x(0))
		genFastCall(<Q: 1008> 1)
		endDefinition(149947)
lbl(149961)	putRecord('#' [1 2 fast] x(12))
		setConstant(startDefinition)
		setValue(x(8))
		setValue(x(7))
lbl(149971)	definition(x(7) 149996 pid('CodeStore,newReg/fast' 1 pos('./compiler/CodeStore.oz' 117 3) nil 2) <Q: 1009> nil)
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		return
		endDefinition(149971)
lbl(149996)	definition(x(8) 150022 pid('CodeStore,newReg/slow' 1 pos('./compiler/CodeStore.oz' 117 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1009> 3)
		endDefinition(149996)
lbl(150022)	putRecord('#' [1 2 fast] x(13))
		setConstant(newReg)
		setValue(x(8))
		setValue(x(7))
lbl(150032)	definition(x(7) 150068 pid('CodeStore,newSelfReg/fast' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) <Q: 1010> [g(7)])
		inlineAt(<M: NextReg> x(1) cache)
		unify(x(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextReg> x(1) cache)
		inlineAt(regNames x(1) cache)
		putConstant('self' x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(150032)
lbl(150068)	definition(x(8) 150094 pid('CodeStore,newSelfReg/slow' 1 pos('./compiler/CodeStore.oz' 121 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1010> 3)
		endDefinition(150068)
lbl(150094)	putRecord('#' [1 2 fast] x(14))
		setConstant(newSelfReg)
		setValue(x(8))
		setValue(x(7))
lbl(150104)	definition(x(7) 150190 pid('CodeStore,newVariableReg/fast' 2 pos('./compiler/CodeStore.oz' 126 3) nil 3) <Q: 1011> [g(10) g(7)])
		allocateL4
		inlineAt(<M: NextReg> x(2) cache)
		unify(x(2) x(1))
		inlinePlus1(x(1) x(2))
		inlineAssign(<M: NextReg> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(2) generated 150158)
lbl(150145)	inlineAt(regNames x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.remove' [x(0) x(1)]#nil)
		deAllocateL4
		return
lbl(150158)	inlineAt(regNames x(0) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL4
		return
		endDefinition(150104)
lbl(150190)	definition(x(8) 150225 pid('CodeStore,newVariableReg/slow' 1 pos('./compiler/CodeStore.oz' 126 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1011> 5)
		endDefinition(150190)
lbl(150225)	putRecord('#' [1 2 fast] x(15))
		setConstant(newVariableReg)
		setValue(x(8))
		setValue(x(7))
lbl(150235)	definition(x(7) 150365 pid('CodeStore,endDefinition/fast' 6 pos('./compiler/CodeStore.oz' 135 3) nil 7) <Q: 1012> [y(0) g(6) y(1)])
		allocateL9
		inlineAt(<M: Saved> x(6) cache)
		getList(x(6))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		createVariableMove(y(8) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		move(y(8) x(0))
		inlineAssign(<M: EmptyRS> x(0) cache)
		move(y(2) x(0))
		createVariable(x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		inlineAt(<M: EmptyRS> x(1) cache)
		move(y(2) x(0))
		genCall(gci(g(0) true <M: AddRegOccs> false 2) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		moveMoveYXYX(y(5) x(4) y(7) x(5))
		genCall(gci(g(2) true doEmit false 6) 0)
		inlineAt(sharedDone x(0) cache)
		callBI('Dictionary.removeAll' [x(0)]#nil)
		inlineAt(minReg x(0) cache)
		inlineAssign(<M: NextReg> x(0) cache)
		move(y(0) x(0))
		inlineAssign(minReg x(0) cache)
		move(y(1) x(0))
		inlineAssign(<M: Saved> x(0) cache)
		deAllocateL9
		return
		endDefinition(150235)
lbl(150365)	definition(x(8) 150424 pid('CodeStore,endDefinition/slow' 1 pos('./compiler/CodeStore.oz' 135 3) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1012> 13)
		endDefinition(150365)
lbl(150424)	putRecord('#' [1 2 fast] x(16))
		setConstant('endDefinition')
		setValue(x(8))
		setValue(x(7))
lbl(150434)	definition(x(7) 150478 pid('CodeStore,getRegNames/fast' 2 pos('./compiler/CodeStore.oz' 150 3) nil 5) <Q: 1013> [g(5)])
		getSelf(x(3))
lbl(150442)	definition(x(4) 150467 pid('' 2 pos('./compiler/CodeStore.oz' 151 24) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		inlineAt(regNames x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(150442)
lbl(150467)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(150434)
lbl(150478)	definition(x(8) 150513 pid('CodeStore,getRegNames/slow' 1 pos('./compiler/CodeStore.oz' 150 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1013> 5)
		endDefinition(150478)
lbl(150513)	putRecord('#' [1 2 fast] x(17))
		setConstant(getRegNames)
		setValue(x(8))
		setValue(x(7))
lbl(150523)	definition(x(7) 150554 pid('CodeStore,GetOccs/fast' 2 pos('./compiler/CodeStore.oz' 154 3) nil 3) <Q: 1014> nil)
		testLiteral(x(0) nil 150542)
lbl(150533)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150542)	inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(150523)
lbl(150554)	definition(x(8) 150589 pid('CodeStore,GetOccs/slow' 1 pos('./compiler/CodeStore.oz' 154 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1014> 5)
		endDefinition(150554)
lbl(150589)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: GetOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(150599)	definition(x(7) 151920 pid('CodeStore,ComputeOccs/fast' 2 pos('./compiler/CodeStore.oz' 157 3) nil 7) <Q: 1015> [y(0) y(2) g(17) g(22) g(23) g(9) g(3)])
		match(x(0) ht(150659 [onScalar(nil 150608) onRecord(vShared 4 150617)]))
lbl(150608)	inlineAt(<M: EmptyRS> x(0) cache)
		unify(x(0) x(1))
		return
lbl(150617)	allocateL2
		getVariable(x(0))
		getVoid(1)
		getVarVar(x(2) x(3))
		callBI('Access' [x(2)]#[x(4)])
		inlinePlus1(x(4) x(5))
		callBI('Assign' [x(2) x(5)]#nil)
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testBI('IsDet' [x(0)]#[x(2)] 150645)
		branch(150654)
lbl(150645)	move(x(3) x(0))
		move(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
lbl(150654)	unify(y(0) y(1))
		deAllocateL2
		return
lbl(150659)	allocateL7
		inlineDot(x(0) 1 x(2) cache)
		unify(x(2) x(1))
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		callBI('.' [x(0) x(4)]#[x(2)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		testLiteral(x(2) nil 150698)
lbl(150690)	move(y(0) x(0))
		genCall(gci(g(0) true makeRegSet false 1) 0)
		branch(150716)
lbl(150698)	move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(0))
lbl(150716)	match(y(1) ht(151905 [onRecord(vStepPoint 5 150719) onRecord(vMakePermanent 3 150739) onRecord(vClear 3 150750) onRecord(vUnify 4 150761) onRecord(vFailure 2 150781) onRecord(vEquateNumber 4 150783) onRecord(vEquateLiteral 4 150794) onRecord(vEquateRecord 6 150805) onRecord(vGetVariable 3 150825) onRecord(vCallBuiltin 5 150836) onRecord(vGenCall 8 150847) onRecord(vCall 5 150870) onRecord(vFastCall 5 150890) onRecord(vApplMeth 7 150901) onRecord(vInlineDot 7 150924) onRecord(vInlineAt 4 150947) onRecord(vInlineAssign 4 150958) onRecord(vGetSelf 3 150969) onRecord(vSetSelf 3 150980) onRecord(vDefinition 7 150991) onRecord(vDefinitionCopy 8 151014) onRecord(vExHandler 7 151046) onRecord(vPopEx 3 151120) onRecord(vCreateCond 7 151122) onRecord(vCreateOr 6 151382) onRecord(vCreateEnumOr 6 151398) onRecord(vCreateChoice 6 151414) onRecord(vAsk 2 151430) onRecord(vWait 2 151432) onRecord(vWaitTop 2 151434) onRecord(vShallowGuard 8 151436) onRecord(vTestBool 8 151556) onRecord(vMatch 7 151651) onRecord(vThread 5 151856) onRecord(vLockThread 5 151892) onRecord(vLockEnd 4 151903)]))
lbl(150719)	getVoid(1)
		getVariable(x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(150739)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150750)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150761)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150781)	deAllocateL7
		return
lbl(150783)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150794)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150805)	getVoid(3)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(150825)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150836)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150847)	getVoid(1)
		getVariable(x(0))
		getVoid(3)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150870)	getVoid(1)
		getVarVar(x(0) y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150890)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150901)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(150924)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150947)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150958)	getVoid(2)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150969)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150980)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(150991)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151014)	getVoid(1)
		getVarVar(x(0) y(1))
		getVoid(2)
		getVariable(y(2))
		move(y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOccs> true 2) 0)
lbl(151046)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		moveMoveYXYX(y(3) x(1) y(5) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(0) x(3))
		callBI('BitArray.and' [x(1) x(3)]#nil)
		callBI('BitArray.clone' [x(0)]#[x(4)])
		callBI('BitArray.and' [x(4) x(2)]#nil)
		callBI('BitArray.or' [x(1) x(4)]#nil)
		callBI('BitArray.or' [x(3) x(0)]#nil)
		callBI('BitArray.or' [x(3) x(2)]#nil)
		deAllocateL7
		return
lbl(151120)	deAllocateL7
		return
lbl(151122)	getVoid(1)
		getVarVar(y(1) x(0))
		getVoid(2)
		getVarVar(y(2) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151149)	definition(x(1) 151239 pid('' 1 pos('./compiler/CodeStore.oz' 245 6) nil 5) unit [x(2) g(0) g(3) y(3) g(2) g(4)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151226)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151172)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(151226)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(245)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151149)
lbl(151239)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(2) ht(151256 [onScalar(nil 151286)]))
lbl(151256)	move(y(2) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(151262)	definition(x(2) 151277 pid('' 1 pos('./compiler/CodeStore.oz' 259 2) nil 2) unit [g(6) y(3)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151262)
lbl(151277)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(151286)	moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151296)	definition(x(1) 151375 pid('' 1 pos('./compiler/CodeStore.oz' 263 6) nil 5) unit [x(2) g(3) g(0) y(0)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(151362)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(151319)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(151362)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(263)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151296)
lbl(151375)	move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151382)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151398)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151414)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVarVar(x(1) x(2))
		move(y(0) x(3))
		deAllocateL7
		genCall(gci(g(0) true <M: ComputeDisjunctionOccs> true 4) 0)
lbl(151430)	deAllocateL7
		return
lbl(151432)	deAllocateL7
		return
lbl(151434)	deAllocateL7
		return
lbl(151436)	getVoid(1)
		getVarVar(x(0) y(1))
		getVariable(y(2))
		getVoid(2)
		getVarVar(y(3) y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(1) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		match(y(3) ht(151504 [onScalar(nil 151534)]))
lbl(151504)	move(y(3) x(5))
		callBI('BitArray.toList' [x(5)]#[x(6)])
lbl(151510)	definition(x(5) 151525 pid('' 1 pos('./compiler/CodeStore.oz' 294 2) nil 2) unit [g(6) y(4)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(151510)
lbl(151525)	move(x(6) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
lbl(151534)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151556)	getVoid(1)
		getVarVar(y(1) x(0))
		getVarVar(y(2) y(3))
		getVoid(2)
		getVariable(y(4))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(5) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(4))
		moveMoveYXYX(y(4) x(1) y(6) x(2))
		callBI('BitArray.or' [x(1) x(2)]#nil)
		move(y(2) x(3))
		callBI('BitArray.or' [x(1) x(3)]#nil)
		move(y(0) x(4))
		callBI('BitArray.and' [x(1) x(4)]#nil)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(6) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL7
		return
lbl(151651)	getVoid(1)
		getVarVar(y(1) x(0))
		getVariable(y(2))
		getVoid(2)
		getVariable(y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(4) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(3))
		getSelf(x(2))
lbl(151679)	definition(x(1) 151749 pid('' 1 pos('./compiler/CodeStore.oz' 317 6) nil 3) unit [x(2) g(3) g(0) y(3)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151714 [onRecord('onScalar' 2 151696) onRecord('onRecord' 3 151705)]))
lbl(151696)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151727)
lbl(151705)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151727)
lbl(151714)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(320)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151727)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151679)
lbl(151749)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		move(y(1) x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		getSelf(x(2))
lbl(151779)	definition(x(1) 151849 pid('' 1 pos('./compiler/CodeStore.oz' 327 6) nil 3) unit [x(2) g(3) g(0) y(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(151814 [onRecord('onScalar' 2 151796) onRecord('onRecord' 3 151805)]))
lbl(151796)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151827)
lbl(151805)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(151827)
lbl(151814)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(330)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(151827)	move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
		endDefinition(151779)
lbl(151849)	move(y(2) x(0))
		deAllocateL7
		genFastCall(<P: 34> 5)
lbl(151856)	getVoid(1)
		getVariable(x(0))
		getVoid(2)
		getVariable(y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: ComputeOccs> false 2) 0)
		move(y(2) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		unify(x(1) y(1))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		callBI('BitArray.or' [x(2) x(0)]#nil)
		deAllocateL7
		return
lbl(151892)	getVoid(1)
		getVariable(x(0))
		move(y(0) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: RegOcc> true 2) 0)
lbl(151903)	deAllocateL7
		return
lbl(151905)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(342)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(150599)
lbl(151920)	definition(x(8) 151955 pid('CodeStore,ComputeOccs/slow' 1 pos('./compiler/CodeStore.oz' 157 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1015> 5)
		endDefinition(151920)
lbl(151955)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ComputeOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(151965)	definition(x(7) 152222 pid('CodeStore,ComputeDisjunctionOccs/fast' 4 pos('./compiler/CodeStore.oz' 345 3) nil 6) <Q: 1016> [g(17) y(0) g(22) g(23) g(9) g(3)])
		allocateL4
		inlineAt(<M: EmptyRS> x(4) cache)
		callBI('BitArray.clone' [x(4)]#[x(5)])
		unify(x(5) x(2))
		getSelf(x(4))
lbl(151985)	definition(x(5) 152075 pid('' 1 pos('./compiler/CodeStore.oz' 348 7) nil 5) unit [x(4) g(1) g(2) x(2) g(0) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152062)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152008)	shallowThen
		allocateL4
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(1) true <M: ComputeOccs> false 2) 0)
		move(g(3) x(0))
		move(y(2) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(2))
		callBI('BitArray.or' [x(0) x(2)]#nil)
		callBI('BitArray.clone' [x(1)]#[x(3)])
		unify(x(3) y(0))
		move(y(0) x(1))
		callBI('BitArray.and' [x(1) x(2)]#nil)
		deAllocateL4
		return
lbl(152062)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(348)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(151985)
lbl(152075)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('BitArray.and' [x(0) x(1)]#nil)
		match(y(1) ht(152102 [onScalar(nil 152132)]))
lbl(152102)	move(y(1) x(2))
		callBI('BitArray.toList' [x(2)]#[x(3)])
lbl(152108)	definition(x(2) 152123 pid('' 1 pos('./compiler/CodeStore.oz' 360 3) nil 2) unit [g(5) y(2)])
		move(g(1) x(1))
		callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152108)
lbl(152123)	move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
lbl(152132)	getSelf(x(2))
lbl(152134)	definition(x(1) 152213 pid('' 1 pos('./compiler/CodeStore.oz' 363 7) nil 5) unit [x(2) g(2) g(1) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(152200)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(152157)	shallowThen
		allocateL2
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(3) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(152200)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(363)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152134)
lbl(152213)	move(y(0) x(0))
		deAllocateL4
		genFastCall(<P: 34> 5)
		endDefinition(151965)
lbl(152222)	definition(x(8) 152269 pid('CodeStore,ComputeDisjunctionOccs/slow' 1 pos('./compiler/CodeStore.oz' 345 3) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1016> 9)
		endDefinition(152222)
lbl(152269)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: ComputeDisjunctionOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152279)	definition(x(7) 152302 pid('CodeStore,RegOcc/fast' 2 pos('./compiler/CodeStore.oz' 368 3) nil 4) <Q: 1017> [g(3)])
		inlineAt(minReg x(2) cache)
		testLT(x(0) x(2) x(3) 152296)
		return
lbl(152296)	callBI('BitArray.set' [x(1) x(0)]#nil)
		return
		endDefinition(152279)
lbl(152302)	definition(x(8) 152337 pid('CodeStore,RegOcc/slow' 1 pos('./compiler/CodeStore.oz' 368 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1017> 5)
		endDefinition(152302)
lbl(152337)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RegOcc>)
		setValue(x(8))
		setValue(x(7))
lbl(152347)	definition(x(7) 152403 pid('CodeStore,RegOccs/fast' 2 pos('./compiler/CodeStore.oz' 373 3) nil 5) <Q: 1018> [g(3) y(0)])
		match(x(0) ht(152388 [onScalar(nil 152356) onRecord('|' 2 152357)]))
lbl(152356)	return
lbl(152357)	allocateL2
		getVarVar(x(0) x(2))
		inlineAt(minReg x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		testLE(x(3) x(0) x(4) 152379)
lbl(152376)	callBI('BitArray.set' [x(1) x(0)]#nil)
lbl(152379)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: RegOccs> true 2) 0)
lbl(152388)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(380)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152347)
lbl(152403)	definition(x(8) 152438 pid('CodeStore,RegOccs/slow' 1 pos('./compiler/CodeStore.oz' 373 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1018> 5)
		endDefinition(152403)
lbl(152438)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: RegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(152448)	definition(x(7) 152508 pid('CodeStore,RegOccVArgs/fast' 2 pos('./compiler/CodeStore.oz' 382 3) nil 3) <Q: 1019> [y(0)])
		match(x(0) ht(152493 [onScalar(nil 152457) onRecord('|' 2 152458)]))
lbl(152457)	return
lbl(152458)	allocateL2
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		match(x(0) ht(152484 [onRecord(value 1 152470) onRecord(record 3 152477)]))
lbl(152470)	getVariable(x(0))
		genCall(gci(g(0) true <M: RegOcc> false 2) 0)
		branch(152484)
lbl(152477)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(0) true <M: RegOccVArgs> false 2) 0)
lbl(152484)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: RegOccVArgs> true 2) 0)
lbl(152493)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(152448)
lbl(152508)	definition(x(8) 152543 pid('CodeStore,RegOccVArgs/slow' 1 pos('./compiler/CodeStore.oz' 382 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1019> 5)
		endDefinition(152508)
lbl(152543)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: RegOccVArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(152553)	definition(x(7) 153064 pid('CodeStore,AddRegOccs/fast' 2 pos('./compiler/CodeStore.oz' 393 3) nil 5) <Q: 1020> [g(22) y(2) y(0) g(1) g(7) g(17)])
		testLiteral(x(0) nil 152564)
lbl(152563)	return
lbl(152564)	allocateL6
		inlineDot(x(0) 1 x(2) cache)
		callBI('BitArray.or' [x(2) x(1)]#nil)
		callBI('Label' [x(0)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		move(x(0) y(0))
		createVariable(y(1))
		testNumber(x(4) ~1 152597)
lbl(152592)	unify(y(1) x(1))
		branch(152625)
lbl(152597)	callBI('.' [x(0) x(4)]#[x(2)])
		testLiteral(x(2) nil 152609)
lbl(152604)	unify(y(1) x(1))
		branch(152625)
lbl(152609)	moveMoveXYYX(x(2) y(2) y(2) x(0))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
lbl(152625)	match(y(0) ht(153049 [onRecord(vStepPoint 5 152628) onRecord(vMakePermanent 3 152639) onRecord(vClear 3 152641) onRecord(vUnify 4 152643) onRecord(vFailure 2 152645) onRecord(vEquateNumber 4 152647) onRecord(vEquateLiteral 4 152649) onRecord(vEquateRecord 6 152651) onRecord(vGetVariable 3 152653) onRecord(vCallBuiltin 5 152655) onRecord(vGenCall 8 152657) onRecord(vCall 5 152659) onRecord(vFastCall 5 152661) onRecord(vApplMeth 7 152663) onRecord(vInlineDot 7 152665) onRecord(vInlineAt 4 152667) onRecord(vInlineAssign 4 152669) onRecord(vGetSelf 3 152671) onRecord(vSetSelf 3 152673) onRecord(vDefinition 7 152675) onRecord(vDefinitionCopy 8 152677) onRecord(vShared 4 152679) onRecord(vExHandler 7 152719) onRecord(vPopEx 3 152769) onRecord(vCreateCond 7 152771) onRecord(vCreateOr 6 152805) onRecord(vCreateEnumOr 6 152818) onRecord(vCreateChoice 6 152831) onRecord(vAsk 2 152844) onRecord(vWait 2 152846) onRecord(vWaitTop 2 152848) onRecord(vShallowGuard 8 152850) onRecord(vTestBool 8 152924) onRecord(vMatch 7 152954) onRecord(vThread 5 153034) onRecord(vLockThread 5 153045) onRecord(vLockEnd 4 153047)]))
lbl(152628)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152639)	deAllocateL6
		return
lbl(152641)	deAllocateL6
		return
lbl(152643)	deAllocateL6
		return
lbl(152645)	deAllocateL6
		return
lbl(152647)	deAllocateL6
		return
lbl(152649)	deAllocateL6
		return
lbl(152651)	deAllocateL6
		return
lbl(152653)	deAllocateL6
		return
lbl(152655)	deAllocateL6
		return
lbl(152657)	deAllocateL6
		return
lbl(152659)	deAllocateL6
		return
lbl(152661)	deAllocateL6
		return
lbl(152663)	deAllocateL6
		return
lbl(152665)	deAllocateL6
		return
lbl(152667)	deAllocateL6
		return
lbl(152669)	deAllocateL6
		return
lbl(152671)	deAllocateL6
		return
lbl(152673)	deAllocateL6
		return
lbl(152675)	deAllocateL6
		return
lbl(152677)	deAllocateL6
		return
lbl(152679)	getVoid(1)
		getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		inlineAt(sharedDone x(2) cache)
		testBI('Dictionary.member' [x(2) x(0)]#[x(3)] 152698)
		deAllocateL6
		return
lbl(152698)	inlineAt(sharedDone x(2) cache)
		putConstant(true x(3))
		callBI('Dictionary.put' [x(2) x(0) x(3)]#nil)
		move(x(1) x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152719)	getVoid(1)
		getVariable(y(0))
		getVoid(1)
		getVariable(y(2))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152769)	deAllocateL6
		return
lbl(152771)	getVoid(1)
		getVarVar(y(0) y(2))
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152805)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152818)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152831)	getVoid(1)
		getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(1) x(2))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccsClauses> true 3) 0)
lbl(152844)	deAllocateL6
		return
lbl(152846)	deAllocateL6
		return
lbl(152848)	deAllocateL6
		return
lbl(152850)	getVoid(1)
		getVarVar(y(0) y(2))
		getVariable(y(3))
		move(y(1) x(0))
		callBI('BitArray.clone' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(2) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152924)	getVoid(2)
		getVarVar(x(0) y(0))
		getVariable(y(2))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(152954)	getVoid(2)
		getVarVar(x(0) y(0))
		move(y(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		getSelf(x(2))
lbl(152967)	definition(x(1) 153027 pid('' 1 pos('./compiler/CodeStore.oz' 469 6) nil 3) unit [x(2) y(1) g(2)])
		allocateL1
		move(g(0) x(1))
		setSelf(x(1))
		createVariable(y(0))
		match(x(0) ht(153002 [onRecord('onScalar' 2 152984) onRecord('onRecord' 3 152993)]))
lbl(152984)	getVoid(1)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153015)
lbl(152993)	getVoid(2)
		getVariable(x(0))
		unify(y(0) x(0))
		branch(153015)
lbl(153002)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(472)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(153015)	move(y(0) x(0))
		move(g(1) x(1))
		deAllocateL1
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
		endDefinition(152967)
lbl(153027)	move(y(0) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(153034)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL6
		genCall(gci(g(2) true <M: AddRegOccs> true 2) 0)
lbl(153045)	deAllocateL6
		return
lbl(153047)	deAllocateL6
		return
lbl(153049)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(481)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(152553)
lbl(153064)	definition(x(8) 153099 pid('CodeStore,AddRegOccs/slow' 1 pos('./compiler/CodeStore.oz' 393 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1020> 5)
		endDefinition(153064)
lbl(153099)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AddRegOccs>)
		setValue(x(8))
		setValue(x(7))
lbl(153109)	definition(x(7) 153271 pid('CodeStore,AddRegOccsClauses/fast' 3 pos('./compiler/CodeStore.oz' 484 3) nil 5) <Q: 1021> [g(17) y(0) g(22)])
		allocateL2
		callBI('BitArray.clone' [x(1)]#[x(3)])
		getSelf(x(4))
lbl(153121)	definition(x(1) 153190 pid('' 1 pos('./compiler/CodeStore.oz' 487 7) nil 5) unit [x(4) x(2) g(1) g(2) x(3)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(153177)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(153144)	shallowThen
		allocateL2
		moveMoveXYYX(x(4) y(0) y(0) x(0))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: AddRegOccs> false 2) 0)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(2) true <M: GetOccs> false 2) 0)
		move(g(4) x(0))
		move(y(1) x(1))
		callBI('BitArray.or' [x(0) x(1)]#nil)
		deAllocateL2
		return
lbl(153177)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(487)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153121)
lbl(153190)	moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<P: 34> 4)
		getSelf(x(4))
lbl(153200)	definition(x(1) 153258 pid('' 3 pos('./compiler/CodeStore.oz' 492 7) nil 7) unit [x(4) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(153245)
		getRecord('#' 3 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(153223)	shallowThen
		allocateL2
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(y(1) x(0))
		genCall(gci(g(1) true <M: AddRegOccs> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: GetOccs> true 2) 0)
lbl(153245)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(492)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153200)
lbl(153258)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		createVariable(x(3))
		deAllocateL2
		genFastCall(<P: 32> 9)
		endDefinition(153109)
lbl(153271)	definition(x(8) 153312 pid('CodeStore,AddRegOccsClauses/slow' 1 pos('./compiler/CodeStore.oz' 484 3) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1021> 7)
		endDefinition(153271)
lbl(153312)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: AddRegOccsClauses>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 17 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		move(y(0) x(6))
		putConstant('CodeStore' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(153369)	definition(x(7) 153435 pid('CodeGenList' 4 pos('./compiler/CodeGen.oz' 100 3) nil 5) <Q: 1022> nil)
		match(x(0) ht(153420 [onScalar(nil 153378) onRecord('|' 2 153382)]))
lbl(153378)	unify(x(2) x(3))
		return
lbl(153382)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(codeGen x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(153420)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(106)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(153369)
lbl(153435)	definition(x(7) 153464 pid('CoordNoDebug' 2 pos('./compiler/CodeGen.oz' 109 3) nil 4) <Q: 1023> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 153452)
lbl(153448)	unify(x(1) x(0))
		return
lbl(153452)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(153435)
lbl(153464)	definition(x(7) 153536 pid('StepPoint' 6 pos('./compiler/CodeGen.oz' 115 3) nil 6) <Q: 1024> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 930> 4)
		testBool(y(6) 153515 153523)
		getLiteral(nil y(5))
		getRecord(vStepPoint 5 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(1))
		unifyValue(y(3))
		deAllocateL7
		return
lbl(153515)	unify(y(2) y(4))
		unify(y(5) y(3))
		deAllocateL7
		return
lbl(153523)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(116)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(153464)
lbl(153536)	definition(x(7) 153565 pid('MakeUnify' 4 pos('./compiler/CodeGen.oz' 125 3) nil 5) <Q: 1025> nil)
		testBI('==' [x(0) x(1)]#[x(4)] 153550)
		unify(x(2) x(3))
		return
lbl(153550)	getRecord(vUnify 4 x(2))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(3))
		return
		endDefinition(153536)
lbl(153565)	definition(x(7) 153666 pid('MakePermanent' 4 pos('./compiler/CodeGen.oz' 134 3) nil 5) <Q: 1026> nil)
		allocateL3
lbl(153572)	definition(x(4) 153623 pid('' 3 pos('./compiler/CodeGen.oz' 136 7) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getOrigin y(0) 1 cache)
		testLiteral(y(3) generated 153605)
lbl(153600)	unify(y(2) y(1))
		deAllocateL4
		return
lbl(153605)	getList(y(2))
		unifyVariable(x(0))
		unifyValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(153572)
lbl(153623)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		move(y(0) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 32> 8)
		testLiteral(y(0) nil 153652)
lbl(153647)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(153652)	getRecord(vMakePermanent 3 y(1))
		unifyVoid(1)
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL3
		return
		endDefinition(153565)
lbl(153666)	definition(x(7) 153693 pid('Clear' 3 pos('./compiler/CodeGen.oz' 148 3) nil 3) <Q: 1027> nil)
		testLiteral(x(0) nil 153680)
lbl(153676)	unify(x(1) x(2))
		return
lbl(153680)	getRecord(vClear 3 x(1))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(2))
		return
		endDefinition(153666)
lbl(153693)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [coord reg value] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(153709)	definition(x(7) 153729 pid('PseudoVariableOccurrence,init/fast' 1 pos('./compiler/CodeGen.oz' 166 6) nil 3) <Q: 1028> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(153709)
lbl(153729)	definition(x(8) 153755 pid('PseudoVariableOccurrence,init/slow' 1 pos('./compiler/CodeGen.oz' 166 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1028> 3)
		endDefinition(153729)
lbl(153755)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(153765)	definition(x(7) 153793 pid('PseudoVariableOccurrence,getCoord/fast' 1 pos('./compiler/CodeGen.oz' 169 6) nil 3) <Q: 1029> nil)
		getSelf(x(1))
		inlineDot(x(1) coord x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 153787)
		unify(x(0) x(1))
		return
lbl(153787)	getLiteral(unit x(0))
		return
		endDefinition(153765)
lbl(153793)	definition(x(8) 153819 pid('PseudoVariableOccurrence,getCoord/slow' 1 pos('./compiler/CodeGen.oz' 169 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1029> 3)
		endDefinition(153793)
lbl(153819)	putRecord('#' [1 2 fast] x(10))
		setConstant(getCoord)
		setValue(x(8))
		setValue(x(7))
lbl(153829)	definition(x(7) 153843 pid('PseudoVariableOccurrence,getVariable/fast' 1 pos('./compiler/CodeGen.oz' 172 6) nil 2) <Q: 1030> nil)
		getSelf(x(1))
		unify(x(1) x(0))
		return
		endDefinition(153829)
lbl(153843)	definition(x(8) 153869 pid('PseudoVariableOccurrence,getVariable/slow' 1 pos('./compiler/CodeGen.oz' 172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1030> 3)
		endDefinition(153843)
lbl(153869)	putRecord('#' [1 2 fast] x(11))
		setConstant('getVariable')
		setValue(x(8))
		setValue(x(7))
lbl(153879)	definition(x(7) 153891 pid('PseudoVariableOccurrence,isToplevel/fast' 1 pos('./compiler/CodeGen.oz' 175 6) nil 1) <Q: 1031> nil)
		getLiteral(false x(0))
		return
		endDefinition(153879)
lbl(153891)	definition(x(8) 153917 pid('PseudoVariableOccurrence,isToplevel/slow' 1 pos('./compiler/CodeGen.oz' 175 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1031> 3)
		endDefinition(153891)
lbl(153917)	putRecord('#' [1 2 fast] x(12))
		setConstant(isToplevel)
		setValue(x(8))
		setValue(x(7))
lbl(153927)	definition(x(7) 153936 pid('PseudoVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 178 6) nil 1) <Q: 1032> nil)
		return
		endDefinition(153927)
lbl(153936)	definition(x(8) 153962 pid('PseudoVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1032> 3)
		endDefinition(153936)
lbl(153962)	putRecord('#' [1 2 fast] x(13))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(153972)	definition(x(7) 153992 pid('PseudoVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 181 6) nil 3) <Q: 1033> nil)
		getSelf(x(1))
		inlineDot(x(1) value x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(153972)
lbl(153992)	definition(x(8) 154018 pid('PseudoVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 181 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1033> 3)
		endDefinition(153992)
lbl(154018)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(154028)	definition(x(7) 154048 pid('PseudoVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 184 6) nil 3) <Q: 1034> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154028)
lbl(154048)	definition(x(8) 154074 pid('PseudoVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 184 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1034> 3)
		endDefinition(154048)
lbl(154074)	putRecord('#' [1 2 fast] x(15))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(154084)	definition(x(7) 154232 pid('PseudoVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 187 6) nil 5) <Q: 1035> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		testBI('IsDet' [x(0)]#[x(4)] 154190)
		testBI('IsNumber' [x(0)]#[x(4)] 154126)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154126)	testBI('IsLiteral' [x(0)]#[x(4)] 154150)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyValVar(x(0) x(2))
		unifyValue(x(3))
		move(x(2) x(0))
		tailSendMsg(reg x(1) 1 cache)
lbl(154150)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
lbl(154190)	allocateL4
		getSelf(x(4))
		inlineDot(x(4) reg x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1025> 9)
		endDefinition(154084)
lbl(154232)	definition(x(8) 154279 pid('PseudoVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 187 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1035> 9)
		endDefinition(154232)
lbl(154279)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(154289)	definition(x(7) 154370 pid('PseudoVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 200 6) nil 4) <Q: 1036> nil)
		getSelf(x(0))
		inlineDot(x(0) value x(0) cache)
		unify(x(1) x(2))
		testBI('IsDet' [x(0)]#[x(1)] 154350)
		testBI('IsNumber' [x(0)]#[x(1)] 154321)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(154321)	testBI('IsLiteral' [x(0)]#[x(1)] 154332)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(154332)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
lbl(154350)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(154289)
lbl(154370)	definition(x(8) 154417 pid('PseudoVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 200 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1036> 9)
		endDefinition(154370)
lbl(154417)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(154427)	definition(x(7) 154444 pid('PseudoVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 214 6) nil 4) <Q: 1037> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(154427)
lbl(154444)	definition(x(8) 154491 pid('PseudoVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 214 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1037> 9)
		endDefinition(154444)
lbl(154491)	putRecord('#' [1 2 fast] x(18))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 10 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('PseudoVariableOccurrence' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(154540)	definition(x(7) 154586 pid('NewPseudoVariableOccurrence' 2 pos('./compiler/CodeGen.oz' 220 3) nil 3) <Q: 1038> [y(1)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(newReg x(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(154540)
lbl(154586)	definition(x(7) 154674 pid('MakeMessageArgs' 5 pos('./compiler/CodeGen.oz' 224 3) nil 6) <Q: 1039> nil)
		match(x(0) ht(154659 [onScalar(nil 154595) onRecord('|' 2 154602)]))
lbl(154595)	getLiteral(nil x(2))
		unify(x(3) x(4))
		return
lbl(154602)	allocateL7
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(4) y(3) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		sendMsg(makeVO x(5) 4 cache)
		createVariableMove(y(6) x(0))
		sendMsg(reg y(5) 1 cache)
		getList(y(2))
		unifyValVar(y(6) x(2))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(3) y(3) x(4))
		deAllocateL7
		genFastCall(<Q: 1039> 11)
lbl(154659)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(233)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154586)
lbl(154674)	definition(x(7) 154818 pid('LoadActualArgs' 5 pos('./compiler/CodeGen.oz' 237 6) nil 5) <Q: 1040> nil)
		match(x(0) ht(154803 [onScalar(nil 154683) onRecord('|' 2 154690)]))
lbl(154683)	unify(x(2) x(3))
		getLiteral(nil x(4))
		return
lbl(154690)	allocateL9
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 154777)
lbl(154724)	testBI('IsName' [x(0)]#[x(1)] 154777)
lbl(154728)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(0) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(6))
		getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(7))
		move(x(1) x(0))
		sendMsg(reg y(0) 1 cache)
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
		branch(154786)
lbl(154777)	unify(y(3) y(7))
		getList(y(5))
		unifyValue(y(0))
		unifyValue(y(8))
lbl(154786)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(4) x(3))
		move(y(8) x(4))
		deAllocateL9
		genFastCall(<Q: 1040> 11)
lbl(154803)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(253)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154674)
lbl(154818)	definition(x(7) 154871 pid('GetRegs' 2 pos('./compiler/CodeGen.oz' 256 6) nil 3) <Q: 1041> nil)
		match(x(0) ht(154856 [onScalar(nil 154827) onRecord('|' 2 154831)]))
lbl(154827)	getLiteral(nil x(1))
		return
lbl(154831)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(reg x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1041> 5)
lbl(154856)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(259)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(154818)
lbl(154871)	definition(x(7) 155075 pid('MakeApplication' 6 pos('./compiler/CodeGen.oz' 262 6) nil 7) <Q: 1042> nil)
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		move(y(4) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1040> 10)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 154955)
lbl(154926)	testBI('IsProcedure' [x(0)]#[x(1)] 154955)
lbl(154930)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(8) x(2) y(3) x(3))
		moveMoveYXYX(y(7) x(4) y(5) x(5))
		move(y(0) x(6))
		deAllocateL9
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(154955)	createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(4) 155033 155062)
lbl(154977)	move(y(3) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 155033)
lbl(154990)	getRecord(vGenCall 8 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(false)
		unifyLiteral('')
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(8) x(0) y(3) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155033)	getRecord(vCall 5 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(1))
		unifyValue(y(5))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL9
		genFastCall(<Q: 1041> 5)
lbl(155062)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(270)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(154871)
lbl(155075)	definition(x(7) 155266 pid('MakeRunTimeProcApplication' 6 pos('./compiler/CodeGen.oz' 282 6) nil 9) <Q: 1043> [y(6) y(3) y(5)])
		allocateL8
		move(g(0) x(6))
		inlineDot(x(6) procs x(7) cache)
		callBI('.' [x(7) x(0)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getLastValue x(8) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue y(5) 1 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1040> 10)
		move(g(1) x(0))
		inlineDot(x(0) isBuiltin x(2) cache)
		move(y(6) x(0))
		createVariableMove(y(3) x(1))
		call(x(2) 2)
		testBool(y(3) 155213 155253)
		move(g(2) x(0))
		inlineDot(x(0) builtinToken x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(6) x(0))
		sendMsg(init y(1) 1 cache)
		moveMoveYXYX(y(0) x(1) y(7) x(2))
		moveMoveYXYX(y(2) x(3) y(5) x(4))
		move(y(4) x(5))
		putConstant(unit x(0))
		move(y(1) x(6))
		deAllocateL8
		tailSendMsg(codeGenApplication x(6) 6 cache)
lbl(155213)	getRecord(vFastCall 5 y(5))
		unifyVoid(1)
		unifyValVar(y(6) x(2))
		unifyValue(y(0))
		unifyValue(y(4))
lbl(155226)	definition(x(1) 155246 pid('' 2 pos('./compiler/CodeGen.oz' 292 26) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155226)
lbl(155246)	move(y(1) x(0))
		deAllocateL8
		genFastCall(<P: 29> 7)
lbl(155253)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(287)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(155075)
lbl(155266)	definition(x(7) 155453 pid('MakeException' 6 pos('./compiler/CodeGen.oz' 298 3) nil 6) <Q: 1044> [y(1)])
		allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(3) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		putRecord(literal 1 x(1))
		setValue(y(0))
		putRecord(number 1 x(3))
		setVariable(x(4))
		putList(x(2))
		setValue(x(3))
		setVariable(x(5))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		moveMoveXYXY(x(0) y(0) x(5) y(8))
		testLiteral(y(1) unit 155352)
lbl(155347)	getNumber(~1 x(4))
		branch(155364)
lbl(155352)	move(y(1) x(1))
		inlineDot(x(1) 2 x(2) cache)
		unify(x(2) x(4))
lbl(155364)	definition(x(1) 155390 pid('' 2 pos('./compiler/CodeGen.oz' 303 15) nil 3) unit nil)
		getRecord(value 1 x(1))
		unifyVariable(x(1))
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(155364)
lbl(155390)	moveMoveYXYX(y(2) x(0) y(8) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral(kernel)
		unifyVariable(x(1))
		unifyValue(y(6))
		unifyValVar(y(0) y(2))
		move(y(0) x(0))
		genFastCall(<P: 24> 4)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(7))
		setConstant(nil)
		moveMoveYXYX(y(0) x(1) y(3) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		putConstant('RaiseError' x(0))
		deAllocateL9
		genFastCall(<Q: 1043> 13)
		endDefinition(155266)
lbl(155453)	definition(x(7) 155515 pid('GuardNeedsThread' 2 pos('./compiler/CodeGen.oz' 309 3) nil 3) <Q: 1045> nil)
		testBI('IsFree' [x(0)]#[x(2)] 155467)
		getLiteral(false x(1))
		return
lbl(155467)	match(x(0) ht(155509 [onScalar(nil 155470) onRecord(vEquateNumber 4 155474) onRecord(vEquateLiteral 4 155481) onRecord(vEquateRecord 6 155488) onRecord(vUnify 4 155495) onRecord(vFailure 2 155502)]))
lbl(155470)	getLiteral(false x(1))
		return
lbl(155474)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155481)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155488)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155495)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155502)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1045> 5)
lbl(155509)	getLiteral(true x(1))
		return
		endDefinition(155453)
lbl(155515)	definition(x(7) 155570 pid('GuardIsShallow' 2 pos('./compiler/CodeGen.oz' 323 3) nil 3) <Q: 1046> nil)
		testBI('IsFree' [x(0)]#[x(2)] 155529)
		getLiteral(true x(1))
		return
lbl(155529)	match(x(0) ht(155564 [onScalar(nil 155532) onRecord(vEquateNumber 4 155536) onRecord(vEquateLiteral 4 155543) onRecord(vEquateRecord 6 155550) onRecord(vUnify 4 155557)]))
lbl(155532)	getLiteral(true x(1))
		return
lbl(155536)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155543)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155550)	getVoid(5)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155557)	getVoid(3)
		getVariable(x(0))
		genFastCall(<Q: 1046> 5)
lbl(155564)	getLiteral(false x(1))
		return
		endDefinition(155515)
lbl(155570)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: AltNode> <M: Arbiter> <M: Records> <M: Scalars> <M: WarnedCatchAll> coord] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		setConstant(unit)
		putRecord('feat' [<M: Reg> cs] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(155600)	definition(x(7) 155646 pid('SwitchHashTable,init/fast' 5 pos('./compiler/CodeGen.oz' 342 6) nil 5) <Q: 1047> nil)
		inlineAssign(coord x(0) cache)
		inlineAssign(<M: AltNode> x(2) cache)
		inlineAssign(<M: Arbiter> x(3) cache)
		getSelf(x(0))
		inlineDot(x(0) <M: Reg> x(2) cache)
		unify(x(2) x(1))
		getSelf(x(0))
		inlineDot(x(0) cs x(1) cache)
		unify(x(1) x(4))
		return
		endDefinition(155600)
lbl(155646)	definition(x(8) 155699 pid('SwitchHashTable,init/slow' 1 pos('./compiler/CodeGen.oz' 342 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1047> 11)
		endDefinition(155646)
lbl(155699)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(155709)	definition(x(7) 155744 pid('SwitchHashTable,addScalar/fast' 3 pos('./compiler/CodeGen.oz' 349 6) nil 6) <Q: 1048> nil)
		inlineAt(<M: Scalars> x(3) cache)
		putRecord('#' 3 x(5))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		putList(x(4))
		setValue(x(5))
		setValue(x(3))
		inlineAssign(<M: Scalars> x(4) cache)
		return
		endDefinition(155709)
lbl(155744)	definition(x(8) 155785 pid('SwitchHashTable,addScalar/slow' 1 pos('./compiler/CodeGen.oz' 349 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1048> 7)
		endDefinition(155744)
lbl(155785)	putRecord('#' [1 2 fast] x(10))
		setConstant(addScalar)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(2))
lbl(155797)	definition(x(7) 155836 pid('SwitchHashTable,addRecord/fast' 2 pos('./compiler/CodeGen.oz' 352 6) nil 5) <Q: 1049> [y(2)])
		allocateL1
		inlineAt(<M: Records> x(4) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(0) x(3))
		genCall(gci(g(0) true <M: AddRecord> false 4) 0)
		move(y(0) x(0))
		inlineAssign(<M: Records> x(0) cache)
		deAllocateL1
		return
		endDefinition(155797)
lbl(155836)	definition(x(8) 155871 pid('SwitchHashTable,addRecord/slow' 1 pos('./compiler/CodeGen.oz' 352 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1049> 5)
		endDefinition(155836)
lbl(155871)	putRecord('#' [1 2 fast] x(11))
		setConstant(addRecord)
		setValue(x(8))
		setValue(x(7))
lbl(155881)	definition(x(7) 155970 pid('SwitchHashTable,AddRecord/fast' 4 pos('./compiler/CodeGen.oz' 355 6) nil 8) <Q: 1050> [y(2)])
		match(x(0) ht(155955 [onScalar(nil 155890) onRecord('|' 2 155910)]))
lbl(155890)	getList(x(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyLiteral(nil)
		return
lbl(155910)	getVarVar(x(0) x(4))
		getRecord('#' 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		testBI('==' [x(5) x(1)]#[x(7)] 155945)
		getList(x(3))
		unifyVariable(x(0))
		unifyValue(x(4))
		getRecord('#' 2 x(0))
		unifyValVar(x(1) x(3))
		getList(x(3))
		unifyValue(x(2))
		unifyValue(x(6))
		return
lbl(155945)	getListValVar(x(3) x(0) x(3))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: AddRecord> true 4) 0)
lbl(155955)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(362)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(155881)
lbl(155970)	definition(x(8) 156017 pid('SwitchHashTable,AddRecord/slow' 1 pos('./compiler/CodeGen.oz' 355 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1050> 9)
		endDefinition(155970)
lbl(156017)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: AddRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(156027)	definition(x(7) 156401 pid('SwitchHashTable,codeGen/fast' 2 pos('./compiler/CodeGen.oz' 365 6) nil 5) <Q: 1051> [y(2)])
		allocateL7
		getSelf(x(2))
		inlineDot(x(2) cs x(2) cache)
		inlineAt(<M: Scalars> x(3) cache)
		inlineDot(x(2) debugInfoVarnamesSwitch x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariable(y(4))
		testBool(x(4) 156174 156251)
lbl(156069)	definition(x(4) 156169 pid('' 3 pos('./compiler/CodeGen.oz' 370 6) nil 6) unit [y(2)])
		shallowGuard(156156)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156087)	shallowThen
		allocateL8
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(3) x(0))
		move(g(0) x(1))
		move(y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(4) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL8
		return
lbl(156156)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(370)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156069)
lbl(156169)	unify(x(4) y(4))
		branch(156262)
lbl(156174)	definition(x(4) 156246 pid('' 3 pos('./compiler/CodeGen.oz' 378 6) nil 6) unit [y(2)])
		shallowGuard(156233)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(156192)	shallowThen
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('onScalar' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(156233)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(378)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156174)
lbl(156246)	unify(x(4) y(4))
		branch(156262)
lbl(156251)	putRecord(kernel 2 x(4))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(156262)	moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: Records> x(0) cache)
		getSelf(x(3))
lbl(156283)	definition(x(1) 156330 pid('' 2 pos('./compiler/CodeGen.oz' 385 3) nil 5) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(156317)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(156304)	shallowThen
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genCall(gci(g(1) true <M: CodeGenRecord> true 3) 0)
lbl(156317)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(156283)
lbl(156330)	move(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vMatch 7 y(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValVar(y(6) x(1))
		unifyValue(y(1))
		unifyVoid(1)
		getSelf(x(2))
		inlineDot(x(2) <M: Reg> x(3) cache)
		unify(x(3) x(0))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL7
		return
		endDefinition(156027)
lbl(156401)	definition(x(8) 156436 pid('SwitchHashTable,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 365 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1051> 5)
		endDefinition(156401)
lbl(156436)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
lbl(156446)	definition(x(7) 157500 pid('SwitchHashTable,CodeGenRecord/fast' 3 pos('./compiler/CodeGen.oz' 391 6) nil 10) <Q: 1052> nil)
		allocateL(13)
		getSelf(x(3))
		inlineDot(x(3) cs x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(3) y(4))
		testList(y(3) 156949)
lbl(156477)	getVarVar(x(4) x(5))
		shallowGuard(156949)
		getRecord('#' 4 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getLiteral(nil x(5))
lbl(156497)	shallowThen
		createVariable(x(9))
lbl(156500)	definition(x(1) 156586 pid('MakeGuard' 6 pos('./compiler/CodeGen.oz' 399 5) nil 8) unit [y(4) x(9)])
		match(x(0) ht(156571 [onScalar(nil 156509) onRecord('|' 2 156516)]))
lbl(156509)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(156516)	allocateL6
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(2) y(1) x(4) y(2))
		move(g(0) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		move(x(3) x(4))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(5))
		createVariableMove(y(5) x(6))
		sendMsg(makeGetArg x(7) 7 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(4) x(3))
		moveMoveYXYX(y(2) x(4) y(5) x(5))
		deAllocateL6
		tailCall(g(1) 6)
lbl(156571)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(411)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156500)
lbl(156586)	unify(x(1) x(9))
		moveMoveXYXY(x(4) y(3) x(7) y(5))
		move(x(8) y(6))
		move(x(6) x(0))
		move(y(2) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		putConstant(nil x(5))
		call(x(9) 6)
		move(y(4) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(10))
		testBool(x(1) 156674 156690)
		moveMoveYXYX(y(3) x(0) y(10) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(12) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(156701)
lbl(156674)	moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(10) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(156701)
lbl(156690)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(417)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(156701)	move(y(8) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 156713)
		unify(y(7) y(10))
		branch(157443)
lbl(156713)	createVariableMove(y(3) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(3) 156802 156938)
		getLiteral(nil y(9))
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeRegSet y(4) 1 cache)
		inlineAt(<M: Arbiter> x(2) cache)
		putList(x(0))
		setValue(x(2))
		setConstant(nil)
		move(y(5) x(1))
		sendMsg(enterVs y(4) 2 cache)
		getRecord(vShallowGuard 8 y(7))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(3))
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyValue(y(5))
		unifyVoid(1)
		branch(157443)
lbl(156802)	move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 156869 156858)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating deep pattern as ')
		setConstant('general conditional')
		move(y(5) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(156869)
lbl(156858)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(436)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(156869)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord('#' 3 x(1))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(10))
		branch(157443)
lbl(156938)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(156949)	createVariable(y(5))
lbl(156951)	definition(x(0) 157018 pid('MakeGuard' 4 pos('./compiler/CodeGen.oz' 448 5) nil 5) unit [y(4) y(5)])
		match(x(0) ht(157003 [onScalar(nil 156960) onRecord('|' 2 156964)]))
lbl(156960)	unify(x(2) x(3))
		return
lbl(156964)	allocateL4
		getVarVar(x(4) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(3) y(2))
		move(g(0) x(0))
		createVariableMove(y(3) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		tailCall(g(1) 4)
lbl(157003)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(454)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(156951)
lbl(157018)	unify(x(0) y(5))
		move(y(0) x(0))
		callBI('Arity' [x(0)]#[x(3)])
lbl(157027)	definition(x(1) 157041 pid('' 2 pos('./compiler/CodeGen.oz' 459 5) nil 2) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1038> 5)
		endDefinition(157027)
lbl(157041)	move(x(3) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(157050)	definition(x(1) 157074 pid('' 3 pos('./compiler/CodeGen.oz' 461 6) nil 3) unit nil)
		getRecord(vGetVariable 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(157050)
lbl(157074)	moveMoveYXYX(y(6) x(0) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
lbl(157085)	definition(x(1) 157314 pid('' 3 pos('./compiler/CodeGen.oz' 466 6) nil 7) unit [y(5) y(6) y(4)])
		shallowGuard(157301)
		getRecord('#' 4 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(157105)	shallowThen
		allocateL10
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(5) y(3))
		move(x(6) y(4))
		move(x(4) x(0))
		move(g(1) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		call(g(0) 4)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(8))
		createVariable(y(9))
		testBool(y(7) 157171 157179)
		getLiteral(nil y(6))
		getRecord(vThread 5 y(8))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(3))
		unifyValue(y(9))
		unifyVoid(1)
		branch(157190)
lbl(157171)	unify(y(6) y(9))
		unify(y(8) y(5))
		branch(157190)
lbl(157179)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(470)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157190)	getRecord(vAsk 2 y(9))
		unifyVoid(1)
		unifyLiteral(nil)
		move(g(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(3))
		testBool(x(1) 157255 157272)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		move(y(4) x(0))
		move(g(2) x(1))
		move(y(6) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(157283)
lbl(157255)	move(y(4) x(0))
		move(g(2) x(1))
		move(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(157283)
lbl(157272)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(478)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157283)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		deAllocateL10
		return
lbl(157301)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(466)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(157085)
lbl(157314)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: AltNode> x(4) cache)
		inlineAt(<M: Arbiter> x(1) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterShared x(4) 4 cache)
		move(y(4) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 157425 157414)
		move(y(4) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(3) x(0))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(4) 3 x(0) cache)
		putConstant('optimization warning' x(1))
		putConstant('translating deep pattern as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(157425)
lbl(157414)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(488)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(157425)	getRecord(vCreateCond 7 y(7))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		unifyVoid(1)
lbl(157443)	move(y(0) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 157474)
		getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
lbl(157474)	getRecord('onRecord' 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL
		return
		endDefinition(156446)
lbl(157500)	definition(x(8) 157541 pid('SwitchHashTable,CodeGenRecord/slow' 1 pos('./compiler/CodeGen.oz' 391 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1052> 7)
		endDefinition(157500)
lbl(157541)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CodeGenRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(2) x(6))
		putConstant(nil x(0))
		putConstant('SwitchHashTable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(157579)	definition(x(7) 157694 pid('MakeFromPropSub' 5 pos('./compiler/CodeGen.oz' 504 6) nil 5) <Q: 1053> nil)
		match(x(0) ht(157679 [onScalar(nil 157588) onRecord('|' 2 157598)]))
lbl(157588)	unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyLiteral(nil)
		return
lbl(157598)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1053> 10)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeRecordArgument y(0) 4 cache)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(7) x(1))
		getList(x(1))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(3))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(157679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(514)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157579)
lbl(157694)	definition(x(7) 157788 pid('MakeFromProp' 5 pos('./compiler/CodeGen.oz' 517 6) nil 6) <Q: 1054> [y(1)])
		allocateL4
		move(x(4) y(0))
		createVariable(y(1))
		match(x(0) ht(157751 [onScalar(nil 157709) onRecord('|' 2 157737)]))
lbl(157709)	moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(newReg x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(1))
		unifyValue(y(3))
		branch(157764)
lbl(157737)	putRecord(value 1 x(5))
		setValue(y(1))
		move(x(5) x(4))
		genFastCall(<Q: 1053> 10)
		branch(157764)
lbl(157751)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(523)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(157764)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL4
		return
		endDefinition(157694)
lbl(157788)	definition(x(7) 157905 pid('MakeAttrFeatSub' 3 pos('./compiler/CodeGen.oz' 529 6) nil 5) <Q: 1055> [y(6)])
		match(x(0) ht(157890 [onScalar(nil 157797) onRecord('|' 2 157801)]))
lbl(157797)	getLiteral(nil x(2))
		return
lbl(157801)	allocateL6
		getVarVar(x(0) x(3))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(4) y(2))
		testRecord(x(0) '#' 2 157829)
lbl(157824)	unify(x(2) x(0))
		branch(157878)
lbl(157829)	moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(5) x(0))
		inlineDot(x(0) value x(1) cache)
		move(g(0) x(2))
		inlineDot(x(2) literals x(3) cache)
		inlineDot(x(3) ooFreeFlag x(4) cache)
		unify(x(4) x(1))
		getRecord('#' 2 y(4))
		unifyValue(y(3))
		unifyValue(y(5))
lbl(157878)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1055> 7)
lbl(157890)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(539)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(157788)
lbl(157905)	definition(x(7) 158018 pid('MakeAttrFeat' 6 pos('./compiler/CodeGen.oz' 542 6) nil 9) <Q: 1056> [y(5)])
		allocateL7
		move(g(0) x(6))
		inlineDot(x(6) atomNode x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(8) y(5))
		putConstant(unit x(1))
		sendMsg(init y(5) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1055> 6)
		move(g(0) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		move(y(6) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(0) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(157905)
lbl(158018)	definition(x(7) 158134 pid('CodeGenRecord,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 553 6) nil 3) <Q: 1057> nil)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 158130)
lbl(158049)	inlineAt(args x(0) cache)
lbl(158054)	definition(x(1) 158097 pid('' 2 pos('./compiler/CodeGen.oz' 556 7) nil 3) unit nil)
		testRecord(x(0) '#' 2 158091)
lbl(158065)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(158091)	getLiteral(true x(1))
		return
		endDefinition(158054)
lbl(158097)	createVariableMove(y(1) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(1) 158117 158119)
lbl(158107)	inlineAt(value x(0) cache)
		unify(x(0) y(0))
		deAllocateL2
		return
lbl(158117)	deAllocateL2
		return
lbl(158119)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(554)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158130)	deAllocateL2
		return
		endDefinition(158018)
lbl(158134)	definition(x(8) 158160 pid('CodeGenRecord,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 553 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1057> 3)
		endDefinition(158134)
lbl(158160)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(3))
lbl(158172)	definition(x(7) 158821 pid('CodeGenRecord,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 565 6) nil 6) <Q: 1058> [y(3) g(24) g(25) g(26) g(27) g(28)])
		allocateL8
		inlineAt(args x(4) cache)
lbl(158184)	definition(x(5) 158222 pid('' 1 pos('./compiler/CodeGen.oz' 569 3) nil 2) unit [x(0)])
		testRecord(x(0) '#' 2 158208)
lbl(158195)	getVoid(1)
		getVariable(x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
lbl(158208)	move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(assignRegToStructure x(1) 1 cache)
		endDefinition(158184)
lbl(158222)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		move(x(5) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 158281 158808)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: MakeConstructionOpen> false 4) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158281)	inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		inlineAt(args x(0) cache)
lbl(158300)	definition(x(1) 158328 pid('' 3 pos('./compiler/CodeGen.oz' 583 7) nil 3) unit nil)
		testRecord(x(1) '#' 2 158322)
lbl(158311)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(158322)	unify(x(2) x(0))
		return
		endDefinition(158300)
lbl(158328)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		move(y(4) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		move(g(2) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 158398 158797)
lbl(158358)	testBool(y(7) 158398 158797)
lbl(158362)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		move(y(2) x(4))
		createVariableMove(y(6) x(5))
		genCall(gci(g(0) true <M: MakeConstructionBasic> false 6) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158398)	testBool(y(7) 158665 158786)
		inlineAt(args x(1) cache)
lbl(158407)	definition(x(2) 158442 pid('' 3 pos('./compiler/CodeGen.oz' 596 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 158431)
lbl(158418)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(158431)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(158407)
lbl(158442)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(158573)
		move(x(0) y(6))
		createCond(158567)
lbl(158460)	lastClause
		clause
		thread(158478)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(158478)	ask
lbl(158479)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(158517)	definition(x(1) 158554 pid('' 3 pos('./compiler/CodeGen.oz' 605 26) nil 5) unit nil)
		shallowGuard(158541)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(158533)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(158541)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(605)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158517)
lbl(158554)	moveMoveYXYX(y(4) x(0) y(5) x(3))
		putConstant(someLabel x(2))
		genFastCall(<P: 30> 8)
		branch(158586)
lbl(158567)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(158573)	putConstant(someLabel x(0))
		move(y(4) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(158586)	move(y(5) x(0))
		testBI('IsTuple' [x(0)]#[x(1)] 158626)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		createVariableMove(y(4) x(4))
		genCall(gci(g(0) true <M: MakeConstructionTuple> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158626)	createVariableMove(y(4) x(1))
		genFastCall(<P: 160> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158665)	inlineAt(args x(1) cache)
lbl(158670)	definition(x(2) 158744 pid('' 3 pos('./compiler/CodeGen.oz' 618 9) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(1) '#' 2 158702)
lbl(158691)	getVarVar(x(1) x(3))
		unify(y(2) x(1))
		unify(y(3) x(3))
		branch(158705)
lbl(158702)	unify(y(3) x(1))
lbl(158705)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(3))
		moveMoveXYYX(x(0) y(1) y(0) x(1))
		testBI('IsDet' [x(1)]#[x(2)] 158737)
lbl(158722)	testBI('IsInt' [x(1)]#[x(2)] 158731)
lbl(158726)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(158731)	testBI('IsLiteral' [x(1)]#[x(2)] 158737)
		branch(158726)
lbl(158737)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(158670)
lbl(158744)	move(y(5) x(0))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 73> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		createVariableMove(y(5) x(4))
		genCall(gci(g(0) true <M: MakeConstructionRecord> false 5) 0)
		getSelf(x(4))
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(3) x(2))
		deAllocateL8
		tailSendMsg(makeEquationDescend x(4) 3 cache)
lbl(158786)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(594)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158797)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(590)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(158808)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(577)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(158172)
lbl(158821)	definition(x(8) 158868 pid('CodeGenRecord,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 565 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1058> 9)
		endDefinition(158821)
lbl(158868)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(158878)	definition(x(7) 159386 pid('CodeGenRecord,MakeConstructionBasic/fast' 6 pos('./compiler/CodeGen.oz' 632 6) nil 8) <Q: 1059> [g(26) g(27)])
		testLiteral(x(3) nil 158905)
lbl(158888)	getRecord(vEquateLiteral 4 x(4))
		unifyVoid(1)
		unifyValVar(x(2) x(0))
		unifyValue(x(5))
		tailSendMsg(reg x(1) 1 cache)
lbl(158905)	allocateL9
		inlineAt(args x(6) cache)
lbl(158911)	definition(x(7) 158946 pid('' 3 pos('./compiler/CodeGen.oz' 637 3) nil 3) unit nil)
		testRecord(x(1) '#' 2 158935)
lbl(158922)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(158935)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(158911)
lbl(158946)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(3) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(6))
		exHandler(159115)
		move(x(0) y(7))
		createCond(159109)
lbl(158983)	lastClause
		clause
		thread(159001)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(159001)	ask
lbl(159002)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(159040)	definition(x(0) 159077 pid('' 3 pos('./compiler/CodeGen.oz' 646 30) nil 5) unit nil)
		shallowGuard(159064)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159056)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(159064)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(646)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159040)
lbl(159077)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(159127)
lbl(159109)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(159115)	moveMoveYXYX(y(2) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(159127)	createVariable(y(5))
		createVariable(y(7))
		createVariable(y(8))
		move(y(6) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 159252)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(8))
lbl(159154)	definition(x(3) 159230 pid('' 3 pos('./compiler/CodeGen.oz' 652 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159217)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159170)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159217)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(652)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159154)
lbl(159230)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(159359)
lbl(159252)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(5))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(8))
lbl(159266)	definition(x(4) 159342 pid('' 3 pos('./compiler/CodeGen.oz' 659 10) nil 6) unit [y(6) y(0)])
		shallowGuard(159329)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(159282)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(159329)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159266)
lbl(159342)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(4))
		move(y(5) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(159359)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValVar(y(5) x(0))
		unifyValue(y(7))
		unifyValue(y(8))
		move(y(1) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(158878)
lbl(159386)	definition(x(8) 159445 pid('CodeGenRecord,MakeConstructionBasic/slow' 1 pos('./compiler/CodeGen.oz' 632 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1059> 13)
		endDefinition(159386)
lbl(159445)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: MakeConstructionBasic>)
		setValue(x(8))
		setValue(x(7))
lbl(159455)	definition(x(7) 159875 pid('CodeGenRecord,MakeConstructionOpen/fast' 4 pos('./compiler/CodeGen.oz' 667 6) nil 7) <Q: 1060> [y(1) g(29)])
		allocateL10
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(4) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyValVar(y(4) y(2))
		inlineAt(args x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		createVariable(y(7))
		testBool(y(4) 159601 159686)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159697)
lbl(159601)	createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(4) x(0))
		sendMsg(init y(8) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(9))
		unifyValVar(y(4) x(4))
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(6))
		setValue(x(1))
		putList(x(2))
		setValue(y(8))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(7) x(5))
		putConstant(tellRecordSize x(0))
		genFastCall(<Q: 1043> 12)
		branch(159697)
lbl(159686)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(678)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(159697)	inlineAt(args x(0) cache)
lbl(159702)	definition(x(1) 159864 pid('' 4 pos('./compiler/CodeGen.oz' 690 3) nil 6) unit [y(0) y(1) y(5)])
		allocateL7
		move(x(3) y(0))
		createVariable(y(1))
		createVariable(y(2))
		createVariable(y(3))
		testRecord(x(2) '#' 2 159760)
lbl(159723)	getVarVar(x(4) y(4))
		move(g(0) x(0))
		move(y(1) x(3))
		createVariableMove(y(5) x(2))
		sendMsg(makeVO x(4) 4 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(4) 4 cache)
		branch(159826)
lbl(159760)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(2) y(6))
		move(g(0) x(0))
		move(y(1) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(1) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) y(4))
		getRecord(vEquateNumber 4 y(5))
		unifyVoid(1)
		unifyValVar(y(4) x(1))
		unifyVariable(y(5))
		move(x(1) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(5) x(1) y(3) x(2))
		move(y(2) x(3))
		sendMsg(makeVO y(6) 4 cache)
lbl(159826)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putList(x(0))
		setValue(y(1))
		setValue(x(1))
		putList(x(2))
		setValue(g(1))
		setValue(x(0))
		move(g(2) x(1))
		move(g(0) x(3))
		moveMoveYXYX(y(3) x(4) y(0) x(5))
		putConstant('^' x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
		endDefinition(159702)
lbl(159864)	moveMoveYXYX(y(7) x(2) y(3) x(3))
		deAllocateL10
		genFastCall(<P: 82> 9)
		endDefinition(159455)
lbl(159875)	definition(x(8) 159922 pid('CodeGenRecord,MakeConstructionOpen/slow' 1 pos('./compiler/CodeGen.oz' 667 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1060> 9)
		endDefinition(159875)
lbl(159922)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: MakeConstructionOpen>)
		setValue(x(8))
		setValue(x(7))
lbl(159932)	definition(x(7) 160436 pid('CodeGenRecord,MakeConstructionTuple/fast' 5 pos('./compiler/CodeGen.oz' 704 6) nil 7) <Q: 1061> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		move(y(2) x(0))
		callBI('Width' [x(0)]#[x(1)])
		move(x(1) y(8))
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(9) x(0))
		sendMsg(init y(10) 1 cache)
		createVariable(y(11))
		testNumber(y(8) 0 160048)
lbl(160034)	getRecord(vEquateLiteral 4 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValue(y(6))
		unifyValue(y(11))
		branch(160238)
lbl(160048)	createVariable(x(4))
lbl(160050)	definition(x(0) 160169 pid('MakeList' 4 pos('./compiler/CodeGen.oz' 719 5) nil 6) unit [y(8) x(4) y(0) y(2)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 160157)
		allocateL7
		inlinePlus1(x(0) x(5))
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(1) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(2) 1 cache)
		move(g(3) x(0))
		move(y(0) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(g(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(160157)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
		endDefinition(160050)
lbl(160169)	unify(x(0) x(4))
		move(y(3) x(1))
		putConstant(2 x(0))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(4) 4)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(4) cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(4) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(11))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(13))
		unifyLiteral(nil)
lbl(160238)	getRecord(vEquateNumber 4 y(11))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(9) y(2))
		inlineAt(label x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(3) 160322 160423)
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160322)	createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(3) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValVar(y(3) y(2))
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(10))
		setValue(x(3))
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(6))
		setValue(x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(3))
		moveMoveYXYX(y(2) x(4) y(4) x(5))
		putConstant(tuple x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(160423)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(740)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(159932)
lbl(160436)	definition(x(8) 160489 pid('CodeGenRecord,MakeConstructionTuple/slow' 1 pos('./compiler/CodeGen.oz' 704 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1061> 11)
		endDefinition(160436)
lbl(160489)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeConstructionTuple>)
		setValue(x(8))
		setValue(x(7))
lbl(160499)	definition(x(7) 161143 pid('CodeGenRecord,MakeConstructionRecord/fast' 5 pos('./compiler/CodeGen.oz' 752 6) nil 7) <Q: 1062> [y(1)])
		allocateL(14)
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(getCoord x(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		createVariable(y(8))
		testList(y(2) 160955)
lbl(160565)	getVarVar(x(0) x(1))
		shallowGuard(160955)
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(160578)	shallowThen
		createVariable(x(4))
lbl(160581)	definition(x(0) 160802 pid('MakePairList' 4 pos('./compiler/CodeGen.oz' 761 5) nil 8) unit [x(4) y(0)])
		allocateL10
		move(x(0) y(0))
		match(y(0) ht(160787 [onScalar(nil 160594) onRecord('|' 2 160605)]))
lbl(160594)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		deAllocateL10
		return
lbl(160605)	getVarVar(x(4) x(5))
		shallowGuard(160787)
		getRecord('#' 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(160618)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(5) x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(g(0) 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(8))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 160676)
		getRecord(number 1 y(8))
		unifyValue(y(2))
		branch(160703)
lbl(160676)	testBI('IsLiteral' [x(0)]#[x(1)] 160688)
		getRecord(literal 1 y(8))
		unifyValue(y(2))
		branch(160703)
lbl(160688)	getRecord(value 1 y(8))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(160703)	move(g(1) x(0))
		move(y(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeRecordArgument y(3) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(8) x(2))
		getList(x(2))
		unifyValue(y(9))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(6))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(value 1 y(1))
		unifyValue(y(7))
		deAllocateL10
		return
lbl(160787)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(782)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160581)
lbl(160802)	unify(x(0) x(4))
		moveMoveXYXY(x(2) y(2) x(3) y(9))
		move(x(1) x(0))
		move(y(3) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		call(x(4) 4)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		createVariable(y(12))
		move(y(2) x(0))
		testBI('IsInt' [x(0)]#[x(1)] 160851)
		getRecord(number 1 y(12))
		unifyValue(y(2))
		branch(160878)
lbl(160851)	testBI('IsLiteral' [x(0)]#[x(1)] 160863)
		getRecord(literal 1 y(12))
		unifyValue(y(2))
		branch(160878)
lbl(160863)	getRecord(value 1 y(12))
		unifyVariable(x(1))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
lbl(160878)	moveMoveYXYX(y(0) x(0) y(10) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(13) x(3))
		sendMsg(makeRecordArgument y(9) 4 cache)
		getRecord(vEquateRecord 6 y(2))
		unifyVoid(1)
		unifyLiteral('#')
		unifyNumber(2)
		unifyValVar(y(3) x(0))
		unifyVariable(x(1))
		getListValVar(x(0) y(12) x(2))
		getList(x(2))
		unifyValue(y(13))
		unifyLiteral(nil)
		getRecord(vEquateRecord 6 x(1))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(6) x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(value 1 x(1))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(11))
		unifyLiteral(nil)
		branch(160968)
lbl(160955)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(797)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(160968)	inlineAt(label x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(isVariableOccurrence x(1) 1 cache)
		testBool(y(2) 161035 161130)
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(label x(6) cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(x(6))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161035)	createVariableMove(y(2) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValVar(y(2) y(8))
		move(y(5) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(3))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		moveMoveYXYX(y(8) x(4) y(4) x(5))
		putConstant(record x(0))
		deAllocateL
		genFastCall(<Q: 1043> 13)
lbl(161130)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(798)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(160499)
lbl(161143)	definition(x(8) 161196 pid('CodeGenRecord,MakeConstructionRecord/slow' 1 pos('./compiler/CodeGen.oz' 752 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1062> 11)
		endDefinition(161143)
lbl(161196)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: MakeConstructionRecord>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(3) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenRecord' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(161243)	definition(x(7) 161326 pid('OzValueToVArg' 5 pos('./compiler/CodeGen.oz' 813 6) nil 6) <Q: 1063> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 161263)
		unify(x(2) x(3))
		getRecord(number 1 x(4))
		unifyValue(x(0))
		return
lbl(161263)	testBI('IsLiteral' [x(0)]#[x(5)] 161277)
		unify(x(2) x(3))
		getRecord(literal 1 x(4))
		unifyValue(x(0))
		return
lbl(161277)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		genFastCall(<Q: 1064> 10)
		getRecord(value 1 y(4))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(161243)
lbl(161326)	definition(x(7) 161664 pid('OzValueToVInstr' 5 pos('./compiler/CodeGen.oz' 827 6) nil 8) <Q: 1064> nil)
		testBI('IsNumber' [x(0)]#[x(5)] 161349)
		getRecord(vEquateNumber 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161349)	testBI('IsLiteral' [x(0)]#[x(5)] 161366)
		getRecord(vEquateLiteral 4 x(3))
		unifyVoid(1)
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(4))
		return
lbl(161366)	testBI('IsTuple' [x(0)]#[x(5)] 161515)
		allocateL6
		createVariable(x(5))
		createVariable(x(6))
lbl(161375)	definition(x(7) 161454 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 833 5) nil 7) unit [x(5) x(0) x(2) x(6)])
		move(g(0) x(4))
		testLE(x(0) x(4) x(5) 161445)
		allocateL5
		move(g(1) x(5))
		callBI('.' [x(5) x(0)]#[x(6)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(6) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		move(y(0) x(0))
		inlinePlus1(x(0) x(4))
		move(x(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		tailCall(g(3) 4)
lbl(161445)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
		endDefinition(161375)
lbl(161454)	unify(x(7) x(6))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(5))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(3) x(1))
		putConstant(1 x(0))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(6) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161515)	testBI('IsRecord' [x(0)]#[x(5)] 161661)
		allocateL6
		createVariable(x(5))
lbl(161522)	definition(x(6) 161603 pid('MakeArgs' 4 pos('./compiler/CodeGen.oz' 848 5) nil 6) unit [x(0) x(2) x(5)])
		match(x(0) ht(161588 [onScalar(nil 161531) onRecord('|' 2 161538)]))
lbl(161531)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(161538)	allocateL5
		getVarVar(x(0) y(0))
		move(g(0) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) x(0))
		move(x(1) x(2))
		move(g(1) x(1))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		genFastCall(<Q: 1063> 10)
		getList(y(2))
		unifyValVar(y(4) x(3))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(g(2) 4)
lbl(161588)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(855)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(161522)
lbl(161603)	unify(x(6) x(5))
		callBI('Arity' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(4) y(2) x(2) y(3))
		move(y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(5))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL6
		return
lbl(161661)	return
		endDefinition(161326)
lbl(161664)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [<M: Val> reg] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(161678)	definition(x(7) 161698 pid('CodeGenOzValue,init/fast' 1 pos('./compiler/CodeGen.oz' 872 2) nil 3) <Q: 1065> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161678)
lbl(161698)	definition(x(8) 161724 pid('CodeGenOzValue,init/slow' 1 pos('./compiler/CodeGen.oz' 872 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1065> 3)
		endDefinition(161698)
lbl(161724)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(161734)	definition(x(7) 161754 pid('CodeGenOzValue,reg/fast' 1 pos('./compiler/CodeGen.oz' 875 2) nil 3) <Q: 1066> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161734)
lbl(161754)	definition(x(8) 161780 pid('CodeGenOzValue,reg/slow' 1 pos('./compiler/CodeGen.oz' 875 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1066> 3)
		endDefinition(161754)
lbl(161780)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(161790)	definition(x(7) 161843 pid('CodeGenOzValue,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 878 2) nil 5) <Q: 1067> nil)
		allocateL5
		getSelf(x(4))
		inlineDot(x(4) <M: Val> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		genFastCall(<Q: 1064> 11)
		endDefinition(161790)
lbl(161843)	definition(x(8) 161890 pid('CodeGenOzValue,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 878 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1067> 9)
		endDefinition(161843)
lbl(161890)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(161900)	definition(x(7) 161928 pid('CodeGenOzValue,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 881 2) nil 3) <Q: 1068> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(161900)
lbl(161928)	definition(x(8) 161954 pid('CodeGenOzValue,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 881 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1068> 3)
		endDefinition(161928)
lbl(161954)	putRecord('#' [1 2 fast] x(12))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(161964)	definition(x(7) 162023 pid('CodeGenOzValue,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 884 2) nil 4) <Q: 1069> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Val> x(0) cache)
		unify(x(1) x(2))
		testBI('IsNumber' [x(0)]#[x(1)] 161992)
		getRecord(number 1 x(3))
		unifyValue(x(0))
		return
lbl(161992)	testBI('IsLiteral' [x(0)]#[x(1)] 162003)
		getRecord(literal 1 x(3))
		unifyValue(x(0))
		return
lbl(162003)	getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(161964)
lbl(162023)	definition(x(8) 162070 pid('CodeGenOzValue,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 884 2) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1069> 9)
		endDefinition(162023)
lbl(162070)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(162080)	definition(x(7) 162114 pid('CodeGenOzValue,isConstruction/fast' 1 pos('./compiler/CodeGen.oz' 891 2) nil 3) <Q: 1070> nil)
		getSelf(x(1))
		inlineDot(x(1) <M: Val> x(1) cache)
		testBI('IsRecord' [x(1)]#[x(2)] 162108)
		callBI('IsLiteral' [x(1)]#[x(2)])
		callBI('Not' [x(2)]#[x(1)])
		unify(x(1) x(0))
		return
lbl(162108)	getLiteral(false x(0))
		return
		endDefinition(162080)
lbl(162114)	definition(x(8) 162140 pid('CodeGenOzValue,isConstruction/slow' 1 pos('./compiler/CodeGen.oz' 891 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1070> 3)
		endDefinition(162114)
lbl(162140)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('CodeGenOzValue' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162181)	definition(x(7) 162501 pid('CodeGenStatement,startCodeGen/fast' 7 pos('./compiler/CodeGen.oz' 898 6) nil 12) <Q: 1071> [y(0) g(24)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		move(x(2) x(1))
		sendMsg(init y(5) 2 cache)
lbl(162221)	definition(x(1) 162241 pid('' 1 pos('./compiler/CodeGen.oz' 903 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162221)
lbl(162241)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(162247)	definition(x(1) 162267 pid('' 1 pos('./compiler/CodeGen.oz' 904 16) nil 2) unit [y(5)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setFreshReg x(1) 1 cache)
		endDefinition(162247)
lbl(162267)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		sendMsg(startDefinition y(5) 0 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		putConstant(nil x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		createVariableMove(y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg('endDefinition' y(5) 6 cache)
		getRecord('#' 2 y(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(y(3) x(1))
		sendMsg(getRegNames y(5) 2 cache)
		callBI('NewName' nil#[x(3)])
		callBI('NewName' nil#[x(0)])
		getList(y(4))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
		getList(x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord('definition' 6 x(4))
		unifyVariable(x(6))
		unifyValVar(x(0) x(7))
		unifyLiteral(unit)
		unifyVariable(x(8))
		unifyValue(y(2))
		getRecord(x 1 x(6))
		unifyNumber(0)
		getRecord('pid' 5 x(7))
		unifyLiteral('Toplevel abstraction')
		unifyNumber(0)
		unifyVariable(x(9))
		unifyVariable(x(10))
		unifyValue(y(6))
		getRecord('pos' 3 x(9))
		unifyLiteral('')
		unifyNumber(0)
		unifyNumber(0)
		getList(x(10))
		unifyLiteral(native)
		unifyLiteral(nil)
		getList(x(5))
		unifyVariable(x(11))
		unifyVariable(y(3))
		getRecord('endDefinition' 1 x(11))
		unifyValue(x(3))
lbl(162426)	definition(x(1) 162447 pid('' 3 pos('./compiler/CodeGen.oz' 918 30) nil 3) unit nil)
		getRecord(g 1 x(2))
		unifyVariable(x(1))
		inlineMinus1(x(0) x(2))
		unify(x(2) x(1))
		return
		endDefinition(162426)
lbl(162447)	moveMoveXYYX(x(0) y(2) y(0) x(0))
		move(x(8) x(2))
		genFastCall(<P: 81> 6)
		putRecord('lbl' 1 x(0))
		setValue(y(2))
		putRecord(x 1 x(4))
		setConstant(0)
		putRecord('tailCall' 2 x(3))
		setValue(x(4))
		setConstant(0)
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putList(x(1))
		setValue(x(0))
		setValue(x(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL7
		genFastCall(<P: 21> 7)
		endDefinition(162181)
lbl(162501)	definition(x(8) 162566 pid('CodeGenStatement,startCodeGen/slow' 1 pos('./compiler/CodeGen.oz' 898 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1071> 15)
		endDefinition(162501)
lbl(162566)	putRecord('#' [1 2 fast] x(9))
		setConstant(startCodeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStatement' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162603)	definition(x(7) 162665 pid('CodeGenTypeOf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 926 6) nil 6) <Q: 1072> [y(7)])
		allocateL4
		inlineAt(value x(3) cache)
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		move(x(3) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(res x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(3) x(4))
		deAllocateL4
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(162603)
lbl(162665)	definition(x(8) 162706 pid('CodeGenTypeOf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 926 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1072> 7)
		endDefinition(162665)
lbl(162706)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTypeOf' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162743)	definition(x(7) 162801 pid('CodeGenStepPoint,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 932 6) nil 6) <Q: 1073> nil)
		allocateL4
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(coord x(0) cache)
		inlineAt(kind x(1) cache)
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		deAllocateL4
		genFastCall(<Q: 1024> 13)
		endDefinition(162743)
lbl(162801)	definition(x(8) 162842 pid('CodeGenStepPoint,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 932 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1073> 7)
		endDefinition(162801)
lbl(162842)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenStepPoint' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(162879)	definition(x(7) 163022 pid('CodeGenDeclaration,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 939 6) nil 5) <Q: 1074> nil)
		allocateL5
		inlineAt(localVars x(3) cache)
lbl(162891)	definition(x(4) 162911 pid('' 1 pos('./compiler/CodeGen.oz' 940 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(162891)
lbl(162911)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 162989 163009)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(162989)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(163009)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(941)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(162879)
lbl(163022)	definition(x(8) 163063 pid('CodeGenDeclaration,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 939 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1074> 7)
		endDefinition(163022)
lbl(163063)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDeclaration' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163100)	definition(x(7) 163130 pid('CodeGenSkipNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 952 6) nil 6) <Q: 1075> nil)
		inlineAt(coord x(0) cache)
		createVariable(x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(5))
		putConstant('skip' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(163100)
lbl(163130)	definition(x(8) 163171 pid('CodeGenSkipNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 952 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1075> 7)
		endDefinition(163130)
lbl(163171)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenSkipNode' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(163208)	definition(x(7) 163241 pid('CodeGenEquation,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 958 6) nil 6) <Q: 1076> nil)
		inlineAt(right x(4) cache)
		inlineAt(left x(5) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(163208)
lbl(163241)	definition(x(8) 163282 pid('CodeGenEquation,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 958 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1076> 7)
		endDefinition(163241)
lbl(163282)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquation' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(163331)	definition(x(7) 163340 pid('CodeGenConstruction,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 965 6) nil 1) <Q: 1077> nil)
		return
		endDefinition(163331)
lbl(163340)	definition(x(8) 163366 pid('CodeGenConstruction,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 965 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1077> 3)
		endDefinition(163340)
lbl(163366)	putRecord('#' [1 2 fast] x(9))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(163376)	definition(x(7) 163388 pid('CodeGenConstruction,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 968 6) nil 3) <Q: 1078> nil)
		unify(x(1) x(2))
		return
		endDefinition(163376)
lbl(163388)	definition(x(8) 163429 pid('CodeGenConstruction,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 968 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1078> 7)
		endDefinition(163388)
lbl(163429)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(163439)	definition(x(7) 163478 pid('CodeGenConstruction,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 971 6) nil 4) <Q: 1079> [y(3)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL4
		genCall(gci(g(0) true makeEquation true 4) 0)
		endDefinition(163439)
lbl(163478)	definition(x(8) 163525 pid('CodeGenConstruction,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 971 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1079> 9)
		endDefinition(163478)
lbl(163525)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(163535)	definition(x(7) 164147 pid('CodeGenConstruction,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 975 6) nil 6) <Q: 1080> [g(24) g(25) g(26) g(27) y(3)])
		allocateL9
		inlineAt(label x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(4) 1 cache)
		inlineAt(args x(0) cache)
lbl(163571)	definition(x(1) 163599 pid('' 3 pos('./compiler/CodeGen.oz' 978 4) nil 3) unit nil)
		testRecord(x(1) '#' 2 163593)
lbl(163582)	getVariable(x(1))
		move(x(2) x(0))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(163593)	unify(x(2) x(0))
		return
		endDefinition(163571)
lbl(163599)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		inlineAt(isOpen x(0) cache)
		testBI('Not' [x(0)]#[x(1)] 164096)
lbl(163614)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 164096)
lbl(163621)	move(y(5) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(6) 164096 164134)
lbl(163637)	testLiteral(y(5) nil 163652)
lbl(163641)	unify(y(1) y(2))
		getRecord(literal 1 y(3))
		unifyValue(y(4))
		deAllocateL9
		return
lbl(163652)	inlineAt(args x(1) cache)
lbl(163657)	definition(x(2) 163692 pid('' 3 pos('./compiler/CodeGen.oz' 987 6) nil 3) unit nil)
		testRecord(x(1) '#' 2 163681)
lbl(163668)	getVoid(1)
		getVariable(x(1))
		getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
lbl(163681)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(163657)
lbl(163692)	move(y(5) x(0))
		createVariableMove(y(6) x(3))
		genFastCall(<P: 73> 8)
		createVariable(y(5))
		exHandler(163842)
		move(x(0) y(7))
		createCond(163836)
lbl(163710)	lastClause
		clause
		thread(163728)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL9
		return
lbl(163728)	ask
lbl(163729)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(163767)	definition(x(0) 163804 pid('' 3 pos('./compiler/CodeGen.oz' 996 26) nil 5) unit nil)
		shallowGuard(163791)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163783)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(163791)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(996)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163767)
lbl(163804)	moveMoveXYYX(x(0) y(7) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(8) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		genFastCall(<P: 30> 8)
		branch(163854)
lbl(163836)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(163842)	moveMoveYXYX(y(4) x(0) y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(5))
		popEx
lbl(163854)	createVariable(y(6))
		createVariable(y(7))
		move(y(5) x(1))
		testBI('IsTuple' [x(1)]#[x(2)] 163977)
		callBI('Width' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(5))
		setValue(y(7))
		setValue(y(1))
lbl(163879)	definition(x(3) 163955 pid('' 3 pos('./compiler/CodeGen.oz' 1002 10) nil 6) unit [y(5) y(0)])
		shallowGuard(163942)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(163895)	shallowThen
		allocateL4
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(163942)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1002)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163879)
lbl(163955)	putRecord('#' 2 x(4))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		genFastCall(<P: 105> 12)
		branch(164084)
lbl(163977)	callBI('Arity' [x(1)]#[x(2)])
		unify(x(2) y(6))
		putRecord('#' 2 x(3))
		setValue(y(7))
		setValue(y(1))
lbl(163991)	definition(x(4) 164067 pid('' 3 pos('./compiler/CodeGen.oz' 1009 10) nil 6) unit [y(5) y(0)])
		shallowGuard(164054)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(164007)	shallowThen
		allocateL4
		move(g(0) x(1))
		callBI('.' [x(1) x(0)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(g(1) x(0))
		move(x(4) x(2))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(3))
		sendMsg(makeRecordArgument x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(164054)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1009)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163991)
lbl(164067)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(6) x(0))
		move(x(4) x(1))
		genFastCall(<P: 32> 8)
lbl(164084)	getRecord(record 3 y(3))
		unifyValue(y(4))
		unifyValue(y(6))
		unifyValue(y(7))
		deAllocateL9
		return
lbl(164096)	move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		genCall(gci(g(4) true makeEquation false 4) 0)
		getRecord(value 1 y(3))
		unifyVariable(x(0))
		move(y(4) x(1))
		deAllocateL9
		tailSendMsg(reg x(1) 1 cache)
lbl(164134)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(981)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(163535)
lbl(164147)	definition(x(8) 164194 pid('CodeGenConstruction,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 975 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1080> 9)
		endDefinition(164147)
lbl(164194)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenConstruction' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(164231)	definition(x(7) 165391 pid('CodeGenDefinition,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1025 6) nil 7) <Q: 1081> [g(14) g(30) g(31)])
		allocateL(19)
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' x(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariable(y(4))
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164287)
lbl(164276)	getLiteral('' y(4))
		getNumber(1 y(5))
		getNumber(0 y(6))
		branch(164314)
lbl(164287)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(4))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(6))
lbl(164314)	createVariableMove(y(7) x(0))
		sendMsg(getOrigin y(3) 1 cache)
		createVariable(y(8))
		testLiteral(y(7) generated 164339)
lbl(164329)	inlineAt(printName x(0) cache)
		unify(x(0) y(8))
		branch(164348)
lbl(164339)	move(y(8) x(0))
		sendMsg(getPrintName y(3) 1 cache)
lbl(164348)	putRecord('pos' 3 x(0))
		setValue(y(4))
		setValue(y(5))
		setValue(y(6))
		putRecord('pid' 5 y(7))
		setValue(y(8))
		setVariable(x(1))
		setValue(x(0))
		setVariable(y(9))
		setVariable(y(10))
		inlineAt(formalArgs x(0) cache)
		genFastCall(<P: 24> 4)
		inlineAt(procFlags x(1) cache)
		putConstant(native x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 164406 164411)
		getList(y(9))
		unifyLiteral(native)
		unifyLiteral(nil)
		branch(164422)
lbl(164406)	getLiteral(nil y(9))
		branch(164422)
lbl(164411)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1036)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164422)	inlineAt(isStateUsing x(0) cache)
		createVariable(y(4))
		testBool(x(0) 164479 164484)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 164457 164468)
		move(y(4) x(0))
		sendMsg(newSelfReg y(0) 1 cache)
		branch(164495)
lbl(164457)	move(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		branch(164495)
lbl(164468)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1044)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164479)	getLiteral(none y(4))
		branch(164495)
lbl(164484)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1043)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(164495)	inlineAt(toCopy x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		testLiteral(x(0) unit 164795)
lbl(164508)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164519)	definition(x(1) 164555 pid('' 2 pos('./compiler/CodeGen.oz' 1057 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164519)
lbl(164555)	createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(9))
		testBool(x(1) 164625 164646)
		inlineAt(formalArgs x(4) cache)
		move(x(4) x(0))
		move(y(9) x(2))
		createVariableMove(y(11) x(1))
		createVariableMove(y(12) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(12) x(2))
		createVariableMove(y(13) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(11) x(0) y(13) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(164657)
lbl(164625)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(164657)
lbl(164646)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1061)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(164657)	inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 164673)
lbl(164668)	getLiteral(nil y(11))
		branch(164704)
lbl(164673)	inlineAt(allVariables x(0) cache)
lbl(164678)	definition(x(1) 164698 pid('' 2 pos('./compiler/CodeGen.oz' 1069 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(164678)
lbl(164698)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(164704)	createVariable(y(12))
		createVariable(y(13))
		testLiteral(y(4) none 164720)
lbl(164712)	unify(y(12) y(9))
		unify(y(5) y(13))
		branch(164740)
lbl(164720)	getRecord(vSetSelf 3 y(12))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(9))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(164740)	moveMoveYXYX(y(12) x(0) y(8) x(1))
		moveMoveYXYX(y(11) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(9))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
		branch(165358)
lbl(164795)	sendMsg(startDefinition y(0) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(164806)	definition(x(1) 164842 pid('' 2 pos('./compiler/CodeGen.oz' 1090 5) nil 2) unit [y(0)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		sendMsg(setReg y(0) 1 cache)
		move(y(1) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(164806)
lbl(164842)	createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
		sendMsg(startDefinition y(0) 0 cache)
		inlineAt(statements x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(11) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		inlineAt(allVariables x(0) cache)
		createVariable(y(12))
		testLiteral(x(0) nil 164887)
lbl(164882)	getLiteral(nil y(12))
		branch(164918)
lbl(164887)	inlineAt(allVariables x(0) cache)
lbl(164892)	definition(x(1) 164912 pid('' 2 pos('./compiler/CodeGen.oz' 1097 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(164892)
lbl(164912)	move(y(12) x(2))
		genFastCall(<P: 29> 6)
lbl(164918)	createVariable(y(13))
		createVariable(y(14))
		testLiteral(y(4) none 164934)
lbl(164926)	unify(y(14) y(11))
		unify(y(5) y(13))
		branch(164954)
lbl(164934)	getRecord(vSetSelf 3 y(14))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(11))
		getRecord(vGetSelf 3 y(5))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValue(y(13))
lbl(164954)	moveMoveYXYX(y(14) x(0) y(12) x(2))
		putConstant(nil x(1))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		createVariableMove(y(15) x(5))
		sendMsg('endDefinition' y(0) 6 cache)
		createVariableMove(y(14) x(0))
		sendMsg(newReg y(0) 1 cache)
		putRecord('#' 2 x(0))
		setValue(y(8))
		setConstant('/body')
		createVariableMove(y(8) x(1))
		genFastCall(<P: 195> 4)
		inlineAt(procFlags x(0) cache)
lbl(165005)	definition(x(1) 165031 pid('' 2 pos('./compiler/CodeGen.oz' 1112 7) nil 4) unit nil)
		testLiteral(x(0) once 165019)
		getLiteral(true x(1))
		return
lbl(165019)	putConstant(native x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(165005)
lbl(165031)	createVariableMove(y(16) x(2))
		genFastCall(<P: 39> 6)
		putRecord('pid' [1 2 4 5] x(0))
		setValue(y(8))
		setConstant(0)
		setValue(y(16))
		setValue(y(15))
		move(y(7) x(1))
		callBI('Adjoin' [x(1) x(0)]#[x(2)])
		inlineAt(toCopy x(0) cache)
		createVariable(y(8))
		createVariable(y(15))
		testLiteral(x(0) nil 165113)
lbl(165068)	move(x(2) y(16))
		createVariableMove(y(17) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(8))
		unifyVoid(1)
		unifyLiteral(nil)
		unifyValVar(y(17) x(0))
		getRecord(vDefinitionCopy 8 x(0))
		unifyVoid(1)
		unifyValue(y(17))
		unifyValue(y(14))
		unifyValue(y(16))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
		branch(165291)
lbl(165113)	createVariable(x(4))
lbl(165115)	definition(x(3) 165251 pid('MakeCopyList' 4 pos('./compiler/CodeGen.oz' 1122 8) nil 4) unit [x(4) y(0) g(1) g(2)])
		match(x(0) ht(165236 [onScalar(nil 165124) onRecord('|' 2 165134)]))
lbl(165124)	unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyLiteral(nil)
		return
lbl(165134)	allocateL7
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		call(g(0) 4)
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		createVariable(y(6))
		move(y(0) x(0))
		testBI('IsForeignPointer' [x(0)]#[x(1)] 165178)
		getRecord(predicateRef 1 y(6))
		unifyValue(y(0))
		branch(165203)
lbl(165178)	testBI('IsName' [x(0)]#[x(1)] 165190)
		getRecord(literal 1 y(6))
		unifyValue(y(0))
		branch(165203)
lbl(165190)	putRecord(compiler 3 x(1))
		setConstant(internalTypeError)
		setValue(y(0))
		setConstant('ForeignPointerOrName')
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(165203)	getRecord(vEquateRecord 6 y(3))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(5) x(0))
		unifyValue(y(1))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(4))
		unifyLiteral(nil)
		getRecord(value 1 y(2))
		unifyValue(y(5))
		deAllocateL7
		return
lbl(165236)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1142)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(165115)
lbl(165251)	unify(x(3) x(4))
		putRecord(value 1 x(3))
		setVariable(y(16))
		moveMoveXYYX(x(2) y(17) y(8) x(1))
		createVariableMove(y(18) x(2))
		call(x(4) 4)
		getRecord(vDefinitionCopy 8 y(18))
		unifyVoid(1)
		unifyValue(y(16))
		unifyValue(y(14))
		unifyValue(y(17))
		unifyLiteral(unit)
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(15))
lbl(165291)	getRecord(vCall 5 y(15))
		unifyVoid(1)
		unifyValue(y(14))
		unifyLiteral(nil)
		unifyLiteral(unit)
		unifyLiteral(nil)
		moveMoveYXYX(y(8) x(0) y(9) x(1))
		moveMoveYXYX(y(12) x(2) y(10) x(5))
		createVariableMove(y(4) x(3))
		createVariableMove(y(11) x(4))
		sendMsg('endDefinition' y(0) 6 cache)
		getRecord(vDefinition 7 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(7) y(0))
		unifyValue(y(4))
		unifyValue(y(11))
		unifyValue(y(6))
		sendMsg(reg y(3) 1 cache)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) y(0))
lbl(165358)	inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(6) x(5))
		putConstant('definition' x(1))
		genFastCall(<Q: 1024> 12)
		putConstant(unit x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL
		return
		endDefinition(164231)
lbl(165391)	definition(x(8) 165432 pid('CodeGenDefinition,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1025 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1081> 7)
		endDefinition(165391)
lbl(165432)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDefinition' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFunctionDefinition' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165493)	definition(x(7) 165505 pid('CodeGenClauseBody,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1165 6) nil 3) <Q: 1082> nil)
		unify(x(1) x(2))
		return
		endDefinition(165493)
lbl(165505)	definition(x(8) 165546 pid('CodeGenClauseBody,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1165 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1082> 7)
		endDefinition(165505)
lbl(165546)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBody' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165583)	definition(x(7) 165710 pid('CodeGenApplication,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1173 6) nil 9) <Q: 1083> [g(11)])
		getSelf(x(3))
		inlineDot(x(3) codeGenMakeEquateLiteral x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 165672)
		allocateL6
		putRecord(vEquateLiteral 4 y(0))
		setVoid(1)
		setVariable(x(3))
		setVariable(y(1))
		setVariable(y(2))
		getSelf(x(4))
		inlineDot(x(4) codeGenMakeEquateLiteral x(0) cache)
		unify(x(0) x(3))
		inlineAt(actualArgs x(0) cache)
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 79> 4)
		move(y(1) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		moveMoveYXYX(y(0) x(4) y(2) x(5))
		putConstant('name generation' x(1))
		deAllocateL6
		genFastCall(<Q: 1024> 13)
lbl(165672)	inlineAt(designator x(6) cache)
		inlineAt(coord x(7) cache)
		inlineAt(actualArgs x(8) cache)
		move(x(0) x(3))
		move(x(6) x(0))
		move(x(1) x(4))
		move(x(7) x(1))
		move(x(2) x(5))
		move(x(8) x(2))
		genFastCall(<Q: 1042> 13)
		endDefinition(165583)
lbl(165710)	definition(x(8) 165751 pid('CodeGenApplication,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1173 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1083> 7)
		endDefinition(165710)
lbl(165751)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenApplication' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(165788)	definition(x(7) 166027 pid('CodeGenBoolCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1187 6) nil 7) <Q: 1084> nil)
		allocateL6
		getSelf(x(3))
		inlineDot(x(3) noBoolShared x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testBI('IsFree' [x(3)]#[x(4)] 165869)
		getRecord(vShared 4 y(3))
		unifyVoid(1)
		unifyVariable(x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		move(x(4) x(0))
		sendMsg(newLabel y(0) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(4))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(0) x(3) y(5) x(4))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
lbl(165869)	inlineAt(arbiter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 165914)
lbl(165890)	testLiteral(y(4) true 165914)
lbl(165894)	inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGen x(3) 3 cache)
lbl(165914)	move(y(4) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 165945)
lbl(165921)	testLiteral(y(4) false 165945)
lbl(165925)	inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL6
		tailSendMsg(codeGenNoShared x(3) 3 cache)
lbl(165945)	inlineAt(consequent x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		sendMsg(codeGen x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenShared x(3) 3 cache)
		getRecord(vTestBool 8 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(4))
		unifyValue(y(5))
		unifyValVar(y(3) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(arbiter x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL6
		return
		endDefinition(165788)
lbl(166027)	definition(x(8) 166068 pid('CodeGenBoolCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1187 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1084> 7)
		endDefinition(166027)
lbl(166068)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolCase' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166105)	definition(x(7) 166133 pid('CodeGenBoolClause,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1210 6) nil 5) <Q: 1085> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1022> 9)
		endDefinition(166105)
lbl(166133)	definition(x(8) 166174 pid('CodeGenBoolClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1210 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1085> 7)
		endDefinition(166133)
lbl(166174)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBoolClause' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166211)	definition(x(7) 166580 pid('CodeGenPatternCase,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1216 6) nil 6) <Q: 1086> [y(2)])
		allocateL5
		inlineAt(clauses x(3) cache)
lbl(166223)	definition(x(4) 166243 pid('' 2 pos('./compiler/CodeGen.oz' 1217 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(isSwitchable x(2) 1 cache)
		endDefinition(166223)
lbl(166243)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 166365 166567)
		inlineAt(arbiter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		inlineAt(alternative x(2) cache)
		inlineAt(arbiter x(3) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(4)])
		moveMoveXYYX(x(4) y(4) y(3) x(1))
		move(y(0) x(4))
		sendMsg(init y(4) 5 cache)
		inlineAt(clauses x(0) cache)
lbl(166321)	definition(x(1) 166347 pid('' 1 pos('./compiler/CodeGen.oz' 1224 6) nil 4) unit [y(3) y(0) y(4)])
		move(x(0) x(3))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(2))
		tailSendMsg(makeSwitchable x(3) 3 cache)
		endDefinition(166321)
lbl(166347)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(codeGen x(2) 2 cache)
lbl(166365)	move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(3) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(3) 166432 166421)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		inlineAt(coord x(4) cache)
		move(x(4) x(0))
		putConstant('optimization warning' x(1))
		putConstant('translating `case\' as general conditional' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(166432)
lbl(166421)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(166432)	createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		getSelf(x(3))
lbl(166448)	definition(x(1) 166509 pid('' 2 pos('./compiler/CodeGen.oz' 1234 3) nil 4) unit [x(3) y(0) y(3)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPatternGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(2) x(1))
		sendMsg(enterVs g(1) 2 cache)
		inlineAt(arbiter x(1) cache)
		move(g(1) x(0))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(makeCondClause x(3) 3 cache)
		endDefinition(166448)
lbl(166509)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(4) cache)
		inlineAt(arbiter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		sendMsg(codeGenWithArbiterNoShared x(4) 4 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(4))
		unifyValVar(y(2) x(0))
		unifyLiteral(nil)
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL5
		return
lbl(166567)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1217)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(166211)
lbl(166580)	definition(x(8) 166621 pid('CodeGenPatternCase,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1216 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1086> 7)
		endDefinition(166580)
lbl(166621)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternCase' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(166658)	definition(x(7) 166677 pid('CodeGenPatternClause,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1247 6) nil 2) <Q: 1087> nil)
		inlineAt(pattern x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(166658)
lbl(166677)	definition(x(8) 166703 pid('CodeGenPatternClause,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1247 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1087> 3)
		endDefinition(166677)
lbl(166703)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166713)	definition(x(7) 166819 pid('CodeGenPatternClause,makeSwitchable/fast' 3 pos('./compiler/CodeGen.oz' 1250 6) nil 8) <Q: 1088> nil)
		allocateL3
		inlineAt(pattern x(5) cache)
		inlineAt(localVars x(6) cache)
		inlineAt(statements x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(2) x(4))
		sendMsg(makeSwitchable x(5) 5 cache)
		inlineAt(localVars x(0) cache)
lbl(166763)	definition(x(1) 166805 pid('' 1 pos('./compiler/CodeGen.oz' 1254 3) nil 3) unit [y(0)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(reg y(0) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 166791)
		deAllocateL2
		return
lbl(166791)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(newVariableReg g(0) 2 cache)
		endDefinition(166763)
lbl(166805)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(1) x(1) y(2) x(0))
		deAllocateL3
		tailCall(x(1) 1)
		endDefinition(166713)
lbl(166819)	definition(x(8) 166860 pid('CodeGenPatternClause,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1250 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1088> 7)
		endDefinition(166819)
lbl(166860)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(166870)	definition(x(7) 167128 pid('CodeGenPatternClause,makeCondClause/fast' 3 pos('./compiler/CodeGen.oz' 1261 6) nil 5) <Q: 1089> nil)
		allocateL7
		inlineAt(localVars x(3) cache)
lbl(166882)	definition(x(4) 166902 pid('' 1 pos('./compiler/CodeGen.oz' 1264 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(166882)
lbl(166902)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(makeEquation x(4) 4 cache)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1045> 4)
		createVariable(y(5))
		createVariable(y(6))
		testBool(y(1) 166991 166999)
		inlineAt(pattern x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getCoord x(1) 1 cache)
		getLiteral(nil y(4))
		getRecord(vThread 5 y(5))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(1))
		unifyValue(y(6))
		unifyVoid(1)
		branch(167010)
lbl(166991)	unify(y(4) y(6))
		unify(y(5) y(3))
		branch(167010)
lbl(166999)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1266)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167010)	getRecord(vAsk 2 y(6))
		unifyVoid(1)
		unifyLiteral(nil)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(1))
		testBool(x(1) 167082 167103)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(6) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(167114)
lbl(167082)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(167114)
lbl(167103)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1275)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(167114)	getRecord('#' 3 y(2))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(1))
		deAllocateL7
		return
		endDefinition(166870)
lbl(167128)	definition(x(8) 167169 pid('CodeGenPatternClause,makeCondClause/slow' 1 pos('./compiler/CodeGen.oz' 1261 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1089> 7)
		endDefinition(167128)
lbl(167169)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeCondClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternClause' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putRecord('feat' [reg] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(167222)	definition(x(7) 167242 pid('CodeGenRecordPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1288 6) nil 3) <Q: 1090> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(167222)
lbl(167242)	definition(x(8) 167268 pid('CodeGenRecordPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1288 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1090> 3)
		endDefinition(167242)
lbl(167268)	putRecord('#' [1 2 fast] x(9))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(167278)	definition(x(7) 167384 pid('CodeGenRecordPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1291 6) nil 3) <Q: 1091> nil)
		inlineAt(isOpen x(1) cache)
		testBI('Not' [x(1)]#[x(2)] 167378)
		allocateL2
		inlineAt(label x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 167373)
		inlineAt(args x(0) cache)
lbl(167323)	definition(x(1) 167366 pid('' 2 pos('./compiler/CodeGen.oz' 1295 4) nil 3) unit nil)
		testRecord(x(0) '#' 2 167360)
lbl(167334)	allocateL2
		getVariable(x(2))
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(1) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(167360)	getLiteral(true x(1))
		return
		endDefinition(167323)
lbl(167366)	move(y(0) x(2))
		deAllocateL2
		genFastCall(<P: 35> 7)
lbl(167373)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(167378)	getLiteral(false x(0))
		return
		endDefinition(167278)
lbl(167384)	definition(x(8) 167410 pid('CodeGenRecordPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1291 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1091> 3)
		endDefinition(167384)
lbl(167410)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(167420)	definition(x(7) 167732 pid('CodeGenRecordPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1301 6) nil 6) <Q: 1092> [g(24) g(27) g(32) g(33)])
		allocateL8
		inlineAt(label x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(getCodeGenValue x(5) 1 cache)
		inlineAt(args x(0) cache)
lbl(167456)	definition(x(1) 167495 pid('' 3 pos('./compiler/CodeGen.oz' 1304 7) nil 4) unit nil)
		testRecord(x(1) '#' 2 167484)
lbl(167467)	getVarVar(x(1) x(3))
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(167484)	getRecord('#' 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(167456)
lbl(167495)	createVariableMove(y(5) x(2))
		genFastCall(<P: 81> 6)
		createVariable(y(6))
		exHandler(167642)
		move(x(0) y(7))
		createCond(167636)
lbl(167510)	lastClause
		clause
		thread(167528)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(7) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL8
		return
lbl(167528)	ask
lbl(167529)	inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(2) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(7) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(167567)	definition(x(0) 167604 pid('' 3 pos('./compiler/CodeGen.oz' 1315 27) nil 5) unit nil)
		shallowGuard(167591)
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(167583)	shallowThen
		callBI('AdjoinAt' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(2))
		return
lbl(167591)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1315)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(167567)
lbl(167604)	moveMoveXYYX(x(0) y(2) y(4) x(0))
		putConstant(nil x(1))
		putConstant(0 x(2))
		createVariableMove(y(7) x(3))
		marshalledFastCall(<R: tuple> 8)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<P: 30> 8)
		branch(167654)
lbl(167636)	move(y(7) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(167642)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(x(2) y(6))
		popEx
lbl(167654)	move(y(6) x(0))
		testBI('IsLiteral' [x(0)]#[x(1)] 167673)
		getRecord(addScalar 3 y(3))
		unifyValue(y(6))
		unifyValue(y(0))
		unifyValue(y(1))
		deAllocateL8
		return
lbl(167673)	getRecord(addRecord 2 y(3))
		unifyVariable(x(2))
		unifyVariable(x(1))
		getRecord('#' 4 x(1))
		unifyValVar(y(0) y(2))
		unifyVariable(y(3))
		unifyValue(y(1))
lbl(167692)	definition(x(1) 167704 pid('' 2 pos('./compiler/CodeGen.oz' 1321 31) nil 2) unit nil)
		getLiteral('' x(1))
		return
		endDefinition(167692)
lbl(167704)	genFastCall(<P: 161> 6)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		genFastCall(<P: 159> 4)
		inlineAt(label x(1) cache)
		move(y(3) x(0))
		deAllocateL8
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(167420)
lbl(167732)	definition(x(8) 167785 pid('CodeGenRecordPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1301 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1092> 11)
		endDefinition(167732)
lbl(167785)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(3))
lbl(167797)	definition(x(7) 167882 pid('CodeGenRecordPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1325 6) nil 7) <Q: 1093> [y(1) y(3)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		genCall(gci(g(1) true makeEquation false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		deAllocateL8
		genCall(gci(g(1) true addPatternVs true 2) 0)
		endDefinition(167797)
lbl(167882)	definition(x(8) 167947 pid('CodeGenRecordPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1325 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1093> 15)
		endDefinition(167882)
lbl(167947)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(167957)	definition(x(7) 168023 pid('CodeGenRecordPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1332 6) nil 6) <Q: 1094> nil)
		inlineAt(args x(4) cache)
lbl(167968)	definition(x(5) 168006 pid('' 3 pos('./compiler/CodeGen.oz' 1334 3) nil 4) unit nil)
		testRecord(x(1) '#' 2 167992)
lbl(167979)	getVoid(1)
		getVariable(x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
lbl(167992)	move(x(1) x(3))
		move(x(2) x(1))
		tailSendMsg(addPatternVs x(3) 2 cache)
		endDefinition(167968)
lbl(168006)	move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(167957)
lbl(168023)	definition(x(8) 168058 pid('CodeGenRecordPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1332 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1094> 5)
		endDefinition(168023)
lbl(168058)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(168068)	definition(x(7) 168096 pid('CodeGenRecordPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1340 6) nil 3) <Q: 1095> nil)
		getSelf(x(1))
		inlineDot(x(1) reg x(1) cache)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(newReg x(2) 1 cache)
		endDefinition(168068)
lbl(168096)	definition(x(8) 168122 pid('CodeGenRecordPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1095> 3)
		endDefinition(168096)
lbl(168122)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(168132)	definition(x(7) 168269 pid('CodeGenRecordPattern,makeEquationDescend/fast' 3 pos('./compiler/CodeGen.oz' 1343 6) nil 6) <Q: 1096> [y(1)])
		inlineAt(args x(4) cache)
lbl(168143)	definition(x(5) 168252 pid('' 3 pos('./compiler/CodeGen.oz' 1345 3) nil 5) unit [g(0) x(0)])
		allocateL5
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(1) '#' 2 168171)
lbl(168162)	getVoid(1)
		getVariable(x(1))
		unify(y(2) x(1))
		branch(168174)
lbl(168171)	unify(y(2) x(1))
lbl(168174)	createVariableMove(y(3) x(0))
		sendMsg(isConstruction y(2) 1 cache)
		testBool(y(3) 168234 168239)
		createVariableMove(y(3) x(0))
		sendMsg(reg y(2) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		move(g(1) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		move(y(1) x(3))
		move(y(2) x(4))
		deAllocateL5
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(168234)	unify(y(0) y(1))
		deAllocateL5
		return
lbl(168239)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1347)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(168143)
lbl(168252)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 9)
		endDefinition(168132)
lbl(168269)	definition(x(8) 168310 pid('CodeGenRecordPattern,makeEquationDescend/slow' 1 pos('./compiler/CodeGen.oz' 1343 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1096> 7)
		endDefinition(168269)
lbl(168310)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquationDescend)
		setValue(x(8))
		setValue(x(7))
lbl(168320)	definition(x(7) 168362 pid('CodeGenRecordPattern,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 1355 6) nil 4) <Q: 1097> [y(1)])
		allocateL2
		unify(x(1) x(2))
		getSelf(x(1))
		inlineDot(x(1) reg x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(3) y(0) x(2) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(168320)
lbl(168362)	definition(x(8) 168409 pid('CodeGenRecordPattern,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 1355 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1097> 9)
		endDefinition(168362)
lbl(168409)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(168419)	definition(x(7) 168448 pid('CodeGenRecordPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1359 6) nil 4) <Q: 1098> nil)
		unify(x(1) x(2))
		getRecord(value 1 x(3))
		unifyVariable(x(0))
		getSelf(x(1))
		inlineDot(x(1) reg x(2) cache)
		unify(x(2) x(0))
		return
		endDefinition(168419)
lbl(168448)	definition(x(8) 168495 pid('CodeGenRecordPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1359 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1098> 9)
		endDefinition(168448)
lbl(168495)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(y(3) x(6))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenRecordPattern' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(168542)	definition(x(7) 168561 pid('CodeGenEquationPattern,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1366 6) nil 2) <Q: 1099> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(168542)
lbl(168561)	definition(x(8) 168587 pid('CodeGenEquationPattern,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1366 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1099> 3)
		endDefinition(168561)
lbl(168587)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(168597)	definition(x(7) 168616 pid('CodeGenEquationPattern,reg/fast' 1 pos('./compiler/CodeGen.oz' 1369 6) nil 2) <Q: 1100> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(168597)
lbl(168616)	definition(x(8) 168642 pid('CodeGenEquationPattern,reg/slow' 1 pos('./compiler/CodeGen.oz' 1369 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1100> 3)
		endDefinition(168616)
lbl(168642)	putRecord('#' [1 2 fast] x(10))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
lbl(168652)	definition(x(7) 168671 pid('CodeGenEquationPattern,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1372 6) nil 2) <Q: 1101> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isSwitchable x(1) 1 cache)
		endDefinition(168652)
lbl(168671)	definition(x(8) 168697 pid('CodeGenEquationPattern,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1372 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1101> 3)
		endDefinition(168671)
lbl(168697)	putRecord('#' [1 2 fast] x(11))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168707)	definition(x(7) 168777 pid('CodeGenEquationPattern,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1375 6) nil 6) <Q: 1102> nil)
		allocateL6
		inlineAt(left x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(0))
		sendMsg('getVariable' x(5) 1 cache)
		move(y(0) x(0))
		sendMsg(reg y(5) 1 cache)
		inlineAt(right x(5) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(4) x(4))
		deAllocateL6
		tailSendMsg(makeSwitchable x(5) 5 cache)
		endDefinition(168707)
lbl(168777)	definition(x(8) 168830 pid('CodeGenEquationPattern,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1375 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1102> 11)
		endDefinition(168777)
lbl(168830)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(168840)	definition(x(7) 169010 pid('CodeGenEquationPattern,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1379 6) nil 8) <Q: 1103> [y(1)])
		allocateL9
		inlineAt(left x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' x(7) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(8) x(0))
		sendMsg(reg x(1) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(8))
		unifyValue(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 168936 168958)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(168969)
lbl(168936)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(7))
		setValue(y(1))
		move(y(6) x(1))
		sendMsg(addPatternVs x(2) 2 cache)
		branch(168969)
lbl(168958)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(168969)	move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(8) x(0))
		sendMsg(init y(1) 1 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		deAllocateL9
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(168840)
lbl(169010)	definition(x(8) 169075 pid('CodeGenEquationPattern,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1379 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1103> 15)
		endDefinition(169010)
lbl(169075)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(169085)	definition(x(7) 169177 pid('CodeGenEquationPattern,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 1393 6) nil 3) <Q: 1104> nil)
		allocateL4
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 169143 169164)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169143)	inlineAt(right x(2) cache)
		putList(x(0))
		setValue(y(2))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(addPatternVs x(2) 2 cache)
lbl(169164)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1395)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(169085)
lbl(169177)	definition(x(8) 169212 pid('CodeGenEquationPattern,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 1393 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1104> 5)
		endDefinition(169177)
lbl(169212)	putRecord('#' [1 2 fast] x(14))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(169222)	definition(x(7) 169300 pid('CodeGenEquationPattern,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 1401 6) nil 5) <Q: 1105> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(reg y(1) 1 cache)
		inlineAt(left x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1025> 8)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(3) x(3))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
		endDefinition(169222)
lbl(169300)	definition(x(8) 169347 pid('CodeGenEquationPattern,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 1401 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1105> 9)
		endDefinition(169300)
lbl(169347)	putRecord('#' [1 2 fast] x(15))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(169357)	definition(x(7) 169407 pid('CodeGenEquationPattern,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 1405 6) nil 2) <Q: 1106> nil)
		allocateL2
		inlineAt(right x(1) cache)
		inlineDot(x(1) reg x(0) cache)
		inlineAt(left x(1) cache)
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(169357)
lbl(169407)	definition(x(8) 169433 pid('CodeGenEquationPattern,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 1405 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1106> 3)
		endDefinition(169407)
lbl(169433)	putRecord('#' [1 2 fast] x(16))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
lbl(169443)	definition(x(7) 169462 pid('CodeGenEquationPattern,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 1408 6) nil 5) <Q: 1107> nil)
		inlineAt(left x(4) cache)
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(169443)
lbl(169462)	definition(x(8) 169509 pid('CodeGenEquationPattern,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 1408 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1107> 9)
		endDefinition(169462)
lbl(169509)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 9 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenEquationPattern' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [shared] x(3))
		setConstant(<U: ooFreeFlag>)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenAbstractElse' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [localVars] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(169595)	definition(x(7) 169614 pid('CodeGenElseNode,codeGenInit/fast' 2 pos('./compiler/CodeGen.oz' 1418 6) nil 2) <Q: 1108> nil)
		inlineAssign(localVars x(0) cache)
		inlineAssign(statements x(1) cache)
		return
		endDefinition(169595)
lbl(169614)	definition(x(8) 169649 pid('CodeGenElseNode,codeGenInit/slow' 1 pos('./compiler/CodeGen.oz' 1418 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1108> 5)
		endDefinition(169614)
lbl(169649)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenInit)
		setValue(x(8))
		setValue(x(7))
lbl(169659)	definition(x(7) 169818 pid('CodeGenElseNode,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1422 6) nil 5) <Q: 1109> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 169815)
		allocateL4
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(0))
		callBI('NewCell' [x(0)]#[x(1)])
		unify(x(1) y(0))
		move(y(2) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 169787 169804)
lbl(169730)	inlineAt(localVars x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 169787)
lbl(169739)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(0) x(1))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		putConstant(nil x(2))
		deAllocateL4
		genFastCall(<Q: 1027> 7)
lbl(169787)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL4
		genFastCall(<Q: 1022> 9)
lbl(169804)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1429)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(169815)	return
		endDefinition(169659)
lbl(169818)	definition(x(8) 169859 pid('CodeGenElseNode,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1422 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1109> 7)
		endDefinition(169818)
lbl(169859)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(23))
lbl(169871)	definition(x(7) 169888 pid('CodeGenElseNode,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1440 6) nil 4) <Q: 1110> [y(23)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenShared true 3) 0)
		endDefinition(169871)
lbl(169888)	definition(x(8) 169935 pid('CodeGenElseNode,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1440 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1110> 9)
		endDefinition(169888)
lbl(169935)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(169945)	definition(x(7) 170057 pid('CodeGenElseNode,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1443 6) nil 5) <Q: 1111> nil)
		allocateL5
		inlineDot(x(0) debugInfoVarnamesSwitch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testBool(x(3) 170027 170044)
lbl(169970)	inlineAt(localVars x(3) cache)
		testBI('IsDet' [x(3)]#[x(4)] 170027)
lbl(169979)	inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(1) x(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL5
		genFastCall(<Q: 1027> 7)
lbl(170027)	inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
lbl(170044)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1444)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(169945)
lbl(170057)	definition(x(8) 170098 pid('CodeGenElseNode,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1443 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1111> 7)
		endDefinition(170057)
lbl(170098)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170108)	definition(x(7) 170125 pid('CodeGenElseNode,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1453 6) nil 4) <Q: 1112> [y(23)])
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) true codeGenNoShared true 3) 0)
		endDefinition(170108)
lbl(170125)	definition(x(8) 170172 pid('CodeGenElseNode,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1453 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1112> 9)
		endDefinition(170125)
lbl(170172)	putRecord('#' [1 2 fast] x(13))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 5 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(y(23) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenElseNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(170214)	definition(x(7) 170298 pid('CodeGenNoElse,codeGenShared/fast' 3 pos('./compiler/CodeGen.oz' 1458 6) nil 7) <Q: 1113> nil)
		getSelf(x(3))
		inlineDot(x(3) shared x(4) cache)
		unify(x(4) x(1))
		getLiteral(nil x(2))
		testBI('IsFree' [x(1)]#[x(2)] 170295)
		allocateL3
		getRecord(vShared 4 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(0) y(2))
		move(x(1) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		putConstant(nil x(5))
		deAllocateL3
		genFastCall(<Q: 1044> 13)
lbl(170295)	return
		endDefinition(170214)
lbl(170298)	definition(x(8) 170339 pid('CodeGenNoElse,codeGenShared/slow' 1 pos('./compiler/CodeGen.oz' 1458 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1113> 7)
		endDefinition(170298)
lbl(170339)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenShared)
		setValue(x(8))
		setValue(x(7))
lbl(170349)	definition(x(7) 170438 pid('CodeGenNoElse,codeGenWithArbiterShared/fast' 4 pos('./compiler/CodeGen.oz' 1468 6) nil 7) <Q: 1114> nil)
		getSelf(x(4))
		inlineDot(x(4) shared x(5) cache)
		unify(x(5) x(2))
		getLiteral(nil x(3))
		testBI('IsFree' [x(2)]#[x(3)] 170435)
		allocateL4
		getRecord(vShared 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		move(x(2) x(0))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(6))
		callBI('NewCell' [x(6)]#[x(0)])
		unify(x(0) y(0))
		inlineAt(coord x(1) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		moveMoveYXYX(y(2) x(3) y(1) x(4))
		putConstant(noElse x(0))
		putConstant(nil x(5))
		deAllocateL4
		genFastCall(<Q: 1044> 13)
lbl(170435)	return
		endDefinition(170349)
lbl(170438)	definition(x(8) 170485 pid('CodeGenNoElse,codeGenWithArbiterShared/slow' 1 pos('./compiler/CodeGen.oz' 1468 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1114> 9)
		endDefinition(170438)
lbl(170485)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenWithArbiterShared)
		setValue(x(8))
		setValue(x(7))
lbl(170495)	definition(x(7) 170529 pid('CodeGenNoElse,codeGenNoShared/fast' 3 pos('./compiler/CodeGen.oz' 1478 6) nil 7) <Q: 1115> nil)
		inlineAt(coord x(6) cache)
		move(x(0) x(3))
		move(x(1) x(4))
		move(x(6) x(1))
		move(x(2) x(5))
		putConstant(noElse x(0))
		putConstant(nil x(2))
		genFastCall(<Q: 1044> 13)
		endDefinition(170495)
lbl(170529)	definition(x(8) 170570 pid('CodeGenNoElse,codeGenNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1478 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1115> 7)
		endDefinition(170529)
lbl(170570)	putRecord('#' [1 2 fast] x(11))
		setConstant(codeGenNoShared)
		setValue(x(8))
		setValue(x(7))
lbl(170580)	definition(x(7) 170620 pid('CodeGenNoElse,codeGenWithArbiterNoShared/fast' 4 pos('./compiler/CodeGen.oz' 1481 6) nil 8) <Q: 1116> nil)
		inlineAt(coord x(6) cache)
		putList(x(7))
		setValue(x(1))
		setConstant(nil)
		move(x(3) x(5))
		move(x(0) x(3))
		move(x(6) x(1))
		move(x(2) x(4))
		move(x(7) x(2))
		putConstant(noElse x(0))
		genFastCall(<Q: 1044> 13)
		endDefinition(170580)
lbl(170620)	definition(x(8) 170667 pid('CodeGenNoElse,codeGenWithArbiterNoShared/slow' 1 pos('./compiler/CodeGen.oz' 1481 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1116> 9)
		endDefinition(170620)
lbl(170667)	putRecord('#' [1 2 fast] x(12))
		setConstant(codeGenWithArbiterNoShared)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNoElse' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170710)	definition(x(7) 170767 pid('CodeGenThreadNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1487 6) nil 5) <Q: 1117> nil)
		allocateL3
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(2) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		getRecord(vThread 5 y(0))
		unifyVoid(1)
		unifyValVar(y(2) x(0))
		unifyValue(y(1))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
		endDefinition(170710)
lbl(170767)	definition(x(8) 170808 pid('CodeGenThreadNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1487 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1117> 7)
		endDefinition(170767)
lbl(170808)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenThreadNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(170845)	definition(x(7) 171047 pid('CodeGenTryNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1494 6) nil 6) <Q: 1118> nil)
		allocateL8
		inlineAt(tryStatements x(4) cache)
		inlineAt(coord x(5) cache)
		putRecord(vPopEx 3 x(3))
		setVoid(1)
		setValue(x(5))
		setConstant(nil)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1022> 8)
		inlineAt(exception x(1) cache)
		move(y(0) x(0))
		sendMsg(setReg x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(4))
		testBool(x(1) 170976 170997)
		inlineAt(exception x(4) cache)
		putList(x(5))
		setValue(x(4))
		setConstant(nil)
		move(x(5) x(0))
		move(y(4) x(2))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(6) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(171008)
lbl(170976)	inlineAt(catchStatements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(171008)
lbl(170997)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1497)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(171008)	getRecord(vExHandler 7 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(0))
		unifyValVar(y(4) y(0))
		unifyValue(y(2))
		unifyVoid(1)
		inlineAt(exception x(1) cache)
		sendMsg(reg x(1) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		deAllocateL8
		return
		endDefinition(170845)
lbl(171047)	definition(x(8) 171088 pid('CodeGenTryNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1494 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1118> 7)
		endDefinition(171047)
lbl(171088)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenTryNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171125)	definition(x(7) 171206 pid('CodeGenLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1510 6) nil 5) <Q: 1119> nil)
		allocateL5
		getRecord(vLockThread 5 x(1))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(3) x(2) y(4))
		move(x(1) x(0))
		sendMsg(reg x(3) 1 cache)
		inlineAt(coord x(0) cache)
		unify(x(0) y(0))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1022> 9)
		endDefinition(171125)
lbl(171206)	definition(x(8) 171247 pid('CodeGenLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1510 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1119> 7)
		endDefinition(171206)
lbl(171247)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenLockNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(171284)	definition(x(7) 171791 pid('CodeGenClassNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1517 6) nil 8) <Q: 1120> [y(1)])
		allocateL(14)
		inlineAt(parents x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1054> 10)
		inlineAt(attributes x(1) cache)
		moveMoveYXYX(y(0) x(2) y(6) x(3))
		putConstant('attr' x(0))
		createVariableMove(y(4) x(4))
		createVariableMove(y(8) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(features x(1) cache)
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		putConstant('feat' x(0))
		createVariableMove(y(6) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1056> 12)
		inlineAt(printName x(0) cache)
		createVariable(y(4))
		testLiteral(x(0) '' 171422)
lbl(171397)	inlineAt(designator x(1) cache)
		createVariableMove(y(10) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		move(y(4) x(0))
		sendMsg(getPrintName y(10) 1 cache)
		branch(171430)
lbl(171422)	inlineAt(printName x(0) cache)
		unify(x(0) y(4))
lbl(171430)	move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1038> 4)
		inlineAt(methods x(0) cache)
		createVariable(y(11))
		match(x(0) ht(171634 [onScalar(nil 171449) onRecord('|' 2 171469)]))
lbl(171449)	getRecord(vEquateLiteral 4 y(6))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValue(y(11))
		sendMsg(reg y(10) 1 cache)
		branch(171647)
lbl(171469)	getSelf(x(4))
		createVariable(x(5))
lbl(171473)	definition(x(0) 171579 pid('MakeMethods' 4 pos('./compiler/CodeGen.oz' 1534 5) nil 7) unit [x(4) y(0) y(4) x(5)])
		move(g(0) x(4))
		setSelf(x(4))
		match(x(0) ht(171564 [onScalar(nil 171487) onRecord('|' 2 171494)]))
lbl(171487)	unify(x(1) x(2))
		getLiteral(nil x(3))
		return
lbl(171494)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(0))
		sendMsg(newReg g(1) 1 cache)
		inlineAt(isToplevel x(3) cache)
		move(g(2) x(0))
		move(g(1) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(4))
		createVariableMove(y(6) x(5))
		sendMsg(makeQuadruple y(0) 6 cache)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(value 1 x(0))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailCall(g(3) 4)
lbl(171564)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1542)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(171473)
lbl(171579)	unify(x(0) x(5))
		inlineAt(methods x(0) cache)
		move(y(6) x(1))
		createVariableMove(y(12) x(2))
		createVariableMove(y(13) x(3))
		call(x(5) 4)
		getRecord(vEquateRecord 6 y(12))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(1))
		unifyVariable(y(6))
		unifyValue(y(13))
		unifyValue(y(11))
		inlineAt(methods x(0) cache)
		genFastCall(<P: 24> 4)
		move(y(6) x(0))
		sendMsg(reg y(10) 1 cache)
		branch(171647)
lbl(171634)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1551)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(171647)	putConstant(unit x(1))
		inlineAssign(methods x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vEquateLiteral 4 y(11))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(6) y(11))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(6) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(designator x(6) cache)
		putList(x(7))
		setValue(x(6))
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(7))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(3))
		setValue(y(9))
		setValue(x(4))
		putList(x(1))
		setValue(y(8))
		setValue(x(3))
		putList(x(0))
		setValue(y(10))
		setValue(x(1))
		putList(x(2))
		setValue(y(5))
		setValue(x(0))
		moveMoveYXYX(y(6) x(1) y(0) x(3))
		move(y(11) x(4))
		putConstant('class' x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(coord x(0) cache)
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		putConstant('definition' x(1))
		deAllocateL
		genFastCall(<Q: 1024> 13)
		endDefinition(171284)
lbl(171791)	definition(x(8) 171832 pid('CodeGenClassNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1517 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1120> 7)
		endDefinition(171791)
lbl(171832)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClassNode' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: MessagePatternVO> hasDefaults] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(29))
lbl(171879)	definition(x(7) 173346 pid('CodeGenMethod,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1566 6) nil 12) <Q: 1121> [g(27) g(33) g(34) g(35) y(29) y(1) y(5)])
		allocateL(19)
		inlineAt(formalArgs x(6) cache)
lbl(171892)	definition(x(7) 171934 pid('' 2 pos('./compiler/CodeGen.oz' 1574 3) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(y(0))
		unifyValue(x(0))
		move(x(0) x(1))
		createVariableMove(y(1) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getCodeGenValue x(1) 1 cache)
		endDefinition(171892)
lbl(171934)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		createVariable(y(7))
		exHandler(172046)
		move(x(0) y(6))
		createCond(172040)
lbl(171970)	lastClause
		clause
		thread(171988)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(6) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL
		return
lbl(171988)	ask
lbl(171989)	inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(1) x(0))
		inlineDot(x(0) reporter x(3) cache)
		move(y(6) x(0))
		putConstant('code generation error' x(1))
		putConstant('duplicate feature in record construction' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(formalArgs x(0) cache)
		move(y(7) x(1))
		genFastCall(<P: 24> 4)
		branch(172094)
lbl(172040)	move(y(6) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(172046)	putConstant(someLabel x(0))
		move(y(6) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBI('IsTuple' [x(2)]#[x(0)] 172070)
		callBI('Width' [x(2)]#[x(0)])
		unify(x(0) y(7))
		branch(172076)
lbl(172070)	callBI('Arity' [x(2)]#[x(0)])
		unify(x(0) y(7))
lbl(172076)	move(y(6) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<P: 159> 4)
		move(y(8) x(0))
		inlineAssign(formalArgs x(0) cache)
		popEx
lbl(172094)	getSelf(x(3))
		inlineDot(x(3) hasDefaults x(2) cache)
		inlineAt(formalArgs x(0) cache)
lbl(172107)	definition(x(1) 172127 pid('' 2 pos('./compiler/CodeGen.oz' 1591 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(172107)
lbl(172127)	genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(6))
		createVariable(y(8))
		createVariable(y(9))
		testLiteral(x(0) unit 172156)
lbl(172145)	getLiteral('' y(6))
		getNumber(1 y(8))
		getNumber(0 y(9))
		branch(172183)
lbl(172156)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(8))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(9))
lbl(172183)	putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setValue(y(7))
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(7))
		setConstant('/fast')
		createVariableMove(y(7) x(1))
		genFastCall(<P: 194> 4)
		move(y(7) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		sendMsg(startDefinition y(1) 0 cache)
		inlineAt(formalArgs x(0) cache)
lbl(172259)	definition(x(1) 172305 pid('' 2 pos('./compiler/CodeGen.oz' 1605 5) nil 3) unit [y(1)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(g(0) x(0))
		sendMsg(setFreshReg y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172259)
lbl(172305)	createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(allVariables x(0) cache)
		createVariable(y(11))
		testLiteral(x(0) nil 172327)
lbl(172322)	getLiteral(nil y(11))
		branch(172358)
lbl(172327)	inlineAt(allVariables x(0) cache)
lbl(172332)	definition(x(1) 172352 pid('' 2 pos('./compiler/CodeGen.oz' 1610 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(172332)
lbl(172352)	move(y(11) x(2))
		genFastCall(<P: 29> 6)
lbl(172358)	move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(13))
		testBool(x(1) 172496 172517)
		createVariableMove(y(14) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(13))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(14))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(14) y(15))
		inlineAt(formalArgs x(0) cache)
lbl(172412)	definition(x(1) 172432 pid('' 2 pos('./compiler/CodeGen.oz' 1618 30) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(172412)
lbl(172432)	createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(16) x(0) y(15) x(2))
		createVariableMove(y(17) x(1))
		createVariableMove(y(18) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(18) x(2))
		createVariableMove(y(15) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(17) x(0) y(15) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<Q: 1027> 6)
		putList(x(0))
		setValue(y(14))
		setConstant(nil)
		move(y(16) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(172528)
lbl(172496)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(1) x(1) y(13) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1022> 8)
		branch(172528)
lbl(172517)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1612)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(172528)	putConstant(unit x(6))
		inlineAssign(statements x(6) cache)
		moveMoveYXYX(y(13) x(0) y(7) x(1))
		moveMoveYXYX(y(11) x(2) y(12) x(5))
		createVariableMove(y(14) x(3))
		createVariableMove(y(15) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(4))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValVar(y(10) x(1))
		unifyValue(y(14))
		unifyValVar(y(15) y(4))
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(1))
		putRecord('pos' 3 x(0))
		setValue(y(6))
		setValue(y(8))
		setValue(y(9))
		putRecord('pid' 5 y(10))
		setVariable(y(11))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(12))
		inlineAt(label x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(6))
		setConstant('/slow')
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(11))
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		createVariableMove(y(0) x(2))
		genCall(gci(g(4) true makeArityCheckInit false 3) 0)
		sendMsg(startDefinition y(1) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1038> 4)
		putList(y(6))
		setVariable(x(4))
		setConstant(nil)
		move(y(4) x(0))
		inlineDot(x(0) reg x(1) cache)
		unify(x(1) x(4))
		move(y(1) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(4) true makeArityCheck false 4) 0)
		inlineAt(formalArgs x(0) cache)
lbl(172717)	definition(x(1) 172746 pid('' 3 pos('./compiler/CodeGen.oz' 1650 6) nil 5) unit [y(4) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(172717)
lbl(172746)	move(y(9) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 172828 172943)
		getRecord(vFastCall 5 y(4))
		unifyVoid(1)
		unifyVariable(x(3))
		unifyVariable(x(2))
		unifyLiteral(unit)
		unifyLiteral(nil)
		inlineAt(predicateRef x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(172786)	definition(x(1) 172823 pid('' 2 pos('./compiler/CodeGen.oz' 1656 6) nil 3) unit nil)
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(172786)
lbl(172823)	genFastCall(<P: 29> 6)
		branch(172954)
lbl(172828)	move(g(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		sendMsg(init y(3) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1023> 4)
		inlineAt(formalArgs x(0) cache)
lbl(172861)	definition(x(1) 172916 pid('' 2 pos('./compiler/CodeGen.oz' 1664 3) nil 3) unit [g(5)])
		allocateL3
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(2) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(172861)
lbl(172916)	createVariableMove(y(11) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(9) x(1))
		moveMoveYXYX(y(11) x(2) y(1) x(3))
		move(y(4) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1042> 12)
		branch(172954)
lbl(172943)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1653)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(172954)	moveMoveYXYX(y(8) x(0) y(6) x(1))
		move(y(12) x(5))
		putConstant(nil x(2))
		createVariableMove(y(3) x(3))
		createVariableMove(y(4) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyValVar(y(4) y(0))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 173246 173333)
		inlineAt(formalArgs x(0) cache)
lbl(173020)	definition(x(1) 173062 pid('' 2 pos('./compiler/CodeGen.oz' 1676 6) nil 2) unit nil)
		allocateL2
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(0))
		move(x(0) y(1))
		move(x(1) x(0))
		sendMsg(getFeature y(1) 1 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg(getDefault x(1) 1 cache)
		endDefinition(173020)
lbl(173062)	createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(g(6) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		inlineAt(label x(4) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(4))
		move(x(4) x(0))
		move(y(3) x(1))
		putConstant(false x(2))
		sendMsg(init y(4) 3 cache)
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1038> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		createVariableMove(y(8) x(3))
		sendMsg(makeEquation y(4) 4 cache)
		getRecord(vEquateRecord 6 y(8))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(default)
		unifyVariable(x(4))
		getList(x(4))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(value 1 x(7))
		unifyValue(y(6))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(value 1 x(9))
		unifyVariable(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(value 1 x(11))
		unifyValue(y(7))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		move(x(5) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		sendMsg(makeRecordArgument x(4) 4 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(reg x(1) 1 cache)
lbl(173246)	getRecord(vEquateRecord 6 y(0))
		unifyVoid(1)
		unifyLiteral('#')
		unifyVariable(x(0))
		unifyValVar(y(2) x(1))
		unifyValue(y(5))
		getList(x(0))
		unifyNumber(1)
		unifyVariable(x(2))
		getList(x(2))
		unifyNumber(2)
		unifyVariable(x(3))
		getList(x(3))
		unifyLiteral(fast)
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(value 1 x(6))
		unifyValue(y(6))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(value 1 x(8))
		unifyValue(y(7))
		inlineAt(label x(5) cache)
		move(y(1) x(0))
		move(x(4) x(3))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(5) 4 cache)
lbl(173333)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1674)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(171879)
lbl(173346)	definition(x(8) 173405 pid('CodeGenMethod,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1566 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1121> 13)
		endDefinition(173346)
lbl(173405)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
lbl(173415)	definition(x(7) 173659 pid('CodeGenMethod,makeArityCheck/fast' 4 pos('./compiler/CodeGen.oz' 1692 6) nil 7) <Q: 1122> [y(1)])
		getSelf(x(4))
		inlineDot(x(4) hasDefaults x(4) cache)
		testBool(x(4) 173495 173646)
		allocateL5
		inlineAt(coord x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		getSelf(x(6))
		inlineDot(x(6) <M: MessagePatternVO> x(6) cache)
		putList(x(0))
		setValue(x(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(aritySublist x(0))
		deAllocateL5
		genFastCall(<Q: 1043> 13)
lbl(173495)	allocateL7
		inlineAt(formalArgs x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		testNumber(y(4) 0 173569)
lbl(173538)	move(y(5) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 173569)
lbl(173545)	getRecord(vEquateLiteral 4 y(2))
		unifyVoid(1)
		unifyValVar(y(5) x(1))
		unifyValue(y(3))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL7
		tailSendMsg(reg x(1) 1 cache)
lbl(173569)	createVariableMove(y(5) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		getRecord(vEquateNumber 4 y(2))
		unifyVoid(1)
		unifyValue(y(4))
		unifyValVar(y(5) y(2))
		inlineAt(coord x(0) cache)
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(0))
		setValue(y(6))
		setConstant(nil)
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(3) x(5))
		putConstant(width x(0))
		deAllocateL7
		genFastCall(<Q: 1043> 13)
lbl(173646)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1693)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173415)
lbl(173659)	definition(x(8) 173706 pid('CodeGenMethod,makeArityCheck/slow' 1 pos('./compiler/CodeGen.oz' 1692 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1122> 9)
		endDefinition(173659)
lbl(173706)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeArityCheck)
		setValue(x(8))
		setValue(x(7))
lbl(173716)	definition(x(7) 173978 pid('CodeGenMethod,makeArityCheckInit/fast' 3 pos('./compiler/CodeGen.oz' 1710 6) nil 5) <Q: 1123> [y(1) y(5)])
		allocateL7
		getSelf(x(3))
		inlineDot(x(3) <M: MessagePatternVO> x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		unify(y(5) y(3))
		getSelf(x(0))
		inlineDot(x(0) hasDefaults x(0) cache)
		testBool(x(0) 173960 173965)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		putConstant(messagePattern x(3))
		move(y(4) x(0))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(3))
		move(g(1) x(1))
		inlineDot(x(1) construction x(2) cache)
		inlineAt(formalArgs x(3) cache)
lbl(173837)	definition(x(4) 173896 pid('' 2 pos('./compiler/CodeGen.oz' 1720 7) nil 3) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1038> 4)
		putConstant(unit x(1))
		move(y(2) x(0))
		inlineDot(x(0) value x(2) cache)
		unify(x(2) x(1))
		getRecord('#' 2 y(1))
		unifyVariable(x(1))
		unifyValue(y(2))
		move(x(1) x(0))
		move(y(0) x(1))
		deAllocateL3
		tailSendMsg(getFeature x(1) 1 cache)
		endDefinition(173837)
lbl(173896)	move(x(2) y(3))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		putConstant(false x(2))
		sendMsg(init y(6) 3 cache)
		getSelf(x(4))
		inlineDot(x(4) <M: MessagePatternVO> x(1) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		tailSendMsg(makeEquation x(4) 4 cache)
lbl(173960)	unify(y(1) y(2))
		deAllocateL7
		return
lbl(173965)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1713)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(173716)
lbl(173978)	definition(x(8) 174019 pid('CodeGenMethod,makeArityCheckInit/slow' 1 pos('./compiler/CodeGen.oz' 1710 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1123> 7)
		endDefinition(173978)
lbl(174019)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeArityCheckInit)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		move(y(29) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenMethod' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(174057)	definition(x(7) 174748 pid('CodeGenMethodWithDesignator,makeQuadruple/fast' 6 pos('./compiler/CodeGen.oz' 1732 6) nil 8) <Q: 1124> [g(34) g(35) y(29) y(1)])
		allocateL(15)
		getSelf(x(3))
		inlineDot(x(3) hasDefaults x(3) cache)
		inlineAt(formalArgs x(6) cache)
lbl(174078)	definition(x(7) 174098 pid('' 2 pos('./compiler/CodeGen.oz' 1736 8) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(hasDefault x(2) 1 cache)
		endDefinition(174078)
lbl(174098)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(6) x(0))
		move(x(7) x(1))
		move(x(3) x(2))
		genFastCall(<P: 36> 6)
		inlineAt(coord x(0) cache)
		createVariable(y(5))
		createVariable(y(6))
		createVariable(y(7))
		testLiteral(x(0) unit 174149)
lbl(174138)	getLiteral('' y(5))
		getNumber(1 y(6))
		getNumber(0 y(7))
		branch(174176)
lbl(174149)	inlineDot(x(0) 1 x(1) cache)
		unify(x(1) y(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) y(6))
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(7))
lbl(174176)	putRecord('pos' 3 x(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(7))
		putRecord('pid' 5 y(8))
		setVariable(y(9))
		setConstant(1)
		setValue(x(0))
		setConstant(nil)
		setVariable(y(10))
		inlineAt(label x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(methPrintName x(1) 1 cache)
		putRecord('#' 3 x(0))
		setValue(y(0))
		setConstant(',')
		setValue(y(5))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		unify(x(1) y(9))
		inlineAt(isOpen x(0) cache)
		createVariable(y(0))
		testBool(x(0) 174255 174268)
		unify(y(3) y(0))
		branch(174279)
lbl(174255)	moveMoveYXYX(y(1) x(0) y(3) x(1))
		move(y(0) x(2))
		genCall(gci(g(2) true makeArityCheckInit false 3) 0)
		branch(174279)
lbl(174268)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1751)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174279)	sendMsg(startDefinition y(1) 0 cache)
		inlineAt(messageDesignator x(1) cache)
		move(y(1) x(0))
		sendMsg(setReg x(1) 1 cache)
		inlineAt(messageDesignator x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(3) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(3) x(0))
		sendMsg(init y(5) 1 cache)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		inlineAt(allVariables x(1) cache)
		move(x(0) y(3))
		createVariable(y(6))
		testLiteral(x(1) nil 174355)
lbl(174350)	getLiteral(nil y(6))
		branch(174389)
lbl(174355)	inlineAt(allVariables x(3) cache)
lbl(174360)	definition(x(1) 174380 pid('' 2 pos('./compiler/CodeGen.oz' 1762 32) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(174360)
lbl(174380)	move(x(3) x(0))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
lbl(174389)	inlineAt(isOpen x(0) cache)
		createVariable(y(7))
		createVariable(y(9))
		testBool(x(0) 174407 174422)
		unify(y(7) y(9))
		branch(174433)
lbl(174407)	moveMoveYXYX(y(5) x(0) y(1) x(1))
		moveMoveYXYX(y(7) x(2) y(9) x(3))
		genCall(gci(g(2) true makeArityCheck false 4) 0)
		branch(174433)
lbl(174422)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1764)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(174433)	inlineAt(formalArgs x(0) cache)
lbl(174438)	definition(x(1) 174467 pid('' 3 pos('./compiler/CodeGen.oz' 1770 6) nil 5) unit [y(5) y(1)])
		move(x(1) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(bindMethFormal x(4) 4 cache)
		endDefinition(174438)
lbl(174467)	move(y(9) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(1) x(1) y(5) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(1) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		createVariable(y(5))
		testBool(x(1) 174625 174633)
		createVariableMove(y(11) x(0))
		sendMsg(newSelfReg y(1) 1 cache)
		getRecord(vMakePermanent 3 y(5))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(3))
		getList(x(0))
		unifyValue(y(11))
		unifyLiteral(nil)
		getRecord(vGetSelf 3 x(3))
		unifyVoid(1)
		unifyValVar(y(11) y(12))
		putList(y(13))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(174560)	definition(x(1) 174580 pid('' 2 pos('./compiler/CodeGen.oz' 1781 5) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(174560)
lbl(174580)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(13) x(0) y(12) x(2))
		move(y(7) x(3))
		createVariableMove(y(14) x(1))
		genFastCall(<Q: 1026> 8)
		putList(x(0))
		setValue(y(11))
		setConstant(nil)
		move(y(9) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1027> 6)
		moveMoveYXYX(y(14) x(0) y(7) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1027> 6)
		branch(174644)
lbl(174625)	unify(y(5) y(7))
		getLiteral(nil y(9))
		branch(174644)
lbl(174633)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1774)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(174644)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		moveMoveYXYX(y(6) x(2) y(10) x(5))
		createVariableMove(y(7) x(3))
		createVariableMove(y(9) x(4))
		sendMsg('endDefinition' y(1) 6 cache)
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(1) 1 cache)
		getRecord(vDefinition 7 y(0))
		unifyVoid(1)
		unifyValue(y(3))
		unifyValue(y(8))
		unifyLiteral(unit)
		unifyValue(y(7))
		unifyValVar(y(9) x(4))
		getRecord(vEquateRecord 6 x(4))
		unifyVoid(1)
		unifyLiteral('|')
		unifyNumber(2)
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(value 1 x(2))
		unifyValue(y(3))
		inlineAt(label x(4) cache)
		move(y(1) x(0))
		putConstant(unit x(1))
		putConstant(unit x(2))
		deAllocateL
		tailSendMsg(makeRecordArgument x(4) 4 cache)
		endDefinition(174057)
lbl(174748)	definition(x(8) 174807 pid('CodeGenMethodWithDesignator,makeQuadruple/slow' 1 pos('./compiler/CodeGen.oz' 1732 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1124> 13)
		endDefinition(174748)
lbl(174807)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeQuadruple)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethodWithDesignator' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(174844)	definition(x(7) 174893 pid('CodeGenMethFormal,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1801 6) nil 5) <Q: 1125> [y(6) y(7)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooRequiredArg x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(174844)
lbl(174893)	definition(x(8) 174919 pid('CodeGenMethFormal,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1801 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1125> 3)
		endDefinition(174893)
lbl(174919)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(174929)	definition(x(7) 175073 pid('CodeGenMethFormal,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1804 6) nil 6) <Q: 1126> [y(1)])
		allocateL8
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(feature x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(5) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(5) x(0))
		sendMsg(init y(6) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(makeVO x(4) 4 cache)
		move(y(4) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(1))
		setValue(y(6))
		setConstant(nil)
		putList(x(0))
		setValue(y(7))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		putConstant('.' x(0))
		deAllocateL8
		genFastCall(<Q: 1043> 13)
		endDefinition(174929)
lbl(175073)	definition(x(8) 175120 pid('CodeGenMethFormal,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1804 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1126> 9)
		endDefinition(175073)
lbl(175120)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormal' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175159)	definition(x(7) 175208 pid('CodeGenMethFormalOptional,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1814 6) nil 5) <Q: 1127> [y(6) y(7)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) literals x(2) cache)
		inlineDot(x(2) ooDefaultVar x(2) cache)
		move(g(1) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175159)
lbl(175208)	definition(x(8) 175234 pid('CodeGenMethFormalOptional,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1814 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1127> 3)
		endDefinition(175208)
lbl(175234)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175244)	definition(x(7) 175517 pid('CodeGenMethFormalOptional,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1817 6) nil 6) <Q: 1128> [y(1)])
		allocateL(11)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(isInitialized x(0) cache)
		testBool(x(0) 175290 175504)
		unify(y(2) y(3))
		deAllocateL
		return
lbl(175290)	inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyLiteral(nil)
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
lbl(175504)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1819)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(175244)
lbl(175517)	definition(x(8) 175564 pid('CodeGenMethFormalOptional,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1817 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1128> 9)
		endDefinition(175517)
lbl(175564)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalOptional' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(175603)	definition(x(7) 175642 pid('CodeGenMethFormalWithDefault,getDefault/fast' 1 pos('./compiler/CodeGen.oz' 1843 6) nil 4) <Q: 1129> [y(7)])
		allocateL2
		inlineAt(default x(1) cache)
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(x(1) x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(175603)
lbl(175642)	definition(x(8) 175668 pid('CodeGenMethFormalWithDefault,getDefault/slow' 1 pos('./compiler/CodeGen.oz' 1843 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1129> 3)
		endDefinition(175642)
lbl(175668)	putRecord('#' [1 2 fast] x(9))
		setConstant(getDefault)
		setValue(x(8))
		setValue(x(7))
lbl(175678)	definition(x(7) 175963 pid('CodeGenMethFormalWithDefault,bindMethFormal/fast' 4 pos('./compiler/CodeGen.oz' 1846 6) nil 6) <Q: 1130> [y(1) y(7)])
		allocateL(13)
		inlineAt(arg x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(y(1) x(0))
		sendMsg(setFreshReg x(4) 1 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		createVariableMove(y(6) x(0))
		sendMsg(newReg y(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		sendMsg(init y(7) 1 cache)
		inlineAt(feature x(4) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(makeVO x(4) 4 cache)
		inlineAt(arg x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg x(1) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(10) y(2) x(0))
		sendMsg(init y(10) 1 cache)
		putList(x(1))
		setValue(y(10))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		putConstant('.' x(0))
		createVariableMove(y(2) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1043> 12)
		inlineAt(default x(0) cache)
		move(g(1) x(1))
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(11))
		sendMsg(init y(11) 1 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(12) x(2))
		putConstant(nil x(3))
		sendMsg(makeEquation y(11) 4 cache)
		moveMoveYXYX(y(4) x(1) y(1) x(3))
		putConstant(boolCaseType x(0))
		putConstant(nil x(2))
		createVariableMove(y(10) x(4))
		putConstant(nil x(5))
		genFastCall(<Q: 1044> 12)
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(9))
		setValue(x(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(3))
		move(y(8) x(4))
		putConstant(hasFeature x(0))
		createVariableMove(y(0) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vTestBool 8 y(0))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(2))
		unifyValue(y(12))
		unifyValue(y(10))
		unifyLiteral(unit)
		unifyValue(y(3))
		unifyVoid(1)
		deAllocateL
		return
		endDefinition(175678)
lbl(175963)	definition(x(8) 176010 pid('CodeGenMethFormalWithDefault,bindMethFormal/slow' 1 pos('./compiler/CodeGen.oz' 1846 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1130> 9)
		endDefinition(175963)
lbl(176010)	putRecord('#' [1 2 fast] x(10))
		setConstant(bindMethFormal)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenMethFormalWithDefault' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176049)	definition(x(7) 176176 pid('CodeGenObjectLockNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1870 6) nil 6) <Q: 1131> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(newReg y(0) 1 cache)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		inlineAt(coord x(0) cache)
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1023> 4)
		putList(x(2))
		setValue(y(4))
		setConstant(nil)
		moveMoveYXYX(y(5) x(1) y(0) x(3))
		move(y(1) x(4))
		putConstant(ooGetLock x(0))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1043> 12)
		getRecord(vLockThread 5 y(4))
		unifyVoid(1)
		unifyValVar(y(3) x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		inlineAt(coord x(0) cache)
		unify(x(0) x(4))
		inlineAt(statements x(0) cache)
		inlineAt(coord x(4) cache)
		putRecord(vLockEnd 4 x(3))
		setVoid(1)
		setValue(x(4))
		setValue(y(2))
		setValue(x(5))
		move(y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1022> 9)
		endDefinition(176049)
lbl(176176)	definition(x(8) 176217 pid('CodeGenObjectLockNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1870 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1131> 7)
		endDefinition(176176)
lbl(176217)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176254)	definition(x(7) 176283 pid('CodeGenGetSelf,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1881 6) nil 3) <Q: 1132> nil)
		getRecord(vGetSelf 3 x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(2))
		inlineAt(destination x(1) cache)
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(176254)
lbl(176283)	definition(x(8) 176324 pid('CodeGenGetSelf,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1881 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1132> 7)
		endDefinition(176283)
lbl(176324)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenGetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176361)	definition(x(7) 176394 pid('CodeGenFailNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1887 6) nil 6) <Q: 1133> nil)
		inlineAt(coord x(0) cache)
		putRecord(vFailure 2 x(4))
		setVoid(1)
		setVariable(x(5))
		move(x(2) x(3))
		move(x(1) x(2))
		putConstant('fail' x(1))
		genFastCall(<Q: 1024> 13)
		endDefinition(176361)
lbl(176394)	definition(x(8) 176435 pid('CodeGenFailNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1887 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1133> 7)
		endDefinition(176394)
lbl(176435)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176472)	definition(x(7) 176810 pid('CodeGenIfNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1893 6) nil 6) <Q: 1134> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(makeRegSet y(0) 1 cache)
		inlineAt(clauses x(0) cache)
		testList(x(0) 176679)
lbl(176504)	getVarVar(x(0) x(1))
		createVariable(y(4))
		testLiteral(x(1) nil 176679)
		move(x(0) y(5))
		createVariableMove(y(6) x(0))
		sendMsg(getGuardGlobalVars y(5) 1 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		sendMsg(enterVs y(0) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		sendMsg(codeGen y(5) 5 cache)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1046> 4)
		testBool(y(0) 176622 176668)
		getLiteral(nil y(7))
		getRecord(vShallowGuard 8 y(1))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		unifyValVar(y(5) x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
lbl(176622)	unify(y(7) y(8))
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(y(5))
		unifyValVar(y(2) x(1))
		unifyValue(y(3))
		unifyVoid(1)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyVoid(1)
		unifyValue(y(6))
		unifyValue(y(9))
		inlineAt(coord x(0) cache)
		unify(x(0) x(1))
		deAllocateL10
		return
lbl(176668)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1901)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(176679)	inlineAt(clauses x(0) cache)
lbl(176684)	definition(x(1) 176755 pid('' 2 pos('./compiler/CodeGen.oz' 1912 3) nil 6) unit [y(0) y(3)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(176684)
lbl(176755)	createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(alternative x(3) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		sendMsg(codeGenNoShared x(3) 3 cache)
		getRecord(vCreateCond 7 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(6))
		unifyValVar(y(2) x(0))
		unifyValue(y(3))
		unifyVoid(1)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		deAllocateL10
		return
		endDefinition(176472)
lbl(176810)	definition(x(8) 176851 pid('CodeGenIfNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1893 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1134> 7)
		endDefinition(176810)
lbl(176851)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(176888)	definition(x(7) 177055 pid('CodeGenChoicesAndDisjunctions,codeGen/fast' 4 pos('./compiler/CodeGen.oz' 1927 6) nil 6) <Q: 1135> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(0))
		sendMsg(makeRegSet y(1) 1 cache)
		inlineAt(clauses x(0) cache)
lbl(176919)	definition(x(1) 176990 pid('' 2 pos('./compiler/CodeGen.oz' 1930 7) nil 6) unit [y(1) y(4)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGuardGlobalVars y(0) 1 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		sendMsg(enterVs g(0) 2 cache)
		move(g(0) x(0))
		createVariableMove(y(2) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(codeGen y(0) 5 cache)
		unify(y(3) y(4))
		getRecord('#' 3 y(1))
		unifyVoid(1)
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL6
		return
		endDefinition(176919)
lbl(176990)	createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(4))
		setVoid(1)
		setConstant(nil)
		putList(x(5))
		setValue(y(4))
		setValue(x(4))
		putList(x(4))
		setVariable(y(4))
		setValue(x(5))
		putList(x(5))
		setValue(y(3))
		setValue(x(4))
		putList(x(4))
		setValue(y(1))
		setValue(x(5))
		putList(x(1))
		setVoid(1)
		setValue(x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(3))
		putConstant(6 x(2))
		marshalledFastCall(<R: tuple> 8)
		inlineAt(coord x(0) cache)
		unify(x(0) y(4))
		deAllocateL5
		return
		endDefinition(176888)
lbl(177055)	definition(x(8) 177102 pid('CodeGenChoicesAndDisjunctions,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1927 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1135> 9)
		endDefinition(177055)
lbl(177102)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177139)	definition(x(7) 177162 pid('CodeGenOrNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1942 6) nil 4) <Q: 1136> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177139)
lbl(177162)	definition(x(8) 177203 pid('CodeGenOrNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1942 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1136> 7)
		endDefinition(177162)
lbl(177203)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenOrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177240)	definition(x(7) 177263 pid('CodeGenDisNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1947 6) nil 4) <Q: 1137> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateEnumOr x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177240)
lbl(177263)	definition(x(8) 177304 pid('CodeGenDisNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1947 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1137> 7)
		endDefinition(177263)
lbl(177304)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenDisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177341)	definition(x(7) 177364 pid('CodeGenChoiceNode,codeGen/fast' 3 pos('./compiler/CodeGen.oz' 1952 6) nil 4) <Q: 1138> [y(36)])
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		putConstant(vCreateChoice x(0))
		genCall(gci(g(0) true codeGen true 4) 0)
		endDefinition(177341)
lbl(177364)	definition(x(8) 177405 pid('CodeGenChoiceNode,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1952 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1138> 7)
		endDefinition(177364)
lbl(177405)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177442)	definition(x(7) 177796 pid('CodeGenClause,codeGen/fast' 5 pos('./compiler/CodeGen.oz' 1958 6) nil 7) <Q: 1139> nil)
		allocateL9
		inlineAt(localVars x(5) cache)
lbl(177454)	definition(x(6) 177474 pid('' 1 pos('./compiler/CodeGen.oz' 1959 21) nil 2) unit [x(0)])
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(setReg x(1) 1 cache)
		endDefinition(177454)
lbl(177474)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1022> 8)
		move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1045> 4)
		testBool(y(7) 177632 177640)
		inlineAt(guard x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(getCoord x(1) 1 cache)
		move(y(0) x(0))
		inlineDot(x(0) switches x(2) cache)
		putConstant(warnopt x(0))
		createVariableMove(y(8) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(8) 177613 177602)
		move(y(0) x(0))
		inlineDot(x(0) reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('translating `cond\', `or\', `dis\' or `choice\' ')
		setConstant('clause with thread')
		move(y(7) x(0))
		putConstant('optimization warning' x(1))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(177613)
lbl(177602)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1963)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177613)	getLiteral(nil y(6))
		getRecord(vThread 5 y(1))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(7))
		unifyValue(y(2))
		unifyVoid(1)
		branch(177651)
lbl(177632)	unify(y(6) y(2))
		unify(y(1) y(5))
		branch(177651)
lbl(177640)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1961)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(177651)	inlineAt(kind x(0) cache)
		match(x(0) ht(177689 [onScalar('ask' 177659) onScalar('wait' 177669) onScalar('waitTop' 177679)]))
lbl(177659)	getRecord(vAsk 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177702)
lbl(177669)	getRecord(vWait 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177702)
lbl(177679)	getRecord(vWaitTop 2 y(3))
		unifyVoid(1)
		unifyLiteral(nil)
		branch(177702)
lbl(177689)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1978)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(177702)	move(y(0) x(0))
		inlineDot(x(0) debugInfoVarnamesSwitch x(1) cache)
		testBool(x(1) 177763 177783)
		inlineAt(localVars x(4) cache)
		move(x(4) x(0))
		move(y(4) x(2))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1026> 8)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<Q: 1022> 8)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		putConstant(nil x(2))
		deAllocateL9
		genFastCall(<Q: 1027> 7)
lbl(177763)	inlineAt(statements x(4) cache)
		move(x(4) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		putConstant(nil x(3))
		deAllocateL9
		genFastCall(<Q: 1022> 9)
lbl(177783)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1979)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(177442)
lbl(177796)	definition(x(8) 177849 pid('CodeGenClause,codeGen/slow' 1 pos('./compiler/CodeGen.oz' 1958 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1139> 11)
		endDefinition(177796)
lbl(177849)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGen)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenClause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(177886)	definition(x(7) 177903 pid('CodeGenValueNode,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 1990 6) nil 2) <Q: 1140> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(177886)
lbl(177903)	definition(x(8) 177929 pid('CodeGenValueNode,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 1990 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1140> 3)
		endDefinition(177903)
lbl(177929)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(177939)	definition(x(7) 177951 pid('CodeGenValueNode,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 1993 6) nil 1) <Q: 1141> nil)
		getLiteral(true x(0))
		return
		endDefinition(177939)
lbl(177951)	definition(x(8) 177977 pid('CodeGenValueNode,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1993 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1141> 3)
		endDefinition(177951)
lbl(177977)	putRecord('#' [1 2 fast] x(10))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(177987)	definition(x(7) 178013 pid('CodeGenValueNode,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 1996 6) nil 5) <Q: 1142> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(177987)
lbl(178013)	definition(x(8) 178066 pid('CodeGenValueNode,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 1996 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1142> 11)
		endDefinition(178013)
lbl(178066)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(178076)	definition(x(7) 178162 pid('CodeGenValueNode,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 1999 6) nil 7) <Q: 1143> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(178076)
lbl(178162)	definition(x(8) 178227 pid('CodeGenValueNode,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 1999 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1143> 15)
		endDefinition(178162)
lbl(178227)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(178237)	definition(x(7) 178249 pid('CodeGenValueNode,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2006 6) nil 2) <Q: 1144> nil)
		unify(x(1) x(0))
		return
		endDefinition(178237)
lbl(178249)	definition(x(8) 178284 pid('CodeGenValueNode,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2006 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1144> 5)
		endDefinition(178249)
lbl(178284)	putRecord('#' [1 2 fast] x(13))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(178294)	definition(x(7) 178303 pid('CodeGenValueNode,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2009 6) nil 1) <Q: 1145> nil)
		return
		endDefinition(178294)
lbl(178303)	definition(x(8) 178329 pid('CodeGenValueNode,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2009 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1145> 3)
		endDefinition(178303)
lbl(178329)	putRecord('#' [1 2 fast] x(14))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178376)	definition(x(7) 178410 pid('CodeGenAtomNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2015 6) nil 4) <Q: 1146> nil)
		getRecord(vEquateLiteral 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178376)
lbl(178410)	definition(x(8) 178457 pid('CodeGenAtomNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2015 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1146> 9)
		endDefinition(178410)
lbl(178457)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178467)	definition(x(7) 178493 pid('CodeGenAtomNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2018 6) nil 4) <Q: 1147> nil)
		unify(x(1) x(2))
		getRecord(literal 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178467)
lbl(178493)	definition(x(8) 178540 pid('CodeGenAtomNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2018 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1147> 9)
		endDefinition(178493)
lbl(178540)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(178550)	definition(x(7) 178622 pid('CodeGenAtomNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2022 6) nil 4) <Q: 1148> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateLiteral 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178550)
lbl(178622)	definition(x(8) 178669 pid('CodeGenAtomNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2022 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1148> 9)
		endDefinition(178622)
lbl(178669)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(178679)	definition(x(7) 178696 pid('CodeGenAtomNode,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 2) <Q: 1149> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178679)
lbl(178696)	definition(x(8) 178722 pid('CodeGenAtomNode,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2027 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1149> 3)
		endDefinition(178696)
lbl(178722)	putRecord('#' [1 2 fast] x(12))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenAtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(178765)	definition(x(7) 178799 pid('CodeGenIntNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2033 6) nil 4) <Q: 1150> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178765)
lbl(178799)	definition(x(8) 178846 pid('CodeGenIntNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2033 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1150> 9)
		endDefinition(178799)
lbl(178846)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(178856)	definition(x(7) 178882 pid('CodeGenIntNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2036 6) nil 4) <Q: 1151> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(178856)
lbl(178882)	definition(x(8) 178929 pid('CodeGenIntNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2036 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1151> 9)
		endDefinition(178882)
lbl(178929)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(178939)	definition(x(7) 179011 pid('CodeGenIntNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2040 6) nil 4) <Q: 1152> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(178939)
lbl(179011)	definition(x(8) 179058 pid('CodeGenIntNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2040 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1152> 9)
		endDefinition(179011)
lbl(179058)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenIntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179099)	definition(x(7) 179133 pid('CodeGenFloatNode,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2048 6) nil 4) <Q: 1153> nil)
		getRecord(vEquateNumber 4 x(2))
		unifyVoid(1)
		unifyVariable(x(2))
		unifyVariable(x(0))
		unifyValue(x(3))
		inlineAt(value x(3) cache)
		unify(x(3) x(2))
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179099)
lbl(179133)	definition(x(8) 179180 pid('CodeGenFloatNode,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2048 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1153> 9)
		endDefinition(179133)
lbl(179180)	putRecord('#' [1 2 fast] x(9))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(179190)	definition(x(7) 179216 pid('CodeGenFloatNode,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2051 6) nil 4) <Q: 1154> nil)
		unify(x(1) x(2))
		getRecord(number 1 x(3))
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179190)
lbl(179216)	definition(x(8) 179263 pid('CodeGenFloatNode,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2051 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1154> 9)
		endDefinition(179216)
lbl(179263)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(179273)	definition(x(7) 179345 pid('CodeGenFloatNode,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2055 6) nil 4) <Q: 1155> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(1))
		genFastCall(<Q: 1038> 4)
		move(y(2) x(0))
		inlineDot(x(0) value x(1) cache)
		inlineAt(value x(2) cache)
		unify(x(2) x(1))
		getRecord(vEquateNumber 4 y(0))
		unifyVoid(1)
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		inlineAt(value x(3) cache)
		unify(x(3) x(1))
		move(x(2) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179273)
lbl(179345)	definition(x(8) 179392 pid('CodeGenFloatNode,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2055 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1155> 9)
		endDefinition(179345)
lbl(179392)	putRecord('#' [1 2 fast] x(11))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenFloatNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [reg] x(2))
		setConstant(<U: ooFreeFlag>)
lbl(179439)	definition(x(7) 179463 pid('CodeGenVariable,setReg/fast' 1 pos('./compiler/CodeGen.oz' 2064 6) nil 3) <Q: 1156> nil)
		inlineAt(reg x(1) cache)
		move(x(0) x(2))
		getSelf(x(0))
		tailSendMsg(newVariableReg x(2) 2 cache)
		endDefinition(179439)
lbl(179463)	definition(x(8) 179489 pid('CodeGenVariable,setReg/slow' 1 pos('./compiler/CodeGen.oz' 2064 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1156> 3)
		endDefinition(179463)
lbl(179489)	putRecord('#' [1 2 fast] x(9))
		setConstant(setReg)
		setValue(x(8))
		setValue(x(7))
lbl(179499)	definition(x(7) 179532 pid('CodeGenVariable,setFreshReg/fast' 1 pos('./compiler/CodeGen.oz' 2067 6) nil 3) <Q: 1157> nil)
		allocateL1
		move(x(0) x(2))
		getSelf(x(0))
		createVariableMove(y(0) x(1))
		sendMsg(newVariableReg x(2) 2 cache)
		move(y(0) x(0))
		inlineAssign(reg x(0) cache)
		deAllocateL1
		return
		endDefinition(179499)
lbl(179532)	definition(x(8) 179558 pid('CodeGenVariable,setFreshReg/slow' 1 pos('./compiler/CodeGen.oz' 2067 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1157> 3)
		endDefinition(179532)
lbl(179558)	putRecord('#' [1 2 fast] x(10))
		setConstant(setFreshReg)
		setValue(x(8))
		setValue(x(7))
lbl(179568)	definition(x(7) 179585 pid('CodeGenVariable,reg/fast' 1 pos('./compiler/CodeGen.oz' 2070 6) nil 2) <Q: 1158> nil)
		inlineAt(reg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(179568)
lbl(179585)	definition(x(8) 179611 pid('CodeGenVariable,reg/slow' 1 pos('./compiler/CodeGen.oz' 2070 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1158> 3)
		endDefinition(179585)
lbl(179611)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(179649)	definition(x(7) 179690 pid('CodeGenVariableOccurrence,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2076 6) nil 4) <Q: 1159> nil)
		inlineAt(value x(1) cache)
		testBI('IsDet' [x(1)]#[x(2)] 179687)
		inlineAt(value x(1) cache)
		getSelf(x(2))
		testBI('==' [x(1) x(2)]#[x(3)] 179676)
		return
lbl(179676)	inlineAt(value x(1) cache)
		tailSendMsg(getCodeGenValue x(1) 1 cache)
lbl(179687)	return
		endDefinition(179649)
lbl(179690)	definition(x(8) 179716 pid('CodeGenVariableOccurrence,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2076 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1159> 3)
		endDefinition(179690)
lbl(179716)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
lbl(179726)	definition(x(7) 179745 pid('CodeGenVariableOccurrence,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2084 6) nil 7) <Q: 1160> nil)
		inlineAt(value x(6) cache)
		tailSendMsg(codeGenApplication x(6) 6 cache)
		endDefinition(179726)
lbl(179745)	definition(x(8) 179804 pid('CodeGenVariableOccurrence,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2084 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1160> 13)
		endDefinition(179745)
lbl(179804)	putRecord('#' [1 2 fast] x(10))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
lbl(179814)	definition(x(7) 179912 pid('CodeGenVariableOccurrence,reg/fast' 1 pos('./compiler/CodeGen.oz' 2087 6) nil 5) <Q: 1161> [y(5)])
		allocateL3
		inlineAt(value x(1) cache)
		move(x(0) y(0))
		testBI('IsDet' [x(1)]#[x(2)] 179895)
lbl(179833)	testBI('IsObject' [x(1)]#[x(2)] 179895)
lbl(179837)	move(g(0) x(2))
		inlineDot(x(2) imAVariableOccurrence x(3) cache)
		testBI('HasFeature' [x(1) x(3)]#[x(4)] 179895)
lbl(179850)	createVariableMove(y(1) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(2) x(0))
		sendMsg(reg y(1) 1 cache)
		move(y(2) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 179880)
		unify(y(0) y(2))
		deAllocateL3
		return
lbl(179880)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
lbl(179895)	inlineAt(variable x(1) cache)
		move(y(0) x(0))
		deAllocateL3
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(179814)
lbl(179912)	definition(x(8) 179938 pid('CodeGenVariableOccurrence,reg/slow' 1 pos('./compiler/CodeGen.oz' 2087 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1161> 3)
		endDefinition(179912)
lbl(179938)	putRecord('#' [1 2 fast] x(11))
		setConstant(reg)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(179950)	definition(x(7) 180225 pid('CodeGenVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2102 6) nil 4) <Q: 1162> [y(46)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180046)
		testBI('IsNumber' [x(0)]#[x(1)] 180013)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
		branch(180046)
lbl(180013)	testBI('IsLiteral' [x(0)]#[x(1)] 180046)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) y(4))
		unifyValue(y(2))
		createVariableMove(y(3) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(reg y(3) 1 cache)
lbl(180046)	move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180055)
		deAllocateL5
		return
lbl(180055)	createVariableMove(y(3) x(0))
		sendMsg(getCodeGenValue y(0) 1 cache)
		move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180177)
		testBI('IsNumber' [x(0)]#[x(1)] 180101)
		getRecord(vEquateNumber 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180101)	testBI('IsLiteral' [x(0)]#[x(1)] 180131)
		getRecord(vEquateLiteral 4 y(1))
		unifyVoid(1)
		unifyValVar(y(3) x(1))
		unifyValue(y(2))
		inlineAt(variable x(2) cache)
		move(x(1) x(0))
		deAllocateL5
		tailSendMsg(reg x(2) 1 cache)
lbl(180131)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
lbl(180177)	inlineAt(variable x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(reg x(1) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(0) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(reg y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(179950)
lbl(180225)	definition(x(8) 180272 pid('CodeGenVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2102 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1162> 9)
		endDefinition(180225)
lbl(180272)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
lbl(180282)	definition(x(7) 180370 pid('CodeGenVariableOccurrence,makeRecordArgument/fast' 4 pos('./compiler/CodeGen.oz' 2133 6) nil 4) <Q: 1163> [y(46)])
		allocateL2
		unify(x(1) x(2))
		move(x(3) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180350)
		testBI('IsNumber' [x(0)]#[x(1)] 180320)
		getRecord(number 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180320)	testBI('IsLiteral' [x(0)]#[x(1)] 180332)
		getRecord(literal 1 y(0))
		unifyValue(y(1))
		deAllocateL2
		return
lbl(180332)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
lbl(180350)	getRecord(value 1 y(0))
		unifyVariable(x(0))
		inlineAt(variable x(1) cache)
		deAllocateL2
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(180282)
lbl(180370)	definition(x(8) 180417 pid('CodeGenVariableOccurrence,makeRecordArgument/slow' 1 pos('./compiler/CodeGen.oz' 2133 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1163> 9)
		endDefinition(180370)
lbl(180417)	putRecord('#' [1 2 fast] x(13))
		setConstant(makeRecordArgument)
		setValue(x(8))
		setValue(x(7))
lbl(180427)	definition(x(7) 180444 pid('CodeGenVariableOccurrence,makeVO/fast' 4 pos('./compiler/CodeGen.oz' 2148 6) nil 4) <Q: 1164> nil)
		unify(x(1) x(2))
		getSelf(x(0))
		unify(x(0) x(3))
		return
		endDefinition(180427)
lbl(180444)	definition(x(8) 180491 pid('CodeGenVariableOccurrence,makeVO/slow' 1 pos('./compiler/CodeGen.oz' 2148 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1164> 9)
		endDefinition(180444)
lbl(180491)	putRecord('#' [1 2 fast] x(14))
		setConstant(makeVO)
		setValue(x(8))
		setValue(x(7))
lbl(180501)	definition(x(7) 180548 pid('CodeGenVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2152 6) nil 2) <Q: 1165> [y(46)])
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		genCall(gci(g(0) true getCodeGenValue false 1) 0)
		move(y(1) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 180541)
		testBI('IsNumber' [x(0)]#[x(1)] 180533)
		getLiteral(true y(0))
		deAllocateL2
		return
lbl(180533)	callBI('IsLiteral' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(180541)	getLiteral(false y(0))
		deAllocateL2
		return
		endDefinition(180501)
lbl(180548)	definition(x(8) 180574 pid('CodeGenVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2152 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1165> 3)
		endDefinition(180548)
lbl(180574)	putRecord('#' [1 2 fast] x(15))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180584)	definition(x(7) 180610 pid('CodeGenVariableOccurrence,makeSwitchable/fast' 5 pos('./compiler/CodeGen.oz' 2156 6) nil 5) <Q: 1166> nil)
		getRecord(addScalar 3 x(4))
		unifyVariable(x(0))
		unifyValue(x(1))
		unifyValue(x(2))
		getSelf(x(2))
		tailSendMsg(getCodeGenValue x(2) 1 cache)
		endDefinition(180584)
lbl(180610)	definition(x(8) 180663 pid('CodeGenVariableOccurrence,makeSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2156 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1166> 11)
		endDefinition(180610)
lbl(180663)	putRecord('#' [1 2 fast] x(16))
		setConstant(makeSwitchable)
		setValue(x(8))
		setValue(x(7))
lbl(180673)	definition(x(7) 180759 pid('CodeGenVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2159 6) nil 7) <Q: 1167> [y(1)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(0))
		sendMsg(newReg y(0) 1 cache)
		getRecord(vGetVariable 3 y(2))
		unifyVoid(1)
		unifyValue(y(7))
		unifyValue(y(3))
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(7) x(0))
		sendMsg(init y(2) 1 cache)
		getSelf(x(5))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(4) x(2) y(5) x(3))
		sendMsg(makeEquation x(5) 4 cache)
		unify(y(6) y(1))
		deAllocateL8
		return
		endDefinition(180673)
lbl(180759)	definition(x(8) 180824 pid('CodeGenVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2159 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1167> 15)
		endDefinition(180759)
lbl(180824)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(180834)	definition(x(7) 180853 pid('CodeGenVariableOccurrence,methPrintName/fast' 1 pos('./compiler/CodeGen.oz' 2166 6) nil 2) <Q: 1168> nil)
		inlineAt(variable x(1) cache)
		tailSendMsg(getPrintName x(1) 1 cache)
		endDefinition(180834)
lbl(180853)	definition(x(8) 180879 pid('CodeGenVariableOccurrence,methPrintName/slow' 1 pos('./compiler/CodeGen.oz' 2166 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1168> 3)
		endDefinition(180853)
lbl(180879)	putRecord('#' [1 2 fast] x(18))
		setConstant(methPrintName)
		setValue(x(8))
		setValue(x(7))
lbl(180889)	definition(x(7) 180901 pid('CodeGenVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2169 6) nil 2) <Q: 1169> nil)
		unify(x(1) x(0))
		return
		endDefinition(180889)
lbl(180901)	definition(x(8) 180936 pid('CodeGenVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2169 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1169> 5)
		endDefinition(180901)
lbl(180936)	putRecord('#' [1 2 fast] x(19))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(180946)	definition(x(7) 180955 pid('CodeGenVariableOccurrence,assignRegToStructure/fast' 1 pos('./compiler/CodeGen.oz' 2172 6) nil 1) <Q: 1170> nil)
		return
		endDefinition(180946)
lbl(180955)	definition(x(8) 180981 pid('CodeGenVariableOccurrence,assignRegToStructure/slow' 1 pos('./compiler/CodeGen.oz' 2172 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1170> 3)
		endDefinition(180955)
lbl(180981)	putRecord('#' [1 2 fast] x(20))
		setConstant(assignRegToStructure)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181040)	definition(x(7) 181052 pid('CodeGenPatternVariableOccurrence,isSwitchable/fast' 1 pos('./compiler/CodeGen.oz' 2178 6) nil 1) <Q: 1171> nil)
		getLiteral(false x(0))
		return
		endDefinition(181040)
lbl(181052)	definition(x(8) 181078 pid('CodeGenPatternVariableOccurrence,isSwitchable/slow' 1 pos('./compiler/CodeGen.oz' 2178 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1171> 3)
		endDefinition(181052)
lbl(181078)	putRecord('#' [1 2 fast] x(9))
		setConstant(isSwitchable)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(181090)	definition(x(7) 181139 pid('CodeGenPatternVariableOccurrence,makeGetArg/fast' 7 pos('./compiler/CodeGen.oz' 2181 6) nil 7) <Q: 1172> [y(1)])
		allocateL4
		getRecord(vGetVariable 3 x(2))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValue(x(3))
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		getSelf(x(2))
		sendMsg(reg x(2) 1 cache)
		unify(y(1) y(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true addPatternVs true 2) 0)
		endDefinition(181090)
lbl(181139)	definition(x(8) 181204 pid('CodeGenPatternVariableOccurrence,makeGetArg/slow' 1 pos('./compiler/CodeGen.oz' 2181 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1172> 15)
		endDefinition(181139)
lbl(181204)	putRecord('#' [1 2 fast] x(10))
		setConstant(makeGetArg)
		setValue(x(8))
		setValue(x(7))
lbl(181214)	definition(x(7) 181281 pid('CodeGenPatternVariableOccurrence,addPatternVs/fast' 2 pos('./compiler/CodeGen.oz' 2187 6) nil 4) <Q: 1173> nil)
		allocateL3
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(2) 181252 181268)
		unify(y(1) y(0))
		deAllocateL3
		return
lbl(181252)	getList(y(1))
		unifyVariable(x(0))
		unifyValue(y(0))
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		deAllocateL3
		return
lbl(181268)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2188)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181214)
lbl(181281)	definition(x(8) 181316 pid('CodeGenPatternVariableOccurrence,addPatternVs/slow' 1 pos('./compiler/CodeGen.oz' 2187 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1173> 5)
		endDefinition(181281)
lbl(181316)	putRecord('#' [1 2 fast] x(11))
		setConstant(addPatternVs)
		setValue(x(8))
		setValue(x(7))
lbl(181326)	definition(x(7) 181380 pid('CodeGenPatternVariableOccurrence,makeEquation/fast' 4 pos('./compiler/CodeGen.oz' 2194 6) nil 5) <Q: 1174> nil)
		allocateL5
		inlineAt(variable x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(reg x(4) 1 cache)
		createVariableMove(y(4) x(0))
		sendMsg(reg y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1025> 9)
		endDefinition(181326)
lbl(181380)	definition(x(8) 181427 pid('CodeGenPatternVariableOccurrence,makeEquation/slow' 1 pos('./compiler/CodeGen.oz' 2194 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1174> 9)
		endDefinition(181380)
lbl(181427)	putRecord('#' [1 2 fast] x(12))
		setConstant(makeEquation)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenPatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(181470)	definition(x(7) 181487 pid('CodeGenToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2200 6) nil 2) <Q: 1175> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(181470)
lbl(181487)	definition(x(8) 181513 pid('CodeGenToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2200 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1175> 3)
		endDefinition(181487)
lbl(181513)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenToken' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181550)	definition(x(7) 181587 pid('CodeGenNameToken,getCodeGenValue/fast' 1 pos('./compiler/CodeGen.oz' 2206 6) nil 2) <Q: 1176> nil)
		inlineAt(isToplevel x(1) cache)
		testBool(x(1) 181573 181574)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
lbl(181573)	return
lbl(181574)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2207)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(181550)
lbl(181587)	definition(x(8) 181613 pid('CodeGenNameToken,getCodeGenValue/slow' 1 pos('./compiler/CodeGen.oz' 2206 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1176> 3)
		endDefinition(181587)
lbl(181613)	putRecord('#' [1 2 fast] x(9))
		setConstant(getCodeGenValue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenNameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(181650)	definition(x(7) 181780 pid('CodeGenProcedureToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2212 6) nil 7) <Q: 1177> nil)
		allocateL5
		getSelf(x(3))
		inlineDot(x(3) predicateRef x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(4) y(3))
		move(x(5) y(4))
		testBI('IsDet' [x(3)]#[x(6)] 181686)
lbl(181682)	testLiteral(x(3) unit 181735)
lbl(181686)	getRecord(vCall 5 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(3))
		unifyValue(y(1))
		unifyValue(y(4))
		sendMsg(reg y(0) 1 cache)
lbl(181706)	definition(x(1) 181726 pid('' 2 pos('./compiler/CodeGen.oz' 2220 19) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181706)
lbl(181726)	moveMoveYXYX(y(2) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(181735)	getRecord(vFastCall 5 y(3))
		unifyVoid(1)
		unifyValVar(x(3) x(4))
		unifyValue(y(1))
		unifyValue(y(4))
lbl(181748)	definition(x(1) 181768 pid('' 2 pos('./compiler/CodeGen.oz' 2216 42) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(181748)
lbl(181768)	move(y(2) x(0))
		move(x(4) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
		endDefinition(181650)
lbl(181780)	definition(x(8) 181839 pid('CodeGenProcedureToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2212 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1177> 13)
		endDefinition(181780)
lbl(181839)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('feat' [<M: ClauseBodyShared>] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(181882)	definition(x(7) 181963 pid('CodeGenClauseBodyToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2227 6) nil 6) <Q: 1178> nil)
		getLiteral(nil x(2))
		getSelf(x(0))
		inlineDot(x(0) <M: ClauseBodyShared> x(1) cache)
		unify(x(1) x(4))
		getLiteral(nil x(5))
		testBI('IsFree' [x(4)]#[x(0)] 181960)
		allocateL3
		getRecord(vShared 4 x(4))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(3) y(2))
		sendMsg(newLabel y(2) 1 cache)
		putConstant(0 x(4))
		callBI('NewCell' [x(4)]#[x(0)])
		unify(x(0) y(0))
		getSelf(x(4))
		inlineDot(x(4) clauseBodyStatements x(0) cache)
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<Q: 1022> 9)
lbl(181960)	return
		endDefinition(181882)
lbl(181963)	definition(x(8) 182022 pid('CodeGenClauseBodyToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2227 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1178> 13)
		endDefinition(181963)
lbl(182022)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('CodeGenClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(182056)	definition(x(7) 183241 pid('CodeGenBuiltinToken,codeGenApplication/fast' 6 pos('./compiler/CodeGen.oz' 2241 6) nil 8) <Q: 1179> [y(4) y(5)])
		allocateL(12)
		move(g(0) x(0))
		inlineDot(x(0) printName x(6) cache)
		inlineAt(value x(7) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(7) x(0))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(5) ht(182588 [onScalar('New' 182103) onScalar('+' 182198) onScalar('-' 182459)]))
lbl(182103)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(7))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(8))
		unifyLiteral(nil)
		createVariableMove(y(9) x(0))
		sendMsg(newReg y(2) 1 cache)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('New')
		unifyVariable(x(0))
		unifyValVar(y(0) y(2))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(10))
		unifyVariable(x(3))
		getList(x(3))
		unifyValue(y(9))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(10) x(0))
		sendMsg(reg y(7) 1 cache)
		getRecord(vUnify 4 y(2))
		unifyVoid(1)
		unifyValVar(y(9) x(0))
		unifyValue(y(4))
		sendMsg(reg y(8) 1 cache)
		branch(183185)
lbl(182198)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182325)
		match(y(8) ht(182325 [onScalar(1 182235) onScalar(~1 182281)]))
lbl(182235)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(182325)
lbl(182281)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(8))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(6) 1 cache)
		move(y(8) x(0))
		sendMsg(reg y(7) 1 cache)
lbl(182325)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182334)
		branch(183185)
lbl(182334)	createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		move(y(8) x(0))
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 183185 182448)
		match(y(8) ht(183185 [onScalar(1 182356) onScalar(~1 182402)]))
lbl(182356)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183185)
lbl(182402)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(6) x(0))
		sendMsg(reg y(7) 1 cache)
		branch(183185)
lbl(182448)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2271)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182459)	getList(y(1))
		unifyVariable(y(2))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(6))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183185)
		match(y(7) ht(183185 [onScalar(1 182496) onScalar(~1 182542)]))
lbl(182496)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('-1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183185)
lbl(182542)	getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyLiteral('+1')
		unifyVariable(x(0))
		unifyValue(y(0))
		unifyValue(y(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(7))
		unifyLiteral(nil)
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		move(y(7) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183185)
lbl(182588)	move(y(2) x(0))
		inlineDot(x(0) debugInfoControlSwitch x(1) cache)
		testBool(x(1) 182603 183174)
		branch(183185)
lbl(182603)	match(y(5) ht(183185 [onScalar('.' 182606) onScalar('@' 182823) onScalar('<-' 182877) onScalar(',' 182931)]))
lbl(182606)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(7))
		unifyLiteral(nil)
		createVariableMove(y(8) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(8) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183185)
lbl(182640)	testBI('IsLiteral' [x(0)]#[x(1)] 182817)
lbl(182644)	createVariableMove(y(9) x(0))
		sendMsg(getCodeGenValue y(6) 1 cache)
		createVariable(y(10))
		move(y(9) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182682)
		testBI('IsRecord' [x(0)]#[x(1)] 182677)
		move(y(8) x(1))
		callBI('HasFeature' [x(0) x(1)]#[x(2)])
		unify(x(2) y(10))
		branch(182685)
lbl(182677)	getLiteral(false y(10))
		branch(182685)
lbl(182682)	getLiteral(false y(10))
lbl(182685)	testBool(y(10) 182763 182806)
lbl(182689)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(2)])
		testBI('IsObject' [x(2)]#[x(3)] 182763)
lbl(182701)	callBI('.' [x(0) x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) imAVariableOccurrence x(4) cache)
		testBI('HasFeature' [x(2) x(4)]#[x(5)] 182763)
lbl(182717)	callBI('.' [x(0) x(1)]#[x(2)])
		createVariableMove(y(11) x(0))
		sendMsg(reg x(2) 1 cache)
		move(y(11) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 182763)
lbl(182736)	moveMoveYXYX(y(9) x(0) y(8) x(1))
		callBI('.' [x(0) x(1)]#[x(4)])
		move(y(2) x(0))
		move(x(4) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		sendMsg(makeEquation y(7) 4 cache)
		branch(183185)
lbl(182763)	getRecord(vInlineDot 7 y(3))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyValVar(y(8) y(2))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		move(y(2) x(0))
		sendMsg(reg y(6) 1 cache)
		branch(183185)
lbl(182806)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2308)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(182817)	testBI('IsInt' [x(0)]#[x(1)] 183185)
		branch(182644)
lbl(182823)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183185)
lbl(182851)	testBI('IsLiteral' [x(0)]#[x(1)] 183185)
lbl(182855)	getRecord(vInlineAt 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183185)
lbl(182877)	getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(y(2))
		unifyLiteral(nil)
		createVariableMove(y(6) x(0))
		sendMsg(getCodeGenValue x(1) 1 cache)
		move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183185)
lbl(182905)	testBI('IsLiteral' [x(0)]#[x(1)] 183185)
lbl(182909)	getRecord(vInlineAssign 4 y(3))
		unifyVoid(1)
		unifyValVar(y(6) x(1))
		unifyValue(y(4))
		move(x(1) x(0))
		sendMsg(reg y(2) 1 cache)
		branch(183185)
lbl(182931)	getList(y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		createVariableMove(y(7) x(0))
		sendMsg(getCodeGenValue x(2) 1 cache)
		move(y(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183185)
lbl(182959)	testBI('IsRecord' [x(0)]#[x(1)] 183185)
lbl(182963)	createVariable(y(8))
		createVariable(y(9))
		testBI('IsTuple' [x(0)]#[x(1)] 183020)
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(182977)	definition(x(3) 183001 pid('' 3 pos('./compiler/CodeGen.oz' 2345 10) nil 4) unit [y(7)])
		getList(x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(g(0) x(0))
		callBI('.' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
		endDefinition(182977)
lbl(183001)	moveMoveYXYX(y(8) x(0) y(9) x(5))
		putConstant(1 x(1))
		putConstant(~1 x(2))
		putConstant(nil x(4))
		genFastCall(<P: 105> 12)
		branch(183052)
lbl(183020)	callBI('Arity' [x(0)]#[x(1)])
		unify(x(1) y(8))
lbl(183026)	definition(x(1) 183044 pid('' 2 pos('./compiler/CodeGen.oz' 2348 33) nil 4) unit [y(7)])
		move(g(0) x(2))
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(183026)
lbl(183044)	moveMoveYXYX(y(8) x(0) y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(183052)	moveMoveYXYX(y(9) x(0) y(2) x(1))
		move(y(3) x(3))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(4))
		genFastCall(<Q: 1039> 10)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' y(6) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(isToplevel y(2) 1 cache)
		testBool(y(9) 183128 183163)
		getRecord(vGenCall 8 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyLiteral(true)
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183185)
lbl(183128)	getRecord(vApplMeth 7 y(11))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(y(2))
		unifyValue(y(8))
		unifyValue(y(10))
		unifyValue(y(0))
		unifyValue(y(4))
		sendMsg(reg y(6) 1 cache)
		move(y(7) x(0))
		callBI('Label' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(183185)
lbl(183163)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183174)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2296)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(183185)	move(y(3) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 183194)
		deAllocateL
		return
lbl(183194)	definition(x(1) 183214 pid('' 2 pos('./compiler/CodeGen.oz' 2367 28) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(reg x(2) 1 cache)
		endDefinition(183194)
lbl(183214)	move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		getRecord(vCallBuiltin 5 y(3))
		unifyVoid(1)
		unifyValue(y(5))
		unifyValue(y(2))
		unifyValue(y(0))
		unifyValue(y(4))
		deAllocateL
		return
		endDefinition(182056)
lbl(183241)	definition(x(8) 183300 pid('CodeGenBuiltinToken,codeGenApplication/slow' 1 pos('./compiler/CodeGen.oz' 2241 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1179> 13)
		endDefinition(183241)
lbl(183300)	putRecord('#' [1 2 fast] x(9))
		setConstant(codeGenApplication)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('CodeGenBuiltinToken' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] g(36))
		unifyValue(y(22))
		unifyValue(y(17))
		unifyValue(y(42))
		unifyValue(y(18))
		unifyValue(y(19))
		unifyValue(y(4))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(28))
		unifyValue(y(40))
		unifyValue(y(16))
		unifyValue(y(50))
		unifyValue(y(13))
		unifyValue(y(10))
		unifyValue(y(14))
		unifyValue(y(38))
		unifyValue(y(23))
		unifyValue(y(12))
		unifyValue(y(21))
		unifyValue(y(34))
		unifyValue(y(44))
		unifyValue(y(15))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(43))
		unifyValue(y(27))
		unifyValue(y(31))
		unifyValue(y(6))
		unifyValue(y(7))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(48))
		unifyValue(y(24))
		unifyValue(y(32))
		unifyValue(y(37))
		unifyValue(y(2))
		unifyValue(y(20))
		unifyValue(y(1))
		unifyValue(y(49))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(0))
		unifyValue(y(9))
		unifyValue(y(25))
		unifyValue(y(47))
		unifyValue(y(26))
		unifyValue(y(8))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(46))
		deAllocateL
		return
		endDefinition(129074)
lbl(183445)	tailCall(x(2) 0)
		endDefinition(126818)
lbl(183450)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(5))
		setConstant(isBuiltin)
		setConstant(nil)
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putRecord(info [type] x(6))
		setConstant(nil)
		putList(x(9))
		setConstant(literals)
		setConstant(nil)
		putList(x(8))
		setConstant(procs)
		setValue(x(9))
		putRecord(info [type] x(7))
		setValue(x(8))
		putList(x(11))
		setConstant(printName)
		setConstant(nil)
		putRecord(info [type] x(10))
		setValue(x(11))
		putRecord('import' ['Builtins' 'CompilerSupport' 'Core' 'RunTime' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(6))
		setValue(x(7))
		setValue(x(10))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('class' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant('class' x(35))
		putConstant('class' x(36))
		putConstant('class' x(37))
		putConstant('class' x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putRecord('export' [abstractElse application atomNode boolCase boolClause builtinToken choiceNode choicesAndDisjunctions classNode 'clause' clauseBody clauseBodyToken construction declaration 'definition' disNode elseNode equation equationPattern failNode floatNode functionDefinition 'getSelf' ifNode intNode lockNode methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode orNode patternCase patternClause patternVariableOccurrence procedureToken recordPattern skipNode statement stepPoint threadNode token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		createVariableMove(y(95) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(183786)	definition(x(2) 216390 pid('' 2 pos('./compiler/Core.oz' 42 0) nil 4) <P: 1180> [y(144)])
		putList(x(2))
		setPredicateRef(<Q: 1181>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1182>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1183>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1184>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1185>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1186>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1187>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1188>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1189>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1190>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1191>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1192>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1193>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1194>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1195>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1196>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1197>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1198>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1199>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1200>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1201>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1202>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1203>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1204>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1205>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1206>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1207>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1208>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1209>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1210>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1211>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1212>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1213>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1214>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1215>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1216>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1217>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1218>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1219>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1220>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1221>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1222>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1223>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1224>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1225>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1226>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1227>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1228>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1229>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1230>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1231>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1232>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1233>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1234>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1235>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1236>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1237>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1238>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1239>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1240>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1241>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1242>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1243>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1244>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1245>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1246>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1247>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1248>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1249>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1250>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1251>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1252>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1253>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1254>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CheckUse>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1255>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1256>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1257>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1258>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1259>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1260>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1261>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1262>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1263>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1264>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1265>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1266>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1267>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1268>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1269>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1270>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1271>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1272>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1273>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1274>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1275>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1276>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1277>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1278>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1279>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1280>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1281>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1282>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1283>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1284>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1285>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1286>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1287>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1288>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1289>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1290>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1291>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1292>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1293>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1294>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputApplication>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1295>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1296>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1297>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1298>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1299>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1300>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1301>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1302>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1303>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1304>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1305>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1306>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1307>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1308>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1309>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1310>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1311>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1312>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1313>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1314>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1315>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1316>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1317>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1318>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1319>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1320>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1321>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1322>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1323>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1324>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1325>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1326>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1327>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1328>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1329>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1330>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1331>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1332>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1333>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1334>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1335>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1336>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1337>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1338>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1339>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1340>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1341>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1342>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1343>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1344>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1345>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1346>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1347>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1348>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1349>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1350>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1351>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1352>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1353>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1354>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1355>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1356>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1357>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1358>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1359>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1360>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1361>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1362>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1363>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1364>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1365>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1366>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1367>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1368>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1369>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1370>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1371>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1372>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1373>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1374>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1375>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1376>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1377>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1378>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1379>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1380>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1381>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1382>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1383>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1384>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1385>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1386>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1387>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1388>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1389>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1390>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1391>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: IsDenied>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1392>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1393>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1394>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1395>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OutputValue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1396>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1397>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1398>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1399>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1400>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1401>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1402>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1403>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1404>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1405>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1406>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1407>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1408>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1409>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1410>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1411>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1412>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1413>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1414>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1415>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1416>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1417>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1418>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1419>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1420>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1421>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1422>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1423>)
		setValue(x(2))
lbl(185304)	definitionCopy(x(3) 216385 pid('/body' 0 pos('./compiler/Core.oz' 42 0) [once] 23) unit [x(0) g(0) x(1)])
		allocateL(67)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'StaticAnalysis' x(2) cache)
		inlineDot(x(0) 'CodeGen' x(3) cache)
lbl(185333)	definition(x(7) 185421 pid('VariableUnion' 3 pos('./compiler/Annotate.oz' 46 3) nil 3) <Q: 1181> nil)
		match(x(0) ht(185406 [onScalar(nil 185342) onRecord('|' 2 185346)]))
lbl(185342)	unify(x(2) x(1))
		return
lbl(185346)	allocateL5
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(4) 185380 185395)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185380)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1181> 7)
lbl(185395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(50)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(185406)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(54)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185333)
lbl(185421)	definition(x(7) 185487 pid('AnnotateGlobalVarsList' 4 pos('./compiler/Annotate.oz' 57 3) nil 5) <Q: 1182> nil)
		match(x(0) ht(185472 [onScalar(nil 185430) onRecord('|' 2 185434)]))
lbl(185430)	unify(x(2) x(3))
		return
lbl(185434)	allocateL4
		getVarVar(x(4) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(1) x(0))
		move(x(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
lbl(185472)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(63)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185421)
lbl(185487)	definition(x(7) 185544 pid('MarkFirstList' 3 pos('./compiler/Annotate.oz' 66 3) nil 4) <Q: 1183> nil)
		match(x(0) ht(185529 [onScalar(nil 185496) onRecord('|' 2 185497)]))
lbl(185496)	return
lbl(185497)	allocateL3
		getVarVar(x(3) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		sendMsg(markFirst x(3) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1183> 7)
lbl(185529)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(71)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185487)
lbl(185544)	createVariable(x(7))
lbl(185546)	definition(x(8) 185655 pid('MarkFirstClauses' 6 pos('./compiler/Annotate.oz' 74 3) nil 7) <Q: 1184> [x(7)])
		allocateL7
		getList(x(0))
		unifyVariable(x(6))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYYX(x(5) y(5) y(1) x(0))
		moveMoveYXYX(y(2) x(1) y(4) x(3))
		move(y(5) x(4))
		createVariableMove(y(6) x(2))
		sendMsg(markFirstClause x(6) 5 cache)
lbl(185591)	definition(x(1) 185641 pid('' 3 pos('./compiler/Annotate.oz' 78 3) nil 6) unit [y(1) y(2) y(4) y(5) g(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		move(g(2) x(3))
		move(g(3) x(4))
		createVariableMove(y(2) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(4) false '' true 3) 0)
		endDefinition(185591)
lbl(185641)	moveMoveYXYX(y(0) x(0) y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		genFastCall(<P: 30> 9)
		endDefinition(185546)
lbl(185655)	definition(x(8) 185706 pid('SetUninitVars' 1 pos('./compiler/Annotate.oz' 85 3) nil 2) <Q: 1185> nil)
lbl(185661)	definition(x(1) 185701 pid('' 1 pos('./compiler/Annotate.oz' 87 7) nil 2) unit nil)
		allocateL2
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getUse y(0) 1 cache)
		testLiteral(y(1) unused 185697)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(setUse x(1) 1 cache)
lbl(185697)	deAllocateL2
		return
		endDefinition(185661)
lbl(185701)	genFastCall(<P: 34> 5)
		endDefinition(185655)
lbl(185706)	definition(x(8) 185743 pid('GetUses' 2 pos('./compiler/Annotate.oz' 92 3) nil 4) <Q: 1186> nil)
lbl(185712)	definition(x(3) 185732 pid('' 2 pos('./compiler/Annotate.oz' 93 14) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getUse x(2) 1 cache)
		endDefinition(185712)
lbl(185732)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(185706)
lbl(185743)	definition(x(8) 185796 pid('SetUses' 2 pos('./compiler/Annotate.oz' 96 3) nil 3) <Q: 1187> nil)
		match(x(0) ht(185781 [onScalar(nil 185752) onRecord('|' 2 185756)]))
lbl(185752)	getLiteral(nil x(1))
		return
lbl(185756)	allocateL2
		getVarVar(x(2) y(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(y(1))
		sendMsg(setUse x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
lbl(185781)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(102)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(185743)
lbl(185796)	putRecord(use [linear multiple unused wildcard] x(4))
		setConstant(linear)
		setConstant(multiple)
		setConstant(linear)
		setConstant(linear)
		putRecord(use [linear multiple unused wildcard] x(5))
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		setConstant(multiple)
		putRecord(use [linear multiple unused wildcard] x(6))
		setConstant(linear)
		setConstant(multiple)
		setConstant(unused)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(9))
		setConstant(linear)
		setConstant(multiple)
		setConstant(wildcard)
		setConstant(wildcard)
		putRecord(use [linear multiple unused wildcard] x(8))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(9))
lbl(185856)	definition(x(4) 185894 pid('UsesMax' 3 pos('./compiler/Annotate.oz' 115 6) nil 5) <Q: 1188> [g(1) x(8)])
lbl(185862)	definition(x(4) 185883 pid('' 3 pos('./compiler/Annotate.oz' 117 24) nil 5) unit [g(1)])
		move(g(0) x(3))
		callBI('.' [x(3) x(0)]#[x(4)])
		callBI('.' [x(4) x(1)]#[x(0)])
		unify(x(0) x(2))
		return
		endDefinition(185862)
lbl(185883)	move(x(2) x(3))
		move(x(4) x(2))
		genFastCall(<P: 73> 9)
		endDefinition(185856)
lbl(185894)	unify(x(4) x(7))
lbl(185897)	definition(x(7) 185934 pid('CheckUses' 3 pos('./compiler/Annotate.oz' 121 3) nil 4) <Q: 1189> nil)
lbl(185903)	definition(x(3) 185926 pid('' 1 pos('./compiler/Annotate.oz' 122 17) nil 3) unit [x(1) x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(185903)
lbl(185926)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(185897)
lbl(185934)	definition(x(7) 185946 pid('AnnotateDefaults,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 126 6) nil 3) <Q: 1190> nil)
		unify(x(1) x(2))
		return
		endDefinition(185934)
lbl(185946)	definition(x(8) 185987 pid('AnnotateDefaults,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 126 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1190> 7)
		endDefinition(185946)
lbl(185987)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(185997)	definition(x(7) 186006 pid('AnnotateDefaults,markFirst/fast' 2 pos('./compiler/Annotate.oz' 129 6) nil 2) <Q: 1191> nil)
		return
		endDefinition(185997)
lbl(186006)	definition(x(8) 186041 pid('AnnotateDefaults,markFirst/slow' 1 pos('./compiler/Annotate.oz' 129 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1191> 5)
		endDefinition(186006)
lbl(186041)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(9))
		setValue(x(10))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(7) x(1))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefaults' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStatement' x(5))
		createVariableMove(y(4) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186115)	definition(x(7) 186134 pid('AnnotateTypeOf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 138 6) nil 4) <Q: 1192> nil)
		inlineAt(res x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186115)
lbl(186134)	definition(x(8) 186175 pid('AnnotateTypeOf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 138 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1192> 7)
		endDefinition(186134)
lbl(186175)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186185)	definition(x(7) 186204 pid('AnnotateTypeOf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 141 6) nil 3) <Q: 1193> nil)
		inlineAt(res x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186185)
lbl(186204)	definition(x(8) 186239 pid('AnnotateTypeOf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1193> 5)
		endDefinition(186204)
lbl(186239)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTypeOf' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186278)	definition(x(7) 186306 pid('AnnotateStepPoint,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 147 6) nil 5) <Q: 1194> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(186278)
lbl(186306)	definition(x(8) 186347 pid('AnnotateStepPoint,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 147 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1194> 7)
		endDefinition(186306)
lbl(186347)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186357)	definition(x(7) 186382 pid('AnnotateStepPoint,markFirst/fast' 2 pos('./compiler/Annotate.oz' 150 6) nil 4) <Q: 1195> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(186357)
lbl(186382)	definition(x(8) 186417 pid('AnnotateStepPoint,markFirst/slow' 1 pos('./compiler/Annotate.oz' 150 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1195> 5)
		endDefinition(186382)
lbl(186417)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateStepPoint' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186456)	definition(x(7) 186509 pid('AnnotateDeclaration,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 156 6) nil 5) <Q: 1196> nil)
		allocateL4
		inlineAt(statements x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(x(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1182> 9)
		endDefinition(186456)
lbl(186509)	definition(x(8) 186550 pid('AnnotateDeclaration,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 156 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1196> 7)
		endDefinition(186509)
lbl(186550)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186560)	definition(x(7) 186636 pid('AnnotateDeclaration,markFirst/fast' 2 pos('./compiler/Annotate.oz' 159 6) nil 4) <Q: 1197> nil)
		allocateL2
		inlineAt(localVars x(2) cache)
lbl(186572)	definition(x(3) 186592 pid('' 1 pos('./compiler/Annotate.oz' 160 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(186572)
lbl(186592)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(1) x(2))
		putConstant('local variable' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
		endDefinition(186560)
lbl(186636)	definition(x(8) 186671 pid('AnnotateDeclaration,markFirst/slow' 1 pos('./compiler/Annotate.oz' 159 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1197> 5)
		endDefinition(186636)
lbl(186671)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDeclaration' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateSkipNode' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186737)	definition(x(7) 186785 pid('AnnotateEquation,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 170 6) nil 4) <Q: 1198> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186737)
lbl(186785)	definition(x(8) 186826 pid('AnnotateEquation,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 170 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1198> 7)
		endDefinition(186785)
lbl(186826)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(186836)	definition(x(7) 186878 pid('AnnotateEquation,markFirst/fast' 2 pos('./compiler/Annotate.oz' 174 6) nil 3) <Q: 1199> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(186836)
lbl(186878)	definition(x(8) 186913 pid('AnnotateEquation,markFirst/slow' 1 pos('./compiler/Annotate.oz' 174 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1199> 5)
		endDefinition(186878)
lbl(186913)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquation' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(186952)	definition(x(7) 187062 pid('AnnotateConstruction,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 181 6) nil 4) <Q: 1200> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(186983)	definition(x(1) 187051 pid('' 3 pos('./compiler/Annotate.oz' 184 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 187034)
lbl(186994)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(187034)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(186983)
lbl(187051)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(186952)
lbl(187062)	definition(x(8) 187103 pid('AnnotateConstruction,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 181 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1200> 7)
		endDefinition(187062)
lbl(187103)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187113)	definition(x(7) 187207 pid('AnnotateConstruction,markFirst/fast' 2 pos('./compiler/Annotate.oz' 193 6) nil 3) <Q: 1201> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(187141)	definition(x(1) 187201 pid('' 1 pos('./compiler/Annotate.oz' 196 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 187184)
lbl(187152)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(187184)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(187141)
lbl(187201)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(187113)
lbl(187207)	definition(x(8) 187242 pid('AnnotateConstruction,markFirst/slow' 1 pos('./compiler/Annotate.oz' 193 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1201> 5)
		endDefinition(187207)
lbl(187242)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateConstruction' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(187287)	definition(x(7) 187422 pid('AnnotateDefinition,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 209 6) nil 4) <Q: 1202> nil)
		allocateL5
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		inlineAt(formalArgs x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(187352)	definition(x(1) 187408 pid('' 3 pos('./compiler/Annotate.oz' 214 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 187387 187395)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(187387)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(187395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(215)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187352)
lbl(187408)	moveMoveYXYX(y(3) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(187287)
lbl(187422)	definition(x(8) 187463 pid('AnnotateDefinition,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1202> 7)
		endDefinition(187422)
lbl(187463)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187473)	definition(x(7) 187587 pid('AnnotateDefinition,markFirst/fast' 2 pos('./compiler/Annotate.oz' 220 6) nil 3) <Q: 1203> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(designator x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
lbl(187517)	definition(x(1) 187537 pid('' 1 pos('./compiler/Annotate.oz' 223 22) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(187517)
lbl(187537)	genFastCall(<P: 34> 4)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 187572 187574)
		inlineAt(formalArgs x(0) cache)
		move(y(1) x(2))
		putConstant('formal parameter' x(1))
		deAllocateL2
		genFastCall(<Q: 1189> 7)
lbl(187572)	deAllocateL2
		return
lbl(187574)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(225)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(187473)
lbl(187587)	definition(x(8) 187622 pid('AnnotateDefinition,markFirst/slow' 1 pos('./compiler/Annotate.oz' 220 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1203> 5)
		endDefinition(187587)
lbl(187622)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDefinition' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFunctionDefinition' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClauseBody' x(5))
		createVariableMove(y(13) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(187706)	definition(x(7) 187751 pid('AnnotateApplication,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 236 6) nil 4) <Q: 1204> nil)
		allocateL3
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(187706)
lbl(187751)	definition(x(8) 187792 pid('AnnotateApplication,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 236 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1204> 7)
		endDefinition(187751)
lbl(187792)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(187802)	definition(x(7) 187841 pid('AnnotateApplication,markFirst/fast' 2 pos('./compiler/Annotate.oz' 240 6) nil 3) <Q: 1205> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(actualArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(187802)
lbl(187841)	definition(x(8) 187876 pid('AnnotateApplication,markFirst/slow' 1 pos('./compiler/Annotate.oz' 240 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1205> 5)
		endDefinition(187841)
lbl(187876)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateApplication' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(187921)	definition(x(7) 188036 pid('AnnotateBoolCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 248 6) nil 4) <Q: 1206> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(consequent x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		inlineAt(alternative x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(2) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(187921)
lbl(188036)	definition(x(8) 188077 pid('AnnotateBoolCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 248 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1206> 7)
		endDefinition(188036)
lbl(188077)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188087)	definition(x(7) 188221 pid('AnnotateBoolCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 256 6) nil 6) <Q: 1207> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(globalVars x(0) cache)
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(consequent x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(3) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(alternative x(5) cache)
		inlineAt(globalVars x(0) cache)
		moveMoveYXYX(y(2) x(1) y(0) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		inlineAt(globalVars x(0) cache)
		moveMoveXYYX(x(0) y(0) y(3) x(0))
		move(y(4) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(188087)
lbl(188221)	definition(x(8) 188256 pid('AnnotateBoolCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 256 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1207> 5)
		endDefinition(188221)
lbl(188256)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolCase' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188298)	definition(x(7) 188423 pid('AnnotateBoolClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 270 6) nil 5) <Q: 1208> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(188353)	definition(x(1) 188409 pid('' 3 pos('./compiler/Annotate.oz' 274 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 188388 188396)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(188388)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(188396)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(275)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(188353)
lbl(188409)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(188298)
lbl(188423)	definition(x(8) 188464 pid('AnnotateBoolClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 270 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1208> 7)
		endDefinition(188423)
lbl(188464)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188474)	definition(x(7) 188491 pid('AnnotateBoolClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 280 6) nil 2) <Q: 1209> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(188474)
lbl(188491)	definition(x(8) 188517 pid('AnnotateBoolClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 280 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1209> 3)
		endDefinition(188491)
lbl(188517)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188527)	definition(x(7) 188578 pid('AnnotateBoolClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 283 6) nil 6) <Q: 1210> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(188527)
lbl(188578)	definition(x(8) 188631 pid('AnnotateBoolClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 283 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1210> 11)
		endDefinition(188578)
lbl(188631)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateBoolClause' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(188675)	definition(x(7) 188842 pid('AnnotatePatternCase,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 292 6) nil 4) <Q: 1211> nil)
		allocateL4
		inlineAt(arbiter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188706)	definition(x(1) 188729 pid('' 3 pos('./compiler/Annotate.oz' 295 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(188706)
lbl(188729)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(188762)	definition(x(1) 188797 pid('' 3 pos('./compiler/Annotate.oz' 300 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(188762)
lbl(188797)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(188675)
lbl(188842)	definition(x(8) 188883 pid('AnnotatePatternCase,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 292 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1211> 7)
		endDefinition(188842)
lbl(188883)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(188893)	definition(x(7) 189010 pid('AnnotatePatternCase,markFirst/fast' 2 pos('./compiler/Annotate.oz' 304 6) nil 6) <Q: 1212> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(arbiter x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(188893)
lbl(189010)	definition(x(8) 189045 pid('AnnotatePatternCase,markFirst/slow' 1 pos('./compiler/Annotate.oz' 304 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1212> 5)
		endDefinition(189010)
lbl(189045)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternCase' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars patternGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(189089)	definition(x(7) 189257 pid('AnnotatePatternClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 319 6) nil 5) <Q: 1213> nil)
		allocateL6
		inlineAt(pattern x(3) cache)
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(patternGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(5) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(189187)	definition(x(1) 189243 pid('' 3 pos('./compiler/Annotate.oz' 325 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 189222 189230)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(189222)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(189230)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(326)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(189187)
lbl(189243)	moveMoveYXYX(y(4) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(189089)
lbl(189257)	definition(x(8) 189298 pid('AnnotatePatternClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 319 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1213> 7)
		endDefinition(189257)
lbl(189298)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189308)	definition(x(7) 189325 pid('AnnotatePatternClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 331 6) nil 2) <Q: 1214> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189308)
lbl(189325)	definition(x(8) 189351 pid('AnnotatePatternClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 331 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1214> 3)
		endDefinition(189325)
lbl(189351)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189361)	definition(x(7) 189378 pid('AnnotatePatternClause,getPatternGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 334 6) nil 2) <Q: 1215> nil)
		inlineAt(patternGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(189361)
lbl(189378)	definition(x(8) 189404 pid('AnnotatePatternClause,getPatternGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 334 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1215> 3)
		endDefinition(189378)
lbl(189404)	putRecord('#' [1 2 fast] x(11))
		setConstant(getPatternGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189414)	definition(x(7) 189530 pid('AnnotatePatternClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 337 6) nil 7) <Q: 1216> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(189426)	definition(x(6) 189446 pid('' 1 pos('./compiler/Annotate.oz' 338 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(wildcard x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(189426)
lbl(189446)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(pattern x(2) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(189414)
lbl(189530)	definition(x(8) 189583 pid('AnnotatePatternClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 337 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1216> 11)
		endDefinition(189530)
lbl(189583)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternClause' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(189623)	definition(x(7) 189733 pid('AnnotateRecordPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 348 6) nil 4) <Q: 1217> nil)
		allocateL3
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(args x(0) cache)
lbl(189654)	definition(x(1) 189722 pid('' 3 pos('./compiler/Annotate.oz' 351 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 189705)
lbl(189665)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(189705)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(189654)
lbl(189722)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<P: 30> 9)
		endDefinition(189623)
lbl(189733)	definition(x(8) 189774 pid('AnnotateRecordPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 348 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1217> 7)
		endDefinition(189733)
lbl(189774)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(189784)	definition(x(7) 189878 pid('AnnotateRecordPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 360 6) nil 3) <Q: 1218> nil)
		allocateL2
		inlineAt(label x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(args x(0) cache)
lbl(189812)	definition(x(1) 189872 pid('' 1 pos('./compiler/Annotate.oz' 363 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 189855)
lbl(189823)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(189855)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(189812)
lbl(189872)	deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(189784)
lbl(189878)	definition(x(8) 189913 pid('AnnotateRecordPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 360 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1218> 5)
		endDefinition(189878)
lbl(189913)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRecordPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(189952)	definition(x(7) 190000 pid('AnnotateEquationPattern,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 375 6) nil 4) <Q: 1219> nil)
		allocateL3
		inlineAt(left x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(189952)
lbl(190000)	definition(x(8) 190041 pid('AnnotateEquationPattern,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 375 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1219> 7)
		endDefinition(190000)
lbl(190041)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190051)	definition(x(7) 190093 pid('AnnotateEquationPattern,markFirst/fast' 2 pos('./compiler/Annotate.oz' 379 6) nil 3) <Q: 1220> nil)
		allocateL2
		inlineAt(left x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(right x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(190051)
lbl(190093)	definition(x(8) 190128 pid('AnnotateEquationPattern,markFirst/slow' 1 pos('./compiler/Annotate.oz' 379 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1220> 5)
		endDefinition(190093)
lbl(190128)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateEquationPattern' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAbstractElse' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190197)	definition(x(7) 190322 pid('AnnotateElseNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 389 6) nil 5) <Q: 1221> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(190252)	definition(x(1) 190308 pid('' 3 pos('./compiler/Annotate.oz' 393 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 190287 190295)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(190287)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(190295)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(394)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(190252)
lbl(190308)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190197)
lbl(190322)	definition(x(8) 190363 pid('AnnotateElseNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 389 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1221> 7)
		endDefinition(190322)
lbl(190363)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190373)	definition(x(7) 190390 pid('AnnotateElseNode,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 399 6) nil 2) <Q: 1222> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(190373)
lbl(190390)	definition(x(8) 190416 pid('AnnotateElseNode,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 399 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1222> 3)
		endDefinition(190390)
lbl(190416)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190426)	definition(x(7) 190477 pid('AnnotateElseNode,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 402 6) nil 6) <Q: 1223> nil)
		allocateL3
		inlineAt(statements x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(5) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1183> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1187> 5)
		endDefinition(190426)
lbl(190477)	definition(x(8) 190530 pid('AnnotateElseNode,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 402 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1223> 11)
		endDefinition(190477)
lbl(190530)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateElseNode' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(190568)	definition(x(7) 190580 pid('AnnotateNoElse,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 409 6) nil 3) <Q: 1224> nil)
		unify(x(1) x(2))
		return
		endDefinition(190568)
lbl(190580)	definition(x(8) 190621 pid('AnnotateNoElse,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 409 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1224> 7)
		endDefinition(190580)
lbl(190621)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190631)	definition(x(7) 190643 pid('AnnotateNoElse,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 412 6) nil 1) <Q: 1225> nil)
		getLiteral(nil x(0))
		return
		endDefinition(190631)
lbl(190643)	definition(x(8) 190669 pid('AnnotateNoElse,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 412 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1225> 3)
		endDefinition(190643)
lbl(190669)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190679)	definition(x(7) 190708 pid('AnnotateNoElse,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 415 6) nil 5) <Q: 1226> nil)
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1187> 5)
		endDefinition(190679)
lbl(190708)	definition(x(8) 190761 pid('AnnotateNoElse,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 415 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1226> 11)
		endDefinition(190708)
lbl(190761)	putRecord('#' [1 2 fast] x(11))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateNoElse' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(190808)	definition(x(7) 190933 pid('AnnotateThreadNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 423 6) nil 5) <Q: 1227> nil)
		allocateL5
		inlineAt(statements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(190863)	definition(x(1) 190919 pid('' 3 pos('./compiler/Annotate.oz' 427 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 190898 190906)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(190898)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(190906)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(428)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(190863)
lbl(190919)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(190808)
lbl(190933)	definition(x(8) 190974 pid('AnnotateThreadNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 423 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1227> 7)
		endDefinition(190933)
lbl(190974)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(190984)	definition(x(7) 191023 pid('AnnotateThreadNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 433 6) nil 3) <Q: 1228> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(190984)
lbl(191023)	definition(x(8) 191058 pid('AnnotateThreadNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 433 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1228> 5)
		endDefinition(191023)
lbl(191058)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateThreadNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(191100)	definition(x(7) 191250 pid('AnnotateTryNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 441 6) nil 5) <Q: 1229> nil)
		allocateL5
		inlineAt(tryStatements x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(catchStatements x(0) cache)
		inlineAt(exception x(4) cache)
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		move(y(4) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(191180)	definition(x(1) 191236 pid('' 3 pos('./compiler/Annotate.oz' 446 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 191215 191223)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(191215)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(191223)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(447)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(191180)
lbl(191236)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(191100)
lbl(191250)	definition(x(8) 191291 pid('AnnotateTryNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 441 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1229> 7)
		endDefinition(191250)
lbl(191291)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191301)	definition(x(7) 191384 pid('AnnotateTryNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 452 6) nil 3) <Q: 1230> nil)
		allocateL2
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1185> 2)
		inlineAt(tryStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(catchStatements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(exception x(2) cache)
		move(y(1) x(1))
		putConstant('exception variable' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
		endDefinition(191301)
lbl(191384)	definition(x(8) 191419 pid('AnnotateTryNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 452 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1230> 5)
		endDefinition(191384)
lbl(191419)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateTryNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191455)	definition(x(7) 191500 pid('AnnotateLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 462 6) nil 4) <Q: 1231> nil)
		allocateL3
		inlineAt(lockVar x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1182> 9)
		endDefinition(191455)
lbl(191500)	definition(x(8) 191541 pid('AnnotateLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 462 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1231> 7)
		endDefinition(191500)
lbl(191541)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(191551)	definition(x(7) 191590 pid('AnnotateLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 466 6) nil 3) <Q: 1232> nil)
		allocateL2
		inlineAt(lockVar x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(191551)
lbl(191590)	definition(x(8) 191625 pid('AnnotateLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 466 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1232> 5)
		endDefinition(191590)
lbl(191625)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateLockNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(191664)	definition(x(7) 191967 pid('AnnotateClassNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 473 6) nil 4) <Q: 1233> nil)
		allocateL4
		inlineAt(designator x(3) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(parents x(0) cache)
lbl(191695)	definition(x(1) 191718 pid('' 3 pos('./compiler/Annotate.oz' 477 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191695)
lbl(191718)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(properties x(0) cache)
lbl(191732)	definition(x(1) 191755 pid('' 3 pos('./compiler/Annotate.oz' 481 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191732)
lbl(191755)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(attributes x(0) cache)
lbl(191769)	definition(x(1) 191837 pid('' 3 pos('./compiler/Annotate.oz' 485 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191820)
lbl(191780)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191820)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191769)
lbl(191837)	move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(features x(0) cache)
lbl(191851)	definition(x(1) 191919 pid('' 3 pos('./compiler/Annotate.oz' 494 3) nil 4) unit [y(0)])
		testRecord(x(1) '#' 2 191902)
lbl(191862)	allocateL3
		getVarVar(x(3) y(0))
		move(x(2) y(1))
		move(x(0) x(1))
		move(g(0) x(0))
		createVariableMove(y(2) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(2) x(1) y(1) x(2))
		move(y(0) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
lbl(191902)	move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191851)
lbl(191919)	move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(methods x(0) cache)
lbl(191933)	definition(x(1) 191956 pid('' 3 pos('./compiler/Annotate.oz' 503 3) nil 4) unit [y(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(191933)
lbl(191956)	moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<P: 30> 9)
		endDefinition(191664)
lbl(191967)	definition(x(8) 192008 pid('AnnotateClassNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 473 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1233> 7)
		endDefinition(191967)
lbl(192008)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192018)	definition(x(7) 192219 pid('AnnotateClassNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 507 6) nil 3) <Q: 1234> nil)
		allocateL2
		inlineAt(designator x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(parents x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(properties x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(attributes x(0) cache)
lbl(192072)	definition(x(1) 192132 pid('' 1 pos('./compiler/Annotate.oz' 512 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192115)
lbl(192083)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192115)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192072)
lbl(192132)	genFastCall(<P: 34> 4)
		inlineAt(features x(0) cache)
lbl(192140)	definition(x(1) 192200 pid('' 1 pos('./compiler/Annotate.oz' 521 3) nil 3) unit [y(0) y(1)])
		testRecord(x(0) '#' 2 192183)
lbl(192151)	allocateL1
		getVarVar(x(2) y(0))
		move(g(0) x(0))
		move(g(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		move(y(0) x(2))
		deAllocateL1
		tailSendMsg(markFirst x(2) 2 cache)
lbl(192183)	move(x(0) x(2))
		move(g(0) x(0))
		move(g(1) x(1))
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(192140)
lbl(192200)	genFastCall(<P: 34> 4)
		inlineAt(methods x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192018)
lbl(192219)	definition(x(8) 192254 pid('AnnotateClassNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 507 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1234> 5)
		endDefinition(192219)
lbl(192254)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClassNode' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(192299)	definition(x(7) 192520 pid('AnnotateMethod,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 535 6) nil 4) <Q: 1235> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192336)	definition(x(1) 192377 pid('' 3 pos('./compiler/Annotate.oz' 538 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192336)
lbl(192377)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(formalArgs x(0) cache)
lbl(192391)	definition(x(1) 192411 pid('' 2 pos('./compiler/Annotate.oz' 541 27) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(192391)
lbl(192411)	createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192453)	definition(x(1) 192509 pid('' 3 pos('./compiler/Annotate.oz' 546 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192488 192496)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192488)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192496)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(547)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192453)
lbl(192509)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192299)
lbl(192520)	definition(x(8) 192561 pid('AnnotateMethod,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 535 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1235> 7)
		endDefinition(192520)
lbl(192561)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(192571)	definition(x(7) 192684 pid('AnnotateMethod,markFirst/fast' 2 pos('./compiler/Annotate.oz' 552 6) nil 4) <Q: 1236> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(192583)	definition(x(3) 192617 pid('' 1 pos('./compiler/Annotate.oz' 554 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(192583)
lbl(192617)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1183> 7)
		endDefinition(192571)
lbl(192684)	definition(x(8) 192719 pid('AnnotateMethod,markFirst/slow' 1 pos('./compiler/Annotate.oz' 552 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1236> 5)
		endDefinition(192684)
lbl(192719)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethod' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(192755)	definition(x(7) 192987 pid('AnnotateMethodWithDesignator,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 562 6) nil 4) <Q: 1237> nil)
		allocateL6
		inlineAt(label x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
lbl(192792)	definition(x(1) 192833 pid('' 3 pos('./compiler/Annotate.oz' 565 3) nil 4) unit [y(0)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getFeature x(1) 1 cache)
		move(g(0) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		deAllocateL3
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(192792)
lbl(192833)	move(y(4) x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		putList(y(4))
		setVariable(x(3))
		setVariable(x(2))
		inlineAt(messageDesignator x(0) cache)
		unify(x(0) x(3))
		inlineAt(formalArgs x(0) cache)
lbl(192861)	definition(x(1) 192881 pid('' 2 pos('./compiler/Annotate.oz' 569 20) nil 3) unit nil)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg('getVariable' x(2) 1 cache)
		endDefinition(192861)
lbl(192881)	genFastCall(<P: 29> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(4) x(1) y(5) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(192920)	definition(x(1) 192976 pid('' 3 pos('./compiler/Annotate.oz' 574 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 192955 192963)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(192955)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(192963)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(575)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(192920)
lbl(192976)	moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL6
		genFastCall(<P: 30> 9)
		endDefinition(192755)
lbl(192987)	definition(x(8) 193028 pid('AnnotateMethodWithDesignator,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 562 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1237> 7)
		endDefinition(192987)
lbl(193028)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193038)	definition(x(7) 193199 pid('AnnotateMethodWithDesignator,markFirst/fast' 2 pos('./compiler/Annotate.oz' 580 6) nil 4) <Q: 1238> nil)
		allocateL2
		inlineAt(formalArgs x(2) cache)
lbl(193050)	definition(x(3) 193084 pid('' 1 pos('./compiler/Annotate.oz' 582 3) nil 2) unit nil)
		allocateL1
		move(x(0) x(1))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		putConstant(wildcard x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(193050)
lbl(193084)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		move(x(3) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(messageDesignator x(1) cache)
		putConstant(wildcard x(0))
		sendMsg(setUse x(1) 1 cache)
		inlineAt(globalVars x(0) cache)
		genFastCall(<Q: 1185> 2)
		inlineAt(label x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		sendMsg(markFirst x(2) 2 cache)
		inlineAt(formalArgs x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genFastCall(<Q: 1183> 6)
		testBool(y(0) 193184 193186)
		inlineAt(messageDesignator x(2) cache)
		move(y(1) x(1))
		putConstant('message designator' x(0))
		deAllocateL2
		tailSendMsg(checkUse x(2) 2 cache)
lbl(193184)	deAllocateL2
		return
lbl(193186)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(193038)
lbl(193199)	definition(x(8) 193234 pid('AnnotateMethodWithDesignator,markFirst/slow' 1 pos('./compiler/Annotate.oz' 580 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1238> 5)
		endDefinition(193199)
lbl(193234)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethodWithDesignator' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193273)	definition(x(7) 193292 pid('AnnotateMethFormal,markFirst/fast' 2 pos('./compiler/Annotate.oz' 595 6) nil 3) <Q: 1239> nil)
		inlineAt(feature x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193273)
lbl(193292)	definition(x(8) 193327 pid('AnnotateMethFormal,markFirst/slow' 1 pos('./compiler/Annotate.oz' 595 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1239> 5)
		endDefinition(193292)
lbl(193327)	putRecord('#' [1 2 fast] x(9))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(9))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormal' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalOptional' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateMethFormalWithDefault' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193412)	definition(x(7) 193440 pid('AnnotateObjectLockNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 605 6) nil 5) <Q: 1240> nil)
		inlineAt(statements x(4) cache)
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1182> 9)
		endDefinition(193412)
lbl(193440)	definition(x(8) 193481 pid('AnnotateObjectLockNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 605 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1240> 7)
		endDefinition(193440)
lbl(193481)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193491)	definition(x(7) 193516 pid('AnnotateObjectLockNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 608 6) nil 4) <Q: 1241> nil)
		inlineAt(statements x(3) cache)
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1183> 7)
		endDefinition(193491)
lbl(193516)	definition(x(8) 193551 pid('AnnotateObjectLockNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 608 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1241> 5)
		endDefinition(193516)
lbl(193551)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateObjectLockNode' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
lbl(193590)	definition(x(7) 193609 pid('AnnotateGetSelf,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 614 6) nil 4) <Q: 1242> nil)
		inlineAt(destination x(3) cache)
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193590)
lbl(193609)	definition(x(8) 193650 pid('AnnotateGetSelf,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 614 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1242> 7)
		endDefinition(193609)
lbl(193650)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193660)	definition(x(7) 193679 pid('AnnotateGetSelf,markFirst/fast' 2 pos('./compiler/Annotate.oz' 617 6) nil 3) <Q: 1243> nil)
		inlineAt(destination x(2) cache)
		tailSendMsg(markFirst x(2) 2 cache)
		endDefinition(193660)
lbl(193679)	definition(x(8) 193714 pid('AnnotateGetSelf,markFirst/slow' 1 pos('./compiler/Annotate.oz' 617 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1243> 5)
		endDefinition(193679)
lbl(193714)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateGetSelf' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFailNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(193786)	definition(x(7) 193945 pid('AnnotateIfNode,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 627 6) nil 6) <Q: 1244> nil)
		allocateL4
		inlineAt(clauses x(4) cache)
lbl(193798)	definition(x(5) 193821 pid('' 3 pos('./compiler/Annotate.oz' 629 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(193798)
lbl(193821)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(4) x(0))
		move(x(1) x(2))
		move(x(5) x(1))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(alternative x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		sendMsg(annotateGlobalVars x(3) 3 cache)
		inlineAt(clauses x(0) cache)
lbl(193865)	definition(x(1) 193900 pid('' 3 pos('./compiler/Annotate.oz' 634 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(193865)
lbl(193900)	inlineAt(alternative x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(2) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		move(y(3) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL4
		return
		endDefinition(193786)
lbl(193945)	definition(x(8) 193986 pid('AnnotateIfNode,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 627 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1244> 7)
		endDefinition(193945)
lbl(193986)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(193996)	definition(x(7) 194097 pid('AnnotateIfNode,markFirst/fast' 2 pos('./compiler/Annotate.oz' 638 6) nil 6) <Q: 1245> nil)
		allocateL6
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		inlineAt(alternative x(5) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		createVariableMove(y(5) x(2))
		sendMsg(markFirstClause x(5) 5 cache)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		genFastCall(<Q: 1188> 6)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1187> 5)
		endDefinition(193996)
lbl(194097)	definition(x(8) 194132 pid('AnnotateIfNode,markFirst/slow' 1 pos('./compiler/Annotate.oz' 638 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1245> 5)
		endDefinition(194097)
lbl(194132)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIfNode' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars] x(2))
		setConstant(unit)
lbl(194174)	definition(x(7) 194285 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 652 6) nil 6) <Q: 1246> nil)
		allocateL1
		inlineAt(clauses x(4) cache)
lbl(194186)	definition(x(5) 194209 pid('' 3 pos('./compiler/Annotate.oz' 654 3) nil 4) unit [x(0)])
		move(x(1) x(3))
		move(x(0) x(1))
		move(g(0) x(0))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(194186)
lbl(194209)	move(x(4) x(0))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(5) x(1))
		genFastCall(<P: 30> 8)
		inlineAt(clauses x(0) cache)
lbl(194229)	definition(x(1) 194264 pid('' 3 pos('./compiler/Annotate.oz' 658 3) nil 3) unit nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getGlobalVars x(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1181> 7)
		endDefinition(194229)
lbl(194264)	putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		inlineAssign(globalVars x(0) cache)
		deAllocateL1
		return
		endDefinition(194174)
lbl(194285)	definition(x(8) 194326 pid('AnnotateChoicesAndDisjunctions,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 652 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1246> 7)
		endDefinition(194285)
lbl(194326)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194336)	definition(x(7) 194402 pid('AnnotateChoicesAndDisjunctions,markFirst/fast' 2 pos('./compiler/Annotate.oz' 662 6) nil 6) <Q: 1247> nil)
		allocateL5
		inlineAt(globalVars x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(2) x(0))
		genFastCall(<Q: 1185> 2)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1186> 4)
		inlineAt(clauses x(0) cache)
		moveMoveYXYX(y(2) x(1) y(3) x(2))
		moveMoveYXYX(y(0) x(4) y(1) x(5))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1184> 12)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(194336)
lbl(194402)	definition(x(8) 194437 pid('AnnotateChoicesAndDisjunctions,markFirst/slow' 1 pos('./compiler/Annotate.oz' 662 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1247> 5)
		endDefinition(194402)
lbl(194437)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoicesAndDisjunctions' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateOrNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateDisNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateChoiceNode' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [globalVars guardGlobalVars] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(194553)	definition(x(7) 194724 pid('AnnotateClause,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 680 6) nil 6) <Q: 1248> nil)
		allocateL5
		inlineAt(guard x(4) cache)
		inlineAt(localVars x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		move(y(3) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(guardGlobalVars x(0) cache)
		inlineAt(statements x(0) cache)
		inlineAt(localVars x(1) cache)
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1182> 8)
		inlineAt(guardGlobalVars x(1) cache)
		move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1181> 6)
		move(y(4) x(0))
		inlineAssign(globalVars x(0) cache)
lbl(194654)	definition(x(1) 194710 pid('' 3 pos('./compiler/Annotate.oz' 686 3) nil 3) unit [y(0)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		move(g(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 194689 194697)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(194689)	getList(y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(194697)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(687)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(194654)
lbl(194710)	moveMoveYXYX(y(3) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<P: 30> 9)
		endDefinition(194553)
lbl(194724)	definition(x(8) 194765 pid('AnnotateClause,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 680 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1248> 7)
		endDefinition(194724)
lbl(194765)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194775)	definition(x(7) 194792 pid('AnnotateClause,getGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 692 6) nil 2) <Q: 1249> nil)
		inlineAt(globalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194775)
lbl(194792)	definition(x(8) 194818 pid('AnnotateClause,getGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 692 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1249> 3)
		endDefinition(194792)
lbl(194818)	putRecord('#' [1 2 fast] x(10))
		setConstant(getGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194828)	definition(x(7) 194845 pid('AnnotateClause,getGuardGlobalVars/fast' 1 pos('./compiler/Annotate.oz' 695 6) nil 2) <Q: 1250> nil)
		inlineAt(guardGlobalVars x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(194828)
lbl(194845)	definition(x(8) 194871 pid('AnnotateClause,getGuardGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 695 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1250> 3)
		endDefinition(194845)
lbl(194871)	putRecord('#' [1 2 fast] x(11))
		setConstant(getGuardGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(194881)	definition(x(7) 194994 pid('AnnotateClause,markFirstClause/fast' 5 pos('./compiler/Annotate.oz' 698 6) nil 7) <Q: 1251> nil)
		allocateL5
		inlineAt(localVars x(5) cache)
lbl(194893)	definition(x(6) 194913 pid('' 1 pos('./compiler/Annotate.oz' 699 21) nil 2) unit nil)
		move(x(0) x(1))
		putConstant(unused x(0))
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(194893)
lbl(194913)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		inlineAt(guard x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(statements x(0) cache)
		moveMoveYXYX(y(3) x(1) y(4) x(2))
		genFastCall(<Q: 1183> 6)
		inlineAt(localVars x(0) cache)
		move(y(4) x(2))
		putConstant('local clause variable' x(1))
		genFastCall(<Q: 1189> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1186> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL5
		genFastCall(<Q: 1187> 5)
		endDefinition(194881)
lbl(194994)	definition(x(8) 195047 pid('AnnotateClause,markFirstClause/slow' 1 pos('./compiler/Annotate.oz' 698 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1251> 11)
		endDefinition(194994)
lbl(195047)	putRecord('#' [1 2 fast] x(12))
		setConstant(markFirstClause)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateClause' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateValueNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateAtomNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateIntNode' x(5))
		createVariableMove(y(44) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(3))
		setConstant(nil)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateFloatNode' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord('attr' [use] x(2))
		setConstant(unit)
lbl(195201)	definition(x(7) 195215 pid('AnnotateVariable,setUse/fast' 1 pos('./compiler/Annotate.oz' 722 6) nil 1) <Q: 1252> nil)
		inlineAssign(use x(0) cache)
		return
		endDefinition(195201)
lbl(195215)	definition(x(8) 195241 pid('AnnotateVariable,setUse/slow' 1 pos('./compiler/Annotate.oz' 722 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1252> 3)
		endDefinition(195215)
lbl(195241)	putRecord('#' [1 2 fast] x(9))
		setConstant(setUse)
		setValue(x(8))
		setValue(x(7))
lbl(195251)	definition(x(7) 195268 pid('AnnotateVariable,getUse/fast' 1 pos('./compiler/Annotate.oz' 725 6) nil 2) <Q: 1253> nil)
		inlineAt(use x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(195251)
lbl(195268)	definition(x(8) 195294 pid('AnnotateVariable,getUse/slow' 1 pos('./compiler/Annotate.oz' 725 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1253> 3)
		endDefinition(195268)
lbl(195294)	putRecord('#' [1 2 fast] x(10))
		setConstant(getUse)
		setValue(x(8))
		setValue(x(7))
lbl(195304)	definition(x(7) 195417 pid('AnnotateVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 728 6) nil 7) <Q: 1254> nil)
		inlineAt(origin x(2) cache)
		testLiteral(x(2) user 195414)
		inlineAt(use x(2) cache)
		match(x(2) ht(195413 [onScalar(unused 195327) onScalar(wildcard 195370)]))
lbl(195327)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195370)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195413)	return
lbl(195414)	return
		endDefinition(195304)
lbl(195417)	definition(x(8) 195452 pid('AnnotateVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1254> 5)
		endDefinition(195417)
lbl(195452)	putRecord('#' [1 2 fast] x(11))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariable' x(5))
		createVariableMove(y(45) x(6))
		marshalledFastCall(<R: 'class'> 14)
		createVariable(y(46))
lbl(195492)	definition(x(7) 195602 pid('AnnotateRestrictedVariable,checkUse/fast' 2 pos('./compiler/Annotate.oz' 743 6) nil 7) <Q: 1255> [y(46)])
		inlineAt(use x(2) cache)
		match(x(2) ht(195592 [onScalar(unused 195506) onScalar(wildcard 195549)]))
lbl(195506)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setConstant('unused ')
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195549)	inlineAt(coord x(3) cache)
		inlineAt(printName x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(4))
		putRecord('#' 4 x(2))
		setValue(x(0))
		setConstant(' ')
		setValue(x(5))
		setConstant(' used only once')
		move(x(1) x(6))
		move(x(3) x(0))
		putConstant('binding analysis warning' x(1))
		tailSendMsg(warn x(6) [coord kind msg] cache)
lbl(195592)	inlineAt(features x(0) cache)
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
		endDefinition(195492)
lbl(195602)	definition(x(8) 195637 pid('AnnotateRestrictedVariable,checkUse/slow' 1 pos('./compiler/Annotate.oz' 743 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1255> 5)
		endDefinition(195602)
lbl(195637)	putRecord('#' [1 2 fast] x(9))
		setConstant(checkUse)
		setValue(x(8))
		setValue(x(7))
lbl(195647)	definition(x(7) 195759 pid('AnnotateRestrictedVariable,CheckUse/fast' 2 pos('./compiler/Annotate.oz' 754 6) nil 8) <Q: 1256> [y(46)])
		match(x(0) ht(195744 [onScalar(nil 195656) onRecord('|' 2 195657)]))
lbl(195656)	return
lbl(195657)	allocateL2
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(195722 [onRecord('#' 3 195669) onRecord('#' 4 195720)]))
lbl(195669)	getVarVar(x(4) x(0))
		getVariable(x(2))
		testBI('IsFree' [x(2)]#[x(5)] 195735)
		inlineAt(printName x(5) cache)
		putRecord(pn 1 x(6))
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(x(4))
		putRecord('#' 5 x(2))
		setConstant('feature ')
		setValue(x(6))
		setConstant('.')
		setValue(x(7))
		setConstant(' imported but never used')
		putConstant('binding analysis warning' x(1))
		sendMsg(warn y(0) [coord kind msg] cache)
		branch(195735)
lbl(195720)	branch(195735)
lbl(195722)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(763)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(195735)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: CheckUse> true 2) 0)
lbl(195744)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(766)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(195647)
lbl(195759)	definition(x(8) 195794 pid('AnnotateRestrictedVariable,CheckUse/slow' 1 pos('./compiler/Annotate.oz' 754 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1256> 5)
		endDefinition(195759)
lbl(195794)	putRecord('#' [1 2 fast] x(10))
		setConstant(<M: CheckUse>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		move(y(46) x(6))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateRestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(195833)	definition(x(7) 195895 pid('AnnotateVariableOccurrence,annotateGlobalVars/fast' 3 pos('./compiler/Annotate.oz' 771 6) nil 4) <Q: 1257> nil)
		allocateL4
		inlineAt(variable x(3) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(1))
		move(y(2) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 195874 195882)
		unify(y(0) y(1))
		deAllocateL4
		return
lbl(195874)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL4
		return
lbl(195882)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(772)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(195833)
lbl(195895)	definition(x(8) 195936 pid('AnnotateVariableOccurrence,annotateGlobalVars/slow' 1 pos('./compiler/Annotate.oz' 771 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1257> 7)
		endDefinition(195895)
lbl(195936)	putRecord('#' [1 2 fast] x(9))
		setConstant(annotateGlobalVars)
		setValue(x(8))
		setValue(x(7))
lbl(195946)	definition(x(7) 196017 pid('AnnotateVariableOccurrence,markFirst/fast' 2 pos('./compiler/Annotate.oz' 776 6) nil 2) <Q: 1258> nil)
		allocateL1
		inlineAt(variable x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getUse x(1) 1 cache)
		match(y(0) ht(196000 [onScalar(unused 195970) onScalar(wildcard 195985)]))
lbl(195970)	inlineAt(variable x(1) cache)
		putConstant(wildcard x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(195985)	inlineAt(variable x(1) cache)
		putConstant(linear x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
lbl(196000)	inlineAt(variable x(1) cache)
		putConstant(multiple x(0))
		deAllocateL1
		tailSendMsg(setUse x(1) 1 cache)
		endDefinition(195946)
lbl(196017)	definition(x(8) 196052 pid('AnnotateVariableOccurrence,markFirst/slow' 1 pos('./compiler/Annotate.oz' 776 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1258> 5)
		endDefinition(196017)
lbl(196052)	putRecord('#' [1 2 fast] x(10))
		setConstant(markFirst)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant(nil x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotateVariableOccurrence' x(5))
		createVariableMove(y(47) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putConstant(nil x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AnnotatePatternVariableOccurrence' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putRecord(format 1 y(49))
		setConstant(indent)
		putRecord(format 1 y(50))
		setConstant(exdent)
		putRecord(format 1 y(51))
		setConstant(push)
		putRecord(format 1 y(52))
		setConstant(pop)
		putList(x(1))
		setConstant(32)
		setConstant(nil)
		putRecord(glue 1 x(0))
		setValue(x(1))
		putRecord(format 1 y(53))
		setValue(x(0))
		putRecord(format 1 y(54))
		setConstant(break)
lbl(196163)	definition(x(7) 196205 pid('LI' 4 pos('./compiler/Core.oz' 131 3) nil 4) <Q: 1259> nil)
		getRecord(list 2 x(3))
		unifyVariable(x(3))
		unifyValue(x(1))
lbl(196177)	definition(x(1) 196197 pid('' 2 pos('./compiler/Core.oz' 132 19) nil 3) unit [x(2)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(196177)
lbl(196197)	move(x(3) x(2))
		genFastCall(<P: 29> 7)
		endDefinition(196163)
lbl(196205)	definition(x(7) 196389 pid('LI2' 5 pos('./compiler/Core.oz' 134 3) nil 6) <Q: 1260> nil)
		match(x(0) ht(196374 [onScalar(nil 196214) onRecord('|' 2 196221)]))
lbl(196214)	getLiteral(nil x(3))
		getLiteral(nil x(4))
		return
lbl(196221)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(output2 x(5) 3 cache)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(3))
lbl(196258)	definition(x(1) 196339 pid('' 3 pos('./compiler/Core.oz' 138 5) nil 6) unit [y(2)])
		shallowGuard(196326)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(196274)	shallowThen
		allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(196326)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(138)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196258)
lbl(196339)	putList(x(0))
		setValue(y(5))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(6))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(y(1))
		move(y(7) x(0))
		deAllocateL8
		genFastCall(<P: 28> 5)
lbl(196374)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(146)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196205)
lbl(196389)	definition(x(7) 196407 pid('CheckOutput' 3 pos('./compiler/Core.oz' 149 3) nil 5) <Q: 1261> nil)
		putConstant(false x(3))
		callBI('CondSelect' [x(0) x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		return
		endDefinition(196389)
lbl(196407)	definition(x(7) 196489 pid('OutputAttrFeat' 4 pos('./compiler/Core.oz' 153 3) nil 5) <Q: 1262> nil)
		testRecord(x(0) '#' 2 196472)
lbl(196418)	allocateL4
		getVarVar(x(4) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		getRecord('#' 3 x(3))
		unifyVariable(x(3))
		unifyLiteral(': ')
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(outputEscaped2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(1) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
lbl(196472)	move(x(0) x(4))
		move(x(1) x(0))
		move(x(3) x(1))
		tailSendMsg(outputEscaped2 x(4) 3 cache)
		endDefinition(196407)
lbl(196489)	definition(x(7) 196543 pid('FilterUnitsToVS' 2 pos('./compiler/Core.oz' 162 3) nil 3) <Q: 1263> nil)
		match(x(0) ht(196528 [onScalar(nil 196498) onRecord('|' 2 196502)]))
lbl(196498)	getLiteral(nil x(1))
		return
lbl(196502)	getVarVar(x(0) x(2))
		testLiteral(x(0) unit 196515)
lbl(196509)	move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196515)	getRecord('#' 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1263> 5)
lbl(196528)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(168)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(196489)
lbl(196543)	definition(x(7) 196629 pid('FlattenSequenceSub' 3 pos('./compiler/Core.oz' 172 6) nil 3) <Q: 1264> nil)
		match(x(0) ht(196581 [onScalar(nil 196552) onRecord('|' 2 196556)]))
lbl(196552)	unify(x(1) x(2))
		return
lbl(196556)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1264> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1264> 7)
lbl(196581)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(isRedundant y(0) 1 cache)
		testBool(y(3) 196608 196616)
		unify(y(1) y(2))
		deAllocateL4
		return
lbl(196608)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(196616)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(182)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196543)
lbl(196629)	definition(x(7) 196679 pid('GetFirst' 2 pos('./compiler/Core.oz' 190 6) nil 2) <Q: 1265> nil)
		match(x(0) ht(196673 [onScalar(nil 196638) onRecord('|' 2 196642)]))
lbl(196638)	getLiteral(nil x(1))
		return
lbl(196642)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196668)
lbl(196659)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1265> 5)
lbl(196668)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(196673)	unify(x(1) x(0))
		return
		endDefinition(196629)
lbl(196679)	definition(x(7) 196710 pid('SetPointers' 3 pos('./compiler/Core.oz' 201 6) nil 4) <Q: 1266> nil)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		move(y(0) x(0))
		sendMsg(setNext x(3) 1 cache)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(196679)
lbl(196710)	definition(x(8) 196767 pid('LinkList' 1 pos('./compiler/Core.oz' 206 6) nil 4) <Q: 1267> [x(7)])
		shallowGuard(196754)
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(196724)	shallowThen
		allocateL1
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		move(y(0) x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setNext x(1) 1 cache)
lbl(196754)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(206)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(196710)
lbl(196767)	createVariable(y(55))
lbl(196769)	definition(x(0) 196856 pid('FlattenSequence' 2 pos('./compiler/Core.oz' 211 6) nil 3) <Q: 1268> [y(55)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1264> 6)
		testLiteral(y(2) nil 196844)
lbl(196794)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1265> 4)
		testLiteral(y(2) nil 196836)
lbl(196807)	getList(y(1))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(g(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(2))
		putConstant(unit x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		branch(196847)
lbl(196836)	getList(y(1))
		unifyValue(y(2))
		unifyLiteral(nil)
		branch(196847)
lbl(196844)	unify(y(1) y(2))
lbl(196847)	move(y(1) x(0))
		deAllocateL3
		genFastCall(<Q: 1267> 3)
		endDefinition(196769)
lbl(196856)	move(y(1) x(1))
		inlineDot(x(1) imAConstruction x(2) cache)
		inlineDot(x(1) imAValueNode x(3) cache)
		inlineDot(x(1) imAVariableOccurrence x(4) cache)
		inlineDot(x(1) imAToken x(5) cache)
		inlineDot(x(1) statement x(7) cache)
		move(y(2) x(6))
		inlineDot(x(6) statement x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(4))
		setValue(x(8))
		putRecord('attr' [coord next] x(8))
		setConstant(unit)
		setConstant(unit)
lbl(196924)	definition(x(9) 196933 pid('Statement,setPrintName/fast' 1 pos('./compiler/Core.oz' 232 6) nil 1) <Q: 1269> nil)
		return
		endDefinition(196924)
lbl(196933)	definition(x(10) 196959 pid('Statement,setPrintName/slow' 1 pos('./compiler/Core.oz' 232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1269> 3)
		endDefinition(196933)
lbl(196959)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(10))
		setValue(x(9))
lbl(196969)	definition(x(9) 196981 pid('Statement,isRedundant/fast' 1 pos('./compiler/Core.oz' 235 6) nil 1) <Q: 1270> nil)
		getLiteral(false x(0))
		return
		endDefinition(196969)
lbl(196981)	definition(x(10) 197007 pid('Statement,isRedundant/slow' 1 pos('./compiler/Core.oz' 235 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1270> 3)
		endDefinition(196981)
lbl(197007)	putRecord('#' [1 2 fast] x(12))
		setConstant(isRedundant)
		setValue(x(10))
		setValue(x(9))
lbl(197017)	definition(x(9) 197031 pid('Statement,setNext/fast' 1 pos('./compiler/Core.oz' 238 6) nil 1) <Q: 1271> nil)
		inlineAssign(next x(0) cache)
		return
		endDefinition(197017)
lbl(197031)	definition(x(10) 197057 pid('Statement,setNext/slow' 1 pos('./compiler/Core.oz' 238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1271> 3)
		endDefinition(197031)
lbl(197057)	putRecord('#' [1 2 fast] x(13))
		setConstant(setNext)
		setValue(x(10))
		setValue(x(9))
lbl(197067)	definition(x(9) 197084 pid('Statement,getCoord/fast' 1 pos('./compiler/Core.oz' 241 6) nil 2) <Q: 1272> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(197067)
lbl(197084)	definition(x(10) 197110 pid('Statement,getCoord/slow' 1 pos('./compiler/Core.oz' 241 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1272> 3)
		endDefinition(197084)
lbl(197110)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(9))
		putRecord('#' 4 x(9))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		moveMoveXYXY(x(0) y(4) x(2) y(56))
		moveMoveXYXY(x(3) y(57) x(4) y(58))
		move(x(5) y(59))
		move(x(7) x(0))
		move(x(9) x(1))
		move(x(8) x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Statement' x(5))
		createVariableMove(y(60) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) typeOf x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) typeOf x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(5))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [arg res value] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(197221)	definition(x(7) 197257 pid('TypeOf,init/fast' 2 pos('./compiler/Core.oz' 249 6) nil 2) <Q: 1273> nil)
		inlineAssign(arg x(0) cache)
		inlineAssign(res x(1) cache)
		putList(x(1))
		setConstant(value)
		setConstant(nil)
		putRecord(type 1 x(0))
		setValue(x(1))
		inlineAssign(value x(0) cache)
		return
		endDefinition(197221)
lbl(197257)	definition(x(9) 197292 pid('TypeOf,init/slow' 1 pos('./compiler/Core.oz' 249 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1273> 5)
		endDefinition(197257)
lbl(197292)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197302)	definition(x(7) 197387 pid('TypeOf,output/fast' 2 pos('./compiler/Core.oz' 254 6) nil 6) <Q: 1274> [y(0)])
		allocateL3
		getRecord('#' 6 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyLiteral('   % typeof ')
		unifyVariable(y(1))
		unifyVariable(x(2))
		inlineAt(res x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		call(x(4) 4)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(197302)
lbl(197387)	definition(x(9) 197422 pid('TypeOf,output/slow' 1 pos('./compiler/Core.oz' 254 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1274> 5)
		endDefinition(197387)
lbl(197422)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('TypeOf' x(5))
		createVariableMove(y(5) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) stepPoint x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) stepPoint x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(6))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [kind statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197517)	definition(x(7) 197563 pid('StepPoint,init/fast' 3 pos('./compiler/Core.oz' 266 6) nil 3) <Q: 1275> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL3
		return
		endDefinition(197517)
lbl(197563)	definition(x(9) 197604 pid('StepPoint,init/slow' 1 pos('./compiler/Core.oz' 266 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1275> 7)
		endDefinition(197563)
lbl(197604)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197614)	definition(x(7) 197642 pid('StepPoint,output/fast' 2 pos('./compiler/Core.oz' 271 6) nil 5) <Q: 1276> [y(54)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(197614)
lbl(197642)	definition(x(9) 197677 pid('StepPoint,output/slow' 1 pos('./compiler/Core.oz' 271 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1276> 5)
		endDefinition(197642)
lbl(197677)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('StepPoint' x(5))
		createVariableMove(y(6) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) declaration x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) declaration x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(197769)	definition(x(7) 197813 pid('Declaration,init/fast' 3 pos('./compiler/Core.oz' 281 6) nil 3) <Q: 1277> nil)
		allocateL2
		inlineAssign(localVars x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(197769)
lbl(197813)	definition(x(9) 197854 pid('Declaration,init/slow' 1 pos('./compiler/Core.oz' 281 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1277> 7)
		endDefinition(197813)
lbl(197854)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(197864)	definition(x(7) 197938 pid('Declaration,output/fast' 2 pos('./compiler/Core.oz' 286 6) nil 5) <Q: 1278> [y(53) y(49) y(50) y(54)])
		allocateL2
		getRecord('#' 13 x(1))
		unifyLiteral('local')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(0))
		unifyLiteral('in')
		unifyValue(g(1))
		unifyValVar(g(3) y(0))
		unifyValue(g(2))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(localVars x(4) cache)
		move(x(0) y(1))
		move(x(4) x(0))
		move(g(0) x(1))
		putConstant(true x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(197864)
lbl(197938)	definition(x(9) 197973 pid('Declaration,output/slow' 1 pos('./compiler/Core.oz' 286 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1278> 5)
		endDefinition(197938)
lbl(197973)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Declaration' x(5))
		createVariableMove(y(7) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) skipNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(8))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(198042)	definition(x(7) 198056 pid('SkipNode,init/fast' 1 pos('./compiler/Core.oz' 295 6) nil 1) <Q: 1279> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(198042)
lbl(198056)	definition(x(9) 198082 pid('SkipNode,init/slow' 1 pos('./compiler/Core.oz' 295 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1279> 3)
		endDefinition(198056)
lbl(198082)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198092)	definition(x(7) 198104 pid('SkipNode,isRedundant/fast' 1 pos('./compiler/Core.oz' 298 6) nil 1) <Q: 1280> nil)
		getLiteral(true x(0))
		return
		endDefinition(198092)
lbl(198104)	definition(x(9) 198130 pid('SkipNode,isRedundant/slow' 1 pos('./compiler/Core.oz' 298 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1280> 3)
		endDefinition(198104)
lbl(198130)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRedundant)
		setValue(x(9))
		setValue(x(7))
lbl(198140)	definition(x(7) 198152 pid('SkipNode,output/fast' 2 pos('./compiler/Core.oz' 301 6) nil 2) <Q: 1281> nil)
		getLiteral('skip skip' x(1))
		return
		endDefinition(198140)
lbl(198152)	definition(x(9) 198187 pid('SkipNode,output/slow' 1 pos('./compiler/Core.oz' 301 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1281> 5)
		endDefinition(198152)
lbl(198187)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(1))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(y(55) x(6))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('SkipNode' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equation x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equation x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(9))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [left right] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(198281)	definition(x(7) 198305 pid('Equation,init/fast' 3 pos('./compiler/Core.oz' 310 6) nil 3) <Q: 1282> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(198281)
lbl(198305)	definition(x(9) 198346 pid('Equation,init/slow' 1 pos('./compiler/Core.oz' 310 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1282> 7)
		endDefinition(198305)
lbl(198346)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(198356)	definition(x(7) 198413 pid('Equation,output/fast' 2 pos('./compiler/Core.oz' 315 6) nil 4) <Q: 1283> nil)
		allocateL3
		getRecord('#' 5 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(0))
		unifyVariable(x(2))
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(198356)
lbl(198413)	definition(x(9) 198448 pid('Equation,output/slow' 1 pos('./compiler/Core.oz' 315 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1283> 5)
		endDefinition(198413)
lbl(198448)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('Equation' x(5))
		createVariableMove(y(8) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) construction x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) construction x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(10))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(56))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(198556)	definition(x(8) 198591 pid('Construction,init/fast' 3 pos('./compiler/Core.oz' 326 6) nil 3) <Q: 1284> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) construction x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(198556)
lbl(198591)	definition(x(10) 198632 pid('Construction,init/slow' 1 pos('./compiler/Core.oz' 326 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1284> 7)
		endDefinition(198591)
lbl(198632)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(198642)	definition(x(8) 198661 pid('Construction,getCoord/fast' 1 pos('./compiler/Core.oz' 332 6) nil 2) <Q: 1285> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(198642)
lbl(198661)	definition(x(10) 198687 pid('Construction,getCoord/slow' 1 pos('./compiler/Core.oz' 332 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1285> 3)
		endDefinition(198661)
lbl(198687)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(198697)	definition(x(8) 198709 pid('Construction,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 335 6) nil 1) <Q: 1286> nil)
		getLiteral(false x(0))
		return
		endDefinition(198697)
lbl(198709)	definition(x(10) 198735 pid('Construction,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 335 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1286> 3)
		endDefinition(198709)
lbl(198735)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(198745)	definition(x(8) 198757 pid('Construction,isConstruction/fast' 1 pos('./compiler/Core.oz' 338 6) nil 1) <Q: 1287> nil)
		getLiteral(true x(0))
		return
		endDefinition(198745)
lbl(198757)	definition(x(10) 198783 pid('Construction,isConstruction/slow' 1 pos('./compiler/Core.oz' 338 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1287> 3)
		endDefinition(198757)
lbl(198783)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(198793)	definition(x(8) 199210 pid('Construction,output2/fast' 3 pos('./compiler/Core.oz' 341 6) nil 4) <Q: 1288> [y(51) y(52) y(53)])
		allocateL(11)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 7 x(1))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(1))
		unifyVariable(y(2))
		unifyLiteral(')')
		unifyValue(g(1))
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(args x(0) cache)
		testList(x(0) 199153)
lbl(198848)	getVarVar(x(0) y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 198925)
lbl(198858)	getVarVar(x(3) y(6))
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(3) x(0))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 y(6) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(7))
		unifyLiteral(': ')
		unifyValue(y(9))
		getRecord('#' 2 x(1))
		unifyValue(y(8))
		unifyValue(y(10))
		branch(198957)
lbl(198925)	move(x(0) x(3))
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(5))
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyValue(y(6))
		unifyLiteral(nil)
lbl(198957)	putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(0))
lbl(198965)	definition(x(1) 199129 pid('' 3 pos('./compiler/Core.oz' 354 9) nil 6) unit [y(3)])
		shallowGuard(199116)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(198981)	shallowThen
		testRecord(x(1) '#' 2 199065)
lbl(198987)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(199065)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(199116)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(354)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(198965)
lbl(199129)	moveMoveYXYX(y(4) x(0) y(5) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(1))
		unifyVariable(x(1))
		unifyValue(g(2))
		move(y(6) x(0))
		genFastCall(<P: 28> 4)
		branch(199159)
lbl(199153)	getLiteral(nil y(0))
		getLiteral(nil y(1))
lbl(199159)	inlineAt(isOpen x(0) cache)
		testBool(x(0) 199192 199197)
		inlineAt(args x(0) cache)
		testLiteral(x(0) nil 199182)
lbl(199177)	getLiteral('...' y(2))
		deAllocateL
		return
lbl(199182)	getRecord('#' 2 y(2))
		unifyValue(g(2))
		unifyLiteral('...')
		deAllocateL
		return
lbl(199192)	getLiteral(nil y(2))
		deAllocateL
		return
lbl(199197)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(369)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(198793)
lbl(199210)	definition(x(10) 199251 pid('Construction,output2/slow' 1 pos('./compiler/Core.oz' 341 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1288> 7)
		endDefinition(199210)
lbl(199251)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('Construction' x(5))
		createVariableMove(y(9) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'definition' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'definition' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(11))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [allVariables designator formalArgs isStateUsing predicateRef printName procFlags statements toCopy] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(199357)	definition(x(7) 199427 pid('Definition,init/fast' 6 pos('./compiler/Core.oz' 383 6) nil 6) <Q: 1289> nil)
		allocateL4
		inlineAssign(designator x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		move(x(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(isStateUsing x(0) cache)
		move(y(1) x(0))
		inlineAssign(procFlags x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(199357)
lbl(199427)	definition(x(9) 199486 pid('Definition,init/slow' 1 pos('./compiler/Core.oz' 383 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1289> 13)
		endDefinition(199427)
lbl(199486)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(199496)	definition(x(7) 199510 pid('Definition,setAllVariables/fast' 1 pos('./compiler/Core.oz' 392 6) nil 1) <Q: 1290> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(199496)
lbl(199510)	definition(x(9) 199536 pid('Definition,setAllVariables/slow' 1 pos('./compiler/Core.oz' 392 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1290> 3)
		endDefinition(199510)
lbl(199536)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(7))
lbl(199546)	definition(x(7) 199560 pid('Definition,setPrintName/fast' 1 pos('./compiler/Core.oz' 395 6) nil 1) <Q: 1291> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(199546)
lbl(199560)	definition(x(9) 199586 pid('Definition,setPrintName/slow' 1 pos('./compiler/Core.oz' 395 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1291> 3)
		endDefinition(199560)
lbl(199586)	putRecord('#' [1 2 fast] x(12))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(199596)	definition(x(7) 199812 pid('Definition,output/fast' 2 pos('./compiler/Core.oz' 398 6) nil 5) <Q: 1292> [y(51) y(52) y(49) y(54) y(50) y(0) y(53)])
		allocateL6
		getRecord('#' 15 x(1))
		unifyVariable(x(3))
		unifyLiteral('{')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral('}')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(procFlags x(4) cache)
lbl(199639)	definition(x(1) 199677 pid('' 3 pos('./compiler/Core.oz' 400 3) nil 5) unit [g(5)])
		getRecord('#' 3 x(2))
		unifyValVar(x(0) x(3))
		unifyLiteral(' ')
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(199639)
lbl(199677)	move(x(0) y(5))
		move(x(4) x(0))
		putConstant('proc ' x(2))
		genFastCall(<P: 30> 8)
		inlineAt(designator x(3) cache)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		move(y(3) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		match(x(0) ht(199744 [onScalar(nil 199716) onRecord('|' 2 199721)]))
lbl(199716)	getLiteral(nil y(1))
		branch(199757)
lbl(199721)	getRecord('#' 2 y(1))
		unifyValVar(g(6) x(3))
		inlineAt(formalArgs x(0) cache)
		move(g(6) x(1))
		move(y(5) x(2))
		genFastCall(<Q: 1259> 8)
		branch(199757)
lbl(199744)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(405)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(199757)	getSelf(x(2))
		createVariableMove(y(0) x(0))
		sendMsg(isClauseBody x(2) 1 cache)
		testBool(y(0) 199777 199782)
		getLiteral('   % clause body' y(2))
		branch(199793)
lbl(199777)	getLiteral(nil y(2))
		branch(199793)
lbl(199782)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(406)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(199793)	inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(199596)
lbl(199812)	definition(x(9) 199847 pid('Definition,output/slow' 1 pos('./compiler/Core.oz' 398 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1292> 5)
		endDefinition(199812)
lbl(199847)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(199857)	definition(x(7) 199869 pid('Definition,isClauseBody/fast' 1 pos('./compiler/Core.oz' 410 6) nil 1) <Q: 1293> nil)
		getLiteral(false x(0))
		return
		endDefinition(199857)
lbl(199869)	definition(x(9) 199895 pid('Definition,isClauseBody/slow' 1 pos('./compiler/Core.oz' 410 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1293> 3)
		endDefinition(199869)
lbl(199895)	putRecord('#' [1 2 fast] x(14))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Definition' x(5))
		createVariableMove(y(10) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) functionDefinition x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(12))
		setValue(x(8))
		putList(x(8))
		setValue(y(10))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FunctionDefinition' x(5))
		createVariableMove(y(11) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBody x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(13))
		setValue(x(8))
		putList(x(8))
		setValue(y(10))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(200027)	definition(x(7) 200039 pid('ClauseBody,isClauseBody/fast' 1 pos('./compiler/Core.oz' 421 6) nil 1) <Q: 1294> nil)
		getLiteral(true x(0))
		return
		endDefinition(200027)
lbl(200039)	definition(x(9) 200065 pid('ClauseBody,isClauseBody/slow' 1 pos('./compiler/Core.oz' 421 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1294> 3)
		endDefinition(200039)
lbl(200065)	putRecord('#' [1 2 fast] x(10))
		setConstant(isClauseBody)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ClauseBody' x(5))
		createVariableMove(y(12) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) application x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) application x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(14))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [actualArgs designator] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [codeGenMakeEquateLiteral] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(200161)	definition(x(7) 200185 pid('Application,init/fast' 3 pos('./compiler/Core.oz' 432 6) nil 3) <Q: 1295> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(actualArgs x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(200161)
lbl(200185)	definition(x(9) 200226 pid('Application,init/slow' 1 pos('./compiler/Core.oz' 432 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1295> 7)
		endDefinition(200185)
lbl(200226)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		createVariable(y(13))
lbl(200238)	definition(x(7) 200707 pid('Application,output/fast' 2 pos('./compiler/Core.oz' 437 6) nil 5) <Q: 1296> [y(13)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 200272 200694)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200272)	inlineAt(designator x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg('getVariable' x(1) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(2) 1 cache)
		match(y(3) ht(200685 [onScalar('`ooExch`' 200298) onScalar('`@`' 200385) onScalar('`~`' 200397) onScalar('`<-`' 200409) onScalar('`,`' 200421) onScalar('`==`' 200433) onScalar('`<`' 200445) onScalar('`>`' 200457) onScalar('`=<`' 200469) onScalar('`>=`' 200481) onScalar('`\\=`' 200493) onScalar('`div`' 200505) onScalar('`mod`' 200517) onScalar('`+`' 200529) onScalar('`-`' 200541) onScalar('`*`' 200553) onScalar('`/`' 200565) onScalar('`.`' 200577) onScalar('`^`' 200589) onScalar('`::`' 200601) onScalar('`:::`' 200613) onScalar('`::R`' 200625) onScalar('`:::R`' 200637) onScalar('`Raise`' 200649)]))
lbl(200298)	putList(x(1))
		setVariable(x(4))
		setConstant(nil)
		putList(x(0))
		setVariable(y(3))
		setValue(x(1))
		putList(x(3))
		setVariable(y(2))
		setValue(x(0))
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 8 y(1))
		unifyVariable(x(1))
		unifyLiteral(' = ')
		unifyVariable(y(1))
		unifyLiteral(' <- ')
		unifyVariable(y(4))
		unifyVariable(x(2))
		unifyVariable(y(5))
		unifyVariable(y(6))
		move(y(0) x(0))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(5) x(2))
		sendMsg(output2 y(2) 3 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(6) x(2))
		move(y(3) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
lbl(200385)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('@' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200397)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('~' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputPrefixExpression> true 3) 0)
lbl(200409)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' <- ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200421)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(', ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixStatement> true 3) 0)
lbl(200433)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' == ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200445)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' < ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200457)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' > ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200469)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' =< ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200481)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' >= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200493)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' \\= ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200505)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' div ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200517)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' mod ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200529)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' + ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200541)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' - ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200553)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' * ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200565)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' / ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200577)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('.' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200589)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant('^' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputInfixExpression> true 3) 0)
lbl(200601)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200613)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInStatement> true 3) 0)
lbl(200625)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' :: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200637)	moveMoveYXYX(y(0) x(1) y(1) x(2))
		putConstant(' ::: ' x(0))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputFdInExpression> true 3) 0)
lbl(200649)	putList(x(3))
		setVariable(x(4))
		setConstant(nil)
		inlineAt(actualArgs x(0) cache)
		unify(x(0) x(3))
		getRecord('#' 4 y(1))
		unifyLiteral('raise ')
		unifyVariable(x(1))
		unifyLiteral(' end')
		unifyVariable(x(2))
		move(y(0) x(0))
		deAllocateL7
		tailSendMsg(output2 x(4) 3 cache)
lbl(200685)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL7
		genCall(gci(g(0) true <M: OutputApplication> true 2) 0)
lbl(200694)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(438)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(200238)
lbl(200707)	definition(x(9) 200742 pid('Application,output/slow' 1 pos('./compiler/Core.oz' 437 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1296> 5)
		endDefinition(200707)
lbl(200742)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
lbl(200752)	definition(x(7) 200846 pid('Application,OutputApplication/fast' 2 pos('./compiler/Core.oz' 476 6) nil 5) <Q: 1297> [y(51) y(52) y(53)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('{')
		unifyValVar(g(0) x(1))
		unifyVariable(y(0))
		unifyLiteral('}')
		unifyValVar(g(1) x(2))
		unifyVariable(y(1))
		inlineAt(designator x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(actualArgs x(0) cache)
		match(x(0) ht(200831 [onScalar(nil 200799) onRecord('|' 2 200807)]))
lbl(200799)	getLiteral(nil y(1))
		getLiteral(nil y(0))
		deAllocateL3
		return
lbl(200807)	getRecord('#' 2 y(0))
		unifyValVar(g(2) x(4))
		inlineAt(actualArgs x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1260> 11)
lbl(200831)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(480)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(200752)
lbl(200846)	definition(x(9) 200881 pid('Application,OutputApplication/slow' 1 pos('./compiler/Core.oz' 476 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1297> 5)
		endDefinition(200846)
lbl(200881)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: OutputApplication>)
		setValue(x(9))
		setValue(x(7))
lbl(200891)	definition(x(7) 200967 pid('Application,OutputPrefixExpression/fast' 3 pos('./compiler/Core.oz' 482 6) nil 6) <Q: 1298> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 6 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(200891)
lbl(200967)	definition(x(9) 201008 pid('Application,OutputPrefixExpression/slow' 1 pos('./compiler/Core.oz' 482 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1298> 7)
		endDefinition(200967)
lbl(201008)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: OutputPrefixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201018)	definition(x(7) 201092 pid('Application,OutputInfixStatement/fast' 3 pos('./compiler/Core.oz' 486 6) nil 6) <Q: 1299> nil)
		allocateL4
		putList(x(5))
		setVariable(y(0))
		setConstant(nil)
		putList(x(3))
		setVariable(x(4))
		setValue(x(5))
		inlineAt(actualArgs x(5) cache)
		unify(x(5) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(4) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201018)
lbl(201092)	definition(x(9) 201133 pid('Application,OutputInfixStatement/slow' 1 pos('./compiler/Core.oz' 486 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1299> 7)
		endDefinition(201092)
lbl(201133)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: OutputInfixStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201143)	definition(x(7) 201243 pid('Application,OutputInfixExpression/fast' 3 pos('./compiler/Core.oz' 490 6) nil 7) <Q: 1300> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(0) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(1) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201143)
lbl(201243)	definition(x(9) 201284 pid('Application,OutputInfixExpression/slow' 1 pos('./compiler/Core.oz' 490 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1300> 7)
		endDefinition(201243)
lbl(201284)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: OutputInfixExpression>)
		setValue(x(9))
		setValue(x(7))
lbl(201294)	definition(x(7) 201368 pid('Application,OutputFdInStatement/fast' 3 pos('./compiler/Core.oz' 495 6) nil 6) <Q: 1301> nil)
		allocateL4
		putList(x(4))
		setVariable(x(5))
		setConstant(nil)
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 5 x(2))
		unifyVariable(x(3))
		unifyValVar(x(0) y(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(5) 3 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(y(2) x(2))
		move(y(0) x(3))
		deAllocateL4
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201294)
lbl(201368)	definition(x(9) 201409 pid('Application,OutputFdInStatement/slow' 1 pos('./compiler/Core.oz' 495 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1301> 7)
		endDefinition(201368)
lbl(201409)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: OutputFdInStatement>)
		setValue(x(9))
		setValue(x(7))
lbl(201419)	definition(x(7) 201519 pid('Application,OutputFdInExpression/fast' 3 pos('./compiler/Core.oz' 499 6) nil 7) <Q: 1302> nil)
		allocateL7
		putList(x(5))
		setVariable(x(6))
		setConstant(nil)
		putList(x(4))
		setVariable(y(1))
		setValue(x(5))
		putList(x(3))
		setVariable(y(0))
		setValue(x(4))
		inlineAt(actualArgs x(4) cache)
		unify(x(4) x(3))
		getRecord('#' 8 x(2))
		unifyVariable(x(3))
		unifyLiteral(' = ')
		unifyVariable(y(2))
		unifyValVar(x(0) y(3))
		unifyVariable(x(2))
		unifyVariable(y(4))
		unifyVariable(y(5))
		moveMoveXYYX(x(1) y(6) y(6) x(0))
		move(x(3) x(1))
		sendMsg(output2 x(6) 3 cache)
		moveMoveYXYX(y(6) x(0) y(2) x(1))
		move(y(4) x(2))
		sendMsg(output2 y(1) 3 cache)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		move(y(5) x(2))
		move(y(0) x(3))
		deAllocateL7
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(201419)
lbl(201519)	definition(x(9) 201560 pid('Application,OutputFdInExpression/slow' 1 pos('./compiler/Core.oz' 499 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1302> 7)
		endDefinition(201519)
lbl(201560)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputFdInExpression>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 8 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		move(x(8) x(0))
		move(x(7) x(1))
		move(y(13) x(6))
		putConstant('Application' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(15))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter consequent] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [noBoolShared] x(3))
		setConstant(<U: ooFreeFlag>)
lbl(201669)	definition(x(7) 201698 pid('BoolCase,init/fast' 4 pos('./compiler/Core.oz' 511 6) nil 4) <Q: 1303> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(consequent x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(201669)
lbl(201698)	definition(x(9) 201745 pid('BoolCase,init/slow' 1 pos('./compiler/Core.oz' 511 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1303> 9)
		endDefinition(201698)
lbl(201745)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(201755)	definition(x(7) 201835 pid('BoolCase,output/fast' 2 pos('./compiler/Core.oz' 517 6) nil 4) <Q: 1304> [y(49) y(54) y(50)])
		allocateL3
		getRecord('#' 11 x(1))
		unifyLiteral('if ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValVar(g(1) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(consequent x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(201755)
lbl(201835)	definition(x(9) 201870 pid('BoolCase,output/slow' 1 pos('./compiler/Core.oz' 517 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1304> 5)
		endDefinition(201835)
lbl(201870)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('BoolCase' x(5))
		createVariableMove(y(14) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) boolClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) boolClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(16))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(201951)	definition(x(8) 201976 pid('BoolClause,init/fast' 1 pos('./compiler/Core.oz' 527 6) nil 2) <Q: 1305> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(201951)
lbl(201976)	definition(x(9) 202002 pid('BoolClause,init/slow' 1 pos('./compiler/Core.oz' 527 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1305> 3)
		endDefinition(201976)
lbl(202002)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202012)	definition(x(8) 202040 pid('BoolClause,output/fast' 2 pos('./compiler/Core.oz' 530 6) nil 5) <Q: 1306> [y(54)])
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(x(1) x(3))
		move(g(0) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(202012)
lbl(202040)	definition(x(9) 202075 pid('BoolClause,output/slow' 1 pos('./compiler/Core.oz' 530 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1306> 5)
		endDefinition(202040)
lbl(202075)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('BoolClause' x(5))
		createVariableMove(y(15) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternCase x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternCase x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(17))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative arbiter clauses] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202169)	definition(x(7) 202198 pid('PatternCase,init/fast' 4 pos('./compiler/Core.oz' 540 6) nil 4) <Q: 1307> nil)
		inlineAssign(arbiter x(0) cache)
		inlineAssign(clauses x(1) cache)
		inlineAssign(alternative x(2) cache)
		inlineAssign(coord x(3) cache)
		return
		endDefinition(202169)
lbl(202198)	definition(x(9) 202245 pid('PatternCase,init/slow' 1 pos('./compiler/Core.oz' 540 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1307> 9)
		endDefinition(202198)
lbl(202245)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(202255)	definition(x(7) 202335 pid('PatternCase,output/fast' 2 pos('./compiler/Core.oz' 546 6) nil 4) <Q: 1308> [y(54)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyLiteral('case ')
		unifyVariable(x(1))
		unifyLiteral(' of ')
		unifyVariable(y(0))
		unifyValVar(g(0) y(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(arbiter x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(clauses x(0) cache)
		putRecord('#' 2 x(1))
		setValue(g(0))
		setConstant('[] ')
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		tailSendMsg(output x(2) 2 cache)
		endDefinition(202255)
lbl(202335)	definition(x(9) 202370 pid('PatternCase,output/slow' 1 pos('./compiler/Core.oz' 546 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1308> 5)
		endDefinition(202335)
lbl(202370)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('PatternCase' x(5))
		createVariableMove(y(16) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) patternClause x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) patternClause x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(18))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [localVars pattern statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(202458)	definition(x(8) 202496 pid('PatternClause,init/fast' 3 pos('./compiler/Core.oz' 558 6) nil 3) <Q: 1309> nil)
		allocateL1
		inlineAssign(localVars x(0) cache)
		inlineAssign(pattern x(1) cache)
		move(x(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(202458)
lbl(202496)	definition(x(9) 202537 pid('PatternClause,init/slow' 1 pos('./compiler/Core.oz' 558 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1309> 7)
		endDefinition(202496)
lbl(202537)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(202547)	definition(x(8) 202613 pid('PatternClause,output/fast' 2 pos('./compiler/Core.oz' 563 6) nil 5) <Q: 1310> [y(51) y(52) y(53) y(49) y(54) y(50)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyValVar(g(0) x(2))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('then')
		unifyValVar(g(3) x(3))
		unifyValVar(g(4) y(0))
		unifyValue(g(5))
		inlineAt(pattern x(4) cache)
		inlineAt(localVars x(1) cache)
		move(x(0) y(1))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(statements x(0) cache)
		move(g(4) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(202547)
lbl(202613)	definition(x(9) 202648 pid('PatternClause,output/slow' 1 pos('./compiler/Core.oz' 563 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1310> 5)
		endDefinition(202613)
lbl(202648)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('PatternClause' x(5))
		createVariableMove(y(17) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) recordPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) recordPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(19))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [args isOpen label] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(56))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(202756)	definition(x(8) 202791 pid('RecordPattern,init/fast' 3 pos('./compiler/Core.oz' 575 6) nil 3) <Q: 1311> [y(1)])
		inlineAssign(label x(0) cache)
		inlineAssign(args x(1) cache)
		inlineAssign(isOpen x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) recordPattern x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(202756)
lbl(202791)	definition(x(10) 202832 pid('RecordPattern,init/slow' 1 pos('./compiler/Core.oz' 575 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1311> 7)
		endDefinition(202791)
lbl(202832)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(202842)	definition(x(8) 202861 pid('RecordPattern,getCoord/fast' 1 pos('./compiler/Core.oz' 581 6) nil 2) <Q: 1312> nil)
		inlineAt(label x(1) cache)
		tailSendMsg(getCoord x(1) 1 cache)
		endDefinition(202842)
lbl(202861)	definition(x(10) 202887 pid('RecordPattern,getCoord/slow' 1 pos('./compiler/Core.oz' 581 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1312> 3)
		endDefinition(202861)
lbl(202887)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(202897)	definition(x(8) 202909 pid('RecordPattern,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 584 6) nil 1) <Q: 1313> nil)
		getLiteral(false x(0))
		return
		endDefinition(202897)
lbl(202909)	definition(x(10) 202935 pid('RecordPattern,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 584 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1313> 3)
		endDefinition(202909)
lbl(202935)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(202945)	definition(x(8) 202957 pid('RecordPattern,isConstruction/fast' 1 pos('./compiler/Core.oz' 587 6) nil 1) <Q: 1314> nil)
		getLiteral(true x(0))
		return
		endDefinition(202945)
lbl(202957)	definition(x(10) 202983 pid('RecordPattern,isConstruction/slow' 1 pos('./compiler/Core.oz' 587 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1314> 3)
		endDefinition(202957)
lbl(202983)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(202993)	definition(x(8) 203408 pid('RecordPattern,output2/fast' 3 pos('./compiler/Core.oz' 590 6) nil 4) <Q: 1315> [y(53) y(51) y(52)])
		allocateL(12)
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(2) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		createVariable(y(4))
		testList(x(2) 203323)
lbl(203024)	getVarVar(x(2) y(5))
		createVariable(y(6))
		testRecord(x(2) '#' 2 203098)
lbl(203034)	getVarVar(x(3) y(7))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		sendMsg(output2 x(3) 3 cache)
		move(y(2) x(0))
		createVariableMove(y(10) x(1))
		createVariableMove(y(11) x(2))
		sendMsg(output2 y(7) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(8))
		unifyLiteral(': ')
		unifyValue(y(10))
		getRecord('#' 2 x(1))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(203127)
lbl(203098)	move(x(2) x(3))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		sendMsg(output2 x(3) 3 cache)
		getRecord('#' 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(8))
		getList(x(0))
		unifyValue(y(7))
		unifyLiteral(nil)
lbl(203127)	putRecord('#' 2 x(3))
		setVariable(y(7))
		setValue(y(1))
lbl(203135)	definition(x(1) 203299 pid('' 3 pos('./compiler/Core.oz' 602 9) nil 6) unit [y(2)])
		shallowGuard(203286)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203151)	shallowThen
		testRecord(x(1) '#' 2 203235)
lbl(203157)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(output2 y(0) 3 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203235)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(output2 x(5) 3 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203286)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(602)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203135)
lbl(203299)	moveMoveYXYX(y(5) x(0) y(6) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		branch(203329)
lbl(203323)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203329)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203390 203395)
		testLiteral(y(4) nil 203380)
lbl(203375)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203380)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203390)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203395)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(618)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(202993)
lbl(203408)	definition(x(10) 203449 pid('RecordPattern,output2/slow' 1 pos('./compiler/Core.oz' 590 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1315> 7)
		endDefinition(203408)
lbl(203449)	putRecord('#' [1 2 fast] x(15))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(203459)	definition(x(8) 203885 pid('RecordPattern,outputPattern2/fast' 4 pos('./compiler/Core.oz' 623 6) nil 5) <Q: 1316> [y(53) y(51) y(52)])
		allocateL(13)
		getRecord('#' 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		inlineAt(args x(3) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		createVariable(y(4))
		testList(x(3) 203800)
lbl(203490)	getVarVar(x(3) y(5))
		move(x(1) y(6))
		createVariable(y(7))
		testRecord(x(3) '#' 2 203569)
lbl(203503)	getVarVar(x(3) y(8))
		createVariableMove(y(9) x(1))
		createVariableMove(y(10) x(2))
		sendMsg(output2 x(3) 3 cache)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		createVariableMove(y(11) x(2))
		createVariableMove(y(12) x(3))
		sendMsg(outputPattern2 y(8) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord('#' 3 x(2))
		unifyValue(y(9))
		unifyLiteral(': ')
		unifyValue(y(11))
		getRecord('#' 2 x(1))
		unifyValue(y(10))
		unifyValue(y(12))
		branch(203598)
lbl(203569)	move(x(3) x(4))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		getRecord('#' 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(9))
		getList(x(0))
		unifyValue(y(8))
		unifyLiteral(nil)
lbl(203598)	putRecord('#' 2 x(3))
		setVariable(y(8))
		setValue(y(1))
lbl(203606)	definition(x(1) 203776 pid('' 3 pos('./compiler/Core.oz' 635 9) nil 6) unit [y(2) y(6)])
		shallowGuard(203763)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(203622)	shallowThen
		testRecord(x(1) '#' 2 203709)
lbl(203628)	allocateL8
		getVarVar(x(5) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		move(g(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(output2 x(5) 3 cache)
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		sendMsg(outputPattern2 y(0) 4 cache)
		getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyValue(y(2))
		getRecord('#' 3 x(2))
		unifyValue(y(4))
		unifyLiteral(': ')
		unifyValue(y(6))
		getRecord('#' 3 x(1))
		unifyValue(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(203709)	allocateL5
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) y(2))
		move(x(1) x(5))
		move(g(0) x(0))
		move(g(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		sendMsg(outputPattern2 x(5) 4 cache)
		getRecord('#' 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(3))
		unifyValue(y(1))
		getRecord('#' 2 x(1))
		unifyValue(y(2))
		unifyValue(y(4))
		deAllocateL5
		return
lbl(203763)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(635)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203606)
lbl(203776)	moveMoveYXYX(y(5) x(0) y(7) x(2))
		genFastCall(<P: 30> 8)
		getRecord(list 2 y(4))
		unifyVariable(x(1))
		unifyValue(g(0))
		move(y(8) x(0))
		genFastCall(<P: 28> 4)
		branch(203806)
lbl(203800)	getLiteral(nil y(1))
		getLiteral(nil y(4))
lbl(203806)	getRecord('#' 7 y(3))
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValue(g(1))
		unifyValVar(y(4) y(1))
		unifyLiteral(')')
		unifyValue(g(2))
		inlineAt(label x(3) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 203867 203872)
		testLiteral(y(4) nil 203857)
lbl(203852)	getLiteral('...' y(1))
		deAllocateL
		return
lbl(203857)	getRecord('#' 2 y(1))
		unifyValue(g(0))
		unifyLiteral('...')
		deAllocateL
		return
lbl(203867)	getLiteral(nil y(1))
		deAllocateL
		return
lbl(203872)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(651)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(203459)
lbl(203885)	definition(x(10) 203932 pid('RecordPattern,outputPattern2/slow' 1 pos('./compiler/Core.oz' 623 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1316> 9)
		endDefinition(203885)
lbl(203932)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant('RecordPattern' x(5))
		createVariableMove(y(18) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) equationPattern x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) equationPattern x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(20))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord left right] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(204028)	definition(x(8) 204052 pid('EquationPattern,init/fast' 3 pos('./compiler/Core.oz' 663 6) nil 3) <Q: 1317> nil)
		inlineAssign(left x(0) cache)
		inlineAssign(right x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(204028)
lbl(204052)	definition(x(9) 204093 pid('EquationPattern,init/slow' 1 pos('./compiler/Core.oz' 663 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1317> 7)
		endDefinition(204052)
lbl(204093)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(204103)	definition(x(8) 204120 pid('EquationPattern,getCoord/fast' 1 pos('./compiler/Core.oz' 668 6) nil 2) <Q: 1318> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(204103)
lbl(204120)	definition(x(9) 204146 pid('EquationPattern,getCoord/slow' 1 pos('./compiler/Core.oz' 668 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1318> 3)
		endDefinition(204120)
lbl(204146)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(204156)	definition(x(8) 204175 pid('EquationPattern,isConstruction/fast' 1 pos('./compiler/Core.oz' 671 6) nil 2) <Q: 1319> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isConstruction x(1) 1 cache)
		endDefinition(204156)
lbl(204175)	definition(x(9) 204201 pid('EquationPattern,isConstruction/slow' 1 pos('./compiler/Core.oz' 671 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1319> 3)
		endDefinition(204175)
lbl(204201)	putRecord('#' [1 2 fast] x(12))
		setConstant(isConstruction)
		setValue(x(9))
		setValue(x(8))
lbl(204211)	definition(x(8) 204230 pid('EquationPattern,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 674 6) nil 2) <Q: 1320> nil)
		inlineAt(right x(1) cache)
		tailSendMsg(isVariableOccurrence x(1) 1 cache)
		endDefinition(204211)
lbl(204230)	definition(x(9) 204256 pid('EquationPattern,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 674 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1320> 3)
		endDefinition(204230)
lbl(204256)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(9))
		setValue(x(8))
lbl(204266)	definition(x(8) 204327 pid('EquationPattern,output2/fast' 3 pos('./compiler/Core.oz' 677 6) nil 4) <Q: 1321> nil)
		allocateL3
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyVariable(y(0))
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(3) cache)
		move(x(0) y(2))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(right x(3) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(204266)
lbl(204327)	definition(x(9) 204368 pid('EquationPattern,output2/slow' 1 pos('./compiler/Core.oz' 677 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1321> 7)
		endDefinition(204327)
lbl(204368)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
lbl(204378)	definition(x(8) 204443 pid('EquationPattern,outputPattern2/fast' 4 pos('./compiler/Core.oz' 681 6) nil 5) <Q: 1322> nil)
		allocateL4
		getRecord('#' 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral('=')
		unifyVariable(y(1))
		inlineAt(left x(4) cache)
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		sendMsg(outputPattern2 x(4) 4 cache)
		inlineAt(right x(4) cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL4
		tailSendMsg(outputPattern2 x(4) 4 cache)
		endDefinition(204378)
lbl(204443)	definition(x(9) 204490 pid('EquationPattern,outputPattern2/slow' 1 pos('./compiler/Core.oz' 681 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1322> 9)
		endDefinition(204443)
lbl(204490)	putRecord('#' [1 2 fast] x(15))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('EquationPattern' x(5))
		createVariableMove(y(19) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) abstractElse x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(21))
		setValue(x(8))
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('AbstractElse' x(5))
		createVariableMove(y(20) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) elseNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) elseNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(22))
		setValue(x(8))
		putList(x(8))
		setValue(y(20))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(204633)	definition(x(7) 204658 pid('ElseNode,init/fast' 1 pos('./compiler/Core.oz' 696 6) nil 2) <Q: 1323> nil)
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL1
		return
		endDefinition(204633)
lbl(204658)	definition(x(9) 204684 pid('ElseNode,init/slow' 1 pos('./compiler/Core.oz' 696 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1323> 3)
		endDefinition(204658)
lbl(204684)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204694)	definition(x(7) 204734 pid('ElseNode,output/fast' 2 pos('./compiler/Core.oz' 699 6) nil 5) <Q: 1324> [y(49) y(54) y(50)])
		getRecord('#' 6 x(1))
		unifyLiteral('else')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(204694)
lbl(204734)	definition(x(9) 204769 pid('ElseNode,output/slow' 1 pos('./compiler/Core.oz' 699 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1324> 5)
		endDefinition(204734)
lbl(204769)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ElseNode' x(5))
		createVariableMove(y(21) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) noElse x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) noElse x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(23))
		setValue(x(8))
		putList(x(8))
		setValue(y(20))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [coord] x(2))
		setConstant(unit)
lbl(204859)	definition(x(7) 204873 pid('NoElse,init/fast' 1 pos('./compiler/Core.oz' 708 6) nil 1) <Q: 1325> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(204859)
lbl(204873)	definition(x(9) 204899 pid('NoElse,init/slow' 1 pos('./compiler/Core.oz' 708 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1325> 3)
		endDefinition(204873)
lbl(204899)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(204909)	definition(x(7) 204926 pid('NoElse,getCoord/fast' 1 pos('./compiler/Core.oz' 711 6) nil 2) <Q: 1326> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(204909)
lbl(204926)	definition(x(9) 204952 pid('NoElse,getCoord/slow' 1 pos('./compiler/Core.oz' 711 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1326> 3)
		endDefinition(204926)
lbl(204952)	putRecord('#' [1 2 fast] x(11))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(7))
lbl(204962)	definition(x(7) 204974 pid('NoElse,output/fast' 2 pos('./compiler/Core.oz' 714 6) nil 2) <Q: 1327> nil)
		getLiteral(nil x(1))
		return
		endDefinition(204962)
lbl(204974)	definition(x(9) 205009 pid('NoElse,output/slow' 1 pos('./compiler/Core.oz' 714 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1327> 5)
		endDefinition(204974)
lbl(205009)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('NoElse' x(5))
		createVariableMove(y(22) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) threadNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) threadNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(24))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(205101)	definition(x(7) 205137 pid('ThreadNode,init/fast' 2 pos('./compiler/Core.oz' 724 6) nil 2) <Q: 1328> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205101)
lbl(205137)	definition(x(9) 205172 pid('ThreadNode,init/slow' 1 pos('./compiler/Core.oz' 724 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1328> 5)
		endDefinition(205137)
lbl(205172)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205182)	definition(x(7) 205224 pid('ThreadNode,output/fast' 2 pos('./compiler/Core.oz' 728 6) nil 5) <Q: 1329> [y(49) y(54) y(50)])
		getRecord('#' 7 x(1))
		unifyLiteral('thread')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(205182)
lbl(205224)	definition(x(9) 205259 pid('ThreadNode,output/slow' 1 pos('./compiler/Core.oz' 728 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1329> 5)
		endDefinition(205224)
lbl(205259)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ThreadNode' x(5))
		createVariableMove(y(23) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) tryNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) tryNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(25))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [catchStatements exception tryStatements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(205353)	definition(x(7) 205419 pid('TryNode,init/fast' 4 pos('./compiler/Core.oz' 738 6) nil 4) <Q: 1330> nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(3) x(0))
		inlineAssign(tryStatements x(0) cache)
		move(y(0) x(0))
		inlineAssign(exception x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(catchStatements x(0) cache)
		move(y(2) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL4
		return
		endDefinition(205353)
lbl(205419)	definition(x(9) 205466 pid('TryNode,init/slow' 1 pos('./compiler/Core.oz' 738 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1330> 9)
		endDefinition(205419)
lbl(205466)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205476)	definition(x(7) 205570 pid('TryNode,output/fast' 2 pos('./compiler/Core.oz' 744 6) nil 5) <Q: 1331> [y(49) y(54) y(50)])
		allocateL3
		getRecord('#' 15 x(1))
		unifyLiteral('try')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('catch ')
		unifyVariable(y(0))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(1))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(tryStatements x(4) cache)
		move(x(0) y(2))
		move(x(4) x(0))
		move(g(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(exception x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(catchStatements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(205476)
lbl(205570)	definition(x(9) 205605 pid('TryNode,output/slow' 1 pos('./compiler/Core.oz' 744 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1331> 5)
		endDefinition(205570)
lbl(205605)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('TryNode' x(5))
		createVariableMove(y(24) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) lockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) lockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(26))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [lockVar statements] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(205697)	definition(x(7) 205741 pid('LockNode,init/fast' 3 pos('./compiler/Core.oz' 756 6) nil 3) <Q: 1332> nil)
		allocateL2
		inlineAssign(lockVar x(0) cache)
		move(x(2) y(0))
		move(x(1) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(205697)
lbl(205741)	definition(x(9) 205782 pid('LockNode,init/slow' 1 pos('./compiler/Core.oz' 756 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1332> 7)
		endDefinition(205741)
lbl(205782)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(205792)	definition(x(7) 205855 pid('LockNode,output/fast' 2 pos('./compiler/Core.oz' 761 6) nil 4) <Q: 1333> [y(49) y(54) y(50)])
		allocateL2
		getRecord('#' 10 x(1))
		unifyLiteral('lock ')
		unifyVariable(x(1))
		unifyLiteral(' then')
		unifyValue(g(0))
		unifyValVar(g(1) y(0))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		unifyVariable(x(2))
		inlineAt(lockVar x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(1) x(2) y(0) x(3))
		deAllocateL2
		genFastCall(<Q: 1259> 9)
		endDefinition(205792)
lbl(205855)	definition(x(9) 205890 pid('LockNode,output/slow' 1 pos('./compiler/Core.oz' 761 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1333> 5)
		endDefinition(205855)
lbl(205890)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('LockNode' x(5))
		createVariableMove(y(25) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) classNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(27))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attributes designator features isToplevel methods parents printName properties] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
		setConstant('')
		setConstant(unit)
lbl(205994)	definition(x(7) 206038 pid('ClassNode,init/fast' 7 pos('./compiler/Core.oz' 775 6) nil 7) <Q: 1334> nil)
		inlineAssign(designator x(0) cache)
		inlineAssign(parents x(1) cache)
		inlineAssign(properties x(2) cache)
		inlineAssign(attributes x(3) cache)
		inlineAssign(features x(4) cache)
		inlineAssign(methods x(5) cache)
		inlineAssign(coord x(6) cache)
		return
		endDefinition(205994)
lbl(206038)	definition(x(9) 206103 pid('ClassNode,init/slow' 1 pos('./compiler/Core.oz' 775 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1334> 15)
		endDefinition(206038)
lbl(206103)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(206113)	definition(x(7) 206127 pid('ClassNode,setPrintName/fast' 1 pos('./compiler/Core.oz' 784 6) nil 1) <Q: 1335> nil)
		inlineAssign(printName x(0) cache)
		return
		endDefinition(206113)
lbl(206127)	definition(x(9) 206153 pid('ClassNode,setPrintName/slow' 1 pos('./compiler/Core.oz' 784 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1335> 3)
		endDefinition(206127)
lbl(206153)	putRecord('#' [1 2 fast] x(11))
		setConstant(setPrintName)
		setValue(x(9))
		setValue(x(7))
lbl(206163)	definition(x(7) 206797 pid('ClassNode,output/fast' 2 pos('./compiler/Core.oz' 787 6) nil 5) <Q: 1336> [y(49) y(50) y(54) y(51) y(53) y(52)])
		allocateL9
		getRecord('#' 13 x(1))
		unifyLiteral('class ')
		unifyVariable(x(1))
		unifyValVar(g(0) x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(designator x(3) cache)
		move(x(0) y(6))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(parents x(0) cache)
		testLiteral(x(0) nil 206263)
lbl(206222)	inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206263)
lbl(206231)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206263)
lbl(206240)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206263)
lbl(206249)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206263)
lbl(206258)	getLiteral(nil y(0))
		branch(206266)
lbl(206263)	unify(y(0) g(2))
lbl(206266)	inlineAt(parents x(0) cache)
		testList(x(0) 206350)
lbl(206274)	getRecord('#' 7 y(1))
		unifyValue(g(3))
		unifyLiteral('from')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(parents x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(properties x(0) cache)
		testLiteral(x(0) nil 206345)
lbl(206313)	inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206345)
lbl(206322)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206345)
lbl(206331)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206345)
lbl(206340)	getLiteral(nil y(0))
		branch(206353)
lbl(206345)	unify(y(0) g(2))
		branch(206353)
lbl(206350)	getLiteral(nil y(1))
lbl(206353)	inlineAt(properties x(0) cache)
		testList(x(0) 206428)
lbl(206361)	getRecord('#' 7 y(2))
		unifyValue(g(3))
		unifyLiteral('prop')
		unifyValVar(g(4) x(4))
		unifyValVar(g(5) x(3))
		unifyVariable(y(0))
		inlineAt(properties x(0) cache)
		move(g(4) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1260> 10)
		inlineAt(attributes x(0) cache)
		testLiteral(x(0) nil 206423)
lbl(206400)	inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206423)
lbl(206409)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206423)
lbl(206418)	getLiteral(nil y(0))
		branch(206431)
lbl(206423)	unify(y(0) g(2))
		branch(206431)
lbl(206428)	getLiteral(nil y(2))
lbl(206431)	inlineAt(attributes x(0) cache)
		testList(x(0) 206606)
lbl(206439)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(7))
		setVariable(y(8))
lbl(206462)	definition(x(1) 206528 pid('' 3 pos('./compiler/Core.oz' 821 9) nil 7) unit [y(6)])
		shallowGuard(206515)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206478)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206515)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(821)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206462)
lbl(206528)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(3))
		unifyValue(g(3))
		unifyLiteral('attr')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(8) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(7) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(features x(0) cache)
		testLiteral(x(0) nil 206601)
lbl(206587)	inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206601)
lbl(206596)	getLiteral(nil y(0))
		branch(206609)
lbl(206601)	unify(y(0) g(2))
		branch(206609)
lbl(206606)	getLiteral(nil y(3))
lbl(206609)	inlineAt(features x(0) cache)
		testList(x(0) 206775)
lbl(206617)	getVarVar(x(0) y(0))
		move(y(6) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1262> 8)
		putRecord('#' 2 x(3))
		setVariable(y(3))
		setVariable(y(7))
lbl(206640)	definition(x(1) 206706 pid('' 3 pos('./compiler/Core.oz' 831 9) nil 7) unit [y(6)])
		shallowGuard(206693)
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(206656)	shallowThen
		getRecord('#' 2 x(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(0))
		unifyVariable(x(5))
		unifyValue(x(3))
		getRecord('#' 2 x(2))
		unifyValVar(x(4) x(6))
		move(x(1) x(0))
		move(g(0) x(1))
		move(x(6) x(2))
		move(x(5) x(3))
		genFastCall(<Q: 1262> 9)
lbl(206693)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(831)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(206640)
lbl(206706)	putList(x(0))
		setValue(y(2))
		setConstant(nil)
		putRecord('#' 2 x(2))
		setValue(x(0))
		setValue(y(1))
		move(y(0) x(0))
		genFastCall(<P: 30> 8)
		getRecord('#' 7 y(4))
		unifyValue(g(3))
		unifyLiteral('feat')
		unifyValVar(g(4) x(0))
		unifyValue(g(5))
		unifyValVar(y(7) y(0))
		getRecord(list 2 x(0))
		unifyVariable(x(1))
		unifyValue(g(4))
		move(y(3) x(0))
		genFastCall(<P: 28> 4)
		inlineAt(methods x(0) cache)
		testLiteral(x(0) nil 206770)
lbl(206765)	getLiteral(nil y(0))
		branch(206778)
lbl(206770)	unify(y(0) g(2))
		branch(206778)
lbl(206775)	getLiteral(nil y(4))
lbl(206778)	inlineAt(methods x(0) cache)
		move(g(2) x(1))
		moveMoveYXYX(y(6) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1259> 9)
		endDefinition(206163)
lbl(206797)	definition(x(9) 206832 pid('ClassNode,output/slow' 1 pos('./compiler/Core.oz' 787 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1336> 5)
		endDefinition(206797)
lbl(206832)	putRecord('#' [1 2 fast] x(12))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ClassNode' x(5))
		createVariableMove(y(26) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) method x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) method x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(28))
		setValue(x(8))
		putRecord('attr' [allVariables coord formalArgs label predicateRef statements] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(206922)	definition(x(8) 206971 pid('Method,init/fast' 4 pos('./compiler/Core.oz' 846 6) nil 4) <Q: 1337> nil)
		allocateL2
		inlineAssign(label x(0) cache)
		inlineAssign(formalArgs x(1) cache)
		move(x(3) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(206922)
lbl(206971)	definition(x(9) 207018 pid('Method,init/slow' 1 pos('./compiler/Core.oz' 846 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1337> 9)
		endDefinition(206971)
lbl(207018)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207028)	definition(x(8) 207042 pid('Method,setAllVariables/fast' 1 pos('./compiler/Core.oz' 852 6) nil 1) <Q: 1338> nil)
		inlineAssign(allVariables x(0) cache)
		return
		endDefinition(207028)
lbl(207042)	definition(x(9) 207068 pid('Method,setAllVariables/slow' 1 pos('./compiler/Core.oz' 852 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1338> 3)
		endDefinition(207042)
lbl(207068)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAllVariables)
		setValue(x(9))
		setValue(x(8))
lbl(207078)	definition(x(8) 207095 pid('Method,getCoord/fast' 1 pos('./compiler/Core.oz' 855 6) nil 2) <Q: 1339> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207078)
lbl(207095)	definition(x(9) 207121 pid('Method,getCoord/slow' 1 pos('./compiler/Core.oz' 855 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1339> 3)
		endDefinition(207095)
lbl(207121)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(207131)	definition(x(8) 207221 pid('Method,output/fast' 2 pos('./compiler/Core.oz' 858 6) nil 5) <Q: 1340> [y(51) y(52) y(49) y(54) y(50) y(53)])
		allocateL4
		getRecord('#' 15 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyLiteral(')')
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(1))
		unifyValVar(g(3) y(2))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(3))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(3) x(2) y(1) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL4
		genFastCall(<Q: 1259> 9)
		endDefinition(207131)
lbl(207221)	definition(x(9) 207256 pid('Method,output/slow' 1 pos('./compiler/Core.oz' 858 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1340> 5)
		endDefinition(207221)
lbl(207256)	putRecord('#' [1 2 fast] x(13))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 4 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Method' x(5))
		createVariableMove(y(27) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methodWithDesignator x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methodWithDesignator x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(29))
		setValue(x(8))
		putList(x(8))
		setValue(y(27))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isOpen messageDesignator] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207355)	definition(x(7) 207396 pid('MethodWithDesignator,init/fast' 6 pos('./compiler/Core.oz' 869 6) nil 6) <Q: 1341> [y(27)])
		allocateL2
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(4) x(2))
		move(x(5) x(3))
		genCall(gci(g(0) true init false 4) 0)
		move(y(0) x(0))
		inlineAssign(isOpen x(0) cache)
		move(y(1) x(0))
		inlineAssign(messageDesignator x(0) cache)
		deAllocateL2
		return
		endDefinition(207355)
lbl(207396)	definition(x(9) 207455 pid('MethodWithDesignator,init/slow' 1 pos('./compiler/Core.oz' 869 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1341> 13)
		endDefinition(207396)
lbl(207455)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(207465)	definition(x(7) 207624 pid('MethodWithDesignator,output/fast' 2 pos('./compiler/Core.oz' 874 6) nil 5) <Q: 1342> [y(51) y(52) y(49) y(54) y(50) y(53)])
		allocateL6
		getRecord('#' 17 x(1))
		unifyLiteral('meth ')
		unifyVariable(x(1))
		unifyLiteral('(')
		unifyValVar(g(0) y(0))
		unifyVariable(y(1))
		unifyLiteral(') = ')
		unifyVariable(y(2))
		unifyValue(g(1))
		unifyValVar(g(2) x(2))
		unifyVariable(y(3))
		unifyValVar(g(3) y(4))
		unifyValue(g(4))
		unifyValue(g(3))
		unifyLiteral('end')
		inlineAt(label x(3) cache)
		move(x(0) y(5))
		sendMsg(outputEscaped2 x(3) 3 cache)
		inlineAt(formalArgs x(0) cache)
		move(g(5) x(1))
		moveMoveYXYX(y(5) x(2) y(3) x(3))
		move(y(0) x(4))
		genFastCall(<Q: 1260> 10)
		inlineAt(isOpen x(0) cache)
		testBool(x(0) 207573 207578)
		inlineAt(formalArgs x(0) cache)
		testLiteral(x(0) nil 207563)
lbl(207558)	getLiteral('...' y(1))
		branch(207589)
lbl(207563)	getRecord('#' 2 y(1))
		unifyValue(g(5))
		unifyLiteral('...')
		branch(207589)
lbl(207573)	getLiteral(nil y(1))
		branch(207589)
lbl(207578)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(877)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(207589)	inlineAt(messageDesignator x(2) cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		sendMsg(output x(2) 2 cache)
		inlineAt(statements x(0) cache)
		move(g(3) x(1))
		moveMoveYXYX(y(5) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1259> 9)
		endDefinition(207465)
lbl(207624)	definition(x(9) 207659 pid('MethodWithDesignator,output/slow' 1 pos('./compiler/Core.oz' 874 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1342> 5)
		endDefinition(207624)
lbl(207659)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethodWithDesignator' x(5))
		createVariableMove(y(28) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormal x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormal x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(30))
		setValue(x(8))
		putRecord('attr' [arg feature] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(207739)	definition(x(8) 207758 pid('MethFormal,init/fast' 2 pos('./compiler/Core.oz' 888 6) nil 2) <Q: 1343> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		return
		endDefinition(207739)
lbl(207758)	definition(x(9) 207793 pid('MethFormal,init/slow' 1 pos('./compiler/Core.oz' 888 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1343> 5)
		endDefinition(207758)
lbl(207793)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(207803)	definition(x(8) 207820 pid('MethFormal,getFeature/fast' 1 pos('./compiler/Core.oz' 892 6) nil 2) <Q: 1344> nil)
		inlineAt(feature x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207803)
lbl(207820)	definition(x(9) 207846 pid('MethFormal,getFeature/slow' 1 pos('./compiler/Core.oz' 892 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1344> 3)
		endDefinition(207820)
lbl(207846)	putRecord('#' [1 2 fast] x(11))
		setConstant(getFeature)
		setValue(x(9))
		setValue(x(8))
lbl(207856)	definition(x(8) 207873 pid('MethFormal,getVariable/fast' 1 pos('./compiler/Core.oz' 895 6) nil 2) <Q: 1345> nil)
		inlineAt(arg x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(207856)
lbl(207873)	definition(x(9) 207899 pid('MethFormal,getVariable/slow' 1 pos('./compiler/Core.oz' 895 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1345> 3)
		endDefinition(207873)
lbl(207899)	putRecord('#' [1 2 fast] x(12))
		setConstant('getVariable')
		setValue(x(9))
		setValue(x(8))
lbl(207909)	definition(x(8) 207921 pid('MethFormal,hasDefault/fast' 1 pos('./compiler/Core.oz' 898 6) nil 1) <Q: 1346> nil)
		getLiteral(false x(0))
		return
		endDefinition(207909)
lbl(207921)	definition(x(9) 207947 pid('MethFormal,hasDefault/slow' 1 pos('./compiler/Core.oz' 898 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1346> 3)
		endDefinition(207921)
lbl(207947)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(8))
lbl(207957)	definition(x(8) 208007 pid('MethFormal,output2/fast' 3 pos('./compiler/Core.oz' 901 6) nil 4) <Q: 1347> nil)
		allocateL2
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(': ')
		unifyVariable(y(0))
		inlineAt(feature x(3) cache)
		move(x(0) y(1))
		sendMsg(output2 x(3) 3 cache)
		inlineAt(arg x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(207957)
lbl(208007)	definition(x(9) 208048 pid('MethFormal,output2/slow' 1 pos('./compiler/Core.oz' 901 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1347> 7)
		endDefinition(208007)
lbl(208048)	putRecord('#' [1 2 fast] x(14))
		setConstant(output2)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 5 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('MethFormal' x(5))
		createVariableMove(y(29) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalOptional x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalOptional x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(31))
		setValue(x(8))
		putList(x(8))
		setValue(y(29))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isInitialized] x(2))
		setConstant(unit)
lbl(208147)	definition(x(7) 208171 pid('MethFormalOptional,init/fast' 3 pos('./compiler/Core.oz' 910 6) nil 3) <Q: 1348> nil)
		inlineAssign(feature x(0) cache)
		inlineAssign(arg x(1) cache)
		inlineAssign(isInitialized x(2) cache)
		return
		endDefinition(208147)
lbl(208171)	definition(x(9) 208212 pid('MethFormalOptional,init/slow' 1 pos('./compiler/Core.oz' 910 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1348> 7)
		endDefinition(208171)
lbl(208212)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208222)	definition(x(7) 208234 pid('MethFormalOptional,hasDefault/fast' 1 pos('./compiler/Core.oz' 915 6) nil 1) <Q: 1349> nil)
		getLiteral(true x(0))
		return
		endDefinition(208222)
lbl(208234)	definition(x(9) 208260 pid('MethFormalOptional,hasDefault/slow' 1 pos('./compiler/Core.oz' 915 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1349> 3)
		endDefinition(208234)
lbl(208260)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208270)	definition(x(7) 208289 pid('MethFormalOptional,output2/fast' 3 pos('./compiler/Core.oz' 918 6) nil 3) <Q: 1350> [y(29)])
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= _')
		genCall(gci(g(0) true output2 true 3) 0)
		endDefinition(208270)
lbl(208289)	definition(x(9) 208330 pid('MethFormalOptional,output2/slow' 1 pos('./compiler/Core.oz' 918 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1350> 7)
		endDefinition(208289)
lbl(208330)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalOptional' x(5))
		createVariableMove(y(30) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) methFormalWithDefault x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(32))
		setValue(x(8))
		putList(x(8))
		setValue(y(29))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [default] x(2))
		setConstant(unit)
lbl(208422)	definition(x(7) 208447 pid('MethFormalWithDefault,init/fast' 3 pos('./compiler/Core.oz' 927 6) nil 3) <Q: 1351> [y(29)])
		allocateL1
		move(x(2) y(0))
		genCall(gci(g(0) true init false 2) 0)
		move(y(0) x(0))
		inlineAssign(default x(0) cache)
		deAllocateL1
		return
		endDefinition(208422)
lbl(208447)	definition(x(9) 208488 pid('MethFormalWithDefault,init/slow' 1 pos('./compiler/Core.oz' 927 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1351> 7)
		endDefinition(208447)
lbl(208488)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208498)	definition(x(7) 208510 pid('MethFormalWithDefault,hasDefault/fast' 1 pos('./compiler/Core.oz' 931 6) nil 1) <Q: 1352> nil)
		getLiteral(true x(0))
		return
		endDefinition(208498)
lbl(208510)	definition(x(9) 208536 pid('MethFormalWithDefault,hasDefault/slow' 1 pos('./compiler/Core.oz' 931 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1352> 3)
		endDefinition(208510)
lbl(208536)	putRecord('#' [1 2 fast] x(11))
		setConstant(hasDefault)
		setValue(x(9))
		setValue(x(7))
lbl(208546)	definition(x(7) 208598 pid('MethFormalWithDefault,output2/fast' 3 pos('./compiler/Core.oz' 934 6) nil 6) <Q: 1353> [y(29) y(0)])
		allocateL1
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' <= ')
		unifyVariable(y(0))
		genCall(gci(g(0) true output2 false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(default x(5) cache)
		move(x(5) x(0))
		move(y(0) x(3))
		putConstant(50 x(1))
		putConstant(1000 x(2))
		deAllocateL1
		tailCall(x(4) 4)
		endDefinition(208546)
lbl(208598)	definition(x(9) 208639 pid('MethFormalWithDefault,output2/slow' 1 pos('./compiler/Core.oz' 934 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1353> 7)
		endDefinition(208598)
lbl(208639)	putRecord('#' [1 2 fast] x(12))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 3 x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('MethFormalWithDefault' x(5))
		createVariableMove(y(31) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) objectLockNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) objectLockNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(33))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [statements] x(2))
		setConstant(unit)
lbl(208731)	definition(x(7) 208767 pid('ObjectLockNode,init/fast' 2 pos('./compiler/Core.oz' 945 6) nil 2) <Q: 1354> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(1) x(0))
		inlineAssign(statements x(0) cache)
		move(y(0) x(0))
		inlineAssign(coord x(0) cache)
		deAllocateL2
		return
		endDefinition(208731)
lbl(208767)	definition(x(9) 208802 pid('ObjectLockNode,init/slow' 1 pos('./compiler/Core.oz' 945 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1354> 5)
		endDefinition(208767)
lbl(208802)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(208812)	definition(x(7) 208854 pid('ObjectLockNode,output/fast' 2 pos('./compiler/Core.oz' 949 6) nil 5) <Q: 1355> [y(49) y(54) y(50)])
		getRecord('#' 7 x(1))
		unifyLiteral('lock')
		unifyValue(g(0))
		unifyValVar(g(1) x(3))
		unifyValue(g(2))
		unifyValue(g(1))
		unifyLiteral('end')
		inlineAt(statements x(4) cache)
		move(x(0) x(2))
		move(x(4) x(0))
		move(g(1) x(1))
		genFastCall(<Q: 1259> 9)
		endDefinition(208812)
lbl(208854)	definition(x(9) 208889 pid('ObjectLockNode,output/slow' 1 pos('./compiler/Core.oz' 949 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1355> 5)
		endDefinition(208854)
lbl(208889)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('ObjectLockNode' x(5))
		createVariableMove(y(32) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'getSelf' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'getSelf' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(34))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [destination] x(2))
		setConstant(unit)
lbl(208979)	definition(x(7) 208998 pid('GetSelf,init/fast' 2 pos('./compiler/Core.oz' 958 6) nil 2) <Q: 1356> nil)
		inlineAssign(destination x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(208979)
lbl(208998)	definition(x(9) 209033 pid('GetSelf,init/slow' 1 pos('./compiler/Core.oz' 958 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1356> 5)
		endDefinition(208998)
lbl(209033)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209043)	definition(x(7) 209072 pid('GetSelf,output/fast' 2 pos('./compiler/Core.oz' 962 6) nil 4) <Q: 1357> nil)
		getRecord('#' 3 x(1))
		unifyVariable(x(1))
		unifyLiteral(' = self')
		unifyVariable(x(2))
		inlineAt(destination x(3) cache)
		tailSendMsg(output2 x(3) 3 cache)
		endDefinition(209043)
lbl(209072)	definition(x(9) 209107 pid('GetSelf,output/slow' 1 pos('./compiler/Core.oz' 962 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1357> 5)
		endDefinition(209072)
lbl(209107)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('GetSelf' x(5))
		createVariableMove(y(33) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) failNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(35))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209176)	definition(x(7) 209190 pid('FailNode,init/fast' 1 pos('./compiler/Core.oz' 970 6) nil 1) <Q: 1358> nil)
		inlineAssign(coord x(0) cache)
		return
		endDefinition(209176)
lbl(209190)	definition(x(9) 209216 pid('FailNode,init/slow' 1 pos('./compiler/Core.oz' 970 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1358> 3)
		endDefinition(209190)
lbl(209216)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209226)	definition(x(7) 209238 pid('FailNode,output/fast' 2 pos('./compiler/Core.oz' 973 6) nil 2) <Q: 1359> nil)
		getLiteral('fail' x(1))
		return
		endDefinition(209226)
lbl(209238)	definition(x(9) 209273 pid('FailNode,output/slow' 1 pos('./compiler/Core.oz' 973 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1359> 5)
		endDefinition(209238)
lbl(209273)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FailNode' x(5))
		createVariableMove(y(34) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) ifNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) ifNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(36))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [alternative clauses] x(2))
		setConstant(unit)
		setConstant(unit)
lbl(209365)	definition(x(7) 209389 pid('IfNode,init/fast' 3 pos('./compiler/Core.oz' 982 6) nil 3) <Q: 1360> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(alternative x(1) cache)
		inlineAssign(coord x(2) cache)
		return
		endDefinition(209365)
lbl(209389)	definition(x(9) 209430 pid('IfNode,init/slow' 1 pos('./compiler/Core.oz' 982 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1360> 7)
		endDefinition(209389)
lbl(209430)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
lbl(209440)	definition(x(7) 209511 pid('IfNode,output/fast' 2 pos('./compiler/Core.oz' 987 6) nil 5) <Q: 1361> [y(49) y(50) y(54)])
		allocateL2
		getRecord('#' 7 x(1))
		unifyLiteral('cond ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValVar(g(2) y(0))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) y(1))
		move(x(4) x(0))
		move(y(1) x(2))
		genFastCall(<Q: 1259> 8)
		inlineAt(alternative x(2) cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(209440)
lbl(209511)	definition(x(9) 209546 pid('IfNode,output/slow' 1 pos('./compiler/Core.oz' 987 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1361> 5)
		endDefinition(209511)
lbl(209546)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(7))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant('IfNode' x(5))
		createVariableMove(y(35) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) choicesAndDisjunctions x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) choicesAndDisjunctions x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(37))
		setValue(x(8))
		putList(x(8))
		setValue(y(60))
		setValue(x(7))
		putRecord('attr' [clauses] x(2))
		setConstant(unit)
lbl(209630)	definition(x(7) 209649 pid('ChoicesAndDisjunctions,init/fast' 2 pos('./compiler/Core.oz' 997 6) nil 2) <Q: 1362> nil)
		inlineAssign(clauses x(0) cache)
		inlineAssign(coord x(1) cache)
		return
		endDefinition(209630)
lbl(209649)	definition(x(9) 209684 pid('ChoicesAndDisjunctions,init/slow' 1 pos('./compiler/Core.oz' 997 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1362> 5)
		endDefinition(209649)
lbl(209684)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(7))
		setValue(x(10))
		move(x(8) x(0))
		move(x(7) x(1))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('ChoicesAndDisjunctions' x(5))
		createVariableMove(y(36) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) orNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(38))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209754)	definition(x(7) 209803 pid('OrNode,output/fast' 2 pos('./compiler/Core.oz' 1005 6) nil 5) <Q: 1363> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('or ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(209754)
lbl(209803)	definition(x(9) 209838 pid('OrNode,output/slow' 1 pos('./compiler/Core.oz' 1005 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1363> 5)
		endDefinition(209803)
lbl(209838)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('OrNode' x(5))
		createVariableMove(y(37) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) disNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(39))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(209905)	definition(x(7) 209954 pid('DisNode,output/fast' 2 pos('./compiler/Core.oz' 1012 6) nil 5) <Q: 1364> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('dis ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(209905)
lbl(209954)	definition(x(9) 209989 pid('DisNode,output/slow' 1 pos('./compiler/Core.oz' 1012 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1364> 5)
		endDefinition(209954)
lbl(209989)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('DisNode' x(5))
		createVariableMove(y(38) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) choiceNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(40))
		setValue(x(8))
		putList(x(8))
		setValue(y(36))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(210056)	definition(x(7) 210105 pid('ChoiceNode,output/fast' 2 pos('./compiler/Core.oz' 1019 6) nil 5) <Q: 1365> [y(49) y(50) y(54)])
		getRecord('#' 6 x(1))
		unifyLiteral('choice ')
		unifyValVar(g(0) x(3))
		unifyValue(g(1))
		unifyValue(g(2))
		unifyLiteral('end')
		inlineAt(clauses x(4) cache)
		putRecord('#' 4 x(1))
		setValue(g(1))
		setValue(g(2))
		setConstant('[] ')
		setValue(g(0))
		move(x(0) x(2))
		move(x(4) x(0))
		genFastCall(<Q: 1259> 9)
		endDefinition(210056)
lbl(210105)	definition(x(9) 210140 pid('ChoiceNode,output/slow' 1 pos('./compiler/Core.oz' 1019 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1365> 5)
		endDefinition(210105)
lbl(210140)	putRecord('#' [1 2 fast] x(10))
		setConstant(output)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 1 x(1))
		setValue(x(10))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('ChoiceNode' x(5))
		createVariableMove(y(39) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) 'clause' x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) 'clause' x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(41))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [guard kind localVars statements] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(210228)	definition(x(8) 210291 pid('Clause,init/fast' 4 pos('./compiler/Core.oz' 1028 6) nil 4) <Q: 1366> nil)
		allocateL3
		inlineAssign(localVars x(0) cache)
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		move(x(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(2) x(0))
		inlineAssign(guard x(0) cache)
		move(y(0) x(0))
		inlineAssign(kind x(0) cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1268> 4)
		move(y(0) x(0))
		inlineAssign(statements x(0) cache)
		deAllocateL3
		return
		endDefinition(210228)
lbl(210291)	definition(x(9) 210338 pid('Clause,init/slow' 1 pos('./compiler/Core.oz' 1028 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1366> 9)
		endDefinition(210291)
lbl(210338)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(210348)	definition(x(8) 210495 pid('Clause,output/fast' 2 pos('./compiler/Core.oz' 1034 6) nil 6) <Q: 1367> [y(50) y(54) y(49) y(53)])
		allocateL3
		getRecord('#' 8 x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(g(0))
		unifyValue(g(1))
		unifyLiteral('then')
		unifyValue(g(2))
		unifyValVar(g(1) x(3))
		inlineAt(localVars x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		match(x(4) ht(210433 [onScalar(nil 210390) onRecord('|' 2 210395)]))
lbl(210390)	getLiteral(nil x(1))
		branch(210446)
lbl(210395)	getRecord('#' 6 x(1))
		unifyVariable(x(4))
		unifyValue(g(0))
		unifyValue(g(3))
		unifyLiteral('in')
		unifyValue(g(2))
		unifyValue(g(1))
		inlineAt(localVars x(5) cache)
		move(x(5) x(0))
		move(g(3) x(1))
		move(y(0) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1259> 8)
		branch(210446)
lbl(210433)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1038)
		setValue(x(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(210446)	inlineAt(guard x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(1) x(3))
		genFastCall(<Q: 1259> 8)
		inlineAt(kind x(0) cache)
		testLiteral(x(0) 'waitTop' 210476)
lbl(210471)	getLiteral('skip   % top commit' y(2))
		deAllocateL3
		return
lbl(210476)	inlineAt(statements x(0) cache)
		move(g(1) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		deAllocateL3
		genFastCall(<Q: 1259> 9)
		endDefinition(210348)
lbl(210495)	definition(x(9) 210530 pid('Clause,output/slow' 1 pos('./compiler/Core.oz' 1034 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1367> 5)
		endDefinition(210495)
lbl(210530)	putRecord('#' [1 2 fast] x(11))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 2 x(8))
		setValue(x(10))
		setValue(x(11))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('feat' x(3))
		putConstant('Clause' x(5))
		createVariableMove(y(40) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) valueNode x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) valueNode x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(42))
		setValue(x(8))
		putRecord('attr' [coord value] x(2))
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(57))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(210630)	definition(x(8) 210660 pid('ValueNode,init/fast' 2 pos('./compiler/Core.oz' 1049 6) nil 2) <Q: 1368> [y(1)])
		inlineAssign(value x(0) cache)
		inlineAssign(coord x(1) cache)
		move(g(0) x(0))
		inlineDot(x(0) valueNode x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(210630)
lbl(210660)	definition(x(10) 210695 pid('ValueNode,init/slow' 1 pos('./compiler/Core.oz' 1049 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1368> 5)
		endDefinition(210660)
lbl(210695)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(210705)	definition(x(8) 210717 pid('ValueNode,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1054 6) nil 1) <Q: 1369> nil)
		getLiteral(false x(0))
		return
		endDefinition(210705)
lbl(210717)	definition(x(10) 210743 pid('ValueNode,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1054 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1369> 3)
		endDefinition(210717)
lbl(210743)	putRecord('#' [1 2 fast] x(12))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(210753)	definition(x(8) 210765 pid('ValueNode,isConstruction/fast' 1 pos('./compiler/Core.oz' 1057 6) nil 1) <Q: 1370> nil)
		getLiteral(false x(0))
		return
		endDefinition(210753)
lbl(210765)	definition(x(10) 210791 pid('ValueNode,isConstruction/slow' 1 pos('./compiler/Core.oz' 1057 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1370> 3)
		endDefinition(210765)
lbl(210791)	putRecord('#' [1 2 fast] x(13))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
lbl(210801)	definition(x(8) 210818 pid('ValueNode,getCoord/fast' 1 pos('./compiler/Core.oz' 1060 6) nil 2) <Q: 1371> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210801)
lbl(210818)	definition(x(10) 210844 pid('ValueNode,getCoord/slow' 1 pos('./compiler/Core.oz' 1060 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1371> 3)
		endDefinition(210818)
lbl(210844)	putRecord('#' [1 2 fast] x(14))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(210854)	definition(x(8) 210871 pid('ValueNode,getValue/fast' 1 pos('./compiler/Core.oz' 1063 6) nil 2) <Q: 1372> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(210854)
lbl(210871)	definition(x(10) 210897 pid('ValueNode,getValue/slow' 1 pos('./compiler/Core.oz' 1063 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1372> 3)
		endDefinition(210871)
lbl(210897)	putRecord('#' [1 2 fast] x(15))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(210907)	definition(x(8) 210923 pid('ValueNode,outputEscaped2/fast' 3 pos('./compiler/Core.oz' 1066 6) nil 5) <Q: 1373> nil)
		getSelf(x(4))
		tailSendMsg(output2 x(4) 3 cache)
		endDefinition(210907)
lbl(210923)	definition(x(10) 210964 pid('ValueNode,outputEscaped2/slow' 1 pos('./compiler/Core.oz' 1066 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1373> 7)
		endDefinition(210923)
lbl(210964)	putRecord('#' [1 2 fast] x(16))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 6 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('ValueNode' x(5))
		createVariableMove(y(41) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) atomNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(43))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211044)	definition(x(7) 211084 pid('AtomNode,output2/fast' 3 pos('./compiler/Core.oz' 1074 6) nil 6) <Q: 1374> [y(0)])
		getLiteral(nil x(2))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(1) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211044)
lbl(211084)	definition(x(9) 211125 pid('AtomNode,output2/slow' 1 pos('./compiler/Core.oz' 1074 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1374> 7)
		endDefinition(211084)
lbl(211125)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211135)	definition(x(7) 211175 pid('AtomNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1078 6) nil 6) <Q: 1375> [y(0)])
		getLiteral(nil x(3))
		move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		inlineAt(value x(5) cache)
		move(x(5) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
		endDefinition(211135)
lbl(211175)	definition(x(9) 211222 pid('AtomNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1078 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1375> 9)
		endDefinition(211175)
lbl(211222)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('AtomNode' x(5))
		createVariableMove(y(42) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) intNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(44))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211291)	definition(x(7) 211344 pid('IntNode,output2/fast' 3 pos('./compiler/Core.oz' 1087 6) nil 4) <Q: 1376> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0 x(2))
		testLT(x(0) x(2) x(3) 211333)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211333)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211291)
lbl(211344)	definition(x(9) 211385 pid('IntNode,output2/slow' 1 pos('./compiler/Core.oz' 1087 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1376> 7)
		endDefinition(211344)
lbl(211385)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211395)	definition(x(7) 211448 pid('IntNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1091 6) nil 4) <Q: 1377> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0 x(1))
		testLT(x(0) x(1) x(3) 211437)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211437)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211395)
lbl(211448)	definition(x(9) 211495 pid('IntNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1091 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1377> 9)
		endDefinition(211448)
lbl(211495)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('IntNode' x(5))
		createVariableMove(y(43) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) floatNode x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(3))
		setValue(x(8))
		putList(x(8))
		setValue(y(41))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
lbl(211564)	definition(x(7) 211617 pid('FloatNode,output2/fast' 3 pos('./compiler/Core.oz' 1100 6) nil 4) <Q: 1378> nil)
		getLiteral(nil x(2))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(2))
		testLT(x(0) x(2) x(3) 211606)
		getRecord('#' 2 x(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211606)	inlineAt(value x(0) cache)
		unify(x(0) x(1))
		return
		endDefinition(211564)
lbl(211617)	definition(x(9) 211658 pid('FloatNode,output2/slow' 1 pos('./compiler/Core.oz' 1100 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1378> 7)
		endDefinition(211617)
lbl(211658)	putRecord('#' [1 2 fast] x(10))
		setConstant(output2)
		setValue(x(9))
		setValue(x(7))
lbl(211668)	definition(x(7) 211721 pid('FloatNode,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1104 6) nil 4) <Q: 1379> nil)
		getLiteral(nil x(3))
		inlineAt(value x(0) cache)
		putConstant(0.0 x(1))
		testLT(x(0) x(1) x(3) 211710)
		getRecord('#' 2 x(2))
		unifyLiteral('~')
		unifyVariable(x(0))
		inlineAt(value x(1) cache)
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
lbl(211710)	inlineAt(value x(0) cache)
		unify(x(0) x(2))
		return
		endDefinition(211668)
lbl(211721)	definition(x(9) 211768 pid('FloatNode,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1104 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1379> 9)
		endDefinition(211721)
lbl(211768)	putRecord('#' [1 2 fast] x(11))
		setConstant(outputPattern2)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(10))
		setValue(x(11))
		move(x(8) x(0))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('FloatNode' x(5))
		createVariableMove(y(3) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variable x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variable x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(45))
		setValue(x(8))
		putRecord('attr' [coord isToplevel origin printName] x(2))
		setConstant(unit)
		setConstant(false)
		setConstant(unit)
		setConstant(unit)
lbl(211852)	definition(x(8) 211887 pid('Variable,init/fast' 3 pos('./compiler/Core.oz' 1113 6) nil 3) <Q: 1380> [y(1)])
		inlineAssign(printName x(0) cache)
		inlineAssign(origin x(1) cache)
		inlineAssign(coord x(2) cache)
		move(g(0) x(0))
		inlineDot(x(0) variable x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(211852)
lbl(211887)	definition(x(9) 211928 pid('Variable,init/slow' 1 pos('./compiler/Core.oz' 1113 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1380> 7)
		endDefinition(211887)
lbl(211928)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
lbl(211938)	definition(x(8) 211950 pid('Variable,isRestricted/fast' 1 pos('./compiler/Core.oz' 1119 6) nil 1) <Q: 1381> nil)
		getLiteral(false x(0))
		return
		endDefinition(211938)
lbl(211950)	definition(x(9) 211976 pid('Variable,isRestricted/slow' 1 pos('./compiler/Core.oz' 1119 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1381> 3)
		endDefinition(211950)
lbl(211976)	putRecord('#' [1 2 fast] x(11))
		setConstant(isRestricted)
		setValue(x(9))
		setValue(x(8))
lbl(211986)	definition(x(8) 212001 pid('Variable,isDenied/fast' 3 pos('./compiler/Core.oz' 1122 6) nil 3) <Q: 1382> nil)
		getLiteral(unit x(1))
		getLiteral(false x(2))
		return
		endDefinition(211986)
lbl(212001)	definition(x(9) 212042 pid('Variable,isDenied/slow' 1 pos('./compiler/Core.oz' 1122 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1382> 7)
		endDefinition(212001)
lbl(212042)	putRecord('#' [1 2 fast] x(12))
		setConstant(isDenied)
		setValue(x(9))
		setValue(x(8))
lbl(212052)	definition(x(8) 212069 pid('Variable,getPrintName/fast' 1 pos('./compiler/Core.oz' 1126 6) nil 2) <Q: 1383> nil)
		inlineAt(printName x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212052)
lbl(212069)	definition(x(9) 212095 pid('Variable,getPrintName/slow' 1 pos('./compiler/Core.oz' 1126 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1383> 3)
		endDefinition(212069)
lbl(212095)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPrintName)
		setValue(x(9))
		setValue(x(8))
lbl(212105)	definition(x(8) 212122 pid('Variable,getOrigin/fast' 1 pos('./compiler/Core.oz' 1129 6) nil 2) <Q: 1384> nil)
		inlineAt(origin x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212105)
lbl(212122)	definition(x(9) 212148 pid('Variable,getOrigin/slow' 1 pos('./compiler/Core.oz' 1129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1384> 3)
		endDefinition(212122)
lbl(212148)	putRecord('#' [1 2 fast] x(14))
		setConstant(getOrigin)
		setValue(x(9))
		setValue(x(8))
lbl(212158)	definition(x(8) 212175 pid('Variable,getCoord/fast' 1 pos('./compiler/Core.oz' 1132 6) nil 2) <Q: 1385> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212158)
lbl(212175)	definition(x(9) 212201 pid('Variable,getCoord/slow' 1 pos('./compiler/Core.oz' 1132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1385> 3)
		endDefinition(212175)
lbl(212201)	putRecord('#' [1 2 fast] x(15))
		setConstant(getCoord)
		setValue(x(9))
		setValue(x(8))
lbl(212211)	definition(x(8) 212225 pid('Variable,setToplevel/fast' 1 pos('./compiler/Core.oz' 1135 6) nil 1) <Q: 1386> nil)
		inlineAssign(isToplevel x(0) cache)
		return
		endDefinition(212211)
lbl(212225)	definition(x(9) 212251 pid('Variable,setToplevel/slow' 1 pos('./compiler/Core.oz' 1135 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1386> 3)
		endDefinition(212225)
lbl(212251)	putRecord('#' [1 2 fast] x(16))
		setConstant(setToplevel)
		setValue(x(9))
		setValue(x(8))
lbl(212261)	definition(x(8) 212278 pid('Variable,isToplevel/fast' 1 pos('./compiler/Core.oz' 1138 6) nil 2) <Q: 1387> nil)
		inlineAt(isToplevel x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(212261)
lbl(212278)	definition(x(9) 212304 pid('Variable,isToplevel/slow' 1 pos('./compiler/Core.oz' 1138 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1387> 3)
		endDefinition(212278)
lbl(212304)	putRecord('#' [1 2 fast] x(17))
		setConstant(isToplevel)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(44))
lbl(212316)	definition(x(8) 212352 pid('Variable,occ/fast' 2 pos('./compiler/Core.oz' 1141 6) nil 4) <Q: 1388> [y(44)])
		allocateL2
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(212316)
lbl(212352)	definition(x(9) 212387 pid('Variable,occ/slow' 1 pos('./compiler/Core.oz' 1141 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1388> 5)
		endDefinition(212352)
lbl(212387)	putRecord('#' [1 2 fast] x(18))
		setConstant(occ)
		setValue(x(9))
		setValue(x(8))
lbl(212397)	definition(x(8) 212474 pid('Variable,output/fast' 2 pos('./compiler/Core.oz' 1144 6) nil 3) <Q: 1389> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212435 212461)
		getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212435)	match(y(1) ht(212453 [onScalar('`unit`' 212438) onScalar('`true`' 212443) onScalar('`false`' 212448)]))
lbl(212438)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212443)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212448)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212453)	getRecord(pn 1 y(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212461)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1145)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212397)
lbl(212474)	definition(x(9) 212509 pid('Variable,output/slow' 1 pos('./compiler/Core.oz' 1144 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1389> 5)
		endDefinition(212474)
lbl(212509)	putRecord('#' [1 2 fast] x(19))
		setConstant(output)
		setValue(x(9))
		setValue(x(8))
lbl(212519)	definition(x(8) 212612 pid('Variable,outputEscaped/fast' 2 pos('./compiler/Core.oz' 1154 6) nil 3) <Q: 1390> nil)
		allocateL3
		inlineAt(printName x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		putConstant(realcore x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		testBool(y(2) 212565 212599)
		getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212565)	match(y(1) ht(212583 [onScalar('`unit`' 212568) onScalar('`true`' 212573) onScalar('`false`' 212578)]))
lbl(212568)	getLiteral('unit' y(0))
		deAllocateL3
		return
lbl(212573)	getLiteral('true' y(0))
		deAllocateL3
		return
lbl(212578)	getLiteral('false' y(0))
		deAllocateL3
		return
lbl(212583)	getRecord('#' 2 y(0))
		unifyLiteral('!')
		unifyVariable(x(0))
		getRecord(pn 1 x(0))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(212599)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1155)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212519)
lbl(212612)	definition(x(9) 212647 pid('Variable,outputEscaped/slow' 1 pos('./compiler/Core.oz' 1154 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1390> 5)
		endDefinition(212612)
lbl(212647)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(45))
lbl(212659)	definition(x(8) 212761 pid('Variable,outputPattern/fast' 3 pos('./compiler/Core.oz' 1164 6) nil 5) <Q: 1391> [y(45)])
		allocateL3
		inlineAt(printName x(3) cache)
lbl(212671)	definition(x(4) 212709 pid('' 2 pos('./compiler/Core.oz' 1165 14) nil 3) unit [x(3)])
		allocateL2
		move(x(1) y(0))
		move(x(0) x(2))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName x(2) 1 cache)
		move(y(1) x(0))
		move(g(0) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL2
		return
		endDefinition(212671)
lbl(212709)	moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(2) 212739 212748)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true output true 2) 0)
lbl(212739)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(0) true outputEscaped true 2) 0)
lbl(212748)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1165)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(212659)
lbl(212761)	definition(x(9) 212802 pid('Variable,outputPattern/slow' 1 pos('./compiler/Core.oz' 1164 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1391> 7)
		endDefinition(212761)
lbl(212802)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(x(7) x(0))
		move(x(8) x(1))
		move(y(45) x(6))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Variable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(7))
		setValue(y(46))
		setConstant(nil)
		putList(x(0))
		setValue(y(45))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [features] x(2))
		setConstant(unit)
lbl(212885)	definition(x(7) 212913 pid('RestrictedVariable,init/fast' 3 pos('./compiler/Core.oz' 1177 6) nil 3) <Q: 1392> [y(45)])
		allocateL1
		move(x(1) y(0))
		putConstant(user x(1))
		genCall(gci(g(0) true init false 3) 0)
		move(y(0) x(0))
		inlineAssign(features x(0) cache)
		deAllocateL1
		return
		endDefinition(212885)
lbl(212913)	definition(x(8) 212954 pid('RestrictedVariable,init/slow' 1 pos('./compiler/Core.oz' 1177 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1392> 7)
		endDefinition(212913)
lbl(212954)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(212964)	definition(x(7) 212987 pid('RestrictedVariable,isRestricted/fast' 1 pos('./compiler/Core.oz' 1181 6) nil 4) <Q: 1393> nil)
		inlineAt(features x(1) cache)
		putConstant(nil x(2))
		callBI('\\=' [x(1) x(2)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(212964)
lbl(212987)	definition(x(8) 213013 pid('RestrictedVariable,isRestricted/slow' 1 pos('./compiler/Core.oz' 1181 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1393> 3)
		endDefinition(212987)
lbl(213013)	putRecord('#' [1 2 fast] x(10))
		setConstant(isRestricted)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(46))
lbl(213025)	definition(x(7) 213067 pid('RestrictedVariable,isDenied/fast' 3 pos('./compiler/Core.oz' 1184 6) nil 4) <Q: 1394> [y(46)])
		inlineAt(features x(3) cache)
		testLiteral(x(3) nil 213047)
lbl(213040)	getLiteral(unit x(1))
		getLiteral(false x(2))
		return
lbl(213047)	move(x(3) x(4))
		move(x(2) x(3))
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
		endDefinition(213025)
lbl(213067)	definition(x(8) 213108 pid('RestrictedVariable,isDenied/slow' 1 pos('./compiler/Core.oz' 1184 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1394> 7)
		endDefinition(213067)
lbl(213108)	putRecord('#' [1 2 fast] x(11))
		setConstant(isDenied)
		setValue(x(8))
		setValue(x(7))
lbl(213118)	definition(x(7) 213206 pid('RestrictedVariable,IsDenied/fast' 4 pos('./compiler/Core.oz' 1192 6) nil 7) <Q: 1395> [y(46)])
		match(x(0) ht(213191 [onScalar(nil 213127) onRecord('|' 2 213134)]))
lbl(213127)	getLiteral(unit x(2))
		getLiteral(true x(3))
		return
lbl(213134)	getVarVar(x(0) x(4))
		inlineDot(x(0) 1 x(5) cache)
		testBI('==' [x(1) x(5)]#[x(6)] 213185)
		allocateL1
		putConstant(true x(1))
		inlineDot(x(0) 3 x(4) cache)
		unify(x(4) x(1))
		move(x(3) y(0))
		testRecord(x(0) '#' 4 213177)
lbl(213168)	getVoid(3)
		getVariable(x(0))
		unify(x(2) x(0))
		branch(213180)
lbl(213177)	getLiteral(unit x(2))
lbl(213180)	getLiteral(false y(0))
		deAllocateL1
		return
lbl(213185)	move(x(4) x(0))
		genCall(gci(g(0) true <M: IsDenied> true 4) 0)
lbl(213191)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1206)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(213118)
lbl(213206)	definition(x(8) 213253 pid('RestrictedVariable,IsDenied/slow' 1 pos('./compiler/Core.oz' 1192 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1395> 9)
		endDefinition(213206)
lbl(213253)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: IsDenied>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 4 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		move(y(46) x(6))
		putConstant('feat' x(3))
		putConstant('RestrictedVariable' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) variableOccurrence x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) variableOccurrence x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(47))
		setValue(x(8))
		putRecord('attr' [coord value variable] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('#' 2 x(8))
		setValue(y(58))
		setConstant(unit)
		putList(x(3))
		setValue(x(8))
		setConstant(nil)
		putConstant('feat' x(8))
		callBI(record [x(8) x(3)]#[x(9)])
lbl(213353)	definition(x(8) 213379 pid('VariableOccurrence,init/fast' 2 pos('./compiler/Core.oz' 1215 6) nil 2) <Q: 1396> nil)
		inlineAssign(variable x(0) cache)
		inlineAssign(coord x(1) cache)
		getSelf(x(0))
		inlineAssign(value x(0) cache)
		return
		endDefinition(213353)
lbl(213379)	definition(x(10) 213414 pid('VariableOccurrence,init/slow' 1 pos('./compiler/Core.oz' 1215 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1396> 5)
		endDefinition(213379)
lbl(213414)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(8))
lbl(213424)	definition(x(8) 213441 pid('VariableOccurrence,getCoord/fast' 1 pos('./compiler/Core.oz' 1220 6) nil 2) <Q: 1397> nil)
		inlineAt(coord x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213424)
lbl(213441)	definition(x(10) 213467 pid('VariableOccurrence,getCoord/slow' 1 pos('./compiler/Core.oz' 1220 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1397> 3)
		endDefinition(213441)
lbl(213467)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCoord)
		setValue(x(10))
		setValue(x(8))
lbl(213477)	definition(x(8) 213494 pid('VariableOccurrence,getValue/fast' 1 pos('./compiler/Core.oz' 1223 6) nil 2) <Q: 1398> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213477)
lbl(213494)	definition(x(10) 213520 pid('VariableOccurrence,getValue/slow' 1 pos('./compiler/Core.oz' 1223 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1398> 3)
		endDefinition(213494)
lbl(213520)	putRecord('#' [1 2 fast] x(13))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(8))
lbl(213530)	definition(x(8) 213544 pid('VariableOccurrence,setValue/fast' 1 pos('./compiler/Core.oz' 1226 6) nil 1) <Q: 1399> nil)
		inlineAssign(value x(0) cache)
		return
		endDefinition(213530)
lbl(213544)	definition(x(10) 213570 pid('VariableOccurrence,setValue/slow' 1 pos('./compiler/Core.oz' 1226 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1399> 3)
		endDefinition(213544)
lbl(213570)	putRecord('#' [1 2 fast] x(14))
		setConstant('setValue')
		setValue(x(10))
		setValue(x(8))
lbl(213580)	definition(x(8) 213592 pid('VariableOccurrence,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1229 6) nil 1) <Q: 1400> nil)
		getLiteral(true x(0))
		return
		endDefinition(213580)
lbl(213592)	definition(x(10) 213618 pid('VariableOccurrence,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1229 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1400> 3)
		endDefinition(213592)
lbl(213618)	putRecord('#' [1 2 fast] x(15))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213628)	definition(x(8) 213640 pid('VariableOccurrence,isConstruction/fast' 1 pos('./compiler/Core.oz' 1232 6) nil 1) <Q: 1401> nil)
		getLiteral(false x(0))
		return
		endDefinition(213628)
lbl(213640)	definition(x(10) 213666 pid('VariableOccurrence,isConstruction/slow' 1 pos('./compiler/Core.oz' 1232 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1401> 3)
		endDefinition(213640)
lbl(213666)	putRecord('#' [1 2 fast] x(16))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(8))
		createVariable(y(47))
lbl(213678)	definition(x(8) 213722 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1235 6) nil 5) <Q: 1402> [y(47)])
		allocateL2
		inlineAt(variable x(2) cache)
		inlineAt(coord x(1) cache)
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		move(x(2) x(0))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(213678)
lbl(213722)	definition(x(10) 213748 pid('VariableOccurrence,makeIntoPatternVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1235 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1402> 3)
		endDefinition(213722)
lbl(213748)	putRecord('#' [1 2 fast] x(17))
		setConstant(makeIntoPatternVariableOccurrence)
		setValue(x(10))
		setValue(x(8))
lbl(213758)	definition(x(8) 213775 pid('VariableOccurrence,getVariable/fast' 1 pos('./compiler/Core.oz' 1238 6) nil 2) <Q: 1403> nil)
		inlineAt(variable x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(213758)
lbl(213775)	definition(x(10) 213801 pid('VariableOccurrence,getVariable/slow' 1 pos('./compiler/Core.oz' 1238 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1403> 3)
		endDefinition(213775)
lbl(213801)	putRecord('#' [1 2 fast] x(18))
		setConstant('getVariable')
		setValue(x(10))
		setValue(x(8))
lbl(213811)	definition(x(8) 213848 pid('VariableOccurrence,output2/fast' 3 pos('./compiler/Core.oz' 1241 6) nil 3) <Q: 1404> [y(44)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(output x(2) 2 cache)
		endDefinition(213811)
lbl(213848)	definition(x(10) 213889 pid('VariableOccurrence,output2/slow' 1 pos('./compiler/Core.oz' 1241 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1404> 7)
		endDefinition(213848)
lbl(213889)	putRecord('#' [1 2 fast] x(19))
		setConstant(output2)
		setValue(x(10))
		setValue(x(8))
lbl(213899)	definition(x(8) 213936 pid('VariableOccurrence,outputEscaped2/fast' 3 pos('./compiler/Core.oz' 1245 6) nil 3) <Q: 1405> [y(44)])
		allocateL2
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(2) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		tailSendMsg(outputEscaped x(2) 2 cache)
		endDefinition(213899)
lbl(213936)	definition(x(10) 213977 pid('VariableOccurrence,outputEscaped2/slow' 1 pos('./compiler/Core.oz' 1245 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1405> 7)
		endDefinition(213936)
lbl(213977)	putRecord('#' [1 2 fast] x(20))
		setConstant(outputEscaped2)
		setValue(x(10))
		setValue(x(8))
lbl(213987)	definition(x(8) 214030 pid('VariableOccurrence,outputPattern2/fast' 4 pos('./compiler/Core.oz' 1249 6) nil 4) <Q: 1406> [y(44)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(1))
		genCall(gci(g(0) true <M: OutputValue> false 2) 0)
		inlineAt(variable x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(outputPattern x(3) 3 cache)
		endDefinition(213987)
lbl(214030)	definition(x(10) 214077 pid('VariableOccurrence,outputPattern2/slow' 1 pos('./compiler/Core.oz' 1249 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1406> 9)
		endDefinition(214030)
lbl(214077)	putRecord('#' [1 2 fast] x(21))
		setConstant(outputPattern2)
		setValue(x(10))
		setValue(x(8))
lbl(214087)	definition(x(8) 214515 pid('VariableOccurrence,OutputValue/fast' 2 pos('./compiler/Core.oz' 1253 6) nil 6) <Q: 1407> [y(54) y(1) y(0)])
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		putConstant(debugValue x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(3))
		testBool(y(2) 214138 214143)
		getRecord('#' 3 y(3))
		unifyValue(g(0))
		unifyLiteral('%    value: ')
		unifyVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) variableOccurrence x(2) cache)
		applMeth(ami(outputDebugValue 1) x(2))
		branch(214154)
lbl(214138)	getLiteral(unit y(3))
		branch(214154)
lbl(214143)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1256)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214154)	move(y(0) x(0))
		putConstant(debugType x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1261> 6)
		createVariable(y(0))
		testBool(y(2) 214444 214449)
		getList(y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(g(0))
		unifyLiteral('%    type: ')
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(y(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(4))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(5))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(6))
		unifyLiteral(nil)
		inlineAt(variable x(1) cache)
		move(x(2) x(0))
		sendMsg(outputDebugType x(1) 1 cache)
		inlineAt(variable x(1) cache)
		createVariableMove(y(7) x(0))
		sendMsg(outputDebugProps x(1) 1 cache)
		testLiteral(y(7) unit 214249)
lbl(214244)	getLiteral(unit y(2))
		branch(214280)
lbl(214249)	getRecord('#' 3 y(2))
		unifyValue(g(0))
		unifyLiteral('%    prop: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(7) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214280)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugAttrs x(1) 1 cache)
		testLiteral(y(2) unit 214303)
lbl(214298)	getLiteral(unit y(4))
		branch(214334)
lbl(214303)	getRecord('#' 3 y(4))
		unifyValue(g(0))
		unifyLiteral('%    attr: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214334)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugFeats x(1) 1 cache)
		testLiteral(y(2) unit 214357)
lbl(214352)	getLiteral(unit y(5))
		branch(214388)
lbl(214357)	getRecord('#' 3 y(5))
		unifyValue(g(0))
		unifyLiteral('%    feat: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
lbl(214388)	inlineAt(variable x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(outputDebugMeths x(1) 1 cache)
		testLiteral(y(2) unit 214411)
lbl(214406)	getLiteral(unit y(6))
		branch(214460)
lbl(214411)	getRecord('#' 3 y(6))
		unifyValue(g(0))
		unifyLiteral('%    meth: ')
		unifyVariable(x(3))
		move(g(2) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(y(2) x(0))
		putConstant(10 x(1))
		putConstant(10 x(2))
		call(x(4) 4)
		branch(214460)
lbl(214444)	getLiteral(nil y(0))
		branch(214460)
lbl(214449)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1261)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(214460)	putList(x(0))
		setValue(y(3))
		setValue(y(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1263> 4)
		testLiteral(y(0) nil 214481)
lbl(214476)	getLiteral(nil y(1))
		deAllocateL8
		return
lbl(214481)	getRecord('#' 5 y(1))
		unifyValue(g(0))
		unifyLiteral('% ')
		unifyVariable(x(1))
		unifyLiteral(':')
		unifyValue(y(0))
		inlineAt(variable x(2) cache)
		putRecord(debug [realcore] x(0))
		setConstant(true)
		deAllocateL8
		tailSendMsg(output x(2) 2 cache)
		endDefinition(214087)
lbl(214515)	definition(x(10) 214550 pid('VariableOccurrence,OutputValue/slow' 1 pos('./compiler/Core.oz' 1253 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1407> 5)
		endDefinition(214515)
lbl(214550)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: OutputValue>)
		setValue(x(10))
		setValue(x(8))
		putRecord('#' 12 x(8))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(x(7) x(0))
		move(x(8) x(1))
		move(x(9) x(3))
		move(y(44) x(6))
		putConstant(nil x(4))
		putConstant('VariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) patternVariableOccurrence x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(48))
		setValue(x(8))
		putList(x(8))
		setValue(y(44))
		setValue(x(7))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		move(x(8) x(0))
		move(y(47) x(6))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('feat' x(3))
		putConstant('PatternVariableOccurrence' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) token x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) token x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putRecord('attr' [value] x(2))
		setConstant(unit)
		putRecord('#' 2 x(7))
		setValue(y(59))
		setConstant(unit)
		putList(x(3))
		setValue(x(7))
		setConstant(nil)
		putConstant('feat' x(7))
		callBI(record [x(7) x(3)]#[x(9)])
lbl(214719)	definition(x(7) 214744 pid('Token,init/fast' 1 pos('./compiler/Core.oz' 1299 6) nil 2) <Q: 1408> [y(1)])
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(1) cache)
		tailApplMeth(ami(init 0) x(1))
		endDefinition(214719)
lbl(214744)	definition(x(10) 214770 pid('Token,init/slow' 1 pos('./compiler/Core.oz' 1299 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1408> 3)
		endDefinition(214744)
lbl(214770)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(7))
lbl(214780)	definition(x(7) 214797 pid('Token,getValue/fast' 1 pos('./compiler/Core.oz' 1303 6) nil 2) <Q: 1409> nil)
		inlineAt(value x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(214780)
lbl(214797)	definition(x(10) 214823 pid('Token,getValue/slow' 1 pos('./compiler/Core.oz' 1303 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1409> 3)
		endDefinition(214797)
lbl(214823)	putRecord('#' [1 2 fast] x(12))
		setConstant(getValue)
		setValue(x(10))
		setValue(x(7))
lbl(214833)	definition(x(7) 214845 pid('Token,isVariableOccurrence/fast' 1 pos('./compiler/Core.oz' 1306 6) nil 1) <Q: 1410> nil)
		getLiteral(false x(0))
		return
		endDefinition(214833)
lbl(214845)	definition(x(10) 214871 pid('Token,isVariableOccurrence/slow' 1 pos('./compiler/Core.oz' 1306 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1410> 3)
		endDefinition(214845)
lbl(214871)	putRecord('#' [1 2 fast] x(13))
		setConstant(isVariableOccurrence)
		setValue(x(10))
		setValue(x(7))
lbl(214881)	definition(x(7) 214893 pid('Token,isConstruction/fast' 1 pos('./compiler/Core.oz' 1309 6) nil 1) <Q: 1411> nil)
		getLiteral(false x(0))
		return
		endDefinition(214881)
lbl(214893)	definition(x(10) 214919 pid('Token,isConstruction/slow' 1 pos('./compiler/Core.oz' 1309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1411> 3)
		endDefinition(214893)
lbl(214919)	putRecord('#' [1 2 fast] x(14))
		setConstant(isConstruction)
		setValue(x(10))
		setValue(x(7))
lbl(214929)	definition(x(7) 214941 pid('Token,isChunk/fast' 1 pos('./compiler/Core.oz' 1312 6) nil 1) <Q: 1412> nil)
		getLiteral(false x(0))
		return
		endDefinition(214929)
lbl(214941)	definition(x(10) 214967 pid('Token,isChunk/slow' 1 pos('./compiler/Core.oz' 1312 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1412> 3)
		endDefinition(214941)
lbl(214967)	putRecord('#' [1 2 fast] x(15))
		setConstant(isChunk)
		setValue(x(10))
		setValue(x(7))
		putRecord('#' 5 x(7))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		move(x(8) x(0))
		move(x(7) x(1))
		move(x(9) x(3))
		putConstant(nil x(4))
		putConstant('Token' x(5))
		createVariableMove(y(0) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(1) x(0))
		inlineDot(x(0) nameToken x(7) cache)
		move(y(2) x(1))
		inlineDot(x(1) nameToken x(8) cache)
		putList(x(9))
		setValue(x(8))
		setConstant(nil)
		putList(x(8))
		setValue(x(7))
		setValue(x(9))
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [isToplevel] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(name)
lbl(215066)	definition(x(8) 215082 pid('NameToken,init/fast' 2 pos('./compiler/Core.oz' 1321 6) nil 2) <Q: 1413> [y(0)])
		inlineAssign(isToplevel x(1) cache)
		genCall(gci(g(0) true init true 1) 0)
		endDefinition(215066)
lbl(215082)	definition(x(9) 215117 pid('NameToken,init/slow' 1 pos('./compiler/Core.oz' 1321 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1413> 5)
		endDefinition(215082)
lbl(215117)	putRecord('#' [1 2 fast] x(10))
		setConstant(init)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 1 x(8))
		setValue(x(10))
		move(x(7) x(0))
		move(x(8) x(1))
		putConstant('NameToken' x(5))
		createVariableMove(y(48) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) procedureToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind predicateRef] x(3))
		setConstant(procedure)
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ProcedureToken' x(5))
		createVariableMove(y(49) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) clauseBodyToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(7))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [clauseBodyStatements] x(3))
		setConstant(<U: ooFreeFlag>)
		move(x(7) x(0))
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ClauseBodyToken' x(5))
		createVariableMove(y(50) x(6))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) builtinToken x(7) cache)
		putList(x(8))
		setValue(x(7))
		setConstant(nil)
		putList(x(0))
		setValue(y(0))
		setValue(x(8))
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(builtin)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BuiltinToken' x(5))
		createVariableMove(y(2) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(cell)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('CellToken' x(5))
		createVariableMove(y(51) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(chunk)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant(nil x(4))
		putConstant('ChunkToken' x(5))
		createVariableMove(y(52) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(array)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ArrayToken' x(5))
		createVariableMove(y(53) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(dictionary)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('DictionaryToken' x(5))
		createVariableMove(y(54) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(bitArray)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('BitArrayToken' x(5))
		createVariableMove(y(61) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [attrs feats meths props] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant('class')
lbl(215492)	definition(x(7) 215506 pid('ClassToken,setProperties/fast' 1 pos('./compiler/Core.oz' 1370 6) nil 1) <Q: 1414> nil)
		inlineAssign(props x(0) cache)
		return
		endDefinition(215492)
lbl(215506)	definition(x(8) 215532 pid('ClassToken,setProperties/slow' 1 pos('./compiler/Core.oz' 1370 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1414> 3)
		endDefinition(215506)
lbl(215532)	putRecord('#' [1 2 fast] x(9))
		setConstant(setProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215542)	definition(x(7) 215559 pid('ClassToken,getProperties/fast' 1 pos('./compiler/Core.oz' 1373 6) nil 2) <Q: 1415> nil)
		inlineAt(props x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215542)
lbl(215559)	definition(x(8) 215585 pid('ClassToken,getProperties/slow' 1 pos('./compiler/Core.oz' 1373 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1415> 3)
		endDefinition(215559)
lbl(215585)	putRecord('#' [1 2 fast] x(10))
		setConstant(getProperties)
		setValue(x(8))
		setValue(x(7))
lbl(215595)	definition(x(7) 215609 pid('ClassToken,setAttributes/fast' 1 pos('./compiler/Core.oz' 1376 6) nil 1) <Q: 1416> nil)
		inlineAssign(attrs x(0) cache)
		return
		endDefinition(215595)
lbl(215609)	definition(x(8) 215635 pid('ClassToken,setAttributes/slow' 1 pos('./compiler/Core.oz' 1376 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1416> 3)
		endDefinition(215609)
lbl(215635)	putRecord('#' [1 2 fast] x(11))
		setConstant(setAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215645)	definition(x(7) 215662 pid('ClassToken,getAttributes/fast' 1 pos('./compiler/Core.oz' 1379 6) nil 2) <Q: 1417> nil)
		inlineAt(attrs x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215645)
lbl(215662)	definition(x(8) 215688 pid('ClassToken,getAttributes/slow' 1 pos('./compiler/Core.oz' 1379 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1417> 3)
		endDefinition(215662)
lbl(215688)	putRecord('#' [1 2 fast] x(12))
		setConstant(getAttributes)
		setValue(x(8))
		setValue(x(7))
lbl(215698)	definition(x(7) 215712 pid('ClassToken,setFeatures/fast' 1 pos('./compiler/Core.oz' 1382 6) nil 1) <Q: 1418> nil)
		inlineAssign(feats x(0) cache)
		return
		endDefinition(215698)
lbl(215712)	definition(x(8) 215738 pid('ClassToken,setFeatures/slow' 1 pos('./compiler/Core.oz' 1382 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1418> 3)
		endDefinition(215712)
lbl(215738)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215748)	definition(x(7) 215765 pid('ClassToken,getFeatures/fast' 1 pos('./compiler/Core.oz' 1385 6) nil 2) <Q: 1419> nil)
		inlineAt(feats x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215748)
lbl(215765)	definition(x(8) 215791 pid('ClassToken,getFeatures/slow' 1 pos('./compiler/Core.oz' 1385 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1419> 3)
		endDefinition(215765)
lbl(215791)	putRecord('#' [1 2 fast] x(14))
		setConstant(getFeatures)
		setValue(x(8))
		setValue(x(7))
lbl(215801)	definition(x(7) 215815 pid('ClassToken,setMethods/fast' 1 pos('./compiler/Core.oz' 1388 6) nil 1) <Q: 1420> nil)
		inlineAssign(meths x(0) cache)
		return
		endDefinition(215801)
lbl(215815)	definition(x(8) 215841 pid('ClassToken,setMethods/slow' 1 pos('./compiler/Core.oz' 1388 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1420> 3)
		endDefinition(215815)
lbl(215841)	putRecord('#' [1 2 fast] x(15))
		setConstant(setMethods)
		setValue(x(8))
		setValue(x(7))
lbl(215851)	definition(x(7) 215868 pid('ClassToken,getMethods/fast' 1 pos('./compiler/Core.oz' 1391 6) nil 2) <Q: 1421> nil)
		inlineAt(meths x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(215851)
lbl(215868)	definition(x(8) 215894 pid('ClassToken,getMethods/slow' 1 pos('./compiler/Core.oz' 1391 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1421> 3)
		endDefinition(215868)
lbl(215894)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMethods)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 8 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		putConstant('ClassToken' x(5))
		createVariableMove(y(62) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [classNode] x(2))
		setConstant(unit)
		putRecord('feat' [kind] x(3))
		setConstant(object)
lbl(215957)	definition(x(7) 215996 pid('ObjectToken,init/fast' 2 pos('./compiler/Core.oz' 1400 6) nil 3) <Q: 1422> [y(1)])
		allocateL1
		inlineAssign(value x(0) cache)
		move(g(0) x(0))
		inlineDot(x(0) token x(2) cache)
		move(x(1) y(0))
		applMeth(ami(init 0) x(2))
		move(y(0) x(0))
		inlineAssign(classNode x(0) cache)
		deAllocateL1
		return
		endDefinition(215957)
lbl(215996)	definition(x(8) 216031 pid('ObjectToken,init/slow' 1 pos('./compiler/Core.oz' 1400 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1422> 5)
		endDefinition(215996)
lbl(216031)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(216041)	definition(x(7) 216058 pid('ObjectToken,getClassNode/fast' 1 pos('./compiler/Core.oz' 1405 6) nil 2) <Q: 1423> nil)
		inlineAt(classNode x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(216041)
lbl(216058)	definition(x(8) 216084 pid('ObjectToken,getClassNode/slow' 1 pos('./compiler/Core.oz' 1405 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1423> 3)
		endDefinition(216058)
lbl(216084)	putRecord('#' [1 2 fast] x(10))
		setConstant(getClassNode)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 2 x(1))
		setValue(x(9))
		setValue(x(10))
		putConstant('ObjectToken' x(5))
		createVariableMove(y(1) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('lock')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('LockToken' x(5))
		createVariableMove(y(63) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(52))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(port)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('PortToken' x(5))
		createVariableMove(y(64) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant('thread')
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('ThreadToken' x(5))
		createVariableMove(y(65) x(6))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('feat' [kind] x(3))
		setConstant(space)
		putConstant('#' x(1))
		putConstant('attr' x(2))
		putConstant('SpaceToken' x(5))
		createVariableMove(y(66) x(6))
		marshalledFastCall(<R: 'class'> 14)
		getRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] g(2))
		unifyValue(y(20))
		unifyValue(y(13))
		unifyValue(y(53))
		unifyValue(y(42))
		unifyValue(y(61))
		unifyValue(y(14))
		unifyValue(y(15))
		unifyValue(y(2))
		unifyValue(y(51))
		unifyValue(y(39))
		unifyValue(y(36))
		unifyValue(y(52))
		unifyValue(y(26))
		unifyValue(y(62))
		unifyValue(y(40))
		unifyValue(y(12))
		unifyValue(y(50))
		unifyValue(y(9))
		unifyValue(y(7))
		unifyValue(y(10))
		unifyValue(y(54))
		unifyValue(y(38))
		unifyValue(y(21))
		unifyValue(y(8))
		unifyValue(y(19))
		unifyValue(y(34))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(11))
		unifyValue(y(33))
		unifyValue(y(35))
		unifyValue(y(56))
		unifyValue(y(59))
		unifyValue(y(57))
		unifyValue(y(58))
		unifyValue(y(43))
		unifyValue(y(25))
		unifyValue(y(63))
		unifyValue(y(29))
		unifyValue(y(30))
		unifyValue(y(31))
		unifyValue(y(27))
		unifyValue(y(28))
		unifyValue(y(48))
		unifyValue(y(22))
		unifyValue(y(32))
		unifyValue(y(1))
		unifyValue(y(37))
		unifyValue(y(16))
		unifyValue(y(17))
		unifyValue(y(47))
		unifyValue(y(64))
		unifyValue(y(49))
		unifyValue(y(18))
		unifyValue(y(46))
		unifyValue(y(55))
		unifyValue(y(66))
		unifyValue(y(60))
		unifyValue(y(6))
		unifyValue(y(23))
		unifyValue(y(65))
		unifyValue(y(0))
		unifyValue(y(24))
		unifyValue(y(5))
		unifyValue(y(41))
		unifyValue(y(45))
		unifyValue(y(44))
		deAllocateL
		return
		endDefinition(185304)
lbl(216385)	tailCall(x(3) 0)
		endDefinition(183786)
lbl(216390)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(5))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putRecord(info [type] x(4))
		setValue(x(5))
		putRecord('import' ['CodeGen' 'StaticAnalysis' 'System'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		putConstant('class' x(4))
		putConstant('class' x(5))
		putConstant('class' x(6))
		putConstant('class' x(7))
		putConstant('class' x(8))
		putConstant('class' x(9))
		putConstant('class' x(10))
		putConstant('class' x(11))
		putConstant('class' x(12))
		putConstant('class' x(13))
		putConstant('class' x(14))
		putConstant('class' x(15))
		putConstant('class' x(16))
		putConstant('class' x(17))
		putConstant('class' x(18))
		putConstant('class' x(19))
		putConstant('class' x(20))
		putConstant('class' x(21))
		putConstant('class' x(22))
		putConstant('class' x(23))
		putConstant('class' x(24))
		putConstant('class' x(25))
		putConstant('class' x(26))
		putConstant('class' x(27))
		putConstant('class' x(28))
		putConstant('class' x(29))
		putConstant('procedure/2' x(30))
		putConstant('class' x(31))
		putConstant('class' x(32))
		putConstant('class' x(33))
		putConstant('class' x(34))
		putConstant(value x(35))
		putConstant(value x(36))
		putConstant(value x(37))
		putConstant(value x(38))
		putConstant('class' x(39))
		putConstant('class' x(40))
		putConstant('class' x(41))
		putConstant('class' x(42))
		putConstant('class' x(43))
		putConstant('class' x(44))
		putConstant('class' x(45))
		putConstant('class' x(46))
		putConstant('class' x(47))
		putConstant('class' x(48))
		putConstant('class' x(49))
		putConstant('class' x(50))
		putConstant('class' x(51))
		putConstant('class' x(52))
		putConstant('class' x(53))
		putConstant('class' x(54))
		putConstant('class' x(55))
		putConstant('class' x(56))
		putConstant('class' x(57))
		putConstant('class' x(58))
		putConstant('class' x(59))
		putConstant('class' x(60))
		putConstant('class' x(61))
		putConstant('class' x(62))
		putConstant('class' x(63))
		putConstant('class' x(64))
		putConstant('class' x(65))
		putConstant('class' x(66))
		putConstant('class' x(67))
		putConstant('class' x(68))
		putConstant('class' x(69))
		putConstant('class' x(70))
		putRecord('export' [abstractElse application arrayToken atomNode bitArrayToken boolCase boolClause builtinToken cellToken choiceNode choicesAndDisjunctions chunkToken classNode classToken 'clause' clauseBody clauseBodyToken construction declaration 'definition' dictionaryToken disNode elseNode equation equationPattern failNode flattenSequence floatNode functionDefinition 'getSelf' ifNode imAConstruction imAToken imAValueNode imAVariableOccurrence intNode lockNode lockToken methFormal methFormalOptional methFormalWithDefault method methodWithDesignator nameToken noElse objectLockNode objectToken orNode patternCase patternClause patternVariableOccurrence portToken procedureToken recordPattern restrictedVariable skipNode spaceToken statement stepPoint threadNode threadToken token tryNode typeOf valueNode variable variableOccurrence] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		setValue(x(46))
		setValue(x(47))
		setValue(x(48))
		setValue(x(49))
		setValue(x(50))
		setValue(x(51))
		setValue(x(52))
		setValue(x(53))
		setValue(x(54))
		setValue(x(55))
		setValue(x(56))
		setValue(x(57))
		setValue(x(58))
		setValue(x(59))
		setValue(x(60))
		setValue(x(61))
		setValue(x(62))
		setValue(x(63))
		setValue(x(64))
		setValue(x(65))
		setValue(x(66))
		setValue(x(67))
		setValue(x(68))
		setValue(x(69))
		setValue(x(70))
		createVariableMove(y(96) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putConstant('NewUniqueName' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(false)
		setVariable(x(5))
		setVariable(x(6))
		setVariable(x(7))
		setConstant(true)
		setConstant(unit)
		getLiteral(<U: ooDefaultVar> x(5))
		getLiteral(<U: ooFreeFlag> x(6))
		getLiteral(<U: ooRequiredArg> x(7))
		putRecord(env ['false' 'true'] x(5))
		setConstant(false)
		setConstant(true)
lbl(216811)	definition(x(2) 217117 pid('' 2 pos('./compiler/RunTime.oz' 40 3) nil 4) <P: 1424> [x(4) y(164) x(5) y(169)])
		putList(x(2))
		setPredicateRef(<Q: 1425>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1426>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1427>)
		setValue(x(3))
lbl(216835)	definitionCopy(x(2) 217112 pid('/body' 0 pos('./compiler/RunTime.oz' 40 3) [once] 5) unit [x(0) g(0) g(1) g(2) g(3) x(1)])
		allocateL4
		move(g(0) x(0))
		inlineDot(x(0) 'Module' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(1) cache)
		inlineDot(x(0) 'Core' x(2) cache)
lbl(216863)	definition(x(4) 216918 pid('ApplyFunctor' 3 pos('./compiler/RunTime.oz' 50 6) nil 6) <Q: 1425> [x(3)])
		allocateL4
		move(g(0) x(3))
		inlineDot(x(3) manager x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(5) y(3))
		sendMsg(init y(3) 0 cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		move(y(3) x(3))
		deAllocateL4
		tailSendMsg(apply x(3) [1 2 url] cache)
		endDefinition(216863)
lbl(216918)	definition(x(3) 216961 pid('' 3 pos('./compiler/RunTime.oz' 58 2) nil 5) <Q: 1426> [x(2)])
		allocateL2
		move(g(0) x(0))
		inlineDot(x(0) nameToken x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(1) x(0))
		putConstant(true x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
		endDefinition(216918)
lbl(216961)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 172> 6)
		move(y(0) x(0))
		putConstant('ApplyFunctor' x(3))
		move(y(2) x(1))
		callBI('AdjoinAt' [x(0) x(3) x(1)]#[x(4)])
lbl(216993)	definition(x(1) 217089 pid('' 3 pos('./compiler/RunTime.oz' 63 8) nil 4) <Q: 1427> [g(4) y(1)])
		allocateL4
		putRecord('#' 3 x(3))
		setConstant('`')
		setValue(x(0))
		setConstant('`')
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 195> 4)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		putConstant(runTimeLibrary x(1))
		putConstant(unit x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(1))
		move(y(0) x(0))
		sendMsg(valToSubst y(1) 1 cache)
		putConstant(multiple x(0))
		sendMsg(setUse y(1) 1 cache)
		putConstant(~1 x(0))
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(reg x(1) 1 cache)
		endDefinition(216993)
lbl(217089)	move(x(4) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 172> 6)
		getRecord('export' [literals procs tokens] g(5))
		unifyValue(g(1))
		unifyValue(y(0))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(216835)
lbl(217112)	tailCall(x(2) 0)
		endDefinition(216811)
lbl(217117)	putRecord(env ['false' ooDefaultVar ooFreeFlag ooRequiredArg 'true' 'unit'] x(4))
		setConstant(bool)
		setConstant(name)
		setConstant(name)
		setConstant(name)
		setConstant(bool)
		setConstant('unit')
		putRecord(record 1 x(5))
		setValue(x(4))
		putList(x(4))
		setConstant(variable)
		setConstant(nil)
		putList(x(3))
		setConstant(nameToken)
		setValue(x(4))
		putRecord(info [type] x(1))
		setValue(x(3))
		putList(x(7))
		setConstant(manager)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord('import' ['Core' 'Module' 'RunTimeLibrary'] x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(x(8))
		putConstant(value x(4))
		putConstant(value x(6))
		putRecord('export' [literals procs tokens] x(1))
		setValue(x(5))
		setValue(x(4))
		setValue(x(6))
		createVariableMove(y(97) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(217207)	definition(x(2) 258880 pid('' 2 pos('./compiler/Unnester.oz' 47 0) nil 4) <P: 1428> [y(156) y(148) y(155) y(160) y(104) y(150) y(152) y(149) y(2) y(142) y(186) y(187) y(114) y(169) y(143)])
		putList(x(2))
		setPredicateRef(<Q: 1429>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1430>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1431>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1432>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1433>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1434>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1435>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1436>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1437>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1438>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MyTopLevel>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MyReporter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Refer>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1439>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1440>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1441>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1442>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1443>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1444>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1445>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1446>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1447>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1448>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1449>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1450>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1451>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1452>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1453>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1454>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1455>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1456>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1457>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1458>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1459>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1460>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1461>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1462>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1463>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1464>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1465>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1466>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1467>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1468>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1469>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1470>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1471>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1472>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1473>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1474>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1475>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1476>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1477>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1478>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1479>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1480>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1481>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1482>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1483>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1484>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1485>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1486>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1487>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1488>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1489>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1490>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1491>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1492>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1493>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1494>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1495>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1496>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1497>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: BA>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Stateful>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StateUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ArgCounter>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestToTerm>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestToVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GenerateNewVar>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestStatement>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestConstraint>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProc>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseImports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AnalyseExports>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFromProp>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMeth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethHead>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestMethBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MakeClauseBody>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestCase>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TranslatePattern>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateRecord>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestTry>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestClauses>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: UnnestFDList>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1498>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1499>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1500>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1501>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1502>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1503>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1504>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1505>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1506>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1507>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1508>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1509>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1510>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1511>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1512>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1513>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1514>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1515>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1516>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1517>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1518>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1519>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1520>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1521>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1522>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1523>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1524>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1525>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1526>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1527>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1528>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1529>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1530>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1531>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1532>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1533>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1534>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1535>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1536>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1537>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1538>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1539>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1540>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1541>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1542>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1543>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1544>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1545>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1546>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1547>)
		setValue(x(3))
lbl(218179)	definitionCopy(x(2) 258875 pid('/body' 0 pos('./compiler/Unnester.oz' 47 0) [once] 46) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) x(1)])
		allocateL7
		move(g(0) x(0))
		inlineDot(x(0) 'CompilerSupport' x(7) cache)
		inlineDot(x(0) 'FD' x(1) cache)
		inlineDot(x(0) 'PrintName' x(2) cache)
		inlineDot(x(0) 'Core' x(3) cache)
		inlineDot(x(0) 'RunTime' x(4) cache)
lbl(218219)	definition(x(8) 218380 pid('CoordinatesOf' 2 pos('./compiler/TupleSyntax.oz' 27 0) nil 4) <Q: 1429> nil)
		match(x(0) ht(218368 [onRecord(fAnd 2 218228) onRecord(fEq 3 218233) onRecord(fAssign 3 218238) onRecord(fOrElse 3 218243) onRecord(fAndThen 3 218248) onRecord(fOpApplyStatement 3 218253) onRecord(fOpApply 3 218294) onRecord(fUnoptimizedDot 2 218335) onRecord(fFdCompare 4 218339) onRecord(fFdIn 4 218346) onRecord(fObjApply 3 218353) onRecord(fRecord 2 218358) onRecord(fOpenRecord 2 218363)]))
lbl(218228)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218233)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218238)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218243)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218248)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218253)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218278)
lbl(218265)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218278)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218278)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218294)	allocateL2
		getVoid(1)
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		testList(y(0) 218319)
lbl(218306)	getVoid(1)
		getVariable(x(2))
		testLiteral(x(2) nil 218319)
		unify(y(1) x(0))
		deAllocateL2
		return
lbl(218319)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		move(y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1429> 5)
lbl(218335)	getLiteral(unit x(1))
		return
lbl(218339)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218346)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218353)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218358)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218363)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(218368)	callBI('Width' [x(0)]#[x(2)])
		callBI('.' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(218219)
lbl(218380)	definition(x(8) 218518 pid('VarListSub' 4 pos('./compiler/TupleSyntax.oz' 54 0) nil 5) <Q: 1430> nil)
		match(x(1) ht(218503 [onScalar(nil 218389) onRecord('|' 2 218393)]))
lbl(218389)	unify(x(2) x(3))
		return
lbl(218393)	allocateL7
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(4))
		unifyVoid(1)
lbl(218405)	definition(x(1) 218445 pid('' 2 pos('./compiler/TupleSyntax.oz' 58 19) nil 4) unit [x(4)])
		shallowGuard(218432)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(218421)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(218432)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218405)
lbl(218445)	moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(x(3) y(4))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(6))
		testBool(y(5) 218470 218478)
		unify(y(3) y(6))
		branch(218489)
lbl(218470)	getList(y(3))
		unifyValue(y(0))
		unifyValue(y(6))
		branch(218489)
lbl(218478)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(58)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(218489)	moveMoveYXYX(y(2) x(0) y(1) x(1))
		moveMoveYXYX(y(6) x(2) y(4) x(3))
		deAllocateL7
		genFastCall(<Q: 1430> 9)
lbl(218503)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(64)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218380)
lbl(218518)	definition(x(8) 218723 pid('GetPatternVariablesStatement' 3 pos('./compiler/TupleSyntax.oz' 80 0) nil 5) <Q: 1431> nil)
		match(x(0) ht(218717 [onRecord(fVar 2 218527) onRecord(fEq 3 218534) onRecord(fProc 5 218539) onRecord(fFun 5 218544) onRecord(fFunctor 3 218549) onRecord(fClass 4 218554) onRecord(fScanner 6 218559) onRecord(fParser 7 218564) onRecord(fLocal 3 218569) onRecord(fAnd 2 218613) onRecord(fRecord 2 218638) onRecord(fOpenRecord 2 218674) onRecord(fColon 2 218710)]))
lbl(218527)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		return
lbl(218534)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218539)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218544)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218549)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218554)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218559)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218564)	getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218569)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1430> 9)
lbl(218613)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1431> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1431> 7)
lbl(218638)	getVoid(1)
		getVariable(x(0))
lbl(218642)	definition(x(4) 218662 pid('' 3 pos('./compiler/TupleSyntax.oz' 107 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218642)
lbl(218662)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218674)	getVoid(1)
		getVariable(x(0))
lbl(218678)	definition(x(4) 218698 pid('' 3 pos('./compiler/TupleSyntax.oz' 111 16) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(218678)
lbl(218698)	move(x(2) x(3))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 30> 9)
lbl(218710)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1432> 7)
lbl(218717)	unify(x(1) x(2))
		return
		endDefinition(218518)
lbl(218723)	definition(x(8) 218770 pid('GetPatternVariablesExpression' 3 pos('./compiler/TupleSyntax.oz' 121 0) nil 3) <Q: 1432> nil)
		match(x(0) ht(218765 [onRecord(fEq 3 218732) onRecord(fLocal 3 218757) onRecord(fAnd 2 218761)]))
lbl(218732)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1432> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1432> 7)
lbl(218757)	unify(x(1) x(2))
		return
lbl(218761)	unify(x(1) x(2))
		return
lbl(218765)	genFastCall(<Q: 1431> 7)
		endDefinition(218723)
lbl(218770)	definition(x(8) 218808 pid('Contains' 3 pos('./compiler/TupleSyntax.oz' 135 3) nil 5) <Q: 1433> nil)
		testList(x(0) 218802)
lbl(218779)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('==' [x(1) x(0)]#[x(4)] 218796)
		getLiteral(true x(2))
		return
lbl(218796)	move(x(3) x(0))
		genFastCall(<Q: 1433> 7)
lbl(218802)	getLiteral(false x(2))
		return
		endDefinition(218770)
lbl(218808)	definition(x(8) 218898 pid('UniqueVariables' 2 pos('./compiler/TupleSyntax.oz' 142 3) nil 4) <Q: 1434> nil)
		match(x(0) ht(218883 [onScalar(nil 218817) onRecord('|' 2 218821)]))
lbl(218817)	getLiteral(nil x(1))
		return
lbl(218821)	allocateL4
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(3))
		unifyVoid(1)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1433> 6)
		testBool(y(3) 218860 218872)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218860)	getList(y(2))
		unifyValVar(y(0) x(1))
		move(y(1) x(0))
		deAllocateL4
		genFastCall(<Q: 1434> 5)
lbl(218872)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(144)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(218883)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(148)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(218808)
lbl(218898)	definition(x(5) 218947 pid('PrivateAttrFeat' 3 pos('./compiler/TupleSyntax.oz' 152 0) nil 3) <Q: 1435> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(0) '#' 2 218924)
lbl(218917)	getVariable(x(0))
		unify(y(2) x(0))
		branch(218927)
lbl(218924)	unify(y(2) x(0))
lbl(218927)	testRecord(y(2) fVar 2 218940)
lbl(218932)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(218940)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(218898)
lbl(218947)	definition(x(6) 219058 pid('PrivateMeth' 3 pos('./compiler/TupleSyntax.oz' 161 0) nil 6) <Q: 1436> nil)
		shallowGuard(219045)
		getRecord(fMeth 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(218965)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		createVariable(y(2))
		testRecord(x(3) fEq 3 218986)
lbl(218979)	getVariable(x(0))
		unify(y(2) x(0))
		branch(218989)
lbl(218986)	unify(y(2) x(3))
lbl(218989)	match(y(2) ht(219040 [onRecord(fVar 2 218992) onRecord(fRecord 2 219000) onRecord(fOpenRecord 2 219020)]))
lbl(218992)	getList(y(1))
		unifyValue(y(2))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219000)	getVariable(x(0))
		testRecord(x(0) fVar 2 219015)
lbl(219007)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219015)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219020)	getVariable(x(0))
		testRecord(x(0) fVar 2 219035)
lbl(219027)	getList(y(1))
		unifyValue(x(0))
		unifyValue(y(0))
		deAllocateL3
		return
lbl(219035)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219040)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(219045)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(161)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(218947)
lbl(219058)	definition(x(8) 219109 pid('IsDeclared' 3 pos('./compiler/BindingAnalysis.oz' 25 3) nil 5) <Q: 1437> [g(1)])
		match(x(0) ht(219094 [onScalar(nil 219067) onRecord('|' 2 219071)]))
lbl(219067)	getLiteral(false x(2))
		return
lbl(219071)	getVarVar(x(0) x(3))
		inlineDot(x(0) 1 x(0) cache)
		testBI('Dictionary.member' [x(0) x(1)]#[x(4)] 219088)
		getLiteral(true x(2))
		return
lbl(219088)	move(x(3) x(0))
		genFastCall(<Q: 1437> 7)
lbl(219094)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(29)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(219058)
lbl(219109)	inlineDot(x(7) concatenateAtomAndInt x(7) cache)
lbl(219115)	definition(x(8) 219242 pid('Generate' 5 pos('./compiler/BindingAnalysis.oz' 34 3) nil 5) <Q: 1438> [x(7) g(2)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYYX(x(4) y(4) y(2) x(0))
		move(y(3) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1437> 6)
		testBool(y(6) 219181 219229)
lbl(219161)	move(y(3) x(0))
		inlinePlus1(x(0) x(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1438> 11)
lbl(219181)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(lookupVariableInEnv y(1) 2 cache)
		testLiteral(y(6) undeclared 219161)
lbl(219197)	move(y(0) x(0))
		inlineDot(x(0) 1 x(0) cache)
		inlineDot(x(0) 2 x(0) cache)
		move(y(3) x(1))
		inlinePlus1(x(1) x(2))
		move(y(2) x(1))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(y(5) y(4))
		deAllocateL7
		return
lbl(219229)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(36)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219115)
lbl(219242)	putList(x(7))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [env freeVariablesOfQuery] x(8))
		setConstant(nil)
		setConstant(unit)
		putRecord('feat' [<M: MyReporter> <M: MyTopLevel>] x(9))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(219264)	definition(x(10) 219311 pid('BindingAnalysis,init/fast' 2 pos('./compiler/BindingAnalysis.oz' 50 6) nil 4) <Q: 1439> nil)
		putConstant(nil x(2))
		inlineAssign(env x(2) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(freeVariablesOfQuery x(2) cache)
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: MyReporter> x(2) cache)
		unify(x(2) x(1))
		return
		endDefinition(219264)
lbl(219311)	definition(x(11) 219346 pid('BindingAnalysis,init/slow' 1 pos('./compiler/BindingAnalysis.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1439> 5)
		endDefinition(219311)
lbl(219346)	putRecord('#' [1 2 fast] x(12))
		setConstant(init)
		setValue(x(11))
		setValue(x(10))
lbl(219356)	definition(x(10) 219444 pid('BindingAnalysis,openScope/fast' 0 pos('./compiler/BindingAnalysis.oz' 56 6) nil 6) <Q: 1440> [g(3)])
		inlineAt(env x(0) cache)
		testList(x(0) 219410)
lbl(219370)	getVariable(x(1))
		callBI('NewDictionary' nil#[x(2)])
		inlineDot(x(1) 2 x(1) cache)
		callBI('Dictionary.clone' [x(1)]#[x(3)])
		createVariable(x(1))
		putRecord('#' 4 x(5))
		setValue(x(2))
		setValue(x(3))
		setValue(x(1))
		setValue(x(1))
		putList(x(4))
		setValue(x(5))
		setValue(x(0))
		inlineAssign(env x(4) cache)
		return
lbl(219410)	callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		createVariable(x(2))
		putRecord('#' 4 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		setValue(x(2))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		inlineAssign(env x(3) cache)
		return
		endDefinition(219356)
lbl(219444)	definition(x(11) 219458 pid('BindingAnalysis,openScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 56 6) nil 1) unit nil)
		getLiteral(openScope x(0))
		genFastCall(<Q: 1440> 1)
		endDefinition(219444)
lbl(219458)	putRecord('#' [1 2 fast] x(13))
		setConstant(openScope)
		setValue(x(11))
		setValue(x(10))
lbl(219468)	definition(x(10) 219498 pid('BindingAnalysis,getVars/fast' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 2) <Q: 1441> nil)
		inlineAt(env x(1) cache)
		inlineDot(x(1) 1 x(1) cache)
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		return
		endDefinition(219468)
lbl(219498)	definition(x(11) 219524 pid('BindingAnalysis,getVars/slow' 1 pos('./compiler/BindingAnalysis.oz' 63 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1441> 3)
		endDefinition(219498)
lbl(219524)	putRecord('#' [1 2 fast] x(14))
		setConstant(getVars)
		setValue(x(11))
		setValue(x(10))
lbl(219534)	definition(x(10) 219655 pid('BindingAnalysis,getAllVariables/fast' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 5) <Q: 1442> [g(4) g(5)])
		allocateL2
		inlineAt(env x(4) cache)
lbl(219546)	definition(x(1) 219611 pid('' 3 pos('./compiler/BindingAnalysis.oz' 69 4) nil 7) unit [g(1)])
		shallowGuard(219598)
		getRecord('#' 4 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(219566)	shallowThen
		allocateL3
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) x(1))
		putConstant(x x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 108> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL3
		return
lbl(219598)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(69)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(219546)
lbl(219611)	move(x(0) y(0))
		move(x(4) x(0))
		putConstant(x x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
lbl(219626)	definition(x(1) 219641 pid('' 3 pos('./compiler/BindingAnalysis.oz' 72 3) nil 3) unit nil)
		getList(x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(219626)
lbl(219641)	moveMoveYXYX(y(1) x(0) y(0) x(3))
		putConstant(nil x(2))
		deAllocateL2
		genFastCall(<P: 163> 9)
		endDefinition(219534)
lbl(219655)	definition(x(11) 219681 pid('BindingAnalysis,getAllVariables/slow' 1 pos('./compiler/BindingAnalysis.oz' 66 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1442> 3)
		endDefinition(219655)
lbl(219681)	putRecord('#' [1 2 fast] x(15))
		setConstant(getAllVariables)
		setValue(x(11))
		setValue(x(10))
lbl(219691)	definition(x(10) 219726 pid('BindingAnalysis,closeScope/fast' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) <Q: 1443> nil)
		inlineAt(env x(1) cache)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('#' 4 x(1))
		unifyVoid(2)
		unifyValue(x(0))
		unifyLiteral(nil)
		inlineAssign(env x(2) cache)
		return
		endDefinition(219691)
lbl(219726)	definition(x(11) 219752 pid('BindingAnalysis,closeScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 76 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1443> 3)
		endDefinition(219726)
lbl(219752)	putRecord('#' [1 2 fast] x(16))
		setConstant(closeScope)
		setValue(x(11))
		setValue(x(10))
lbl(219762)	definition(x(10) 219887 pid('BindingAnalysis,bind/fast' 3 pos('./compiler/BindingAnalysis.oz' 80 6) nil 7) <Q: 1444> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 219880)
lbl(219802)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(219880)	unify(x(2) x(5))
		deAllocateL8
		return
		endDefinition(219762)
lbl(219887)	definition(x(11) 219928 pid('BindingAnalysis,bind/slow' 1 pos('./compiler/BindingAnalysis.oz' 80 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1444> 7)
		endDefinition(219887)
lbl(219928)	putRecord('#' [1 2 fast] x(17))
		setConstant(bind)
		setValue(x(11))
		setValue(x(10))
lbl(219938)	definition(x(10) 220107 pid('BindingAnalysis,bindImport/fast' 4 pos('./compiler/BindingAnalysis.oz' 91 6) nil 8) <Q: 1445> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(4) cache)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		getRecord('#' 4 x(4))
		unifyVariable(x(5))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(4))
		callBI('Dictionary.condGet' [x(5) x(0) x(4)]#[x(6)])
		testLiteral(x(6) undeclared 220059)
lbl(219978)	move(g(1) x(4))
		inlineDot(x(4) restrictedVariable x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(0) y(4) x(3) y(5))
		moveMoveXYXY(x(5) y(6) x(7) y(7))
		move(x(2) x(8))
		move(x(1) x(2))
		move(x(8) x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220059)	getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(x(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(5))
		setConstant(' imported more than once')
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		move(x(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(4) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(219938)
lbl(220107)	definition(x(11) 220154 pid('BindingAnalysis,bindImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 91 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1445> 9)
		endDefinition(220107)
lbl(220154)	putRecord('#' [1 2 fast] x(18))
		setConstant(bindImport)
		setValue(x(11))
		setValue(x(10))
lbl(220164)	definition(x(10) 220333 pid('BindingAnalysis,bindExport/fast' 3 pos('./compiler/BindingAnalysis.oz' 107 6) nil 7) <Q: 1446> [g(6) x(3) g(2)])
		allocateL8
		inlineAt(env x(3) cache)
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(4) x(0) x(3)]#[x(5)])
		testLiteral(x(5) undeclared 220282)
lbl(220204)	move(g(1) x(3))
		inlineDot(x(3) variable x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(0) y(4) x(2) y(5))
		moveMoveXYXY(x(4) y(6) x(6) y(7))
		move(x(1) x(2))
		putConstant(user x(1))
		sendMsg(init y(7) 3 cache)
		unify(y(7) y(5))
		moveMoveYXYX(y(6) x(0) y(4) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(6))
		setValue(y(1))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL8
		return
lbl(220282)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(6))
		setValue(x(0))
		putRecord('#' 3 x(4))
		setConstant('variable ')
		setValue(x(6))
		setConstant(' declared more than once')
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		move(x(1) x(0))
		move(x(4) x(2))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		unify(y(0) y(1))
		deAllocateL8
		return
		endDefinition(220164)
lbl(220333)	definition(x(11) 220374 pid('BindingAnalysis,bindExport/slow' 1 pos('./compiler/BindingAnalysis.oz' 107 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1446> 7)
		endDefinition(220333)
lbl(220374)	putRecord('#' [1 2 fast] x(19))
		setConstant(bindExport)
		setValue(x(11))
		setValue(x(10))
		createVariable(y(0))
lbl(220386)	definition(x(10) 220558 pid('BindingAnalysis,refer/fast' 3 pos('./compiler/BindingAnalysis.oz' 123 6) nil 5) <Q: 1447> [y(0)])
		allocateL5
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(3) undeclared 220481)
lbl(220419)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
lbl(220481)	createVariableMove(y(4) x(0))
		sendMsg(isRestricted y(3) 1 cache)
		testBool(y(4) 220541 220530)
		getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 2 x(2))
		setConstant('illegal use of imported variable ')
		setValue(x(4))
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(220541)
lbl(220530)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220541)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220386)
lbl(220558)	definition(x(11) 220599 pid('BindingAnalysis,refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 123 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1447> 7)
		endDefinition(220558)
lbl(220599)	putRecord('#' [1 2 fast] x(20))
		setConstant(refer)
		setValue(x(11))
		setValue(x(10))
lbl(220609)	definition(x(10) 220843 pid('BindingAnalysis,referImport/fast' 5 pos('./compiler/BindingAnalysis.oz' 139 6) nil 8) <Q: 1448> [y(0)])
		allocateL7
		inlineAt(env x(5) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(x(5) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(5) undeclared 220712)
lbl(220647)	getSelf(x(3))
		inlineDot(x(3) <M: MyReporter> x(3) cache)
		putRecord(pn 1 x(4))
		setValue(y(0))
		putRecord('#' 3 x(2))
		setConstant('variable ')
		setValue(x(4))
		setConstant(' not introduced')
		move(y(1) x(0))
		putConstant('binding analysis error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		getLiteral(false y(3))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true bind false 3) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(2) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220712)	move(y(3) x(0))
		sendMsg(isRestricted y(5) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(isDenied y(5) 3 cache)
		testBool(y(6) 220807 220796)
		getSelf(x(4))
		inlineDot(x(4) <M: MyReporter> x(4) cache)
		putRecord(pn 1 x(5))
		setValue(y(0))
		putRecord('#' 2 x(3))
		setConstant('illegal use of imported variable ')
		setValue(x(5))
		putRecord(oz 1 x(7))
		setValue(y(2))
		putRecord(hint [l m] x(6))
		setConstant('Unknown feature')
		setValue(x(7))
		putList(x(1))
		setValue(x(6))
		setConstant(nil)
		move(y(1) x(0))
		putConstant('binding analysis error' x(2))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(220807)
lbl(220796)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(149)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(220807)	testLiteral(y(3) unit 220826)
lbl(220811)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
lbl(220826)	moveMoveYXYX(y(1) x(0) y(4) x(1))
		move(y(3) x(2))
		deAllocateL7
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220609)
lbl(220843)	definition(x(11) 220896 pid('BindingAnalysis,referImport/slow' 1 pos('./compiler/BindingAnalysis.oz' 139 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1448> 11)
		endDefinition(220843)
lbl(220896)	putRecord('#' [1 2 fast] x(21))
		setConstant(referImport)
		setValue(x(11))
		setValue(x(10))
lbl(220906)	definition(x(10) 220949 pid('BindingAnalysis,referUnchecked/fast' 3 pos('./compiler/BindingAnalysis.oz' 162 6) nil 5) <Q: 1449> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(220906)
lbl(220949)	definition(x(11) 220990 pid('BindingAnalysis,referUnchecked/slow' 1 pos('./compiler/BindingAnalysis.oz' 162 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1449> 7)
		endDefinition(220949)
lbl(220990)	putRecord('#' [1 2 fast] x(22))
		setConstant(referUnchecked)
		setValue(x(11))
		setValue(x(10))
lbl(221000)	definition(x(10) 221052 pid('BindingAnalysis,referExpansionOcc/fast' 3 pos('./compiler/BindingAnalysis.oz' 166 6) nil 5) <Q: 1450> [y(0)])
		allocateL3
		inlineAt(env x(4) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(2))
		createVariableMove(y(2) x(3))
		genCall(gci(g(0) true <M: Refer> false 4) 0)
		testLiteral(y(2) undeclared 221035)
lbl(221030)	getLiteral(undeclared y(1))
		deAllocateL3
		return
lbl(221035)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(221000)
lbl(221052)	definition(x(11) 221093 pid('BindingAnalysis,referExpansionOcc/slow' 1 pos('./compiler/BindingAnalysis.oz' 166 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1450> 7)
		endDefinition(221052)
lbl(221093)	putRecord('#' [1 2 fast] x(23))
		setConstant(referExpansionOcc)
		setValue(x(11))
		setValue(x(10))
lbl(221103)	definition(x(10) 221202 pid('BindingAnalysis,Refer/fast' 4 pos('./compiler/BindingAnalysis.oz' 174 6) nil 7) <Q: 1451> [g(2) g(6) y(0)])
		match(x(2) ht(221187 [onScalar(nil 221112) onRecord('|' 2 221156)]))
lbl(221112)	allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: MyTopLevel> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		move(y(1) x(1))
		sendMsg(lookupVariableInEnv x(2) 2 cache)
		testLiteral(y(1) undeclared 221141)
lbl(221139)	deAllocateL2
		return
lbl(221141)	inlineAt(freeVariablesOfQuery x(0) cache)
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(221156)	getVarVar(x(2) x(4))
		getRecord('#' 4 x(2))
		unifyVariable(x(2))
		unifyVoid(3)
		putConstant(undeclared x(5))
		callBI('Dictionary.condGet' [x(2) x(0) x(5)]#[x(6)])
		testLiteral(x(6) undeclared 221183)
lbl(221177)	move(x(4) x(2))
		genCall(gci(g(2) true <M: Refer> true 4) 0)
lbl(221183)	unify(x(3) x(6))
		return
lbl(221187)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(187)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(221103)
lbl(221202)	definition(x(11) 221249 pid('BindingAnalysis,Refer/slow' 1 pos('./compiler/BindingAnalysis.oz' 174 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1451> 9)
		endDefinition(221202)
lbl(221249)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: Refer>)
		setValue(x(11))
		setValue(x(10))
lbl(221259)	definition(x(10) 221401 pid('BindingAnalysis,generate/fast' 3 pos('./compiler/BindingAnalysis.oz' 189 6) nil 7) <Q: 1452> [g(6) x(3) g(2)])
		allocateL9
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(x(3))
		unifyVariable(y(0))
		getRecord('#' 4 x(3))
		unifyVariable(y(1))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		putConstant(1 x(6))
		callBI('Dictionary.condGet' [x(4) x(0) x(6)]#[x(3)])
		getSelf(x(6))
		inlineDot(x(6) <M: MyTopLevel> x(6) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(x(4) y(6))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(7) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		move(y(4) x(2))
		putConstant(generated x(1))
		sendMsg(init y(8) 3 cache)
		unify(y(8) y(5))
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		move(y(5) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(3))
		unifyValVar(y(5) x(1))
		putRecord('#' 4 x(3))
		setValue(y(1))
		setValue(y(6))
		setValue(y(2))
		setValue(x(1))
		putList(x(2))
		setValue(x(3))
		setValue(y(0))
		inlineAssign(env x(2) cache)
		deAllocateL9
		return
		endDefinition(221259)
lbl(221401)	definition(x(11) 221442 pid('BindingAnalysis,generate/slow' 1 pos('./compiler/BindingAnalysis.oz' 189 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1452> 7)
		endDefinition(221401)
lbl(221442)	putRecord('#' [1 2 fast] x(25))
		setConstant(generate)
		setValue(x(11))
		setValue(x(10))
lbl(221452)	definition(x(10) 221606 pid('BindingAnalysis,generateForOuterScope/fast' 3 pos('./compiler/BindingAnalysis.oz' 198 6) nil 8) <Q: 1453> [g(6) x(3) g(2)])
		allocateL10
		inlineAt(env x(5) cache)
		getList(x(5))
		unifyVariable(y(0))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getRecord('#' 4 x(4))
		unifyVariable(y(2))
		unifyVariable(x(6))
		unifyVariable(y(3))
		unifyVariable(y(4))
		putConstant(1 x(7))
		callBI('Dictionary.condGet' [x(6) x(0) x(7)]#[x(3)])
		getSelf(x(7))
		inlineDot(x(7) <M: MyTopLevel> x(7) cache)
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(x(6) y(7))
		move(x(0) x(2))
		move(x(5) x(0))
		move(x(7) x(1))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1438> 10)
		move(g(1) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(y(5) x(2))
		putConstant(generated x(1))
		sendMsg(init y(9) 3 cache)
		unify(y(9) y(6))
		moveMoveYXYX(y(2) x(0) y(8) x(1))
		move(y(6) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getList(y(4))
		unifyValVar(y(6) x(1))
		putRecord('#' 4 x(4))
		setValue(y(2))
		setValue(y(7))
		setValue(y(3))
		setValue(x(1))
		putList(x(3))
		setValue(x(4))
		setValue(y(1))
		putList(x(2))
		setValue(y(0))
		setValue(x(3))
		inlineAssign(env x(2) cache)
		deAllocateL10
		return
		endDefinition(221452)
lbl(221606)	definition(x(11) 221647 pid('BindingAnalysis,generateForOuterScope/slow' 1 pos('./compiler/BindingAnalysis.oz' 198 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1453> 7)
		endDefinition(221606)
lbl(221647)	putRecord('#' [1 2 fast] x(26))
		setConstant(generateForOuterScope)
		setValue(x(11))
		setValue(x(10))
lbl(221657)	definition(x(10) 221685 pid('BindingAnalysis,getFreeVariablesOfQuery/fast' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) <Q: 1454> [g(7)])
		inlineAt(freeVariablesOfQuery x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		callBI('NewDictionary' nil#[x(0)])
		inlineAssign(freeVariablesOfQuery x(0) cache)
		return
		endDefinition(221657)
lbl(221685)	definition(x(11) 221711 pid('BindingAnalysis,getFreeVariablesOfQuery/slow' 1 pos('./compiler/BindingAnalysis.oz' 210 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1454> 3)
		endDefinition(221685)
lbl(221711)	putRecord('#' [1 2 fast] x(27))
		setConstant(getFreeVariablesOfQuery)
		setValue(x(11))
		setValue(x(10))
		putRecord('#' 16 x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(x(10) x(1))
		move(x(8) x(2))
		move(x(9) x(3))
		move(x(7) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('BindingAnalysis' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(221796)	definition(x(7) 221949 pid('NormalizeFdCompare' 6 pos('./compiler/UnnestFD.oz' 33 3) nil 9) <Q: 1455> nil)
		putList(x(8))
		setValue(x(2))
		setConstant(nil)
		putList(x(7))
		setValue(x(1))
		setValue(x(8))
		putRecord(fOpApply 3 x(6))
		setConstant('-')
		setValue(x(7))
		setValue(x(3))
		match(x(0) ht(221934 [onScalar('=:' 221827) onScalar('<:' 221834) onScalar('>:' 221866) onScalar('=<:' 221900) onScalar('>=:' 221907) onScalar('\\=:' 221927)]))
lbl(221827)	getLiteral('=:' x(4))
		unify(x(5) x(6))
		return
lbl(221834)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(3))
		getListValVar(x(0) x(6) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(3))
		return
lbl(221866)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('-')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(1)
		unifyValue(x(3))
		getList(x(2))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(221900)	getLiteral('=<:' x(4))
		unify(x(5) x(6))
		return
lbl(221907)	getLiteral('=<:' x(4))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(x(3))
		getList(x(0))
		unifyValue(x(6))
		unifyLiteral(nil)
		return
lbl(221927)	getLiteral('\\=:' x(4))
		unify(x(5) x(6))
		return
lbl(221934)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(55)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(221796)
lbl(221949)	definition(x(7) 222084 pid('AreLinearConstraints' 2 pos('./compiler/UnnestFD.oz' 58 3) nil 5) <Q: 1456> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 222028)
lbl(221966)	getVarVar(x(2) x(3))
		shallowGuard(222028)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(221986)	shallowThen
		move(x(4) y(0))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(2) 222012 222017)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1456> 5)
lbl(222012)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222017)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(62)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222028)	testRecord(y(0) fOpApply 3 222069)
lbl(222033)	getVarVar(x(0) x(1))
		shallowGuard(222069)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVoid(1)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
lbl(222053)	shallowThen
		testRecord(x(1) fVar 2 222064)
lbl(222059)	getLiteral(true y(1))
		deAllocateL3
		return
lbl(222064)	getLiteral(false y(1))
		deAllocateL3
		return
lbl(222069)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(69)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(221949)
lbl(222084)	definition(x(7) 222217 pid('MakeTuples' 5 pos('./compiler/UnnestFD.oz' 72 3) nil 8) <Q: 1457> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222162)
lbl(222109)	getVarVar(x(5) x(6))
		shallowGuard(222162)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222129)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1457> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1457> 11)
lbl(222162)	testRecord(y(0) fOpApply 3 222202)
lbl(222167)	getVarVar(x(0) x(1))
		shallowGuard(222202)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222187)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyValue(x(2))
		unifyValue(y(4))
		deAllocateL7
		return
lbl(222202)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(85)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222084)
lbl(222217)	definition(x(7) 222285 pid('ProductToVariableList' 2 pos('./compiler/UnnestFD.oz' 89 6) nil 5) <Q: 1458> nil)
		allocateL1
		move(x(0) y(0))
		match(y(0) ht(222262 [onRecord(fOpApply 3 222230) onRecord(fVar 2 222275)]))
lbl(222230)	getVarVar(x(2) x(3))
		shallowGuard(222262)
		getLiteral('*' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
lbl(222250)	shallowThen
		getListValVar(x(1) x(2) x(1))
		move(x(4) x(0))
		deAllocateL1
		genFastCall(<Q: 1458> 5)
lbl(222262)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(98)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222275)	getList(x(1))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL1
		return
		endDefinition(222217)
lbl(222285)	definition(x(7) 222451 pid('MakeTupleTuples' 5 pos('./compiler/UnnestFD.oz' 101 6) nil 8) <Q: 1459> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		testRecord(y(0) fOpApply 3 222363)
lbl(222310)	getVarVar(x(5) x(6))
		shallowGuard(222363)
		getLiteral('+' x(5))
		getList(x(6))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(6))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222330)	shallowThen
		move(x(7) y(0))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1459> 10)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(6) x(3))
		move(y(4) x(4))
		deAllocateL7
		genFastCall(<Q: 1459> 11)
lbl(222363)	testRecord(y(0) fOpApply 3 222436)
lbl(222368)	getVarVar(x(0) x(1))
		shallowGuard(222436)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(222388)	shallowThen
		getList(y(1))
		unifyValue(x(0))
		unifyValue(y(2))
		getList(y(3))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyVariable(x(5))
		inlineDot(x(0) 2 x(1) cache)
		unify(x(1) x(5))
		move(x(2) x(0))
		move(x(4) x(1))
		deAllocateL7
		genFastCall(<Q: 1458> 5)
lbl(222436)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(113)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(222285)
lbl(222451)	definition(x(7) 222661 pid('NegDNF' 3 pos('./compiler/UnnestFD.oz' 121 6) nil 7) <Q: 1460> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 222537)
lbl(222471)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(222537)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(222493)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1460> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222537)	match(y(0) ht(222595 [onRecord(fOpApply 3 222540) onRecord(fInt 2 222608) onRecord(fVar 2 222627)]))
lbl(222540)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222595)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222562)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyValue(x(3))
		unifyLiteral(nil)
		move(y(1) x(1))
		move(x(4) x(2))
		deAllocateL3
		genFastCall(<Q: 1460> 7)
lbl(222595)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(135)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(222608)	getVarVar(x(0) x(1))
		getRecord(fInt 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(2))
		deAllocateL3
		return
lbl(222627)	getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyNumber(~1)
		unifyValue(y(1))
		getList(x(2))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL3
		return
		endDefinition(222451)
lbl(222661)	definition(x(7) 222856 pid('MulDNF' 4 pos('./compiler/UnnestFD.oz' 138 6) nil 8) <Q: 1461> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 222751)
lbl(222683)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(222751)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(222705)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(6))
		getList(x(0))
		unifyVariable(x(3))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(7) y(3))
		move(x(4) x(0))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222751)	testRecord(y(1) fOpApply 3 222832)
lbl(222756)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(222832)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222778)	shallowThen
		getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(1))
		unifyLiteral(nil)
		move(x(3) y(3))
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(x(4) x(3))
		genFastCall(<Q: 1461> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1461> 9)
lbl(222832)	getRecord(fOpApply 3 y(3))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL4
		return
		endDefinition(222661)
lbl(222856)	definition(x(7) 223148 pid('MakeDNF' 2 pos('./compiler/UnnestFD.oz' 153 6) nil 6) <Q: 1462> nil)
		allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 222936)
lbl(222873)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(222936)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(222895)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(4))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(5) y(1))
		move(x(2) x(0))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(222936)	testRecord(y(0) fOpApply 3 223020)
lbl(222941)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223020)
		getLiteral('-' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(222963)	shallowThen
		getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYXY(x(3) y(1) x(2) y(2))
		move(x(4) x(1))
		genFastCall(<Q: 1462> 4)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApply 3 x(0))
		setConstant('~')
		setValue(x(1))
		setValue(y(2))
		move(y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1462> 5)
lbl(223020)	testRecord(y(0) fOpApply 3 223063)
lbl(223025)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223063)
		getLiteral('~' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyLiteral(nil)
lbl(223041)	shallowThen
		move(x(2) y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1460> 7)
lbl(223063)	match(y(0) ht(223123 [onRecord(fOpApply 3 223066) onRecord(fInt 2 223136) onRecord(fVar 2 223141)]))
lbl(223066)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223123)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223088)	shallowThen
		moveMoveXYXY(x(3) y(0) x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL5
		genFastCall(<Q: 1461> 9)
lbl(223123)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(169)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223136)	unify(y(1) y(0))
		deAllocateL5
		return
lbl(223141)	unify(y(1) y(0))
		deAllocateL5
		return
		endDefinition(222856)
lbl(223148)	definition(x(7) 223382 pid('NormalizeProduct' 3 pos('./compiler/UnnestFD.oz' 174 6) nil 13) <Q: 1463> nil)
		allocateL4
		move(x(0) y(0))
		match(y(0) ht(223349 [onRecord(fOpApply 3 223161) onRecord(fInt 2 223362) onRecord(fVar 2 223372)]))
lbl(223161)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223349)
		getLiteral('*' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223183)	shallowThen
		move(x(3) y(0))
		match(y(0) ht(223264 [onRecord(fOpApply 3 223190) onRecord(fInt 2 223277) onRecord(fVar 2 223304)]))
lbl(223190)	getVarVar(x(0) x(4))
		getVariable(x(7))
		shallowGuard(223264)
		getLiteral('*' x(0))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(8))
		unifyLiteral(nil)
lbl(223212)	shallowThen
		putList(x(12))
		setValue(x(6))
		setConstant(nil)
		putList(x(11))
		setValue(x(8))
		setValue(x(12))
		putRecord(fOpApply 3 x(10))
		setConstant('*')
		setValue(x(11))
		setValue(x(5))
		putList(x(9))
		setValue(x(10))
		setConstant(nil)
		putList(x(4))
		setValue(x(0))
		setValue(x(9))
		putRecord(fOpApply 3 x(3))
		setConstant('*')
		setValue(x(4))
		setValue(x(7))
		move(x(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1463> 7)
lbl(223264)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(197)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223277)	getVariable(y(0))
		move(x(1) y(1))
		move(x(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1463> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		callBI('*' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
lbl(223304)	moveMoveXYXY(x(2) y(1) x(5) y(2))
		move(x(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(3) fOne 223327)
lbl(223322)	unify(y(1) y(0))
		deAllocateL4
		return
lbl(223327)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(2))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(3))
		unifyLiteral(nil)
		deAllocateL4
		return
lbl(223349)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(204)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223362)	getVariable(x(0))
		unify(x(1) x(0))
		getLiteral(fOne x(2))
		deAllocateL4
		return
lbl(223372)	getNumber(1 x(1))
		unify(x(2) y(0))
		deAllocateL4
		return
		endDefinition(223148)
lbl(223382)	definition(x(7) 223716 pid('Normalize' 3 pos('./compiler/UnnestFD.oz' 207 6) nil 8) <Q: 1464> nil)
		allocateL8
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 223571)
lbl(223402)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(223571)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(223424)	shallowThen
		moveMoveXYXY(x(6) y(0) x(5) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1464> 6)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(1))
		testRecord(y(7) fZero 1 223476)
lbl(223471)	unify(y(2) y(5))
		deAllocateL8
		return
lbl(223476)	match(y(5) ht(223549 [onRecord(fZero 1 223479) onRecord(fOpApply 3 223484)]))
lbl(223479)	unify(y(2) y(7))
		deAllocateL8
		return
lbl(223484)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223549)
		getLiteral('+' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(223506)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(1))
		unifyValue(y(3))
		getListValVar(x(1) x(0) x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fOpApply 3 x(5))
		unifyLiteral('+')
		unifyVariable(x(6))
		unifyValue(x(2))
		getListValVar(x(6) x(3) x(7))
		getList(x(7))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223549)	getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223571)	match(y(0) ht(223648 [onRecord(fOpApply 3 223574) onRecord(fInt 2 223661) onRecord(fVar 2 223675)]))
lbl(223574)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) '*' 223648)
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1463> 6)
		testLiteral(y(5) fOne 223613)
lbl(223602)	unify(y(1) y(4))
		getRecord(fZero 1 y(2))
		unifyValue(y(3))
		deAllocateL8
		return
lbl(223613)	getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyValue(y(4))
		unifyValue(y(3))
		getList(x(2))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(223648)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(245)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(223661)	getVarVar(x(0) x(1))
		unify(y(1) x(0))
		getRecord(fZero 1 y(2))
		unifyValue(x(1))
		deAllocateL8
		return
lbl(223675)	getVoid(1)
		getVariable(x(0))
		getNumber(0 y(1))
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord(fInt 2 x(2))
		unifyNumber(1)
		unifyValue(x(0))
		getList(x(3))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(223382)
lbl(223716)	definition(x(7) 223945 pid('SimplifyRest' 4 pos('./compiler/UnnestFD.oz' 250 6) nil 9) <Q: 1465> nil)
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testRecord(y(0) fOpApply 3 223881)
lbl(223738)	getVarVar(x(4) x(5))
		getVariable(x(6))
		shallowGuard(223881)
		getLiteral('+' x(4))
		getList(x(5))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
lbl(223760)	shallowThen
		moveMoveXYXY(x(4) y(0) x(7) y(4))
		move(x(6) y(5))
		testRecord(y(0) fOpApply 3 223835)
lbl(223774)	getVarVar(x(0) x(5))
		shallowGuard(223835)
		getLiteral('*' x(0))
		getList(x(5))
		unifyVariable(x(0))
		unifyVariable(x(5))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fVar 2 x(5))
		unifyValVar(y(1) x(8))
lbl(223809)	shallowThen
		moveMoveXYYX(x(0) y(0) y(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1465> 8)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		deAllocateL7
		return
lbl(223835)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(2) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(6) fZero 1 223859)
lbl(223854)	unify(y(3) y(0))
		deAllocateL7
		return
lbl(223859)	getRecord(fOpApply 3 y(3))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(5))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyLiteral(nil)
		deAllocateL7
		return
lbl(223881)	testRecord(y(0) fOpApply 3 223935)
lbl(223886)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(223935)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fVar 2 x(1))
		unifyValVar(y(1) x(3))
lbl(223923)	shallowThen
		unify(y(2) x(0))
		getRecord(fZero 1 y(3))
		unifyValue(x(2))
		deAllocateL7
		return
lbl(223935)	getNumber(0 y(2))
		unify(y(3) y(0))
		deAllocateL7
		return
		endDefinition(223716)
lbl(223945)	definition(x(7) 224240 pid('Simplify' 2 pos('./compiler/UnnestFD.oz' 274 6) nil 10) <Q: 1466> nil)
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fOpApply 3 224233)
lbl(223962)	getVarVar(x(2) x(3))
		getVariable(x(4))
		shallowGuard(224233)
		getLiteral('+' x(2))
		getList(x(3))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(223984)	shallowThen
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		move(x(4) y(3))
		testRecord(y(0) fOpApply 3 224203)
lbl(223998)	getVarVar(x(0) x(3))
		getVariable(x(6))
		shallowGuard(224203)
		getLiteral('*' x(0))
		getList(x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord(fInt 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(7))
		getList(x(3))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fVar 2 x(3))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(224036)	shallowThen
		moveMoveXYXY(x(0) y(0) x(7) y(4))
		moveMoveXYXY(x(8) y(5) x(9) y(6))
		moveMoveXYYX(x(6) y(7) y(2) x(0))
		move(y(5) x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1465> 8)
		testRecord(y(9) fZero 1 224121)
lbl(224069)	getRecord(fOpApply 3 y(1))
		unifyLiteral('*')
		unifyVariable(x(0))
		unifyValue(y(7))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getRecord(fVar 2 x(4))
		unifyValue(y(5))
		unifyValue(y(6))
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(3))
		deAllocateL10
		return
lbl(224121)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('*')
		unifyVariable(x(3))
		unifyValue(y(7))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fVar 2 x(7))
		unifyValue(y(5))
		unifyValue(y(6))
		getList(x(2))
		unifyVariable(x(8))
		unifyLiteral(nil)
		moveMoveYXYX(y(0) x(0) y(8) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) x(6))
		move(y(9) x(0))
		move(x(8) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224203)	getRecord(fOpApply 3 y(1))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(y(3))
		getListValVar(x(0) y(0) x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		move(y(2) x(0))
		move(x(2) x(1))
		deAllocateL10
		genFastCall(<Q: 1466> 5)
lbl(224233)	unify(y(1) y(0))
		deAllocateL10
		return
		endDefinition(223945)
lbl(224240)	definition(x(7) 225247 pid('MakeFdCompareStatement' 5 pos('./compiler/UnnestFD.oz' 301 3) nil 13) <Q: 1467> [y(1)])
		allocateL(11)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		createVariableMove(y(2) x(4))
		createVariableMove(y(3) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(4) x(0))
		createVariableMove(y(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(4) fZero 1 224475)
lbl(224297)	getVariable(x(0))
		match(y(2) ht(224462 [onScalar('=:' 224302) onScalar('=<:' 224330) onScalar('\\=:' 224396)]))
lbl(224302)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fInt 2 x(1))
		unifyValue(y(3))
		unifyValue(x(0))
		getRecord(fInt 2 x(2))
		unifyNumber(0)
		unifyValue(y(0))
		deAllocateL
		return
lbl(224330)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`true`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224396)	getRecord(fEq 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('==')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fInt 2 x(4))
		unifyValue(y(3))
		unifyValue(x(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fInt 2 x(6))
		unifyNumber(0)
		unifyValue(y(0))
		getRecord(fEscape 2 x(2))
		unifyVariable(x(7))
		unifyValue(y(0))
		getRecord(fVar 2 x(7))
		unifyLiteral('`false`')
		unifyValue(y(0))
		deAllocateL
		return
lbl(224462)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(319)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224475)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(5) 224942 225234)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		testBool(y(4) 224787 224931)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setValue(y(6))
		putRecord(fAtom 2 y(6))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 y(2))
		setVariable(x(0))
		setValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(224575)	definition(x(1) 224615 pid('' 2 pos('./compiler/UnnestFD.oz' 327 19) nil 4) unit nil)
		shallowGuard(224602)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(224591)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(224602)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224575)
lbl(224615)	move(y(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 224692 224776)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(4) x(6))
		getListValVar(x(6) y(6) x(7))
		getList(x(7))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224692)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(5))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fVar 2 x(4))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(6))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(7))
		getListValVar(x(7) y(4) x(8))
		getListValVar(x(8) y(6) x(9))
		getList(x(9))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224776)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(327)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224787)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(3))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(5))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(6))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(10))
		getListValVar(x(10) x(1) x(11))
		getListValVar(x(11) x(2) x(12))
		getList(x(12))
		unifyValue(x(3))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(224931)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(323)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(224942)	move(y(4) x(0))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		call(x(2) 2)
		createVariable(y(7))
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		testBool(y(4) 225055 225155)
		getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(225166)
lbl(225055)	getRecord(fRecord 2 y(7))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(5))
		getRecord(fInt 2 x(2))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(9))
		unifyValue(y(2))
		unifyValue(y(0))
		getRecord(fInt 2 y(10))
		unifyNumber(0)
		unifyValue(y(0))
		branch(225166)
lbl(225155)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(345)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225166)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fVar 2 x(3))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(5))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(7) x(6))
		getListValVar(x(6) y(8) x(7))
		getListValVar(x(7) y(9) x(8))
		getList(x(8))
		unifyValue(y(10))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225234)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(321)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(224240)
lbl(225247)	definition(x(7) 226361 pid('MakeFdCompareExpression' 6 pos('./compiler/UnnestFD.oz' 362 3) nil 18) <Q: 1468> [y(1)])
		allocateL(12)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariableMove(y(3) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(5) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1466> 4)
		testRecord(y(5) fZero 1 225453)
lbl(225307)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(x(0))
		putRecord(fInt 2 x(4))
		setValue(y(4))
		setValue(x(0))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fOpApply 3 x(6))
		unifyLiteral('.')
		unifyVariable(x(8))
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyVariable(x(10))
		getRecord(fVar 2 x(9))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(10))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(4) x(1) x(13))
		getListValVar(x(13) x(2) x(14))
		getListValVar(x(14) x(3) x(15))
		getList(x(15))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225453)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 226022 226348)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 225833 226011)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 y(3))
		setVariable(x(0))
		setValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
lbl(225553)	definition(x(1) 225593 pid('' 2 pos('./compiler/UnnestFD.oz' 385 19) nil 4) unit nil)
		shallowGuard(225580)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(225569)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(225580)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225553)
lbl(225593)	move(y(6) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(4) 225704 225822)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(0))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(3) x(12))
		getList(x(12))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225704)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(2))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(0))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(3) x(14))
		getList(x(14))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(225822)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(385)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(225833)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setValue(y(4))
		setValue(y(0))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(0))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(0))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(3))
		setValue(y(0))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(0))
		getRecord(fApply 3 y(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(0))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(0))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(0))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226011)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(381)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226022)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(3)])
		move(x(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 226135 226235)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(0))
		move(y(4) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(0))
		branch(226246)
lbl(226135)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyValue(y(4))
		unifyValue(y(0))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(0))
		getRecord(fAtom 2 y(10))
		unifyValue(y(3))
		unifyValue(y(0))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(0))
		branch(226246)
lbl(226235)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(409)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226246)	getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(reified)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(0))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(226348)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(379)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(225247)
lbl(226361)	definition(x(7) 226506 pid('GetVarsFromFdCompare' 3 pos('./compiler/UnnestFD.oz' 433 2) nil 6) <Q: 1469> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 226426)
lbl(226381)	getVarVar(x(3) x(4))
		shallowGuard(226426)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
lbl(226401)	shallowThen
		move(x(5) y(0))
		move(x(3) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226426)	match(y(0) ht(226473 [onRecord(fOpApply 3 226429) onRecord(fInt 2 226486) onRecord(fVar 2 226491) onRecord(fZero 1 226499)]))
lbl(226429)	getVarVar(x(0) x(1))
		shallowGuard(226473)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(226449)	shallowThen
		moveMoveXYYX(x(2) y(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1469> 6)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1469> 7)
lbl(226473)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(446)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(226486)	unify(y(1) y(2))
		deAllocateL4
		return
lbl(226491)	getList(y(1))
		unifyValue(y(0))
		unifyValue(y(2))
		deAllocateL4
		return
lbl(226499)	unify(y(1) y(2))
		deAllocateL4
		return
		endDefinition(226361)
lbl(226506)	definition(x(7) 226570 pid('GetVarsFromFdIn' 4 pos('./compiler/UnnestFD.oz' 449 2) nil 6) <Q: 1470> nil)
		testRecord(x(0) fRecord 2 226561)
lbl(226517)	allocateL2
		getVoid(1)
		getVariable(x(4))
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getListValVar(x(1) x(4) x(1))
		move(x(3) y(0))
		move(x(5) x(0))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1470> 8)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(226561)	unify(x(1) x(2))
		getNumber(0 x(3))
		return
		endDefinition(226506)
lbl(226570)	definition(x(7) 226752 pid('NormalizeCondisExpression' 5 pos('./compiler/UnnestFD.oz' 460 2) nil 8) <Q: 1471> nil)
		match(x(0) ht(226737 [onRecord(fFdCompare 4 226579) onRecord(fFdIn 4 226688)]))
lbl(226579)	allocateL9
		getVarVar(x(0) x(6))
		getVarVar(x(7) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(6) x(1))
		move(x(7) x(2))
		move(y(0) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		genFastCall(<Q: 1455> 12)
		move(y(6) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1462> 4)
		move(y(7) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1464> 6)
		move(y(8) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1466> 4)
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		move(y(2) x(2))
		genFastCall(<Q: 1469> 6)
		getNumber(1 y(3))
		getRecord(fFdCompare 4 y(4))
		unifyValue(y(5))
		unifyValVar(y(7) x(0))
		unifyValue(y(0))
		getRecord(fInt 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(y(6) x(0))
		callBI('~' [x(0)]#[x(2)])
		unify(x(2) x(1))
		deAllocateL9
		return
lbl(226688)	allocateL2
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(0) y(0) x(4) y(1))
		match(x(5) ht(226719 [onScalar('::' 226700) onScalar(':::' 226711)]))
lbl(226700)	getList(x(1))
		unifyValue(x(6))
		unifyValue(x(2))
		getNumber(1 x(3))
		branch(226732)
lbl(226711)	move(x(6) x(0))
		genFastCall(<Q: 1470> 8)
		branch(226732)
lbl(226719)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(473)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(226732)	unify(y(1) y(0))
		deAllocateL2
		return
lbl(226737)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(475)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226570)
lbl(226752)	definition(x(7) 226847 pid('NormalizeCondisClause' 5 pos('./compiler/UnnestFD.oz' 478 2) nil 5) <Q: 1472> nil)
		match(x(0) ht(226832 [onScalar(nil 226761) onRecord('|' 2 226771)]))
lbl(226761)	unify(x(1) x(2))
		getNumber(0 x(3))
		getLiteral(nil x(4))
		return
lbl(226771)	allocateL9
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(4) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		createVariableMove(y(6) x(4))
		genFastCall(<Q: 1471> 10)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(1) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1472> 10)
		moveMoveYXYX(y(5) x(0) y(7) x(1))
		inlinePlus(x(0) x(1) x(2))
		unify(x(2) y(2))
		getList(y(3))
		unifyValue(y(6))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(226832)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(226752)
lbl(226847)	definition(x(7) 227051 pid('RenameFdCompare' 3 pos('./compiler/UnnestFD.oz' 498 2) nil 7) <Q: 1473> [g(8)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testRecord(y(0) fOpApply 3 226933)
lbl(226867)	getVarVar(x(3) x(4))
		getVariable(x(5))
		shallowGuard(226933)
		getLiteral('+' x(3))
		getList(x(4))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(226889)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('+')
		unifyVariable(x(0))
		unifyValue(x(5))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(y(0))
		unifyLiteral(nil)
		move(x(6) y(2))
		move(x(3) x(0))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(226933)	match(y(0) ht(227004 [onRecord(fOpApply 3 226936) onRecord(fInt 2 227017) onRecord(fVar 2 227022) onRecord(fZero 1 227044)]))
lbl(226936)	getVarVar(x(0) x(1))
		getVariable(x(2))
		shallowGuard(227004)
		getLiteral('*' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(226958)	shallowThen
		getRecord(fOpApply 3 y(2))
		unifyLiteral('*')
		unifyVariable(x(1))
		unifyValue(x(2))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(y(0))
		unifyLiteral(nil)
		moveMoveXYYX(x(3) y(2) y(1) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1473> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL3
		genFastCall(<Q: 1473> 7)
lbl(227004)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(514)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227017)	unify(y(2) y(0))
		deAllocateL3
		return
lbl(227022)	getVarVar(x(0) x(1))
		getRecord(fVar 2 y(2))
		unifyVariable(x(2))
		unifyValue(x(1))
		move(y(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL3
		return
lbl(227044)	unify(y(2) y(0))
		deAllocateL3
		return
		endDefinition(226847)
lbl(227051)	definition(x(7) 227133 pid('RenameFdIn' 3 pos('./compiler/UnnestFD.oz' 517 2) nil 10) <Q: 1474> [g(8)])
		testRecord(x(0) fRecord 2 227127)
lbl(227062)	getVarVar(x(3) x(4))
		getList(x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		getRecord(fVar 2 x(0))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getList(x(4))
		unifyVariable(x(7))
		unifyLiteral(nil)
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(0))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord(fVar 2 x(2))
		unifyVariable(x(8))
		unifyValue(x(6))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		callBI('Dictionary.get' [x(1) x(5)]#[x(0)])
		unify(x(0) x(8))
		move(x(7) x(0))
		move(x(9) x(2))
		genFastCall(<Q: 1474> 7)
lbl(227127)	unify(x(2) x(0))
		return
		endDefinition(227051)
lbl(227133)	definition(x(7) 228538 pid('GenerateCondisExpression' 4 pos('./compiler/UnnestFD.oz' 528 2) nil 18) <Q: 1475> [y(1) g(8)])
		allocateL(12)
		move(x(0) y(0))
		match(y(0) ht(228274 [onRecord(fFdCompare 4 227147) onRecord(fFdIn 4 228287)]))
lbl(227147)	getVarVar(x(4) x(5))
		getVarVar(x(6) x(7))
		shallowGuard(228274)
		getRecord(fInt 2 x(6))
		unifyVariable(x(8))
		unifyVariable(x(9))
lbl(227163)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(8) y(3))
		move(x(7) y(4))
		move(x(5) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1473> 6)
		testRecord(y(5) fZero 1 227380)
lbl(227191)	getVariable(x(0))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setVariable(x(5))
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		move(y(3) x(2))
		callBI('~' [x(2)]#[x(3)])
		unify(x(3) x(5))
		putRecord(fAtom 2 x(3))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(5))
		setConstant(1)
		setValue(y(4))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fAtom 2 x(3))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(0)
		setValue(x(0))
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(1) x(14))
		getListValVar(x(14) x(2) x(15))
		getListValVar(x(15) x(3) x(16))
		getListValVar(x(16) x(4) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227380)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1456> 4)
		testBool(y(6) 227943 228263)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1457> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		testBool(y(5) 227745 227932)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setValue(y(7))
		putRecord(fAtom 2 y(7))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 y(2))
		setValue(y(3))
		setValue(y(4))
lbl(227465)	definition(x(1) 227505 pid('' 2 pos('./compiler/UnnestFD.oz' 550 14) nil 4) unit nil)
		shallowGuard(227492)
		getRecord(fInt 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(227481)	shallowThen
		putConstant(1 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(227492)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(227465)
lbl(227505)	move(y(6) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 35> 6)
		testBool(y(3) 227616 227734)
		getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sum)
		unifyValue(y(4))
		getListValVar(x(1) y(5) x(10))
		getListValVar(x(10) y(7) x(11))
		getListValVar(x(11) y(2) x(12))
		getList(x(12))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227616)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(y(6))
		getRecord(fApply 3 y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(1))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(y(4))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fVar 2 x(7))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(2) x(0) x(11))
		getListValVar(x(11) y(5) x(12))
		getListValVar(x(12) y(7) x(13))
		getListValVar(x(13) y(2) x(14))
		getList(x(14))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227734)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(550)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227745)	putRecord(fAtom 2 x(1))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setVariable(x(4))
		setValue(y(4))
		putList(x(2))
		setValue(x(3))
		setValue(y(6))
		putRecord(fRecord 2 x(0))
		setValue(x(1))
		setValue(x(2))
		move(y(3) x(1))
		callBI('~' [x(1)]#[x(2)])
		unify(x(2) x(4))
		putRecord(fAtom 2 x(2))
		setConstant('#')
		setValue(y(4))
		putRecord(fInt 2 x(4))
		setConstant(1)
		setValue(y(4))
		putList(x(3))
		setValue(x(4))
		setValue(y(7))
		putRecord(fRecord 2 x(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fAtom 2 x(2))
		setValue(y(2))
		setValue(y(4))
		putRecord(fInt 2 x(3))
		setConstant(0)
		setValue(y(4))
		getRecord(fApply 3 y(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(4))
		unifyLiteral('.')
		unifyVariable(x(6))
		unifyValue(y(4))
		getList(x(6))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(y(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(sumC)
		unifyValue(y(4))
		getListValVar(x(5) x(0) x(14))
		getListValVar(x(14) x(1) x(15))
		getListValVar(x(15) x(2) x(16))
		getListValVar(x(16) x(3) x(17))
		getList(x(17))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(227932)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(546)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(227943)	move(y(5) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		putConstant(nil x(4))
		genFastCall(<Q: 1459> 10)
		move(g(0) x(0))
		inlineDot(x(0) is x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		call(x(2) 2)
		createVariable(y(8))
		createVariable(y(9))
		createVariable(y(10))
		createVariable(y(11))
		testBool(y(5) 228041 228150)
		getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyValue(y(7))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyValue(y(3))
		unifyValue(y(4))
		branch(228161)
lbl(228041)	getRecord(fRecord 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(6))
		getRecord(fInt 2 x(2))
		unifyVariable(x(3))
		unifyValue(y(4))
		move(y(3) x(0))
		callBI('~' [x(0)]#[x(1)])
		unify(x(1) x(3))
		getRecord(fRecord 2 y(9))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		getRecord(fRecord 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fAtom 2 x(3))
		unifyLiteral('#')
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyLiteral(nil)
		getRecord(fInt 2 x(5))
		unifyNumber(1)
		unifyValue(y(4))
		getRecord(fAtom 2 y(10))
		unifyValue(y(2))
		unifyValue(y(4))
		getRecord(fInt 2 y(11))
		unifyNumber(0)
		unifyValue(y(4))
		branch(228161)
lbl(228150)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(574)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228161)	getRecord(fApply 3 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(4))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(4))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(4))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(4))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(sumCN)
		unifyValue(y(4))
		getListValVar(x(1) y(8) x(10))
		getListValVar(x(10) y(9) x(11))
		getListValVar(x(11) y(10) x(12))
		getListValVar(x(12) y(11) x(13))
		getList(x(13))
		unifyValue(y(0))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228263)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(544)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228274)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(606)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228287)	getVarVar(x(0) x(4))
		getVarVar(x(5) y(0))
		match(x(0) ht(228523 [onScalar('::' 228296) onScalar(':::' 228412)]))
lbl(228296)	getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(4))
		putRecord(fVar 2 x(6))
		setVariable(x(7))
		setValue(x(4))
		callBI('Dictionary.get' [x(1) x(0)]#[x(8)])
		unify(x(8) x(7))
		getRecord(fApply 3 x(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(x(4))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(3))
		unifyValue(x(4))
		getList(x(3))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord(fOpApply 3 x(7))
		unifyLiteral('.')
		unifyVariable(x(9))
		unifyValue(x(4))
		getList(x(9))
		unifyVariable(x(10))
		unifyVariable(x(11))
		getRecord(fVar 2 x(10))
		unifyLiteral('FD')
		unifyValue(x(4))
		getList(x(11))
		unifyVariable(x(12))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(12))
		unifyLiteral(cd)
		unifyValue(x(4))
		getList(x(8))
		unifyVariable(x(13))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(13))
		unifyLiteral(int)
		unifyValue(x(4))
		getListValVar(x(1) x(5) x(14))
		getListValVar(x(14) x(6) x(15))
		getList(x(15))
		unifyValue(x(2))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228412)	moveMoveXYXY(x(2) y(1) x(3) y(2))
		move(x(5) y(3))
		move(x(4) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1474> 6)
		getRecord(fApply 3 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		getRecord(fOpApply 3 x(0))
		unifyLiteral('.')
		unifyVariable(x(2))
		unifyValue(y(0))
		getList(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord(fOpApply 3 x(3))
		unifyLiteral('.')
		unifyVariable(x(5))
		unifyValue(y(0))
		getList(x(5))
		unifyVariable(x(6))
		unifyVariable(x(7))
		getRecord(fVar 2 x(6))
		unifyLiteral('FD')
		unifyValue(y(0))
		getList(x(7))
		unifyVariable(x(8))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(8))
		unifyLiteral(cd)
		unifyValue(y(0))
		getList(x(4))
		unifyVariable(x(9))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(9))
		unifyLiteral(dom)
		unifyValue(y(0))
		getListValVar(x(1) y(3) x(10))
		getListValVar(x(10) y(4) x(11))
		getList(x(11))
		unifyValue(y(1))
		unifyLiteral(nil)
		deAllocateL
		return
lbl(228523)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(605)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(227133)
lbl(228538)	definition(x(7) 228596 pid('OccursVar' 3 pos('./compiler/UnnestFD.oz' 609 2) nil 5) <Q: 1476> nil)
		match(x(0) ht(228581 [onScalar(nil 228547) onRecord('|' 2 228551)]))
lbl(228547)	getLiteral(false x(2))
		return
lbl(228551)	getVarVar(x(0) x(3))
		testRecord(x(0) fVar 2 228575)
lbl(228559)	getVariable(x(0))
		testBI('==' [x(0) x(1)]#[x(4)] 228569)
		getLiteral(true x(2))
		return
lbl(228569)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228575)	move(x(3) x(0))
		genFastCall(<Q: 1476> 7)
lbl(228581)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(617)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228538)
lbl(228596)	definition(x(7) 228761 pid('GenerateCondisClause' 7 pos('./compiler/UnnestFD.oz' 620 2) nil 9) <Q: 1477> [g(2)])
		allocateL4
		callBI('NewDictionary' nil#[x(7)])
lbl(228606)	definition(x(8) 228708 pid('' 2 pos('./compiler/UnnestFD.oz' 632 3) nil 4) unit [x(3) x(1) g(0) x(7)])
		allocateL5
		getRecord(fVar 2 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		move(x(1) y(2))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1476> 6)
		testBool(y(3) 228685 228695)
		move(y(1) x(1))
		putConstant('CDVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(1) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(4) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getRecord(fVar 2 y(2))
		unifyValue(y(4))
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228685)	getRecord(fAtom 2 y(2))
		unifyLiteral(void)
		unifyValue(y(1))
		deAllocateL5
		return
lbl(228695)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(633)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228606)
lbl(228708)	moveMoveXYXY(x(0) y(0) x(4) y(1))
		moveMoveXYXY(x(6) y(2) x(7) y(3))
		move(x(2) x(0))
		move(x(8) x(1))
		move(x(5) x(2))
		genFastCall(<P: 29> 6)
lbl(228730)	definition(x(1) 228750 pid('' 2 pos('./compiler/UnnestFD.oz' 642 21) nil 4) unit [y(3) y(1)])
		move(x(1) x(3))
		move(g(0) x(1))
		move(g(1) x(2))
		genFastCall(<Q: 1475> 9)
		endDefinition(228730)
lbl(228750)	moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL4
		genFastCall(<P: 29> 7)
		endDefinition(228596)
lbl(228761)	definition(x(7) 228799 pid('OccursIn' 3 pos('./compiler/UnnestFD.oz' 647 2) nil 5) <Q: 1478> nil)
		testList(x(1) 228793)
lbl(228770)	getVarVar(x(1) x(3))
		inlineDot(x(1) 1 x(1) cache)
		testBI('==' [x(0) x(1)]#[x(4)] 228787)
		getLiteral(true x(2))
		return
lbl(228787)	move(x(3) x(1))
		genFastCall(<Q: 1478> 7)
lbl(228793)	getLiteral(false x(2))
		return
		endDefinition(228761)
lbl(228799)	definition(x(7) 228892 pid('VariableUnion' 3 pos('./compiler/UnnestFD.oz' 654 2) nil 3) <Q: 1479> nil)
		match(x(0) ht(228877 [onScalar(nil 228808) onRecord('|' 2 228812)]))
lbl(228808)	unify(x(2) x(1))
		return
lbl(228812)	allocateL5
		getVarVar(y(0) y(1))
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVoid(1)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1478> 6)
		testBool(y(4) 228851 228866)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228851)	putList(x(1))
		setValue(y(0))
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1479> 7)
lbl(228866)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(659)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(228877)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(663)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(228799)
lbl(228892)	definition(x(7) 229622 pid('MakeCondis' 4 pos('./compiler/UnnestFD.oz' 667 6) nil 28) <Q: 1480> nil)
		allocateL8
lbl(228899)	definition(x(4) 228938 pid('' 2 pos('./compiler/UnnestFD.oz' 684 9) nil 5) unit nil)
		allocateL4
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		putConstant(nil x(2))
		createVariableMove(y(2) x(3))
		createVariableMove(y(3) x(4))
		genFastCall(<Q: 1472> 10)
		getRecord('#' 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
		endDefinition(228899)
lbl(228938)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
lbl(228955)	definition(x(1) 228996 pid('' 3 pos('./compiler/UnnestFD.oz' 689 6) nil 6) unit nil)
		shallowGuard(228983)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(228973)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1479> 7)
lbl(228983)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(689)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(228955)
lbl(228996)	move(y(3) x(0))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 30> 8)
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<P: 28> 4)
lbl(229017)	definition(x(1) 229122 pid('' 2 pos('./compiler/UnnestFD.oz' 691 2) nil 7) unit [y(0) y(1) y(5)])
		shallowGuard(229109)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229035)	shallowThen
		allocateL6
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		move(g(1) x(1))
		putConstant('CDControlVar' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate g(0) 3 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(g(1))
		sendMsg(getPrintName y(3) 1 cache)
		move(y(2) x(0))
		move(g(0) x(1))
		move(g(2) x(2))
		moveMoveYXYX(y(1) x(3) y(4) x(4))
		createVariableMove(y(3) x(5))
		createVariableMove(y(5) x(6))
		genFastCall(<Q: 1477> 14)
		getRecord('#' 3 y(0))
		unifyValue(y(4))
		unifyValue(y(3))
		unifyValue(y(5))
		deAllocateL6
		return
lbl(229109)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229017)
lbl(229122)	move(y(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(4))
		setValue(x(0))
		setVariable(x(2))
lbl(229147)	definition(x(1) 229188 pid('' 2 pos('./compiler/UnnestFD.oz' 698 19) nil 5) unit [y(1)])
		shallowGuard(229175)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229165)	shallowThen
		getRecord(fInt 2 x(1))
		unifyValue(x(3))
		unifyValue(g(0))
		return
lbl(229175)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(698)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229147)
lbl(229188)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(3))
		setValue(x(0))
		setVariable(x(2))
lbl(229210)	definition(x(1) 229246 pid('' 2 pos('./compiler/UnnestFD.oz' 699 39) nil 5) unit nil)
		shallowGuard(229233)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229228)	shallowThen
		unify(x(1) x(2))
		return
lbl(229233)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(699)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229210)
lbl(229246)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(6))
		setValue(x(0))
		setValue(y(5))
		putRecord(fAtom 2 x(0))
		setConstant('#')
		setValue(y(1))
		putRecord(fRecord 2 y(5))
		setValue(x(0))
		setVariable(x(2))
lbl(229284)	definition(x(1) 229333 pid('' 2 pos('./compiler/UnnestFD.oz' 703 5) nil 5) unit [y(1)])
		shallowGuard(229320)
		getRecord('#' 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(229302)	shallowThen
		getRecord(fRecord 2 x(1))
		unifyVariable(x(0))
		unifyValue(x(3))
		getRecord(fAtom 2 x(0))
		unifyLiteral('#')
		unifyValue(g(0))
		return
lbl(229320)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(703)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229284)
lbl(229333)	move(y(0) x(0))
		genFastCall(<P: 29> 6)
lbl(229339)	definition(x(1) 229400 pid('' 3 pos('./compiler/UnnestFD.oz' 705 8) nil 6) unit nil)
		shallowGuard(229387)
		getRecord('#' 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(229357)	shallowThen
lbl(229358)	definition(x(1) 229375 pid('' 3 pos('./compiler/UnnestFD.oz' 706 14) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(229358)
lbl(229375)	move(x(2) x(3))
		move(x(0) x(2))
		move(x(5) x(0))
		genFastCall(<P: 30> 9)
lbl(229387)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(705)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(229339)
lbl(229400)	putRecord(fSkip 1 x(2))
		setValue(y(1))
		move(y(0) x(0))
		createVariableMove(y(7) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fApply 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(2))
		unifyLiteral('.')
		unifyVariable(x(4))
		unifyValue(y(1))
		getList(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(fOpApply 3 x(5))
		unifyLiteral('.')
		unifyVariable(x(7))
		unifyValue(y(1))
		getList(x(7))
		unifyVariable(x(8))
		unifyVariable(x(9))
		getRecord(fVar 2 x(8))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(9))
		unifyVariable(x(10))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(10))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(6))
		unifyVariable(x(11))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(11))
		unifyLiteral(header)
		unifyValue(y(1))
		getListValVar(x(3) y(4) x(12))
		getListValVar(x(12) y(3) x(13))
		getListValVar(x(13) y(6) x(14))
		getList(x(14))
		unifyValue(y(5))
		unifyLiteral(nil)
		getRecord(fAnd 2 x(1))
		unifyValVar(y(7) x(15))
		getRecord(fApply 3 x(15))
		unifyVariable(x(16))
		unifyVariable(x(17))
		unifyValue(y(1))
		getRecord(fOpApply 3 x(16))
		unifyLiteral('.')
		unifyVariable(x(18))
		unifyValue(y(1))
		getList(x(18))
		unifyVariable(x(19))
		unifyVariable(x(20))
		getRecord(fOpApply 3 x(19))
		unifyLiteral('.')
		unifyVariable(x(21))
		unifyValue(y(1))
		getList(x(21))
		unifyVariable(x(22))
		unifyVariable(x(23))
		getRecord(fVar 2 x(22))
		unifyLiteral('FD')
		unifyValue(y(1))
		getList(x(23))
		unifyVariable(x(24))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(24))
		unifyLiteral(cd)
		unifyValue(y(1))
		getList(x(20))
		unifyVariable(x(25))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(25))
		unifyLiteral('body')
		unifyValue(y(1))
		getListValVar(x(17) y(3) x(26))
		getListValVar(x(26) y(6) x(27))
		getList(x(27))
		unifyValue(y(5))
		unifyLiteral(nil)
		deAllocateL8
		return
		endDefinition(228892)
lbl(229622)	definition(x(7) 229648 pid('IsStep' 2 pos('./compiler/Unnester.oz' 71 3) nil 3) <Q: 1481> nil)
		callBI('Label' [x(0)]#[x(2)])
		match(x(2) ht(229642 [onScalar('pos' 229634) onScalar(unit 229638)]))
lbl(229634)	getLiteral(false x(1))
		return
lbl(229638)	getLiteral(false x(1))
		return
lbl(229642)	getLiteral(true x(1))
		return
		endDefinition(229622)
lbl(229648)	definition(x(7) 229677 pid('CoordNoDebug' 2 pos('./compiler/Unnester.oz' 78 3) nil 4) <Q: 1482> nil)
		callBI('Label' [x(0)]#[x(2)])
		testLiteral(x(2) 'pos' 229665)
lbl(229661)	unify(x(1) x(0))
		return
lbl(229665)	putConstant('pos' x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(229648)
lbl(229677)	definition(x(7) 229774 pid('LastCoordinatesOf' 2 pos('./compiler/Unnester.oz' 84 3) nil 2) <Q: 1483> nil)
		match(x(0) ht(229768 [onRecord(fAnd 2 229686) onRecord(fAtom 2 229693) onRecord(fVar 2 229701) onRecord(fWildcard 1 229709) onRecord(fEscape 2 229715) onRecord(fSelf 1 229723) onRecord(fDollar 1 229729) onRecord(fInt 2 229735) onRecord(fFloat 2 229743) onRecord(fRecord 2 229751) onRecord(fOpenRecord 2 229756) onRecord(fLocal 3 229761)]))
lbl(229686)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229693)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229701)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229709)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229715)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229723)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229729)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229735)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229743)	getVoid(1)
		getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229751)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229756)	getVariable(x(0))
		genFastCall(<Q: 1429> 5)
lbl(229761)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1483> 5)
lbl(229768)	getLiteral(unit x(1))
		return
		endDefinition(229677)
lbl(229774)	definition(x(7) 229824 pid('GetLast' 2 pos('./compiler/Unnester.oz' 101 3) nil 2) <Q: 1484> nil)
		match(x(0) ht(229818 [onScalar(nil 229783) onRecord('|' 2 229787)]))
lbl(229783)	getLiteral(nil x(1))
		return
lbl(229787)	allocateL3
		getVarVar(y(0) x(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		testLiteral(y(2) nil 229813)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1484> 5)
lbl(229813)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(229818)	unify(x(1) x(0))
		return
		endDefinition(229774)
lbl(229824)	definition(x(7) 229929 pid('DollarsInScope' 3 pos('./compiler/Unnester.oz' 131 3) nil 3) <Q: 1485> nil)
		match(x(0) ht(229923 [onRecord(fEq 3 229833) onRecord(fDollar 1 229858) onRecord(fRecord 2 229865) onRecord(fOpenRecord 2 229872) onRecord(fColon 2 229879) onRecord(fMethArg 2 229886) onRecord(fMethColonArg 3 229891) onRecord('|' 2 229898)]))
lbl(229833)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(229858)	inlinePlus1(x(1) x(0))
		unify(x(0) x(2))
		return
lbl(229865)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229872)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229879)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229886)	getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229891)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1485> 7)
lbl(229898)	allocateL3
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1485> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1485> 7)
lbl(229923)	unify(x(2) x(1))
		return
		endDefinition(229824)
lbl(229929)	definition(x(7) 230119 pid('DollarCoord' 2 pos('./compiler/Unnester.oz' 154 3) nil 5) <Q: 1486> nil)
		match(x(0) ht(230113 [onRecord(fEq 3 229938) onRecord(fDollar 1 229969) onRecord(fRecord 2 229975) onRecord(fOpenRecord 2 230016) onRecord(fColon 2 230057) onRecord(fMethArg 2 230064) onRecord(fMethColonArg 3 230069) onRecord('|' 2 230076)]))
lbl(229938)	allocateL3
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1486> 4)
		testLiteral(y(2) unit 229964)
lbl(229955)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1486> 5)
lbl(229964)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(229969)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(229975)	getVoid(1)
		getVariable(x(0))
lbl(229979)	definition(x(4) 230004 pid('' 3 pos('./compiler/Unnester.oz' 165 12) nil 3) unit nil)
		testLiteral(x(0) unit 229998)
lbl(229989)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(229998)	unify(x(2) x(0))
		return
		endDefinition(229979)
lbl(230004)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230016)	getVoid(1)
		getVariable(x(0))
lbl(230020)	definition(x(4) 230045 pid('' 3 pos('./compiler/Unnester.oz' 171 12) nil 3) unit nil)
		testLiteral(x(0) unit 230039)
lbl(230030)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230039)	unify(x(2) x(0))
		return
		endDefinition(230020)
lbl(230045)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230057)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230064)	getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230069)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1486> 5)
lbl(230076)	definition(x(4) 230101 pid('' 3 pos('./compiler/Unnester.oz' 183 12) nil 3) unit nil)
		testLiteral(x(0) unit 230095)
lbl(230086)	move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1486> 5)
lbl(230095)	unify(x(2) x(0))
		return
		endDefinition(230076)
lbl(230101)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(unit x(2))
		genFastCall(<P: 30> 9)
lbl(230113)	getLiteral(unit x(1))
		return
		endDefinition(229929)
lbl(230119)	definition(x(7) 230305 pid('ReplaceDollar' 3 pos('./compiler/Unnester.oz' 192 3) nil 5) <Q: 1487> nil)
		match(x(0) ht(230299 [onRecord(fEq 3 230128) onRecord(fDollar 1 230162) onRecord(fRecord 2 230166) onRecord(fOpenRecord 2 230199) onRecord(fColon 2 230232) onRecord(fMethArg 2 230245) onRecord(fMethColonArg 3 230259) onRecord('|' 2 230276)]))
lbl(230128)	allocateL3
		getVarVar(x(0) y(0))
		getVariable(x(3))
		getRecord(fEq 3 x(2))
		unifyVariable(x(2))
		unifyVariable(y(1))
		unifyValue(x(3))
		move(x(1) y(2))
		genFastCall(<Q: 1487> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1487> 7)
lbl(230162)	unify(x(2) x(1))
		return
lbl(230166)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230176)	definition(x(3) 230193 pid('' 2 pos('./compiler/Unnester.oz' 201 20) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230176)
lbl(230193)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230199)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(2))
		unifyValVar(x(3) x(2))
lbl(230209)	definition(x(3) 230226 pid('' 2 pos('./compiler/Unnester.oz' 203 24) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230209)
lbl(230226)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230232)	getVarVar(x(3) x(0))
		getRecord(fColon 2 x(2))
		unifyValVar(x(3) x(2))
		genFastCall(<Q: 1487> 7)
lbl(230245)	getVarVar(x(0) x(3))
		getRecord(fMethArg 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(3))
		genFastCall(<Q: 1487> 7)
lbl(230259)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fMethColonArg 3 x(2))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		genFastCall(<Q: 1487> 7)
lbl(230276)	definition(x(3) 230293 pid('' 2 pos('./compiler/Unnester.oz' 211 10) nil 3) unit [x(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<Q: 1487> 7)
		endDefinition(230276)
lbl(230293)	move(x(3) x(1))
		genFastCall(<P: 29> 7)
lbl(230299)	unify(x(2) x(0))
		return
		endDefinition(230119)
lbl(230305)	definition(x(7) 230398 pid('MakeTrivialLocalPrefix' 4 pos('./compiler/Unnester.oz' 217 3) nil 4) <Q: 1488> nil)
		match(x(0) ht(230382 [onRecord(fAnd 2 230314) onRecord(fVar 2 230349) onRecord(fWildcard 1 230362) onRecord(fDoImport 3 230372)]))
lbl(230314)	allocateL4
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(3))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1488> 9)
lbl(230349)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230362)	unify(x(1) x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(230372)	getList(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unify(x(0) x(3))
		return
lbl(230382)	allocateL2
		moveMoveXYXY(x(0) y(0) x(3) y(1))
		genFastCall(<Q: 1431> 6)
		unify(y(0) y(1))
		deAllocateL2
		return
		endDefinition(230305)
lbl(230398)	definition(x(7) 230442 pid('MakeDeclaration' 4 pos('./compiler/Unnester.oz' 240 3) nil 7) <Q: 1489> [y(3)])
		testList(x(0) 230436)
lbl(230407)	allocateL2
		move(g(0) x(4))
		inlineDot(x(4) declaration x(5) cache)
		callBI(newObject [x(5)]#[x(6)])
		moveMoveXYXY(x(3) y(0) x(6) y(1))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(230436)	unify(x(3) x(1))
		return
		endDefinition(230398)
lbl(230442)	definition(x(7) 230596 pid('MakeBoolCase' 7 pos('./compiler/Unnester.oz' 248 3) nil 9) <Q: 1490> [y(3)])
		allocateL8
		move(g(0) x(5))
		inlineDot(x(5) boolClause x(7) cache)
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		move(x(1) x(0))
		sendMsg(init y(5) 1 cache)
		createVariable(y(6))
		testRecord(y(1) noElse 1 230520)
lbl(230492)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(6))
		branch(230546)
lbl(230520)	move(g(0) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(1) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
lbl(230546)	move(g(0) x(0))
		inlineDot(x(0) boolCase x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(4))
		move(y(4) x(0))
		inlineDot(x(0) noBoolShared x(1) cache)
		unify(x(1) y(3))
		deAllocateL8
		return
		endDefinition(230442)
lbl(230596)	definition(x(7) 230685 pid('SortNoColonsToFront' 5 pos('./compiler/Unnester.oz' 260 3) nil 6) <Q: 1491> nil)
		match(x(0) ht(230670 [onScalar(nil 230605) onRecord('|' 2 230612)]))
lbl(230605)	unify(x(1) x(2))
		unify(x(3) x(4))
		return
lbl(230612)	allocateL5
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(2) y(0) x(4) y(1))
		move(x(5) y(2))
		createVariable(y(3))
		createVariable(y(4))
		testRecord(x(0) '#' 2 230644)
lbl(230633)	unify(x(1) y(3))
		getList(x(3))
		unifyValue(x(0))
		unifyValue(y(4))
		branch(230653)
lbl(230644)	getList(x(1))
		unifyValue(x(0))
		unifyValue(y(3))
		unify(x(3) y(4))
lbl(230653)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		moveMoveYXYX(y(0) x(2) y(4) x(3))
		move(y(1) x(4))
		deAllocateL5
		genFastCall(<Q: 1491> 11)
lbl(230670)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(273)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230596)
lbl(230685)	createVariable(x(7))
lbl(230687)	definition(x(0) 230760 pid('IsGround' 2 pos('./compiler/Unnester.oz' 276 3) nil 4) <Q: 1492> [x(7)])
		match(x(0) ht(230754 [onRecord(fAtom 2 230696) onRecord(fInt 2 230700) onRecord(fFloat 2 230704) onRecord(fRecord 2 230708) onRecord(fColon 2 230732)]))
lbl(230696)	getLiteral(true x(1))
		return
lbl(230700)	getLiteral(true x(1))
		return
lbl(230704)	getLiteral(true x(1))
		return
lbl(230708)	getVarVar(x(0) x(3))
		testRecord(x(0) fAtom 2 230728)
lbl(230716)	move(x(3) x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(230728)	getLiteral(false x(1))
		return
lbl(230732)	getVarVar(x(0) x(2))
		match(x(0) ht(230750 [onRecord(fAtom 2 230738) onRecord(fInt 2 230744)]))
lbl(230738)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230744)	move(x(2) x(0))
		genFastCall(<Q: 1492> 5)
lbl(230750)	getLiteral(false x(1))
		return
lbl(230754)	getLiteral(false x(1))
		return
		endDefinition(230687)
lbl(230760)	unify(x(0) x(7))
lbl(230763)	definition(x(7) 230996 pid('GroundToOzValue' 3 pos('./compiler/Unnester.oz' 294 3) nil 5) <Q: 1493> [g(9)])
		match(x(0) ht(230981 [onRecord(fAtom 2 230772) onRecord(fInt 2 230778) onRecord(fFloat 2 230784) onRecord(fRecord 2 230790)]))
lbl(230772)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230778)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230784)	getVariable(x(0))
		unify(x(2) x(0))
		return
lbl(230790)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		exHandler(230862)
		move(x(0) y(3))
		createCond(230856)
lbl(230809)	lastClause
		clause
		thread(230827)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(3) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL6
		return
lbl(230827)	ask
lbl(230828)	move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(3))
		setConstant('expansion error')
		setConstant('duplicate feature in record')
		moveMoveYXYX(y(1) x(2) y(2) x(1))
		deAllocateL6
		tailCall(x(2) 2)
lbl(230856)	move(y(3) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(230862)	putConstant(1 x(3))
		callBI('NewCell' [x(3)]#[x(4)])
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(230877)	definition(x(3) 230953 pid('' 2 pos('./compiler/Unnester.oz' 303 7) nil 6) unit [y(1) x(4)])
		testRecord(x(0) fColon 2 230919)
lbl(230888)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<Q: 1493> 6)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<Q: 1493> 7)
lbl(230919)	move(g(1) x(2))
		createVariable(x(3))
		createVariable(x(4))
		callBI('Exchange' [x(2) x(3) x(4)]#nil)
		inlinePlus1(x(3) x(5))
		unify(x(5) x(4))
		getRecord('#' 2 x(1))
		unifyValVar(x(3) x(4))
		move(g(0) x(1))
		move(x(4) x(2))
		genFastCall(<Q: 1493> 7)
		endDefinition(230877)
lbl(230953)	moveMoveXYYX(x(1) y(4) y(3) x(0))
		move(x(3) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		callBI(record [x(0) x(1)]#[x(2)])
		unify(y(2) x(2))
		popEx
		deAllocateL6
		return
lbl(230981)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(316)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(230763)
lbl(230996)	createVariable(x(7))
lbl(230998)	definition(x(0) 231101 pid('IsPattern' 2 pos('./compiler/Unnester.oz' 319 3) nil 3) <Q: 1494> [x(7)])
		match(x(0) ht(231095 [onRecord(fEq 3 231007) onRecord(fAtom 2 231038) onRecord(fVar 2 231042) onRecord(fWildcard 1 231046) onRecord(fEscape 2 231050) onRecord(fInt 2 231054) onRecord(fFloat 2 231058) onRecord(fRecord 2 231062) onRecord(fOpenRecord 2 231075) onRecord(fColon 2 231088)]))
lbl(231007)	getVarVar(x(0) x(2))
		match(x(0) ht(231025 [onRecord(fVar 2 231013) onRecord(fWildcard 1 231019)]))
lbl(231013)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231019)	move(x(2) x(0))
		genFastCall(<Q: 1494> 5)
lbl(231025)	match(x(2) ht(231034 [onRecord(fVar 2 231028) onRecord(fWildcard 1 231031)]))
lbl(231028)	genFastCall(<Q: 1494> 5)
lbl(231031)	genFastCall(<Q: 1494> 5)
lbl(231034)	getLiteral(false x(1))
		return
lbl(231038)	getLiteral(true x(1))
		return
lbl(231042)	getLiteral(true x(1))
		return
lbl(231046)	getLiteral(true x(1))
		return
lbl(231050)	getLiteral(true x(1))
		return
lbl(231054)	getLiteral(true x(1))
		return
lbl(231058)	getLiteral(true x(1))
		return
lbl(231062)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231075)	getVoid(1)
		getVariable(x(0))
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 35> 7)
lbl(231088)	getVoid(1)
		getVariable(x(0))
		genFastCall(<Q: 1494> 5)
lbl(231095)	getLiteral(false x(1))
		return
		endDefinition(230998)
lbl(231101)	unify(x(0) x(7))
lbl(231104)	definition(x(7) 231155 pid('IsConstraint' 2 pos('./compiler/Unnester.oz' 346 3) nil 2) <Q: 1495> nil)
		match(x(0) ht(231149 [onRecord(fEq 3 231113) onRecord(fAtom 2 231117) onRecord(fVar 2 231121) onRecord(fWildcard 1 231125) onRecord(fEscape 2 231129) onRecord(fInt 2 231133) onRecord(fFloat 2 231137) onRecord(fRecord 2 231141) onRecord(fOpenRecord 2 231145)]))
lbl(231113)	getLiteral(true x(1))
		return
lbl(231117)	getLiteral(true x(1))
		return
lbl(231121)	getLiteral(true x(1))
		return
lbl(231125)	getLiteral(true x(1))
		return
lbl(231129)	getLiteral(true x(1))
		return
lbl(231133)	getLiteral(true x(1))
		return
lbl(231137)	getLiteral(true x(1))
		return
lbl(231141)	getLiteral(true x(1))
		return
lbl(231145)	getLiteral(true x(1))
		return
lbl(231149)	getLiteral(false x(1))
		return
		endDefinition(231104)
lbl(231155)	definition(x(7) 231639 pid('SortFunctorDescriptors' 9 pos('./compiler/Unnester.oz' 360 3) nil 13) <Q: 1496> nil)
		match(x(0) ht(231624 [onScalar(nil 231164) onRecord('|' 2 231326)]))
lbl(231164)	allocateL6
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		moveMoveXYXY(x(7) y(4) x(8) y(5))
		testBI('IsFree' [x(2)]#[x(0)] 231187)
		getLiteral(unit x(2))
lbl(231187)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231213 231202)
		getLiteral(unit y(0))
		branch(231213)
lbl(231202)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(410)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231213)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231239 231228)
		getLiteral(nil y(1))
		branch(231239)
lbl(231228)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(411)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231239)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231265 231254)
		getLiteral(nil y(2))
		branch(231265)
lbl(231254)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(412)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231265)	move(y(3) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231291 231280)
		getLiteral(nil y(3))
		branch(231291)
lbl(231280)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(413)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231291)	move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231313 231315)
		getRecord(fSkip 1 y(4))
		unifyLiteral(unit)
		getRecord(fSkip 1 y(5))
		unifyLiteral(unit)
lbl(231313)	deAllocateL6
		return
lbl(231315)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(414)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231326)	allocateL9
		getVarVar(x(0) x(9))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		move(x(9) y(8))
		match(x(0) ht(231584 [onRecord(fRequire 2 231356) onRecord(fPrepare 3 231393) onRecord(fImport 2 231431) onRecord(fExport 2 231468) onRecord(fProp 2 231505) onRecord(fDefine 3 231542)]))
lbl(231356)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(2)]#[x(11)] 231368)
		unify(y(1) x(0))
		branch(231597)
lbl(231368)	putRecord('#' 2 x(11))
		setConstant('more than one `require\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231393)	getVoid(2)
		getVariable(x(10))
		testBI('IsFree' [x(3)]#[x(11)] 231406)
		unify(y(2) x(0))
		branch(231597)
lbl(231406)	putRecord('#' 2 x(11))
		setConstant('more than one `prepare\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231431)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(4)]#[x(11)] 231443)
		unify(y(3) x(0))
		branch(231597)
lbl(231443)	putRecord('#' 2 x(11))
		setConstant('more than one `import\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231468)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(5)]#[x(11)] 231480)
		unify(y(4) x(0))
		branch(231597)
lbl(231480)	putRecord('#' 2 x(11))
		setConstant('more than one `export\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231505)	getVarVar(x(0) x(10))
		testBI('IsFree' [x(6)]#[x(11)] 231517)
		unify(y(5) x(0))
		branch(231597)
lbl(231517)	putRecord('#' 2 x(11))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in functor definition')
		move(x(10) x(0))
		move(x(11) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231542)	getVarVar(x(0) x(10))
		getVariable(x(11))
		testBI('IsFree' [x(7)]#[x(12)] 231559)
		unify(y(6) x(0))
		unify(y(7) x(10))
		branch(231597)
lbl(231559)	putRecord('#' 2 x(10))
		setConstant('more than one `define\' descriptor ')
		setConstant('in functor definition')
		move(x(11) x(0))
		move(x(10) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231597)
lbl(231584)	putRecord(kernel 3 x(10))
		setConstant(noElse)
		setConstant(405)
		setValue(x(0))
		callBI('Exception.raiseError' [x(10)]#nil)
lbl(231597)	moveMoveYXYX(y(8) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		moveMoveYXYX(y(5) x(6) y(6) x(7))
		move(y(7) x(8))
		deAllocateL9
		genFastCall(<Q: 1496> 19)
lbl(231624)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(418)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231155)
lbl(231639)	definition(x(7) 231959 pid('SortClassDescriptors' 6 pos('./compiler/Unnester.oz' 421 3) nil 9) <Q: 1497> nil)
		match(x(0) ht(231944 [onScalar(nil 231648) onRecord('|' 2 231742)]))
lbl(231648)	allocateL3
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		move(x(5) y(2))
		testBI('IsFree' [x(2)]#[x(0)] 231664)
		getLiteral(nil x(2))
lbl(231664)	move(y(0) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231690 231679)
		getLiteral(nil y(0))
		branch(231690)
lbl(231679)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(455)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231690)	move(y(1) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231716 231705)
		getLiteral(nil y(1))
		branch(231716)
lbl(231705)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(456)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231716)	move(y(2) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 231729 231731)
		getLiteral(nil y(2))
lbl(231729)	deAllocateL3
		return
lbl(231731)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(457)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(231742)	allocateL6
		getVarVar(x(0) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		match(x(0) ht(231912 [onRecord(fFrom 2 231764) onRecord(fProp 2 231801) onRecord(fAttr 2 231838) onRecord(fFeat 2 231875)]))
lbl(231764)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(2)]#[x(8)] 231776)
		unify(y(1) x(0))
		branch(231925)
lbl(231776)	putRecord('#' 2 x(8))
		setConstant('more than one `from\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231925)
lbl(231801)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(3)]#[x(8)] 231813)
		unify(y(2) x(0))
		branch(231925)
lbl(231813)	putRecord('#' 2 x(8))
		setConstant('more than one `prop\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231925)
lbl(231838)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(4)]#[x(8)] 231850)
		unify(y(3) x(0))
		branch(231925)
lbl(231850)	putRecord('#' 2 x(8))
		setConstant('more than one `attr\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231925)
lbl(231875)	getVarVar(x(0) x(7))
		testBI('IsFree' [x(5)]#[x(8)] 231887)
		unify(y(4) x(0))
		branch(231925)
lbl(231887)	putRecord('#' 2 x(8))
		setConstant('more than one `feat\' descriptor ')
		setConstant('in class definition')
		move(x(7) x(0))
		move(x(8) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(231925)
lbl(231912)	putRecord(kernel 3 x(7))
		setConstant(noElse)
		setConstant(451)
		setValue(x(0))
		callBI('Exception.raiseError' [x(7)]#nil)
lbl(231925)	moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(5))
		deAllocateL6
		genFastCall(<Q: 1497> 13)
lbl(231944)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(458)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(231639)
lbl(231959)	putRecord('attr' [<M: ArgCounter> <M: BA> <M: StateUsed> <M: Stateful> reporter switches] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(231975)	definition(x(7) 232030 pid('Unnester,init/fast' 3 pos('./compiler/Unnester.oz' 470 6) nil 5) <Q: 1498> [y(0)])
		allocateL3
		move(g(0) x(3))
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) y(2))
		sendMsg(init y(2) 2 cache)
		move(y(2) x(0))
		inlineAssign(<M: BA> x(0) cache)
		move(y(0) x(0))
		inlineAssign(reporter x(0) cache)
		move(y(1) x(0))
		inlineAssign(switches x(0) cache)
		deAllocateL3
		return
		endDefinition(231975)
lbl(232030)	definition(x(8) 232071 pid('Unnester,init/slow' 1 pos('./compiler/Unnester.oz' 470 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1498> 7)
		endDefinition(232030)
lbl(232071)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(232083)	definition(x(7) 232437 pid('Unnester,unnestQuery/fast' 4 pos('./compiler/Unnester.oz' 476 6) nil 5) <Q: 1499> [y(0) y(3)])
		allocateL8
		putConstant(false x(4))
		inlineAssign(<M: Stateful> x(4) cache)
		move(x(3) y(0))
		testRecord(x(0) fDeclare 3 232335)
lbl(232106)	getVarVar(x(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		createVariableMove(y(5) x(1))
		putConstant(nil x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1488> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		getSelf(x(2))
lbl(232141)	definition(x(1) 232195 pid('' 1 pos('./compiler/Unnester.oz' 482 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(232182)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(232162)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(232182)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(482)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(232141)
lbl(232195)	move(y(5) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		putList(y(5))
		setVariable(x(1))
		setVariable(y(7))
		move(y(6) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(7) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		moveMoveXYYX(x(1) y(6) y(1) x(0))
		moveMoveYXYX(y(5) x(1) y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		call(y(6) 2)
		inlineAt(<M: BA> x(1) cache)
		move(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
lbl(232293)	definition(x(1) 232327 pid('' 1 pos('./compiler/Unnester.oz' 490 6) nil 2) unit nil)
		allocateL1
		move(x(0) y(0))
		putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL1
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(232293)
lbl(232327)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(232420)
lbl(232335)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(2))
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) flattenSequence x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(1))
		createVariableMove(y(5) x(0))
		sendMsg(closeScope x(2) 1 cache)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		moveMoveYXYX(y(6) x(0) y(3) x(1))
		call(y(1) 2)
lbl(232420)	inlineAt(<M: BA> x(1) cache)
		move(y(0) x(0))
		deAllocateL8
		tailSendMsg(getFreeVariablesOfQuery x(1) 1 cache)
		endDefinition(232083)
lbl(232437)	definition(x(8) 232484 pid('Unnester,unnestQuery/slow' 1 pos('./compiler/Unnester.oz' 476 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1499> 9)
		endDefinition(232437)
lbl(232484)	putRecord('#' [1 2 fast] x(10))
		setConstant(unnestQuery)
		setValue(x(8))
		setValue(x(7))
lbl(232494)	definition(x(7) 232613 pid('Unnester,UnnestToTerm/fast' 4 pos('./compiler/Unnester.oz' 504 6) nil 6) <Q: 1500> [y(3) y(0)])
		match(x(0) ht(232608 [onRecord(fAtom 2 232503) onRecord(fInt 2 232538) onRecord(fFloat 2 232573)]))
lbl(232503)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232538)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232573)	allocateL2
		getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		move(g(0) x(2))
		inlineDot(x(2) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(3) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(232608)	genCall(gci(g(1) true <M: UnnestToVar> true 4) 0)
		endDefinition(232494)
lbl(232613)	definition(x(8) 232660 pid('Unnester,UnnestToTerm/slow' 1 pos('./compiler/Unnester.oz' 504 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1500> 9)
		endDefinition(232613)
lbl(232660)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: UnnestToTerm>)
		setValue(x(8))
		setValue(x(7))
lbl(232670)	definition(x(7) 232934 pid('Unnester,UnnestToVar/fast' 4 pos('./compiler/Unnester.oz' 518 6) nil 5) <Q: 1501> [y(0)])
		match(x(0) ht(232813 [onRecord(fVar 2 232679) onRecord(fWildcard 1 232699) onRecord(fEscape 2 232742) onRecord(fGetBinder 2 232769)]))
lbl(232679)	getVarVar(x(0) x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232699)	allocateL3
		getVariable(y(0))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(4) 3 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(occ x(2) 2 cache)
lbl(232742)	getVariable(x(4))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(2))
		tailSendMsg(refer x(4) 3 cache)
lbl(232769)	allocateL2
		getVarVar(x(4) y(0))
		getRecord(fVar 2 x(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getLiteral(nil x(2))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYYX(x(3) y(1) y(1) x(2))
		sendMsg(refer x(4) 3 cache)
		move(y(0) x(0))
		move(y(1) x(1))
		deAllocateL2
		tailSendMsg('getVariable' x(1) 1 cache)
lbl(232813)	allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		createVariable(y(5))
		match(y(0) ht(232870 [onRecord(fSelf 1 232835) onRecord(fProc 5 232840) onRecord(fFun 5 232845) onRecord(fFunctor 3 232850) onRecord(fClass 4 232855) onRecord(fScanner 6 232860) onRecord(fParser 7 232865)]))
lbl(232835)	getLiteral('Self' y(5))
		branch(232873)
lbl(232840)	getLiteral('Proc' y(5))
		branch(232873)
lbl(232845)	getLiteral('Fun' y(5))
		branch(232873)
lbl(232850)	getLiteral('Functor' y(5))
		branch(232873)
lbl(232855)	getLiteral('Class' y(5))
		branch(232873)
lbl(232860)	getLiteral('Scanner' y(5))
		branch(232873)
lbl(232865)	getLiteral('Parser' y(5))
		branch(232873)
lbl(232870)	unify(y(5) y(1))
lbl(232873)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(1) x(2))
		deAllocateL6
		tailSendMsg(occ x(2) 2 cache)
		endDefinition(232670)
lbl(232934)	definition(x(8) 232981 pid('Unnester,UnnestToVar/slow' 1 pos('./compiler/Unnester.oz' 518 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1501> 9)
		endDefinition(232934)
lbl(232981)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: UnnestToVar>)
		setValue(x(8))
		setValue(x(7))
lbl(232991)	definition(x(7) 233110 pid('Unnester,MakeLabelOrFeature/fast' 2 pos('./compiler/Unnester.oz' 549 6) nil 6) <Q: 1502> [y(3) y(0)])
		match(x(0) ht(233095 [onRecord(fAtom 2 233000) onRecord(fVar 2 233035) onRecord(fInt 2 233055) onRecord(fEscape 2 233090)]))
lbl(233000)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233035)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(1) x(2))
		move(x(3) x(1))
		tailSendMsg(refer x(4) 3 cache)
lbl(233055)	allocateL2
		getVarVar(x(0) x(2))
		move(g(0) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		move(x(2) x(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(233090)	getVariable(x(0))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> true 2) 0)
lbl(233095)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(558)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(232991)
lbl(233110)	definition(x(8) 233145 pid('Unnester,MakeLabelOrFeature/slow' 1 pos('./compiler/Unnester.oz' 549 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1502> 5)
		endDefinition(233110)
lbl(233145)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: MakeLabelOrFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(233155)	definition(x(7) 233280 pid('Unnester,GenerateNewVar/fast' 4 pos('./compiler/Unnester.oz' 560 6) nil 5) <Q: 1503> nil)
		allocateL4
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		sendMsg(openScope x(4) 0 cache)
		getSelf(x(2))
lbl(233185)	definition(x(1) 233239 pid('' 1 pos('./compiler/Unnester.oz' 562 14) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(233226)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(233206)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(233226)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(562)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(233185)
lbl(233239)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		deAllocateL4
		tailSendMsg(closeScope x(1) 1 cache)
		endDefinition(233155)
lbl(233280)	definition(x(8) 233327 pid('Unnester,GenerateNewVar/slow' 1 pos('./compiler/Unnester.oz' 560 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1503> 9)
		endDefinition(233280)
lbl(233327)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: GenerateNewVar>)
		setValue(x(8))
		setValue(x(7))
lbl(233337)	definition(x(7) 238816 pid('Unnester,UnnestStatement/fast' 2 pos('./compiler/Unnester.oz' 567 6) nil 20) <Q: 1504> [y(0) y(3) y(4) g(10) y(6) y(5)])
		match(x(0) ht(238736 [onRecord(fStepPoint 3 233346) onRecord(fAnd 2 233444) onRecord(fEq 3 233466) onRecord(fAssign 3 233841) onRecord(fOpApplyStatement 3 233936) onRecord(fFdCompare 4 234024) onRecord(fFdIn 4 234087) onRecord(fObjApply 3 234208) onRecord(fDollar 1 234349) onRecord(fApply 3 234402) onRecord(fProc 5 234483) onRecord(fFun 5 234883) onRecord(fFunctor 3 235258) onRecord(fDoImport 3 236050) onRecord(fClass 4 236210) onRecord(fScanner 6 236650) onRecord(fParser 7 236710) onRecord(fLocal 3 236770) onRecord(fBoolCase 4 237009) onRecord(fCase 4 237530) onRecord(fLockThen 3 237583) onRecord(fLock 2 237651) onRecord(fThread 2 237752) onRecord(fTry 4 237838) onRecord(fRaise 2 237841) onRecord(fRaiseWith 3 237863) onRecord(fSkip 1 237994) onRecord(fFail 1 238025) onRecord(fNot 2 238056) onRecord(fCond 3 238114) onRecord(fOr 3 238235) onRecord(fCondis 2 238361)]))
lbl(233346)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(4) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(4) 233428 233433)
lbl(233382)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(4) 233428 233433)
lbl(233395)	move(g(1) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(2))
		deAllocateL5
		return
lbl(233428)	unify(y(2) y(3))
		deAllocateL5
		return
lbl(233433)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(570)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233444)	allocateL2
		getVarVar(x(0) y(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(233466)	allocateL9
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		move(y(2) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(5) 233661 233830)
lbl(233490)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233661 233830)
lbl(233503)	move(y(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1495> 4)
		testBool(y(5) 233661 233830)
lbl(233516)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Left' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('=')
		setValue(x(1))
		setValue(y(2))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(4))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(0) x(1))
		getListValVar(x(1) y(1) x(2))
		getList(x(2))
		unifyValue(y(7))
		unifyValue(y(8))
		deAllocateL9
		return
lbl(233661)	createVariable(y(5))
		createVariable(y(6))
		testRecord(y(1) fVar 2 233685)
lbl(233670)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233822)
lbl(233685)	testRecord(y(1) fEscape 2 233719)
lbl(233690)	getVariable(x(0))
		shallowGuard(233719)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233702)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233822)
lbl(233719)	testRecord(y(0) fVar 2 233739)
lbl(233724)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233822)
lbl(233739)	testRecord(y(0) fEscape 2 233775)
lbl(233744)	getVariable(x(0))
		createVariable(y(0))
		shallowGuard(233775)
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(233758)	shallowThen
		move(x(0) x(1))
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		move(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		branch(233822)
lbl(233775)	inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(1) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
lbl(233822)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(6))
		deAllocateL9
		return
lbl(233830)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(578)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(233841)	allocateL4
		getVarVar(x(0) x(2))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(3) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(x(2) y(3))
		testBool(x(3) 233874 233896)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(233907)
lbl(233874)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute assignment used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(233907)
lbl(233896)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(607)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(233907)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(2))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('<-')
		setValue(x(1))
		setValue(y(0))
		move(y(1) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(233936)	allocateL7
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(2) x(2))
		inlineDot(x(2) procs x(3) cache)
		callBI('.' [x(3) x(0)]#[x(4)])
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(4) 2 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(6) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		deAllocateL7
		return
lbl(234024)	allocateL8
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		createVariableMove(y(5) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		moveMoveYXYX(y(7) x(2) y(2) x(3))
		createVariableMove(y(1) x(4))
		genFastCall(<Q: 1467> 10)
		getList(y(3))
		unifyValVar(y(4) x(0))
		getListValVar(x(0) y(6) x(1))
		move(y(1) x(0))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234087)	allocateL6
		getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		createVariable(y(4))
		match(x(0) ht(234119 [onScalar('::' 234109) onScalar(':::' 234114)]))
lbl(234109)	getLiteral(int y(4))
		branch(234132)
lbl(234114)	getLiteral(dom y(4))
		branch(234132)
lbl(234119)	putRecord(kernel 3 x(5))
		setConstant(noElse)
		setConstant(632)
		setValue(x(0))
		callBI('Exception.raiseError' [x(5)]#nil)
lbl(234132)	move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(3))
		setConstant('FD')
		setValue(y(3))
		putRecord(fAtom 2 x(5))
		setValue(y(4))
		setValue(y(3))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(5))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(y(2))
		setValue(x(7))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(6))
		setValue(y(3))
		move(y(0) x(1))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234208)	allocateL4
		getVarVar(y(0) x(4))
		getVariable(y(1))
		inlineAt(<M: Stateful> x(0) cache)
		moveMoveXYXY(x(1) y(2) x(4) y(3))
		testBool(x(0) 234287 234309)
		putConstant(true x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		testRecord(y(0) fSelf 1 234320)
lbl(234241)	getVariable(x(0))
		inlineAt(reporter x(5) cache)
		putRecord('#' 2 x(8))
		setConstant('use a class in front of "," ')
		setConstant('or use "{self message}"')
		putRecord(hint [l m] x(7))
		setConstant('Hint')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(5) [coord items kind msg] cache)
		branch(234320)
lbl(234287)	inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(234320)
lbl(234309)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(638)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234320)	putList(x(2))
		setValue(y(3))
		setConstant(nil)
		putList(x(1))
		setValue(y(0))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(1))
		move(y(2) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(234349)	allocateL3
		getVariable(y(0))
		inlineAt(reporter x(3) cache)
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(234402)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('UnnestApply' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestApplyArgs> false 4) 0)
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(6))
		unifyValue(y(0))
		deAllocateL8
		return
lbl(234483)	allocateL(12)
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYYX(x(1) y(5) y(0) x(0))
		putConstant('Proc' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(234519)	definition(x(1) 234553 pid('' 2 pos('./compiler/Unnester.oz' 670 36) nil 4) unit nil)
		shallowGuard(234540)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234535)	shallowThen
		unify(x(1) x(2))
		return
lbl(234540)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(670)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234519)
lbl(234553)	moveMoveXYYX(x(0) y(8) y(3) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 29> 6)
lbl(234564)	definition(x(1) 234582 pid('' 2 pos('./compiler/Unnester.oz' 671 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(234564)
lbl(234582)	move(y(9) x(0))
		createVariableMove(y(3) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		putConstant(0 x(1))
		createVariableMove(y(9) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(9) 1 234665)
lbl(234621)	move(y(9) x(0))
		putConstant(1 x(5))
		testLT(x(5) x(0) x(1) 234702)
lbl(234632)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(0) y(1) x(0))
		createVariableMove(y(9) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(9) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in procedure head allowed' x(2))
		sendMsg(error y(0) [coord kind msg] cache)
		branch(234702)
lbl(234665)	testLiteral(y(3) nil 234671)
lbl(234669)	branch(234621)
lbl(234671)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(9) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('exactly one $ in head of lazy procedure required' x(2))
		sendMsg(error y(9) [coord kind msg] cache)
lbl(234702)	move(y(3) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(4) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(3))
		testBool(y(2) 234758 234763)
		getLiteral(true y(3))
		branch(234774)
lbl(234758)	unify(y(3) y(8))
		branch(234774)
lbl(234763)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(688)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(234774)	move(y(3) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) 'definition' x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(10) x(4))
		move(y(4) x(5))
		sendMsg(init y(3) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 234875 234864)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(3) 1 cache)
		branch(234875)
lbl(234864)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(691)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(234875)	getList(y(5))
		unifyValue(y(6))
		unifyValue(y(3))
		deAllocateL
		return
lbl(234883)	allocateL(12)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		move(x(1) y(4))
		putConstant('Fun' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
lbl(234917)	definition(x(1) 234951 pid('' 2 pos('./compiler/Unnester.oz' 701 36) nil 4) unit nil)
		shallowGuard(234938)
		getRecord(fAtom 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(234933)	shallowThen
		unify(x(1) x(2))
		return
lbl(234938)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(701)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(234917)
lbl(234951)	moveMoveXYYX(x(0) y(7) y(2) x(0))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 29> 6)
lbl(234962)	definition(x(1) 234980 pid('' 2 pos('./compiler/Unnester.oz' 702 35) nil 4) unit nil)
		putConstant(lazy x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(234962)
lbl(234980)	move(y(8) x(0))
		createVariableMove(y(2) x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<P: 54> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<Q: 1485> 6)
		createVariable(y(10))
		testNumber(y(8) 0 235043)
		putRecord(fDollar 1 x(0))
		setValue(y(3))
		putList(x(1))
		setValue(x(0))
		setConstant(nil)
		moveMoveYXYX(y(0) x(0) y(10) x(2))
		genFastCall(<P: 21> 6)
		branch(235077)
lbl(235043)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(8) y(0) x(0))
		createVariableMove(y(11) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(11) x(0))
		putConstant('syntax error' x(1))
		putConstant('no $ in function head allowed' x(2))
		sendMsg(error y(8) [coord kind msg] cache)
		unify(y(10) y(0))
lbl(235077)	move(y(2) x(0))
		putConstant(nil x(5))
		callBI('\\=' [x(0) x(5)]#[x(2)])
		moveMoveYXYX(y(10) x(0) y(1) x(1))
		move(y(3) x(3))
		createVariableMove(y(0) x(4))
		genCall(gci(g(0) true <M: UnnestProc> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		inlineAt(<M: StateUsed> x(0) cache)
		move(x(0) y(2))
		createVariable(y(8))
		testBool(y(2) 235133 235138)
		getLiteral(true y(8))
		branch(235149)
lbl(235133)	unify(y(8) y(7))
		branch(235149)
lbl(235138)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(715)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(235149)	move(y(8) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		move(g(1) x(0))
		inlineDot(x(0) functionDefinition x(6) cache)
		callBI(newObject [x(6)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(1) x(1) y(0) x(2))
		moveMoveYXYX(y(2) x(3) y(9) x(4))
		move(y(3) x(5))
		sendMsg(init y(7) 6 cache)
		inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 235250 235239)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		sendMsg(setAllVariables y(7) 1 cache)
		branch(235250)
lbl(235239)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(718)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(235250)	getList(y(4))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL
		return
lbl(235258)	allocateL(14)
		getVarVar(y(0) x(0))
		getVariable(y(1))
		inlineAt(reporter x(9) cache)
		move(x(1) y(2))
		move(x(9) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(6) x(5))
		createVariableMove(y(7) x(6))
		createVariableMove(y(8) x(7))
		createVariableMove(y(9) x(8))
		genFastCall(<Q: 1496> 18)
		testLiteral(y(3) unit 235659)
lbl(235304)	testLiteral(y(4) unit 235659)
lbl(235308)	move(y(0) x(0))
		putConstant('Functor' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(10))
		setVariable(y(11))
		setVariable(y(12))
		createVariableMove(y(13) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(11) x(0))
		sendMsg(getPrintName y(13) 1 cache)
		moveMoveYXYX(y(0) x(0) y(12) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(5) x(0))
		createVariableMove(y(0) x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImports> false 4) 0)
		move(y(6) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(12) x(2))
		genCall(gci(g(0) true <M: AnalyseExports> false 3) 0)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('IMPORT' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyValue(y(1))
		sendMsg(getPrintName y(6) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(11))
		setValue(y(8))
		putRecord(fAtom 2 x(3))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(2))
		setValue(x(3))
		setValue(y(12))
		putRecord(fAnd 2 x(1))
		setValue(y(9))
		setValue(x(2))
		putRecord(fLocal 3 y(13))
		setValue(x(0))
		setValue(x(1))
		setValue(y(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Body' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(8) 1 cache)
		putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putRecord(fAtom 2 x(3))
		setConstant(instantiate)
		setValue(y(1))
		putList(x(1))
		setValue(x(3))
		setValue(y(7))
		putRecord(fFun 5 x(2))
		setValue(y(9))
		setValue(x(0))
		setValue(y(13))
		setValue(x(1))
		setValue(y(6))
		putRecord(fAtom 2 x(0))
		setConstant('import')
		setValue(y(6))
		putRecord(fRecord 2 x(3))
		setValue(x(0))
		setValue(y(4))
		putRecord(fAtom 2 x(0))
		setConstant('export')
		setValue(y(6))
		putRecord(fRecord 2 x(4))
		setValue(x(0))
		setValue(y(5))
		putList(x(7))
		setValue(y(10))
		setConstant(nil)
		putList(x(6))
		setValue(y(9))
		setValue(x(7))
		putList(x(1))
		setValue(x(4))
		setValue(x(6))
		putList(x(0))
		setValue(x(3))
		setValue(x(1))
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('NewFunctor')
		setValue(x(0))
		setValue(y(6))
		putRecord(fAnd 2 x(1))
		setValue(x(2))
		setValue(x(5))
		putRecord(fStepPoint 3 x(0))
		setValue(x(1))
		setConstant('definition')
		setValue(y(1))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(0))
		deAllocateL
		return
lbl(235659)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('OuterFunctor' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('InnerFunctor' x(0))
		createVariableMove(y(10) x(2))
		sendMsg(generate x(3) 3 cache)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		putRecord(fVar 2 y(11))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(1))
		sendMsg(getPrintName y(10) 1 cache)
		putRecord(fImport 2 x(1))
		setValue(y(3))
		setConstant(unit)
		putRecord(fAtom 2 x(7))
		setConstant(inner)
		setConstant(unit)
		putRecord(fColon 2 x(6))
		setValue(x(7))
		setValue(y(7))
		putRecord(fExportItem 1 x(5))
		setValue(x(6))
		putList(x(4))
		setValue(x(5))
		setConstant(nil)
		putRecord(fExport 2 x(3))
		setValue(x(4))
		setConstant(unit)
		putRecord(fImport 2 x(14))
		setValue(y(5))
		setConstant(unit)
		putRecord(fExport 2 x(16))
		setValue(y(6))
		setConstant(unit)
		putRecord(fDefine 3 x(18))
		setValue(y(8))
		setValue(y(9))
		setConstant(unit)
		putList(x(17))
		setValue(x(18))
		setConstant(nil)
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putRecord(fFunctor 3 x(12))
		setValue(y(7))
		setValue(x(13))
		setValue(y(1))
		putRecord(fAnd 2 x(10))
		setVariable(x(11))
		setValue(x(12))
		putRecord(fDefine 3 x(9))
		setValue(x(10))
		setVariable(x(19))
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putList(x(0))
		setValue(x(1))
		setValue(x(2))
		putRecord(fFunctor 3 y(10))
		setValue(y(11))
		setValue(x(0))
		setValue(y(1))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		move(y(4) x(1))
		putConstant(1 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(11))
		putRecord(fSkip 1 x(0))
		setConstant(unit)
		putConstant(2 x(2))
		callBI('CondSelect' [x(1) x(2) x(0)]#[x(3)])
		unify(x(3) x(19))
		move(y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fAtom 2 x(5))
		setVariable(x(6))
		setConstant(unit)
		putList(x(7))
		setValue(y(11))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(7))
		putRecord(fOpApply 3 x(3))
		setConstant('ApplyFunctor')
		setValue(x(4))
		setValue(y(3))
		putRecord(fAtom 2 x(9))
		setConstant(inner)
		setConstant(unit)
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(0))
		setConstant('.')
		setValue(x(1))
		setValue(y(3))
		putRecord(fEq 3 x(2))
		setValue(y(0))
		setValue(x(0))
		setValue(y(3))
		move(y(1) x(0))
		putConstant(1 x(3))
		putConstant('' x(4))
		callBI('CondSelect' [x(0) x(3) x(4)]#[x(1)])
		unify(x(1) x(6))
		putRecord(fAnd 2 x(1))
		setValue(y(10))
		setValue(x(2))
		putRecord(fLocal 3 x(3))
		setValue(y(11))
		setValue(x(1))
		setValue(y(1))
		move(x(3) x(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(236050)	allocateL8
		getVoid(1)
		getVarVar(y(0) x(2))
		getRecord(fVar 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		putRecord(fAtom 2 x(0))
		setValue(y(1))
		setValue(y(2))
		putConstant('Feature' x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(2) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(0) 2 cache)
		getList(y(3))
		unifyValVar(y(1) y(0))
		move(g(1) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putList(x(5))
		setValue(y(6))
		setValue(x(6))
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(4) x(1))
		move(y(2) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(0))
		deAllocateL8
		return
lbl(236210)	allocateL(17)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Class' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genFastCall(<Q: 1497> 12)
		move(y(1) x(0))
		move(g(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(9) x(0))
		move(g(5) x(1))
		move(y(0) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<P: 32> 8)
		move(y(8) x(0))
		move(g(5) x(1))
		move(y(10) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<P: 32> 8)
		move(y(0) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1434> 4)
		getSelf(x(3))
lbl(236323)	definition(x(1) 236392 pid('' 2 pos('./compiler/Unnester.oz' 815 6) nil 5) unit [x(3) g(0)])
		allocateL3
		move(g(0) x(2))
		setSelf(x(2))
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooPrivate)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(236323)
lbl(236392)	move(y(10) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 29> 6)
		move(y(6) x(0))
		putConstant('Parent' x(1))
		createVariableMove(y(10) x(2))
		putConstant(nil x(3))
		createVariableMove(y(11) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(7) x(0))
		putConstant('Property' x(1))
		createVariableMove(y(6) x(2))
		putConstant(nil x(3))
		createVariableMove(y(12) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestFromProp> false 6) 0)
		move(y(8) x(0))
		putConstant('Attribute' x(1))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		createVariableMove(y(13) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		move(y(9) x(0))
		putConstant('Feature' x(1))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		createVariableMove(y(14) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestAttrFeat> false 6) 0)
		putConstant(<M: Stateful> x(3))
		putConstant(true x(4))
		callBI(ooExch [x(3) x(4)]#[x(0)])
		putConstant(<M: StateUsed> x(3))
		putConstant(false x(4))
		callBI(ooExch [x(3) x(4)]#[x(1)])
		getSelf(x(3))
lbl(236505)	definition(x(4) 236521 pid('' 2 pos('./compiler/Unnester.oz' 829 8) nil 3) unit [x(3) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: UnnestMeth> true 2) 0)
		endDefinition(236505)
lbl(236521)	moveMoveXYXY(x(0) y(9) x(1) y(15))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(16) x(2))
		genFastCall(<P: 29> 6)
		move(y(9) x(0))
		inlineAssign(<M: Stateful> x(0) cache)
		move(y(15) x(0))
		inlineAssign(<M: StateUsed> x(0) cache)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) classNode x(7) cache)
		callBI(newObject [x(7)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		moveMoveYXYX(y(11) x(1) y(12) x(2))
		moveMoveYXYX(y(13) x(3) y(14) x(4))
		moveMoveYXYX(y(16) x(5) y(2) x(6))
		sendMsg(init y(9) 7 cache)
		getList(y(3))
		unifyValVar(y(4) x(3))
		putList(x(5))
		setValue(y(8))
		setValue(y(9))
		putList(x(4))
		setValue(y(7))
		setValue(x(5))
		putList(x(2))
		setValue(y(6))
		setValue(x(4))
		putList(x(0))
		setValue(y(10))
		setValue(x(2))
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		moveMoveYXYX(y(1) x(0) y(2) x(2))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(236650)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236710)	allocateL3
		getVariable(x(0))
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(1) x(0))
		putConstant('bootstrap compiler restriction' x(1))
		putConstant('Gump definitions not supported' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(0))
		deAllocateL3
		return
lbl(236770)	allocateL6
		getVarVar(y(0) y(1))
		getVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		createVariableMove(y(5) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(236807)	definition(x(1) 236955 pid('' 1 pos('./compiler/Unnester.oz' 888 6) nil 7) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		testRecord(x(0) fVar 2 236842)
lbl(236823)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(236842)	testRecord(x(0) fDoImport 3 236898)
lbl(236847)	allocateL2
		getVarVar(x(4) x(3))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(0))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true <M: UnnestImportFeatures> true 2) 0)
lbl(236898)	allocateL1
		move(x(0) y(0))
		testRecord(y(0) fExportItem 1 236940)
lbl(236907)	getVariable(x(2))
		shallowGuard(236940)
		getRecord(fVar 2 x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(236919)	shallowThen
		inlineAt(<M: BA> x(5) cache)
		move(x(3) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bindExport x(5) 3 cache)
lbl(236940)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(898)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(236807)
lbl(236955)	move(y(4) x(0))
		genFastCall(<P: 34> 4)
		putList(y(0))
		setVariable(x(1))
		setVariable(y(4))
		move(y(5) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL6
		genFastCall(<Q: 1489> 9)
lbl(237009)	allocateL(11)
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		callBI('Label' [x(0)]#[x(2)])
		inlineAt(switches x(3) cache)
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(x(2) y(5))
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(3) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237340)
lbl(237052)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237340)
lbl(237076)	inlineAt(switches x(2) cache)
		putConstant(staticanalysis x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(6) 237493 237519)
lbl(237097)	testLiteral(y(5) fOrElse 237334)
lbl(237101)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(6) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(0) x(3))
		createVariableMove(y(6) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		createVariable(y(5))
		createVariable(y(7))
		testRecord(y(1) fNoElse 1 237232)
lbl(237184)	getVariable(y(1))
		move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(2) y(1) x(0))
		sendMsg(init y(2) 1 cache)
		unify(y(2) y(5))
lbl(237212)	definition(x(0) 237227 pid('ApplyFalseProc' 1 pos('./compiler/Unnester.oz' 925 4) nil 1) unit [y(1)])
		getRecord(noElse 1 x(0))
		unifyValue(g(0))
		return
		endDefinition(237212)
lbl(237227)	unify(x(0) y(7))
		branch(237305)
lbl(237232)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(2) x(2))
		createVariableMove(y(10) x(3))
		genFastCall(<Q: 1489> 8)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(10) x(1) y(2) x(2))
		moveMoveYXYX(y(5) x(3) y(7) x(4))
		putConstant('FalseCase' x(0))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
lbl(237305)	getList(y(3))
		unifyValVar(y(0) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariable(x(3))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(237334)	testLiteral(y(5) fAndThen 237340)
		branch(237101)
lbl(237340)	move(y(4) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(2) x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1489> 8)
		createVariable(y(0))
		testRecord(y(1) fNoElse 1 237420)
lbl(237410)	getVariable(x(0))
		getRecord(noElse 1 y(0))
		unifyValue(x(0))
		branch(237467)
lbl(237420)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		genFastCall(<Q: 1489> 8)
lbl(237467)	getList(y(3))
		unifyValVar(y(5) x(6))
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		moveMoveYXYX(y(0) x(2) y(2) x(3))
		createVariable(x(4))
		deAllocateL
		genFastCall(<Q: 1490> 15)
lbl(237493)	inlineAt(switches x(2) cache)
		putConstant(codegen x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		move(y(6) x(0))
		testBI('Not' [x(0)]#[x(1)] 237340)
		branch(237097)
lbl(237519)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(904)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(237530)	allocateL7
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(x(1) y(3))
		putConstant('Arbiter' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(3))
		unifyValVar(y(4) y(6))
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(6) x(4))
		deAllocateL7
		genCall(gci(g(0) true <M: UnnestCase> true 5) 0)
lbl(237583)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Lock' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		getList(y(2))
		unifyValVar(y(3) y(0))
		move(g(1) x(0))
		inlineDot(x(0) lockNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(4) x(0))
		moveMoveYXYX(y(5) x(1) y(1) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL6
		return
lbl(237651)	allocateL4
		getVarVar(x(0) y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		testBool(x(2) 237679 237701)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(237712)
lbl(237679)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(237712)
lbl(237701)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(959)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(237712)	move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) objectLockNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(3) x(0))
		move(y(0) x(1))
		sendMsg(init y(2) 2 cache)
		unify(y(2) y(1))
		deAllocateL4
		return
lbl(237752)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		move(y(1) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) threadNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(237838)	genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(237841)	getVarVar(x(2) x(3))
		putList(x(4))
		setValue(x(2))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('Raise')
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(237863)	allocateL8
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant('Exception' x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		putRecord(fVar 2 y(5))
		setVariable(y(6))
		setValue(y(1))
		createVariableMove(y(7) x(0))
		sendMsg('getVariable' y(4) 1 cache)
		move(y(6) x(0))
		sendMsg(getPrintName y(7) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		putList(x(2))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApply 3 x(1))
		setConstant('RaiseDebugCheck')
		setValue(x(2))
		setValue(y(4))
		putList(x(5))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setValue(y(5))
		setValue(x(5))
		putRecord(fOpApplyStatement 3 x(3))
		setConstant('RaiseDebugExtend')
		setValue(x(4))
		setValue(y(1))
		putList(x(7))
		setValue(y(5))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(6))
		setConstant('Raise')
		setValue(x(7))
		setValue(y(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(6))
		setValue(y(4))
		getList(y(2))
		unifyValVar(y(3) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(237994)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) skipNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238025)	allocateL2
		getVariable(x(0))
		move(g(1) x(2))
		inlineDot(x(2) failNode x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(4) y(1))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(238056)	getVarVar(x(2) x(3))
		putRecord(fSkip 1 x(7))
		setValue(x(3))
		putRecord(fFail 1 x(8))
		setValue(x(3))
		putRecord(fClause 3 x(6))
		setValue(x(7))
		setValue(x(2))
		setValue(x(8))
		putList(x(5))
		setValue(x(6))
		setConstant(nil)
		putRecord(fSkip 1 x(9))
		setValue(x(3))
		putRecord(fCond 3 x(4))
		setValue(x(5))
		setValue(x(9))
		setValue(x(3))
		putRecord(fThread 2 x(0))
		setValue(x(4))
		setValue(x(3))
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(238114)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		putConstant(fif x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		createVariable(y(4))
		testRecord(y(0) fNoElse 1 238167)
lbl(238139)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
		branch(238202)
lbl(238167)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(5) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(4))
lbl(238202)	move(g(1) x(0))
		inlineDot(x(0) ifNode x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL6
		return
lbl(238235)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		moveMoveXYYX(x(1) y(2) y(0) x(1))
		createVariableMove(y(3) x(2))
		genCall(gci(g(0) true <M: UnnestClauses> false 3) 0)
		match(y(0) ht(238348 [onScalar(for 238255) onScalar(fdis 238286) onScalar(fchoice 238317)]))
lbl(238255)	move(g(1) x(0))
		inlineDot(x(0) orNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238286)	move(g(1) x(0))
		inlineDot(x(0) disNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238317)	move(g(1) x(0))
		inlineDot(x(0) choiceNode x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(2))
		deAllocateL4
		return
lbl(238348)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1009)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238361)	allocateL5
		getVarVar(y(0) y(1))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(2))
		sendMsg(openScope x(0) 0 cache)
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		getSelf(x(3))
lbl(238387)	definition(x(1) 238662 pid('' 2 pos('./compiler/Unnester.oz' 1014 6) nil 5) unit [x(3) g(0) x(0)])
		move(g(0) x(2))
		setSelf(x(2))
		getSelf(x(3))
lbl(238400)	definition(x(4) 238651 pid('' 2 pos('./compiler/Unnester.oz' 1016 3) nil 4) unit [x(3) g(1) g(2)])
		allocateL(11)
		move(g(0) x(2))
		setSelf(x(2))
		move(x(1) y(0))
		createVariable(y(1))
		createVariable(y(2))
		match(x(0) ht(238619 [onRecord(fFdCompare 4 238423) onRecord(fFdIn 4 238470)]))
lbl(238423)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdCompare 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238632)
lbl(238470)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariable(y(6))
		createVariable(y(7))
		match(y(3) ht(238539 [onScalar('::' 238483) onScalar(':::' 238529)]))
lbl(238483)	move(y(6) x(2))
		putConstant('UnnestFDIn' x(1))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		getRecord(fVar 2 y(7))
		unifyVariable(x(0))
		unifyVariable(y(8))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(8) x(0))
		sendMsg(getCoord y(9) 1 cache)
		branch(238552)
lbl(238529)	moveMoveYXYX(y(6) x(1) y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDList> false 3) 0)
		branch(238552)
lbl(238539)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1032)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(238552)	move(y(4) x(0))
		putConstant('UnnestDomain' x(1))
		createVariableMove(y(8) x(2))
		createVariableMove(y(9) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(9) 1 cache)
		putRecord(fVar 2 y(9))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(4) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(4) 1 cache)
		getList(y(1))
		unifyValue(y(6))
		unifyValue(y(8))
		getRecord(fFdIn 4 y(2))
		unifyValue(y(3))
		unifyValue(y(7))
		unifyValue(y(9))
		unifyValue(y(5))
		branch(238632)
lbl(238619)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(1038)
		setValue(x(0))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(238632)	putList(x(0))
		setVariable(x(1))
		setValue(y(1))
		move(g(2) x(2))
		callBI('Exchange' [x(2) x(1) x(0)]#nil)
		unify(y(2) y(0))
		deAllocateL
		return
		endDefinition(238400)
lbl(238651)	move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(238387)
lbl(238662)	moveMoveXYYX(x(0) y(3) y(0) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(<M: BA> x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		createVariableMove(y(0) x(3))
		genFastCall(<Q: 1480> 8)
		move(y(0) x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(3) x(0))
		callBI('Access' [x(0)]#[x(4)])
		putList(x(1))
		setValue(x(4))
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		move(y(2) x(3))
		deAllocateL5
		genFastCall(<Q: 1489> 9)
lbl(238736)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(reporter x(3) cache)
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		putConstant('expression at statement position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(2) x(1))
		putConstant('Error' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		createVariableMove(y(4) x(0))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fVar 2 x(1))
		setValue(y(4))
		setValue(y(2))
		moveMoveYXYX(y(0) x(0) y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(233337)
lbl(238816)	definition(x(8) 238851 pid('Unnester,UnnestStatement/slow' 1 pos('./compiler/Unnester.oz' 567 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1504> 5)
		endDefinition(238816)
lbl(238851)	putRecord('#' [1 2 fast] x(15))
		setConstant(<M: UnnestStatement>)
		setValue(x(8))
		setValue(x(7))
lbl(238861)	definition(x(7) 244000 pid('Unnester,UnnestExpression/fast' 3 pos('./compiler/Unnester.oz' 1053 6) nil 13) <Q: 1505> [y(3) y(0) y(4) g(11) g(12)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		match(y(0) ht(243969 [onRecord(fTypeOf 1 238886) onRecord(fStepPoint 3 238941) onRecord(fAnd 2 239038) onRecord(fEq 3 239062) onRecord(fAssign 3 239084) onRecord(fOrElse 3 239181) onRecord(fAndThen 3 239233) onRecord(fOpApply 3 239285) onRecord(fUnoptimizedDot 2 239597) onRecord(fFdCompare 4 239726) onRecord(fFdIn 4 239788) onRecord(fObjApply 3 239942) onRecord(fAt 2 240128) onRecord(fAtom 2 240215) onRecord(fVar 2 240301) onRecord(fWildcard 1 240378) onRecord(fEscape 2 240406) onRecord(fSelf 1 240417) onRecord(fDollar 1 240540) onRecord(fInt 2 240590) onRecord(fFloat 2 240676) onRecord(fRecord 2 240762) onRecord(fOpenRecord 2 240883) onRecord(fApply 3 241004) onRecord(fProc 5 241212) onRecord(fFun 5 241289) onRecord(fFunctor 3 241366) onRecord(fClass 4 241433) onRecord(fScanner 6 241501) onRecord(fParser 7 241571) onRecord(fLocal 3 241645) onRecord(fBoolCase 4 242147) onRecord(fCase 4 242218) onRecord(fLockThen 3 242708) onRecord(fLock 2 242740) onRecord(fThread 2 242823) onRecord(fTry 4 242860) onRecord(fRaise 2 243259) onRecord(fRaiseWith 3 243292) onRecord(fNot 2 243325) onRecord(fCond 3 243353) onRecord(fOr 3 243640)]))
lbl(238886)	getVariable(y(0))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(1) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) typeOf x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(0) x(0))
		move(y(1) x(1))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(238941)	getVarVar(x(0) y(0))
		getVariable(y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 239022 239027)
lbl(238976)	move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1481> 4)
		testBool(y(1) 239022 239027)
lbl(238989)	move(g(0) x(0))
		inlineDot(x(0) stepPoint x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(3) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL
		return
lbl(239022)	unify(y(2) y(4))
		deAllocateL
		return
lbl(239027)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1059)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(239038)	getVarVar(x(0) y(0))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(239062)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(3))
		unifyValue(y(4))
		deAllocateL
		return
lbl(239084)	getVarVar(x(0) x(1))
		getVariable(y(0))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		testBool(x(2) 239113 239135)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(239146)
lbl(239113)	inlineAt(reporter x(3) cache)
		move(y(0) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute exchange used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(239146)
lbl(239135)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1070)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(239146)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(y(4))
		setValue(x(3))
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(ooExch)
		setValue(x(1))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239181)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fVar 2 x(5))
		setConstant('`true`')
		setValue(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(5))
		setValue(x(4))
		putRecord(fEq 3 x(6))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(6))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239233)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fVar 2 x(6))
		setConstant('`false`')
		setValue(x(4))
		putRecord(fEq 3 x(5))
		setValue(y(1))
		setValue(x(6))
		setValue(x(4))
		putRecord(fBoolCase 4 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(5))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239285)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 239308)
		branch(239365)
lbl(239308)	createVariable(y(6))
		testList(y(4) 239326)
lbl(239313)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 239326)
		getLiteral(prefix y(6))
		branch(239329)
lbl(239326)	getLiteral(infix y(6))
lbl(239329)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(7) y(4) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setValue(y(6))
		setConstant(' operator cannot take $ as argument')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
lbl(239365)	testRecord(y(0) fOpApply 3 239431)
lbl(239370)	getVarVar(x(0) x(1))
		shallowGuard(239431)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fAtom 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239406)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239431)	testRecord(y(0) fOpApply 3 239499)
lbl(239436)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(239499)
		getLiteral('.' x(0))
		getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fVar 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fInt 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(239474)	shallowThen
		move(x(3) x(4))
		move(x(2) x(3))
		move(x(0) x(2))
		move(y(1) x(0))
		move(x(1) x(5))
		moveMoveYXYX(y(5) x(1) y(2) x(6))
		deAllocateL
		genCall(gci(g(1) true <M: OptimizeImportFeature> true 7) 0)
lbl(239499)	move(g(2) x(0))
		inlineDot(x(0) procs x(1) cache)
		move(y(3) x(2))
		callBI('.' [x(1) x(2)]#[x(3)])
		move(y(5) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ x(3) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 21> 6)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(3) x(0))
		moveMoveYXYX(y(7) x(1) y(5) x(2))
		sendMsg(init y(1) 3 cache)
		getList(y(2))
		unifyValVar(y(4) x(0))
		getList(x(0))
		unifyValue(y(6))
		unifyValue(y(1))
		deAllocateL
		return
lbl(239597)	getVarVar(x(3) y(3))
		getRecord(fVar 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(4))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		createVariableMove(y(5) x(2))
		sendMsg(referUnchecked x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(4) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		putList(x(0))
		setValue(y(3))
		setValue(x(1))
		createVariableMove(y(3) x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(2))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValVar(y(7) y(9))
		move(g(0) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(8))
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		move(x(4) x(1))
		move(y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(9))
		deAllocateL
		return
lbl(239726)	getVarVar(y(3) x(0))
		getVarVar(y(4) y(5))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		move(y(4) x(0))
		createVariableMove(y(8) x(1))
		createVariableMove(y(9) x(2))
		genCall(gci(g(1) true <M: UnnestFDExpression> false 3) 0)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		moveMoveYXYX(y(9) x(2) y(5) x(3))
		move(y(1) x(4))
		createVariableMove(y(4) x(5))
		genFastCall(<Q: 1468> 12)
		getList(y(2))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239788)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		match(x(0) ht(239817 [onScalar('::' 239807) onScalar(':::' 239812)]))
lbl(239807)	getLiteral(int y(6))
		branch(239830)
lbl(239812)	getLiteral(dom y(6))
		branch(239830)
lbl(239817)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1123)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(239830)	move(y(5) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fVar 2 x(5))
		setConstant('FD')
		setValue(y(5))
		putRecord(fAtom 2 x(7))
		setConstant(reified)
		setValue(y(5))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putRecord(fOpApply 3 x(3))
		setConstant('.')
		setValue(x(4))
		setValue(y(5))
		putRecord(fAtom 2 x(9))
		setValue(y(6))
		setValue(y(5))
		putList(x(8))
		setValue(x(9))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(8))
		putRecord(fOpApply 3 x(1))
		setConstant('.')
		setValue(x(2))
		setValue(y(7))
		putList(x(12))
		setValue(y(1))
		setConstant(nil)
		putList(x(11))
		setValue(y(3))
		setValue(x(12))
		putList(x(10))
		setValue(y(4))
		setValue(x(11))
		putRecord(fApply 3 x(0))
		setValue(x(1))
		setValue(x(10))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(239942)	getVarVar(y(3) y(4))
		getVariable(y(5))
		inlineAt(<M: Stateful> x(0) cache)
		testBool(x(0) 240055 240077)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 1 240028)
		testRecord(y(3) fSelf 1 240088)
lbl(239985)	getVariable(x(0))
		inlineAt(reporter x(4) cache)
		putRecord('#' 2 x(6))
		setConstant('use a class in front of "," ')
		setConstant('or use {self message}')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant('expansion error' x(2))
		putConstant('"self, message" not allowed' x(3))
		sendMsg(error x(4) [coord items kind msg] cache)
		branch(240088)
lbl(240028)	inlineAt(reporter x(3) cache)
		putRecord('#' 2 x(2))
		setConstant('message of nested object application ')
		setConstant('must contain exactly one nesting marker')
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240088)
lbl(240055)	inlineAt(reporter x(3) cache)
		move(y(5) x(0))
		putConstant('expansion error' x(1))
		putConstant('object application used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240088)
lbl(240077)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1131)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(240088)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(2))
		setValue(y(6))
		setConstant(nil)
		putList(x(1))
		setValue(y(3))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant(',')
		setValue(x(1))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240128)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 240153 240175)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(240186)
lbl(240153)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('attribute access used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240186)
lbl(240175)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1157)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(240186)	putList(x(2))
		setValue(y(1))
		setConstant(nil)
		putList(x(1))
		setValue(y(4))
		setValue(x(2))
		putRecord(fOpApplyStatement 3 x(0))
		setConstant('@')
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(240215)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) atomNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240301)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		createVariableMove(y(6) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(6) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240378)	getVariable(x(0))
		move(g(0) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240406)	getVariable(x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(240417)	getVariable(y(3))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: Stateful> x(2) cache)
		moveMoveXYXY(x(0) y(4) x(1) y(5))
		testBool(x(2) 240451 240473)
		putConstant(true x(3))
		inlineAssign(<M: StateUsed> x(3) cache)
		branch(240484)
lbl(240451)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('self used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(240484)
lbl(240473)	putRecord(kernel 2 x(2))
		setConstant(boolCaseType)
		setConstant(1177)
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(240484)	move(g(0) x(0))
		inlineDot(x(0) 'getSelf' x(1) cache)
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(1) y(6) y(4) x(0))
		move(y(5) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		move(y(3) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240540)	getVariable(y(3))
		inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('illegal use of nesting marker' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		move(g(0) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(4) y(3) x(0))
		sendMsg(init y(4) 1 cache)
		unify(y(4) y(2))
		deAllocateL
		return
lbl(240590)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) intNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240676)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(5) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		inlineDot(x(0) floatNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(1) y(6) x(3) y(7))
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		sendMsg(init y(7) 2 cache)
		move(y(6) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(5) x(0))
		moveMoveYXYX(y(7) x(1) y(4) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(2))
		deAllocateL
		return
lbl(240762)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 240821)
lbl(240816)	getLiteral('' y(8))
		branch(240824)
lbl(240821)	unify(y(8) y(5))
lbl(240824)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(3) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(240883)	getVarVar(y(3) y(4))
		getRecord(fVar 2 y(1))
		unifyVariable(y(5))
		unifyVariable(y(6))
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(8) x(0))
		sendMsg('getVariable' y(7) 1 cache)
		createVariableMove(y(9) x(0))
		sendMsg(getOrigin y(8) 1 cache)
		createVariable(y(8))
		testLiteral(y(9) generated 240942)
lbl(240937)	getLiteral('' y(8))
		branch(240945)
lbl(240942)	unify(y(8) y(5))
lbl(240945)	moveMoveYXYX(y(8) x(0) y(3) x(1))
		move(y(4) x(2))
		move(g(4) x(3))
		createVariableMove(y(5) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getList(y(2))
		unifyVariable(y(3))
		unifyValue(y(9))
		move(g(0) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(4) y(7) x(0))
		moveMoveYXYX(y(5) x(1) y(6) x(2))
		sendMsg(init y(4) 3 cache)
		unify(y(4) y(3))
		deAllocateL
		return
lbl(241004)	getVarVar(y(3) y(4))
		getVariable(y(5))
		move(y(3) x(0))
		putConstant(0 x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1485> 6)
		move(y(4) x(0))
		putConstant(0 x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<Q: 1485> 6)
		testNumber(y(6) 0 241073)
lbl(241037)	testNumber(y(7) 0 241073)
lbl(241041)	putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241073)	testNumber(y(6) 0 241109)
lbl(241077)	testNumber(y(7) 1 241109)
lbl(241081)	moveMoveYXYX(y(4) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putRecord(fApply 3 x(0))
		setValue(y(3))
		setValue(y(6))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241109)	testNumber(y(6) 1 241160)
lbl(241113)	testNumber(y(7) 0 241160)
lbl(241117)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1487> 6)
		putList(x(1))
		setValue(y(1))
		setConstant(nil)
		move(y(4) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
		putRecord(fApply 3 x(0))
		setValue(y(6))
		setValue(y(3))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241160)	inlineAt(reporter x(0) cache)
		putList(x(2))
		setValue(y(3))
		setValue(y(4))
		move(x(0) y(3))
		move(x(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1486> 4)
		putRecord('#' 2 x(2))
		setConstant('at most one nesting marker allowed ')
		setConstant('in nested application')
		move(y(4) x(0))
		putConstant('expansion error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241212)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241246)
lbl(241225)	putRecord(fProc 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241246)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested procedure')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241289)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		testRecord(x(0) fDollar 1 241323)
lbl(241302)	putRecord(fFun 5 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241323)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('nesting marker expected as designator ')
		setConstant('of nested function')
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241366)	getVarVar(x(0) x(2))
		getVariable(x(3))
		testRecord(x(0) fDollar 1 241393)
lbl(241376)	putRecord(fFunctor 3 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241393)	inlineAt(reporter x(1) cache)
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(5) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested functor' x(2))
		sendMsg(error y(4) [coord kind msg] cache)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241433)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		testRecord(x(0) fDollar 1 241463)
lbl(241444)	putRecord(fClass 4 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241463)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(4) x(0))
		putConstant('syntax error' x(1))
		putConstant('nesting marker expected in nested class' x(2))
		sendMsg(error y(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241501)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		testRecord(x(0) fDollar 1 241538)
lbl(241515)	putRecord(fScanner 6 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241538)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested scanner class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241571)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVarVar(x(5) x(6))
		getVariable(x(7))
		testRecord(x(0) fDollar 1 241612)
lbl(241587)	putRecord(fParser 7 x(0))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(241612)	inlineAt(reporter x(1) cache)
		move(x(1) y(3))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord(error [coord kind msg] x(0))
		setValue(y(4))
		setConstant('syntax error')
		setConstant('nesting marker expected in nested parser class')
		moveMoveYXYX(y(3) x(2) y(2) x(1))
		deAllocateL
		tailCall(x(2) 2)
lbl(241645)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(0))
		createVariableMove(y(7) x(2))
		sendMsg(refer x(3) 3 cache)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(4))
lbl(241703)	definition(x(1) 241930 pid('' 3 pos('./compiler/Unnester.oz' 1295 19) nil 7) unit [x(4) y(6) g(1)])
		move(g(0) x(3))
		setSelf(x(3))
		testRecord(x(1) fVar 2 241764)
lbl(241719)	allocateL3
		getVarVar(y(0) x(1))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(y(0) x(0))
		createVariable(x(2))
		sendMsg(bind x(4) 3 cache)
		move(y(0) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(1) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(2))
		deAllocateL3
		return
lbl(241764)	testRecord(x(1) fDoImport 3 241847)
lbl(241769)	allocateL5
		getVarVar(x(4) x(5))
		getRecord(fImportItem 3 x(4))
		unifyVariable(x(1))
		unifyVariable(y(0))
		unifyVoid(1)
		getRecord(fVar 2 x(1))
		unifyVariable(y(1))
		unifyVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		move(y(1) x(0))
		move(x(4) x(1))
		move(x(5) x(3))
		createVariableMove(y(4) x(2))
		sendMsg(bindImport x(6) 4 cache)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		genCall(gci(g(2) true <M: UnnestImportFeatures> false 2) 0)
		move(y(1) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(2) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(3))
		deAllocateL5
		return
lbl(241847)	allocateL3
		move(x(1) y(0))
		testRecord(y(0) fExportItem 1 241915)
lbl(241856)	getVariable(x(4))
		shallowGuard(241915)
		getRecord(fVar 2 x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(241868)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYYX(x(5) y(2) y(2) x(0))
		move(x(6) x(1))
		createVariable(x(2))
		sendMsg(bindExport x(4) 3 cache)
		move(y(2) x(0))
		move(g(1) x(1))
		callBI('==' [x(0) x(1)]#[x(2)])
		move(y(0) x(0))
		callBI('Or' [x(0) x(2)]#[x(3)])
		unify(x(3) y(1))
		deAllocateL3
		return
lbl(241915)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1308)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(241703)
lbl(241930)	move(y(8) x(0))
		putConstant(false x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 30> 8)
		testBool(y(3) 242085 242136)
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('AntiNameClash' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generateForOuterScope x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putList(y(8))
		setVariable(x(1))
		setVariable(y(10))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(6) x(1))
		move(y(10) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		getList(y(2))
		unifyVariable(y(4))
		unifyVariable(y(6))
		move(g(0) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(9) y(5) x(0))
		createVariableMove(y(10) x(1))
		sendMsg(occ y(3) 2 cache)
		move(y(9) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(7) x(0))
		moveMoveYXYX(y(10) x(1) y(5) x(2))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(4))
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(5) x(2) y(6) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242085)	putList(y(3))
		setVariable(x(1))
		setVariable(y(6))
		move(y(9) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		move(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestExpression> false 3) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		moveMoveYXYX(y(5) x(2) y(2) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
lbl(242136)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1294)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(242147)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testRecord(y(5) fNoElse 1 242174)
lbl(242169)	unify(y(8) y(5))
		branch(242189)
lbl(242174)	getRecord(fEq 3 y(8))
		unifyValue(y(1))
		unifyValVar(y(5) x(1))
		move(y(5) x(0))
		genFastCall(<Q: 1483> 4)
lbl(242189)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(y(3))
		setValue(x(1))
		setValue(y(8))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242218)	getVarVar(x(0) y(3))
		getVarVar(y(4) y(5))
		move(y(1) x(1))
		inlineDot(x(1) 1 x(2) cache)
		move(x(2) y(6))
		putConstant('Arbiter' x(1))
		createVariableMove(y(7) x(2))
		createVariableMove(y(8) x(3))
		genCall(gci(g(1) true <M: UnnestToVar> false 4) 0)
		createVariableMove(y(9) x(0))
		sendMsg('getVariable' y(8) 1 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setVariable(y(10))
		sendMsg(getPrintName y(9) 1 cache)
		move(y(10) x(0))
		sendMsg(getCoord y(9) 1 cache)
		getSelf(x(0))
lbl(242282)	definition(x(1) 242649 pid('' 3 pos('./compiler/Unnester.oz' 1334 4) nil 5) unit [x(0) y(6) y(5) g(1) y(1) y(8)])
		allocateL5
		move(g(0) x(3))
		setSelf(x(3))
lbl(242294)	definition(x(4) 242333 pid('' 3 pos('./compiler/Unnester.oz' 1336 8) nil 5) unit nil)
		shallowGuard(242320)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(242310)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(242320)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1336)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242294)
lbl(242333)	moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
lbl(242353)	definition(x(1) 242393 pid('' 2 pos('./compiler/Unnester.oz' 1339 20) nil 4) unit [g(1)])
		shallowGuard(242380)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242369)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(242380)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1339)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242353)
lbl(242393)	move(y(3) x(0))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(4) 242546 242636)
		move(g(1) x(0))
		move(y(3) x(1))
		move(g(2) x(2))
		createVariableMove(y(4) x(3))
		genCall(gci(g(3) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setValue(g(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord(fAnd 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(3))
		unifyValue(g(4))
		unifyValue(g(2))
		getRecord(fCase 4 x(1))
		unifyValVar(g(5) x(2))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
lbl(242470)	definition(x(1) 242536 pid('' 2 pos('./compiler/Unnester.oz' 1346 6) nil 4) unit [y(3)])
		shallowGuard(242523)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242486)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242523)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1346)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242470)
lbl(242536)	move(y(0) x(0))
		move(x(3) x(2))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242546)	getRecord(fCase 4 y(2))
		unifyValVar(g(5) x(0))
		unifyValue(y(1))
		unifyValue(g(2))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
lbl(242563)	definition(x(1) 242629 pid('' 2 pos('./compiler/Unnester.oz' 1352 8) nil 4) unit [g(4)])
		shallowGuard(242616)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(242579)	shallowThen
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1483> 4)
		getRecord(fCaseClause 2 y(0))
		unifyValVar(y(1) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(242616)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1352)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242563)
lbl(242629)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<P: 29> 7)
lbl(242636)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1339)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242282)
lbl(242649)	move(x(1) y(5))
		createVariable(y(6))
		testRecord(y(4) fNoElse 1 242664)
lbl(242659)	unify(y(6) y(4))
		branch(242682)
lbl(242664)	getRecord(fEq 3 y(6))
		unifyValue(y(1))
		unifyValVar(y(4) x(2))
		move(y(4) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1483> 4)
lbl(242682)	moveMoveYXYX(y(3) x(0) y(5) x(1))
		move(y(6) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 32> 8)
		getList(y(2))
		unifyValVar(y(7) x(1))
		move(y(4) x(0))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242708)	getVarVar(x(2) x(3))
		getVariable(x(4))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(3))
		setValue(x(4))
		putRecord(fLockThen 3 x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242740)	getVarVar(x(0) y(3))
		inlineAt(<M: Stateful> x(1) cache)
		move(x(0) y(4))
		testBool(x(1) 242765 242787)
		putConstant(true x(2))
		inlineAssign(<M: StateUsed> x(2) cache)
		branch(242798)
lbl(242765)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('expansion error' x(1))
		putConstant('object lock used outside of method' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(242798)
lbl(242787)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(1365)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(242798)	putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(4))
		setValue(y(3))
		putRecord(fLock 2 x(0))
		setValue(x(1))
		setValue(y(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242823)	getVarVar(y(3) y(4))
		move(y(3) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1483> 4)
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(3))
		setValue(y(5))
		putRecord(fThread 2 x(0))
		setValue(x(1))
		setValue(y(4))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242860)	getVarVar(y(3) y(4))
		getVarVar(y(5) y(6))
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('TryResult' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(8))
		setVariable(x(0))
		setValue(y(6))
		sendMsg(getPrintName y(7) 1 cache)
		putRecord(fEq 3 x(0))
		setValue(y(8))
		setValue(y(3))
		setValue(y(6))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(y(8))
		setValue(y(6))
		putRecord(fAnd 2 x(2))
		setValue(x(0))
		setValue(x(1))
		match(y(4) ht(243246 [onScalar(fNoCatch 242931) onRecord(fCatch 2 242950)]))
lbl(242931)	putRecord(fTry 4 x(0))
		setValue(x(2))
		setConstant(fNoCatch)
		setValue(y(5))
		setValue(y(6))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(242950)	getVarVar(y(3) y(4))
lbl(242953)	definition(x(1) 242992 pid('' 3 pos('./compiler/Unnester.oz' 1383 2) nil 5) unit nil)
		shallowGuard(242979)
		getRecord(fCaseClause 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(242969)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(242979)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1383)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(242953)
lbl(242992)	moveMoveXYYX(x(2) y(7) y(3) x(0))
		createVariableMove(y(8) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		move(y(1) x(0))
		inlineDot(x(0) 1 x(1) cache)
lbl(243015)	definition(x(3) 243055 pid('' 2 pos('./compiler/Unnester.oz' 1387 21) nil 4) unit [x(1)])
		shallowGuard(243042)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243031)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243042)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1387)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243015)
lbl(243055)	moveMoveXYYX(x(1) y(9) y(8) x(0))
		move(x(3) x(1))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 36> 6)
		createVariable(y(11))
		createVariable(y(12))
		createVariable(y(13))
		testBool(y(10) 243146 243170)
		moveMoveYXYX(y(9) x(0) y(8) x(1))
		move(y(6) x(2))
		createVariableMove(y(10) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		getRecord(fVar 2 y(11))
		unifyVariable(x(0))
		unifyValue(y(6))
		sendMsg(getPrintName y(10) 1 cache)
		getRecord(fAnd 2 y(12))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fEq 3 x(0))
		unifyValue(y(1))
		unifyValue(y(11))
		unifyValue(y(6))
		getRecord(fTry 4 x(1))
		unifyValVar(y(7) x(2))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(2))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243181)
lbl(243146)	unify(y(11) y(1))
		getRecord(fTry 4 y(12))
		unifyValVar(y(7) x(0))
		unifyValue(y(5))
		unifyValue(y(6))
		getRecord(fCatch 2 x(0))
		unifyValue(y(13))
		unifyValue(y(4))
		branch(243181)
lbl(243170)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1387)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243181)	definition(x(1) 243229 pid('' 2 pos('./compiler/Unnester.oz' 1398 7) nil 4) unit [y(11) y(6)])
		shallowGuard(243216)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243197)	shallowThen
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(3))
		unifyValue(g(1))
		return
lbl(243216)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1398)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243181)
lbl(243229)	moveMoveYXYX(y(3) x(0) y(13) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(12) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243246)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1402)
		setValue(y(4))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243259)	getVoid(1)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243292)	getVoid(2)
		getVariable(y(3))
		getList(y(2))
		unifyVariable(x(1))
		unifyVariable(y(4))
		move(y(0) x(0))
		genCall(gci(g(1) true <M: UnnestStatement> false 2) 0)
		putRecord(fVar 2 x(0))
		setConstant('`unit`')
		setValue(y(3))
		moveMoveYXYX(y(1) x(1) y(4) x(2))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestExpression> true 3) 0)
lbl(243325)	getVarVar(x(2) x(3))
		putRecord(fEq 3 x(1))
		setValue(y(1))
		setValue(x(2))
		setValue(x(3))
		putRecord(fNot 2 x(0))
		setValue(x(1))
		setValue(x(3))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243353)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243366)	definition(x(1) 243407 pid('' 3 pos('./compiler/Unnester.oz' 1413 6) nil 6) unit nil)
		shallowGuard(243394)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243384)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243394)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1413)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243366)
lbl(243407)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fCond 3 y(8))
		setVariable(x(2))
		setVariable(y(9))
		setValue(y(5))
		createVariable(y(10))
lbl(243431)	definition(x(1) 243483 pid('' 2 pos('./compiler/Unnester.oz' 1417 3) nil 5) unit [y(10) y(5)])
		shallowGuard(243470)
		getRecord(fClause 3 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(243449)	shallowThen
		getRecord(fClause 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(0))
		unifyValue(x(4))
		unifyValue(g(1))
		return
lbl(243470)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1417)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243431)
lbl(243483)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
		testRecord(y(4) fNoElse 1 243499)
lbl(243494)	unify(y(9) y(4))
		branch(243509)
lbl(243499)	getRecord(fEq 3 y(9))
		unifyValue(y(10))
		unifyValue(y(4))
		unifyValue(y(5))
lbl(243509)	definition(x(1) 243549 pid('' 2 pos('./compiler/Unnester.oz' 1423 18) nil 4) unit [y(6)])
		shallowGuard(243536)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243525)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243536)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1423)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243509)
lbl(243549)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 243617 243629)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243617)	unify(y(10) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243629)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1423)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243640)	getVarVar(y(3) y(4))
		getVariable(y(5))
		getRecord(fVar 2 y(1))
		unifyVariable(y(6))
		unifyVoid(1)
lbl(243653)	definition(x(1) 243694 pid('' 3 pos('./compiler/Unnester.oz' 1435 6) nil 6) unit nil)
		shallowGuard(243681)
		getRecord(fClause 3 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243671)	shallowThen
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
lbl(243681)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1435)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243653)
lbl(243694)	move(y(3) x(0))
		createVariableMove(y(7) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		putRecord(fOr 3 y(8))
		setVariable(x(2))
		setValue(y(4))
		setValue(y(5))
		getSelf(x(3))
		createVariable(y(4))
lbl(243720)	definition(x(1) 243832 pid('' 2 pos('./compiler/Unnester.oz' 1439 8) nil 8) unit [x(3) y(4) y(5)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(243819)
		getRecord(fClause 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(243743)	shallowThen
		testRecord(x(5) fNoThen 1 243799)
lbl(243749)	allocateL4
		getVariable(x(0))
		inlineAt(reporter x(6) cache)
		putRecord('#' 2 x(7))
		setConstant('`then\' part in nested `or\' ')
		setConstant('not optional')
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		move(x(7) x(2))
		putConstant('syntax error' x(1))
		sendMsg(error x(6) [coord kind msg] cache)
		getRecord(fClause 3 y(0))
		unifyValue(y(1))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(243799)	getRecord(fClause 3 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(g(1))
		unifyValue(x(5))
		unifyValue(g(2))
		return
lbl(243819)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1439)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243720)
lbl(243832)	move(y(3) x(0))
		genFastCall(<P: 29> 6)
lbl(243838)	definition(x(1) 243878 pid('' 2 pos('./compiler/Unnester.oz' 1450 18) nil 4) unit [y(6)])
		shallowGuard(243865)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(243854)	shallowThen
		move(g(0) x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(243865)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1450)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(243838)
lbl(243878)	move(y(7) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 36> 6)
		testBool(y(3) 243946 243958)
		moveMoveYXYX(y(6) x(0) y(7) x(1))
		move(y(5) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(1) true <M: GenerateNewVar> false 4) 0)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(3) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(4))
		setValue(y(1))
		setValue(y(5))
		putRecord(fAnd 3 x(0))
		setValue(x(1))
		setValue(y(8))
		setValue(y(5))
		move(y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243946)	unify(y(4) y(1))
		moveMoveYXYX(y(8) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
lbl(243958)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1450)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(243969)	inlineAt(reporter x(3) cache)
		move(y(3) x(0))
		putConstant('syntax error' x(1))
		putConstant('statement at expression position' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL
		genCall(gci(g(1) true <M: UnnestStatement> true 2) 0)
		endDefinition(238861)
lbl(244000)	definition(x(8) 244041 pid('Unnester,UnnestExpression/slow' 1 pos('./compiler/Unnester.oz' 1053 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1505> 7)
		endDefinition(244000)
lbl(244041)	putRecord('#' [1 2 fast] x(16))
		setConstant(<M: UnnestExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(244051)	definition(x(7) 244275 pid('Unnester,UnnestApplyArgs/fast' 4 pos('./compiler/Unnester.oz' 1467 6) nil 6) <Q: 1506> [y(0) g(11) y(3)])
		match(x(0) ht(244260 [onScalar(nil 244060) onRecord('|' 2 244070)]))
lbl(244060)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244070)	allocateL10
		getVarVar(x(0) y(0))
		testRecord(x(0) fRecord 2 244222)
lbl(244079)	getVarVar(y(1) y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(3) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(6) x(1))
		putConstant('UnnestApply' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(g(1) x(3))
		putConstant('' x(0))
		createVariableMove(y(8) x(4))
		createVariableMove(y(9) x(5))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		getList(y(3))
		unifyValVar(y(9) y(1))
		move(g(2) x(0))
		inlineDot(x(0) equation x(1) cache)
		moveMoveXYYX(x(1) y(2) y(6) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(7) 2 cache)
		move(y(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(3) x(0))
		moveMoveYXYX(y(8) x(1) y(6) x(2))
		sendMsg(init y(9) 3 cache)
		getList(y(4))
		unifyValVar(y(9) y(2))
		getList(y(5))
		unifyVariable(x(1))
		unifyVariable(y(3))
		move(y(6) x(0))
		sendMsg(occ y(7) 2 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244222)	getList(x(1))
		unifyVariable(x(4))
		unifyVariable(y(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(y(2))
		move(x(2) y(3))
		move(x(4) x(2))
		putConstant('UnnestApply' x(1))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(2) y(2) x(3))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestApplyArgs> true 4) 0)
lbl(244260)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1493)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(244051)
lbl(244275)	definition(x(8) 244322 pid('Unnester,UnnestApplyArgs/slow' 1 pos('./compiler/Unnester.oz' 1467 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1506> 9)
		endDefinition(244275)
lbl(244322)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: UnnestApplyArgs>)
		setValue(x(8))
		setValue(x(7))
lbl(244332)	definition(x(7) 244614 pid('Unnester,UnnestConstraint/fast' 4 pos('./compiler/Unnester.oz' 1495 6) nil 8) <Q: 1507> [y(0) g(11) y(3) g(12)])
		match(x(0) ht(244603 [onRecord(fEq 3 244341) onRecord(fRecord 2 244390) onRecord(fOpenRecord 2 244477) onRecord(fVar 2 244564) onRecord(fWildcard 1 244570) onRecord(fEscape 2 244577) onRecord(fAtom 2 244585) onRecord(fInt 2 244591) onRecord(fFloat 2 244597)]))
lbl(244341)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestConstraint> false 4) 0)
		getList(y(2))
		unifyValue(y(4))
		unifyValue(y(6))
		getList(y(3))
		unifyValue(y(5))
		unifyValue(y(7))
		deAllocateL8
		return
lbl(244390)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(1) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244477)	allocateL5
		getVarVar(x(6) x(7))
		getRecord(fVar 2 x(1))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(6) x(1))
		move(x(7) x(2))
		move(x(3) x(5))
		move(g(3) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestRecord> false 6) 0)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		moveMoveYXYX(y(3) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(2))
		deAllocateL5
		return
lbl(244564)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244570)	getLiteral(nil x(2))
		getLiteral(nil x(3))
		return
lbl(244577)	getVariable(x(0))
		getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244585)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244591)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244597)	getLiteral(nil x(3))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(244603)	getLiteral(nil x(2))
		move(x(3) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(244332)
lbl(244614)	definition(x(8) 244661 pid('Unnester,UnnestConstraint/slow' 1 pos('./compiler/Unnester.oz' 1495 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1507> 9)
		endDefinition(244614)
lbl(244661)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: UnnestConstraint>)
		setValue(x(8))
		setValue(x(7))
lbl(244671)	definition(x(7) 245222 pid('Unnester,UnnestRecord/fast' 6 pos('./compiler/Unnester.oz' 1536 6) nil 6) <Q: 1508> [y(0) g(13) g(11) g(12) g(14) y(3)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		putConstant(1 x(4))
		callBI('NewCell' [x(4)]#[x(5)])
		putRecord('#' 2 x(3))
		setVariable(y(6))
		setValue(y(4))
		getSelf(x(4))
lbl(244716)	definition(x(1) 245147 pid('' 3 pos('./compiler/Unnester.oz' 1543 3) nil 7) unit [x(4) g(0) x(5) y(0) g(2) g(3) g(4)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(245134)
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(244737)	shallowThen
		allocateL10
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		createVariable(y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(1) fColon 2 244825)
lbl(244757)	getVarVar(y(6) y(7))
		moveMoveXYYX(x(4) y(8) y(6) x(0))
		createVariableMove(y(9) x(1))
		genCall(gci(g(1) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(2) y(7))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(8))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(4))
		match(y(6) ht(244812 [onRecord(fAtom 2 244791) onRecord(fVar 2 244798) onRecord(fInt 2 244805)]))
lbl(244791)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244852)
lbl(244798)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244852)
lbl(244805)	getVariable(x(0))
		unify(y(5) x(0))
		branch(244852)
lbl(244812)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1551)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(244825)	unify(y(2) x(1))
		getList(y(3))
		unifyValue(y(4))
		unifyValue(x(4))
		move(g(2) x(0))
		callBI('Access' [x(0)]#[x(4)])
		unify(x(4) y(5))
		callBI('Access' [x(0)]#[x(4)])
		inlinePlus1(x(4) x(6))
		callBI('Assign' [x(0) x(6)]#nil)
lbl(244852)	match(y(2) ht(245065 [onRecord(fEq 3 244855) onRecord(fRecord 2 244937) onRecord(fOpenRecord 2 245001)]))
lbl(244855)	getVoid(2)
		getVariable(y(5))
		inlineAt(<M: BA> x(3) cache)
		move(y(5) x(1))
		putConstant('Equation' x(0))
		createVariableMove(y(6) x(2))
		sendMsg(generate x(3) 3 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(occ y(6) 2 cache)
		putRecord(fVar 2 y(4))
		setVariable(x(0))
		setValue(y(5))
		sendMsg(getPrintName y(6) 1 cache)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		createVariableMove(y(5) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestConstraint> false 4) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getListValVar(x(0) y(5) x(1))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(244937)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 244956)
lbl(244951)	getLiteral('' y(7))
		branch(244966)
lbl(244956)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(244966)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(4) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245001)	getVarVar(x(0) x(1))
		moveMoveXYXY(x(0) y(2) x(1) y(6))
		createVariable(y(7))
		testLiteral(g(3) '' 245020)
lbl(245015)	getLiteral('' y(7))
		branch(245030)
lbl(245020)	getRecord('#' 3 y(7))
		unifyValue(g(3))
		unifyLiteral('.')
		unifyValue(y(5))
lbl(245030)	moveMoveYXYX(y(7) x(0) y(2) x(1))
		move(y(6) x(2))
		move(g(5) x(3))
		move(y(4) x(4))
		createVariableMove(y(5) x(5))
		genCall(gci(g(1) true <M: UnnestRecord> false 6) 0)
		getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(5))
		deAllocateL10
		return
lbl(245065)	moveMoveYXYX(y(2) x(0) y(4) x(3))
		putConstant('RecordArg' x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(1) true <M: UnnestToTerm> false 4) 0)
		match(g(3) ht(245082 [onScalar('' 245119)]))
lbl(245082)	move(y(6) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1484> 4)
		match(y(2) ht(245094 [onScalar(nil 245119)]))
lbl(245094)	putRecord('#' 3 x(0))
		setValue(g(3))
		setConstant('.')
		setValue(y(5))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 195> 4)
		move(y(4) x(0))
		sendMsg(setPrintName y(2) 1 cache)
lbl(245119)	getRecord('#' 2 y(0))
		unifyValVar(y(3) x(0))
		getList(x(0))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL10
		return
lbl(245134)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1543)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(244716)
lbl(245147)	putRecord('#' 2 x(2))
		setConstant(nil)
		setConstant(nil)
		move(y(1) x(0))
		genFastCall(<P: 30> 8)
		move(y(6) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 28> 4)
		createVariable(x(2))
		move(y(0) x(0))
		move(x(2) x(3))
		createVariableMove(y(1) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(5) x(0))
		inlineDot(x(0) construction x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
		endDefinition(244671)
lbl(245222)	definition(x(8) 245281 pid('Unnester,UnnestRecord/slow' 1 pos('./compiler/Unnester.oz' 1536 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1508> 13)
		endDefinition(245222)
lbl(245281)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: UnnestRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(245291)	definition(x(7) 245735 pid('Unnester,UnnestProc/fast' 5 pos('./compiler/Unnester.oz' 1597 6) nil 6) <Q: 1509> [y(0)])
		allocateL(11)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		putConstant(nil x(1))
		createVariableMove(y(5) x(2))
		putConstant(nil x(3))
		createVariableMove(y(6) x(4))
		putConstant(nil x(5))
		genCall(gci(g(0) true <M: UnnestProcFormals> false 6) 0)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1483> 4)
		createVariable(y(8))
		testList(y(5) 245583)
lbl(245344)	getVarVar(x(2) x(0))
lbl(245347)	definition(x(1) 245364 pid('' 3 pos('./compiler/Unnester.oz' 1605 25) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245347)
lbl(245364)	createVariableMove(y(5) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(9) x(0))
		sendMsg(getVars x(1) 1 cache)
lbl(245384)	definition(x(1) 245412 pid('' 2 pos('./compiler/Unnester.oz' 1610 7) nil 3) unit nil)
		getRecord(fVar 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(unit)
		move(x(0) x(2))
		move(x(1) x(0))
		tailSendMsg(getPrintName x(2) 1 cache)
		endDefinition(245384)
lbl(245412)	move(y(9) x(0))
		createVariableMove(y(10) x(2))
		genFastCall(<P: 29> 6)
lbl(245421)	definition(x(1) 245441 pid('' 3 pos('./compiler/Unnester.oz' 1611 17) nil 3) unit nil)
		move(x(1) x(3))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1432> 7)
		endDefinition(245421)
lbl(245441)	move(y(0) x(0))
		createVariableMove(y(9) x(2))
		putConstant(nil x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(10) x(0) y(9) x(1))
		createVariableMove(y(0) x(2))
		putConstant(nil x(3))
		genFastCall(<Q: 1430> 8)
		match(y(0) ht(245570 [onScalar(nil 245470) onRecord('|' 2 245510)]))
lbl(245470)	getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyVariable(x(3))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fSkip 1 x(3))
		unifyValue(y(3))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245586)
lbl(245510)	getVarVar(x(2) x(0))
lbl(245513)	definition(x(1) 245530 pid('' 3 pos('./compiler/Unnester.oz' 1616 29) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(245513)
lbl(245530)	createVariableMove(y(0) x(3))
		genFastCall(<P: 30> 8)
		getRecord(fCond 3 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyValue(y(3))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getRecord(fClause 3 x(2))
		unifyValue(y(0))
		unifyValue(y(5))
		unifyValue(y(1))
		getRecord(fNoElse 1 x(1))
		unifyValue(y(3))
		branch(245586)
lbl(245570)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1620)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245583)	unify(y(8) y(1))
lbl(245586)	createVariable(y(0))
		testBool(y(2) 245639 245644)
		move(y(3) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1482> 4)
		getRecord(fOpApply 3 y(0))
		unifyLiteral(byNeed)
		unifyVariable(x(0))
		unifyValue(y(1))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getRecord(fFun 5 x(1))
		unifyVariable(x(2))
		unifyLiteral(nil)
		unifyValue(y(8))
		unifyLiteral(nil)
		unifyValue(y(1))
		getRecord(fDollar 1 x(2))
		unifyValue(y(3))
		branch(245655)
lbl(245639)	unify(y(0) y(8))
		branch(245655)
lbl(245644)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1624)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(245655)	definition(x(1) 245674 pid('' 3 pos('./compiler/Unnester.oz' 1630 29) nil 3) unit [y(7)])
		getRecord(fEq 3 x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(g(0))
		return
		endDefinition(245655)
lbl(245674)	moveMoveYXYX(y(6) x(0) y(0) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 30> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL
		genFastCall(<Q: 1489> 9)
		endDefinition(245291)
lbl(245735)	definition(x(8) 245788 pid('Unnester,UnnestProc/slow' 1 pos('./compiler/Unnester.oz' 1597 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1509> 11)
		endDefinition(245735)
lbl(245788)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: UnnestProc>)
		setValue(x(8))
		setValue(x(7))
lbl(245798)	definition(x(7) 245875 pid('Unnester,UnnestProcFormals/fast' 6 pos('./compiler/Unnester.oz' 1635 6) nil 7) <Q: 1510> [y(0)])
		match(x(0) ht(245860 [onScalar(nil 245807) onRecord('|' 2 245814)]))
lbl(245807)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(245814)	allocateL6
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(5) y(2))
		move(x(2) x(3))
		move(x(4) x(5))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(4))
		createVariableMove(y(5) x(6))
		genCall(gci(g(0) true <M: UnnestProcFormal> false 7) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(4) x(2) y(1) x(3))
		moveMoveYXYX(y(5) x(4) y(2) x(5))
		deAllocateL6
		genCall(gci(g(0) true <M: UnnestProcFormals> true 6) 0)
lbl(245860)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1642)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(245798)
lbl(245875)	definition(x(8) 245934 pid('Unnester,UnnestProcFormals/slow' 1 pos('./compiler/Unnester.oz' 1635 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1510> 13)
		endDefinition(245875)
lbl(245934)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: UnnestProcFormals>)
		setValue(x(8))
		setValue(x(7))
lbl(245944)	definition(x(7) 246346 pid('Unnester,UnnestProcFormal/fast' 7 pos('./compiler/Unnester.oz' 1644 6) nil 9) <Q: 1511> nil)
		match(x(0) ht(246210 [onRecord(fVar 2 245953) onRecord(fWildcard 1 246091) onRecord(fDollar 1 246139)]))
lbl(245953)	allocateL10
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYXY(x(2) y(4) x(3) y(5))
		moveMoveXYXY(x(4) y(6) x(5) y(7))
		moveMoveXYYX(x(6) y(8) y(0) x(0))
		createVariableMove(y(9) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(9) 246048 246080)
		unify(y(4) y(3))
		inlineAt(<M: BA> x(3) cache)
		move(y(1) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		unifyValue(y(1))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(1))
		move(x(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246048)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariable(x(2))
		sendMsg(bind x(3) 3 cache)
		getList(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unify(y(5) y(6))
		unify(y(7) y(8))
		deAllocateL10
		return
lbl(246080)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1646)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246091)	allocateL6
		getVariable(x(7))
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(1))
		putConstant('Wildcard' x(0))
		createVariable(x(2))
		sendMsg(generate x(8) 3 cache)
		unify(y(1) y(0))
		unify(y(2) y(3))
		unify(y(4) y(5))
		deAllocateL6
		return
lbl(246139)	allocateL8
		getVariable(y(0))
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		move(y(0) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(7) x(2))
		sendMsg(generate x(7) 3 cache)
		unify(y(2) y(1))
		unify(y(3) y(4))
		getList(y(5))
		unifyVariable(x(0))
		unifyValue(y(6))
		getRecord(fVar 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		move(x(1) x(0))
		move(y(7) x(1))
		deAllocateL8
		tailSendMsg(getPrintName x(1) 1 cache)
lbl(246210)	allocateL9
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		move(x(6) y(6))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1494> 4)
		testBool(y(8) 246250 246272)
		branch(246283)
lbl(246250)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('syntax error' x(1))
		putConstant('only patterns in proc/fun head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
		branch(246283)
lbl(246272)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1669)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(246283)	inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		putConstant('Formal' x(0))
		createVariableMove(y(8) x(2))
		sendMsg(generate x(3) 3 cache)
		unify(y(2) y(1))
		getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(4))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyValue(y(7))
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyValue(y(7))
		move(x(2) x(0))
		sendMsg(getPrintName y(8) 1 cache)
		unify(y(5) y(6))
		deAllocateL9
		return
		endDefinition(245944)
lbl(246346)	definition(x(8) 246411 pid('Unnester,UnnestProcFormal/slow' 1 pos('./compiler/Unnester.oz' 1644 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1511> 15)
		endDefinition(246346)
lbl(246411)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: UnnestProcFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(246421)	definition(x(7) 246670 pid('Unnester,AnalyseImports/fast' 4 pos('./compiler/Unnester.oz' 1681 6) nil 7) <Q: 1512> [y(0)])
		match(x(0) ht(246655 [onScalar(nil 246430) onRecord('|' 2 246440)]))
lbl(246430)	getLiteral(nil x(2))
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246440)	allocateL(12)
		getVarVar(y(0) y(1))
		getRecord(fImportItem 3 y(0))
		unifyVariable(x(4))
		unifyVariable(y(2))
		unifyVariable(y(3))
		getRecord(fVar 2 x(4))
		unifyVariable(y(4))
		unifyVariable(y(5))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(6) x(2) y(7))
		moveMoveXYXY(x(3) y(8) x(4) y(9))
		moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		moveMoveYXYX(y(2) x(0) y(9) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: AnalyseImportFeatures> false 4) 0)
		getRecord(fAnd 2 y(8))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAnd 2 x(0))
		unifyVariable(x(2))
		unifyValue(y(11))
		getRecord(fDoImport 3 x(2))
		unifyValue(y(0))
		unifyVoid(1)
		unifyValue(y(6))
		putRecord(fAtom 2 x(2))
		setConstant(info)
		setValue(y(5))
		putRecord(fAtom 2 x(5))
		setConstant(type)
		setValue(y(5))
		putRecord(fColon 2 x(4))
		setValue(x(5))
		setValue(y(10))
		putList(x(3))
		setValue(x(4))
		setVariable(x(6))
		putRecord(fRecord 2 x(0))
		setValue(x(2))
		setValue(x(3))
		moveMoveXYXY(x(1) y(0) x(0) y(2))
		match(y(3) ht(246608 [onScalar(fNoImportAt 246577) onRecord(fImportAt 1 246582)]))
lbl(246577)	getLiteral(nil x(6))
		branch(246621)
lbl(246582)	getVariable(x(2))
		getList(x(6))
		unifyVariable(x(3))
		unifyLiteral(nil)
		getRecord(fColon 2 x(3))
		unifyVariable(x(4))
		unifyValue(x(2))
		getRecord(fAtom 2 x(4))
		unifyLiteral('from')
		unifyValue(y(5))
		branch(246621)
lbl(246608)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1696)
		setValue(y(3))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(246621)	getList(y(7))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyVariable(x(1))
		unifyValue(y(2))
		getRecord(fAtom 2 x(1))
		unifyValue(y(4))
		unifyValue(y(5))
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		move(y(0) x(3))
		deAllocateL
		genCall(gci(g(0) true <M: AnalyseImports> true 4) 0)
lbl(246655)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1702)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246421)
lbl(246670)	definition(x(8) 246717 pid('Unnester,AnalyseImports/slow' 1 pos('./compiler/Unnester.oz' 1681 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1512> 9)
		endDefinition(246670)
lbl(246717)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AnalyseImports>)
		setValue(x(8))
		setValue(x(7))
lbl(246727)	definition(x(7) 246905 pid('Unnester,AnalyseImportFeatures/fast' 4 pos('./compiler/Unnester.oz' 1704 6) nil 9) <Q: 1513> [y(0)])
		match(x(0) ht(246890 [onScalar(nil 246736) onRecord('|' 2 246751)]))
lbl(246736)	getRecord(fAtom 2 x(2))
		unifyLiteral(nil)
		unifyLiteral(unit)
		getRecord(fSkip 1 x(3))
		unifyLiteral(unit)
		return
lbl(246751)	allocateL8
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		createVariable(y(4))
		createVariable(y(5))
		move(x(3) y(6))
		testRecord(y(0) '#' 2 246843)
lbl(246775)	getVarVar(x(4) x(5))
		shallowGuard(246843)
		getRecord(fVar 2 x(4))
		unifyVariable(x(6))
		unifyVariable(x(7))
lbl(246788)	shallowThen
		inlineAt(<M: BA> x(8) cache)
		moveMoveXYXY(x(4) y(0) x(5) y(7))
		move(x(6) x(0))
		move(x(7) x(1))
		createVariable(x(2))
		sendMsg(bind x(8) 3 cache)
		unify(y(4) y(7))
		getRecord(fAnd 2 y(6))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord(fEq 3 x(0))
		unifyValVar(y(0) x(1))
		unifyLiteral(unit)
		getRecord(fUnoptimizedDot 2 x(1))
		unifyValue(y(1))
		unifyValue(y(7))
		branch(246849)
lbl(246843)	unify(y(4) y(0))
		unify(y(6) y(5))
lbl(246849)	getRecord(fRecord 2 y(2))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fAtom 2 x(0))
		unifyLiteral('|')
		unifyLiteral(unit)
		getListValVar(x(1) y(4) x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyLiteral(nil)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		move(x(4) x(2))
		move(y(5) x(3))
		deAllocateL8
		genCall(gci(g(0) true <M: AnalyseImportFeatures> true 4) 0)
lbl(246890)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1719)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246727)
lbl(246905)	definition(x(8) 246952 pid('Unnester,AnalyseImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1704 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1513> 9)
		endDefinition(246905)
lbl(246952)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: AnalyseImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(246962)	definition(x(7) 247155 pid('Unnester,UnnestImportFeatures/fast' 2 pos('./compiler/Unnester.oz' 1721 6) nil 7) <Q: 1514> [y(0)])
		match(x(0) ht(247140 [onScalar(nil 246971) onRecord('|' 2 246975)]))
lbl(246971)	getLiteral(nil x(1))
		return
lbl(246975)	allocateL5
		getVarVar(y(0) x(0))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		move(x(1) y(3))
		testRecord(y(0) '#' 2 247085)
lbl(246998)	getVarVar(x(3) x(4))
		shallowGuard(247085)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(247011)	shallowThen
		inlineAt(<M: BA> x(3) cache)
		move(x(4) y(0))
		move(x(5) x(0))
		move(x(6) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		match(y(0) ht(247072 [onRecord(fAtom 2 247038) onRecord(fInt 2 247055)]))
lbl(247038)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247131)
lbl(247055)	getVarVar(x(0) x(1))
		getRecord('#' 4 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		unifyValue(y(4))
		branch(247131)
lbl(247072)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1727)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247085)	match(y(0) ht(247118 [onRecord(fAtom 2 247088) onRecord(fInt 2 247103)]))
lbl(247088)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247131)
lbl(247103)	getVarVar(x(0) x(1))
		getRecord('#' 3 y(3))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyVoid(1)
		branch(247131)
lbl(247118)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1730)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247131)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestImportFeatures> true 2) 0)
lbl(247140)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1732)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(246962)
lbl(247155)	definition(x(8) 247190 pid('Unnester,UnnestImportFeatures/slow' 1 pos('./compiler/Unnester.oz' 1721 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1514> 5)
		endDefinition(247155)
lbl(247190)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: UnnestImportFeatures>)
		setValue(x(8))
		setValue(x(7))
lbl(247200)	definition(x(7) 247443 pid('Unnester,OptimizeImportFeature/fast' 7 pos('./compiler/Unnester.oz' 1734 6) nil 8) <Q: 1515> [y(4) y(0) y(3)])
		allocateL7
		inlineAt(<M: BA> x(7) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(5) y(2) x(6) y(3))
		move(x(2) x(0))
		move(x(3) x(1))
		move(x(4) x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		sendMsg(referImport x(7) 5 cache)
		move(y(4) x(0))
		testBI('Not' [x(0)]#[x(1)] 247351)
lbl(247250)	move(g(0) x(0))
		inlineDot(x(0) procs x(2) cache)
		inlineDot(x(2) '.' x(2) cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(occ x(2) 2 cache)
		putList(x(1))
		setValue(y(0))
		setConstant(nil)
		putList(x(0))
		setValue(y(2))
		setValue(x(1))
		createVariableMove(y(0) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(6) x(3))
		genCall(gci(g(1) true <M: UnnestApplyArgs> false 4) 0)
		getList(y(3))
		unifyValVar(y(0) x(0))
		getList(x(0))
		unifyValVar(y(2) y(3))
		move(g(2) x(0))
		inlineDot(x(0) application x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		putList(x(4))
		setValue(y(5))
		setValue(y(6))
		moveMoveXYYX(x(1) y(0) y(4) x(0))
		move(x(4) x(1))
		move(y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL7
		return
lbl(247351)	createVariableMove(y(4) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		createVariableMove(y(6) x(0))
		sendMsg(isRestricted y(4) 1 cache)
		testBool(y(6) 247375 247430)
		branch(247250)
lbl(247375)	getRecord(fVar 2 y(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariableMove(y(0) x(2))
		sendMsg(refer x(3) 3 cache)
		move(g(2) x(0))
		inlineDot(x(0) equation x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(5) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL7
		return
lbl(247430)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1736)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(247200)
lbl(247443)	definition(x(8) 247508 pid('Unnester,OptimizeImportFeature/slow' 1 pos('./compiler/Unnester.oz' 1734 6) nil 8) unit nil)
		putConstant(7 x(7))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(7))
		inlineDot(x(0) 1 x(7) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		inlineDot(x(0) 7 x(6) cache)
		move(x(7) x(0))
		genFastCall(<Q: 1515> 15)
		endDefinition(247443)
lbl(247508)	putRecord('#' [1 2 fast] x(26))
		setConstant(<M: OptimizeImportFeature>)
		setValue(x(8))
		setValue(x(7))
lbl(247518)	definition(x(7) 247676 pid('Unnester,AnalyseExports/fast' 3 pos('./compiler/Unnester.oz' 1748 6) nil 7) <Q: 1516> [y(2) y(0)])
		match(x(0) ht(247661 [onScalar(nil 247527) onRecord('|' 2 247534)]))
lbl(247527)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(247534)	allocateL6
		getVarVar(x(0) x(3))
		getRecord(fExportItem 1 x(0))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(3) y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(y(0) ht(247601 [onRecord(fColon 2 247559) onRecord(fVar 2 247570)]))
lbl(247559)	getVarVar(x(0) x(4))
		unify(y(4) x(0))
		unify(y(5) x(4))
		branch(247614)
lbl(247570)	getVarVar(x(0) x(4))
		getRecord(fAtom 2 y(4))
		unifyVariable(x(5))
		unifyValue(x(4))
		move(g(0) x(4))
		inlineDot(x(4) downcase x(6) cache)
		move(x(5) x(1))
		call(x(6) 2)
		unify(y(5) y(0))
		branch(247614)
lbl(247601)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1758)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(247614)	getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(2))
		getRecord(fTypeOf 1 x(2))
		unifyVariable(x(3))
		getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(fColon 2 x(0))
		unifyValVar(y(4) x(4))
		getRecord(fGetBinder 2 x(4))
		unifyValue(y(5))
		unifyValue(x(3))
		move(y(3) x(0))
		deAllocateL6
		genCall(gci(g(1) true <M: AnalyseExports> true 3) 0)
lbl(247661)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1765)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247518)
lbl(247676)	definition(x(8) 247717 pid('Unnester,AnalyseExports/slow' 1 pos('./compiler/Unnester.oz' 1748 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1516> 7)
		endDefinition(247676)
lbl(247717)	putRecord('#' [1 2 fast] x(27))
		setConstant(<M: AnalyseExports>)
		setValue(x(8))
		setValue(x(7))
lbl(247727)	definition(x(7) 247808 pid('Unnester,UnnestFromProp/fast' 6 pos('./compiler/Unnester.oz' 1768 6) nil 6) <Q: 1517> [y(0)])
		match(x(0) ht(247793 [onScalar(nil 247736) onRecord('|' 2 247743)]))
lbl(247736)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(247743)	allocateL8
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(5) y(5))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(2))
		unifyValVar(y(6) x(2))
		getList(y(4))
		unifyValVar(y(7) x(4))
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(3) x(3) y(5) x(5))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestFromProp> true 6) 0)
lbl(247793)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1777)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247727)
lbl(247808)	definition(x(8) 247867 pid('Unnester,UnnestFromProp/slow' 1 pos('./compiler/Unnester.oz' 1768 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1517> 13)
		endDefinition(247808)
lbl(247867)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: UnnestFromProp>)
		setValue(x(8))
		setValue(x(7))
lbl(247877)	definition(x(7) 248019 pid('Unnester,UnnestAttrFeat/fast' 6 pos('./compiler/Unnester.oz' 1779 6) nil 6) <Q: 1518> [y(0)])
		match(x(0) ht(248004 [onScalar(nil 247886) onRecord('|' 2 247893)]))
lbl(247886)	unify(x(2) x(3))
		unify(x(4) x(5))
		return
lbl(247893)	allocateL(12)
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(x(5) y(3))
		createVariable(y(4))
		createVariable(y(5))
		testRecord(x(0) '#' 2 247965)
lbl(247915)	getVarVar(x(0) y(6))
		moveMoveXYXY(x(2) y(7) x(4) y(8))
		createVariableMove(y(9) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		moveMoveYXYX(y(6) x(0) y(1) x(1))
		createVariableMove(y(10) x(2))
		createVariableMove(y(11) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		getList(y(7))
		unifyValue(y(10))
		unifyValue(y(4))
		getList(y(8))
		unifyVariable(x(0))
		unifyValue(y(5))
		getRecord('#' 2 x(0))
		unifyValue(y(9))
		unifyValue(y(11))
		branch(247985)
lbl(247965)	moveMoveXYXY(x(2) y(6) x(4) y(7))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		unify(y(6) y(4))
		getList(y(7))
		unifyValue(y(8))
		unifyValue(y(5))
lbl(247985)	moveMoveYXYX(y(0) x(0) y(1) x(1))
		moveMoveYXYX(y(4) x(2) y(2) x(3))
		moveMoveYXYX(y(5) x(4) y(3) x(5))
		deAllocateL
		genCall(gci(g(0) true <M: UnnestAttrFeat> true 6) 0)
lbl(248004)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1795)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(247877)
lbl(248019)	definition(x(8) 248078 pid('Unnester,UnnestAttrFeat/slow' 1 pos('./compiler/Unnester.oz' 1779 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1518> 13)
		endDefinition(248019)
lbl(248078)	putRecord('#' [1 2 fast] x(29))
		setConstant(<M: UnnestAttrFeat>)
		setValue(x(8))
		setValue(x(7))
lbl(248088)	definition(x(7) 248687 pid('Unnester,UnnestMeth/fast' 2 pos('./compiler/Unnester.oz' 1798 6) nil 7) <Q: 1519> [y(0) y(3)])
		allocateL(11)
		getRecord(fMeth 3 x(0))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		inlineAt(<M: BA> x(0) cache)
		move(x(1) y(3))
		sendMsg(openScope x(0) 0 cache)
		createVariable(y(4))
		createVariable(y(5))
		testRecord(y(0) fEq 3 248168)
lbl(248129)	getVarVar(x(0) x(1))
		shallowGuard(248168)
		getRecord(fVar 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(248142)	shallowThen
		unify(y(4) x(0))
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		move(y(5) x(2))
		sendMsg(bind x(4) 3 cache)
		branch(248171)
lbl(248168)	unify(y(4) y(0))
lbl(248171)	moveMoveYXYX(y(4) x(0) y(5) x(1))
		createVariableMove(y(0) x(2))
		createVariableMove(y(6) x(3))
		createVariableMove(y(7) x(4))
		genCall(gci(g(0) true <M: UnnestMethHead> false 5) 0)
		moveMoveYXYX(y(6) x(0) y(5) x(1))
		genCall(gci(g(0) true <M: UnnestMethFormals1> false 2) 0)
		move(y(6) x(0))
		putConstant(0 x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1485> 6)
		putConstant(1 x(0))
		inlineAssign(<M: ArgCounter> x(0) cache)
		createVariable(y(8))
		createVariable(y(9))
		testNumber(y(4) 0 248301)
		move(y(6) x(0))
		putConstant(nil x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		moveMoveYXYX(y(6) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
		branch(248463)
lbl(248301)	move(y(6) x(0))
		createVariableMove(y(10) x(1))
		genFastCall(<Q: 1486> 4)
		move(y(4) x(0))
		putConstant(1 x(3))
		testLT(x(3) x(0) x(1) 248341)
		inlineAt(reporter x(3) cache)
		move(y(10) x(0))
		putConstant('syntax error' x(1))
		putConstant('at most one $ in method head allowed' x(2))
		sendMsg(error x(3) [coord kind msg] cache)
lbl(248341)	inlineAt(<M: BA> x(3) cache)
		move(y(10) x(1))
		putConstant('Result' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(10))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(6) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1487> 6)
		move(y(4) x(0))
		putConstant(nil x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestMethFormals2> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		moveMoveYXYX(y(1) x(0) y(10) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: UnnestExpression> false 3) 0)
		moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(4) x(2) y(8) x(3))
		createVariableMove(y(1) x(4))
		genCall(gci(g(0) true <M: UnnestMethBody> false 5) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		moveMoveYXYX(y(2) x(2) y(9) x(3))
		genFastCall(<Q: 1489> 8)
lbl(248463)	inlineAt(switches x(2) cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 248529 248518)
lbl(248484)	move(y(5) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		move(x(1) y(1))
		testBool(y(1) 248529 248518)
lbl(248497)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(2) x(1) y(5) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(248529)
lbl(248518)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1834)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(248529)	inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(5) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 248585)
		move(g(1) x(0))
		inlineDot(x(0) method x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(9) x(2))
		move(y(2) x(3))
		sendMsg(init y(1) 4 cache)
		unify(y(1) y(3))
		branch(248624)
lbl(248585)	move(g(1) x(1))
		inlineDot(x(1) methodWithDesignator x(6) cache)
		callBI(newObject [x(6)]#[x(2)])
		moveMoveXYYX(x(2) y(1) y(0) x(0))
		moveMoveYXYX(y(8) x(1) y(7) x(2))
		moveMoveYXYX(y(5) x(3) y(9) x(4))
		move(y(2) x(5))
		sendMsg(init y(1) 6 cache)
		unify(y(1) y(3))
lbl(248624)	inlineAt(switches x(2) cache)
		putConstant(debuginfovarnames x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 248672 248674)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getAllVariables x(1) 1 cache)
		move(y(0) x(0))
		move(y(3) x(1))
		deAllocateL
		tailSendMsg(setAllVariables x(1) 1 cache)
lbl(248672)	deAllocateL
		return
lbl(248674)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1845)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(248088)
lbl(248687)	definition(x(8) 248722 pid('Unnester,UnnestMeth/slow' 1 pos('./compiler/Unnester.oz' 1798 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1519> 5)
		endDefinition(248687)
lbl(248722)	putRecord('#' [1 2 fast] x(30))
		setConstant(<M: UnnestMeth>)
		setValue(x(8))
		setValue(x(7))
lbl(248732)	definition(x(7) 248958 pid('Unnester,UnnestMethHead/fast' 5 pos('./compiler/Unnester.oz' 1849 6) nil 8) <Q: 1520> [y(3) y(0)])
		match(x(0) ht(248943 [onRecord(fAtom 2 248741) onRecord(fVar 2 248784) onRecord(fEscape 2 248812) onRecord(fRecord 2 248847) onRecord(fOpenRecord 2 248871)]))
lbl(248741)	allocateL4
		getVarVar(x(0) x(1))
		move(g(0) x(5))
		inlineDot(x(5) atomNode x(6) cache)
		callBI(newObject [x(6)]#[x(7)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(7) y(3))
		sendMsg(init y(3) 2 cache)
		unify(y(3) y(0))
		getLiteral(nil y(1))
		getLiteral(false y(2))
		deAllocateL4
		return
lbl(248784)	allocateL2
		getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248812)	allocateL2
		getVariable(x(5))
		getRecord(fVar 2 x(5))
		unifyVariable(x(0))
		unifyVariable(x(1))
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(3) y(0) x(4) y(1))
		sendMsg(refer x(5) 3 cache)
		getLiteral(nil y(0))
		getLiteral(false y(1))
		deAllocateL2
		return
lbl(248847)	allocateL3
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(3) y(1) x(4) y(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(1) y(0))
		getLiteral(false y(2))
		deAllocateL3
		return
lbl(248871)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYXY(x(3) y(4) x(4) y(5))
		move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(2) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 248920)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(6) x(1) y(2) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(3) 3 cache)
lbl(248920)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		createVariable(x(3))
		createVariable(x(4))
		genCall(gci(g(1) true <M: UnnestMethHead> false 5) 0)
		unify(y(4) y(1))
		getLiteral(true y(5))
		deAllocateL7
		return
lbl(248943)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1874)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(248732)
lbl(248958)	definition(x(8) 249011 pid('Unnester,UnnestMethHead/slow' 1 pos('./compiler/Unnester.oz' 1849 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1520> 11)
		endDefinition(248958)
lbl(249011)	putRecord('#' [1 2 fast] x(31))
		setConstant(<M: UnnestMethHead>)
		setValue(x(8))
		setValue(x(7))
lbl(249021)	definition(x(7) 249185 pid('Unnester,UnnestMethFormals1/fast' 2 pos('./compiler/Unnester.oz' 1876 6) nil 4) <Q: 1521> nil)
		getSelf(x(2))
lbl(249029)	definition(x(3) 249177 pid('' 1 pos('./compiler/Unnester.oz' 1880 3) nil 6) unit [x(2) x(1)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(249162 [onRecord(fMethArg 2 249043) onRecord(fMethColonArg 3 249082)]))
lbl(249043)	getVariable(x(0))
		match(x(0) ht(249069 [onRecord(fVar 2 249048) onRecord(fWildcard 1 249067) onRecord(fDollar 1 249068)]))
lbl(249048)	getVarVar(x(0) x(3))
		inlineAt(<M: BA> x(4) cache)
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(249067)	return
lbl(249068)	return
lbl(249069)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1886)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(249082)	allocateL1
		getVarVar(x(0) x(3))
		move(x(3) y(0))
		testRecord(x(0) fVar 2 249125)
lbl(249094)	getVoid(1)
		getVariable(x(4))
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(2)] 249125)
		inlineAt(<M: BA> x(5) cache)
		move(x(4) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generate x(5) 3 cache)
lbl(249125)	match(y(0) ht(249149 [onRecord(fVar 2 249128) onRecord(fWildcard 1 249145) onRecord(fDollar 1 249147)]))
lbl(249128)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		createVariable(x(2))
		deAllocateL1
		tailSendMsg(bind x(3) 3 cache)
lbl(249145)	deAllocateL1
		return
lbl(249147)	deAllocateL1
		return
lbl(249149)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1898)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249162)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(1899)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(249029)
lbl(249177)	move(x(3) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(249021)
lbl(249185)	definition(x(8) 249220 pid('Unnester,UnnestMethFormals1/slow' 1 pos('./compiler/Unnester.oz' 1876 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1521> 5)
		endDefinition(249185)
lbl(249220)	putRecord('#' [1 2 fast] x(32))
		setConstant(<M: UnnestMethFormals1>)
		setValue(x(8))
		setValue(x(7))
lbl(249230)	definition(x(7) 249288 pid('Unnester,UnnestMethFormals2/fast' 3 pos('./compiler/Unnester.oz' 1902 6) nil 4) <Q: 1522> [y(0)])
		match(x(0) ht(249273 [onScalar(nil 249239) onRecord('|' 2 249243)]))
lbl(249239)	getLiteral(nil x(2))
		return
lbl(249243)	allocateL4
		getVarVar(x(0) y(0))
		move(x(2) y(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genCall(gci(g(0) true <M: UnnestMethFormal> false 4) 0)
		getList(y(1))
		unifyValVar(y(2) x(2))
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL4
		genCall(gci(g(0) true <M: UnnestMethFormals2> true 3) 0)
lbl(249273)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1909)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(249230)
lbl(249288)	definition(x(8) 249329 pid('Unnester,UnnestMethFormals2/slow' 1 pos('./compiler/Unnester.oz' 1902 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1522> 7)
		endDefinition(249288)
lbl(249329)	putRecord('#' [1 2 fast] x(33))
		setConstant(<M: UnnestMethFormals2>)
		setValue(x(8))
		setValue(x(7))
lbl(249339)	definition(x(7) 249879 pid('Unnester,UnnestMethFormal/fast' 4 pos('./compiler/Unnester.oz' 1911 6) nil 8) <Q: 1523> [y(0) y(3)])
		allocateL9
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		createVariable(y(3))
		createVariable(y(4))
		createVariable(y(5))
		match(x(0) ht(249542 [onRecord(fMethArg 2 249363) onRecord(fMethColonArg 3 249461)]))
lbl(249363)	getVarVar(y(6) y(7))
		inlineAt(<M: ArgCounter> x(0) cache)
		getRecord(fInt 2 y(3))
		unifyValVar(x(0) x(4))
		moveMoveXYYX(x(0) y(8) y(6) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1429> 4)
		move(y(8) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ArgCounter> x(1) cache)
		match(y(6) ht(249443 [onRecord(fVar 2 249403) onRecord(fWildcard 1 249422)]))
lbl(249403)	getVarVar(x(0) x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		sendMsg(bind x(3) 3 cache)
		branch(249456)
lbl(249422)	getVariable(x(1))
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(3) 3 cache)
		branch(249456)
lbl(249443)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1920)
		setValue(y(6))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249456)	unify(y(5) y(7))
		branch(249555)
lbl(249461)	getVarVar(x(0) x(4))
		getVariable(x(5))
		unify(y(3) x(0))
		move(x(5) y(6))
		match(x(4) ht(249524 [onRecord(fVar 2 249475) onRecord(fWildcard 1 249500)]))
lbl(249475)	getVarVar(x(4) x(6))
		inlineAt(<M: BA> x(7) cache)
		move(x(4) x(0))
		move(x(6) x(1))
		move(y(4) x(2))
		sendMsg(bind x(7) 3 cache)
		branch(249537)
lbl(249500)	getVariable(x(4))
		inlineAt(<M: BA> x(6) cache)
		move(x(4) x(1))
		move(y(4) x(2))
		putConstant('Wildcard' x(0))
		sendMsg(generate x(6) 3 cache)
		branch(249537)
lbl(249524)	putRecord(kernel 3 x(6))
		setConstant(noElse)
		setConstant(1928)
		setValue(x(4))
		callBI('Exception.raiseError' [x(6)]#nil)
lbl(249537)	unify(y(5) y(6))
		branch(249555)
lbl(249542)	putRecord(kernel 3 x(4))
		setConstant(noElse)
		setConstant(1930)
		setValue(x(0))
		callBI('Exception.raiseError' [x(4)]#nil)
lbl(249555)	move(y(3) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: MakeLabelOrFeature> false 2) 0)
		createVariableMove(y(7) x(0))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(0) x(1))
		createVariableMove(y(8) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(8) 249630 249638)
		inlineAt(reporter x(0) cache)
		move(x(0) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(getCoord y(4) 1 cache)
		putRecord('#' 2 x(2))
		setConstant('argument variables in method head ')
		setConstant('must be distinct')
		move(y(8) x(0))
		putConstant('syntax error' x(1))
		sendMsg(error y(7) [coord kind msg] cache)
		unify(y(2) y(0))
		branch(249649)
lbl(249630)	getList(y(2))
		unifyValue(y(7))
		unifyValue(y(0))
		branch(249649)
lbl(249638)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1933)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249649)	match(y(5) ht(249864 [onScalar(fNoDefault 249652) onRecord(fDefault 2 249683)]))
lbl(249652)	move(g(1) x(0))
		inlineDot(x(0) methFormal x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		sendMsg(init y(0) 2 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249683)	getVarVar(x(0) x(1))
		testRecord(x(0) fWildcard 1 249725)
lbl(249691)	move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(false x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249725)	moveMoveXYXY(x(0) y(0) x(1) y(2))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1492> 4)
		testBool(y(5) 249784 249853)
		move(y(0) x(0))
		getSelf(x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1493> 6)
		move(g(1) x(0))
		inlineDot(x(0) methFormalWithDefault x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		moveMoveYXYX(y(4) x(1) y(2) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249784)	putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(2))
		sendMsg(getPrintName y(4) 1 cache)
		getRecord('#' 4 y(1))
		unifyVariable(y(1))
		unifyValue(y(3))
		unifyValVar(y(5) x(0))
		getRecord(fEq 3 x(0))
		unifyValue(y(5))
		unifyValue(y(0))
		unifyValue(y(2))
		move(g(1) x(0))
		inlineDot(x(0) methFormalOptional x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(6) x(0))
		move(y(4) x(1))
		putConstant(true x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(1))
		deAllocateL9
		return
lbl(249853)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1947)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(249864)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(1956)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249339)
lbl(249879)	definition(x(8) 249926 pid('Unnester,UnnestMethFormal/slow' 1 pos('./compiler/Unnester.oz' 1911 6) nil 5) unit nil)
		putConstant(4 x(4))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(4))
		inlineDot(x(0) 1 x(4) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		move(x(4) x(0))
		genFastCall(<Q: 1523> 9)
		endDefinition(249879)
lbl(249926)	putRecord('#' [1 2 fast] x(34))
		setConstant(<M: UnnestMethFormal>)
		setValue(x(8))
		setValue(x(7))
lbl(249936)	definition(x(7) 250228 pid('Unnester,UnnestMethBody/fast' 5 pos('./compiler/Unnester.oz' 1958 6) nil 6) <Q: 1524> [y(0)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		createVariable(y(5))
		testBI('IsDet' [x(0)]#[x(5)] 249988)
		getRecord(fVar 2 y(5))
		unifyVariable(x(5))
		unifyVariable(y(6))
		move(x(5) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(6) x(0))
		sendMsg(getCoord y(0) 1 cache)
lbl(249988)	putRecord('#' 2 x(3))
		setValue(y(3))
		setValue(y(4))
		getSelf(x(4))
lbl(249998)	definition(x(1) 250211 pid('' 3 pos('./compiler/Unnester.oz' 1964 3) nil 8) unit [x(4) y(0) y(5) g(0)])
		move(g(0) x(3))
		setSelf(x(3))
		shallowGuard(250198)
		getRecord('#' 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(250019)	shallowThen
		testRecord(x(0) '#' 4 250183)
lbl(250025)	allocateL8
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(2) y(4) x(4) y(5))
		moveMoveXYYX(x(5) y(6) y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		move(g(1) x(0))
		testBI('IsFree' [x(0)]#[x(1)] 250089)
		inlineAt(<M: BA> x(3) cache)
		move(y(7) x(1))
		move(g(1) x(2))
		putConstant('Message' x(0))
		sendMsg(generateForOuterScope x(3) 3 cache)
		getRecord(fVar 2 g(2))
		unifyVariable(x(0))
		unifyValue(y(7))
		sendMsg(getPrintName g(1) 1 cache)
lbl(250089)	putList(x(3))
		setValue(y(1))
		setConstant(nil)
		putList(x(2))
		setValue(g(2))
		setValue(x(3))
		putRecord(fOpApply 3 x(1))
		setConstant(hasFeature)
		setValue(x(2))
		setValue(y(7))
		putList(x(7))
		setValue(y(1))
		setConstant(nil)
		putList(x(6))
		setValue(g(2))
		setValue(x(7))
		putRecord(fOpApply 3 x(5))
		setConstant('.')
		setValue(x(6))
		setValue(y(7))
		putRecord(fEq 3 x(4))
		setValue(y(2))
		setValue(x(5))
		setValue(y(7))
		putRecord(fBoolCase 4 x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(y(3))
		setValue(y(7))
		createVariableMove(y(1) x(1))
		genCall(gci(g(3) true <M: UnnestStatement> false 2) 0)
		getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyValue(y(0))
		unifyValue(y(5))
		getList(x(1))
		unifyValue(y(1))
		unifyValue(y(6))
		deAllocateL8
		return
lbl(250183)	getRecord('#' 2 x(2))
		unifyVariable(x(1))
		unifyValue(x(5))
		getList(x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(250198)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(1964)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(249998)
lbl(250211)	putRecord('#' 2 x(2))
		setConstant(nil)
		setValue(y(2))
		move(y(1) x(0))
		deAllocateL7
		genFastCall(<P: 32> 9)
		endDefinition(249936)
lbl(250228)	definition(x(8) 250281 pid('Unnester,UnnestMethBody/slow' 1 pos('./compiler/Unnester.oz' 1958 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1524> 11)
		endDefinition(250228)
lbl(250281)	putRecord('#' [1 2 fast] x(35))
		setConstant(<M: UnnestMethBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250291)	definition(x(7) 250561 pid('Unnester,UnnestBoolGuard/fast' 6 pos('./compiler/Unnester.oz' 1981 6) nil 7) <Q: 1525> [y(0)])
		match(x(0) ht(250436 [onRecord(fOrElse 3 250300) onRecord(fAndThen 3 250368)]))
lbl(250300)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('FalseCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(9) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250368)	allocateL10
		getVarVar(y(0) x(0))
		getVariable(y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		createVariableMove(y(6) x(4))
		createVariableMove(y(7) x(5))
		genCall(gci(g(0) true <M: UnnestBoolGuard> false 6) 0)
		moveMoveYXYX(y(7) x(1) y(1) x(2))
		putConstant('TrueCase' x(0))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genCall(gci(g(0) true <M: MakeClauseBody> false 5) 0)
		getList(y(4))
		unifyValVar(y(6) x(0))
		getListValVar(x(0) y(8) x(4))
		moveMoveYXYX(y(0) x(0) y(9) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		move(y(5) x(5))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestBoolGuard> true 6) 0)
lbl(250436)	allocateL9
		inlineAt(<M: BA> x(6) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		moveMoveXYXY(x(4) y(4) x(5) y(5))
		sendMsg(openScope x(6) 0 cache)
		move(y(0) x(0))
		putConstant('BoolGuard' x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(0) x(0))
		createVariableMove(y(8) x(1))
		genFastCall(<Q: 1429> 4)
		getLiteral(nil y(4))
		putList(y(0))
		setValue(y(6))
		setVariable(y(4))
		createVariableMove(y(6) x(0))
		call(y(1) 1)
		createVariableMove(y(1) x(0))
		call(y(2) 1)
		inlineAt(<M: BA> x(5) cache)
		moveMoveYXYX(y(7) x(0) y(6) x(1))
		moveMoveYXYX(y(1) x(2) y(8) x(3))
		moveMoveYXYX(y(3) x(4) y(4) x(6))
		genFastCall(<Q: 1490> 14)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		moveMoveYXYX(y(8) x(2) y(5) x(3))
		deAllocateL9
		genFastCall(<Q: 1489> 9)
		endDefinition(250291)
lbl(250561)	definition(x(8) 250620 pid('Unnester,UnnestBoolGuard/slow' 1 pos('./compiler/Unnester.oz' 1981 6) nil 7) unit nil)
		putConstant(6 x(6))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(6))
		inlineDot(x(0) 1 x(6) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		inlineDot(x(0) 6 x(5) cache)
		move(x(6) x(0))
		genFastCall(<Q: 1525> 13)
		endDefinition(250561)
lbl(250620)	putRecord('#' [1 2 fast] x(36))
		setConstant(<M: UnnestBoolGuard>)
		setValue(x(8))
		setValue(x(7))
lbl(250630)	definition(x(7) 250791 pid('Unnester,MakeClauseBody/fast' 5 pos('./compiler/Unnester.oz' 2015 6) nil 7) <Q: 1526> [y(3)])
		allocateL8
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(5) 3 cache)
		move(g(0) x(0))
		inlineDot(x(0) clauseBody x(1) cache)
		moveMoveXYYX(x(1) y(5) y(1) x(0))
		createVariableMove(y(6) x(1))
		sendMsg(occ y(4) 2 cache)
		move(y(5) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(7) y(6) x(0))
		moveMoveYXYX(y(0) x(2) y(1) x(5))
		putConstant(nil x(1))
		putConstant(unit x(3))
		putConstant(nil x(4))
		sendMsg(init y(7) 6 cache)
		unify(y(7) y(2))
lbl(250721)	definition(x(0) 250784 pid('ApplyProc' 1 pos('./compiler/Unnester.oz' 2018 2) nil 4) unit [g(0) y(4) y(1)])
		allocateL4
		move(g(0) x(1))
		inlineDot(x(1) application x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(g(2) x(0))
		createVariableMove(y(2) x(1))
		sendMsg(occ g(1) 2 cache)
		move(y(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(2) x(0))
		move(g(2) x(2))
		putConstant(nil x(1))
		sendMsg(init y(3) 3 cache)
		unify(y(3) y(0))
		deAllocateL4
		return
		endDefinition(250721)
lbl(250784)	unify(x(0) y(3))
		deAllocateL8
		return
		endDefinition(250630)
lbl(250791)	definition(x(8) 250844 pid('Unnester,MakeClauseBody/slow' 1 pos('./compiler/Unnester.oz' 2015 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1526> 11)
		endDefinition(250791)
lbl(250844)	putRecord('#' [1 2 fast] x(37))
		setConstant(<M: MakeClauseBody>)
		setValue(x(8))
		setValue(x(7))
lbl(250854)	definition(x(7) 251289 pid('Unnester,UnnestCase/fast' 5 pos('./compiler/Unnester.oz' 2023 6) nil 9) <Q: 1527> [y(0) y(3)])
		allocateL10
		getList(x(1))
		unifyVariable(y(0))
		unifyVariable(x(1))
		moveMoveXYXY(x(0) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		move(x(1) y(5))
		testList(y(0) 251040)
lbl(250883)	getVarVar(x(5) x(6))
		shallowGuard(251040)
		getRecord(fCaseClause 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord(fVar 2 x(5))
		unifyVoid(1)
		unifyVariable(x(8))
		getLiteral(nil x(6))
lbl(250907)	shallowThen
		moveMoveXYXY(x(5) y(6) x(8) y(7))
		move(x(7) y(8))
		testLiteral(y(5) nil 250951)
lbl(250920)	callBI('Label' [x(2)]#[x(1)])
		testLiteral(x(1) fNoElse 250929)
		branch(250971)
lbl(250929)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring else clause following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
		branch(250971)
lbl(250951)	inlineAt(reporter x(3) cache)
		move(y(7) x(0))
		putConstant('expansion warning' x(1))
		putConstant('ignoring clauses following catch-all pattern' x(2))
		sendMsg(warn x(3) [coord kind msg] cache)
lbl(250971)	putRecord(fVar 2 y(0))
		setVariable(x(0))
		setVariable(y(2))
		sendMsg(getPrintName y(1) 1 cache)
		move(y(2) x(0))
		sendMsg(getCoord y(1) 1 cache)
		putRecord(fEq 3 x(1))
		setValue(y(6))
		setValue(y(0))
		setVariable(x(2))
		putRecord(fAnd 2 x(0))
		setValue(x(1))
		setValue(y(8))
		putRecord(fLocal 3 y(1))
		setValue(y(6))
		setValue(x(0))
		setValue(y(7))
		move(y(7) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(251040)	move(y(0) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestCaseClauses> false 2) 0)
		move(g(1) x(0))
		inlineDot(x(0) patternCase x(1) cache)
		moveMoveXYYX(x(1) y(0) y(3) x(0))
		createVariableMove(y(7) x(1))
		sendMsg(occ y(1) 2 cache)
		move(y(0) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(8) y(7) x(0))
		moveMoveYXYX(y(6) x(1) y(3) x(3))
		createVariableMove(y(9) x(2))
		sendMsg(init y(8) 4 cache)
		unify(y(8) y(4))
		match(y(5) ht(251274 [onScalar(nil 251103) onRecord('|' 2 251221)]))
lbl(251103)	testRecord(y(2) fNoElse 1 251136)
lbl(251108)	getVariable(x(0))
		move(g(1) x(1))
		inlineDot(x(1) noElse x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251136)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(1) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(2) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1489> 8)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(2) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251221)	move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1482> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		moveMoveYXYX(y(2) x(2) y(0) x(3))
		createVariableMove(y(3) x(4))
		genCall(gci(g(0) true <M: UnnestCase> false 5) 0)
		move(g(1) x(0))
		inlineDot(x(0) elseNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(0) y(3) x(0))
		sendMsg(init y(0) 1 cache)
		unify(y(0) y(9))
		deAllocateL10
		return
lbl(251274)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2057)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(250854)
lbl(251289)	definition(x(8) 251342 pid('Unnester,UnnestCase/slow' 1 pos('./compiler/Unnester.oz' 2023 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1527> 11)
		endDefinition(251289)
lbl(251342)	putRecord('#' [1 2 fast] x(38))
		setConstant(<M: UnnestCase>)
		setValue(x(8))
		setValue(x(7))
lbl(251352)	definition(x(7) 251712 pid('Unnester,UnnestCaseClauses/fast' 2 pos('./compiler/Unnester.oz' 2060 6) nil 7) <Q: 1528> [y(0) y(3)])
		match(x(0) ht(251697 [onScalar(nil 251361) onRecord('|' 2 251365)]))
lbl(251361)	getLiteral(nil x(1))
		return
lbl(251365)	allocateL8
		getVarVar(x(2) y(0))
		getRecord(fCaseClause 2 x(2))
		unifyVariable(y(1))
		unifyVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1494> 4)
		createVariable(y(5))
		testBool(y(4) 251614 251677)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(4) x(1))
		putConstant(nil x(2))
		genFastCall(<Q: 1432> 6)
		getSelf(x(3))
lbl(251419)	definition(x(1) 251484 pid('' 2 pos('./compiler/Unnester.oz' 2065 8) nil 6) unit [x(3)])
		move(g(0) x(2))
		setSelf(x(2))
		shallowGuard(251471)
		getRecord(fVar 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(251440)	shallowThen
		allocateL2
		inlineAt(<M: BA> x(5) cache)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(y(1) x(0))
		move(x(4) x(1))
		createVariable(x(2))
		sendMsg(bind x(5) 3 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(251471)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2065)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(251419)
lbl(251484)	move(y(4) x(0))
		createVariableMove(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(6) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		move(y(7) x(2))
		createVariableMove(y(1) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(2) x(0))
		sendMsg(closeScope x(1) 1 cache)
		getList(y(3))
		unifyVariable(y(3))
		unifyValue(y(5))
		move(g(1) x(0))
		inlineDot(x(0) patternClause x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(6) y(2) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(6) 3 cache)
		unify(y(6) y(3))
		branch(251688)
lbl(251614)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(2) y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(3))
		setConstant('only simple patterns in `case\' conditional ')
		setConstant(allowed)
		putRecord('#' 2 x(6))
		setConstant('to create a deep guard, use the ')
		setConstant('`cond\' conditional)')
		putRecord(hint [l m] x(5))
		setConstant('Hint')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		move(y(4) x(0))
		putConstant('syntax error' x(2))
		sendMsg(error y(2) [coord items kind msg] cache)
		unify(y(3) y(5))
		branch(251688)
lbl(251677)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2062)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251688)	moveMoveYXYX(y(0) x(0) y(5) x(1))
		deAllocateL8
		genCall(gci(g(0) true <M: UnnestCaseClauses> true 2) 0)
lbl(251697)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2089)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251352)
lbl(251712)	definition(x(8) 251747 pid('Unnester,UnnestCaseClauses/slow' 1 pos('./compiler/Unnester.oz' 2060 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1528> 5)
		endDefinition(251712)
lbl(251747)	putRecord('#' [1 2 fast] x(39))
		setConstant(<M: UnnestCaseClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(251757)	definition(x(7) 252330 pid('Unnester,TranslatePattern/fast' 3 pos('./compiler/Unnester.oz' 2091 6) nil 6) <Q: 1529> [y(0) y(3) g(11) g(12)])
		match(x(0) ht(252315 [onRecord(fEq 3 251766) onRecord(fAtom 2 251962) onRecord(fVar 2 251994) onRecord(fWildcard 1 252076) onRecord(fEscape 2 252126) onRecord(fInt 2 252215) onRecord(fFloat 2 252247) onRecord(fRecord 2 252279) onRecord(fOpenRecord 2 252297)]))
lbl(251766)	allocateL6
		getVarVar(x(0) y(0))
		match(x(0) ht(251858 [onRecord(fVar 2 251773) onRecord(fWildcard 1 251851)]))
lbl(251773)	getVarVar(x(0) y(1))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(1) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(3) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(0) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(1) x(2))
		sendMsg(init y(0) 3 cache)
		unify(y(0) y(3))
		deAllocateL6
		return
lbl(251851)	move(y(0) x(0))
		deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(251858)	match(y(0) ht(251949 [onRecord(fVar 2 251861) onRecord(fWildcard 1 251945)]))
lbl(251861)	getVarVar(x(3) y(0))
		inlineAt(<M: BA> x(4) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		move(x(3) x(0))
		move(y(0) x(1))
		createVariableMove(y(4) x(2))
		sendMsg(refer x(4) 3 cache)
		createVariableMove(y(5) x(0))
		sendMsg(makeIntoPatternVariableOccurrence y(4) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		move(g(1) x(0))
		inlineDot(x(0) equationPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(5) x(0))
		moveMoveYXYX(y(4) x(1) y(0) x(2))
		sendMsg(init y(1) 3 cache)
		unify(y(1) y(2))
		deAllocateL6
		return
lbl(251945)	deAllocateL6
		genCall(gci(g(0) true <M: TranslatePattern> true 3) 0)
lbl(251949)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2108)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(251962)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) atomNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(251994)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252045 252065)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252045)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252065)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2112)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252076)	allocateL4
		getVariable(y(0))
		inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(2) y(1) y(0) x(1))
		putConstant('Wildcard' x(0))
		createVariableMove(y(2) x(2))
		sendMsg(generate x(3) 3 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		sendMsg(occ y(2) 2 cache)
		move(y(1) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252126)	allocateL4
		getVariable(x(3))
		getRecord(fVar 2 x(3))
		unifyVariable(y(0))
		unifyVariable(y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(3) 252184 252204)
		inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		sendMsg(refer x(3) 3 cache)
		move(y(2) x(0))
		move(y(3) x(1))
		deAllocateL4
		tailSendMsg(makeIntoPatternVariableOccurrence x(1) 1 cache)
lbl(252184)	inlineAt(<M: BA> x(3) cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL4
		tailSendMsg(refer x(3) 3 cache)
lbl(252204)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2122)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(252215)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) intNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252247)	allocateL2
		getVarVar(x(0) x(1))
		move(g(1) x(3))
		inlineDot(x(3) floatNode x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(2) y(0) x(5) y(1))
		sendMsg(init y(1) 2 cache)
		unify(y(1) y(0))
		deAllocateL2
		return
lbl(252279)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(2) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252297)	getVarVar(x(0) x(5))
		move(x(1) x(3))
		move(x(5) x(1))
		move(x(2) x(4))
		move(g(3) x(2))
		genCall(gci(g(0) true <M: TranslateRecord> true 5) 0)
lbl(252315)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2136)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(251757)
lbl(252330)	definition(x(8) 252371 pid('Unnester,TranslatePattern/slow' 1 pos('./compiler/Unnester.oz' 2091 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1529> 7)
		endDefinition(252330)
lbl(252371)	putRecord('#' [1 2 fast] x(40))
		setConstant(<M: TranslatePattern>)
		setValue(x(8))
		setValue(x(7))
lbl(252381)	definition(x(7) 252531 pid('Unnester,TranslateRecord/fast' 5 pos('./compiler/Unnester.oz' 2138 6) nil 5) <Q: 1530> [y(0) y(3)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(y(2) x(1))
		createVariableMove(y(4) x(2))
		genCall(gci(g(0) true <M: TranslatePattern> false 3) 0)
		getSelf(x(3))
lbl(252409)	definition(x(1) 252470 pid('' 2 pos('./compiler/Unnester.oz' 2143 4) nil 4) unit [x(3) y(2) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		testRecord(x(0) fColon 2 252459)
lbl(252425)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(y(1))
		move(g(1) x(1))
		move(x(3) x(2))
		genCall(gci(g(2) true <M: TranslatePattern> false 3) 0)
		move(y(0) x(0))
		move(g(1) x(1))
		move(y(1) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
lbl(252459)	move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(2) true <M: TranslatePattern> true 3) 0)
		endDefinition(252409)
lbl(252470)	move(y(0) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		createVariable(x(2))
		move(y(2) x(0))
		move(x(2) x(3))
		createVariableMove(y(0) x(1))
		putConstant(nil x(4))
		genFastCall(<Q: 1491> 10)
		move(g(1) x(0))
		inlineDot(x(0) recordPattern x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		moveMoveXYYX(x(1) y(2) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		sendMsg(init y(2) 3 cache)
		unify(y(2) y(3))
		deAllocateL5
		return
		endDefinition(252381)
lbl(252531)	definition(x(8) 252584 pid('Unnester,TranslateRecord/slow' 1 pos('./compiler/Unnester.oz' 2138 6) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1530> 11)
		endDefinition(252531)
lbl(252584)	putRecord('#' [1 2 fast] x(41))
		setConstant(<M: TranslateRecord>)
		setValue(x(8))
		setValue(x(7))
lbl(252594)	definition(x(7) 253338 pid('Unnester,UnnestTry/fast' 2 pos('./compiler/Unnester.oz' 2155 6) nil 9) <Q: 1531> [y(0) y(3)])
		allocateL10
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testRecord(y(0) fTry 4 252679)
lbl(252611)	getVarVar(x(2) x(3))
		getVarVar(x(4) x(5))
		shallowGuard(252679)
		getLiteral(fNoCatch x(3))
		getLiteral(fNoFinally x(4))
lbl(252625)	shallowThen
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(2) y(0) x(5) y(2))
		sendMsg(openScope x(0) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		moveMoveYXYX(y(2) x(2) y(1) x(3))
		deAllocateL10
		genFastCall(<Q: 1489> 9)
lbl(252679)	testRecord(y(0) fTry 4 252956)
lbl(252684)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(1) fNoCatch 252956)
		moveMoveXYXY(x(0) y(0) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1482> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('ReRaise' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(6))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(5) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(7))
		setVariable(x(0))
		setValue(y(3))
		sendMsg(getPrintName y(5) 1 cache)
		putRecord(fAtom 2 x(0))
		setConstant(ex)
		setValue(y(3))
		putList(x(1))
		setValue(y(7))
		setConstant(nil)
		putRecord(fRecord 2 x(2))
		setValue(x(0))
		setValue(x(1))
		putRecord(fVar 2 x(4))
		setConstant('`unit`')
		setValue(y(3))
		putRecord(fEq 3 x(3))
		setValue(y(6))
		setValue(x(4))
		setValue(y(4))
		putRecord(fAnd 2 x(1))
		setValue(y(0))
		setValue(x(3))
		putRecord(fEq 3 x(8))
		setValue(y(6))
		setValue(x(2))
		setValue(y(4))
		putRecord(fCaseClause 2 x(7))
		setValue(y(7))
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putRecord(fCatch 2 x(5))
		setValue(x(6))
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setValue(x(5))
		setConstant(fNoFinally)
		setValue(y(3))
		putList(x(6))
		setValue(y(7))
		setConstant(nil)
		putRecord(fOpApplyStatement 3 x(5))
		setConstant('Raise')
		setValue(x(6))
		setValue(y(4))
		putRecord(fCaseClause 2 x(4))
		setValue(x(2))
		setValue(x(5))
		putList(x(3))
		setValue(x(4))
		setConstant(nil)
		putList(x(1))
		setValue(x(3))
		setConstant(nil)
		putRecord(fSkip 1 x(7))
		setValue(y(4))
		putRecord(fCase 4 y(0))
		setValue(y(6))
		setValue(x(1))
		setValue(x(7))
		setValue(y(4))
		getList(y(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(y(1))
		unifyVariable(y(3))
		genCall(gci(g(0) true <M: UnnestTry> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestStatement> true 2) 0)
lbl(252956)	testRecord(y(0) fTry 4 253272)
lbl(252961)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		shallowGuard(253272)
		getRecord(fCatch 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getLiteral(fNoFinally x(2))
lbl(252980)	shallowThen
		inlineAt(<M: BA> x(2) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(2))
		moveMoveXYXY(x(4) y(3) x(3) y(4))
		sendMsg(openScope x(2) 0 cache)
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(5) x(1))
		move(y(4) x(2))
		createVariableMove(y(6) x(3))
		genFastCall(<Q: 1489> 8)
		inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		inlineAt(<M: BA> x(3) cache)
		move(y(4) x(1))
		putConstant('Exception' x(0))
		createVariableMove(y(0) x(2))
		sendMsg(generate x(3) 3 cache)
		putRecord(fVar 2 y(5))
		setVariable(x(0))
		setValue(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		createVariable(y(7))
		testList(y(2) 253117)
lbl(253089)	getVarVar(x(0) x(1))
		shallowGuard(253117)
		getRecord(fCaseClause 2 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord(fVar 2 x(0))
		unifyVoid(2)
		getLiteral(nil x(1))
lbl(253111)	shallowThen
		getLiteral(fNoElse y(7))
		branch(253133)
lbl(253117)	getRecord(fOpApplyStatement 3 y(7))
		unifyLiteral('Raise')
		unifyVariable(x(0))
		unifyValue(y(3))
		getList(x(0))
		unifyValue(y(5))
		unifyLiteral(nil)
lbl(253133)	putRecord('#' 2 x(0))
		setValue(y(4))
		setValue(y(3))
		createVariable(y(8))
		testRecord(x(0) '#' 2 253196)
lbl(253148)	getVarVar(x(0) x(1))
		createVariable(y(9))
		shallowGuard(253196)
		getRecord('pos' 6 x(0))
		unifyVoid(3)
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(253177)	shallowThen
		getRecord('pos' 6 y(8))
		unifyValue(x(4))
		unifyValue(x(5))
		unifyValue(x(6))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		branch(253199)
lbl(253196)	unify(y(8) y(3))
lbl(253199)	putList(x(1))
		setValue(y(2))
		setConstant(nil)
		putRecord(fCase 4 x(0))
		setValue(y(5))
		setValue(x(1))
		setValue(y(7))
		setValue(y(8))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariable(x(0))
		sendMsg(closeScope x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) tryNode x(4) cache)
		callBI(newObject [x(4)]#[x(1)])
		moveMoveXYYX(x(1) y(3) y(6) x(0))
		moveMoveYXYX(y(0) x(1) y(2) x(2))
		move(y(4) x(3))
		sendMsg(init y(3) 4 cache)
		unify(y(3) y(1))
		deAllocateL10
		return
lbl(253272)	testRecord(y(0) fTry 4 253323)
lbl(253277)	getVarVar(y(0) y(2))
		getVarVar(y(3) y(4))
		move(y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1482> 4)
		putRecord(fTry 4 x(1))
		setValue(y(0))
		setValue(y(2))
		setConstant(fNoFinally)
		setValue(y(4))
		putRecord(fTry 4 x(0))
		setValue(x(1))
		setConstant(fNoCatch)
		setValue(y(3))
		setValue(y(5))
		move(y(1) x(1))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestTry> true 2) 0)
lbl(253323)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2206)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(252594)
lbl(253338)	definition(x(8) 253373 pid('Unnester,UnnestTry/slow' 1 pos('./compiler/Unnester.oz' 2155 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1531> 5)
		endDefinition(253338)
lbl(253373)	putRecord('#' [1 2 fast] x(42))
		setConstant(<M: UnnestTry>)
		setValue(x(8))
		setValue(x(7))
lbl(253383)	definition(x(7) 253785 pid('Unnester,UnnestClauses/fast' 3 pos('./compiler/Unnester.oz' 2209 6) nil 5) <Q: 1532> [y(0) y(3)])
		match(x(0) ht(253770 [onScalar(nil 253392) onRecord('|' 2 253396)]))
lbl(253392)	getLiteral(nil x(2))
		return
lbl(253396)	allocateL10
		getVarVar(x(0) y(0))
		getRecord(fClause 3 x(0))
		unifyVariable(y(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		inlineAt(<M: BA> x(0) cache)
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		sendMsg(openScope x(0) 0 cache)
		move(y(1) x(0))
		createVariableMove(y(6) x(1))
		putConstant(nil x(2))
		createVariableMove(y(7) x(3))
		genFastCall(<Q: 1488> 8)
		getSelf(x(2))
lbl(253443)	definition(x(1) 253497 pid('' 1 pos('./compiler/Unnester.oz' 2216 6) nil 5) unit [x(2)])
		move(g(0) x(1))
		setSelf(x(1))
		shallowGuard(253484)
		getRecord(fVar 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(253464)	shallowThen
		inlineAt(<M: BA> x(4) cache)
		move(x(2) x(0))
		move(x(3) x(1))
		createVariable(x(2))
		tailSendMsg(bind x(4) 3 cache)
lbl(253484)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(2216)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(253443)
lbl(253497)	move(y(6) x(0))
		genFastCall(<P: 34> 4)
		putList(y(1))
		setVariable(x(1))
		setVariable(y(6))
		move(y(7) x(0))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		moveMoveYXYX(y(2) x(0) y(6) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		createVariable(y(2))
		createVariable(y(6))
		match(y(3) ht(253630 [onRecord(fSkip 1 253530) onRecord(fNoThen 1 253599)]))
lbl(253530)	getVariable(x(0))
		move(x(0) y(3))
		match(y(4) ht(253558 [onScalar(fif 253538) onScalar(for 253543) onScalar(fdis 253548) onScalar(fchoice 253553)]))
lbl(253538)	getLiteral('ask' y(2))
		branch(253571)
lbl(253543)	getLiteral('waitTop' y(2))
		branch(253571)
lbl(253548)	getLiteral('waitTop' y(2))
		branch(253571)
lbl(253553)	getLiteral('wait' y(2))
		branch(253571)
lbl(253558)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2224)
		setValue(y(4))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(253571)	move(g(1) x(0))
		inlineDot(x(0) skipNode x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYYX(x(2) y(7) y(3) x(0))
		sendMsg(init y(7) 1 cache)
		unify(y(7) y(6))
		branch(253698)
lbl(253599)	getVariable(x(0))
		getLiteral('waitTop' y(2))
		move(g(1) x(1))
		inlineDot(x(1) skipNode x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		move(x(3) y(3))
		sendMsg(init y(3) 1 cache)
		unify(y(3) y(6))
		branch(253698)
lbl(253630)	move(y(3) x(0))
		createVariableMove(y(7) x(1))
		genFastCall(<Q: 1429> 4)
		testLiteral(y(4) fif 253648)
lbl(253643)	getLiteral('ask' y(2))
		branch(253651)
lbl(253648)	getLiteral('wait' y(2))
lbl(253651)	inlineAt(<M: BA> x(0) cache)
		sendMsg(openScope x(0) 0 cache)
		move(y(3) x(0))
		createVariableMove(y(8) x(1))
		genCall(gci(g(0) true <M: UnnestStatement> false 2) 0)
		inlineAt(<M: BA> x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(closeScope x(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(8) x(1))
		moveMoveYXYX(y(7) x(2) y(6) x(3))
		genFastCall(<Q: 1489> 8)
lbl(253698)	getList(y(5))
		unifyVariable(y(3))
		unifyVariable(y(5))
		move(g(1) x(0))
		inlineDot(x(0) 'clause' x(1) cache)
		inlineAt(<M: BA> x(2) cache)
		move(x(1) y(7))
		createVariableMove(y(8) x(0))
		sendMsg(closeScope x(2) 1 cache)
		move(y(7) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(9) y(8) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		move(y(6) x(3))
		sendMsg(init y(9) 4 cache)
		unify(y(9) y(3))
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(5) x(2))
		deAllocateL10
		genCall(gci(g(0) true <M: UnnestClauses> true 3) 0)
lbl(253770)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2240)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(253383)
lbl(253785)	definition(x(8) 253826 pid('Unnester,UnnestClauses/slow' 1 pos('./compiler/Unnester.oz' 2209 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1532> 7)
		endDefinition(253785)
lbl(253826)	putRecord('#' [1 2 fast] x(43))
		setConstant(<M: UnnestClauses>)
		setValue(x(8))
		setValue(x(7))
lbl(253836)	definition(x(7) 254099 pid('Unnester,UnnestFDExpression/fast' 3 pos('./compiler/Unnester.oz' 2243 6) nil 6) <Q: 1533> [y(0)])
		match(x(0) ht(254036 [onRecord(fOpApply 3 253845) onRecord(fVar 2 254022) onRecord(fInt 2 254029)]))
lbl(253845)	allocateL9
		getVarVar(x(3) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(y(2) '+' 253928)
lbl(253868)	getList(y(3))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(1))
		unifyVariable(y(3))
		unifyLiteral(nil)
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		move(y(3) x(0))
		createVariableMove(y(7) x(1))
		createVariableMove(y(8) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getList(y(0))
		unifyValue(y(5))
		unifyValue(y(7))
		getRecord(fOpApply 3 y(1))
		unifyValVar(y(2) x(0))
		unifyValue(y(4))
		getListValVar(x(0) y(6) x(1))
		getList(x(1))
		unifyValue(y(8))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(253928)	testLiteral(y(2) '-' 253934)
		branch(253868)
lbl(253934)	testLiteral(y(2) '*' 253940)
		branch(253868)
lbl(253940)	testLiteral(y(2) '~' 253974)
		getList(y(3))
		unifyVariable(x(0))
		unifyLiteral(nil)
		createVariableMove(y(2) x(2))
		genCall(gci(g(0) true <M: UnnestFDExpression> false 3) 0)
		getRecord(fOpApply 3 y(1))
		unifyLiteral('~')
		unifyVariable(x(0))
		unifyValue(y(4))
		getList(x(0))
		unifyValue(y(2))
		unifyLiteral(nil)
		deAllocateL9
		return
lbl(253974)	inlineAt(<M: BA> x(3) cache)
		moveMoveXYYX(x(0) y(2) y(4) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(3) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(4))
		sendMsg(getPrintName y(3) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(0) x(2))
		deAllocateL9
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
lbl(254022)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254029)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(254036)	allocateL5
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1429> 4)
		inlineAt(<M: BA> x(3) cache)
		move(y(3) x(1))
		putConstant('UnnestFD' x(0))
		createVariableMove(y(4) x(2))
		sendMsg(generate x(3) 3 cache)
		getRecord(fVar 2 y(2))
		unifyVariable(x(0))
		unifyValue(y(3))
		sendMsg(getPrintName y(4) 1 cache)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genCall(gci(g(0) true <M: UnnestExpression> true 3) 0)
		endDefinition(253836)
lbl(254099)	definition(x(8) 254140 pid('Unnester,UnnestFDExpression/slow' 1 pos('./compiler/Unnester.oz' 2243 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1533> 7)
		endDefinition(254099)
lbl(254140)	putRecord('#' [1 2 fast] x(44))
		setConstant(<M: UnnestFDExpression>)
		setValue(x(8))
		setValue(x(7))
lbl(254150)	definition(x(7) 254339 pid('Unnester,UnnestFDList/fast' 3 pos('./compiler/Unnester.oz' 2274 6) nil 7) <Q: 1534> [y(0)])
		allocateL8
		move(x(0) y(0))
		match(y(0) ht(254283 [onRecord(fRecord 2 254163) onRecord(fAtom 2 254323)]))
lbl(254163)	getVarVar(x(3) x(4))
		shallowGuard(254283)
		getRecord(fAtom 2 x(3))
		unifyLiteral('|')
		unifyVoid(1)
		getList(x(4))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyVariable(x(6))
		unifyLiteral(nil)
lbl(254188)	shallowThen
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(6) y(3))
		move(x(4) x(0))
		putConstant('UnnestFDList' x(1))
		createVariableMove(y(4) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(0) true <M: UnnestToVar> false 4) 0)
		move(y(3) x(0))
		createVariableMove(y(6) x(1))
		createVariableMove(y(7) x(2))
		genCall(gci(g(0) true <M: UnnestFDList> false 3) 0)
		getList(y(0))
		unifyValue(y(4))
		unifyValue(y(6))
		createVariableMove(y(0) x(0))
		sendMsg('getVariable' y(5) 1 cache)
		putRecord(fVar 2 y(3))
		setVariable(x(0))
		setVariable(y(4))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(4) x(0))
		sendMsg(getCoord y(0) 1 cache)
		getRecord(fRecord 2 y(1))
		unifyValVar(y(2) x(0))
		getListValVar(x(0) y(3) x(1))
		getList(x(1))
		unifyValue(y(7))
		unifyLiteral(nil)
		deAllocateL8
		return
lbl(254283)	inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1429> 4)
		putRecord('#' 2 x(2))
		setConstant('explicitly given list of variables expected')
		setConstant('as first argument to `:::\' in a condis clause')
		move(y(2) x(0))
		putConstant('syntax error' x(1))
		move(y(1) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [coord kind msg] cache)
lbl(254323)	getVariable(x(3))
		testLiteral(x(3) nil 254283)
		getLiteral(nil x(1))
		unify(x(2) y(0))
		deAllocateL8
		return
		endDefinition(254150)
lbl(254339)	definition(x(8) 254380 pid('Unnester,UnnestFDList/slow' 1 pos('./compiler/Unnester.oz' 2274 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1534> 7)
		endDefinition(254339)
lbl(254380)	putRecord('#' [1 2 fast] x(45))
		setConstant(<M: UnnestFDList>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 37 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setValue(x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		setValue(x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		setValue(x(43))
		setValue(x(44))
		setValue(x(45))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant(nil x(4))
		putConstant('Unnester' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(254486)	definition(x(0) 254517 pid('IsDirective' 2 pos('./compiler/Unnester.oz' 2296 3) nil 2) <Q: 1535> nil)
		match(x(0) ht(254511 [onScalar(dirLocalSwitches 254495) onScalar(dirPushSwitches 254499) onScalar(dirPopSwitches 254503) onRecord(dirSwitch 1 254507)]))
lbl(254495)	getLiteral(true x(1))
		return
lbl(254499)	getLiteral(true x(1))
		return
lbl(254503)	getLiteral(true x(1))
		return
lbl(254507)	getLiteral(true x(1))
		return
lbl(254511)	getLiteral(false x(1))
		return
		endDefinition(254486)
lbl(254517)	definition(x(1) 254580 pid('VariableMember' 3 pos('./compiler/Unnester.oz' 2306 6) nil 7) <Q: 1536> nil)
		allocateL1
		move(x(1) y(0))
		match(y(0) ht(254565 [onScalar(nil 254530) onRecord('|' 2 254535)]))
lbl(254530)	getLiteral(false x(2))
		deAllocateL1
		return
lbl(254535)	getVarVar(x(3) x(4))
		shallowGuard(254565)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254548)	shallowThen
		testBI('==' [x(0) x(5)]#[x(1)] 254558)
		getLiteral(true x(2))
		deAllocateL1
		return
lbl(254558)	move(x(4) x(1))
		deAllocateL1
		genFastCall(<Q: 1536> 7)
lbl(254565)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2310)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254517)
lbl(254580)	definition(x(1) 254679 pid('AreDisjointVariableLists' 3 pos('./compiler/Unnester.oz' 2313 6) nil 7) <Q: 1537> nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		testList(y(0) 254655)
lbl(254595)	getVarVar(x(3) x(4))
		shallowGuard(254655)
		getRecord(fVar 2 x(3))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(254608)	shallowThen
		moveMoveXYXY(x(1) y(0) x(4) y(2))
		move(x(5) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1536> 6)
		testBool(y(3) 254632 254644)
		getLiteral(false y(1))
		deAllocateL4
		return
lbl(254632)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL4
		genFastCall(<Q: 1537> 7)
lbl(254644)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2315)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254655)	testLiteral(y(0) nil 254664)
lbl(254659)	getLiteral(true y(1))
		deAllocateL4
		return
lbl(254664)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(2319)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(254580)
lbl(254679)	definition(x(1) 254978 pid('JoinQueriesSub' 2 pos('./compiler/Unnester.oz' 2322 6) nil 6) <Q: 1538> nil)
		allocateL(12)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 254971)
lbl(254695)	getVarVar(x(2) x(3))
		shallowGuard(254971)
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(254706)	shallowThen
		moveMoveXYXY(x(2) y(0) x(3) y(2))
		moveMoveXYXY(x(4) y(3) x(5) y(4))
		move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 254742 254960)
		getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254742)	testRecord(y(0) fDeclare 3 254948)
lbl(254747)	getVarVar(x(0) y(5))
		getVariable(y(6))
		testRecord(y(3) fDeclare 3 254914)
lbl(254757)	getVarVar(y(3) y(7))
		createVariableMove(y(8) x(1))
		putConstant(nil x(2))
		createVariableMove(y(9) x(3))
		genFastCall(<Q: 1488> 8)
		move(y(3) x(0))
		createVariableMove(y(10) x(1))
		putConstant(nil x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<Q: 1488> 8)
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1537> 6)
		testBool(y(3) 254891 254903)
		putRecord(fAnd 2 x(2))
		setValue(y(11))
		setValue(y(7))
		putRecord(fAnd 2 x(1))
		setValue(y(5))
		setValue(x(2))
		putRecord(fAnd 2 x(0))
		setValue(y(9))
		setValue(x(1))
		putRecord(fDeclare 3 y(0))
		setVariable(y(2))
		setValue(x(0))
		setValue(y(6))
		moveMoveYXYX(y(8) x(0) y(10) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 21> 6)
lbl(254847)	definition(x(1) 254864 pid('' 3 pos('./compiler/Unnester.oz' 2333 6) nil 3) unit nil)
		getRecord(fAnd 2 x(2))
		unifyValue(x(0))
		unifyValue(x(1))
		return
		endDefinition(254847)
lbl(254864)	putRecord(fSkip 1 x(2))
		setValue(y(6))
		moveMoveYXYX(y(3) x(0) y(2) x(3))
		genFastCall(<P: 32> 8)
		putList(x(0))
		setValue(y(0))
		setValue(y(4))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254891)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254903)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2331)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254914)	putRecord(fAnd 2 x(3))
		setValue(y(5))
		setValue(y(3))
		putRecord(fDeclare 3 x(1))
		setValue(x(0))
		setValue(x(3))
		setValue(y(6))
		putList(x(2))
		setValue(x(1))
		setValue(y(4))
		move(x(2) x(0))
		move(y(1) x(1))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254948)	getList(y(1))
		unifyValVar(y(0) x(1))
		move(y(2) x(0))
		deAllocateL
		genFastCall(<Q: 1538> 5)
lbl(254960)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2324)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(254971)	unify(y(1) y(0))
		deAllocateL
		return
		endDefinition(254679)
lbl(254978)	definition(x(1) 255110 pid('JoinQueries' 3 pos('./compiler/Unnester.oz' 2353 6) nil 5) <Q: 1539> [g(15) x(0)])
		allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(g(1) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		move(y(3) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1538> 4)
		testList(y(4) 255058)
lbl(255014)	getVarVar(x(0) x(1))
		shallowGuard(255058)
		getRecord(fDeclare 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(255032)	shallowThen
		putRecord(fLocal 3 x(4))
		setValue(x(0))
		setValue(x(2))
		setValue(x(3))
		putList(x(1))
		setValue(x(4))
		setConstant(nil)
		moveMoveYXYX(y(2) x(0) y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255058)	match(y(4) ht(255086 [onScalar(nil 255061) onRecord('|' 2 255066)]))
lbl(255061)	unify(y(1) y(2))
		deAllocateL5
		return
lbl(255066)	getVoid(1)
		getVariable(x(0))
		testLiteral(x(0) nil 255086)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(255086)	putRecord('#' 2 x(1))
		setConstant('Ozma only supports at most one query ')
		setConstant('per input')
		putConstant('expansion error' x(0))
		sendMsg(error y(0) [kind msg] cache)
		unify(y(2) y(1))
		deAllocateL5
		return
		endDefinition(254978)
lbl(255110)	definition(x(0) 255299 pid('MakeExpressionQuerySub' 3 pos('./compiler/Unnester.oz' 2372 6) nil 6) <Q: 1540> nil)
		match(x(0) ht(255284 [onScalar(nil 255119) onRecord('|' 2 255126)]))
lbl(255119)	getLiteral(nil x(1))
		getLiteral(false x(2))
		return
lbl(255126)	allocateL7
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(0) y(2) x(1) y(3))
		moveMoveXYYX(x(2) y(4) y(1) x(0))
		createVariableMove(y(5) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1540> 6)
		testBool(y(6) 255164 255273)
		getList(y(3))
		unifyValue(y(0))
		unifyValue(y(5))
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255164)	move(y(0) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1535> 4)
		testBool(y(5) 255185 255262)
		unify(y(3) y(2))
		getLiteral(false y(4))
		deAllocateL7
		return
lbl(255185)	testRecord(y(0) fDeclare 3 255233)
lbl(255190)	getVarVar(x(0) x(1))
		getVariable(x(2))
		getList(y(3))
		unifyVariable(x(3))
		unifyValue(y(1))
		getRecord(fDeclare 3 x(3))
		unifyValVar(x(0) x(4))
		unifyValue(x(2))
		getRecord(fEq 3 x(4))
		unifyVariable(x(5))
		unifyValue(x(1))
		unifyLiteral(unit)
		getRecord(fVar 2 x(5))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255233)	getList(y(3))
		unifyVariable(x(0))
		unifyValue(y(1))
		getRecord(fEq 3 x(0))
		unifyVariable(x(1))
		unifyValue(y(0))
		unifyLiteral(unit)
		getRecord(fVar 2 x(1))
		unifyLiteral('`result`')
		unifyLiteral(unit)
		getLiteral(true y(4))
		deAllocateL7
		return
lbl(255262)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2378)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255273)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2375)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(255284)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2395)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255110)
lbl(255299)	definition(x(0) 255312 pid('MakeExpressionQuery' 2 pos('./compiler/Unnester.oz' 2398 6) nil 3) <Q: 1541> nil)
		createVariable(x(2))
		genFastCall(<Q: 1540> 7)
		endDefinition(255299)
lbl(255312)	definition(x(2) 255367 pid('VsToFAnd' 2 pos('./compiler/Unnester.oz' 2404 6) nil 3) <Q: 1542> nil)
		match(x(0) ht(255352 [onScalar(nil 255321) onRecord('|' 2 255328)]))
lbl(255321)	getRecord(fSkip 1 x(1))
		unifyLiteral(unit)
		return
lbl(255328)	getVarVar(x(0) x(2))
		testLiteral(x(2) nil 255339)
lbl(255335)	unify(x(1) x(0))
		return
lbl(255339)	getRecord(fAnd 2 x(1))
		unifyValVar(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1542> 5)
lbl(255352)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2410)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255312)
lbl(255367)	definition(x(2) 255393 pid('FS' 2 pos('./compiler/Unnester.oz' 2413 6) nil 4) <Q: 1543> nil)
		testLiteral(x(0) unit 255381)
lbl(255377)	getLiteral(unit x(1))
		return
lbl(255381)	putConstant(fineStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255367)
lbl(255393)	definition(x(2) 255419 pid('CS' 2 pos('./compiler/Unnester.oz' 2417 6) nil 4) <Q: 1544> nil)
		testLiteral(x(0) unit 255407)
lbl(255403)	getLiteral(unit x(1))
		return
lbl(255407)	putConstant(coarseStep x(2))
		callBI('Adjoin' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(255393)
lbl(255419)	createVariable(x(2))
		createVariable(x(3))
lbl(255423)	definition(x(4) 256985 pid('NP' 2 pos('./compiler/Unnester.oz' 2421 6) nil 4) <Q: 1545> [x(2) x(3)])
		match(x(0) ht(256970 [onScalar(fNoCatch 255432) onRecord(fDeclare 3 255436) onRecord(fAnd 2 255464) onRecord(fEq 3 255488) onRecord(fAssign 3 255516) onRecord(fOrElse 3 255552) onRecord(fAndThen 3 255580) onRecord(fOpApply 3 255608) onRecord(fOpApplyStatement 3 255638) onRecord(fFdCompare 4 255668) onRecord(fFdIn 4 255706) onRecord(fObjApply 3 255744) onRecord(fAt 2 255780) onRecord(fAtom 2 255804) onRecord(fVar 2 255808) onRecord(fEscape 2 255812) onRecord(fWildcard 1 255816) onRecord(fSelf 1 255820) onRecord(fDollar 1 255824) onRecord(fInt 2 255828) onRecord(fFloat 2 255832) onRecord(fRecord 2 255836) onRecord(fOpenRecord 2 255852) onRecord(fColon 2 255868) onRecord(fApply 3 255881) onRecord(fProc 5 255921) onRecord(fFun 5 255962) onRecord(fFunctor 3 256003) onRecord(fRequire 2 256043) onRecord(fPrepare 3 256047) onRecord(fImport 2 256075) onRecord(fExport 2 256079) onRecord(fDefine 3 256083) onRecord(fClass 4 256111) onRecord(fFrom 2 256166) onRecord(fProp 2 256183) onRecord(fAttr 2 256200) onRecord(fFeat 2 256217) onRecord('#' 2 256234) onRecord(fLocal 3 256258) onRecord(fBoolCase 4 256286) onRecord(fNoElse 1 256333) onRecord(fCase 4 256344) onRecord(fCaseClause 2 256408) onRecord(fLockThen 3 256421) onRecord(fLock 2 256457) onRecord(fThread 2 256481) onRecord(fTry 4 256505) onRecord(fCatch 2 256552) onRecord(fRaise 2 256579) onRecord(fRaiseWith 3 256603) onRecord(fSkip 1 256639) onRecord(fFail 1 256643) onRecord(fNot 2 256647) onRecord(fCond 3 256671) onRecord(fClause 3 256710) onRecord(fNoThen 1 256746) onRecord(fOr 3 256750) onRecord(fCondis 2 256780) onRecord(fScanner 6 256821) onRecord(fParser 7 256894)]))
lbl(255432)	getLiteral(fNoCatch x(1))
		return
lbl(255436)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDeclare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255464)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255488)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255516)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255552)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255580)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(255608)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255638)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255668)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255706)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255744)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255780)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(255804)	unify(x(1) x(0))
		return
lbl(255808)	unify(x(1) x(0))
		return
lbl(255812)	unify(x(1) x(0))
		return
lbl(255816)	unify(x(1) x(0))
		return
lbl(255820)	unify(x(1) x(0))
		return
lbl(255824)	unify(x(1) x(0))
		return
lbl(255828)	unify(x(1) x(0))
		return
lbl(255832)	unify(x(1) x(0))
		return
lbl(255836)	getVarVar(x(3) x(0))
		getRecord(fRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255852)	getVarVar(x(3) x(0))
		getRecord(fOpenRecord 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(255868)	getVarVar(x(2) x(0))
		getRecord(fColon 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(255881)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255921)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(255962)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256003)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256043)	unify(x(1) x(0))
		return
lbl(256047)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fPrepare 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256075)	unify(x(1) x(0))
		return
lbl(256079)	unify(x(1) x(0))
		return
lbl(256083)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fDefine 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(256111)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256166)	getVarVar(x(0) x(3))
		getRecord(fFrom 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256183)	getVarVar(x(0) x(3))
		getRecord(fProp 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256200)	getVarVar(x(0) x(3))
		getRecord(fAttr 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256217)	getVarVar(x(0) x(3))
		getRecord(fFeat 2 x(1))
		unifyVariable(x(2))
		unifyValue(x(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
lbl(256234)	allocateL2
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256258)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fLocal 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(256286)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256333)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1543> 5)
lbl(256344)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(256366)	definition(x(1) 256383 pid('' 2 pos('./compiler/Unnester.oz' 2468 28) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256366)
lbl(256383)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256408)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1545> 5)
lbl(256421)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256457)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256481)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256505)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1543> 5)
lbl(256552)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256579)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256603)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256639)	unify(x(1) x(0))
		return
lbl(256643)	unify(x(1) x(0))
		return
lbl(256647)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256671)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1543> 5)
lbl(256710)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fClause 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1545> 5)
lbl(256746)	unify(x(1) x(0))
		return
lbl(256750)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256780)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(256792)	definition(x(1) 256809 pid('' 2 pos('./compiler/Unnester.oz' 2486 22) nil 3) unit [g(0)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(256792)
lbl(256809)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1543> 5)
lbl(256821)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(256894)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1543> 5)
lbl(256970)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2491)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(255423)
lbl(256985)	unify(x(4) x(2))
lbl(256988)	definition(x(4) 258758 pid('SP' 2 pos('./compiler/Unnester.oz' 2494 6) nil 6) <Q: 1546> [x(2) x(3)])
		match(x(0) ht(258743 [onScalar(fNoCatch 256997) onScalar(fNoFinally 257001) onRecord(fDeclare 3 257005) onRecord(fAnd 2 257057) onRecord(fEq 3 257081) onRecord(fAssign 3 257117) onRecord(fOrElse 3 257153) onRecord(fAndThen 3 257181) onRecord(fOpApply 3 257209) onRecord(fOpApplyStatement 3 257239) onRecord(fFdCompare 4 257269) onRecord(fFdIn 4 257307) onRecord(fObjApply 3 257345) onRecord(fAt 2 257381) onRecord(fAtom 2 257405) onRecord(fVar 2 257418) onRecord(fEscape 2 257431) onRecord(fWildcard 1 257444) onRecord(fSelf 1 257455) onRecord(fDollar 1 257466) onRecord(fInt 2 257477) onRecord(fFloat 2 257490) onRecord(fRecord 2 257503) onRecord(fOpenRecord 2 257531) onRecord(fApply 3 257559) onRecord(fProc 5 257599) onRecord(fFun 5 257640) onRecord(fFunctor 3 257681) onRecord(fClass 4 257721) onRecord(fMeth 3 257776) onRecord(fLocal 3 257793) onRecord(fBoolCase 4 257845) onRecord(fNoElse 1 257892) onRecord(fCase 4 257903) onRecord(fCaseClause 2 257967) onRecord(fLockThen 3 257980) onRecord(fLock 2 258016) onRecord(fThread 2 258040) onRecord(fTry 4 258064) onRecord(fCatch 2 258111) onRecord(fRaise 2 258138) onRecord(fRaiseWith 3 258162) onRecord(fSkip 1 258198) onRecord(fFail 1 258209) onRecord(fNot 2 258220) onRecord(fCond 3 258244) onRecord(fClause 3 258283) onRecord(fNoThen 1 258343) onRecord(fOr 3 258354) onRecord(fCondis 2 258384) onRecord(fScanner 6 258425) onRecord(fMode 2 258498) onRecord(fInheritedModes 1 258514) onRecord(fLexicalAbbreviation 2 258518) onRecord(fLexicalRule 2 258522) onRecord(fParser 7 258535) onRecord(fProductionTemplate 5 258611) onRecord(fSyntaxRule 3 258648) onRecord(fSynApplication 2 258665) onRecord(fSynAction 1 258669) onRecord(fSynSequence 2 258680) onRecord(fSynAlternative 1 258696) onRecord(fSynAssignment 2 258710) onRecord(fSynTemplateInstantiation 3 258723)]))
lbl(256997)	getLiteral(fNoCatch x(1))
		return
lbl(257001)	getLiteral(fNoFinally x(1))
		return
lbl(257005)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fDeclare 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257057)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAnd 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(257081)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fEq 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257117)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fAssign 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257153)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fOrElse 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257181)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(x(2))
		getRecord(fAndThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		unifyValue(x(2))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1545> 5)
lbl(257209)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApply 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257239)	allocateL2
		getVarVar(x(3) x(0))
		getVariable(y(0))
		getRecord(fOpApplyStatement 3 x(1))
		unifyValVar(x(3) x(2))
		unifyVariable(y(1))
		move(g(0) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257269)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdCompare 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257307)	allocateL4
		getVarVar(x(2) x(0))
		getVarVar(y(0) y(1))
		getRecord(fFdIn 4 x(1))
		unifyValVar(x(2) x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257345)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fObjApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257381)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fAt 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(257405)	getVarVar(x(2) x(0))
		getRecord(fAtom 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257418)	getVarVar(x(2) x(0))
		getRecord(fVar 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257431)	getVarVar(x(2) x(0))
		getRecord(fEscape 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257444)	getVariable(x(0))
		getRecord(fWildcard 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257455)	getVariable(x(0))
		getRecord(fSelf 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257466)	getVariable(x(0))
		getRecord(fDollar 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257477)	getVarVar(x(2) x(0))
		getRecord(fInt 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257490)	getVarVar(x(2) x(0))
		getRecord(fFloat 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1544> 5)
lbl(257503)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257531)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fOpenRecord 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(1) x(2))
		deAllocateL2
		genFastCall(<P: 29> 7)
lbl(257559)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fApply 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257599)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fProc 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257640)	allocateL4
		getVarVar(x(0) x(2))
		getVarVar(y(0) x(3))
		getVariable(y(1))
		getRecord(fFun 5 x(1))
		unifyVariable(x(1))
		unifyValVar(x(2) y(2))
		unifyValVar(x(3) y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257681)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fFunctor 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(2) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(257721)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fClass 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(3) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257776)	getVarVar(x(2) x(0))
		getVariable(x(3))
		getRecord(fMeth 3 x(1))
		unifyValVar(x(2) x(1))
		unifyValue(x(3))
		genFastCall(<Q: 1546> 5)
lbl(257793)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fLocal 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyValue(y(1))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL5
		genFastCall(<Q: 1546> 5)
lbl(257845)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fBoolCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257892)	getVariable(x(0))
		getRecord(fNoElse 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(257903)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fCase 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1545> 4)
lbl(257925)	definition(x(1) 257942 pid('' 2 pos('./compiler/Unnester.oz' 2535 28) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(257925)
lbl(257942)	moveMoveYXYX(y(0) x(0) y(3) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(257967)	getVarVar(x(2) x(0))
		getRecord(fCaseClause 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(257980)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fLockThen 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258016)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fLock 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258040)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fThread 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258064)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getRecord(fTry 4 x(1))
		unifyVariable(x(1))
		unifyVariable(y(3))
		unifyVariable(y(4))
		unifyVariable(y(5))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(3) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(4) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(2) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1544> 5)
lbl(258111)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCatch 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258138)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fRaise 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258162)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fRaiseWith 3 x(1))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(3))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1545> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258198)	getVariable(x(0))
		getRecord(fSkip 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258209)	getVariable(x(0))
		getRecord(fFail 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258220)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fNot 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258244)	allocateL4
		getVarVar(x(0) y(0))
		getVariable(y(1))
		getRecord(fCond 3 x(1))
		unifyVariable(x(2))
		unifyVariable(y(2))
		unifyVariable(y(3))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1544> 5)
lbl(258283)	allocateL6
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(x(1) y(2))
		createVariableMove(y(3) x(1))
		putConstant(nil x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1488> 8)
		getRecord(fClause 3 y(2))
		unifyVariable(x(1))
		unifyVariable(y(2))
		unifyVariable(y(5))
		move(y(3) x(0))
		genFastCall(<Q: 1542> 4)
		putRecord(fAnd 2 x(0))
		setValue(y(4))
		setValue(y(0))
		move(y(2) x(1))
		genFastCall(<Q: 1546> 4)
		moveMoveYXYX(y(1) x(0) y(5) x(1))
		deAllocateL6
		genFastCall(<Q: 1546> 5)
lbl(258343)	getVariable(x(0))
		getRecord(fNoThen 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1544> 5)
lbl(258354)	allocateL2
		getVarVar(x(0) x(3))
		getVariable(y(0))
		getRecord(fOr 3 x(1))
		unifyVariable(x(2))
		unifyValVar(x(3) y(1))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258384)	allocateL2
		getVarVar(x(0) y(0))
		getRecord(fCondis 2 x(1))
		unifyVariable(x(2))
		unifyVariable(y(1))
lbl(258396)	definition(x(1) 258413 pid('' 2 pos('./compiler/Unnester.oz' 2556 22) nil 3) unit [g(1)])
		move(x(1) x(2))
		move(g(0) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(258396)
lbl(258413)	genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1544> 5)
lbl(258425)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(x(2) y(3))
		getRecord(fScanner 6 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyVariable(y(6))
		unifyValVar(x(2) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258498)	getVarVar(x(3) x(0))
		getRecord(fMode 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258514)	unify(x(1) x(0))
		return
lbl(258518)	unify(x(1) x(0))
		return
lbl(258522)	getVarVar(x(2) x(0))
		getRecord(fLexicalRule 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258535)	allocateL8
		getVarVar(x(0) y(0))
		getVarVar(y(1) x(2))
		getVarVar(y(2) x(3))
		getVariable(y(3))
		getRecord(fParser 7 x(1))
		unifyVariable(x(1))
		unifyVariable(y(4))
		unifyVariable(y(5))
		unifyValVar(x(2) y(6))
		unifyValVar(x(3) y(7))
		genFastCall(<Q: 1545> 4)
		move(y(0) x(0))
		move(g(0) x(1))
		move(y(4) x(2))
		genFastCall(<P: 29> 6)
		move(y(1) x(0))
		move(g(1) x(1))
		move(y(5) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		move(g(1) x(1))
		move(y(6) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(3) x(0) y(7) x(1))
		deAllocateL8
		genFastCall(<Q: 1544> 5)
lbl(258611)	allocateL2
		getVarVar(x(3) x(4))
		getVarVar(x(0) y(0))
		getVariable(x(5))
		getRecord(fProductionTemplate 5 x(1))
		unifyValue(x(3))
		unifyValVar(x(4) x(2))
		unifyVariable(y(1))
		unifyValue(x(5))
		move(g(1) x(1))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1546> 5)
lbl(258648)	getVarVar(x(2) x(3))
		getVariable(x(0))
		getRecord(fSyntaxRule 3 x(1))
		unifyValue(x(2))
		unifyValVar(x(3) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258665)	unify(x(1) x(0))
		return
lbl(258669)	getVariable(x(0))
		getRecord(fSynAction 1 x(1))
		unifyVariable(x(1))
		genFastCall(<Q: 1546> 5)
lbl(258680)	getVarVar(x(3) x(0))
		getRecord(fSynSequence 2 x(1))
		unifyValVar(x(3) x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258696)	getVariable(x(0))
		getRecord(fSynAlternative 1 x(1))
		unifyVariable(x(2))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258710)	getVarVar(x(2) x(0))
		getRecord(fSynAssignment 2 x(1))
		unifyValVar(x(2) x(1))
		genFastCall(<Q: 1546> 5)
lbl(258723)	getVarVar(x(3) x(0))
		getVariable(x(4))
		getRecord(fSynTemplateInstantiation 3 x(1))
		unifyValVar(x(3) x(2))
		unifyValue(x(4))
		move(g(1) x(1))
		genFastCall(<P: 29> 7)
lbl(258743)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(2575)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(256988)
lbl(258758)	unify(x(4) x(3))
lbl(258761)	definition(x(2) 258861 pid('UnnestQuery' 7 pos('./compiler/Unnester.oz' 2578 6) nil 9) <Q: 1547> [y(0)])
		allocateL7
		move(g(0) x(7))
		callBI(newObject [x(7)]#[x(8)])
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		moveMoveXYXY(x(4) y(2) x(5) y(3))
		moveMoveXYXY(x(6) y(4) x(8) y(5))
		sendMsg(init y(5) 3 cache)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(6) x(1))
		sendMsg(getSwitch y(0) 2 cache)
		createVariable(y(0))
		testBool(y(6) 258823 258828)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1546> 4)
		branch(258839)
lbl(258823)	unify(y(0) y(1))
		branch(258839)
lbl(258828)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(2580)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(258839)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		move(y(5) x(4))
		deAllocateL7
		tailSendMsg(unnestQuery x(4) 4 cache)
		endDefinition(258761)
lbl(258861)	getRecord('export' [joinQueries makeExpressionQuery unnestQuery] g(16))
		unifyValue(x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		deAllocateL7
		return
		endDefinition(218179)
lbl(258875)	tailCall(x(2) 0)
		endDefinition(217207)
lbl(258880)	putList(x(3))
		setConstant(concatenateAtomAndInt)
		setConstant(nil)
		putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(3))
		putRecord(info [type] x(4))
		setConstant(nil)
		putList(x(6))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(5))
		setValue(x(6))
		putList(x(8))
		setConstant(downcase)
		setConstant(nil)
		putRecord(info [type] x(7))
		setValue(x(8))
		putList(x(10))
		setConstant(procs)
		setConstant(nil)
		putRecord(info [type] x(9))
		setValue(x(10))
		putRecord('import' ['CompilerSupport' 'Core' 'FD' 'PrintName' 'RunTime'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(7))
		setValue(x(9))
		putConstant('procedure/3' x(4))
		putConstant('procedure/2' x(5))
		putConstant('procedure/>6' x(6))
		putRecord('export' [joinQueries makeExpressionQuery unnestQuery] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		createVariableMove(y(2) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(258975)	definition(x(2) 275744 pid('' 2 pos('./compiler/Assembler.oz' 38 0) nil 4) <P: 1548> [y(149) y(203) y(217) y(150) y(148) y(156) y(147) y(1)])
		putList(x(2))
		setPredicateRef(<Q: 1549>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1550>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1551>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1552>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1553>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1554>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1555>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1556>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1557>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1558>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1559>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1560>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1561>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1562>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1563>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1564>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1565>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InstrsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InstrsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: LabelDict>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Size>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Profile>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: OutputSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MarkEnd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1566>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1567>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1568>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1569>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1570>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1571>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1572>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1573>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1574>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1575>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1576>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1577>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1578>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1579>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1580>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1581>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1582>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1583>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1584>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1585>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1586>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1587>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1588>)
		setValue(x(2))
lbl(259269)	definitionCopy(x(3) 275739 pid('/body' 0 pos('./compiler/Assembler.oz' 38 0) [once] 45) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) x(1)])
		allocateL(228)
		move(g(0) x(0))
		inlineDot(x(0) 'System' x(1) cache)
		inlineDot(x(0) 'CompilerSupport' x(2) cache)
		inlineDot(x(0) 'Builtins' x(3) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(4) cache)
		inlineDot(x(2) getInstructionSize x(5) cache)
		inlineDot(x(2) getOpcode x(6) cache)
		inlineDot(x(2) newCodeBlock x(7) cache)
		inlineDot(x(2) makeProc x(8) cache)
		inlineDot(x(2) addDebugInfo x(9) cache)
		inlineDot(x(2) storeOpcode x(10) cache)
		inlineDot(x(2) storeNumber x(11) cache)
		inlineDot(x(2) storeLiteral x(12) cache)
		inlineDot(x(2) storeFeature x(13) cache)
		inlineDot(x(2) storeConstant x(14) cache)
		inlineDot(x(2) storeInt x(15) cache)
		inlineDot(x(2) storeRegisterIndex x(16) cache)
		inlineDot(x(2) storePredicateRef x(17) cache)
		inlineDot(x(2) storeRecordArity x(18) cache)
		inlineDot(x(2) storeGRegRef x(19) cache)
		inlineDot(x(2) storeLocation x(20) cache)
		inlineDot(x(2) storeCache x(21) cache)
		inlineDot(x(2) storeBuiltinname x(22) cache)
lbl(259412)	definition(x(23) 259432 pid('StoreBuiltinname' 2 pos('./compiler/Assembler.oz' 71 2) nil 4) <Q: 1549> [x(22)])
		putConstant(~1 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259412)
lbl(259432)	definition(x(22) 259449 pid('StoreRegister' 2 pos('./compiler/Assembler.oz' 76 6) nil 2) <Q: 1550> [x(16)])
		inlineDot(x(1) 1 x(1) cache)
		genCall(gci(g(0) false '' true 2) 0)
		endDefinition(259432)
lbl(259449)	definition(x(22) 259483 pid('StoreXRegisterIndex' 2 pos('./compiler/Assembler.oz' 80 6) nil 3) <Q: 1551> [x(16)])
		shallowGuard(259470)
		getRecord(x 1 x(1))
		unifyVariable(x(2))
lbl(259463)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259470)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(80)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259449)
lbl(259483)	definition(x(22) 259517 pid('StoreYRegisterIndex' 2 pos('./compiler/Assembler.oz' 84 6) nil 3) <Q: 1552> [x(16)])
		shallowGuard(259504)
		getRecord(y 1 x(1))
		unifyVariable(x(2))
lbl(259497)	shallowThen
		move(x(2) x(1))
		genCall(gci(g(0) false '' true 2) 0)
lbl(259504)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(84)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259483)
lbl(259517)	inlineDot(x(2) storeLabel x(16) cache)
lbl(259523)	definition(x(22) 259540 pid('StoreLabel' 3 pos('./compiler/Assembler.oz' 91 2) nil 4) <Q: 1553> [g(1) x(16)])
		callBI('Dictionary.get' [x(2) x(1)]#[x(3)])
		move(x(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
		endDefinition(259523)
lbl(259540)	inlineDot(x(2) storePredId x(16) cache)
lbl(259546)	definition(x(22) 259600 pid('StorePredId' 2 pos('./compiler/Assembler.oz' 99 2) nil 7) <Q: 1554> [x(16)])
		shallowGuard(259587)
		getRecord('pid' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
lbl(259568)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259587)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(99)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259546)
lbl(259600)	inlineDot(x(2) newHashTable x(16) cache)
		inlineDot(x(2) storeHTScalar x(22) cache)
		inlineDot(x(2) storeHTRecord x(23) cache)
lbl(259618)	definition(x(24) 259754 pid('StoreHashTableRef' 3 pos('./compiler/Assembler.oz' 109 2) nil 5) <Q: 1555> [g(1) x(16) x(22) x(23)])
		shallowGuard(259741)
		getRecord('ht' 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(259634)	shallowThen
		allocateL6
		callBI('Dictionary.get' [x(2) x(3)]#[x(1)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(4) y(2) x(1) y(3))
		move(y(2) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<P: 24> 4)
		moveMoveYXYX(y(0) x(0) y(4) x(1))
		move(y(3) x(2))
		createVariableMove(y(5) x(3))
		genCall(gci(g(1) false '' false 4) 0)
lbl(259672)	definition(x(1) 259734 pid('' 1 pos('./compiler/Assembler.oz' 114 6) nil 5) unit [g(0) y(1) g(2) y(0) y(5) g(3)])
		match(x(0) ht(259719 [onRecord('onScalar' 2 259681) onRecord('onRecord' 3 259699)]))
lbl(259681)	getVarVar(x(2) x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(3)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) false '' true 4) 0)
lbl(259699)	getVarVar(x(2) x(3))
		getVariable(x(0))
		move(g(1) x(1))
		callBI('Dictionary.get' [x(1) x(0)]#[x(4)])
		move(g(3) x(0))
		move(g(4) x(1))
		genCall(gci(g(5) false '' true 5) 0)
lbl(259719)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(121)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(259672)
lbl(259734)	move(y(2) x(0))
		deAllocateL6
		genFastCall(<P: 34> 5)
lbl(259741)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(109)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259618)
lbl(259754)	inlineDot(x(2) storeGenCallInfo x(16) cache)
lbl(259760)	definition(x(22) 259820 pid('StoreGenCallInfo' 2 pos('./compiler/Assembler.oz' 129 2) nil 8) <Q: 1556> [x(16)])
		shallowGuard(259807)
		getRecord('gci' 5 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord(g 1 x(2))
		unifyVariable(x(7))
lbl(259788)	shallowThen
		move(x(7) x(1))
		move(x(3) x(2))
		move(x(4) x(3))
		move(x(5) x(4))
		move(x(6) x(5))
		genCall(gci(g(0) false '' true 6) 0)
lbl(259807)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(129)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259760)
lbl(259820)	inlineDot(x(2) storeApplMethInfo x(16) cache)
lbl(259826)	definition(x(22) 259865 pid('StoreApplMethInfo' 2 pos('./compiler/Assembler.oz' 139 2) nil 4) <Q: 1557> [x(16)])
		shallowGuard(259852)
		getRecord('ami' 2 x(1))
		unifyVariable(x(2))
		unifyVariable(x(3))
lbl(259842)	shallowThen
		move(x(2) x(1))
		move(x(3) x(2))
		genCall(gci(g(0) false '' true 3) 0)
lbl(259852)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(259826)
lbl(259865)	putRecord(instructionSizes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setVariable(y(17))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(x(16))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		setVariable(y(59))
		setVariable(y(60))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		setVariable(y(79))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(94))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		moveMoveXYXY(x(1) y(116) x(2) y(117))
		moveMoveXYXY(x(3) y(118) x(4) y(119))
		moveMoveXYXY(x(5) y(120) x(6) y(121))
		moveMoveXYXY(x(7) y(122) x(8) y(123))
		moveMoveXYXY(x(9) y(124) x(10) y(125))
		moveMoveXYXY(x(11) y(126) x(12) y(127))
		moveMoveXYXY(x(13) y(128) x(14) y(129))
		moveMoveXYXY(x(15) y(130) x(17) y(131))
		moveMoveXYXY(x(18) y(132) x(19) y(133))
		moveMoveXYXY(x(20) y(134) x(21) y(135))
		move(x(16) x(1))
		putConstant('endOfFile' x(0))
		call(y(120) 2)
		move(y(94) x(1))
		putConstant('skip' x(0))
		call(y(120) 2)
		move(y(43) x(1))
		putConstant('failure' x(0))
		call(y(120) 2)
		move(y(38) x(1))
		putConstant('definition' x(0))
		call(y(120) 2)
		move(y(39) x(1))
		putConstant('definitionCopy' x(0))
		call(y(120) 2)
		move(y(41) x(1))
		putConstant('endDefinition' x(0))
		call(y(120) 2)
		move(y(73) x(1))
		putConstant(moveXX x(0))
		call(y(120) 2)
		move(y(74) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(120) 2)
		move(y(77) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(120) 2)
		move(y(75) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(120) 2)
		move(y(76) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(120) 2)
		move(y(23) x(1))
		putConstant(createVariableX x(0))
		call(y(120) 2)
		move(y(24) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(120) 2)
		move(y(107) x(1))
		putConstant(unifyXX x(0))
		call(y(120) 2)
		move(y(83) x(1))
		putConstant(putRecordX x(0))
		call(y(120) 2)
		move(y(82) x(1))
		putConstant(putListX x(0))
		call(y(120) 2)
		move(y(81) x(1))
		putConstant(putConstantX x(0))
		call(y(120) 2)
		move(y(90) x(1))
		putConstant(setVariableX x(0))
		call(y(120) 2)
		move(y(89) x(1))
		putConstant(setValueX x(0))
		call(y(120) 2)
		move(y(86) x(1))
		putConstant('setConstant' x(0))
		call(y(120) 2)
		move(y(87) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(120) 2)
		move(y(91) x(1))
		putConstant('setVoid' x(0))
		call(y(120) 2)
		move(y(53) x(1))
		putConstant(getRecordX x(0))
		call(y(120) 2)
		move(y(49) x(1))
		putConstant(getListX x(0))
		call(y(120) 2)
		move(y(50) x(1))
		putConstant(getListValVarX x(0))
		call(y(120) 2)
		move(y(112) x(1))
		putConstant(unifyVariableX x(0))
		call(y(120) 2)
		move(y(111) x(1))
		putConstant(unifyValueX x(0))
		call(y(120) 2)
		move(y(110) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(120) 2)
		move(y(109) x(1))
		putConstant('unifyNumber' x(0))
		call(y(120) 2)
		move(y(108) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(120) 2)
		move(y(113) x(1))
		putConstant('unifyVoid' x(0))
		call(y(120) 2)
		move(y(51) x(1))
		putConstant(getLiteralX x(0))
		call(y(120) 2)
		move(y(52) x(1))
		putConstant(getNumberX x(0))
		call(y(120) 2)
		move(y(1) x(1))
		putConstant('allocateL' x(0))
		call(y(120) 2)
		move(y(2) x(1))
		putConstant('allocateL1' x(0))
		call(y(120) 2)
		move(y(4) x(1))
		putConstant('allocateL2' x(0))
		call(y(120) 2)
		move(y(5) x(1))
		putConstant('allocateL3' x(0))
		call(y(120) 2)
		move(y(6) x(1))
		putConstant('allocateL4' x(0))
		call(y(120) 2)
		move(y(7) x(1))
		putConstant('allocateL5' x(0))
		call(y(120) 2)
		move(y(8) x(1))
		putConstant('allocateL6' x(0))
		call(y(120) 2)
		move(y(9) x(1))
		putConstant('allocateL7' x(0))
		call(y(120) 2)
		move(y(10) x(1))
		putConstant('allocateL8' x(0))
		call(y(120) 2)
		move(y(11) x(1))
		putConstant('allocateL9' x(0))
		call(y(120) 2)
		move(y(3) x(1))
		putConstant('allocateL10' x(0))
		call(y(120) 2)
		move(y(25) x(1))
		putConstant('deAllocateL' x(0))
		call(y(120) 2)
		move(y(26) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(120) 2)
		move(y(28) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(120) 2)
		move(y(29) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(120) 2)
		move(y(30) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(120) 2)
		move(y(31) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(120) 2)
		move(y(32) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(120) 2)
		move(y(33) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(120) 2)
		move(y(34) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(120) 2)
		move(y(35) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(120) 2)
		move(y(27) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(120) 2)
		move(y(47) x(1))
		putConstant('genCall' x(0))
		call(y(120) 2)
		move(y(15) x(1))
		putConstant(callX x(0))
		call(y(120) 2)
		move(y(96) x(1))
		putConstant(tailCallX x(0))
		call(y(120) 2)
		move(y(71) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(120) 2)
		move(y(48) x(1))
		putConstant('genFastCall' x(0))
		call(y(120) 2)
		move(y(44) x(1))
		putConstant('fastCall' x(0))
		call(y(120) 2)
		move(y(45) x(1))
		putConstant('fastTailCall' x(0))
		call(y(120) 2)
		move(y(85) x(1))
		putConstant(sendMsgX x(0))
		call(y(120) 2)
		move(y(97) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(120) 2)
		move(y(12) x(1))
		putConstant(applMethX x(0))
		call(y(120) 2)
		move(y(95) x(1))
		putConstant(tailApplMethX x(0))
		call(y(120) 2)
		move(y(55) x(1))
		putConstant('getSelf' x(0))
		call(y(120) 2)
		move(y(88) x(1))
		putConstant('setSelf' x(0))
		call(y(120) 2)
		move(y(70) x(1))
		putConstant('lockThread' x(0))
		call(y(120) 2)
		move(y(61) x(1))
		putConstant('inlineAt' x(0))
		call(y(120) 2)
		move(y(60) x(1))
		putConstant('inlineAssign' x(0))
		call(y(120) 2)
		move(y(14) x(1))
		putConstant('branch' x(0))
		call(y(120) 2)
		move(y(114) x(1))
		putConstant('wait' x(0))
		call(y(120) 2)
		move(y(115) x(1))
		putConstant('waitTop' x(0))
		call(y(120) 2)
		move(y(13) x(1))
		putConstant('ask' x(0))
		call(y(120) 2)
		move(y(20) x(1))
		putConstant('createCond' x(0))
		call(y(120) 2)
		move(y(22) x(1))
		putConstant('createOr' x(0))
		call(y(120) 2)
		move(y(21) x(1))
		putConstant('createEnumOr' x(0))
		call(y(120) 2)
		move(y(19) x(1))
		putConstant('createChoice' x(0))
		call(y(120) 2)
		move(y(17) x(1))
		putConstant('clause' x(0))
		call(y(120) 2)
		move(y(40) x(1))
		putConstant('emptyClause' x(0))
		call(y(120) 2)
		move(y(106) x(1))
		putConstant('thread' x(0))
		call(y(120) 2)
		move(y(42) x(1))
		putConstant('exHandler' x(0))
		call(y(120) 2)
		move(y(79) x(1))
		putConstant('popEx' x(0))
		call(y(120) 2)
		move(y(84) x(1))
		putConstant('return' x(0))
		call(y(120) 2)
		move(y(54) x(1))
		putConstant(getReturnX x(0))
		call(y(120) 2)
		move(y(46) x(1))
		putConstant(funReturnX x(0))
		call(y(120) 2)
		move(y(78) x(1))
		putConstant('nextClause' x(0))
		call(y(120) 2)
		move(y(68) x(1))
		putConstant('lastClause' x(0))
		call(y(120) 2)
		move(y(92) x(1))
		putConstant('shallowGuard' x(0))
		call(y(120) 2)
		move(y(93) x(1))
		putConstant('shallowThen' x(0))
		call(y(120) 2)
		move(y(103) x(1))
		putConstant(testLiteralX x(0))
		call(y(120) 2)
		move(y(104) x(1))
		putConstant(testNumberX x(0))
		call(y(120) 2)
		move(y(105) x(1))
		putConstant(testRecordX x(0))
		call(y(120) 2)
		move(y(102) x(1))
		putConstant(testListX x(0))
		call(y(120) 2)
		move(y(99) x(1))
		putConstant(testBoolX x(0))
		call(y(120) 2)
		move(y(72) x(1))
		putConstant(matchX x(0))
		call(y(120) 2)
		move(y(57) x(1))
		putConstant(getVariableX x(0))
		call(y(120) 2)
		move(y(56) x(1))
		putConstant(getVarVarXX x(0))
		call(y(120) 2)
		move(y(58) x(1))
		putConstant('getVoid' x(0))
		call(y(120) 2)
		move(y(36) x(1))
		putConstant('debugEntry' x(0))
		call(y(120) 2)
		move(y(37) x(1))
		putConstant('debugExit' x(0))
		call(y(120) 2)
		move(y(59) x(1))
		putConstant('globalVarname' x(0))
		call(y(120) 2)
		move(y(69) x(1))
		putConstant('localVarname' x(0))
		call(y(120) 2)
		move(y(18) x(1))
		putConstant('clearY' x(0))
		call(y(120) 2)
		move(y(80) x(1))
		putConstant('profileProc' x(0))
		call(y(120) 2)
		move(y(16) x(1))
		putConstant('callBI' x(0))
		call(y(120) 2)
		move(y(66) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(120) 2)
		move(y(64) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(120) 2)
		move(y(65) x(1))
		putConstant('inlinePlus' x(0))
		call(y(120) 2)
		move(y(63) x(1))
		putConstant('inlineMinus' x(0))
		call(y(120) 2)
		move(y(62) x(1))
		putConstant('inlineDot' x(0))
		call(y(120) 2)
		move(y(67) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(120) 2)
		move(y(98) x(1))
		putConstant('testBI' x(0))
		call(y(120) 2)
		move(y(101) x(1))
		putConstant('testLT' x(0))
		call(y(120) 2)
		move(y(100) x(1))
		putConstant('testLE' x(0))
		call(y(120) 2)
		putRecord(f [g x y] x(0))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		putRecord(f [g x y] x(1))
		setVariable(y(18))
		setVariable(y(19))
		setVariable(y(20))
		putRecord(f [g x y] x(2))
		setVariable(y(28))
		setVariable(y(29))
		setVariable(y(30))
		putRecord(f [g x y] x(3))
		setVariable(y(31))
		setVariable(y(32))
		setVariable(y(33))
		putRecord(f [g x y] x(4))
		setVariable(y(56))
		setVariable(y(57))
		setVariable(y(58))
		putRecord(f [g x y] x(5))
		setVariable(y(61))
		setVariable(y(62))
		setVariable(y(63))
		putRecord(f [g x y] x(6))
		setVariable(y(64))
		setVariable(y(65))
		setVariable(y(66))
		putRecord(f [g x y] x(7))
		setVariable(y(67))
		setVariable(y(68))
		setVariable(y(69))
		putRecord(f [g x y] x(8))
		setVariable(y(70))
		setVariable(y(71))
		setVariable(y(72))
		putRecord(f [g x y] x(9))
		setVariable(y(73))
		setVariable(y(74))
		setVariable(y(75))
		putRecord(f [g x y] x(10))
		setVariable(y(76))
		setVariable(y(77))
		setVariable(y(78))
		putRecord(f [g x y] x(12))
		setVariable(y(80))
		setVariable(y(81))
		setVariable(y(82))
		putRecord(f [g x y] x(13))
		setVariable(y(83))
		setVariable(y(84))
		setVariable(y(85))
		putRecord(f [g x y] x(14))
		setVariable(y(86))
		setVariable(y(87))
		setVariable(y(88))
		putRecord(f [g x y] x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		putRecord(f [g x y] x(15))
		setVariable(y(89))
		setVariable(y(90))
		setVariable(y(91))
		putRecord(f [g x y] x(16))
		setVariable(y(107))
		setVariable(y(108))
		setVariable(y(109))
		putRecord(f [g x y] x(18))
		setVariable(y(110))
		setVariable(y(111))
		setVariable(y(112))
		putRecord(f [g x y] x(19))
		setVariable(y(113))
		setVariable(y(114))
		setVariable(y(115))
		putRecord(f [g x y] x(20))
		setVariable(y(120))
		setVariable(y(136))
		setVariable(y(137))
		putRecord(f [g x y] x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		putRecord(f [g x y] x(21))
		setVariable(y(145))
		setVariable(y(146))
		setVariable(y(147))
		putRecord(f [g x y] x(22))
		setVariable(y(148))
		setVariable(y(149))
		setVariable(y(150))
		putRecord(f [g x y] x(23))
		setVariable(y(151))
		setVariable(y(152))
		setVariable(y(153))
		putRecord(f [g x y] x(24))
		setVariable(y(155))
		setVariable(y(156))
		setVariable(y(157))
		putRecord(f [g x y] x(25))
		setVariable(y(161))
		setVariable(y(162))
		setVariable(y(163))
		putRecord(f [g x y] x(26))
		setVariable(y(164))
		setVariable(y(165))
		setVariable(y(166))
		putRecord(f [g x y] x(27))
		setVariable(y(171))
		setVariable(y(172))
		setVariable(y(173))
		putRecord(f [g x y] x(28))
		setVariable(y(174))
		setVariable(y(175))
		setVariable(y(176))
		putRecord(f [g x y] x(29))
		setVariable(y(177))
		setVariable(y(178))
		setVariable(y(179))
		putRecord(f [g x y] x(30))
		setVariable(y(181))
		setVariable(y(182))
		setVariable(y(183))
		putRecord(f [g x y] x(31))
		setVariable(y(186))
		setVariable(y(187))
		setVariable(y(188))
		putRecord(f [g x y] x(32))
		setVariable(y(189))
		setVariable(y(190))
		setVariable(y(191))
		putRecord(f [g x y] x(33))
		setVariable(y(192))
		setVariable(y(193))
		setVariable(y(194))
		putRecord(f [g x y] x(34))
		setVariable(y(195))
		setVariable(y(196))
		setVariable(y(197))
		putRecord(f [g x y] x(36))
		setVariable(y(199))
		setVariable(y(200))
		setVariable(y(201))
		putRecord(f [g x y] x(37))
		setVariable(y(202))
		setVariable(y(203))
		setVariable(y(204))
		putRecord(f [g x y] x(38))
		setVariable(y(205))
		setVariable(y(206))
		setVariable(y(207))
		putRecord(f [g x y] x(35))
		setValue(x(36))
		setValue(x(37))
		setValue(x(38))
		putRecord(f [g x y] x(40))
		setVariable(y(210))
		setVariable(y(211))
		setVariable(y(212))
		putRecord(f [g x y] x(41))
		setVariable(y(213))
		setVariable(y(214))
		setVariable(y(215))
		putRecord(f [g x y] x(42))
		setVariable(y(216))
		setVariable(y(217))
		setVariable(y(218))
		putRecord(f [g x y] x(39))
		setValue(x(40))
		setValue(x(41))
		setValue(x(42))
		putRecord(f [g x y] x(43))
		setVariable(y(219))
		setVariable(y(220))
		setVariable(y(221))
		putRecord(f [g x y] x(44))
		setVariable(y(222))
		setVariable(y(223))
		setVariable(y(224))
		putRecord(opcodes ['allocateL' 'allocateL1' 'allocateL10' 'allocateL2' 'allocateL3' 'allocateL4' 'allocateL5' 'allocateL6' 'allocateL7' 'allocateL8' 'allocateL9' 'applMeth' 'ask' 'branch' 'call' 'callBI' 'clause' 'clearY' 'createChoice' 'createCond' 'createEnumOr' 'createOr' 'createVariable' 'createVariableMove' 'deAllocateL' 'deAllocateL1' 'deAllocateL10' 'deAllocateL2' 'deAllocateL3' 'deAllocateL4' 'deAllocateL5' 'deAllocateL6' 'deAllocateL7' 'deAllocateL8' 'deAllocateL9' 'debugEntry' 'debugExit' 'definition' 'definitionCopy' 'emptyClause' 'endDefinition' 'endOfFile' 'exHandler' 'failure' 'fastCall' 'fastTailCall' 'funReturn' 'genCall' 'genFastCall' 'getList' 'getListValVar' 'getLiteral' 'getNumber' 'getRecord' 'getReturn' 'getSelf' 'getVarVar' 'getVariable' 'getVoid' 'globalVarname' 'inlineAssign' 'inlineAt' 'inlineDot' 'inlineMinus' 'inlineMinus1' 'inlinePlus' 'inlinePlus1' 'inlineUparrow' 'lastClause' 'localVarname' 'lockThread' 'marshalledFastCall' 'match' 'move' 'moveMoveXYXY' 'moveMoveXYYX' 'moveMoveYXXY' 'moveMoveYXYX' 'nextClause' 'popEx' 'profileProc' 'putConstant' 'putList' 'putRecord' 'return' 'sendMsg' 'setConstant' 'setPredicateRef' 'setSelf' 'setValue' 'setVariable' 'setVoid' 'shallowGuard' 'shallowThen' 'skip' 'tailApplMeth' 'tailCall' 'tailSendMsg' 'testBI' 'testBool' 'testLE' 'testLT' 'testList' 'testLiteral' 'testNumber' 'testRecord' 'thread' 'unify' 'unifyLiteral' 'unifyNumber' 'unifyValVar' 'unifyValue' 'unifyVariable' 'unifyVoid' 'wait' 'waitTop'] y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setValue(x(0))
		setVariable(y(16))
		setVariable(y(17))
		setValue(x(1))
		setVariable(y(21))
		setVariable(y(22))
		setVariable(y(23))
		setVariable(y(24))
		setVariable(y(25))
		setVariable(y(26))
		setVariable(y(27))
		setValue(x(2))
		setValue(x(3))
		setVariable(y(34))
		setVariable(y(35))
		setVariable(y(36))
		setVariable(y(37))
		setVariable(y(38))
		setVariable(y(39))
		setVariable(y(40))
		setVariable(y(41))
		setVariable(y(42))
		setVariable(y(43))
		setVariable(y(44))
		setVariable(y(45))
		setVariable(y(46))
		setVariable(y(47))
		setVariable(y(48))
		setVariable(y(49))
		setVariable(y(50))
		setVariable(y(51))
		setVariable(y(52))
		setVariable(y(53))
		setVariable(y(54))
		setVariable(y(55))
		setValue(x(4))
		setVariable(y(59))
		setVariable(y(60))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setVariable(y(79))
		setValue(x(11))
		setValue(x(15))
		setVariable(y(92))
		setVariable(y(93))
		setVariable(y(95))
		setVariable(y(96))
		setVariable(y(97))
		setVariable(y(98))
		setVariable(y(99))
		setVariable(y(100))
		setVariable(y(101))
		setVariable(y(102))
		setVariable(y(103))
		setVariable(y(104))
		setVariable(y(105))
		setVariable(y(106))
		setValue(x(16))
		setValue(x(17))
		setVariable(y(138))
		setVariable(y(139))
		setVariable(y(140))
		setVariable(y(141))
		setVariable(y(142))
		setVariable(y(143))
		setVariable(y(144))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setVariable(y(154))
		setValue(x(24))
		setVariable(y(158))
		setVariable(y(159))
		setVariable(y(160))
		setValue(x(25))
		setValue(x(26))
		setVariable(y(167))
		setVariable(y(168))
		setVariable(y(169))
		setVariable(y(170))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setVariable(y(180))
		setValue(x(30))
		setVariable(y(184))
		setVariable(y(185))
		setValue(x(31))
		setValue(x(32))
		setValue(x(33))
		setValue(x(34))
		setVariable(y(198))
		setValue(x(35))
		setVariable(y(208))
		setVariable(y(209))
		setValue(x(39))
		setValue(x(43))
		setValue(x(44))
		setVariable(y(225))
		setVariable(y(226))
		setVariable(y(227))
		move(y(51) x(1))
		putConstant('endOfFile' x(0))
		call(y(121) 2)
		move(y(170) x(1))
		putConstant('skip' x(0))
		call(y(121) 2)
		move(y(53) x(1))
		putConstant('failure' x(0))
		call(y(121) 2)
		move(y(47) x(1))
		putConstant('definition' x(0))
		call(y(121) 2)
		move(y(48) x(1))
		putConstant('definitionCopy' x(0))
		call(y(121) 2)
		move(y(50) x(1))
		putConstant('endDefinition' x(0))
		call(y(121) 2)
		move(y(114) x(1))
		putConstant(moveXX x(0))
		call(y(121) 2)
		move(y(115) x(1))
		putConstant(moveXY x(0))
		call(y(121) 2)
		move(y(113) x(1))
		putConstant(moveXG x(0))
		call(y(121) 2)
		move(y(136) x(1))
		putConstant(moveYX x(0))
		call(y(121) 2)
		move(y(137) x(1))
		putConstant(moveYY x(0))
		call(y(121) 2)
		move(y(120) x(1))
		putConstant(moveYG x(0))
		call(y(121) 2)
		move(y(111) x(1))
		putConstant(moveGX x(0))
		call(y(121) 2)
		move(y(112) x(1))
		putConstant(moveGY x(0))
		call(y(121) 2)
		move(y(110) x(1))
		putConstant(moveGG x(0))
		call(y(121) 2)
		move(y(138) x(1))
		putConstant('moveMoveXYXY' x(0))
		call(y(121) 2)
		move(y(141) x(1))
		putConstant('moveMoveYXYX' x(0))
		call(y(121) 2)
		move(y(139) x(1))
		putConstant('moveMoveXYYX' x(0))
		call(y(121) 2)
		move(y(140) x(1))
		putConstant('moveMoveYXXY' x(0))
		call(y(121) 2)
		move(y(29) x(1))
		putConstant(createVariableX x(0))
		call(y(121) 2)
		move(y(30) x(1))
		putConstant(createVariableY x(0))
		call(y(121) 2)
		move(y(28) x(1))
		putConstant(createVariableG x(0))
		call(y(121) 2)
		move(y(32) x(1))
		putConstant(createVariableMoveX x(0))
		call(y(121) 2)
		move(y(33) x(1))
		putConstant(createVariableMoveY x(0))
		call(y(121) 2)
		move(y(31) x(1))
		putConstant(createVariableMoveG x(0))
		call(y(121) 2)
		move(y(203) x(1))
		putConstant(unifyXX x(0))
		call(y(121) 2)
		move(y(204) x(1))
		putConstant(unifyXY x(0))
		call(y(121) 2)
		move(y(202) x(1))
		putConstant(unifyXG x(0))
		call(y(121) 2)
		move(y(206) x(1))
		putConstant(unifyYX x(0))
		call(y(121) 2)
		move(y(207) x(1))
		putConstant(unifyYY x(0))
		call(y(121) 2)
		move(y(205) x(1))
		putConstant(unifyYG x(0))
		call(y(121) 2)
		move(y(200) x(1))
		putConstant(unifyGX x(0))
		call(y(121) 2)
		move(y(201) x(1))
		putConstant(unifyGY x(0))
		call(y(121) 2)
		move(y(199) x(1))
		putConstant(unifyGG x(0))
		call(y(121) 2)
		move(y(152) x(1))
		putConstant(putRecordX x(0))
		call(y(121) 2)
		move(y(153) x(1))
		putConstant(putRecordY x(0))
		call(y(121) 2)
		move(y(151) x(1))
		putConstant(putRecordG x(0))
		call(y(121) 2)
		move(y(149) x(1))
		putConstant(putListX x(0))
		call(y(121) 2)
		move(y(150) x(1))
		putConstant(putListY x(0))
		call(y(121) 2)
		move(y(148) x(1))
		putConstant(putListG x(0))
		call(y(121) 2)
		move(y(146) x(1))
		putConstant(putConstantX x(0))
		call(y(121) 2)
		move(y(147) x(1))
		putConstant(putConstantY x(0))
		call(y(121) 2)
		move(y(145) x(1))
		putConstant(putConstantG x(0))
		call(y(121) 2)
		move(y(165) x(1))
		putConstant(setVariableX x(0))
		call(y(121) 2)
		move(y(166) x(1))
		putConstant(setVariableY x(0))
		call(y(121) 2)
		move(y(164) x(1))
		putConstant(setVariableG x(0))
		call(y(121) 2)
		move(y(162) x(1))
		putConstant(setValueX x(0))
		call(y(121) 2)
		move(y(163) x(1))
		putConstant(setValueY x(0))
		call(y(121) 2)
		move(y(161) x(1))
		putConstant(setValueG x(0))
		call(y(121) 2)
		move(y(158) x(1))
		putConstant('setConstant' x(0))
		call(y(121) 2)
		move(y(159) x(1))
		putConstant('setPredicateRef' x(0))
		call(y(121) 2)
		move(y(167) x(1))
		putConstant('setVoid' x(0))
		call(y(121) 2)
		move(y(74) x(1))
		putConstant(getRecordX x(0))
		call(y(121) 2)
		move(y(75) x(1))
		putConstant(getRecordY x(0))
		call(y(121) 2)
		move(y(73) x(1))
		putConstant(getRecordG x(0))
		call(y(121) 2)
		move(y(62) x(1))
		putConstant(getListX x(0))
		call(y(121) 2)
		move(y(63) x(1))
		putConstant(getListY x(0))
		call(y(121) 2)
		move(y(61) x(1))
		putConstant(getListG x(0))
		call(y(121) 2)
		move(y(65) x(1))
		putConstant(getListValVarX x(0))
		call(y(121) 2)
		move(y(66) x(1))
		putConstant(getListValVarY x(0))
		call(y(121) 2)
		move(y(64) x(1))
		putConstant(getListValVarG x(0))
		call(y(121) 2)
		move(y(223) x(1))
		putConstant(unifyVariableX x(0))
		call(y(121) 2)
		move(y(224) x(1))
		putConstant(unifyVariableY x(0))
		call(y(121) 2)
		move(y(222) x(1))
		putConstant(unifyVariableG x(0))
		call(y(121) 2)
		move(y(220) x(1))
		putConstant(unifyValueX x(0))
		call(y(121) 2)
		move(y(221) x(1))
		putConstant(unifyValueY x(0))
		call(y(121) 2)
		move(y(219) x(1))
		putConstant(unifyValueG x(0))
		call(y(121) 2)
		move(y(214) x(1))
		putConstant(unifyValVarXX x(0))
		call(y(121) 2)
		move(y(215) x(1))
		putConstant(unifyValVarXY x(0))
		call(y(121) 2)
		move(y(213) x(1))
		putConstant(unifyValVarXG x(0))
		call(y(121) 2)
		move(y(217) x(1))
		putConstant(unifyValVarYX x(0))
		call(y(121) 2)
		move(y(218) x(1))
		putConstant(unifyValVarYY x(0))
		call(y(121) 2)
		move(y(216) x(1))
		putConstant(unifyValVarYG x(0))
		call(y(121) 2)
		move(y(211) x(1))
		putConstant(unifyValVarGX x(0))
		call(y(121) 2)
		move(y(212) x(1))
		putConstant(unifyValVarGY x(0))
		call(y(121) 2)
		move(y(210) x(1))
		putConstant(unifyValVarGG x(0))
		call(y(121) 2)
		move(y(209) x(1))
		putConstant('unifyNumber' x(0))
		call(y(121) 2)
		move(y(208) x(1))
		putConstant('unifyLiteral' x(0))
		call(y(121) 2)
		move(y(225) x(1))
		putConstant('unifyVoid' x(0))
		call(y(121) 2)
		move(y(68) x(1))
		putConstant(getLiteralX x(0))
		call(y(121) 2)
		move(y(69) x(1))
		putConstant(getLiteralY x(0))
		call(y(121) 2)
		move(y(67) x(1))
		putConstant(getLiteralG x(0))
		call(y(121) 2)
		move(y(71) x(1))
		putConstant(getNumberX x(0))
		call(y(121) 2)
		move(y(72) x(1))
		putConstant(getNumberY x(0))
		call(y(121) 2)
		move(y(70) x(1))
		putConstant(getNumberG x(0))
		call(y(121) 2)
		move(y(2) x(1))
		putConstant('allocateL' x(0))
		call(y(121) 2)
		move(y(3) x(1))
		putConstant('allocateL1' x(0))
		call(y(121) 2)
		move(y(5) x(1))
		putConstant('allocateL2' x(0))
		call(y(121) 2)
		move(y(6) x(1))
		putConstant('allocateL3' x(0))
		call(y(121) 2)
		move(y(7) x(1))
		putConstant('allocateL4' x(0))
		call(y(121) 2)
		move(y(8) x(1))
		putConstant('allocateL5' x(0))
		call(y(121) 2)
		move(y(9) x(1))
		putConstant('allocateL6' x(0))
		call(y(121) 2)
		move(y(10) x(1))
		putConstant('allocateL7' x(0))
		call(y(121) 2)
		move(y(11) x(1))
		putConstant('allocateL8' x(0))
		call(y(121) 2)
		move(y(12) x(1))
		putConstant('allocateL9' x(0))
		call(y(121) 2)
		move(y(4) x(1))
		putConstant('allocateL10' x(0))
		call(y(121) 2)
		move(y(34) x(1))
		putConstant('deAllocateL' x(0))
		call(y(121) 2)
		move(y(35) x(1))
		putConstant('deAllocateL1' x(0))
		call(y(121) 2)
		move(y(37) x(1))
		putConstant('deAllocateL2' x(0))
		call(y(121) 2)
		move(y(38) x(1))
		putConstant('deAllocateL3' x(0))
		call(y(121) 2)
		move(y(39) x(1))
		putConstant('deAllocateL4' x(0))
		call(y(121) 2)
		move(y(40) x(1))
		putConstant('deAllocateL5' x(0))
		call(y(121) 2)
		move(y(41) x(1))
		putConstant('deAllocateL6' x(0))
		call(y(121) 2)
		move(y(42) x(1))
		putConstant('deAllocateL7' x(0))
		call(y(121) 2)
		move(y(43) x(1))
		putConstant('deAllocateL8' x(0))
		call(y(121) 2)
		move(y(44) x(1))
		putConstant('deAllocateL9' x(0))
		call(y(121) 2)
		move(y(36) x(1))
		putConstant('deAllocateL10' x(0))
		call(y(121) 2)
		move(y(59) x(1))
		putConstant('genCall' x(0))
		call(y(121) 2)
		move(y(19) x(1))
		putConstant(callX x(0))
		call(y(121) 2)
		move(y(20) x(1))
		putConstant(callY x(0))
		call(y(121) 2)
		move(y(18) x(1))
		putConstant(callG x(0))
		call(y(121) 2)
		move(y(175) x(1))
		putConstant(tailCallX x(0))
		call(y(121) 2)
		move(y(176) x(1))
		putConstant(tailCallY x(0))
		call(y(121) 2)
		move(y(174) x(1))
		putConstant(tailCallG x(0))
		call(y(121) 2)
		move(y(106) x(1))
		putConstant('marshalledFastCall' x(0))
		call(y(121) 2)
		move(y(60) x(1))
		putConstant('genFastCall' x(0))
		call(y(121) 2)
		move(y(54) x(1))
		putConstant('fastCall' x(0))
		call(y(121) 2)
		move(y(55) x(1))
		putConstant('fastTailCall' x(0))
		call(y(121) 2)
		move(y(156) x(1))
		putConstant(sendMsgX x(0))
		call(y(121) 2)
		move(y(157) x(1))
		putConstant(sendMsgY x(0))
		call(y(121) 2)
		move(y(155) x(1))
		putConstant(sendMsgG x(0))
		call(y(121) 2)
		move(y(178) x(1))
		putConstant(tailSendMsgX x(0))
		call(y(121) 2)
		move(y(179) x(1))
		putConstant(tailSendMsgY x(0))
		call(y(121) 2)
		move(y(177) x(1))
		putConstant(tailSendMsgG x(0))
		call(y(121) 2)
		move(y(14) x(1))
		putConstant(applMethX x(0))
		call(y(121) 2)
		move(y(15) x(1))
		putConstant(applMethY x(0))
		call(y(121) 2)
		move(y(13) x(1))
		putConstant(applMethG x(0))
		call(y(121) 2)
		move(y(172) x(1))
		putConstant(tailApplMethX x(0))
		call(y(121) 2)
		move(y(173) x(1))
		putConstant(tailApplMethY x(0))
		call(y(121) 2)
		move(y(171) x(1))
		putConstant(tailApplMethG x(0))
		call(y(121) 2)
		move(y(79) x(1))
		putConstant('getSelf' x(0))
		call(y(121) 2)
		move(y(160) x(1))
		putConstant('setSelf' x(0))
		call(y(121) 2)
		move(y(105) x(1))
		putConstant('lockThread' x(0))
		call(y(121) 2)
		move(y(96) x(1))
		putConstant('inlineAt' x(0))
		call(y(121) 2)
		move(y(95) x(1))
		putConstant('inlineAssign' x(0))
		call(y(121) 2)
		move(y(17) x(1))
		putConstant('branch' x(0))
		call(y(121) 2)
		move(y(226) x(1))
		putConstant('wait' x(0))
		call(y(121) 2)
		move(y(227) x(1))
		putConstant('waitTop' x(0))
		call(y(121) 2)
		move(y(16) x(1))
		putConstant('ask' x(0))
		call(y(121) 2)
		move(y(25) x(1))
		putConstant('createCond' x(0))
		call(y(121) 2)
		move(y(27) x(1))
		putConstant('createOr' x(0))
		call(y(121) 2)
		move(y(26) x(1))
		putConstant('createEnumOr' x(0))
		call(y(121) 2)
		move(y(24) x(1))
		putConstant('createChoice' x(0))
		call(y(121) 2)
		move(y(22) x(1))
		putConstant('clause' x(0))
		call(y(121) 2)
		move(y(49) x(1))
		putConstant('emptyClause' x(0))
		call(y(121) 2)
		move(y(198) x(1))
		putConstant('thread' x(0))
		call(y(121) 2)
		move(y(52) x(1))
		putConstant('exHandler' x(0))
		call(y(121) 2)
		move(y(143) x(1))
		putConstant('popEx' x(0))
		call(y(121) 2)
		move(y(154) x(1))
		putConstant('return' x(0))
		call(y(121) 2)
		move(y(77) x(1))
		putConstant(getReturnX x(0))
		call(y(121) 2)
		move(y(78) x(1))
		putConstant(getReturnY x(0))
		call(y(121) 2)
		move(y(76) x(1))
		putConstant(getReturnG x(0))
		call(y(121) 2)
		move(y(57) x(1))
		putConstant(funReturnX x(0))
		call(y(121) 2)
		move(y(58) x(1))
		putConstant(funReturnY x(0))
		call(y(121) 2)
		move(y(56) x(1))
		putConstant(funReturnG x(0))
		call(y(121) 2)
		move(y(142) x(1))
		putConstant('nextClause' x(0))
		call(y(121) 2)
		move(y(103) x(1))
		putConstant('lastClause' x(0))
		call(y(121) 2)
		move(y(168) x(1))
		putConstant('shallowGuard' x(0))
		call(y(121) 2)
		move(y(169) x(1))
		putConstant('shallowThen' x(0))
		call(y(121) 2)
		move(y(190) x(1))
		putConstant(testLiteralX x(0))
		call(y(121) 2)
		move(y(191) x(1))
		putConstant(testLiteralY x(0))
		call(y(121) 2)
		move(y(189) x(1))
		putConstant(testLiteralG x(0))
		call(y(121) 2)
		move(y(193) x(1))
		putConstant(testNumberX x(0))
		call(y(121) 2)
		move(y(194) x(1))
		putConstant(testNumberY x(0))
		call(y(121) 2)
		move(y(192) x(1))
		putConstant(testNumberG x(0))
		call(y(121) 2)
		move(y(196) x(1))
		putConstant(testRecordX x(0))
		call(y(121) 2)
		move(y(197) x(1))
		putConstant(testRecordY x(0))
		call(y(121) 2)
		move(y(195) x(1))
		putConstant(testRecordG x(0))
		call(y(121) 2)
		move(y(187) x(1))
		putConstant(testListX x(0))
		call(y(121) 2)
		move(y(188) x(1))
		putConstant(testListY x(0))
		call(y(121) 2)
		move(y(186) x(1))
		putConstant(testListG x(0))
		call(y(121) 2)
		move(y(182) x(1))
		putConstant(testBoolX x(0))
		call(y(121) 2)
		move(y(183) x(1))
		putConstant(testBoolY x(0))
		call(y(121) 2)
		move(y(181) x(1))
		putConstant(testBoolG x(0))
		call(y(121) 2)
		move(y(108) x(1))
		putConstant(matchX x(0))
		call(y(121) 2)
		move(y(109) x(1))
		putConstant(matchY x(0))
		call(y(121) 2)
		move(y(107) x(1))
		putConstant(matchG x(0))
		call(y(121) 2)
		move(y(90) x(1))
		putConstant(getVariableX x(0))
		call(y(121) 2)
		move(y(91) x(1))
		putConstant(getVariableY x(0))
		call(y(121) 2)
		move(y(89) x(1))
		putConstant(getVariableG x(0))
		call(y(121) 2)
		move(y(84) x(1))
		putConstant(getVarVarXX x(0))
		call(y(121) 2)
		move(y(85) x(1))
		putConstant(getVarVarXY x(0))
		call(y(121) 2)
		move(y(83) x(1))
		putConstant(getVarVarXG x(0))
		call(y(121) 2)
		move(y(87) x(1))
		putConstant(getVarVarYX x(0))
		call(y(121) 2)
		move(y(88) x(1))
		putConstant(getVarVarYY x(0))
		call(y(121) 2)
		move(y(86) x(1))
		putConstant(getVarVarYG x(0))
		call(y(121) 2)
		move(y(81) x(1))
		putConstant(getVarVarGX x(0))
		call(y(121) 2)
		move(y(82) x(1))
		putConstant(getVarVarGY x(0))
		call(y(121) 2)
		move(y(80) x(1))
		putConstant(getVarVarGG x(0))
		call(y(121) 2)
		move(y(92) x(1))
		putConstant('getVoid' x(0))
		call(y(121) 2)
		move(y(45) x(1))
		putConstant('debugEntry' x(0))
		call(y(121) 2)
		move(y(46) x(1))
		putConstant('debugExit' x(0))
		call(y(121) 2)
		move(y(93) x(1))
		putConstant('globalVarname' x(0))
		call(y(121) 2)
		move(y(104) x(1))
		putConstant('localVarname' x(0))
		call(y(121) 2)
		move(y(23) x(1))
		putConstant('clearY' x(0))
		call(y(121) 2)
		move(y(144) x(1))
		putConstant('profileProc' x(0))
		call(y(121) 2)
		move(y(21) x(1))
		putConstant('callBI' x(0))
		call(y(121) 2)
		move(y(101) x(1))
		putConstant('inlinePlus1' x(0))
		call(y(121) 2)
		move(y(99) x(1))
		putConstant('inlineMinus1' x(0))
		call(y(121) 2)
		move(y(100) x(1))
		putConstant('inlinePlus' x(0))
		call(y(121) 2)
		move(y(98) x(1))
		putConstant('inlineMinus' x(0))
		call(y(121) 2)
		move(y(97) x(1))
		putConstant('inlineDot' x(0))
		call(y(121) 2)
		move(y(102) x(1))
		putConstant('inlineUparrow' x(0))
		call(y(121) 2)
		move(y(180) x(1))
		putConstant('testBI' x(0))
		call(y(121) 2)
		move(y(185) x(1))
		putConstant('testLT' x(0))
		call(y(121) 2)
		move(y(184) x(1))
		putConstant('testLE' x(0))
		call(y(121) 2)
lbl(263735)	definition(x(7) 267504 pid('StoreInstr' 3 pos('./compiler-Opcodes.oz' 537 0) nil 7) <Q: 1558> [y(51) y(125) y(170) y(53) y(3) y(5) y(6) y(7) y(8) y(9) y(10) y(11) y(12) y(4) y(34) y(35) y(37) y(38) y(39) y(40) y(41) y(42) y(43) y(44) y(36) y(226) y(227) y(16) y(27) y(26) y(24) y(22) y(49) y(143) y(154) y(103) y(169) y(144) y(124) y(45) y(127) y(126) y(47) y(131) y(133) y(48) y(50) y(1) y(138) y(141) y(139) y(140) y(132) y(129) y(158) y(159) y(167) y(130) y(209) y(208) y(225) y(2) y(59) y(106) y(60) y(54) y(55) y(135) y(79) y(160) y(105) y(96) y(128) y(95) y(17) y(25) y(198) y(52) y(142) y(168) y(92) y(46) y(93) y(104) y(23) y(21) y(134) y(101) y(99) y(100) y(98) y(97) y(102) y(180) y(185) y(184)])
		match(x(0) ht(267489 [onScalar('endOfFile' 263744) onScalar('skip' 263753) onScalar('failure' 263762) onScalar('allocateL1' 263771) onScalar('allocateL2' 263780) onScalar('allocateL3' 263789) onScalar('allocateL4' 263798) onScalar('allocateL5' 263807) onScalar('allocateL6' 263816) onScalar('allocateL7' 263825) onScalar('allocateL8' 263834) onScalar('allocateL9' 263843) onScalar('allocateL10' 263852) onScalar('deAllocateL' 263861) onScalar('deAllocateL1' 263870) onScalar('deAllocateL2' 263879) onScalar('deAllocateL3' 263888) onScalar('deAllocateL4' 263897) onScalar('deAllocateL5' 263906) onScalar('deAllocateL6' 263915) onScalar('deAllocateL7' 263924) onScalar('deAllocateL8' 263933) onScalar('deAllocateL9' 263942) onScalar('deAllocateL10' 263951) onScalar('wait' 263960) onScalar('waitTop' 263969) onScalar('ask' 263978) onScalar('createOr' 263987) onScalar('createEnumOr' 263996) onScalar('createChoice' 264005) onScalar('clause' 264014) onScalar('emptyClause' 264023) onScalar('popEx' 264032) onScalar('return' 264041) onScalar('lastClause' 264050) onScalar('shallowThen' 264059) onScalar('profileProc' 264068) onRecord('debugEntry' 4 264077) onRecord('definition' 5 264139) onRecord('definitionCopy' 5 264206) onRecord('endDefinition' 1 264273) onRecord('move' 2 264302) onRecord('moveMoveXYXY' 4 264360) onRecord('moveMoveYXYX' 4 264411) onRecord('moveMoveXYYX' 4 264462) onRecord('moveMoveYXXY' 4 264513) onRecord('createVariable' 1 264564) onRecord('createVariableMove' 2 264605) onRecord('unify' 2 264655) onRecord('putRecord' 3 264713) onRecord('putList' 1 264773) onRecord('putConstant' 2 264814) onRecord('setVariable' 1 264864) onRecord('setValue' 1 264905) onRecord('setConstant' 1 264946) onRecord('setPredicateRef' 1 264969) onRecord('setVoid' 1 264992) onRecord('getRecord' 3 265015) onRecord('getList' 1 265075) onRecord('getListValVar' 3 265116) onRecord('unifyVariable' 1 265176) onRecord('unifyValue' 1 265217) onRecord('unifyValVar' 2 265258) onRecord('unifyNumber' 1 265316) onRecord('unifyLiteral' 1 265339) onRecord('unifyVoid' 1 265362) onRecord('getLiteral' 2 265385) onRecord('getNumber' 2 265435) onRecord('allocateL' 1 265485) onRecord('genCall' 2 265508) onRecord('call' 2 265540) onRecord('tailCall' 2 265590) onRecord('marshalledFastCall' 2 265640) onRecord('genFastCall' 2 265672) onRecord('fastCall' 2 265704) onRecord('fastTailCall' 2 265736) onRecord('sendMsg' 4 265768) onRecord('tailSendMsg' 4 265837) onRecord('applMeth' 2 265906) onRecord('tailApplMeth' 2 265956) onRecord('getSelf' 1 266006) onRecord('setSelf' 1 266029) onRecord('lockThread' 2 266052) onRecord('inlineAt' 3 266090) onRecord('inlineAssign' 3 266132) onRecord('branch' 1 266174) onRecord('createCond' 1 266203) onRecord('thread' 1 266232) onRecord('exHandler' 1 266261) onRecord('getReturn' 1 266290) onRecord('funReturn' 1 266331) onRecord('nextClause' 1 266372) onRecord('shallowGuard' 1 266401) onRecord('testLiteral' 3 266430) onRecord('testNumber' 3 266495) onRecord('testRecord' 4 266560) onRecord('testList' 2 266634) onRecord('testBool' 3 266689) onRecord('match' 2 266757) onRecord('getVariable' 1 266812) onRecord('getVarVar' 2 266853) onRecord('getVoid' 1 266911) onRecord('debugExit' 4 266934) onRecord('globalVarname' 1 266985) onRecord('localVarname' 1 267008) onRecord('clearY' 1 267031) onRecord('callBI' 2 267054) onRecord('inlinePlus1' 2 267086) onRecord('inlineMinus1' 2 267118) onRecord('inlinePlus' 3 267150) onRecord('inlineMinus' 3 267192) onRecord('inlineDot' 4 267234) onRecord('inlineUparrow' 3 267285) onRecord('testBI' 3 267327) onRecord('testLT' 4 267375) onRecord('testLE' 4 267432)]))
lbl(263744)	move(x(1) x(0))
		move(g(0) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263753)	move(x(1) x(0))
		move(g(2) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263762)	move(x(1) x(0))
		move(g(3) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263771)	move(x(1) x(0))
		move(g(4) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263780)	move(x(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263789)	move(x(1) x(0))
		move(g(6) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263798)	move(x(1) x(0))
		move(g(7) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263807)	move(x(1) x(0))
		move(g(8) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263816)	move(x(1) x(0))
		move(g(9) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263825)	move(x(1) x(0))
		move(g(10) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263834)	move(x(1) x(0))
		move(g(11) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263843)	move(x(1) x(0))
		move(g(12) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263852)	move(x(1) x(0))
		move(g(13) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263861)	move(x(1) x(0))
		move(g(14) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263870)	move(x(1) x(0))
		move(g(15) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263879)	move(x(1) x(0))
		move(g(16) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263888)	move(x(1) x(0))
		move(g(17) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263897)	move(x(1) x(0))
		move(g(18) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263906)	move(x(1) x(0))
		move(g(19) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263915)	move(x(1) x(0))
		move(g(20) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263924)	move(x(1) x(0))
		move(g(21) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263933)	move(x(1) x(0))
		move(g(22) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263942)	move(x(1) x(0))
		move(g(23) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263951)	move(x(1) x(0))
		move(g(24) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263960)	move(x(1) x(0))
		move(g(25) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263969)	move(x(1) x(0))
		move(g(26) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263978)	move(x(1) x(0))
		move(g(27) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263987)	move(x(1) x(0))
		move(g(28) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(263996)	move(x(1) x(0))
		move(g(29) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264005)	move(x(1) x(0))
		move(g(30) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264014)	move(x(1) x(0))
		move(g(31) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264023)	move(x(1) x(0))
		move(g(32) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264032)	move(x(1) x(0))
		move(g(33) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264041)	move(x(1) x(0))
		move(g(34) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264050)	move(x(1) x(0))
		move(g(35) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264059)	move(x(1) x(0))
		move(g(36) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264068)	move(x(1) x(0))
		move(g(37) x(1))
		genCall(gci(g(1) false '' true 2) 0)
lbl(264077)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		genCall(gci(g(38) false '' false 3) 0)
		move(y(4) x(0))
		move(g(39) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(264139)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(42) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264206)	allocateL7
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		getVariable(y(4))
		moveMoveXYXY(x(1) y(5) x(2) y(6))
		move(y(5) x(0))
		move(g(45) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(5) x(0) y(1) x(1))
		move(y(6) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(5) x(0) y(2) x(1))
		genFastCall(<Q: 1554> 4)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL7
		genCall(gci(g(44) false '' true 2) 0)
lbl(264273)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(46) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(264302)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'move' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264360)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(48) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264411)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(49) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264462)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(50) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1551> 5)
lbl(264513)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(51) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1552> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genFastCall(<Q: 1552> 5)
lbl(264564)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264605)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'createVariableMove' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(264655)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unify' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264713)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(264773)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264814)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'putConstant' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(264864)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264905)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'setValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(264946)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(54) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(264969)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(55) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(43) false '' true 2) 0)
lbl(264992)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(56) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265015)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getRecord' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		deAllocateL4
		genFastCall(<Q: 1550> 5)
lbl(265075)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getList' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265116)	allocateL4
		getVarVar(y(0) x(0))
		getVariable(y(1))
		move(g(47) x(2))
		inlineDot(x(2) 'getListValVar' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(2) x(0) y(3))
		move(y(2) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(265176)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265217)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'unifyValue' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(265258)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'unifyValVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265316)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(58) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(41) false '' true 2) 0)
lbl(265339)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(59) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(40) false '' true 2) 0)
lbl(265362)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(60) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265385)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getLiteral' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265435)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getNumber' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265485)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(61) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(265508)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(62) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1556> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265540)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'call' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265590)	allocateL3
		getVarVar(x(0) y(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailCall' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265640)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(63) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(53) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265672)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(64) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265704)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(65) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265736)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(66) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(43) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(57) false '' true 2) 0)
lbl(265768)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'sendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(265837)	allocateL5
		getVarVar(y(0) x(0))
		getVarVar(y(1) y(2))
		move(g(47) x(2))
		inlineDot(x(2) 'tailSendMsg' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(3) x(0) y(4))
		move(y(3) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(265906)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'applMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(265956)	allocateL3
		getVarVar(y(0) x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'tailApplMeth' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(1) x(0) y(2))
		move(y(1) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1557> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266006)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(68) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266029)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(69) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1551> 5)
lbl(266052)	allocateL4
		getVarVar(y(0) y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		move(y(2) x(0))
		move(g(70) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(266090)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(71) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266132)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(73) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genCall(gci(g(67) false '' true 2) 0)
lbl(266174)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(74) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266203)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(75) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266232)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(76) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266261)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(77) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266290)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266331)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'funReturn' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266372)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(78) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266401)	allocateL3
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(y(1) x(0))
		move(g(79) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL3
		genFastCall(<Q: 1553> 7)
lbl(266430)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testLiteral' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266495)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testNumber' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266560)	allocateL6
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(47) x(3))
		inlineDot(x(3) 'testRecord' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		moveMoveXYYX(x(0) y(5) y(3) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(5) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(52) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(266634)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'testList' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1553> 7)
lbl(266689)	allocateL5
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(47) x(3))
		inlineDot(x(3) 'testBool' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		moveMoveXYYX(x(0) y(4) y(2) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1553> 6)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(266757)	allocateL4
		getVarVar(x(0) y(0))
		move(g(47) x(3))
		inlineDot(x(3) 'match' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(0) y(3) y(1) x(0))
		move(x(6) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(3) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1555> 7)
lbl(266812)	allocateL2
		getVariable(x(0))
		move(g(47) x(2))
		inlineDot(x(2) 'getVariable' x(3) cache)
		callBI('Label' [x(0)]#[x(4)])
		callBI('.' [x(3) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genFastCall(<Q: 1550> 5)
lbl(266853)	allocateL3
		getVarVar(x(0) x(2))
		move(g(47) x(3))
		inlineDot(x(3) 'getVarVar' x(4) cache)
		callBI('Label' [x(0)]#[x(5)])
		callBI('.' [x(4) x(5)]#[x(6)])
		callBI('Label' [x(2)]#[x(4)])
		callBI('.' [x(6) x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		moveMoveXYYX(x(2) y(2) y(0) x(0))
		move(x(5) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1550> 4)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1550> 5)
lbl(266911)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(80) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(57) false '' true 2) 0)
lbl(266934)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(81) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genCall(gci(g(40) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genCall(gci(g(41) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(40) false '' true 2) 0)
lbl(266985)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(82) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267008)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(83) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genCall(gci(g(53) false '' true 2) 0)
lbl(267031)	allocateL2
		getVariable(y(0))
		moveMoveXYYX(x(1) y(1) y(1) x(0))
		move(g(84) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1552> 5)
lbl(267054)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(85) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genCall(gci(g(86) false '' true 2) 0)
lbl(267086)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(87) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267118)	allocateL3
		getVarVar(y(0) y(1))
		moveMoveXYYX(x(1) y(2) y(2) x(0))
		move(g(88) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1551> 5)
lbl(267150)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(89) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267192)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(90) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267234)	allocateL5
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYYX(x(1) y(4) y(4) x(0))
		move(g(91) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genCall(gci(g(72) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		deAllocateL5
		genCall(gci(g(67) false '' true 2) 0)
lbl(267285)	allocateL4
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYYX(x(1) y(3) y(3) x(0))
		move(g(92) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		deAllocateL4
		genFastCall(<Q: 1551> 5)
lbl(267327)	allocateL5
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(y(3) x(0))
		move(g(93) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		genFastCall(<Q: 1549> 4)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		genCall(gci(g(86) false '' false 2) 0)
		moveMoveYXYX(y(3) x(0) y(2) x(1))
		move(y(4) x(2))
		deAllocateL5
		genFastCall(<Q: 1553> 7)
lbl(267375)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(94) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267432)	allocateL6
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(2) y(5))
		move(y(4) x(0))
		move(g(95) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(2) x(1))
		genFastCall(<Q: 1551> 4)
		moveMoveYXYX(y(4) x(0) y(3) x(1))
		move(y(5) x(2))
		deAllocateL6
		genFastCall(<Q: 1553> 7)
lbl(267489)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(1180)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(263735)
lbl(267504)	move(y(117) x(0))
		inlineDot(x(0) isUniqueName x(7) cache)
		inlineDot(x(0) isCopyableName x(8) cache)
		inlineDot(x(0) isCopyablePredicateRef x(9) cache)
lbl(267525)	definition(x(10) 267620 pid('FindProcSub' 3 pos('./compiler/Assembler.oz' 153 5) nil 7) <Q: 1559> [y(116) y(119)])
		match(x(0) ht(267605 [onScalar(nil 267534) onRecord('|' 2 267558)]))
lbl(267534)	move(g(0) x(0))
		inlineDot(x(0) valueToVirtualString x(4) cache)
		move(x(1) x(0))
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(267558)	getVarVar(x(0) x(3))
		move(g(1) x(4))
		callBI('.' [x(4) x(0)]#[x(5)])
		testBI('==' [x(5) x(1)]#[x(6)] 267599)
		getRecord('#' 3 x(2))
		unifyLiteral('<R: ')
		unifyVariable(x(3))
		unifyLiteral('>')
		move(g(0) x(1))
		inlineDot(x(1) valueToVirtualString x(5) cache)
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(5) 4)
lbl(267599)	move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
lbl(267605)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(162)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267525)
lbl(267620)	definition(x(10) 267646 pid('FindProc' 2 pos('./compiler/Assembler.oz' 165 5) nil 4) <Q: 1560> [y(119)])
		move(g(0) x(2))
		callBI('Arity' [x(2)]#[x(3)])
		move(x(1) x(2))
		move(x(0) x(1))
		move(x(3) x(0))
		genFastCall(<Q: 1559> 7)
		endDefinition(267620)
lbl(267646)	definition(x(10) 267716 pid('ListToVirtualString' 4 pos('./compiler/Assembler.oz' 170 2) nil 4) <Q: 1561> nil)
		match(x(0) ht(267701 [onScalar(nil 267655) onRecord('|' 2 267659)]))
lbl(267655)	unify(x(3) x(1))
		return
lbl(267659)	allocateL5
		getVarVar(x(0) y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYYX(x(3) y(3) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(1))
		setValue(y(1))
		setConstant(' ')
		setValue(y(4))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(3) x(3))
		deAllocateL5
		genFastCall(<Q: 1561> 9)
lbl(267701)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(175)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(267646)
lbl(267716)	definition(x(10) 267794 pid('TupleSub' 6 pos('./compiler/Assembler.oz' 178 2) nil 8) <Q: 1562> nil)
		testLE(x(0) x(1) x(6) 267788)
		allocateL7
		inlinePlus1(x(0) x(6))
		callBI('.' [x(3) x(0)]#[x(7)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		move(x(7) x(0))
		move(y(3) x(1))
		createVariableMove(y(6) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(1))
		setConstant(' ')
		setValue(y(6))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(2) x(3) y(3) x(4))
		move(y(4) x(5))
		deAllocateL7
		genFastCall(<Q: 1562> 13)
lbl(267788)	unify(x(5) x(2))
		return
		endDefinition(267716)
lbl(267794)	definition(x(10) 267869 pid('TupleToVirtualString' 3 pos('./compiler/Assembler.oz' 187 2) nil 6) <Q: 1563> nil)
		allocateL6
		getRecord('#' 2 x(2))
		unifyVariable(y(0))
		unifyLiteral(')')
		callBI('Width' [x(0)]#[x(2)])
		callBI('Label' [x(0)]#[x(3)])
		inlineDot(x(0) 1 x(4) cache)
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		moveMoveXYXY(x(2) y(3) x(3) y(4))
		move(x(4) x(0))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 3 x(2))
		setValue(y(4))
		setConstant('(')
		setValue(y(5))
		moveMoveYXYX(y(3) x(1) y(1) x(3))
		moveMoveYXYX(y(2) x(4) y(0) x(5))
		putConstant(2 x(0))
		deAllocateL6
		genFastCall(<Q: 1562> 13)
		endDefinition(267794)
lbl(267869)	definition(x(10) 268320 pid('MyValueToVirtualString' 3 pos('./compiler/Assembler.oz' 193 2) nil 5) <Q: 1564> [x(7) y(116) x(8) y(0) g(2) g(3) x(9) g(4) g(1) g(5)])
		testBI('IsName' [x(0)]#[x(3)] 268023)
		match(x(0) ht(267894 [onScalar(true 267882) onScalar(false 267886) onScalar(unit 267890)]))
lbl(267882)	getLiteral('true' x(2))
		return
lbl(267886)	getLiteral('false' x(2))
		return
lbl(267890)	getLiteral('unit' x(2))
		return
lbl(267894)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) false '' false 2) 0)
		testBool(y(2) 267936 268012)
		getRecord('#' 3 y(1))
		unifyLiteral('<U: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(267936)	move(y(0) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(2) false '' false 2) 0)
		testBool(y(2) 267975 268001)
		getRecord('#' 3 y(1))
		unifyLiteral('<M: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(267975)	getRecord('#' 3 y(1))
		unifyLiteral('<N: ')
		unifyVariable(x(1))
		unifyLiteral('>')
		move(g(1) x(0))
		inlineDot(x(0) printName x(2) cache)
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(2) 2)
lbl(268001)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(203)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268012)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(199)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268023)	testBI('IsAtom' [x(0)]#[x(3)] 268101)
		move(g(3) x(1))
		testBI('HasFeature' [x(1) x(0)]#[x(3)] 268045)
		getRecord('#' 3 x(2))
		unifyLiteral('\'')
		unifyValue(x(0))
		unifyLiteral('\'')
		return
lbl(268045)	match(x(0) ht(268080 [onScalar('lbl' 268048) onScalar('pid' 268052) onScalar('ht' 268056) onScalar('onScalar' 268060) onScalar('onRecord' 268064) onScalar('gci' 268068) onScalar('ami' 268072) onScalar('pos' 268076)]))
lbl(268048)	getLiteral('\'lbl\'' x(2))
		return
lbl(268052)	getLiteral('\'pid\'' x(2))
		return
lbl(268056)	getLiteral('\'ht\'' x(2))
		return
lbl(268060)	getLiteral('\'onScalar\'' x(2))
		return
lbl(268064)	getLiteral('\'onRecord\'' x(2))
		return
lbl(268068)	getLiteral('\'gci\'' x(2))
		return
lbl(268072)	getLiteral('\'ami\'' x(2))
		return
lbl(268076)	getLiteral('\'pos\'' x(2))
		return
lbl(268080)	move(g(1) x(3))
		inlineDot(x(3) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(0 x(1))
		putConstant(0 x(2))
		tailCall(x(4) 4)
lbl(268101)	testBI('IsProcedure' [x(0)]#[x(3)] 268111)
		move(x(2) x(1))
		genFastCall(<Q: 1560> 5)
lbl(268111)	testBI('IsForeignPointer' [x(0)]#[x(3)] 268208)
		allocateL5
		callBI('ForeignPointer.toInt' [x(0)]#[x(3)])
		getRecord('#' 3 x(2))
		unifyVariable(y(0))
		unifyVariable(y(1))
		unifyLiteral('>')
		moveMoveXYXY(x(1) y(2) x(3) y(3))
		createVariableMove(y(4) x(1))
		genCall(gci(g(6) false '' false 2) 0)
		testBool(y(4) 268149 268154)
		getLiteral('<Q: ' y(0))
		branch(268165)
lbl(268149)	getLiteral('<P: ' y(0))
		branch(268165)
lbl(268154)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(231)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268165)	moveMoveYXYX(y(2) x(0) y(3) x(1))
		putConstant(unit x(2))
		callBI('Dictionary.condGet' [x(0) x(1) x(2)]#[x(3)])
		testLiteral(x(3) unit 268203)
lbl(268180)	putConstant(0 x(2))
		callBI('Dictionary.get' [x(0) x(2)]#[x(3)])
		inlinePlus1(x(3) x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(0) x(3) x(2)]#nil)
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		unify(x(2) y(1))
		deAllocateL5
		return
lbl(268203)	unify(y(1) x(3))
		deAllocateL5
		return
lbl(268208)	match(x(0) ht(268290 [onRecord('|' 2 268211) onRecord('#' 2 268252)]))
lbl(268211)	allocateL4
		getVarVar(x(0) y(0))
		getRecord('#' 2 x(2))
		unifyVariable(y(1))
		unifyLiteral(']')
		move(x(1) y(2))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1564> 6)
		putRecord('#' 2 x(1))
		setConstant('[')
		setValue(y(3))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		move(y(1) x(3))
		deAllocateL4
		genFastCall(<Q: 1561> 9)
lbl(268252)	allocateL3
		getVarVar(x(0) y(0))
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyVariable(x(3))
		unifyVariable(y(1))
		getList(x(3))
		unifyNumber(35)
		unifyLiteral(nil)
		move(x(1) y(2))
		genFastCall(<Q: 1564> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL3
		genFastCall(<Q: 1564> 7)
lbl(268290)	testBI('IsTuple' [x(0)]#[x(3)] 268297)
		genFastCall(<Q: 1563> 7)
lbl(268297)	move(g(1) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		move(x(2) x(3))
		putConstant(1000 x(1))
		putConstant(1000 x(2))
		tailCall(x(4) 4)
		endDefinition(267869)
lbl(268320)	definition(x(7) 268339 pid('InstrToVirtualString' 3 pos('./compiler/Assembler.oz' 259 2) nil 4) <Q: 1565> nil)
		testBI('IsAtom' [x(0)]#[x(3)] 268334)
		unify(x(2) x(0))
		return
lbl(268334)	genFastCall(<Q: 1563> 7)
		endDefinition(268320)
lbl(268339)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: InstrsHd> <M: InstrsTl> <M: LabelDict> <M: Size>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Profile> debugInfoControl] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
lbl(268365)	definition(x(7) 268428 pid('AssemblerClass,init/fast' 2 pos('./compiler/Assembler.oz' 272 2) nil 5) <Q: 1566> [y(94)])
		inlineAt(<M: InstrsTl> x(2) cache)
		putList(x(3))
		setConstant('skip')
		setValue(x(2))
		inlineAssign(<M: InstrsHd> x(3) cache)
		callBI('NewDictionary' nil#[x(2)])
		inlineAssign(<M: LabelDict> x(2) cache)
		move(g(0) x(2))
		inlineAssign(<M: Size> x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) <M: Profile> x(4) cache)
		unify(x(4) x(0))
		getSelf(x(0))
		inlineDot(x(0) debugInfoControl x(3) cache)
		unify(x(3) x(1))
		return
		endDefinition(268365)
lbl(268428)	definition(x(8) 268463 pid('AssemblerClass,init/slow' 1 pos('./compiler/Assembler.oz' 272 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1566> 5)
		endDefinition(268428)
lbl(268463)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(268473)	definition(x(7) 268498 pid('AssemblerClass,newLabel/fast' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) <Q: 1567> [g(5)])
		callBI('NewName' nil#[x(1)])
		unify(x(1) x(0))
		inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268473)
lbl(268498)	definition(x(8) 268524 pid('AssemblerClass,newLabel/slow' 1 pos('./compiler/Assembler.oz' 281 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1567> 3)
		endDefinition(268498)
lbl(268524)	putRecord('#' [1 2 fast] x(10))
		setConstant(newLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268534)	definition(x(7) 268563 pid('AssemblerClass,declareLabel/fast' 1 pos('./compiler/Assembler.oz' 285 2) nil 3) <Q: 1568> [g(6) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268550)
		return
lbl(268550)	inlineAt(<M: LabelDict> x(1) cache)
		createVariable(x(2))
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268534)
lbl(268563)	definition(x(8) 268589 pid('AssemblerClass,declareLabel/slow' 1 pos('./compiler/Assembler.oz' 285 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1568> 3)
		endDefinition(268563)
lbl(268589)	putRecord('#' [1 2 fast] x(11))
		setConstant(declareLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268599)	definition(x(7) 268619 pid('AssemblerClass,isLabelUsed/fast' 2 pos('./compiler/Assembler.oz' 290 2) nil 4) <Q: 1569> [g(6)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.member' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(268599)
lbl(268619)	definition(x(8) 268654 pid('AssemblerClass,isLabelUsed/slow' 1 pos('./compiler/Assembler.oz' 290 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1569> 5)
		endDefinition(268619)
lbl(268654)	putRecord('#' [1 2 fast] x(12))
		setConstant(isLabelUsed)
		setValue(x(8))
		setValue(x(7))
lbl(268664)	definition(x(7) 268712 pid('AssemblerClass,setLabel/fast' 1 pos('./compiler/Assembler.oz' 293 2) nil 3) <Q: 1570> [g(6) g(1) g(5)])
		inlineAt(<M: LabelDict> x(1) cache)
		testBI('Dictionary.member' [x(1) x(0)]#[x(2)] 268696)
		inlineAt(<M: LabelDict> x(1) cache)
		callBI('Dictionary.get' [x(1) x(0)]#[x(2)])
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(2))
		return
lbl(268696)	inlineAt(<M: LabelDict> x(1) cache)
		inlineAt(<M: Size> x(2) cache)
		callBI('Dictionary.put' [x(1) x(0) x(2)]#nil)
		return
		endDefinition(268664)
lbl(268712)	definition(x(8) 268738 pid('AssemblerClass,setLabel/slow' 1 pos('./compiler/Assembler.oz' 293 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1570> 3)
		endDefinition(268712)
lbl(268738)	putRecord('#' [1 2 fast] x(13))
		setConstant(setLabel)
		setValue(x(8))
		setValue(x(7))
lbl(268748)	definition(x(7) 268818 pid('AssemblerClass,checkLabels/fast' 0 pos('./compiler/Assembler.oz' 300 2) nil 3) <Q: 1571> [g(7) g(8)])
		inlineAt(<M: LabelDict> x(0) cache)
		callBI('Dictionary.entries' [x(0)]#[x(2)])
lbl(268762)	definition(x(1) 268810 pid('' 1 pos('./compiler/Assembler.oz' 302 6) nil 3) unit [g(1)])
		shallowGuard(268797)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(268778)	shallowThen
		testBI('IsFree' [x(2)]#[x(0)] 268796)
		putRecord(compiler 3 x(0))
		setConstant(assembler)
		setConstant(undeclaredLabel)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(268796)	return
lbl(268797)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(302)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(268762)
lbl(268810)	move(x(2) x(0))
		genFastCall(<P: 34> 5)
		endDefinition(268748)
lbl(268818)	definition(x(8) 268832 pid('AssemblerClass,checkLabels/slow' 1 pos('./compiler/Assembler.oz' 300 2) nil 1) unit nil)
		getLiteral(checkLabels x(0))
		genFastCall(<Q: 1571> 1)
		endDefinition(268818)
lbl(268832)	putRecord('#' [1 2 fast] x(14))
		setConstant(checkLabels)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(1))
lbl(268844)	definition(x(7) 269249 pid('AssemblerClass,append/fast' 1 pos('./compiler/Assembler.oz' 308 2) nil 5) <Q: 1572> [y(1) y(0)])
		allocateL2
		move(x(0) y(0))
		match(y(0) ht(269133 [onRecord('definition' 5 268857) onRecord('definitionCopy' 5 268869) onRecord('endDefinition' 1 268881) onRecord('branch' 1 268891) onRecord('thread' 1 268901) onRecord('exHandler' 1 268911) onRecord('createCond' 1 268921) onRecord('nextClause' 1 268931) onRecord('shallowGuard' 1 268941) onRecord('testBI' 3 268951) onRecord('testLT' 4 268963) onRecord('testLE' 4 268975) onRecord('testLiteral' 3 268987) onRecord('testNumber' 3 268999) onRecord('testBool' 3 269011) onRecord('testRecord' 4 269030) onRecord('testList' 2 269042) onRecord('match' 2 269054) onRecord('lockThread' 2 269125)]))
lbl(268857)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268869)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268881)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268891)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268901)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268911)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268921)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268931)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268941)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268951)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268963)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268975)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268987)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(268999)	getVoid(2)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(269011)	getVoid(1)
		getVarVar(x(1) y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		move(y(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(269030)	getVoid(3)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(269042)	getVoid(1)
		getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		branch(269133)
lbl(269054)	getVoid(1)
		getVariable(x(1))
		getRecord('ht' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(y(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
		getSelf(x(2))
lbl(269074)	definition(x(1) 269117 pid('' 1 pos('./compiler/Assembler.oz' 338 2) nil 3) unit [x(2) g(0)])
		move(g(0) x(1))
		setSelf(x(1))
		match(x(0) ht(269102 [onRecord('onScalar' 2 269088) onRecord('onRecord' 3 269095)]))
lbl(269088)	getVoid(1)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269095)	getVoid(2)
		getVariable(x(0))
		genCall(gci(g(1) true declareLabel true 1) 0)
lbl(269102)	putRecord(kernel 3 x(2))
		setConstant(noElse)
		setConstant(342)
		setValue(x(0))
		callBI('Exception.raiseError' [x(2)]#nil)
		endDefinition(269074)
lbl(269117)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(269133)
lbl(269125)	getVariable(x(1))
		move(x(1) x(0))
		genCall(gci(g(0) true declareLabel false 1) 0)
lbl(269133)	putList(x(0))
		setValue(y(0))
		setVariable(x(1))
		inlineAt(<M: InstrsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: InstrsTl> x(1) cache)
		inlineAt(<M: Size> x(0) cache)
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		move(g(1) x(3))
		callBI('.' [x(3) x(2)]#[x(4)])
		inlinePlus(x(0) x(4) x(2))
		inlineAssign(<M: Size> x(2) cache)
		match(y(0) ht(269245 [onRecord('definition' 5 269181) onRecord('definitionCopy' 5 269213)]))
lbl(269181)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269200 269202)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269200)	deAllocateL2
		return
lbl(269202)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(351)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269213)	getSelf(x(0))
		inlineDot(x(0) <M: Profile> x(0) cache)
		testBool(x(0) 269232 269234)
		putConstant('profileProc' x(0))
		deAllocateL2
		genCall(gci(g(0) true append true 1) 0)
lbl(269232)	deAllocateL2
		return
lbl(269234)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(355)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(269245)	deAllocateL2
		return
		endDefinition(268844)
lbl(269249)	definition(x(8) 269275 pid('AssemblerClass,append/slow' 1 pos('./compiler/Assembler.oz' 308 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1572> 3)
		endDefinition(269249)
lbl(269275)	putRecord('#' [1 2 fast] x(15))
		setConstant(append)
		setValue(x(8))
		setValue(x(7))
lbl(269285)	definition(x(7) 269415 pid('AssemblerClass,output/fast' 1 pos('./compiler/Assembler.oz' 361 2) nil 6) <Q: 1573> [y(1) g(5) g(7)])
		allocateL3
		move(x(0) y(0))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		callBI('NewDictionary' nil#[x(0)])
		callBI('NewDictionary' nil#[x(1)])
		putConstant(0 x(2))
		putConstant(0 x(3))
		callBI('Dictionary.put' [x(1) x(2) x(3)]#nil)
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.entries' [x(2)]#[x(3)])
lbl(269321)	definition(x(2) 269362 pid('' 1 pos('./compiler/Assembler.oz' 367 6) nil 3) unit [g(1) x(0)])
		shallowGuard(269349)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(269337)	shallowThen
		testBI('IsDet' [x(2)]#[x(0)] 269348)
		move(g(1) x(0))
		callBI('Dictionary.put' [x(0) x(2) x(1)]#nil)
lbl(269348)	return
lbl(269349)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(367)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(269321)
lbl(269362)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<P: 34> 4)
		getRecord('#' 4 y(0))
		unifyLiteral('%% Code Size:\n')
		unifyVariable(x(5))
		unifyLiteral(' % words\n')
		unifyVariable(x(4))
		inlineAt(<M: Size> x(0) cache)
		unify(x(0) x(5))
		inlineAt(<M: InstrsHd> x(0) cache)
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		putConstant(0 x(3))
		deAllocateL3
		genCall(gci(g(0) true <M: OutputSub> true 5) 0)
		endDefinition(269285)
lbl(269415)	definition(x(8) 269441 pid('AssemblerClass,output/slow' 1 pos('./compiler/Assembler.oz' 361 2) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1573> 3)
		endDefinition(269415)
lbl(269441)	putRecord('#' [1 2 fast] x(16))
		setConstant(output)
		setValue(x(8))
		setValue(x(7))
lbl(269451)	definition(x(7) 269598 pid('AssemblerClass,OutputSub/fast' 5 pos('./compiler/Assembler.oz' 375 2) nil 9) <Q: 1574> [g(6) y(1) y(0)])
		match(x(0) ht(269583 [onScalar(nil 269460) onRecord('|' 2 269464)]))
lbl(269460)	getLiteral(nil x(4))
		return
lbl(269464)	allocateL8
		getVarVar(x(0) x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(0) y(4) x(5) y(5))
		createVariable(y(6))
		testBI('Dictionary.member' [x(1) x(3)]#[x(6)] 269519)
		getRecord('#' 4 y(6))
		unifyLiteral('lbl(')
		unifyValue(y(2))
		unifyLiteral(')')
		unifyVariable(x(6))
		putConstant(100 x(7))
		testLT(x(3) x(7) x(8) 269514)
		getLiteral('\t\t' x(6))
		branch(269522)
lbl(269514)	getLiteral('\t' x(6))
		branch(269522)
lbl(269519)	getLiteral('\t\t' y(6))
lbl(269522)	move(y(4) x(0))
		createVariableMove(y(7) x(1))
		genCall(gci(g(1) true <M: TranslateInstrLabels> false 2) 0)
		getRecord('#' 4 y(3))
		unifyValVar(y(6) x(2))
		unifyLiteral('\n')
		unifyVariable(y(3))
		moveMoveYXYX(y(7) x(0) y(1) x(1))
		genFastCall(<Q: 1565> 6)
		move(y(4) x(0))
		callBI('Label' [x(0)]#[x(1)])
		move(g(2) x(0))
		callBI('.' [x(0) x(1)]#[x(2)])
		move(y(2) x(1))
		inlinePlus(x(1) x(2) x(3))
		moveMoveYXYX(y(5) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(3) x(4))
		deAllocateL8
		genCall(gci(g(1) true <M: OutputSub> true 5) 0)
lbl(269583)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(390)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(269451)
lbl(269598)	definition(x(8) 269651 pid('AssemblerClass,OutputSub/slow' 1 pos('./compiler/Assembler.oz' 375 2) nil 6) unit nil)
		putConstant(5 x(5))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(5))
		inlineDot(x(0) 1 x(5) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		inlineDot(x(0) 4 x(3) cache)
		inlineDot(x(0) 5 x(4) cache)
		move(x(5) x(0))
		genFastCall(<Q: 1574> 11)
		endDefinition(269598)
lbl(269651)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: OutputSub>)
		setValue(x(8))
		setValue(x(7))
lbl(269661)	definition(x(7) 269735 pid('AssemblerClass,load/fast' 2 pos('./compiler/Assembler.oz' 393 2) nil 3) <Q: 1575> [y(1) y(122) y(123)])
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true <M: MarkEnd> false 0) 0)
		inlineAt(<M: Size> x(0) cache)
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) false '' false 2) 0)
		inlineAt(<M: InstrsHd> x(0) cache)
		getSelf(x(2))
lbl(269694)	definition(x(1) 269718 pid('' 1 pos('./compiler/Assembler.oz' 397 6) nil 3) unit [x(2) y(2)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(<M: LabelDict> x(2) cache)
		move(g(1) x(1))
		genFastCall(<Q: 1558> 7)
		endDefinition(269694)
lbl(269718)	genFastCall(<P: 34> 4)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL3
		genCall(gci(g(2) false '' true 3) 0)
		endDefinition(269661)
lbl(269735)	definition(x(8) 269770 pid('AssemblerClass,load/slow' 1 pos('./compiler/Assembler.oz' 393 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1575> 5)
		endDefinition(269735)
lbl(269770)	putRecord('#' [1 2 fast] x(18))
		setConstant(load)
		setValue(x(8))
		setValue(x(7))
lbl(269780)	definition(x(7) 269800 pid('AssemblerClass,MarkEnd/fast' 0 pos('./compiler/Assembler.oz' 401 2) nil 2) <Q: 1576> nil)
		putConstant(nil x(0))
		inlineAt(<M: InstrsTl> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(269780)
lbl(269800)	definition(x(8) 269814 pid('AssemblerClass,MarkEnd/slow' 1 pos('./compiler/Assembler.oz' 401 2) nil 1) unit nil)
		getLiteral(<M: MarkEnd> x(0))
		genFastCall(<Q: 1576> 1)
		endDefinition(269800)
lbl(269814)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: MarkEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(269824)	definition(x(7) 270374 pid('AssemblerClass,TranslateInstrLabels/fast' 2 pos('./compiler/Assembler.oz' 405 2) nil 8) <Q: 1577> [g(1)])
		match(x(0) ht(270368 [onRecord('definition' 5 269833) onRecord('definitionCopy' 5 269864) onRecord('endDefinition' 1 269895) onRecord('branch' 1 269912) onRecord('thread' 1 269929) onRecord('exHandler' 1 269946) onRecord('createCond' 1 269963) onRecord('nextClause' 1 269980) onRecord('shallowGuard' 1 269997) onRecord('testBI' 3 270014) onRecord('testLT' 4 270038) onRecord('testLE' 4 270065) onRecord('testLiteral' 3 270092) onRecord('testNumber' 3 270116) onRecord('testRecord' 4 270140) onRecord('testList' 2 270167) onRecord('testBool' 3 270187) onRecord('match' 2 270219) onRecord('lockThread' 2 270348)]))
lbl(269833)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definition' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(269864)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		getVariable(x(5))
		inlineAt(<M: LabelDict> x(6) cache)
		callBI('Dictionary.get' [x(6) x(2)]#[x(7)])
		getRecord('definitionCopy' 5 x(1))
		unifyValue(x(0))
		unifyValue(x(7))
		unifyValue(x(3))
		unifyValue(x(4))
		unifyValue(x(5))
		return
lbl(269895)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('endDefinition' 1 x(1))
		unifyValue(x(3))
		return
lbl(269912)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('branch' 1 x(1))
		unifyValue(x(3))
		return
lbl(269929)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('thread' 1 x(1))
		unifyValue(x(3))
		return
lbl(269946)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('exHandler' 1 x(1))
		unifyValue(x(3))
		return
lbl(269963)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('createCond' 1 x(1))
		unifyValue(x(3))
		return
lbl(269980)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('nextClause' 1 x(1))
		unifyValue(x(3))
		return
lbl(269997)	getVariable(x(0))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(3)])
		getRecord('shallowGuard' 1 x(1))
		unifyValue(x(3))
		return
lbl(270014)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testBI' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270038)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLT' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270065)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testLE' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270092)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testLiteral' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270116)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('testNumber' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(5))
		return
lbl(270140)	getVarVar(x(0) x(2))
		getVarVar(x(3) x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('testRecord' 4 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270167)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(2)]#[x(4)])
		getRecord('testList' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(4))
		return
lbl(270187)	getVarVar(x(0) x(2))
		getVariable(x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(2)]#[x(5)])
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(3)]#[x(4)])
		getRecord('testBool' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		unifyValue(x(4))
		return
lbl(270219)	allocateL4
		getVarVar(y(0) x(3))
		getRecord('ht' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(x(3))
		inlineAt(<M: LabelDict> x(2) cache)
		callBI('Dictionary.get' [x(2) x(0)]#[x(4)])
		getSelf(x(5))
lbl(270241)	definition(x(6) 270314 pid('' 2 pos('./compiler/Assembler.oz' 461 6) nil 7) unit [x(5) g(0)])
		move(g(0) x(2))
		setSelf(x(2))
		match(x(0) ht(270299 [onRecord('onScalar' 2 270255) onRecord('onRecord' 3 270275)]))
lbl(270255)	getVarVar(x(0) x(3))
		inlineAt(<M: LabelDict> x(4) cache)
		callBI('Dictionary.get' [x(4) x(3)]#[x(5)])
		getRecord('onScalar' 2 x(1))
		unifyValue(x(0))
		unifyValue(x(5))
		return
lbl(270275)	getVarVar(x(0) x(3))
		getVariable(x(4))
		inlineAt(<M: LabelDict> x(5) cache)
		callBI('Dictionary.get' [x(5) x(4)]#[x(6)])
		getRecord('onRecord' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(3))
		unifyValue(x(6))
		return
lbl(270299)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(468)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270241)
lbl(270314)	moveMoveXYXY(x(1) y(1) x(4) y(2))
		move(x(3) x(0))
		move(x(6) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 29> 6)
		getRecord('match' 2 y(1))
		unifyValVar(y(0) x(0))
		getRecord('ht' 2 x(0))
		unifyValue(y(2))
		unifyValue(y(3))
		deAllocateL4
		return
lbl(270348)	getVarVar(x(0) x(2))
		inlineAt(<M: LabelDict> x(3) cache)
		callBI('Dictionary.get' [x(3) x(0)]#[x(4)])
		getRecord('lockThread' 2 x(1))
		unifyValue(x(4))
		unifyValue(x(2))
		return
lbl(270368)	unify(x(1) x(0))
		return
		endDefinition(269824)
lbl(270374)	definition(x(8) 270409 pid('AssemblerClass,TranslateInstrLabels/slow' 1 pos('./compiler/Assembler.oz' 405 2) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1577> 5)
		endDefinition(270374)
lbl(270409)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: TranslateInstrLabels>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 12 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('AssemblerClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(270459)	definition(x(0) 270478 pid('RecordArityWidth' 2 pos('./compiler/Assembler.oz' 481 3) nil 3) <Q: 1578> nil)
		testBI('IsInt' [x(0)]#[x(2)] 270473)
		unify(x(1) x(0))
		return
lbl(270473)	genFastCall(<P: 24> 5)
		endDefinition(270459)
lbl(270478)	definition(x(0) 270534 pid('GetClears' 3 pos('./compiler/Assembler.oz' 487 3) nil 5) <Q: 1579> nil)
		match(x(0) ht(270519 [onScalar(nil 270487) onRecord('|' 2 270494)]))
lbl(270487)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(270494)	getVarVar(x(3) x(4))
		testRecord(x(3) clear 1 270512)
lbl(270502)	getListValVar(x(1) x(3) x(1))
		move(x(4) x(0))
		genFastCall(<Q: 1579> 7)
lbl(270512)	getLiteral(nil x(1))
		unify(x(2) x(0))
		return
lbl(270519)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(499)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270478)
lbl(270534)	definition(x(0) 270595 pid('SetVoids' 4 pos('./compiler/Assembler.oz' 502 3) nil 6) <Q: 1580> nil)
		match(x(0) ht(270580 [onScalar(nil 270543) onRecord('|' 2 270550)]))
lbl(270543)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270550)	getVarVar(x(4) x(5))
		testRecord(x(4) 'setVoid' 1 270573)
lbl(270558)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1580> 9)
lbl(270573)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(513)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270534)
lbl(270595)	definition(x(0) 270656 pid('UnifyVoids' 4 pos('./compiler/Assembler.oz' 516 3) nil 6) <Q: 1581> nil)
		match(x(0) ht(270641 [onScalar(nil 270604) onRecord('|' 2 270611)]))
lbl(270604)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270611)	getVarVar(x(4) x(5))
		testRecord(x(4) 'unifyVoid' 1 270634)
lbl(270619)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1581> 9)
lbl(270634)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270641)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(527)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270595)
lbl(270656)	definition(x(0) 270717 pid('GetVoids' 4 pos('./compiler/Assembler.oz' 530 3) nil 6) <Q: 1582> nil)
		match(x(0) ht(270702 [onScalar(nil 270665) onRecord('|' 2 270672)]))
lbl(270665)	unify(x(2) x(1))
		getLiteral(nil x(3))
		return
lbl(270672)	getVarVar(x(4) x(5))
		testRecord(x(4) 'getVoid' 1 270695)
lbl(270680)	getVariable(x(0))
		inlinePlus(x(1) x(0) x(4))
		move(x(5) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1582> 9)
lbl(270695)	unify(x(2) x(1))
		unify(x(3) x(0))
		return
lbl(270702)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(541)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270656)
lbl(270717)	definition(x(0) 270828 pid('MakeDeAllocate' 2 pos('./compiler/Assembler.oz' 544 3) nil 2) <Q: 1583> nil)
		match(x(0) ht(270817 [onScalar(0 270726) onScalar(1 270727) onScalar(2 270736) onScalar(3 270745) onScalar(4 270754) onScalar(5 270763) onScalar(6 270772) onScalar(7 270781) onScalar(8 270790) onScalar(9 270799) onScalar(10 270808)]))
lbl(270726)	return
lbl(270727)	putConstant('deAllocateL1' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270736)	putConstant('deAllocateL2' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270745)	putConstant('deAllocateL3' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270754)	putConstant('deAllocateL4' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270763)	putConstant('deAllocateL5' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270772)	putConstant('deAllocateL6' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270781)	putConstant('deAllocateL7' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270790)	putConstant('deAllocateL8' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270799)	putConstant('deAllocateL9' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270808)	putConstant('deAllocateL10' x(0))
		tailSendMsg(append x(1) 1 cache)
lbl(270817)	putConstant('deAllocateL' x(0))
		tailSendMsg(append x(1) 1 cache)
		endDefinition(270717)
lbl(270828)	definition(x(0) 270988 pid('SkipDeadCode' 3 pos('./compiler/Assembler.oz' 560 3) nil 4) <Q: 1584> nil)
		match(x(0) ht(270973 [onScalar(nil 270837) onRecord('|' 2 270841)]))
lbl(270837)	getLiteral(nil x(2))
		return
lbl(270841)	allocateL5
		getVarVar(x(3) y(0))
		match(x(3) ht(270966 [onRecord('lbl' 1 270848) onRecord('endDefinition' 1 270902) onRecord('globalVarname' 1 270956) onRecord('localVarname' 1 270961)]))
lbl(270848)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 270879 270891)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(270879)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270891)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(563)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(270902)	getVariable(x(3))
		moveMoveXYXY(x(0) y(1) x(1) y(2))
		move(x(2) y(3))
		move(x(3) x(0))
		createVariableMove(y(4) x(1))
		sendMsg(isLabelUsed y(2) 2 cache)
		testBool(y(4) 270933 270945)
		unify(y(3) y(1))
		deAllocateL5
		return
lbl(270933)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270945)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(567)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(270956)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(270961)	unify(x(2) x(0))
		deAllocateL5
		return
lbl(270966)	move(y(0) x(0))
		deAllocateL5
		genFastCall(<Q: 1584> 7)
lbl(270973)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(575)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(270828)
lbl(270988)	definition(x(0) 271015 pid('EliminateDeadCode' 2 pos('./compiler/Assembler.oz' 578 3) nil 3) <Q: 1585> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(2))
		genFastCall(<Q: 1584> 6)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
		endDefinition(270988)
lbl(271015)	definition(x(0) 275523 pid('Peephole' 2 pos('./compiler/Assembler.oz' 582 3) nil 10) <Q: 1586> [y(118)])
		match(x(0) ht(275508 [onScalar(nil 271024) onRecord('|' 2 271025)]))
lbl(271024)	return
lbl(271025)	getVarVar(x(2) x(3))
		match(x(2) ht(275484 [onScalar('skip' 271031) onScalar('failure' 271037) onScalar('return' 271103) onScalar('clause' 271127) onRecord('lbl' 1 271182) onRecord('definition' 6 271205) onRecord('definitionCopy' 6 271257) onRecord(clear 1 271309) onRecord('move' 2 271393) onRecord('createVariable' 1 271845) onRecord('putRecord' 3 271986) onRecord('setVoid' 1 272040) onRecord('getRecord' 3 272082) onRecord('unifyValue' 1 272236) onRecord('unifyVoid' 1 272309) onRecord('allocateL' 1 272351) onRecord('deAllocateL' 1 272496) onRecord('branch' 1 272573) onRecord('funReturn' 1 272638) onRecord('callBI' 2 272662) onRecord('genCall' 2 273229) onRecord('call' 2 273400) onRecord('genFastCall' 2 273622) onRecord('marshalledFastCall' 2 273815) onRecord('sendMsg' 4 274010) onRecord('applMeth' 2 274251) onRecord('shallowGuard' 1 274501) onRecord('testBI' 3 274705) onRecord('testRecord' 4 275027) onRecord('match' 2 275087) onRecord('getVariable' 1 275351) onRecord('getVoid' 1 275424)]))
lbl(271031)	move(x(3) x(0))
		genFastCall(<Q: 1586> 5)
lbl(271037)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271085)
lbl(271046)	getVarVar(x(0) x(2))
		shallowGuard(271085)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(4))
lbl(271057)	shallowThen
		move(x(2) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271085)	putConstant('failure' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271103)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		putConstant('return' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(271127)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		testList(y(1) 271164)
lbl(271136)	getVarVar(x(0) x(2))
		testLiteral(x(0) 'wait' 271164)
		move(x(2) y(1))
		putConstant('emptyClause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271164)	putConstant('clause' x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271182)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		sendMsg(setLabel y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(271205)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definition' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271257)	allocateL3
		getVarVar(x(2) x(4))
		getVarVar(x(5) x(6))
		getVarVar(x(7) y(0))
		putRecord('definitionCopy' 5 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271309)	allocateL3
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1579> 6)
		testList(y(2) 271338)
lbl(271325)	getVariable(x(0))
		shallowGuard(271338)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(271335)	shallowThen
		branch(271384)
lbl(271338)	definition(x(1) 271378 pid('' 1 pos('./compiler/Assembler.oz' 604 2) nil 2) unit [y(0)])
		shallowGuard(271365)
		getRecord(clear 1 x(0))
		unifyVariable(x(1))
lbl(271352)	shallowThen
		putRecord('clearY' 1 x(0))
		setValue(x(1))
		tailSendMsg(append g(0) 1 cache)
lbl(271365)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(604)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(271338)
lbl(271378)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
lbl(271384)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(271393)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 271489)
lbl(271407)	getVarVar(x(4) x(5))
		shallowGuard(271489)
		getRecord('move' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(x(6))
		getRecord(x 1 x(4))
		unifyVoid(1)
		getRecord(y 1 x(6))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getRecord('move' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(8))
		getRecord(x 1 x(5))
		unifyVoid(1)
		getRecord(y 1 x(8))
		unifyVariable(x(9))
lbl(271458)	shallowThen
		putRecord('moveMoveXYXY' 4 x(0))
		setValue(x(4))
		setValue(x(6))
		setValue(x(5))
		setValue(x(8))
		move(x(7) y(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271489)	testList(y(0) 271577)
lbl(271492)	getVarVar(x(0) x(1))
		shallowGuard(271577)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271543)	shallowThen
		putRecord('moveMoveYXYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271577)	testList(y(0) 271665)
lbl(271580)	getVarVar(x(0) x(1))
		shallowGuard(271665)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getRecord(y 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(y 1 x(1))
		unifyVoid(1)
		getRecord(x 1 x(4))
		unifyVariable(x(5))
lbl(271631)	shallowThen
		putRecord('moveMoveXYYX' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271665)	testList(y(0) 271753)
lbl(271668)	getVarVar(x(0) x(1))
		shallowGuard(271753)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(y 1 x(0))
		unifyVoid(1)
		getRecord(x 1 x(2))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('move' 2 x(1))
		unifyVariable(x(1))
		unifyVariable(x(4))
		getRecord(x 1 x(1))
		unifyVoid(1)
		getRecord(y 1 x(4))
		unifyVariable(x(5))
lbl(271719)	shallowThen
		putRecord('moveMoveYXXY' 4 x(5))
		setValue(x(0))
		setValue(x(2))
		setValue(x(1))
		setValue(x(4))
		move(x(3) y(0))
		move(x(5) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271753)	testList(y(0) 271827)
lbl(271756)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(271827)
		getRecord('move' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('callBI' 2 x(1))
		unifyLiteral('funReturn')
		unifyVariable(x(1))
		getRecord('#' 2 x(1))
		unifyVariable(x(1))
		unifyLiteral(nil)
		getList(x(1))
		unifyValue(x(2))
		unifyLiteral(nil)
lbl(271799)	shallowThen
		putRecord('funReturn' 1 x(2))
		setValue(x(0))
		move(x(3) y(2))
		move(x(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(271827)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271845)	allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		testList(y(0) 271908)
lbl(271859)	getVarVar(x(4) x(5))
		shallowGuard(271908)
		getRecord('createVariable' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyVariable(x(5))
		unifyVariable(x(6))
		getRecord('move' 2 x(5))
		unifyValVar(x(4) x(5))
		getRecord(x 1 x(5))
		unifyVariable(x(7))
lbl(271889)	shallowThen
		putRecord('createVariableMove' 2 x(2))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(6))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271908)	testList(y(0) 271968)
lbl(271911)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(271968)
		getRecord('createVariable' 1 x(0))
		unifyVariable(x(0))
		getRecord(x 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(2))
		getRecord('move' 2 x(1))
		unifyValVar(x(0) x(3))
lbl(271943)	shallowThen
		putRecord('createVariableMove' 2 x(1))
		setValue(x(3))
		setValue(x(0))
		putList(x(4))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		move(y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271968)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(271986)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testLiteral(x(0) '|' 272022)
lbl(272004)	testNumber(x(4) 2 272022)
lbl(272008)	putRecord('putList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(272031)
lbl(272022)	move(y(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272031)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272040)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1580> 8)
		putRecord('setVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272082)	allocateL3
		getVarVar(x(0) x(4))
		getVariable(x(5))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(0) '|' 272218)
lbl(272100)	testNumber(x(4) 2 272218)
lbl(272104)	testRecord(x(5) x 1 272197)
lbl(272109)	move(x(5) y(1))
		testList(y(2) 272176)
lbl(272115)	getVarVar(x(0) x(2))
		shallowGuard(272176)
		getRecord('unifyValue' 1 x(0))
		unifyVariable(x(0))
		getList(x(2))
		unifyVariable(x(2))
		unifyVariable(x(4))
		getRecord('unifyVariable' 1 x(2))
		unifyVariable(x(2))
		getRecord(x 1 x(2))
		unifyVariable(x(6))
lbl(272144)	shallowThen
		putRecord('getListValVar' 3 x(3))
		setValue(y(1))
		setValue(x(0))
		setValue(x(2))
		move(x(4) y(2))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272176)	putRecord('getList' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272197)	putRecord('getList' 1 x(0))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272218)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272236)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 272291)
lbl(272250)	getVarVar(x(4) x(5))
		shallowGuard(272291)
		getRecord('unifyVariable' 1 x(4))
		unifyVariable(x(6))
lbl(272261)	shallowThen
		putRecord('unifyValVar' 2 x(2))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272291)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272309)	allocateL3
		getVariable(x(4))
		move(x(1) y(0))
		move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<Q: 1581> 8)
		putRecord('unifyVoid' 1 x(0))
		setValue(y(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272351)	allocateL2
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		match(x(0) ht(272472 [onScalar(0 272487) onScalar(1 272362) onScalar(2 272373) onScalar(3 272384) onScalar(4 272395) onScalar(5 272406) onScalar(6 272417) onScalar(7 272428) onScalar(8 272439) onScalar(9 272450) onScalar(10 272461)]))
lbl(272362)	putConstant('allocateL1' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272373)	putConstant('allocateL2' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272384)	putConstant('allocateL3' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272395)	putConstant('allocateL4' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272406)	putConstant('allocateL5' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272417)	putConstant('allocateL6' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272428)	putConstant('allocateL7' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272439)	putConstant('allocateL8' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272450)	putConstant('allocateL9' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272461)	putConstant('allocateL10' x(0))
		sendMsg(append y(0) 1 cache)
		branch(272487)
lbl(272472)	putRecord('allocateL' 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
lbl(272487)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272496)	allocateL3
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(0) y(2))
		testList(y(1) 272556)
lbl(272510)	getVarVar(x(2) x(4))
		shallowGuard(272556)
		getLiteral('return' x(2))
		getList(x(4))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('lbl' 1 x(2))
		unifyVoid(1)
		getList(x(5))
		unifyVariable(x(2))
		unifyVariable(x(5))
		getRecord('deAllocateL' 1 x(2))
		unifyValue(y(2))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(272548)	shallowThen
		move(x(4) x(0))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272556)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272573)	allocateL4
		getVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(3) y(2))
		move(y(0) x(0))
		sendMsg(declareLabel y(1) 1 cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		createVariableMove(y(3) x(2))
		genFastCall(<Q: 1584> 6)
		testList(y(3) 272617)
lbl(272604)	getVariable(x(0))
		shallowGuard(272617)
		getRecord('lbl' 1 x(0))
		unifyValue(y(0))
lbl(272614)	shallowThen
		branch(272629)
lbl(272617)	putRecord('branch' 1 x(0))
		setValue(y(0))
		sendMsg(append y(1) 1 cache)
lbl(272629)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(272638)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1585> 5)
lbl(272662)	getVarVar(x(0) x(4))
		inlineDot(x(1) debugInfoControl x(5) cache)
		testBool(x(5) 272699 273218)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(272699)	testLiteral(x(0) 'funReturn' 272788)
lbl(272703)	allocateL3
		getRecord('#' 2 x(4))
		unifyVariable(x(0))
		unifyLiteral(nil)
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) y(2))
		testList(y(1) 272769)
lbl(272729)	getVarVar(x(0) x(4))
		shallowGuard(272769)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(5))
lbl(272740)	shallowThen
		putRecord('deAllocateL' 1 x(3))
		setValue(x(5))
		putRecord('funReturn' 1 x(7))
		setValue(y(2))
		putList(x(6))
		setValue(x(7))
		setValue(x(4))
		putList(x(0))
		setValue(x(3))
		setValue(x(6))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272769)	putRecord('funReturn' 1 x(1))
		setValue(y(2))
		putList(x(0))
		setValue(x(1))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(272788)	allocateL6
		move(g(0) x(5))
		inlineDot(x(5) getInfo x(6) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		createVariableMove(y(5) x(1))
		call(x(6) 2)
		match(y(3) ht(273164 [onScalar('+1' 272820) onScalar('-1' 272856) onScalar('+' 272892) onScalar('-' 272936) onScalar('>' 272980) onScalar('>=' 273036) onScalar('^' 273092) onScalar('getReturn' 273136)]))
lbl(272820)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlinePlus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(272856)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(3))
		unifyLiteral(nil)
		putRecord('inlineMinus1' 2 x(0))
		setValue(x(2))
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(272892)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlinePlus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(272936)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineMinus' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(272980)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(273036)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		putList(x(6))
		setValue(x(2))
		setConstant(nil)
		putList(x(5))
		setValue(x(4))
		setValue(x(6))
		putRecord('#' 2 x(3))
		setValue(x(5))
		setValue(x(1))
		putRecord('callBI' 2 x(0))
		setConstant('=<')
		setValue(x(3))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(273092)	getRecord('#' 2 y(4))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('inlineUparrow' 3 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(273136)	getRecord('#' 2 y(4))
		unifyLiteral(nil)
		unifyVariable(x(0))
		getList(x(0))
		unifyVariable(x(1))
		unifyLiteral(nil)
		putRecord('getReturn' 1 x(0))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		branch(273173)
lbl(273164)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(273173)	move(y(5) x(0))
		putConstant(doesNotReturn x(1))
		putConstant(false x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		testBool(x(3) 273198 273207)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273198)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273207)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(759)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273218)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(728)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(273229)	allocateL4
		getVarVar(x(0) x(4))
		getNumber(0 x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 273311)
lbl(273249)	getVarVar(x(4) x(5))
		shallowGuard(273311)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273266)	shallowThen
		move(x(6) y(1))
		move(x(4) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1585> 5)
lbl(273311)	testList(y(2) 273382)
lbl(273314)	getVarVar(x(0) x(1))
		shallowGuard(273382)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273337)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(3) x(0))
		putConstant(4 x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord('genCall' 2 x(0))
		setValue(x(3))
		setConstant(0)
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273382)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(273400)	allocateL6
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		moveMoveXYXY(x(0) y(2) x(2) y(3))
		testList(y(1) 273506)
lbl(273417)	getVarVar(x(4) x(5))
		shallowGuard(273506)
		getRecord('deAllocateL' 1 x(4))
		unifyVariable(x(4))
		getList(x(5))
		unifyLiteral('return')
		unifyVariable(x(6))
lbl(273434)	shallowThen
		moveMoveXYXY(x(4) y(1) x(6) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273472)
lbl(273447)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(3))
		setValue(y(2))
		setValue(y(5))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		branch(273475)
lbl(273472)	unify(y(5) y(2))
lbl(273475)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(273506)	testList(y(1) 273599)
lbl(273509)	getVarVar(x(0) x(1))
		shallowGuard(273599)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273532)	shallowThen
		move(x(1) y(4))
		createVariable(y(5))
		testRecord(y(2) y 1 273565)
lbl(273543)	getRecord(x 1 y(5))
		unifyValue(y(3))
		putRecord('move' 2 x(0))
		setValue(y(2))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(273568)
lbl(273565)	unify(y(5) y(2))
lbl(273568)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailCall' 2 x(0))
		setValue(y(5))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273599)	putRecord('call' 2 x(0))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(273622)	getVarVar(x(0) x(4))
		putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 1 273659)
		allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(273659)	allocateL5
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 273732)
lbl(273676)	getVarVar(x(5) x(6))
		shallowGuard(273732)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273693)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(273732)	testList(y(2) 273797)
lbl(273735)	getVarVar(x(0) x(1))
		shallowGuard(273797)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273758)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('genFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273797)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273815)	allocateL5
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testBI('IsDet' [x(0)]#[x(5)] 273992)
lbl(273831)	testBI('IsProcedure' [x(0)]#[x(5)] 273992)
lbl(273835)	putConstant(2 x(5))
		callBI('mod' [x(4) x(5)]#[x(6)])
		testNumber(x(6) 0 273992)
lbl(273845)	moveMoveXYXY(x(0) y(3) x(4) y(4))
		testList(y(2) 273909)
lbl(273853)	getVarVar(x(5) x(6))
		shallowGuard(273909)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(273870)	shallowThen
		move(x(7) y(1))
		move(x(5) x(0))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1585> 5)
lbl(273909)	testList(y(2) 273974)
lbl(273912)	getVarVar(x(0) x(1))
		shallowGuard(273974)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(273935)	shallowThen
		move(x(1) x(0))
		move(y(0) x(1))
		genFastCall(<Q: 1583> 4)
		move(y(4) x(0))
		inlinePlus1(x(0) x(1))
		putRecord('marshalledFastCall' 2 x(0))
		setValue(y(3))
		setValue(x(1))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273974)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(273992)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(274010)	allocateL9
		getVarVar(y(0) y(1))
		getVarVar(y(2) y(3))
		moveMoveXYXY(x(1) y(4) x(3) y(5))
		move(y(2) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<Q: 1578> 4)
		testList(y(5) 274127)
lbl(274034)	getVarVar(x(0) x(1))
		shallowGuard(274127)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(0))
		getList(x(1))
		unifyLiteral('return')
		unifyVariable(x(2))
lbl(274051)	shallowThen
		moveMoveXYXY(x(0) y(5) x(2) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274089)
lbl(274064)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(3))
		setValue(y(1))
		setValue(y(8))
		move(x(3) x(0))
		sendMsg(append y(4) 1 cache)
		branch(274092)
lbl(274089)	unify(y(8) y(1))
lbl(274092)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(7) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1585> 5)
lbl(274127)	testList(y(5) 274224)
lbl(274130)	getVarVar(x(0) x(1))
		shallowGuard(274224)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274153)	shallowThen
		move(x(1) y(7))
		createVariable(y(8))
		testRecord(y(1) y 1 274186)
lbl(274164)	getRecord(x 1 y(8))
		unifyValue(y(6))
		putRecord('move' 2 x(0))
		setValue(y(1))
		setValue(y(8))
		sendMsg(append y(4) 1 cache)
		branch(274189)
lbl(274186)	unify(y(8) y(1))
lbl(274189)	moveMoveYXYX(y(7) x(0) y(4) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailSendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(8))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274224)	putRecord('sendMsg' 4 x(0))
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		setValue(y(3))
		sendMsg(append y(4) 1 cache)
		moveMoveYXYX(y(5) x(0) y(4) x(1))
		deAllocateL9
		genFastCall(<Q: 1586> 5)
lbl(274251)	allocateL6
		getVarVar(x(0) x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		move(x(4) y(4))
		testList(y(2) 274372)
lbl(274271)	getVarVar(x(5) x(6))
		shallowGuard(274372)
		getRecord('deAllocateL' 1 x(5))
		unifyVariable(x(5))
		getList(x(6))
		unifyLiteral('return')
		unifyVariable(x(7))
lbl(274288)	shallowThen
		moveMoveXYXY(x(5) y(1) x(7) y(2))
		createVariable(y(5))
		testRecord(y(4) y 1 274338)
lbl(274301)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274341)
lbl(274338)	unify(y(5) y(4))
lbl(274341)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1585> 5)
lbl(274372)	testList(y(2) 274483)
lbl(274375)	getVarVar(x(0) x(1))
		shallowGuard(274483)
		getRecord('lbl' 1 x(0))
		unifyVoid(1)
		getList(x(1))
		unifyVariable(x(0))
		unifyVoid(1)
		getRecord('deAllocateL' 1 x(0))
		unifyVariable(x(1))
lbl(274398)	shallowThen
		move(x(1) y(1))
		createVariable(y(5))
		testRecord(y(4) y 1 274449)
lbl(274409)	getRecord(x 1 y(5))
		unifyVariable(x(2))
		move(y(3) x(0))
		inlineDot(x(0) 2 x(3) cache)
		move(x(3) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1578> 4)
		putRecord('move' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		branch(274452)
lbl(274449)	unify(y(5) y(4))
lbl(274452)	moveMoveYXYX(y(1) x(0) y(0) x(1))
		genFastCall(<Q: 1583> 4)
		putRecord('tailApplMeth' 2 x(0))
		setValue(y(3))
		setValue(y(5))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274483)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1586> 5)
lbl(274501)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(0) y(3))
		testList(y(2) 274531)
lbl(274517)	getVarVar(x(4) x(5))
		testLiteral(x(4) 'shallowThen' 274531)
		move(x(5) x(0))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274531)	testList(y(2) 274609)
lbl(274534)	getVarVar(x(0) x(1))
		shallowGuard(274609)
		getRecord('getNumber' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274577)	shallowThen
		putRecord('testNumber' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274609)	testList(y(2) 274687)
lbl(274612)	getVarVar(x(0) x(1))
		shallowGuard(274687)
		getRecord('getLiteral' 2 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(1))
		unifyVariable(x(1))
		unifyVariable(x(3))
		getRecord('branch' 1 x(1))
		unifyVariable(x(1))
		getList(x(3))
		unifyVariable(x(3))
		unifyVariable(x(4))
		getRecord('lbl' 1 x(3))
		unifyValue(x(1))
		getList(x(4))
		unifyLiteral('shallowThen')
		unifyVariable(x(1))
lbl(274655)	shallowThen
		putRecord('testLiteral' 3 x(3))
		setValue(x(2))
		setValue(x(0))
		setValue(y(3))
		move(x(1) y(1))
		move(x(3) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274687)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(274705)	allocateL10
		getVarVar(y(0) y(1))
		getVariable(y(2))
		moveMoveXYXY(x(1) y(3) x(2) y(4))
		move(x(3) y(5))
		createVariable(y(6))
		testList(y(5) 274808)
lbl(274724)	getVarVar(x(0) x(4))
		shallowGuard(274808)
		getRecord('branch' 1 x(0))
		unifyVariable(x(5))
lbl(274735)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) getInfo x(6) cache)
		moveMoveXYXY(x(5) y(7) x(4) y(8))
		move(y(0) x(0))
		createVariableMove(y(9) x(1))
		call(x(6) 2)
		move(y(9) x(0))
		putConstant(negated x(1))
		putConstant(unit x(2))
		callBI('CondSelect' [x(0) x(1) x(2)]#[x(3)])
		match(x(3) ht(274774 [onScalar(unit 274808)]))
lbl(274774)	getList(y(6))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('testBI' 3 x(0))
		unifyValue(x(3))
		unifyValue(y(1))
		unifyValue(y(7))
		getList(x(1))
		unifyLiteral('skip')
		unifyVariable(x(2))
		getList(x(2))
		unifyVariable(x(4))
		unifyValue(y(8))
		getRecord('branch' 1 x(4))
		unifyValue(y(2))
lbl(274808)	move(y(6) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 274822)
		move(y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(274822)	match(y(0) ht(275009 [onScalar('<' 274825) onScalar('=<' 274871) onScalar('>=' 274917) onScalar('>' 274963)]))
lbl(274825)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275018)
lbl(274871)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(2))
		setValue(x(4))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275018)
lbl(274917)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLE' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275018)
lbl(274963)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getList(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyLiteral(nil)
		getList(x(1))
		unifyVariable(x(5))
		unifyLiteral(nil)
		putRecord('testLT' 4 x(0))
		setValue(x(4))
		setValue(x(2))
		setValue(x(5))
		setValue(y(2))
		sendMsg(append y(3) 1 cache)
		branch(275018)
lbl(275009)	move(y(4) x(0))
		sendMsg(append y(3) 1 cache)
lbl(275018)	moveMoveYXYX(y(5) x(0) y(3) x(1))
		deAllocateL10
		genFastCall(<Q: 1586> 5)
lbl(275027)	allocateL3
		getVarVar(x(0) x(4))
		getVarVar(x(5) x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testLiteral(x(4) '|' 275069)
lbl(275046)	testNumber(x(5) 2 275069)
lbl(275050)	putRecord('testList' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		branch(275078)
lbl(275069)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
lbl(275078)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1586> 5)
lbl(275087)	allocateL8
		getVarVar(x(0) x(4))
		getRecord('ht' 2 x(4))
		unifyVariable(x(4))
		unifyVariable(y(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(0) y(4))
		move(x(4) y(5))
		testList(y(0) 275221)
lbl(275115)	getVarVar(x(5) x(6))
		shallowGuard(275221)
		getRecord('onScalar' 2 x(5))
		unifyVariable(x(5))
		unifyVariable(x(7))
		getLiteral(nil x(6))
lbl(275131)	shallowThen
		testList(y(3) 275203)
lbl(275135)	getVariable(x(6))
		shallowGuard(275203)
		getRecord('lbl' 1 x(6))
		unifyValue(x(7))
lbl(275145)	shallowThen
		testBI('IsNumber' [x(5)]#[x(6)] 275171)
		putRecord('testNumber' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
		branch(275194)
lbl(275171)	testBI('IsLiteral' [x(5)]#[x(6)] 275194)
		putRecord('testLiteral' 3 x(6))
		setValue(y(4))
		setValue(x(5))
		setValue(y(5))
		move(x(6) x(0))
		sendMsg(append y(1) 1 cache)
lbl(275194)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275203)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275221)	testList(y(0) 275333)
lbl(275224)	getVarVar(x(0) x(1))
		createVariable(y(0))
		shallowGuard(275333)
		getRecord('onRecord' 3 x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		getLiteral(nil x(1))
lbl(275244)	shallowThen
		testList(y(3) 275315)
lbl(275248)	getVariable(x(1))
		shallowGuard(275315)
		getRecord('lbl' 1 x(1))
		unifyValue(x(3))
lbl(275258)	shallowThen
		moveMoveXYXY(x(0) y(6) x(2) y(7))
		testLiteral(y(6) '|' 275288)
lbl(275268)	testNumber(y(7) 2 275288)
lbl(275272)	putRecord('testList' 2 x(0))
		setValue(y(4))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
		branch(275306)
lbl(275288)	putRecord('testRecord' 4 x(0))
		setValue(y(4))
		setValue(y(6))
		setValue(y(7))
		setValue(y(5))
		sendMsg(append y(1) 1 cache)
lbl(275306)	moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1586> 5)
lbl(275315)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275333)	move(y(2) x(0))
		sendMsg(append y(1) 1 cache)
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL8
		genFastCall(<Q: 1585> 5)
lbl(275351)	allocateL4
		getVariable(x(0))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		testList(y(2) 275406)
lbl(275365)	getVarVar(x(4) x(5))
		shallowGuard(275406)
		getRecord('getVariable' 1 x(4))
		unifyVariable(x(6))
lbl(275376)	shallowThen
		putRecord('getVarVar' 2 x(4))
		setValue(x(0))
		setValue(x(6))
		move(x(5) y(3))
		move(x(4) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275406)	move(y(1) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL4
		genFastCall(<Q: 1586> 5)
lbl(275424)	allocateL5
		getVariable(x(4))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYYX(x(3) y(2) y(2) x(0))
		move(x(4) x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<Q: 1582> 8)
		testList(y(4) 275475)
lbl(275452)	getVariable(x(0))
		shallowGuard(275475)
		getRecord('getVariable' 1 x(0))
		unifyVariable(x(1))
lbl(275462)	shallowThen
		putRecord('getVoid' 1 x(0))
		setValue(y(3))
		sendMsg(append y(0) 1 cache)
lbl(275475)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		deAllocateL5
		genFastCall(<Q: 1586> 5)
lbl(275484)	allocateL2
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(0))
		sendMsg(append y(0) 1 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1586> 5)
lbl(275508)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(999)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(271015)
lbl(275523)	definition(x(0) 275689 pid('InternalAssemble' 3 pos('./compiler/Assembler.oz' 1002 3) nil 9) <Q: 1587> [y(1)])
		allocateL5
		putConstant(profile x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(5)])
		putConstant(debuginfocontrol x(3))
		putConstant(false x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(6)])
		putConstant(verify x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(7)])
		putConstant(peephole x(3))
		putConstant(true x(4))
		callBI('CondSelect' [x(1) x(3) x(4)]#[x(8)])
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		moveMoveXYXY(x(7) y(2) x(8) y(3))
		move(x(3) y(4))
		move(x(5) x(0))
		move(x(6) x(1))
		sendMsg(init y(4) 2 cache)
		unify(y(4) y(1))
		testBool(y(3) 275614 275649)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		genFastCall(<Q: 1586> 4)
		branch(275660)
lbl(275614)	definition(x(1) 275641 pid('' 1 pos('./compiler/Assembler.oz' 1014 3) nil 2) unit [y(1)])
		testRecord(x(0) 'lbl' 1 275633)
lbl(275625)	getVariable(x(0))
		tailSendMsg(setLabel g(0) 1 cache)
lbl(275633)	tailSendMsg(append g(0) 1 cache)
		endDefinition(275614)
lbl(275641)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		branch(275660)
lbl(275649)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1010)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(275660)	testBool(y(2) 275674 275676)
		move(y(1) x(0))
		deAllocateL5
		tailSendMsg(checkLabels x(0) 0 cache)
lbl(275674)	deAllocateL5
		return
lbl(275676)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(1022)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(275523)
lbl(275689)	definition(x(1) 275727 pid('Assemble' 4 pos('./compiler/Assembler.oz' 1027 3) nil 4) <Q: 1588> nil)
		allocateL3
		moveMoveXYXY(x(1) y(0) x(3) y(1))
		move(x(2) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1587> 6)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		move(y(2) x(2))
		deAllocateL3
		tailSendMsg(load x(2) 2 cache)
		endDefinition(275689)
lbl(275727)	getRecord('export' [assemble internalAssemble] g(9))
		unifyValue(x(1))
		unifyValue(x(0))
		deAllocateL
		return
		endDefinition(259269)
lbl(275739)	tailCall(x(3) 0)
		endDefinition(258975)
lbl(275744)	putList(x(3))
		setConstant(getInfo)
		setConstant(nil)
		putRecord(info [type] x(1))
		setValue(x(3))
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putList(x(8))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(7))
		setConstant(printName)
		setValue(x(8))
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord('import' ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(0))
		setValue(x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		putConstant('procedure/4' x(4))
		putConstant('procedure/3' x(5))
		putRecord('export' [assemble internalAssemble] x(1))
		setValue(x(4))
		setValue(x(5))
		createVariableMove(y(98) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(env ['Abs' 'Access' 'Acos' 'Adjoin' 'AdjoinAt' 'AdjoinList' 'Alarm' 'All' 'AllTail' 'And' 'Append' 'Arity' 'Array' 'Asin' 'Assign' 'Atan' 'Atan2' 'Atom' 'AtomToString' 'BaseObject' 'BitArray' 'Bool' 'ByNeed' 'Ceil' 'Cell' 'Char' 'Chunk' 'Class' 'CondSelect' 'Cos' 'Delay' 'Dictionary' 'Exception' 'Exchange' 'Exp' 'Filter' 'Flatten' 'Float' 'FloatToInt' 'FloatToString' 'Floor' 'FoldL' 'FoldLTail' 'FoldR' 'FoldRTail' 'For' 'ForAll' 'ForAllTail' 'ForThread' 'ForeignPointer' 'Functor' 'Get' 'HasFeature' 'Int' 'IntToFloat' 'IntToString' 'IsArray' 'IsAtom' 'IsBitArray' 'IsBool' 'IsCell' 'IsChar' 'IsChunk' 'IsClass' 'IsDet' 'IsDictionary' 'IsEven' 'IsFloat' 'IsForeignPointer' 'IsFree' 'IsInt' 'IsKinded' 'IsList' 'IsLiteral' 'IsLock' 'IsName' 'IsNat' 'IsNumber' 'IsObject' 'IsOdd' 'IsPort' 'IsProcedure' 'IsRecord' 'IsRecordC' 'IsSpace' 'IsString' 'IsThread' 'IsTuple' 'IsUnit' 'IsVirtualString' 'Label' 'Length' 'List' 'Literal' 'Lock' 'Log' 'Loop' 'MakeList' 'MakeRecord' 'MakeTuple' 'Map' 'Max' 'Member' 'Merge' 'Min' 'Name' 'New' 'NewArray' 'NewCell' 'NewChunk' 'NewDictionary' 'NewLock' 'NewName' 'NewPort' 'Not' 'Nth' 'Number' 'Object' 'Or' 'Port' 'Pow' 'Procedure' 'ProcedureArity' 'Put' 'Raise' 'Record' 'Reverse' 'Round' 'Send' 'Sin' 'Some' 'Sort' 'Space' 'Sqrt' 'String' 'StringToAtom' 'StringToFloat' 'StringToInt' 'Tan' 'TellRecord' 'Thread' 'Time' 'Tuple' 'Unit' 'Value' 'VirtualString' 'Wait' 'WaitOr' 'Width' 'WidthC' '`false`' '`true`' '`unit`'] x(4))
		setValue(y(88))
		setValue(y(34))
		setValue(y(75))
		setValue(y(82))
		setValue(y(137))
		setValue(y(136))
		setValue(y(226))
		setValue(y(119))
		setValue(y(121))
		setValue(y(43))
		setValue(y(108))
		setValue(y(135))
		setValue(y(84))
		setValue(y(74))
		setValue(y(33))
		setValue(y(76))
		setValue(y(77))
		setValue(y(19))
		setValue(y(39))
		setValue(y(194))
		setValue(y(182))
		setValue(y(21))
		setValue(y(12))
		setValue(y(68))
		setValue(y(17))
		setValue(y(25))
		setValue(y(167))
		setValue(y(197))
		setValue(y(10))
		setValue(y(72))
		setValue(y(227))
		setValue(y(103))
		setValue(y(105))
		setValue(y(32))
		setValue(y(65))
		setValue(y(123))
		setValue(y(126))
		setValue(y(63))
		setValue(y(78))
		setValue(y(79))
		setValue(y(69))
		setValue(y(114))
		setValue(y(116))
		setValue(y(115))
		setValue(y(117))
		setValue(y(129))
		setValue(y(118))
		setValue(y(120))
		setValue(y(130))
		setValue(y(195))
		setValue(y(231))
		setValue(y(178))
		setValue(y(11))
		setValue(y(56))
		setValue(y(61))
		setValue(y(62))
		setValue(y(176))
		setValue(y(38))
		setValue(y(202))
		setValue(y(42))
		setValue(y(30))
		setValue(y(50))
		setValue(y(173))
		setValue(y(201))
		setValue(y(7))
		setValue(y(131))
		setValue(y(60))
		setValue(y(64))
		setValue(y(203))
		setValue(y(5))
		setValue(y(57))
		setValue(y(6))
		setValue(y(107))
		setValue(y(26))
		setValue(y(28))
		setValue(y(40))
		setValue(y(58))
		setValue(y(86))
		setValue(y(180))
		setValue(y(59))
		setValue(y(35))
		setValue(y(127))
		setValue(y(133))
		setValue(y(138))
		setValue(y(179))
		setValue(y(46))
		setValue(y(204))
		setValue(y(90))
		setValue(y(27))
		setValue(y(174))
		setValue(y(83))
		setValue(y(110))
		setValue(y(93))
		setValue(y(14))
		setValue(y(16))
		setValue(y(66))
		setValue(y(102))
		setValue(y(106))
		setValue(y(134))
		setValue(y(89))
		setValue(y(113))
		setValue(y(9))
		setValue(y(109))
		setValue(y(125))
		setValue(y(8))
		setValue(y(20))
		setValue(y(181))
		setValue(y(175))
		setValue(y(31))
		setValue(y(172))
		setValue(y(132))
		setValue(y(29))
		setValue(y(41))
		setValue(y(36))
		setValue(y(45))
		setValue(y(111))
		setValue(y(80))
		setValue(y(199))
		setValue(y(44))
		setValue(y(18))
		setValue(y(87))
		setValue(y(101))
		setValue(y(128))
		setValue(y(177))
		setValue(y(200))
		setValue(y(141))
		setValue(y(112))
		setValue(y(70))
		setValue(y(37))
		setValue(y(71))
		setValue(y(122))
		setValue(y(124))
		setValue(y(171))
		setValue(y(67))
		setValue(y(22))
		setValue(y(47))
		setValue(y(49))
		setValue(y(48))
		setValue(y(73))
		setValue(y(140))
		setValue(y(196))
		setValue(y(229))
		setValue(y(85))
		setValue(y(15))
		setValue(y(13))
		setValue(y(51))
		setValue(y(3))
		setValue(y(4))
		setValue(y(81))
		setValue(y(139))
		setConstant(false)
		setConstant(true)
		setConstant(unit)
lbl(276130)	definition(x(2) 303188 pid('' 2 pos('./compiler/Main.oz' 25 3) nil 4) <P: 1589> [y(39) y(168) y(187) y(186) y(1) y(143) y(47) y(170) y(104) y(148) y(154) y(162) y(149) y(150) y(156) y(153) y(152) x(4) y(223) y(225) y(94) y(128) y(174) y(38) y(42) y(57) y(133) y(198)])
		putList(x(2))
		setPredicateRef(<Q: 1590>)
		setConstant(nil)
		putList(x(3))
		setPredicateRef(<Q: 1591>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1592>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1593>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: MaxWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: TabSize>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Stack>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Line>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Len>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: VS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Col>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: GlueItem>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: GlueIndent>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: PrintDepth>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: PrintWidth>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: StackOpsHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: StackOpsTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: AppendTuple>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: AppendSeparated>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: FormatLine>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecStackOps>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1594>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1595>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1596>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1597>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1598>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1599>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1600>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1601>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1602>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ErrorCount>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HeapUsed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: TimeUsed>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ThisPhaseLevel>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Raised>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Wrapper>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ToTop>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ProfileStart>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ProfileEnd>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1603>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1604>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1605>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1606>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1607>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1608>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1609>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1610>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1611>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1612>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1613>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1614>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1615>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1616>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1617>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1618>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1619>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1620>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1621>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1622>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1623>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1624>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1625>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1626>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1627>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1628>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1629>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1630>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1631>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1632>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1633>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1634>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1635>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1636>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1637>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1638>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1639>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1640>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1641>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1642>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1643>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1644>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1645>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1646>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1647>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1648>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1649>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1650>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1651>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1652>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1653>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1654>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enter>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: MergeEnv>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1655>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1656>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1657>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1658>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1659>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1660>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1661>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1662>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1663>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1664>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1665>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1666>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1667>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1668>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1669>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1670>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1671>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1672>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1673>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1674>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1675>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1676>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1677>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptException>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ParseFile>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ParseVirtualString>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecutingThread>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: InterruptLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CatchResult>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Feed>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: FeedSub>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: CompileQuery>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ExecProtected>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1678>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1679>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1680>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1681>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1682>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1683>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1684>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1685>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1686>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1687>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1688>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1689>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1690>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1691>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1692>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1693>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1694>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Registered>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: CurrentQuery>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueriesHd>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: QueriesTl>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NextId>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: RegistrationLock>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: QueueLock>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Compiler>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: NotifyQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Enqueue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ClearQueue>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Dequeue>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: RunQueue>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1695>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1696>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1697>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1698>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1699>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1700>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1701>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1702>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1703>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1704>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1705>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1706>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1707>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1708>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1709>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1710>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1711>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1712>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1713>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: Compiler>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Port>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: ServerThread>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1714>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1715>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1716>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1717>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1718>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1719>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1720>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1721>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Verbose>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: History>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: InsertedFiles>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: SourceVS>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: HasErrors>)
		setValue(x(3))
		putList(x(3))
		setConstant(<M: HasBeenTopped>)
		setValue(x(2))
		putList(x(2))
		setConstant(<M: Serve>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1722>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1723>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1724>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1725>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1726>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1727>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1728>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1729>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1730>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1731>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1732>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1733>)
		setValue(x(3))
		putList(x(3))
		setPredicateRef(<Q: 1734>)
		setValue(x(2))
lbl(277384)	definitionCopy(x(3) 303183 pid('/body' 0 pos('./compiler/Main.oz' 25 3) [once] 642) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) g(20) g(21) g(22) g(23) g(24) g(25) g(26) g(27) x(1)])
		allocateL(17)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'Type' x(8) cache)
		inlineDot(x(0) 'PrintName' x(9) cache)
		inlineDot(x(0) 'Builtins' x(10) cache)
		inlineDot(x(0) 'Unnester' x(11) cache)
		inlineDot(x(0) 'Core' x(12) cache)
		inlineDot(x(0) 'Assembler' x(13) cache)
		inlineDot(x(0) 'RunTime' x(14) cache)
lbl(277479)	definition(x(15) 277756 pid('EscapeVariableChar' 3 pos('./compiler/FormatStrings.oz' 30 6) nil 6) <Q: 1590> nil)
		shallowGuard(277743)
		getList(x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(277493)	shallowThen
		testLiteral(x(4) nil 277505)
		getList(x(0))
		unifyValue(x(3))
		unifyValue(x(2))
		return
lbl(277505)	allocateL3
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		move(x(3) y(2))
		testNumber(y(2) 96 277532)
lbl(277518)	getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277532)	testNumber(y(2) 92 277538)
		branch(277518)
lbl(277538)	putConstant(10 x(1))
		testLT(x(3) x(1) x(4) 277582)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		unify(x(1) x(5))
		deAllocateL3
		return
lbl(277582)	putConstant(16 x(1))
		testLT(x(3) x(1) x(4) 277633)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(48)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(10 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277633)	putConstant(26 x(1))
		testLT(x(3) x(1) x(4) 277684)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(48 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(16 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277684)	putConstant(32 x(1))
		testLT(x(3) x(1) x(4) 277735)
		getList(y(0))
		unifyNumber(92)
		unifyVariable(x(0))
		getList(x(0))
		unifyNumber(120)
		unifyVariable(x(1))
		getList(x(1))
		unifyNumber(49)
		unifyVariable(x(4))
		getList(x(4))
		unifyVariable(x(5))
		unifyValue(y(1))
		putConstant(65 x(0))
		inlinePlus(x(0) x(3) x(1))
		putConstant(26 x(0))
		inlineMinus(x(1) x(0) x(2))
		unify(x(2) x(5))
		deAllocateL3
		return
lbl(277735)	getList(y(0))
		unifyValue(y(2))
		unifyValue(y(1))
		deAllocateL3
		return
lbl(277743)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(30)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(277479)
lbl(277756)	definition(x(16) 277809 pid('PrintNameToVirtualString' 2 pos('./compiler/FormatStrings.oz' 41 6) nil 4) <Q: 1591> [g(1) x(15)])
		allocateL3
		callBI('AtomToString' [x(0)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(x(2) 277802)
lbl(277774)	getVarVar(x(2) x(3))
		createVariable(y(2))
		testNumber(x(2) 96 277802)
		getList(y(1))
		unifyNumber(96)
		unifyVariable(x(2))
		move(x(3) x(0))
		move(g(1) x(1))
		putConstant(nil x(3))
		deAllocateL3
		genFastCall(<P: 31> 9)
lbl(277802)	unify(y(1) y(0))
		deAllocateL3
		return
		endDefinition(277756)
lbl(277809)	definition(x(15) 277881 pid('IndentSub' 3 pos('./compiler/FormatStrings.oz' 50 6) nil 5) <Q: 1592> nil)
		putConstant(8 x(3))
		testLE(x(3) x(0) x(4) 277847)
		putConstant(8 x(3))
		inlineMinus(x(0) x(3) x(4))
		putRecord('#' 2 x(3))
		setValue(x(1))
		setConstant('\t')
		move(x(4) x(0))
		move(x(3) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277847)	putConstant(0 x(3))
		testLT(x(3) x(0) x(4) 277875)
		inlineMinus1(x(0) x(3))
		putRecord('#' 2 x(4))
		setValue(x(1))
		setConstant(' ')
		move(x(3) x(0))
		move(x(4) x(1))
		genFastCall(<Q: 1592> 7)
lbl(277875)	unify(x(2) x(1))
		return
		endDefinition(277809)
lbl(277881)	definition(x(15) 277898 pid('Indent' 2 pos('./compiler/FormatStrings.oz' 57 6) nil 3) <Q: 1593> nil)
		move(x(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1592> 7)
		endDefinition(277881)
lbl(277898)	putList(x(15))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: Col> <M: GlueIndent> <M: GlueItem> <M: Len> <M: Line> <M: MaxWidth> <M: PrintDepth> <M: PrintWidth> <M: Stack> <M: StackOpsHd> <M: StackOpsTl> <M: TabSize> <M: VS>] x(16))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		putRecord(messagePattern [indent printDepth printWidth tabsize width] x(17))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(277948)	definition(x(18) 278289 pid('Formatter,init' 1 pos('./compiler/FormatStrings.oz' 82 6) nil 3) unit [x(17) x(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(width x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 277987)
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(1))
		branch(277990)
lbl(277987)	getNumber(80 y(1))
lbl(277990)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(tabsize x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 278013)
		inlineDot(x(0) tabsize x(1) cache)
		unify(x(1) y(2))
		branch(278016)
lbl(278013)	getNumber(3 y(2))
lbl(278016)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(indent x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 278039)
		inlineDot(x(0) indent x(1) cache)
		unify(x(1) y(3))
		branch(278042)
lbl(278039)	getNumber(0 y(3))
lbl(278042)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(printDepth x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 278065)
		inlineDot(x(0) printDepth x(1) cache)
		unify(x(1) y(4))
		branch(278068)
lbl(278065)	getLiteral(unit y(4))
lbl(278068)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(printWidth x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 278091)
		inlineDot(x(0) printWidth x(1) cache)
		unify(x(1) y(5))
		branch(278094)
lbl(278091)	getLiteral(unit y(5))
lbl(278094)	move(y(1) x(0))
		inlineAssign(<M: MaxWidth> x(0) cache)
		move(y(2) x(0))
		inlineAssign(<M: TabSize> x(0) cache)
		putList(x(2))
		setValue(y(3))
		setConstant(nil)
		inlineAssign(<M: Stack> x(2) cache)
		putConstant(nil x(2))
		inlineAssign(<M: Line> x(2) cache)
		putConstant(0 x(2))
		inlineAssign(<M: Len> x(2) cache)
		move(y(3) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1593> 4)
		move(y(0) x(0))
		inlineAssign(<M: VS> x(0) cache)
		move(y(3) x(0))
		inlineAssign(<M: Col> x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		createVariable(y(0))
		testLiteral(y(4) unit 278213)
lbl(278181)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) depth x(1) cache)
		unify(x(1) y(0))
		branch(278216)
lbl(278213)	unify(y(0) y(4))
lbl(278216)	move(y(0) x(0))
		inlineAssign(<M: PrintDepth> x(0) cache)
		createVariable(y(0))
		testLiteral(y(5) unit 278262)
lbl(278230)	move(g(1) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(print x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) width x(1) cache)
		unify(x(1) y(0))
		branch(278265)
lbl(278262)	unify(y(0) y(5))
lbl(278265)	move(y(0) x(0))
		inlineAssign(<M: PrintWidth> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		deAllocateL6
		return
		endDefinition(277948)
lbl(278289)	putList(x(17))
		setConstant(init)
		setValue(x(18))
		createVariable(y(0))
lbl(278297)	definition(x(18) 278707 pid('Formatter,append/fast' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 6) <Q: 1594> [g(2) y(0) x(5)])
		match(x(0) ht(278359 [onScalar('#' 278306) onScalar(nil 278307) onRecord('|' 2 278308)]))
lbl(278306)	return
lbl(278307)	return
lbl(278308)	allocateL3
		inlineAt(<M: Len> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278359)	allocateL3
		move(x(0) y(0))
		testBI('IsAtom' [x(0)]#[x(1)] 278417)
lbl(278367)	inlineAt(<M: Len> x(0) cache)
		moveMoveXYYX(x(0) y(1) y(0) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 196> 4)
		moveMoveYXYX(y(1) x(0) y(2) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Len> x(2) cache)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 2 x(1))
		setValue(x(0))
		setValue(y(0))
		inlineAssign(<M: Line> x(1) cache)
		deAllocateL3
		return
lbl(278417)	testBI('IsNumber' [x(0)]#[x(1)] 278423)
		branch(278367)
lbl(278423)	testBI('IsTuple' [x(0)]#[x(1)] 278444)
lbl(278427)	callBI('Label' [x(0)]#[x(1)])
		testLiteral(x(1) '#' 278444)
lbl(278434)	callBI('Width' [x(0)]#[x(2)])
		putConstant(1 x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendTuple> true 3) 0)
lbl(278444)	match(y(0) ht(278692 [onRecord(pn 1 278447) onRecord(oz 1 278462) onRecord(list 2 278499) onRecord(format 1 278506)]))
lbl(278447)	getVariable(x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1591> 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278462)	getVariable(x(0))
		move(g(2) x(1))
		inlineDot(x(1) valueToVirtualString x(4) cache)
		inlineAt(<M: PrintDepth> x(5) cache)
		inlineAt(<M: PrintWidth> x(2) cache)
		move(x(5) x(1))
		createVariableMove(y(0) x(3))
		call(x(4) 4)
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(1) true append true 1) 0)
lbl(278499)	getVarVar(x(0) x(1))
		deAllocateL3
		genCall(gci(g(1) true <M: AppendSeparated> true 2) 0)
lbl(278506)	getVariable(x(0))
		match(x(0) ht(278679 [onScalar(break 278511) onScalar(indent 278566) onScalar(exdent 278587) onScalar(push 278608) onScalar(pop 278643) onRecord(glue 1 278664)]))
lbl(278511)	genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		inlineAt(<M: Stack> x(2) cache)
		inlineDot(x(2) 1 x(0) cache)
		inlineAt(<M: VS> x(1) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1593> 4)
		putRecord('#' 3 x(0))
		setValue(y(1))
		setConstant('\n')
		setValue(y(2))
		inlineAssign(<M: VS> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: Col> x(0) cache)
		deAllocateL3
		return
lbl(278566)	putList(x(0))
		setConstant(indent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278587)	putList(x(0))
		setConstant(exdent)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278608)	putRecord(push 1 x(1))
		setVariable(x(2))
		putList(x(0))
		setValue(x(1))
		setVariable(x(3))
		inlineAt(<M: StackOpsTl> x(1) cache)
		unify(x(1) x(0))
		inlineAt(<M: Len> x(0) cache)
		unify(x(0) x(2))
		inlineAssign(<M: StackOpsTl> x(3) cache)
		deAllocateL3
		return
lbl(278643)	putList(x(0))
		setConstant(pop)
		setVariable(x(1))
		inlineAt(<M: StackOpsTl> x(2) cache)
		unify(x(2) x(0))
		inlineAssign(<M: StackOpsTl> x(1) cache)
		deAllocateL3
		return
lbl(278664)	getVariable(y(0))
		genCall(gci(g(1) true <M: FormatLine> false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL3
		return
lbl(278679)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(145)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(278692)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(146)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(278297)
lbl(278707)	definition(x(19) 278733 pid('Formatter,append/slow' 1 pos('./compiler/FormatStrings.oz' 104 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1594> 3)
		endDefinition(278707)
lbl(278733)	putRecord('#' [1 2 fast] x(20))
		setConstant(append)
		setValue(x(19))
		setValue(x(18))
lbl(278743)	definition(x(18) 278772 pid('Formatter,get/fast' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) <Q: 1595> [y(0)])
		allocateL1
		move(x(0) y(0))
		genCall(gci(g(0) true <M: FormatLine> false 0) 0)
		putConstant(<M: VS> x(0))
		putConstant(nil x(1))
		callBI(ooExch [x(0) x(1)]#[x(2)])
		unify(x(2) y(0))
		deAllocateL1
		return
		endDefinition(278743)
lbl(278772)	definition(x(19) 278798 pid('Formatter,get/slow' 1 pos('./compiler/FormatStrings.oz' 150 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1595> 3)
		endDefinition(278772)
lbl(278798)	putRecord('#' [1 2 fast] x(21))
		setConstant(get)
		setValue(x(19))
		setValue(x(18))
lbl(278808)	definition(x(18) 278855 pid('Formatter,AppendTuple/fast' 3 pos('./compiler/FormatStrings.oz' 155 6) nil 4) <Q: 1596> [y(0)])
		testLE(x(1) x(2) x(3) 278852)
		allocateL3
		callBI('.' [x(0) x(1)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		move(x(3) x(0))
		genCall(gci(g(0) true append false 1) 0)
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		moveMoveYXYX(y(0) x(0) y(2) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: AppendTuple> true 3) 0)
lbl(278852)	return
		endDefinition(278808)
lbl(278855)	definition(x(19) 278896 pid('Formatter,AppendTuple/slow' 1 pos('./compiler/FormatStrings.oz' 155 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1596> 7)
		endDefinition(278855)
lbl(278896)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: AppendTuple>)
		setValue(x(19))
		setValue(x(18))
lbl(278906)	definition(x(18) 278974 pid('Formatter,AppendSeparated/fast' 2 pos('./compiler/FormatStrings.oz' 161 6) nil 2) <Q: 1597> [y(0)])
		match(x(0) ht(278959 [onScalar(nil 278915) onRecord('|' 2 278916)]))
lbl(278915)	return
lbl(278916)	allocateL2
		getVarVar(x(0) y(0))
		move(x(1) y(1))
		genCall(gci(g(0) true append false 1) 0)
		match(y(0) ht(278946 [onScalar(nil 278929) onRecord('|' 2 278931)]))
lbl(278929)	deAllocateL2
		return
lbl(278931)	move(y(1) x(0))
		genCall(gci(g(0) true append false 1) 0)
		moveMoveYXYX(y(0) x(0) y(1) x(1))
		deAllocateL2
		genCall(gci(g(0) true <M: AppendSeparated> true 2) 0)
lbl(278946)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(168)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(278959)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(278906)
lbl(278974)	definition(x(19) 279009 pid('Formatter,AppendSeparated/slow' 1 pos('./compiler/FormatStrings.oz' 161 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1597> 5)
		endDefinition(278974)
lbl(279009)	putRecord('#' [1 2 fast] x(23))
		setConstant(<M: AppendSeparated>)
		setValue(x(19))
		setValue(x(18))
lbl(279019)	definition(x(18) 279296 pid('Formatter,FormatLine/fast' 0 pos('./compiler/FormatStrings.oz' 172 6) nil 4) <Q: 1598> [y(0)])
		allocateL2
		inlineAt(<M: GlueItem> x(0) cache)
		createVariableMove(y(0) x(1))
		genFastCall(<P: 24> 4)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAt(<M: Len> x(0) cache)
		inlinePlus(x(2) x(0) x(3))
		inlineAt(<M: MaxWidth> x(0) cache)
		testLE(x(3) x(0) x(2) 279117)
lbl(279068)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueItem> x(1) cache)
		inlineAt(<M: Line> x(2) cache)
		putRecord('#' 3 x(3))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		inlineAssign(<M: VS> x(3) cache)
		inlineAt(<M: Col> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		branch(279186)
lbl(279117)	inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		testLT(x(2) x(0) x(3) 279068)
lbl(279132)	inlineAt(<M: VS> x(0) cache)
		inlineAt(<M: GlueIndent> x(2) cache)
		move(x(0) y(0))
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1593> 4)
		inlineAt(<M: Line> x(0) cache)
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('\n')
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: VS> x(1) cache)
		inlineAt(<M: GlueIndent> x(0) cache)
		inlineAssign(<M: Col> x(0) cache)
lbl(279186)	putConstant(nil x(3))
		inlineAt(<M: StackOpsTl> x(0) cache)
		unify(x(0) x(3))
		inlineAt(<M: StackOpsHd> x(0) cache)
		inlineAt(<M: Stack> x(1) cache)
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: ExecStackOps> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: Stack> x(0) cache)
		createVariable(x(0))
		inlineAssign(<M: StackOpsHd> x(0) cache)
		inlineAssign(<M: StackOpsTl> x(0) cache)
		inlineAt(<M: Col> x(0) cache)
		inlineAt(<M: Len> x(1) cache)
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: Col> x(2) cache)
		putConstant(nil x(0))
		inlineAssign(<M: Line> x(0) cache)
		putConstant(0 x(0))
		inlineAssign(<M: Len> x(0) cache)
		inlineAt(<M: Stack> x(0) cache)
		inlineDot(x(0) 1 x(0) cache)
		inlineAssign(<M: GlueIndent> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: GlueItem> x(0) cache)
		deAllocateL2
		return
		endDefinition(279019)
lbl(279296)	definition(x(19) 279310 pid('Formatter,FormatLine/slow' 1 pos('./compiler/FormatStrings.oz' 172 6) nil 1) unit nil)
		getLiteral(<M: FormatLine> x(0))
		genFastCall(<Q: 1598> 1)
		endDefinition(279296)
lbl(279310)	putRecord('#' [1 2 fast] x(24))
		setConstant(<M: FormatLine>)
		setValue(x(19))
		setValue(x(18))
lbl(279320)	definition(x(18) 279490 pid('Formatter,ExecStackOps/fast' 3 pos('./compiler/FormatStrings.oz' 191 6) nil 8) <Q: 1599> [y(0)])
		match(x(0) ht(279475 [onScalar(nil 279329) onRecord('|' 2 279333)]))
lbl(279329)	unify(x(2) x(1))
		return
lbl(279333)	allocateL3
		getVarVar(x(0) x(3))
		moveMoveXYXY(x(2) y(0) x(3) y(1))
		createVariable(y(2))
		match(x(0) ht(279450 [onScalar(pop 279347) onScalar(indent 279358) onScalar(exdent 279393) onRecord(push 1 279428)]))
lbl(279347)	inlineDot(x(1) 2 x(0) cache)
		unify(x(0) y(2))
		branch(279463)
lbl(279358)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlinePlus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279463)
lbl(279393)	getList(y(2))
		unifyVariable(x(0))
		unifyVariable(x(4))
		inlineDot(x(1) 1 x(5) cache)
		inlineAt(<M: TabSize> x(6) cache)
		inlineMinus(x(5) x(6) x(7))
		unify(x(7) x(0))
		inlineDot(x(1) 2 x(0) cache)
		unify(x(0) x(4))
		branch(279463)
lbl(279428)	getVariable(x(0))
		getList(y(2))
		unifyVariable(x(4))
		unifyValue(x(1))
		inlineAt(<M: Col> x(1) cache)
		inlinePlus(x(1) x(0) x(5))
		unify(x(5) x(4))
		branch(279463)
lbl(279450)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(201)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(279463)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(0) x(2))
		deAllocateL3
		genCall(gci(g(0) true <M: ExecStackOps> true 3) 0)
lbl(279475)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(204)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279320)
lbl(279490)	definition(x(19) 279531 pid('Formatter,ExecStackOps/slow' 1 pos('./compiler/FormatStrings.oz' 191 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1599> 7)
		endDefinition(279490)
lbl(279531)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: ExecStackOps>)
		setValue(x(19))
		setValue(x(18))
		putRecord('#' 7 x(18))
		setValue(x(17))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(25))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		moveMoveXYXY(x(5) y(5) x(6) y(6))
		moveMoveXYXY(x(7) y(7) x(8) y(8))
		moveMoveXYXY(x(9) y(9) x(10) y(10))
		moveMoveXYXY(x(11) y(11) x(12) y(12))
		moveMoveXYXY(x(13) y(13) x(14) y(14))
		move(x(18) x(1))
		move(x(16) x(2))
		move(x(15) x(4))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('Formatter' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(279618)	definition(x(7) 279672 pid('FormatStringToVirtualString' 2 pos('./compiler/FormatStrings.oz' 208 3) nil 4) <Q: 1600> [y(0)])
		allocateL3
		move(g(0) x(2))
		callBI(newObject [x(2)]#[x(3)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(3) y(2))
		putConstant(79 x(0))
		sendMsg(init y(2) [width] cache)
		move(y(0) x(0))
		sendMsg(append y(2) 1 cache)
		move(y(1) x(0))
		move(y(2) x(1))
		deAllocateL3
		tailSendMsg(get x(1) 1 cache)
		endDefinition(279618)
lbl(279672)	definition(x(7) 279698 pid('GetUsedHeap' 1 pos('./compiler/Reporter.oz' 31 3) nil 3) <Q: 1601> [y(4)])
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) x(1))
		putConstant('heap.used' x(0))
		tailCall(x(2) 2)
		endDefinition(279672)
lbl(279698)	definition(x(7) 279810 pid('NormalizeCoord' 2 pos('./compiler/Reporter.oz' 35 3) nil 4) <Q: 1602> nil)
		match(x(0) ht(279795 [onScalar(unit 279707) onRecord('pos' 3 279711) onRecord('pos' 6 279715) onRecord(fineStep 3 279731) onRecord(fineStep 6 279747) onRecord(coarseStep 3 279763) onRecord(coarseStep 6 279779)]))
lbl(279707)	getLiteral(unit x(1))
		return
lbl(279711)	unify(x(1) x(0))
		return
lbl(279715)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279731)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279747)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279763)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279779)	getVarVar(x(0) x(2))
		getVariable(x(3))
		getRecord('pos' 3 x(1))
		unifyValue(x(0))
		unifyValue(x(2))
		unifyValue(x(3))
		return
lbl(279795)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(43)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(279698)
lbl(279810)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ErrorCount> <M: HeapUsed> <M: Raised> <M: ThisPhaseLevel> <M: TimeUsed>] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		putRecord('feat' [<M: Compiler> <M: Wrapper>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(0))
lbl(279840)	definition(x(7) 279882 pid('Reporter,init/fast' 2 pos('./compiler/Reporter.oz' 50 6) nil 4) <Q: 1603> [y(0)])
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(3) cache)
		unify(x(3) x(0))
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(2) cache)
		unify(x(2) x(1))
		genCall(gci(g(0) true clearErrors false 0) 0)
		putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		return
		endDefinition(279840)
lbl(279882)	definition(x(8) 279917 pid('Reporter,init/slow' 1 pos('./compiler/Reporter.oz' 50 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1603> 5)
		endDefinition(279882)
lbl(279917)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(279927)	definition(x(7) 279952 pid('Reporter,clearErrors/fast' 0 pos('./compiler/Reporter.oz' 56 6) nil 1) <Q: 1604> nil)
		putConstant(0 x(0))
		inlineAssign(<M: ErrorCount> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
		endDefinition(279927)
lbl(279952)	definition(x(8) 279966 pid('Reporter,clearErrors/slow' 1 pos('./compiler/Reporter.oz' 56 6) nil 1) unit nil)
		getLiteral(clearErrors x(0))
		genFastCall(<Q: 1604> 1)
		endDefinition(279952)
lbl(279966)	putRecord('#' [1 2 fast] x(10))
		setConstant(clearErrors)
		setValue(x(8))
		setValue(x(7))
lbl(279976)	definition(x(7) 280065 pid('Reporter,ToTop/fast' 1 pos('./compiler/Reporter.oz' 60 6) nil 2) <Q: 1605> nil)
		inlineAt(<M: Raised> x(1) cache)
		testBool(x(1) 279992 280052)
		return
lbl(279992)	testBool(x(0) 280026 280015)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		sendMsg(notify x(1) 1 cache)
		branch(280026)
lbl(280015)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(63)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280026)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(toTop x(0))
		sendMsg(notify x(1) 1 cache)
		putConstant(true x(0))
		inlineAssign(<M: Raised> x(0) cache)
		return
lbl(280052)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(61)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(279976)
lbl(280065)	definition(x(8) 280091 pid('Reporter,ToTop/slow' 1 pos('./compiler/Reporter.oz' 60 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1605> 3)
		endDefinition(280065)
lbl(280091)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: ToTop>)
		setValue(x(8))
		setValue(x(7))
lbl(280101)	definition(x(7) 280261 pid('Reporter,ProfileStart/fast' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) <Q: 1606> [y(4) y(5)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280188 280177)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAssign(<M: TimeUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		branch(280188)
lbl(280177)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(70)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280188)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280246 280248)
		move(g(1) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(y(1) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		move(y(0) x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
lbl(280246)	deAllocateL2
		return
lbl(280248)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(74)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280101)
lbl(280261)	definition(x(8) 280287 pid('Reporter,ProfileStart/slow' 1 pos('./compiler/Reporter.oz' 69 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1606> 3)
		endDefinition(280261)
lbl(280287)	putRecord('#' [1 2 fast] x(12))
		setConstant(<M: ProfileStart>)
		setValue(x(8))
		setValue(x(7))
lbl(280297)	definition(x(7) 280610 pid('Reporter,ProfileEnd/fast' 0 pos('./compiler/Reporter.oz' 80 6) nil 3) <Q: 1607> [y(4) y(0) y(5)])
		allocateL3
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280595 280597)
lbl(280328)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		testLiteral(x(0) none 280339)
lbl(280337)	deAllocateL3
		return
lbl(280339)	inlineAt(<M: ThisPhaseLevel> x(0) cache)
		createVariable(y(0))
		match(x(0) ht(280359 [onScalar(phase 280349) onScalar(subphase 280354)]))
lbl(280349)	getLiteral('%%%         ' y(0))
		branch(280372)
lbl(280354)	getLiteral('%%%             ' y(0))
		branch(280372)
lbl(280359)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(86)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(280372)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompiletime x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280474 280463)
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant(time x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		inlineDot(x(0) user x(0) cache)
		inlineAt(<M: TimeUsed> x(1) cache)
		inlineMinus(x(0) x(1) x(2))
		putRecord('#' 4 x(1))
		setValue(y(0))
		setConstant('time: ')
		setValue(x(2))
		setConstant(' msec\n')
		move(x(0) y(1))
		move(x(1) x(0))
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(1) x(0))
		inlineAssign(<M: TimeUsed> x(0) cache)
		branch(280474)
lbl(280463)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(88)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280474)	getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showcompilememory x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280585 280574)
		createVariableMove(y(1) x(0))
		genFastCall(<Q: 1601> 2)
		move(g(2) x(0))
		inlineDot(x(0) gcDo x(1) cache)
		call(x(1) 0)
		createVariableMove(y(2) x(0))
		genFastCall(<Q: 1601> 2)
		inlineAt(<M: HeapUsed> x(0) cache)
		move(y(1) x(1))
		inlineMinus(x(1) x(0) x(2))
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('heap allocation: ')
		setValue(x(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		putRecord('#' 4 x(0))
		setValue(y(0))
		setConstant('active size: ')
		setValue(y(2))
		setConstant(' KB\n')
		genCall(gci(g(1) true userInfo false 1) 0)
		move(y(2) x(0))
		inlineAssign(<M: HeapUsed> x(0) cache)
		branch(280585)
lbl(280574)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(93)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(280585)	putConstant(none x(0))
		inlineAssign(<M: ThisPhaseLevel> x(0) cache)
		deAllocateL3
		return
lbl(280595)	deAllocateL3
		return
lbl(280597)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(81)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280297)
lbl(280610)	definition(x(8) 280624 pid('Reporter,ProfileEnd/slow' 1 pos('./compiler/Reporter.oz' 80 6) nil 1) unit nil)
		getLiteral(<M: ProfileEnd> x(0))
		genFastCall(<Q: 1607> 1)
		endDefinition(280610)
lbl(280624)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: ProfileEnd>)
		setValue(x(8))
		setValue(x(7))
lbl(280634)	definition(x(7) 280744 pid('Reporter,logDeclare/fast' 1 pos('./compiler/Reporter.oz' 106 6) nil 6) <Q: 1608> [y(6) y(0)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		move(x(0) y(0))
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280729 280731)
		move(y(0) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1602> 4)
		testRecord(y(1) 'pos' 3 280722)
lbl(280682)	getVarVar(x(0) x(1))
		getVariable(x(2))
		move(g(0) x(3))
		inlineDot(x(3) formatPos x(5) cache)
		putConstant(unit x(3))
		createVariableMove(y(0) x(4))
		call(x(5) 5)
		putRecord('#' 3 x(0))
		setConstant('%%% processing query in ')
		setValue(y(0))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 2) 0)
lbl(280722)	putConstant('%%% processing query' x(0))
		deAllocateL2
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280729)	deAllocateL2
		return
lbl(280731)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(107)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280634)
lbl(280744)	definition(x(8) 280770 pid('Reporter,logDeclare/slow' 1 pos('./compiler/Reporter.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1608> 3)
		endDefinition(280744)
lbl(280770)	putRecord('#' [1 2 fast] x(14))
		setConstant(logDeclare)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
lbl(280788)	definition(x(8) 280914 pid('Reporter,logInsert' 1 pos('./compiler/Reporter.oz' 117 6) nil 4) unit [x(7) y(0)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 280836)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(280839)
lbl(280836)	getLiteral(unit y(2))
lbl(280839)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(insert 2 x(0))
		setValue(y(1))
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(showinsert x(0))
		createVariableMove(y(0) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(0) 280899 280901)
		putRecord('#' 3 x(0))
		setConstant('%%%         inserted file "')
		setValue(y(1))
		setConstant('"\n')
		deAllocateL3
		genCall(gci(g(1) true userInfo true 1) 0)
lbl(280899)	deAllocateL3
		return
lbl(280901)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(119)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280788)
lbl(280914)	putList(x(7))
		setConstant(logInsert)
		setValue(x(8))
lbl(280920)	definition(x(8) 280992 pid('Reporter,logPhase/fast' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) <Q: 1609> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(phase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 280977 280979)
		putRecord('#' 3 x(0))
		setConstant('%%%     ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(280977)	deAllocateL2
		return
lbl(280979)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(126)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(280920)
lbl(280992)	definition(x(15) 281018 pid('Reporter,logPhase/slow' 1 pos('./compiler/Reporter.oz' 123 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1609> 3)
		endDefinition(280992)
lbl(281018)	putRecord('#' [1 2 fast] x(16))
		setConstant(logPhase)
		setValue(x(15))
		setValue(x(8))
lbl(281028)	definition(x(8) 281100 pid('Reporter,logSubPhase/fast' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) <Q: 1610> [y(0)])
		allocateL2
		move(x(0) y(0))
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant(subphase x(0))
		genCall(gci(g(0) true <M: ProfileStart> false 1) 0)
		getSelf(x(2))
		inlineDot(x(2) <M: Compiler> x(2) cache)
		putConstant(compilerpasses x(0))
		createVariableMove(y(1) x(1))
		sendMsg(getSwitch x(2) 2 cache)
		testBool(y(1) 281085 281087)
		putRecord('#' 3 x(0))
		setConstant('%%%         ')
		setValue(y(0))
		setConstant('\n')
		deAllocateL2
		genCall(gci(g(0) true userInfo true 1) 0)
lbl(281085)	deAllocateL2
		return
lbl(281087)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(133)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(281028)
lbl(281100)	definition(x(15) 281126 pid('Reporter,logSubPhase/slow' 1 pos('./compiler/Reporter.oz' 130 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1610> 3)
		endDefinition(281100)
lbl(281126)	putRecord('#' [1 2 fast] x(17))
		setConstant(logSubPhase)
		setValue(x(15))
		setValue(x(8))
lbl(281136)	definition(x(8) 281153 pid('Reporter,logAccept/fast' 0 pos('./compiler/Reporter.oz' 137 6) nil 1) <Q: 1611> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- accepted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281136)
lbl(281153)	definition(x(15) 281167 pid('Reporter,logAccept/slow' 1 pos('./compiler/Reporter.oz' 137 6) nil 1) unit nil)
		getLiteral(logAccept x(0))
		genFastCall(<Q: 1611> 1)
		endDefinition(281153)
lbl(281167)	putRecord('#' [1 2 fast] x(18))
		setConstant(logAccept)
		setValue(x(15))
		setValue(x(8))
lbl(281177)	definition(x(8) 281262 pid('Reporter,logReject/fast' 0 pos('./compiler/Reporter.oz' 141 6) nil 3) <Q: 1612> [y(0)])
		allocateL1
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		createVariable(y(0))
		putConstant(0 x(1))
		testLT(x(1) x(0) x(2) 281243)
		getRecord('#' 5 y(0))
		unifyLiteral(' (')
		unifyVariable(x(0))
		unifyLiteral(' error')
		unifyVariable(x(1))
		unifyLiteral(')')
		inlineAt(<M: ErrorCount> x(2) cache)
		unify(x(2) x(0))
		inlineAt(<M: ErrorCount> x(0) cache)
		testNumber(x(0) 1 281238)
		getLiteral(nil x(1))
		branch(281246)
lbl(281238)	getLiteral(s x(1))
		branch(281246)
lbl(281243)	getLiteral(nil y(0))
lbl(281246)	putRecord('#' 3 x(0))
		setConstant('%** ------------------ rejected')
		setValue(y(0))
		setConstant('\n')
		deAllocateL1
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281177)
lbl(281262)	definition(x(15) 281276 pid('Reporter,logReject/slow' 1 pos('./compiler/Reporter.oz' 141 6) nil 1) unit nil)
		getLiteral(logReject x(0))
		genFastCall(<Q: 1612> 1)
		endDefinition(281262)
lbl(281276)	putRecord('#' [1 2 fast] x(19))
		setConstant(logReject)
		setValue(x(15))
		setValue(x(8))
lbl(281286)	definition(x(8) 281320 pid('Reporter,logAbort/fast' 0 pos('./compiler/Reporter.oz' 150 6) nil 2) <Q: 1613> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ aborted\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putConstant(errorFound x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281286)
lbl(281320)	definition(x(15) 281334 pid('Reporter,logAbort/slow' 1 pos('./compiler/Reporter.oz' 150 6) nil 1) unit nil)
		getLiteral(logAbort x(0))
		genFastCall(<Q: 1613> 1)
		endDefinition(281320)
lbl(281334)	putRecord('#' [1 2 fast] x(20))
		setConstant(logAbort)
		setValue(x(15))
		setValue(x(8))
lbl(281344)	definition(x(8) 281367 pid('Reporter,logCrash/fast' 0 pos('./compiler/Reporter.oz' 155 6) nil 1) <Q: 1614> [y(0) g(3)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('%** ------------------ compiler crashed\n' x(0))
		genCall(gci(g(0) true userInfo false 1) 0)
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> true 1) 0)
		endDefinition(281344)
lbl(281367)	definition(x(15) 281381 pid('Reporter,logCrash/slow' 1 pos('./compiler/Reporter.oz' 155 6) nil 1) unit nil)
		getLiteral(logCrash x(0))
		genFastCall(<Q: 1614> 1)
		endDefinition(281367)
lbl(281381)	putRecord('#' [1 2 fast] x(21))
		setConstant(logCrash)
		setValue(x(15))
		setValue(x(8))
lbl(281391)	definition(x(8) 281408 pid('Reporter,logHalt/fast' 0 pos('./compiler/Reporter.oz' 160 6) nil 1) <Q: 1615> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- halting\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281391)
lbl(281408)	definition(x(15) 281422 pid('Reporter,logHalt/slow' 1 pos('./compiler/Reporter.oz' 160 6) nil 1) unit nil)
		getLiteral(logHalt x(0))
		genFastCall(<Q: 1615> 1)
		endDefinition(281408)
lbl(281422)	putRecord('#' [1 2 fast] x(22))
		setConstant(logHalt)
		setValue(x(15))
		setValue(x(8))
lbl(281432)	definition(x(8) 281449 pid('Reporter,logInterrupt/fast' 0 pos('./compiler/Reporter.oz' 164 6) nil 1) <Q: 1616> [y(0)])
		genCall(gci(g(0) true <M: ProfileEnd> false 0) 0)
		putConstant('% -------------------- interrupted\n' x(0))
		genCall(gci(g(0) true userInfo true 1) 0)
		endDefinition(281432)
lbl(281449)	definition(x(15) 281463 pid('Reporter,logInterrupt/slow' 1 pos('./compiler/Reporter.oz' 164 6) nil 1) unit nil)
		getLiteral(logInterrupt x(0))
		genFastCall(<Q: 1616> 1)
		endDefinition(281449)
lbl(281463)	putRecord('#' [1 2 fast] x(23))
		setConstant(logInterrupt)
		setValue(x(15))
		setValue(x(8))
lbl(281473)	definition(x(8) 281508 pid('Reporter,displaySource/fast' 3 pos('./compiler/Reporter.oz' 168 6) nil 5) <Q: 1617> nil)
		getSelf(x(3))
		inlineDot(x(3) <M: Wrapper> x(3) cache)
		putRecord(displaySource 3 x(4))
		setValue(x(0))
		setValue(x(1))
		setValue(x(2))
		move(x(4) x(0))
		tailSendMsg(notify x(3) 1 cache)
		endDefinition(281473)
lbl(281508)	definition(x(15) 281549 pid('Reporter,displaySource/slow' 1 pos('./compiler/Reporter.oz' 168 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1617> 7)
		endDefinition(281508)
lbl(281549)	putRecord('#' [1 2 fast] x(24))
		setConstant(displaySource)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(281567)	definition(x(15) 281668 pid('Reporter,userInfo' 1 pos('./compiler/Reporter.oz' 171 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 281615)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(281618)
lbl(281615)	getLiteral(unit y(2))
lbl(281618)	testLiteral(y(2) unit 281643)
lbl(281622)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 1 x(0))
		setValue(y(1))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
lbl(281643)	getSelf(x(1))
		inlineDot(x(1) <M: Wrapper> x(1) cache)
		putRecord(info 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL3
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(281567)
lbl(281668)	putList(x(8))
		setConstant(userInfo)
		setValue(x(15))
		putRecord(messagePattern [abort coord items kind msg] x(15))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(281688)	definition(x(25) 281989 pid('Reporter,error' 1 pos('./compiler/Reporter.oz' 179 6) nil 3) unit [x(15) y(0) g(3)])
		allocateL7
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281727)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(281730)
lbl(281727)	getLiteral(nil y(1))
lbl(281730)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281753)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(281756)
lbl(281753)	getLiteral(unit y(2))
lbl(281756)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281779)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(281782)
lbl(281779)	getLiteral(unit y(3))
lbl(281782)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 281805)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(281808)
lbl(281805)	getLiteral(unit y(4))
lbl(281808)	createVariable(y(5))
		move(y(0) x(0))
		putConstant(abort x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 281831)
		inlineDot(x(0) abort x(1) cache)
		unify(x(1) y(5))
		branch(281834)
lbl(281831)	getLiteral(true y(5))
lbl(281834)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(6))
		testLiteral(y(0) unit 281871)
lbl(281866)	unify(y(6) y(1))
		branch(281885)
lbl(281871)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(6) x(2))
		genFastCall(<P: 21> 6)
lbl(281885)	putRecord(error [items kind msg] x(2))
		setValue(y(6))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		sendMsg(notify y(2) 1 cache)
		inlineAt(<M: ErrorCount> x(0) cache)
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: ErrorCount> x(1) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(getMaxNumberOfErrors x(1) 1 cache)
		move(y(0) x(0))
		putConstant(0 x(1))
		testLE(x(1) x(0) x(2) 281985)
lbl(281950)	inlineAt(<M: ErrorCount> x(1) cache)
		testLT(x(0) x(1) x(2) 281983)
lbl(281960)	testBool(y(5) 281970 281972)
lbl(281964)	putConstant(tooManyErrors x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(281970)	deAllocateL7
		return
lbl(281972)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(193)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(281983)	deAllocateL7
		return
lbl(281985)	deAllocateL7
		return
		endDefinition(281688)
lbl(281989)	putList(x(15))
		setConstant(error)
		setValue(x(25))
		putRecord(messagePattern [coord items kind msg] x(25))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(282007)	definition(x(26) 282208 pid('Reporter,warn' 1 pos('./compiler/Reporter.oz' 199 6) nil 3) unit [x(25) y(0) g(4)])
		allocateL6
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		createVariable(y(1))
		move(y(0) x(0))
		putConstant(items x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 282046)
		inlineDot(x(0) items x(1) cache)
		unify(x(1) y(1))
		branch(282049)
lbl(282046)	getLiteral(nil y(1))
lbl(282049)	createVariable(y(2))
		move(y(0) x(0))
		putConstant(coord x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 282072)
		inlineDot(x(0) coord x(1) cache)
		unify(x(1) y(2))
		branch(282075)
lbl(282072)	getLiteral(unit y(2))
lbl(282075)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(kind x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 282098)
		inlineDot(x(0) kind x(1) cache)
		unify(x(1) y(3))
		branch(282101)
lbl(282098)	getLiteral(unit y(3))
lbl(282101)	createVariable(y(4))
		move(y(0) x(0))
		putConstant(msg x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(1)] 282124)
		inlineDot(x(0) msg x(1) cache)
		unify(x(1) y(4))
		branch(282127)
lbl(282124)	getLiteral(unit y(4))
lbl(282127)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1602> 4)
		move(g(2) x(0))
		genCall(gci(g(1) true <M: ToTop> false 1) 0)
		getSelf(x(0))
		inlineDot(x(0) <M: Wrapper> x(0) cache)
		move(x(0) y(2))
		createVariable(y(5))
		testLiteral(y(0) unit 282164)
lbl(282159)	unify(y(5) y(1))
		branch(282178)
lbl(282164)	putList(x(1))
		setValue(y(0))
		setConstant(nil)
		moveMoveYXYX(y(1) x(0) y(5) x(2))
		genFastCall(<P: 21> 6)
lbl(282178)	putRecord(warn [items kind msg] x(2))
		setValue(y(5))
		setValue(y(3))
		setValue(y(4))
		putRecord(message 2 x(0))
		setValue(x(2))
		setValue(y(0))
		move(y(2) x(1))
		deAllocateL6
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(282007)
lbl(282208)	putList(x(25))
		setConstant(warn)
		setValue(x(26))
lbl(282214)	definition(x(26) 282251 pid('Reporter,addErrors/fast' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) <Q: 1618> [y(0) g(3)])
		allocateL1
		move(x(0) y(0))
		move(g(1) x(0))
		genCall(gci(g(0) true <M: ToTop> false 1) 0)
		inlineAt(<M: ErrorCount> x(0) cache)
		move(y(0) x(1))
		inlinePlus(x(0) x(1) x(2))
		inlineAssign(<M: ErrorCount> x(2) cache)
		deAllocateL1
		return
		endDefinition(282214)
lbl(282251)	definition(x(27) 282277 pid('Reporter,addErrors/slow' 1 pos('./compiler/Reporter.oz' 211 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1618> 3)
		endDefinition(282251)
lbl(282277)	putRecord('#' [1 2 fast] x(28))
		setConstant(addErrors)
		setValue(x(27))
		setValue(x(26))
lbl(282287)	definition(x(26) 282310 pid('Reporter,hasSeenError/fast' 1 pos('./compiler/Reporter.oz' 215 6) nil 4) <Q: 1619> nil)
		inlineAt(<M: ErrorCount> x(1) cache)
		putConstant(0 x(2))
		callBI('<' [x(2) x(1)]#[x(3)])
		unify(x(3) x(0))
		return
		endDefinition(282287)
lbl(282310)	definition(x(27) 282336 pid('Reporter,hasSeenError/slow' 1 pos('./compiler/Reporter.oz' 215 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1619> 3)
		endDefinition(282310)
lbl(282336)	putRecord('#' [1 2 fast] x(29))
		setConstant(hasSeenError)
		setValue(x(27))
		setValue(x(26))
		putRecord('#' 21 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(23))
		setValue(x(24))
		setValue(x(8))
		setValue(x(15))
		setValue(x(25))
		setValue(x(28))
		setValue(x(29))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('Reporter' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(8) x(0))
		inlineDot(x(0) 'ask' x(3) cache)
		inlineDot(x(3) generic x(3) cache)
		move(y(9) x(1))
		inlineDot(x(1) is x(4) cache)
		move(x(4) x(0))
		putConstant(printName x(1))
		createVariableMove(y(15) x(2))
		call(x(3) 3)
		createVariable(x(7))
lbl(282442)	definition(x(8) 282461 pid('File' 1 pos('./compiler/CheckTupleSyntax.oz' 25 3) nil 2) <Q: 1620> [x(7)])
		match(x(0) ht(282453 [onScalar(parseError 282451) onScalar(fileNotFound 282452)]))
lbl(282451)	return
lbl(282452)	return
lbl(282453)	move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(282442)
lbl(282461)	createVariable(x(8))
lbl(282463)	definition(x(0) 282510 pid('Query' 1 pos('./compiler/CheckTupleSyntax.oz' 32 3) nil 2) <Q: 1621> [x(8)])
		match(x(0) ht(282505 [onScalar(dirLocalSwitches 282472) onScalar(dirPushSwitches 282473) onScalar(dirPopSwitches 282474) onRecord(dirSwitch 1 282475) onRecord(fDeclare 3 282483)]))
lbl(282472)	return
lbl(282473)	return
lbl(282474)	return
lbl(282475)	getVariable(x(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
lbl(282483)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282505)	genFastCall(<Q: 1623> 3)
		endDefinition(282463)
lbl(282510)	unify(x(0) x(7))
lbl(282513)	definition(x(0) 282595 pid('Switch' 1 pos('./compiler/CheckTupleSyntax.oz' 42 3) nil 3) <Q: 1622> [y(8)])
		match(x(0) ht(282580 [onRecord(on 2 282522) onRecord(off 2 282551)]))
lbl(282522)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282551)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282580)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(45)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(282513)
lbl(282595)	unify(x(0) x(8))
		createVariable(x(7))
		createVariable(x(8))
		createVariable(x(9))
		createVariable(x(10))
		createVariable(x(11))
		createVariable(x(12))
		createVariable(x(13))
		createVariable(x(14))
		createVariable(x(15))
		createVariable(x(16))
lbl(282618)	definition(x(0) 283588 pid('Phrase' 1 pos('./compiler/CheckTupleSyntax.oz' 48 3) nil 3) <Q: 1623> [y(8) x(7) y(15) x(8) x(9) x(10) x(11) x(12) x(13) x(14) x(15) x(16)])
		match(x(0) ht(283583 [onRecord(fStepPoint 3 282627) onRecord(fAnd 2 282664) onRecord(fEq 3 282678) onRecord(fAssign 3 282700) onRecord(fOrElse 3 282722) onRecord(fAndThen 3 282744) onRecord(fOpApply 3 282766) onRecord(fOpApplyStatement 3 282806) onRecord(fObjApply 3 282846) onRecord(fAt 2 282868) onRecord(fAtom 2 282882) onRecord(fVar 2 282911) onRecord(fEscape 2 282925) onRecord(fWildcard 1 282968) onRecord(fSelf 1 282973) onRecord(fDollar 1 282978) onRecord(fInt 2 282983) onRecord(fFloat 2 283012) onRecord(fRecord 2 283041) onRecord(fOpenRecord 2 283058) onRecord(fApply 3 283075) onRecord(fProc 5 283100) onRecord(fFun 5 283143) onRecord(fFunctor 3 283186) onRecord(fClass 4 283211) onRecord(fLocal 3 283246) onRecord(fBoolCase 4 283268) onRecord(fCase 4 283297) onRecord(fLockThen 3 283335) onRecord(fLock 2 283357) onRecord(fThread 2 283371) onRecord(fTry 4 283385) onRecord(fRaise 2 283414) onRecord(fRaiseWith 3 283428) onRecord(fSkip 1 283450) onRecord(fFail 1 283455) onRecord(fNot 2 283460) onRecord(fCond 3 283474) onRecord(fOr 3 283499) onRecord(fCondis 2 283555)]))
lbl(282627)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282664)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(282678)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282700)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282722)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282744)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282766)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282806)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282846)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282868)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282882)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282911)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(2) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(282925)	allocateL2
		getVarVar(x(0) y(0))
		testRecord(x(0) fVar 2 282948)
lbl(282934)	getVarVar(x(0) y(1))
		genCall(gci(g(2) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		branch(282961)
lbl(282948)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(282961)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(282968)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(282973)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(282978)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(282983)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) int x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283012)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) float x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283041)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1624> 2)
		move(y(0) x(0))
		move(g(3) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(283058)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1624> 2)
		move(y(0) x(0))
		move(g(3) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(283075)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283100)	allocateL4
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		move(g(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1652> 3)
lbl(283143)	allocateL4
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVariable(y(3))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		move(g(4) x(1))
		genFastCall(<P: 34> 4)
		move(y(3) x(0))
		deAllocateL4
		genFastCall(<Q: 1652> 3)
lbl(283186)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(5) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283211)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		move(g(6) x(1))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		move(g(7) x(1))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283246)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283268)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1651> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283297)	allocateL2
		getVarVar(x(0) y(0))
		getVoid(1)
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
lbl(283308)	definition(x(1) 283322 pid('' 1 pos('./compiler/CheckTupleSyntax.oz' 87 25) nil 2) unit [g(8)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(283308)
lbl(283322)	move(y(0) x(0))
		genFastCall(<P: 34> 4)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283335)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283357)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283371)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283385)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1646> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1647> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(283414)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283428)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283450)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(283455)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(283460)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283474)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(9) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		genFastCall(<Q: 1651> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283499)	allocateL1
		getVarVar(x(0) x(1))
		getVariable(x(2))
		move(x(2) y(0))
		match(x(1) ht(283535 [onScalar(for 283511) onScalar(fdis 283519) onScalar(fchoice 283527)]))
lbl(283511)	move(g(10) x(1))
		genFastCall(<P: 34> 4)
		branch(283548)
lbl(283519)	move(g(9) x(1))
		genFastCall(<P: 34> 4)
		branch(283548)
lbl(283527)	move(g(9) x(1))
		genFastCall(<P: 34> 4)
		branch(283548)
lbl(283535)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(103)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(283548)	move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283555)	allocateL1
		getVarVar(x(0) y(0))
lbl(283559)	definition(x(1) 283573 pid('' 1 pos('./compiler/CheckTupleSyntax.oz' 106 15) nil 2) unit [g(11)])
		move(g(0) x(1))
		genFastCall(<P: 34> 5)
		endDefinition(283559)
lbl(283573)	genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283583)	genFastCall(<Q: 1632> 3)
		endDefinition(282618)
lbl(283588)	unify(x(0) x(7))
lbl(283591)	definition(x(17) 283658 pid('Label' 1 pos('./compiler/CheckTupleSyntax.oz' 111 3) nil 3) <Q: 1624> [y(8) y(15)])
		match(x(0) ht(283643 [onRecord(fAtom 2 283600) onRecord(fVar 2 283629)]))
lbl(283600)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283629)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283643)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(114)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283591)
lbl(283658)	definition(x(0) 283713 pid('Atom' 1 pos('./compiler/CheckTupleSyntax.oz' 117 3) nil 3) <Q: 1625> [y(8)])
		testRecord(x(0) fAtom 2 283698)
lbl(283669)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283698)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(118)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283658)
lbl(283713)	unify(x(0) x(9))
lbl(283716)	definition(x(0) 283746 pid('RecordArgument' 1 pos('./compiler/CheckTupleSyntax.oz' 121 3) nil 1) <Q: 1626> nil)
		testRecord(x(0) fColon 2 283741)
lbl(283727)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1642> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(283741)	genFastCall(<Q: 1623> 3)
		endDefinition(283716)
lbl(283746)	unify(x(0) x(8))
		createVariable(x(8))
		createVariable(x(9))
lbl(283753)	definition(x(0) 283889 pid('FunctorDescriptor' 1 pos('./compiler/CheckTupleSyntax.oz' 127 3) nil 2) <Q: 1627> [x(8) x(9) x(7)])
		match(x(0) ht(283874 [onRecord(fRequire 2 283762) onRecord(fPrepare 3 283779) onRecord(fImport 2 283801) onRecord(fExport 2 283818) onRecord(fProp 2 283835) onRecord(fDefine 3 283852)]))
lbl(283762)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283779)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283801)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283818)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283835)	allocateL1
		getVarVar(x(0) y(0))
		move(g(2) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(283852)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(283874)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(134)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(283753)
lbl(283889)	unify(x(0) x(10))
		createVariable(x(10))
lbl(283894)	definition(x(0) 283976 pid('ImportDecl' 1 pos('./compiler/CheckTupleSyntax.oz' 137 3) nil 6) <Q: 1628> [y(15) x(10)])
		allocateL3
		move(x(0) y(0))
		testRecord(y(0) fImportItem 3 283961)
lbl(283909)	getVarVar(x(1) x(2))
		getVariable(x(3))
		shallowGuard(283961)
		getRecord(fVar 2 x(1))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(283924)	shallowThen
		moveMoveXYXY(x(5) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(4) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1630> 3)
lbl(283961)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(140)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(283894)
lbl(283976)	unify(x(0) x(8))
lbl(283979)	definition(x(0) 284041 pid('AliasedFeature' 1 pos('./compiler/CheckTupleSyntax.oz' 143 3) nil 5) <Q: 1629> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) '#' 2 284032)
lbl(283994)	getVarVar(x(1) x(2))
		shallowGuard(284032)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(284007)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1643> 3)
lbl(284032)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1643> 3)
		endDefinition(283979)
lbl(284041)	unify(x(0) x(10))
lbl(284044)	definition(x(8) 284074 pid('At' 1 pos('./compiler/CheckTupleSyntax.oz' 149 3) nil 2) <Q: 1630> nil)
		match(x(0) ht(284059 [onScalar(fNoImportAt 284053) onRecord(fImportAt 1 284054)]))
lbl(284053)	return
lbl(284054)	getVariable(x(0))
		genFastCall(<Q: 1625> 3)
lbl(284059)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(152)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284044)
lbl(284074)	definition(x(0) 284170 pid('ExportDecl' 1 pos('./compiler/CheckTupleSyntax.oz' 155 3) nil 2) <Q: 1631> [y(15)])
		testRecord(x(0) fExportItem 1 284155)
lbl(284085)	getVariable(x(0))
		match(x(0) ht(284142 [onRecord(fColon 2 284090) onRecord(fVar 2 284128)]))
lbl(284090)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1643> 2)
		testRecord(y(0) fVar 2 284115)
lbl(284102)	getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284115)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(159)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(284128)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284142)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(161)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(284155)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(162)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284074)
lbl(284170)	unify(x(0) x(9))
lbl(284173)	definition(x(0) 284285 pid('FDExpression' 1 pos('./compiler/CheckTupleSyntax.oz' 165 3) nil 3) <Q: 1632> [y(8)])
		match(x(0) ht(284270 [onRecord(fFdCompare 4 284182) onRecord(fFdIn 4 284226)]))
lbl(284182)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284226)	allocateL3
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284270)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(170)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284173)
lbl(284285)	unify(x(0) x(16))
		createVariable(x(8))
lbl(284290)	definition(x(0) 284382 pid('ClassDescriptor' 1 pos('./compiler/CheckTupleSyntax.oz' 173 3) nil 2) <Q: 1633> [x(7) x(8)])
		match(x(0) ht(284367 [onRecord(fFrom 2 284299) onRecord(fProp 2 284316) onRecord(fAttr 2 284333) onRecord(fFeat 2 284350)]))
lbl(284299)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284316)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284333)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284350)	allocateL1
		getVarVar(x(0) y(0))
		move(g(1) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284367)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(178)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284290)
lbl(284382)	unify(x(0) x(11))
lbl(284385)	definition(x(0) 284415 pid('AttrFeat' 1 pos('./compiler/CheckTupleSyntax.oz' 181 3) nil 1) <Q: 1634> nil)
		testRecord(x(0) '#' 2 284410)
lbl(284396)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1644> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(284410)	genFastCall(<Q: 1623> 3)
		endDefinition(284385)
lbl(284415)	unify(x(0) x(8))
lbl(284418)	definition(x(0) 284466 pid('Meth' 1 pos('./compiler/CheckTupleSyntax.oz' 187 3) nil 2) <Q: 1635> nil)
		testRecord(x(0) fMeth 3 284451)
lbl(284429)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1636> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284451)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(188)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284418)
lbl(284466)	unify(x(0) x(12))
lbl(284469)	definition(x(7) 284542 pid('MethHead' 1 pos('./compiler/CheckTupleSyntax.oz' 191 3) nil 6) <Q: 1636> [y(15)])
		allocateL3
		move(x(0) y(0))
		testRecord(y(0) fEq 3 284533)
lbl(284484)	getVarVar(x(1) x(2))
		getVariable(x(3))
		shallowGuard(284533)
		getRecord(fVar 2 x(2))
		unifyVariable(x(4))
		unifyVariable(x(5))
lbl(284499)	shallowThen
		moveMoveXYXY(x(4) y(0) x(5) y(1))
		move(x(3) y(2))
		move(x(1) x(0))
		genFastCall(<Q: 1637> 2)
		move(y(0) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(2) x(0))
		deAllocateL3
		genFastCall(<Q: 1652> 3)
lbl(284533)	move(y(0) x(0))
		deAllocateL3
		genFastCall(<Q: 1637> 3)
		endDefinition(284469)
lbl(284542)	createVariable(x(7))
lbl(284544)	definition(x(8) 284688 pid('MethHead1' 1 pos('./compiler/CheckTupleSyntax.oz' 198 3) nil 3) <Q: 1637> [y(8) y(15) x(7)])
		match(x(0) ht(284673 [onRecord(fAtom 2 284553) onRecord(fVar 2 284582) onRecord(fEscape 2 284596) onRecord(fRecord 2 284639) onRecord(fOpenRecord 2 284656)]))
lbl(284553)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284582)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284596)	allocateL2
		getVarVar(x(0) y(0))
		testRecord(x(0) fVar 2 284619)
lbl(284605)	getVarVar(x(0) y(1))
		genCall(gci(g(1) false '' false 1) 0)
		move(y(1) x(0))
		genFastCall(<Q: 1652> 2)
		branch(284632)
lbl(284619)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(202)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(284632)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284639)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1638> 2)
		move(y(0) x(0))
		move(g(2) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(284656)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1638> 2)
		move(y(0) x(0))
		move(g(2) x(1))
		deAllocateL1
		genFastCall(<P: 34> 5)
lbl(284673)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(207)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284544)
lbl(284688)	definition(x(8) 284750 pid('MethHeadLabel' 1 pos('./compiler/CheckTupleSyntax.oz' 210 3) nil 5) <Q: 1638> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) fEscape 2 284741)
lbl(284703)	getVarVar(x(1) x(2))
		shallowGuard(284741)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(284716)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(284741)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1624> 3)
		endDefinition(284688)
lbl(284750)	definition(x(0) 284810 pid('MethHeadArgument' 1 pos('./compiler/CheckTupleSyntax.oz' 217 3) nil 2) <Q: 1639> nil)
		match(x(0) ht(284795 [onRecord(fMethArg 2 284759) onRecord(fMethColonArg 3 284773)]))
lbl(284759)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1640> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1641> 3)
lbl(284773)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1642> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1640> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1641> 3)
lbl(284795)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(220)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284750)
lbl(284810)	unify(x(0) x(7))
lbl(284813)	definition(x(7) 284861 pid('MethHeadTerm' 1 pos('./compiler/CheckTupleSyntax.oz' 223 3) nil 2) <Q: 1640> [y(15)])
		match(x(0) ht(284846 [onRecord(fVar 2 284822) onRecord(fWildcard 1 284836) onRecord(fDollar 1 284841)]))
lbl(284822)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284836)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(284841)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(284846)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(227)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284813)
lbl(284861)	definition(x(7) 284900 pid('Default' 1 pos('./compiler/CheckTupleSyntax.oz' 230 3) nil 2) <Q: 1641> nil)
		match(x(0) ht(284885 [onScalar(fNoDefault 284870) onRecord(fDefault 2 284871)]))
lbl(284870)	return
lbl(284871)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284885)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(233)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284861)
lbl(284900)	definition(x(7) 284930 pid('Feature' 1 pos('./compiler/CheckTupleSyntax.oz' 236 3) nil 1) <Q: 1642> [y(15)])
		testRecord(x(0) fVar 2 284925)
lbl(284911)	allocateL1
		getVarVar(x(0) y(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284925)	genFastCall(<Q: 1643> 3)
		endDefinition(284900)
lbl(284930)	definition(x(7) 285012 pid('FeatureNoVar' 1 pos('./compiler/CheckTupleSyntax.oz' 242 3) nil 3) <Q: 1643> [y(8)])
		match(x(0) ht(284997 [onRecord(fAtom 2 284939) onRecord(fInt 2 284968)]))
lbl(284939)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284968)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) int x(2) cache)
		call(x(2) 1)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(284997)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(245)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(284930)
lbl(285012)	definition(x(7) 285074 pid('EscapedFeature' 1 pos('./compiler/CheckTupleSyntax.oz' 248 3) nil 5) <Q: 1644> [y(15)])
		allocateL2
		move(x(0) y(0))
		testRecord(y(0) fEscape 2 285065)
lbl(285027)	getVarVar(x(1) x(2))
		shallowGuard(285065)
		getRecord(fVar 2 x(1))
		unifyVariable(x(3))
		unifyVariable(x(4))
lbl(285040)	shallowThen
		moveMoveXYXY(x(4) y(0) x(2) y(1))
		move(x(3) x(0))
		genCall(gci(g(0) false '' false 1) 0)
		move(y(0) x(0))
		genFastCall(<Q: 1652> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1652> 3)
lbl(285065)	move(y(0) x(0))
		deAllocateL2
		genFastCall(<Q: 1642> 3)
		endDefinition(285012)
lbl(285074)	definition(x(0) 285114 pid('CaseClause' 1 pos('./compiler/CheckTupleSyntax.oz' 255 3) nil 2) <Q: 1645> nil)
		testRecord(x(0) fCaseClause 2 285099)
lbl(285085)	allocateL1
		getVarVar(x(0) y(0))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1623> 3)
lbl(285099)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(256)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285074)
lbl(285114)	unify(x(0) x(13))
lbl(285117)	definition(x(7) 285159 pid('Catch' 1 pos('./compiler/CheckTupleSyntax.oz' 259 3) nil 2) <Q: 1646> [x(13)])
		match(x(0) ht(285144 [onScalar(fNoCatch 285126) onRecord(fCatch 2 285127)]))
lbl(285126)	return
lbl(285127)	allocateL1
		getVarVar(x(0) y(0))
		move(g(0) x(1))
		genFastCall(<P: 34> 4)
		move(y(0) x(0))
		deAllocateL1
		genFastCall(<Q: 1652> 3)
lbl(285144)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(262)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285117)
lbl(285159)	definition(x(7) 285175 pid('Finally' 1 pos('./compiler/CheckTupleSyntax.oz' 265 3) nil 1) <Q: 1647> nil)
		testLiteral(x(0) fNoFinally 285170)
lbl(285169)	return
lbl(285170)	genFastCall(<Q: 1623> 3)
		endDefinition(285159)
lbl(285175)	definition(x(0) 285223 pid('Clause' 1 pos('./compiler/CheckTupleSyntax.oz' 271 3) nil 2) <Q: 1648> nil)
		testRecord(x(0) fClause 3 285208)
lbl(285186)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1623> 3)
lbl(285208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(272)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285175)
lbl(285223)	unify(x(0) x(14))
lbl(285226)	definition(x(0) 285274 pid('ClauseOptThen' 1 pos('./compiler/CheckTupleSyntax.oz' 275 3) nil 2) <Q: 1649> nil)
		testRecord(x(0) fClause 3 285259)
lbl(285237)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		genFastCall(<Q: 1623> 2)
		move(y(0) x(0))
		genFastCall(<Q: 1623> 2)
		move(y(1) x(0))
		deAllocateL2
		genFastCall(<Q: 1650> 3)
lbl(285259)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(278)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285226)
lbl(285274)	unify(x(0) x(15))
lbl(285277)	definition(x(7) 285298 pid('OptThen' 1 pos('./compiler/CheckTupleSyntax.oz' 281 3) nil 1) <Q: 1650> nil)
		testRecord(x(0) fNoThen 1 285293)
lbl(285288)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(285293)	genFastCall(<Q: 1623> 3)
		endDefinition(285277)
lbl(285298)	definition(x(7) 285319 pid('OptElse' 1 pos('./compiler/CheckTupleSyntax.oz' 287 3) nil 1) <Q: 1651> nil)
		testRecord(x(0) fNoElse 1 285314)
lbl(285309)	getVariable(x(0))
		genFastCall(<Q: 1652> 3)
lbl(285314)	genFastCall(<Q: 1623> 3)
		endDefinition(285298)
lbl(285319)	definition(x(7) 286223 pid('Coord' 1 pos('./compiler/CheckTupleSyntax.oz' 293 3) nil 4) <Q: 1652> [y(8)])
		match(x(0) ht(286208 [onScalar(unit 285328) onRecord('pos' 3 285329) onRecord('pos' 6 285427) onRecord(fineStep 3 285622) onRecord(fineStep 6 285720) onRecord(coarseStep 3 285915) onRecord(coarseStep 6 286013)]))
lbl(285328)	return
lbl(285329)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(285427)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(285622)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(285720)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(285915)	allocateL2
		getVarVar(x(0) y(0))
		getVariable(y(1))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL2
		return
lbl(286013)	allocateL5
		getVarVar(x(0) y(0))
		getVarVar(y(1) y(2))
		getVarVar(y(3) y(4))
		move(g(0) x(1))
		inlineDot(x(1) 'ask' x(2) cache)
		inlineDot(x(2) atom x(2) cache)
		call(x(2) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) atom x(1) cache)
		move(y(2) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(3) x(0))
		call(x(1) 1)
		move(g(0) x(0))
		inlineDot(x(0) 'ask' x(1) cache)
		inlineDot(x(1) int x(1) cache)
		move(y(4) x(0))
		call(x(1) 1)
		move(y(0) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(1) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(3) x(0))
		putConstant(0 x(1))
		putConstant(true x(2))
		callBI('<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		move(y(4) x(0))
		putConstant(~1 x(1))
		putConstant(true x(2))
		callBI('=<' [x(1) x(0)]#[x(3)])
		unify(x(3) x(2))
		deAllocateL5
		return
lbl(286208)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(316)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(285319)
lbl(286223)	definition(x(7) 286381 pid('CheckTupleSyntax' 1 pos('./compiler/CheckTupleSyntax.oz' 319 3) nil 3) <Q: 1653> [g(5)])
		allocateL2
		move(x(0) y(0))
		exHandler(286370)
		move(x(0) y(0))
		createCond(286283)
lbl(286240)	lastClause
		clause
		thread(286273)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(kernel 2 x(1))
		unifyLiteral(noElse)
		unifyVoid(1)
		deAllocateL2
		return
lbl(286273)	ask
lbl(286274)	putRecord(compiler 1 x(0))
		setConstant(malformedSyntaxTree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286283)	createCond(286334)
lbl(286285)	lastClause
		clause
		createVariable(y(1))
		thread(286322)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(1 x(0))
		inlineUparrow(x(2) x(0) x(1))
		getRecord(kernel 3 x(1))
		unifyLiteral(noElse)
		unifyVoid(1)
		unifyValue(y(1))
		deAllocateL2
		return
lbl(286322)	ask
lbl(286323)	putRecord(compiler 2 x(0))
		setConstant(malformedSyntaxTree)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286334)	createCond(286364)
lbl(286336)	lastClause
		clause
		thread(286354)
		putConstant('failure' x(0))
		putConstant(0 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		deAllocateL2
		return
lbl(286354)	ask
lbl(286355)	putRecord(compiler 1 x(0))
		setConstant(malformedSyntaxTree)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(286364)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(286370)	move(y(0) x(0))
		genFastCall(<Q: 1620> 2)
		popEx
		deAllocateL2
		return
		endDefinition(286223)
lbl(286381)	definition(x(7) 286508 pid('EnumerateVersionNumbers' 3 pos('./compiler/CompilerClass.oz' 27 3) nil 5) <Q: 1654> [g(6) g(7)])
		allocateL5
lbl(286388)	definition(x(4) 286406 pid('' 2 pos('./compiler/CompilerClass.oz' 28 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(286388)
lbl(286406)	moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(4) x(1))
		createVariableMove(y(2) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 21> 6)
		getList(y(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		move(y(4) x(2))
		callBI('StringToAtom' [x(2)]#[x(3)])
		unify(x(3) x(0))
		match(y(3) ht(286493 [onScalar(nil 286452) onRecord('|' 2 286457)]))
lbl(286452)	getLiteral(nil x(1))
		deAllocateL5
		return
lbl(286457)	getVoid(1)
		getVariable(y(0))
		putList(x(3))
		setConstant(95)
		setConstant(nil)
		moveMoveXYYX(x(1) y(1) y(4) x(0))
		move(x(3) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 21> 6)
		moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(1) x(2))
		deAllocateL5
		genFastCall(<Q: 1654> 7)
lbl(286493)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(33)
		setValue(y(3))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286381)
lbl(286508)	putRecord(switches [allowdeprecated codegen compilerpasses core debuginfocontrol debuginfonamevars debuginfovarnames debugtype debugvalue echoqueries expression feedtoemulator gump gumpparseroutputsimplified gumpparserverbose gumpscannerbackup gumpscannerbestfit gumpscannercaseless gumpscannernowarn gumpscannerperfreport gumpscannerstatistics outputcode ozma profile realcore runwithdebugger showcompilememory showcompiletime showdeclares showinsert staticanalysis threadedqueries unnest warnforward warnopt warnredecl warnunused warnunusedformals watchdog] x(7))
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		setConstant(false)
		setConstant(true)
		setConstant(true)
		setConstant(true)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(false)
		setConstant(true)
		putRecord('attr' [defines localSwitches maxNumberOfErrors productionTemplates savedSwitches switches] x(2))
		setConstant(nil)
		setConstant(unit)
		setConstant(17)
		setConstant(unit)
		setConstant(nil)
		setValue(x(7))
		putRecord('feat' [values variables] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(15))
lbl(286616)	definition(x(7) 286751 pid('CompilerStateClass,init/fast' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 4) <Q: 1655> [g(1) y(4) y(15)])
		allocateL3
		move(g(1) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		callBI('AtomToString' [x(0)]#[x(3)])
lbl(286650)	definition(x(1) 286670 pid('' 2 pos('./compiler/CompilerClass.oz' 113 8) nil 2) unit nil)
		testNumber(x(0) 46 286664)
lbl(286660)	getNumber(95 x(1))
		return
lbl(286664)	unify(x(1) x(0))
		return
		endDefinition(286650)
lbl(286670)	move(x(3) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 29> 6)
		putList(x(2))
		setConstant(95)
		setConstant(nil)
		putList(x(0))
		setConstant(122)
		setValue(x(2))
		putList(x(1))
		setConstant(79)
		setValue(x(0))
		move(y(1) x(0))
		createVariableMove(y(2) x(2))
		genFastCall(<Q: 1654> 6)
		move(y(2) x(0))
		inlineAssign(defines x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) variables x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		callBI('NewDictionary' nil#[x(1)])
		unify(x(1) x(0))
		move(y(0) x(0))
		deAllocateL3
		genCall(gci(g(2) true putEnv true 1) 0)
		endDefinition(286616)
lbl(286751)	definition(x(8) 286777 pid('CompilerStateClass,init/slow' 1 pos('./compiler/CompilerClass.oz' 110 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1655> 3)
		endDefinition(286751)
lbl(286777)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(286787)	definition(x(7) 286862 pid('CompilerStateClass,macroDefine/fast' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 4) <Q: 1656> [g(7) g(8)])
		allocateL2
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(1)])
		inlineAt(defines x(3) cache)
		moveMoveXYYX(x(1) y(0) y(0) x(0))
		move(x(3) x(1))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 22> 6)
		testBool(y(1) 286831 286849)
		deAllocateL2
		return
lbl(286831)	inlineAt(defines x(0) cache)
		putList(x(1))
		setValue(y(0))
		setValue(x(0))
		inlineAssign(defines x(1) cache)
		deAllocateL2
		return
lbl(286849)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(123)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(286787)
lbl(286862)	definition(x(8) 286888 pid('CompilerStateClass,macroDefine/slow' 1 pos('./compiler/CompilerClass.oz' 121 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1656> 3)
		endDefinition(286862)
lbl(286888)	putRecord('#' [1 2 fast] x(10))
		setConstant(macroDefine)
		setValue(x(8))
		setValue(x(7))
lbl(286898)	definition(x(7) 286958 pid('CompilerStateClass,macroUndef/fast' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 4) <Q: 1657> [g(7) g(8)])
		allocateL1
		createVariableMove(y(0) x(1))
		genFastCall(<P: 194> 4)
		move(y(0) x(0))
		callBI('StringToAtom' [x(0)]#[x(3)])
		inlineAt(defines x(0) cache)
lbl(286922)	definition(x(1) 286940 pid('' 2 pos('./compiler/CompilerClass.oz' 129 30) nil 4) unit [x(3)])
		move(g(0) x(2))
		callBI('\\=' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(286922)
lbl(286940)	createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(defines x(0) cache)
		deAllocateL1
		return
		endDefinition(286898)
lbl(286958)	definition(x(8) 286984 pid('CompilerStateClass,macroUndef/slow' 1 pos('./compiler/CompilerClass.oz' 127 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1657> 3)
		endDefinition(286958)
lbl(286984)	putRecord('#' [1 2 fast] x(11))
		setConstant(macroUndef)
		setValue(x(8))
		setValue(x(7))
lbl(286994)	definition(x(7) 287011 pid('CompilerStateClass,getDefines/fast' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 2) <Q: 1658> nil)
		inlineAt(defines x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(286994)
lbl(287011)	definition(x(8) 287037 pid('CompilerStateClass,getDefines/slow' 1 pos('./compiler/CompilerClass.oz' 131 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1658> 3)
		endDefinition(287011)
lbl(287037)	putRecord('#' [1 2 fast] x(12))
		setConstant(getDefines)
		setValue(x(8))
		setValue(x(7))
lbl(287047)	definition(x(7) 287064 pid('CompilerStateClass,on/fast' 2 pos('./compiler/CompilerClass.oz' 135 6) nil 3) <Q: 1659> [y(15) g(3)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(287047)
lbl(287064)	definition(x(8) 287099 pid('CompilerStateClass,on/slow' 1 pos('./compiler/CompilerClass.oz' 135 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1659> 5)
		endDefinition(287064)
lbl(287099)	putRecord('#' [1 2 fast] x(13))
		setConstant(on)
		setValue(x(8))
		setValue(x(7))
lbl(287109)	definition(x(7) 287126 pid('CompilerStateClass,off/fast' 2 pos('./compiler/CompilerClass.oz' 138 6) nil 3) <Q: 1660> [y(15) g(4)])
		move(x(1) x(2))
		move(g(1) x(1))
		genCall(gci(g(0) true setSwitch true 3) 0)
		endDefinition(287109)
lbl(287126)	definition(x(8) 287161 pid('CompilerStateClass,off/slow' 1 pos('./compiler/CompilerClass.oz' 138 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1660> 5)
		endDefinition(287126)
lbl(287161)	putRecord('#' [1 2 fast] x(14))
		setConstant(off)
		setValue(x(8))
		setValue(x(7))
		putRecord(messagePattern 3 x(7))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(287181)	definition(x(8) 287539 pid('CompilerStateClass,setSwitch' 1 pos('./compiler/CompilerClass.oz' 141 6) nil 9) unit [x(7)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		createVariable(y(3))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(4)] 287237)
		inlineDot(x(0) 3 x(3) cache)
		unify(x(3) y(3))
		branch(287240)
lbl(287237)	getLiteral(unit y(3))
lbl(287240)	match(y(1) ht(287384 [onScalar(verbose 287243) onScalar(debuginfo 287303)]))
lbl(287243)	inlineAt(switches x(0) cache)
		putRecord(switches [compilerpasses showinsert] x(1))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(compilerpasses)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(showinsert)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(287303)	inlineAt(switches x(0) cache)
		putRecord(switches [debuginfocontrol debuginfovarnames runwithdebugger] x(1))
		setValue(y(2))
		setValue(y(2))
		setValue(y(2))
		callBI('Adjoin' [x(0) x(1)]#[x(2)])
		inlineAssign(switches x(2) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(runwithdebugger)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(y(2))
		sendMsg(notify x(1) 1 cache)
		inlineAt(wrapper x(1) cache)
		putRecord(switch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
lbl(287384)	inlineAt(switches x(0) cache)
		move(y(1) x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 287432)
		inlineAt(switches x(0) cache)
		move(y(2) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		inlineAssign(switches x(3) cache)
		inlineAt(wrapper x(3) cache)
		putRecord(switch 2 x(0))
		setValue(y(1))
		setValue(y(2))
		deAllocateL4
		tailSendMsg(notify x(3) 1 cache)
lbl(287432)	testLiteral(y(3) unit 287506)
		inlineAt(reporter x(5) cache)
		putRecord('#' 3 x(4))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		putRecord(setSwitch 2 x(8))
		setValue(y(1))
		setValue(y(2))
		putRecord(oz 1 x(7))
		setValue(x(8))
		putRecord(hint [l m] x(6))
		setConstant('Query')
		setValue(x(7))
		putList(x(2))
		setValue(x(6))
		setConstant(nil)
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(3))
		sendMsg(error x(5) [abort coord items kind msg] cache)
		inlineAt(reporter x(0) cache)
		deAllocateL4
		tailSendMsg(logReject x(0) 0 cache)
lbl(287506)	inlineAt(reporter x(4) cache)
		putRecord('#' 3 x(3))
		setConstant('unknown switch `')
		setValue(y(1))
		setConstant('\'')
		move(y(3) x(1))
		putConstant(false x(0))
		putConstant('compiler directive error' x(2))
		deAllocateL4
		tailSendMsg(error x(4) [abort coord kind msg] cache)
		endDefinition(287181)
lbl(287539)	putList(x(7))
		setConstant(setSwitch)
		setValue(x(8))
lbl(287545)	definition(x(8) 287565 pid('CompilerStateClass,getSwitch/fast' 2 pos('./compiler/CompilerClass.oz' 172 6) nil 4) <Q: 1661> nil)
		inlineAt(switches x(2) cache)
		callBI('.' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(287545)
lbl(287565)	definition(x(15) 287600 pid('CompilerStateClass,getSwitch/slow' 1 pos('./compiler/CompilerClass.oz' 172 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1661> 5)
		endDefinition(287565)
lbl(287600)	putRecord('#' [1 2 fast] x(16))
		setConstant(getSwitch)
		setValue(x(15))
		setValue(x(8))
lbl(287610)	definition(x(8) 287649 pid('CompilerStateClass,localSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 175 6) nil 3) <Q: 1662> nil)
		inlineAt(localSwitches x(0) cache)
		testLiteral(x(0) unit 287646)
lbl(287625)	inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(localSwitches x(2) cache)
lbl(287646)	return
		endDefinition(287610)
lbl(287649)	definition(x(15) 287663 pid('CompilerStateClass,localSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 175 6) nil 1) unit nil)
		getLiteral(localSwitches x(0))
		genFastCall(<Q: 1662> 1)
		endDefinition(287649)
lbl(287663)	putRecord('#' [1 2 fast] x(17))
		setConstant(localSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287673)	definition(x(8) 287725 pid('CompilerStateClass,unlocalSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 181 6) nil 2) <Q: 1663> nil)
		inlineAt(localSwitches x(0) cache)
		match(x(0) ht(287710 [onScalar(unit 287687) onRecord('|' 2 287688)]))
lbl(287687)	return
lbl(287688)	getVarVar(x(0) x(1))
		inlineAssign(switches x(0) cache)
		inlineAssign(savedSwitches x(1) cache)
		putConstant(unit x(0))
		inlineAssign(localSwitches x(0) cache)
		return
lbl(287710)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(187)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(287673)
lbl(287725)	definition(x(15) 287739 pid('CompilerStateClass,unlocalSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 181 6) nil 1) unit nil)
		getLiteral(unlocalSwitches x(0))
		genFastCall(<Q: 1663> 1)
		endDefinition(287725)
lbl(287739)	putRecord('#' [1 2 fast] x(18))
		setConstant(unlocalSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287749)	definition(x(8) 287779 pid('CompilerStateClass,pushSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 189 6) nil 3) <Q: 1664> nil)
		inlineAt(switches x(0) cache)
		inlineAt(savedSwitches x(1) cache)
		putList(x(2))
		setValue(x(0))
		setValue(x(1))
		inlineAssign(savedSwitches x(2) cache)
		return
		endDefinition(287749)
lbl(287779)	definition(x(15) 287793 pid('CompilerStateClass,pushSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 189 6) nil 1) unit nil)
		getLiteral(pushSwitches x(0))
		genFastCall(<Q: 1664> 1)
		endDefinition(287779)
lbl(287793)	putRecord('#' [1 2 fast] x(19))
		setConstant(pushSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287803)	definition(x(8) 287874 pid('CompilerStateClass,popSwitches/fast' 0 pos('./compiler/CompilerClass.oz' 192 6) nil 3) <Q: 1665> nil)
		inlineAt(savedSwitches x(0) cache)
		match(x(0) ht(287859 [onScalar(nil 287817) onRecord('|' 2 287818)]))
lbl(287817)	return
lbl(287818)	allocateL1
		getVarVar(x(1) y(0))
		inlineAssign(switches x(1) cache)
		inlineAt(wrapper x(1) cache)
		inlineAt(switches x(2) cache)
		putRecord(switches 1 x(0))
		setValue(x(2))
		sendMsg(notify x(1) 1 cache)
		move(y(0) x(0))
		inlineAssign(savedSwitches x(0) cache)
		deAllocateL1
		return
lbl(287859)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(198)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(287803)
lbl(287874)	definition(x(15) 287888 pid('CompilerStateClass,popSwitches/slow' 1 pos('./compiler/CompilerClass.oz' 192 6) nil 1) unit nil)
		getLiteral(popSwitches x(0))
		genFastCall(<Q: 1665> 1)
		endDefinition(287874)
lbl(287888)	putRecord('#' [1 2 fast] x(20))
		setConstant(popSwitches)
		setValue(x(15))
		setValue(x(8))
lbl(287898)	definition(x(8) 287931 pid('CompilerStateClass,setMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) <Q: 1666> nil)
		inlineAssign(maxNumberOfErrors x(0) cache)
		inlineAt(wrapper x(1) cache)
		putRecord(maxNumberOfErrors 1 x(2))
		setValue(x(0))
		move(x(2) x(0))
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(287898)
lbl(287931)	definition(x(15) 287957 pid('CompilerStateClass,setMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 201 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1666> 3)
		endDefinition(287931)
lbl(287957)	putRecord('#' [1 2 fast] x(21))
		setConstant(setMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
lbl(287967)	definition(x(8) 287984 pid('CompilerStateClass,getMaxNumberOfErrors/fast' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 2) <Q: 1667> nil)
		inlineAt(maxNumberOfErrors x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(287967)
lbl(287984)	definition(x(15) 288010 pid('CompilerStateClass,getMaxNumberOfErrors/slow' 1 pos('./compiler/CompilerClass.oz' 205 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1667> 3)
		endDefinition(287984)
lbl(288010)	putRecord('#' [1 2 fast] x(22))
		setConstant(getMaxNumberOfErrors)
		setValue(x(15))
		setValue(x(8))
		putRecord(messagePattern 3 x(8))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
lbl(288030)	definition(x(15) 288156 pid('CompilerStateClass,enter' 1 pos('./compiler/CompilerClass.oz' 209 6) nil 4) unit [x(8) y(15) g(9)])
		allocateL4
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 288076)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(288076)	createVariable(y(3))
		move(y(0) x(0))
		putConstant(3 x(3))
		testBI('HasFeature' [x(0) x(3)]#[x(1)] 288099)
		inlineDot(x(0) 3 x(1) cache)
		unify(x(1) y(3))
		branch(288102)
lbl(288099)	getLiteral(true y(3))
lbl(288102)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		move(y(3) x(2))
		genCall(gci(g(1) true <M: Enter> false 3) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288030)
lbl(288156)	putList(x(8))
		setConstant(enter)
		setValue(x(15))
lbl(288162)	definition(x(15) 288238 pid('CompilerStateClass,enterMultiple/fast' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 4) <Q: 1668> [y(15) g(3) g(9)])
		allocateL2
		getSelf(x(2))
lbl(288171)	definition(x(1) 288192 pid('' 1 pos('./compiler/CompilerClass.oz' 214 13) nil 3) unit [x(2) g(0) g(1)])
		move(g(0) x(1))
		setSelf(x(1))
		move(g(2) x(2))
		createVariable(x(1))
		genCall(gci(g(1) true <M: Enter> true 3) 0)
		endDefinition(288171)
lbl(288192)	genFastCall(<P: 34> 4)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288162)
lbl(288238)	definition(x(23) 288264 pid('CompilerStateClass,enterMultiple/slow' 1 pos('./compiler/CompilerClass.oz' 213 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1668> 3)
		endDefinition(288238)
lbl(288264)	putRecord('#' [1 2 fast] x(24))
		setConstant(enterMultiple)
		setValue(x(23))
		setValue(x(15))
lbl(288274)	definition(x(15) 288391 pid('CompilerStateClass,Enter/fast' 3 pos('./compiler/CompilerClass.oz' 217 6) nil 5) <Q: 1669> [g(10) y(3)])
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) variables x(0) cache)
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		callBI('Dictionary.put' [x(0) x(1) x(2)]#nil)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		move(y(1) x(3))
		callBI('Dictionary.put' [x(0) x(1) x(3)]#nil)
		callBI('IsDet' [x(3)]#[x(0)])
		testBI('Not' [x(0)]#[x(4)] 288367)
lbl(288335)	testBool(y(2) 288367 288356)
lbl(288339)	move(g(1) x(0))
		inlineDot(x(0) nameVariable x(4) cache)
		move(y(1) x(0))
		call(x(4) 2)
		branch(288367)
lbl(288356)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(221)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(288367)	putConstant(multiple x(0))
		sendMsg(setUse y(0) 1 cache)
		putConstant(true x(0))
		move(y(0) x(1))
		deAllocateL4
		tailSendMsg(setToplevel x(1) 1 cache)
		endDefinition(288274)
lbl(288391)	definition(x(23) 288432 pid('CompilerStateClass,Enter/slow' 1 pos('./compiler/CompilerClass.oz' 217 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1669> 7)
		endDefinition(288391)
lbl(288432)	putRecord('#' [1 2 fast] x(25))
		setConstant(<M: Enter>)
		setValue(x(23))
		setValue(x(15))
lbl(288442)	definition(x(15) 288517 pid('CompilerStateClass,putEnv/fast' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 4) <Q: 1670> [g(11) y(15) g(9)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		getSelf(x(1))
		inlineDot(x(1) values x(1) cache)
		callBI('Dictionary.removeAll' [x(1)]#nil)
		genCall(gci(g(1) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288442)
lbl(288517)	definition(x(23) 288543 pid('CompilerStateClass,putEnv/slow' 1 pos('./compiler/CompilerClass.oz' 227 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1670> 3)
		endDefinition(288517)
lbl(288543)	putRecord('#' [1 2 fast] x(26))
		setConstant(putEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288553)	definition(x(15) 288606 pid('CompilerStateClass,mergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 4) <Q: 1671> [y(15) g(9)])
		allocateL2
		genCall(gci(g(0) true <M: MergeEnv> false 1) 0)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(288553)
lbl(288606)	definition(x(23) 288632 pid('CompilerStateClass,mergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 233 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1671> 3)
		endDefinition(288606)
lbl(288632)	putRecord('#' [1 2 fast] x(27))
		setConstant(mergeEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288642)	definition(x(15) 288710 pid('CompilerStateClass,MergeEnv/fast' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) <Q: 1672> [g(12) y(12) y(15) g(3)])
		getSelf(x(2))
lbl(288650)	definition(x(1) 288705 pid('' 2 pos('./compiler/CompilerClass.oz' 239 3) nil 6) unit [x(2) g(1) g(2) g(3)])
		allocateL2
		move(g(0) x(2))
		setSelf(x(2))
		move(g(1) x(3))
		inlineDot(x(3) variable x(4) cache)
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(1) y(0) x(5) y(1))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(1) 3 cache)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(g(3) x(2))
		deAllocateL2
		genCall(gci(g(2) true <M: Enter> true 3) 0)
		endDefinition(288650)
lbl(288705)	genFastCall(<P: 175> 5)
		endDefinition(288642)
lbl(288710)	definition(x(23) 288736 pid('CompilerStateClass,MergeEnv/slow' 1 pos('./compiler/CompilerClass.oz' 237 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1672> 3)
		endDefinition(288710)
lbl(288736)	putRecord('#' [1 2 fast] x(28))
		setConstant(<M: MergeEnv>)
		setValue(x(23))
		setValue(x(15))
lbl(288746)	definition(x(15) 288812 pid('CompilerStateClass,annotateEnv/fast' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) <Q: 1673> [g(13)])
		getSelf(x(2))
lbl(288754)	definition(x(1) 288807 pid('' 1 pos('./compiler/CompilerClass.oz' 246 3) nil 3) unit [x(2) g(0)])
		allocateL2
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		getSelf(x(1))
		inlineDot(x(1) values x(0) cache)
		move(y(1) x(1))
		callBI('Dictionary.get' [x(0) x(1)]#[x(2)])
		move(x(2) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(valToSubst x(1) 1 cache)
		endDefinition(288754)
lbl(288807)	genFastCall(<P: 34> 5)
		endDefinition(288746)
lbl(288812)	definition(x(23) 288838 pid('CompilerStateClass,annotateEnv/slow' 1 pos('./compiler/CompilerClass.oz' 244 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1673> 3)
		endDefinition(288812)
lbl(288838)	putRecord('#' [1 2 fast] x(29))
		setConstant(annotateEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288848)	definition(x(15) 288873 pid('CompilerStateClass,getEnv/fast' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 4) <Q: 1674> [g(9)])
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) x(2))
		putConstant(env x(0))
		genFastCall(<P: 108> 7)
		endDefinition(288848)
lbl(288873)	definition(x(23) 288899 pid('CompilerStateClass,getEnv/slow' 1 pos('./compiler/CompilerClass.oz' 252 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1674> 3)
		endDefinition(288873)
lbl(288899)	putRecord('#' [1 2 fast] x(30))
		setConstant(getEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288909)	definition(x(15) 288935 pid('CompilerStateClass,lookupVariableInEnv/fast' 2 pos('./compiler/CompilerClass.oz' 255 6) nil 5) <Q: 1675> [g(14)])
		getSelf(x(2))
		inlineDot(x(2) variables x(2) cache)
		putConstant(undeclared x(3))
		callBI('Dictionary.condGet' [x(2) x(0) x(3)]#[x(4)])
		unify(x(4) x(1))
		return
		endDefinition(288909)
lbl(288935)	definition(x(23) 288970 pid('CompilerStateClass,lookupVariableInEnv/slow' 1 pos('./compiler/CompilerClass.oz' 255 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1675> 5)
		endDefinition(288935)
lbl(288970)	putRecord('#' [1 2 fast] x(31))
		setConstant(lookupVariableInEnv)
		setValue(x(23))
		setValue(x(15))
lbl(288980)	definition(x(15) 289090 pid('CompilerStateClass,lookupInEnv' 1 pos('./compiler/CompilerClass.oz' 258 6) nil 9) unit [g(15) g(13)])
		putConstant(2 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(1) cache)
		inlineDot(x(0) 2 x(2) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		testBI('Dictionary.member' [x(3) x(1)]#[x(4)] 289034)
		getSelf(x(0))
		inlineDot(x(0) values x(0) cache)
		callBI('Dictionary.get' [x(0) x(1)]#[x(3)])
		unify(x(3) x(2))
		return
lbl(289034)	inlineAt(reporter x(4) cache)
		putRecord(oz 1 x(5))
		setValue(x(1))
		putRecord('#' 2 x(3))
		setConstant('undeclared variable ')
		setValue(x(5))
		putRecord(oz 1 x(8))
		setValue(x(0))
		putRecord(hint [l m] x(7))
		setConstant('Query')
		setValue(x(8))
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		move(x(6) x(1))
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		tailSendMsg(error x(4) [abort items kind msg] cache)
		endDefinition(288980)
lbl(289090)	putList(x(23))
		setConstant(lookupInEnv)
		setValue(x(15))
lbl(289096)	definition(x(15) 289168 pid('CompilerStateClass,removeFromEnv/fast' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 4) <Q: 1676> [g(16) g(9)])
		allocateL2
		getSelf(x(3))
		inlineDot(x(3) variables x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		callBI('Dictionary.remove' [x(1) x(0)]#nil)
		inlineAt(wrapper x(0) cache)
		getSelf(x(3))
		inlineDot(x(3) values x(1) cache)
		move(x(0) y(0))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		deAllocateL2
		tailSendMsg(notify x(1) 1 cache)
		endDefinition(289096)
lbl(289168)	definition(x(32) 289194 pid('CompilerStateClass,removeFromEnv/slow' 1 pos('./compiler/CompilerClass.oz' 268 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1676> 3)
		endDefinition(289168)
lbl(289194)	putRecord('#' [1 2 fast] x(33))
		setConstant(removeFromEnv)
		setValue(x(32))
		setValue(x(15))
lbl(289204)	definition(x(15) 289227 pid('CompilerStateClass,getVars/fast' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) <Q: 1677> [g(17)])
		getSelf(x(1))
		inlineDot(x(1) variables x(1) cache)
		callBI('Dictionary.items' [x(1)]#[x(2)])
		unify(x(2) x(0))
		return
		endDefinition(289204)
lbl(289227)	definition(x(32) 289253 pid('CompilerStateClass,getVars/slow' 1 pos('./compiler/CompilerClass.oz' 273 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1677> 3)
		endDefinition(289227)
lbl(289253)	putRecord('#' [1 2 fast] x(34))
		setConstant(getVars)
		setValue(x(32))
		setValue(x(15))
		putRecord('#' 26 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(7))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		setValue(x(8))
		setValue(x(24))
		setValue(x(25))
		setValue(x(26))
		setValue(x(27))
		setValue(x(28))
		setValue(x(29))
		setValue(x(30))
		setValue(x(31))
		setValue(x(23))
		setValue(x(33))
		setValue(x(34))
		move(y(15) x(6))
		putConstant(nil x(0))
		putConstant(nil x(4))
		putConstant('CompilerStateClass' x(5))
		marshalledFastCall(<R: 'class'> 14)
		putList(x(0))
		setValue(y(15))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: ExecutingThread> <M: InterruptLock> <M: ParseFile> <M: ParseVirtualString> reporter wrapper] x(2))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(3))
		createVariable(y(16))
lbl(289366)	definition(x(7) 289473 pid('CompilerInternal,init/fast' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 4) <Q: 1678> [g(18) y(15) y(0) y(3) y(16)])
		allocateL2
		inlineAssign(wrapper x(0) cache)
		putConstant(builtin x(1))
		putConstant(3 x(2))
		callBI(builtin [x(1) x(2)]#[x(3)])
		putRecord(env ['`Builtin`' '`Compiler`'] x(1))
		setValue(x(3))
		setValue(x(0))
		move(g(0) x(2))
		callBI('Adjoin' [x(2) x(1)]#[x(3)])
		move(x(0) y(0))
		move(x(3) x(0))
		genCall(gci(g(1) true init false 1) 0)
		move(g(2) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(1) y(0) x(1))
		getSelf(x(0))
		sendMsg(init y(1) 2 cache)
		move(y(1) x(0))
		inlineAssign(reporter x(0) cache)
		move(g(3) x(0))
		inlineAssign(<M: ParseFile> x(0) cache)
		move(g(4) x(1))
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		putConstant(unit x(2))
		inlineAssign(<M: ExecutingThread> x(2) cache)
		callBI('NewLock' nil#[x(2)])
		inlineAssign(<M: InterruptLock> x(2) cache)
		deAllocateL2
		return
		endDefinition(289366)
lbl(289473)	definition(x(8) 289499 pid('CompilerInternal,init/slow' 1 pos('./compiler/CompilerClass.oz' 309 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1678> 3)
		endDefinition(289473)
lbl(289499)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(289509)	definition(x(7) 289526 pid('CompilerInternal,getReporter/fast' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 2) <Q: 1679> nil)
		inlineAt(reporter x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(289509)
lbl(289526)	definition(x(8) 289552 pid('CompilerInternal,getReporter/slow' 1 pos('./compiler/CompilerClass.oz' 320 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1679> 3)
		endDefinition(289526)
lbl(289552)	putRecord('#' [1 2 fast] x(10))
		setConstant(getReporter)
		setValue(x(8))
		setValue(x(7))
lbl(289562)	definition(x(7) 289676 pid('CompilerInternal,notifyOne/fast' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 4) <Q: 1680> [y(4) g(9)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant('oz.version' x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		putRecord('#' 3 x(1))
		setConstant('Mozart Compiler ')
		setValue(y(1))
		setConstant(' playing Oz 3\n\n')
		putRecord(info 1 x(0))
		setValue(x(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(switches x(3) cache)
		putRecord(switches 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		inlineAt(maxNumberOfErrors x(3) cache)
		putRecord(maxNumberOfErrors 1 x(0))
		setValue(x(3))
		callBI('Send' [x(1) x(0)]#nil)
		getSelf(x(3))
		inlineDot(x(3) values x(3) cache)
		move(x(3) x(1))
		putConstant(env x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 108> 6)
		putRecord(env 1 x(0))
		setValue(y(1))
		move(y(0) x(1))
		callBI('Send' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(289562)
lbl(289676)	definition(x(8) 289702 pid('CompilerInternal,notifyOne/slow' 1 pos('./compiler/CompilerClass.oz' 323 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1680> 3)
		endDefinition(289676)
lbl(289702)	putRecord('#' [1 2 fast] x(11))
		setConstant(notifyOne)
		setValue(x(8))
		setValue(x(7))
lbl(289712)	definition(x(7) 289743 pid('CompilerInternal,ping/fast' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 2) <Q: 1681> nil)
		allocateL1
		inlineAt(wrapper x(1) cache)
		move(x(0) y(0))
		putConstant(pong x(0))
		sendMsg(notify x(1) 1 cache)
		getLiteral(unit y(0))
		deAllocateL1
		return
		endDefinition(289712)
lbl(289743)	definition(x(8) 289769 pid('CompilerInternal,ping/slow' 1 pos('./compiler/CompilerClass.oz' 340 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1681> 3)
		endDefinition(289743)
lbl(289769)	putRecord('#' [1 2 fast] x(12))
		setConstant(ping)
		setValue(x(8))
		setValue(x(7))
lbl(289779)	definition(x(7) 289798 pid('CompilerInternal,setFrontEnd/fast' 2 pos('./compiler/CompilerClass.oz' 345 6) nil 2) <Q: 1682> nil)
		inlineAssign(<M: ParseFile> x(0) cache)
		inlineAssign(<M: ParseVirtualString> x(1) cache)
		return
		endDefinition(289779)
lbl(289798)	definition(x(8) 289833 pid('CompilerInternal,setFrontEnd/slow' 1 pos('./compiler/CompilerClass.oz' 345 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1682> 5)
		endDefinition(289798)
lbl(289833)	putRecord('#' [1 2 fast] x(13))
		setConstant(setFrontEnd)
		setValue(x(8))
		setValue(x(7))
		createVariable(y(0))
lbl(289845)	definition(x(7) 289912 pid('CompilerInternal,feedFile/fast' 2 pos('./compiler/CompilerClass.oz' 349 6) nil 4) <Q: 1683> [y(0)])
		getSelf(x(2))
lbl(289853)	definition(x(3) 289904 pid('' 0 pos('./compiler/CompilerClass.oz' 351 14) nil 3) unit [x(2) x(0) x(1) g(0)])
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		putRecord('#' 3 x(2))
		setConstant('%%% feeding file ')
		setValue(g(1))
		setConstant('\n')
		move(x(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		inlineAt(<M: ParseFile> x(0) cache)
		move(g(1) x(1))
		move(g(2) x(2))
		genCall(gci(g(3) true <M: Feed> true 3) 0)
		endDefinition(289853)
lbl(289904)	move(x(3) x(0))
		genCall(gci(g(0) true <M: CatchResult> true 1) 0)
		endDefinition(289845)
lbl(289912)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(289920)	definition(x(14) 289982 pid('CompilerInternal,feedFile/slow' 1 pos('./compiler/CompilerClass.oz' 349 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 289968)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(289971)
lbl(289968)	getLiteral('return' y(2))
lbl(289971)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1683> 5)
		endDefinition(289920)
lbl(289982)	putRecord(feedFile 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(15))
		setConstant(feedFile)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(290002)	definition(x(7) 290103 pid('CompilerInternal,feedVirtualString/fast' 2 pos('./compiler/CompilerClass.oz' 356 6) nil 4) <Q: 1684> [y(15) y(0)])
		getSelf(x(2))
lbl(290010)	definition(x(3) 290095 pid('' 0 pos('./compiler/CompilerClass.oz' 358 14) nil 3) unit [x(2) g(0) x(0) x(1) g(1)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		putConstant(echoqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 290051 290067)
		inlineAt(reporter x(1) cache)
		move(g(2) x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(290078)
lbl(290051)	inlineAt(reporter x(1) cache)
		putConstant('%%% feeding virtual string\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
		branch(290078)
lbl(290067)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(359)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290078)	inlineAt(<M: ParseVirtualString> x(0) cache)
		move(g(2) x(1))
		move(g(3) x(2))
		deAllocateL1
		genCall(gci(g(4) true <M: Feed> true 3) 0)
		endDefinition(290010)
lbl(290095)	move(x(3) x(0))
		genCall(gci(g(1) true <M: CatchResult> true 1) 0)
		endDefinition(290002)
lbl(290103)	putRecord(messagePattern 2 x(8))
		setConstant(unit)
		setConstant(unit)
lbl(290111)	definition(x(14) 290173 pid('CompilerInternal,feedVirtualString/slow' 1 pos('./compiler/CompilerClass.oz' 356 6) nil 4) unit [x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 290159)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(290162)
lbl(290159)	getLiteral('return' y(2))
lbl(290162)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1684> 5)
		endDefinition(290111)
lbl(290173)	putRecord(feedVirtualString 2 x(8))
		setConstant(<U: ooRequiredArg>)
		setConstant('return')
		putRecord('#' [1 2 default fast] x(16))
		setConstant(feedVirtualString)
		setValue(x(14))
		setValue(x(8))
		setValue(x(7))
lbl(290193)	definition(x(7) 290293 pid('CompilerInternal,CatchResult/fast' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 2) <Q: 1685> nil)
		allocateL1
		move(x(0) y(0))
		exHandler(290274)
		match(x(0) ht(290271 [onScalar(tooManyErrors 290208) onScalar(rejected 290223) onScalar(aborted 290235) onScalar(crashed 290247) onScalar(<M: InterruptException> 290259)]))
lbl(290208)	inlineAt(reporter x(1) cache)
		putConstant('%** Too many errors, aborting compilation\n' x(0))
		deAllocateL1
		tailSendMsg(userInfo x(1) 1 cache)
lbl(290223)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logReject x(0) 0 cache)
lbl(290235)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logAbort x(0) 0 cache)
lbl(290247)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logCrash x(0) 0 cache)
lbl(290259)	inlineAt(reporter x(0) cache)
		deAllocateL1
		tailSendMsg(logInterrupt x(0) 0 cache)
lbl(290271)	callBI('Exception.raise' [x(0)]#nil)
lbl(290274)	call(y(0) 0)
		inlineAt(reporter x(0) cache)
		sendMsg(logAccept x(0) 0 cache)
		popEx
		deAllocateL1
		return
		endDefinition(290193)
lbl(290293)	definition(x(8) 290319 pid('CompilerInternal,CatchResult/slow' 1 pos('./compiler/CompilerClass.oz' 367 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1685> 3)
		endDefinition(290293)
lbl(290319)	putRecord('#' [1 2 fast] x(14))
		setConstant(<M: CatchResult>)
		setValue(x(8))
		setValue(x(7))
lbl(290329)	definition(x(7) 290837 pid('CompilerInternal,Feed/fast' 3 pos('./compiler/CompilerClass.oz' 383 6) nil 5) <Q: 1686> [g(19) y(15) y(3) y(16) y(0) g(4) g(3) y(12) y(11)])
		allocateL5
		callBI('Thread.this' nil#[x(3)])
		inlineAssign(<M: ExecutingThread> x(3) cache)
		inlineAt(reporter x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		sendMsg(clearErrors x(3) 0 cache)
		createVariable(y(3))
		exHandler(290375)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(290815)
lbl(290375)	getSelf(x(0))
		createVariable(y(4))
lbl(290379)	definition(x(1) 290445 pid('DoParse' 0 pos('./compiler/CompilerClass.oz' 387 5) nil 5) unit [x(0) g(1) y(0) y(1) y(4)])
		allocateL3
		move(g(0) x(0))
		setSelf(x(0))
		inlineAt(reporter x(1) cache)
		getSelf(x(2))
lbl(290398)	definition(x(3) 290414 pid('' 2 pos('./compiler/CompilerClass.oz' 389 6) nil 3) unit [x(2) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true getSwitch true 2) 0)
		endDefinition(290398)
lbl(290414)	moveMoveXYXY(x(1) y(0) x(3) y(1))
		createVariableMove(y(2) x(0))
		genCall(gci(g(1) true getDefines false 1) 0)
		move(g(3) x(0))
		moveMoveYXYX(y(0) x(1) y(1) x(2))
		move(y(2) x(3))
		move(g(4) x(4))
		deAllocateL3
		tailCall(g(2) 5)
		endDefinition(290379)
lbl(290445)	moveMoveXYYX(x(1) y(1) y(0) x(0))
		move(g(2) x(2))
		testBI('==' [x(0) x(2)]#[x(3)] 290476)
lbl(290457)	inlineAt(reporter x(1) cache)
		putConstant('parsing ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(1) 0)
		branch(290540)
lbl(290476)	move(g(3) x(3))
		testBI('\\=' [x(0) x(3)]#[x(4)] 290457)
lbl(290483)	inlineAt(reporter x(4) cache)
		putConstant('acquiring syntax tree ...' x(0))
		sendMsg(logPhase x(4) 1 cache)
		move(y(1) x(0))
		move(g(5) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		putConstant('checking syntax tree for validity ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
lbl(290520)	definition(x(0) 290534 pid('' 0 pos('./compiler/CompilerClass.oz' 402 22) nil 1) unit [y(4)])
		move(g(0) x(0))
		genFastCall(<Q: 1653> 3)
		endDefinition(290520)
lbl(290534)	move(g(6) x(1))
		genCall(gci(g(4) true <M: ExecProtected> false 2) 0)
lbl(290540)	inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 290575 290564)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(290564)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(404)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290575)	putConstant(unnest x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(4) true getSwitch false 2) 0)
		testBool(y(0) 290811 290800)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		createVariable(y(1))
		testBool(y(0) 290669 290779)
		move(g(7) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`runTimeDict`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		callBI('NewDictionary' nil#[x(1)])
		move(y(0) x(0))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(8) x(0))
		inlineDot(x(0) joinQueries x(3) cache)
		inlineAt(reporter x(1) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(2))
		call(x(3) 3)
		branch(290790)
lbl(290669)	putConstant(expression x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(0) 290763 290768)
		testLiteral(y(4) nil 290691)
lbl(290686)	getLiteral(nil y(1))
		branch(290790)
lbl(290691)	move(g(7) x(0))
		inlineDot(x(0) variable x(3) cache)
		callBI(newObject [x(3)]#[x(1)])
		move(x(1) y(0))
		putConstant('`result`' x(0))
		putConstant(putEnv x(1))
		putConstant(unit x(2))
		sendMsg(init y(0) 3 cache)
		move(y(2) x(0))
		putConstant(result x(3))
		createVariable(x(1))
		callBI('CondSelect' [x(0) x(3) x(1)]#[x(4)])
		move(y(0) x(0))
		move(x(4) x(1))
		move(g(5) x(2))
		genCall(gci(g(1) true enter false 3) 0)
		move(g(8) x(0))
		inlineDot(x(0) makeExpressionQuery x(2) cache)
		moveMoveYXYX(y(4) x(0) y(1) x(1))
		call(x(2) 2)
		branch(290790)
lbl(290763)	unify(y(1) y(4))
		branch(290790)
lbl(290768)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(413)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290779)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(408)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290790)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		genCall(gci(g(4) true <M: FeedSub> false 2) 0)
		branch(290811)
lbl(290800)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(407)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(290811)	getLiteral(unit y(3))
		popEx
lbl(290815)	putConstant(unit x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testRecord(y(3) ex 1 290833)
lbl(290828)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(290833)	deAllocateL5
		return
		endDefinition(290329)
lbl(290837)	definition(x(8) 290878 pid('CompilerInternal,Feed/slow' 1 pos('./compiler/CompilerClass.oz' 383 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1686> 7)
		endDefinition(290837)
lbl(290878)	putRecord('#' [1 2 fast] x(17))
		setConstant(<M: Feed>)
		setValue(x(8))
		setValue(x(7))
lbl(290888)	definition(x(7) 291070 pid('CompilerInternal,FeedSub/fast' 2 pos('./compiler/CompilerClass.oz' 432 6) nil 5) <Q: 1687> [g(19) g(20) y(0) y(15) g(3)])
		allocateL1
		callBI('Thread.this' nil#[x(2)])
		getSelf(x(3))
lbl(290900)	definition(x(4) 291022 pid('' 0 pos('./compiler/CompilerClass.oz' 436 16) nil 3) unit [x(3) g(1) x(2) g(2) x(0) g(3)])
		allocateL1
		move(g(0) x(0))
		setSelf(x(0))
		createVariable(y(0))
		exHandler(290924)
		getRecord(ex 1 y(0))
		unifyValue(x(0))
		branch(291005)
lbl(290924)	exHandler(290976)
		match(x(0) ht(290973 [onScalar(tooManyErrors 290929) onScalar(rejected 290940) onScalar(aborted 290951) onScalar(crashed 290962)]))
lbl(290929)	move(g(2) x(0))
		putConstant(tooManyErrors x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291001)
lbl(290940)	move(g(2) x(0))
		putConstant(rejected x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291001)
lbl(290951)	move(g(2) x(0))
		putConstant(aborted x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291001)
lbl(290962)	move(g(2) x(0))
		putConstant(crashed x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(291001)
lbl(290973)	callBI('Exception.raise' [x(0)]#nil)
lbl(290976)	getSelf(x(2))
lbl(290978)	definition(x(1) 290994 pid('' 1 pos('./compiler/CompilerClass.oz' 439 9) nil 2) unit [x(2) g(3)])
		move(g(0) x(1))
		setSelf(x(1))
		genCall(gci(g(1) true <M: CompileQuery> true 1) 0)
		endDefinition(290978)
lbl(290994)	move(g(4) x(0))
		genFastCall(<P: 34> 4)
		popEx
lbl(291001)	getLiteral(unit y(0))
		popEx
lbl(291005)	genCall(gci(g(5) true unlocalSwitches false 0) 0)
		testRecord(y(0) ex 1 291018)
lbl(291013)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(291018)	deAllocateL1
		return
		endDefinition(290900)
lbl(291022)	move(x(4) x(0))
		move(g(4) x(1))
		genCall(gci(g(2) true <M: ExecProtected> false 2) 0)
		inlineAt(reporter x(1) cache)
		createVariableMove(y(0) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(0) 291055 291057)
		putConstant(rejected x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(291055)	deAllocateL1
		return
lbl(291057)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(454)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(290888)
lbl(291070)	definition(x(8) 291105 pid('CompilerInternal,FeedSub/slow' 1 pos('./compiler/CompilerClass.oz' 432 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1687> 5)
		endDefinition(291070)
lbl(291105)	putRecord('#' [1 2 fast] x(18))
		setConstant(<M: FeedSub>)
		setValue(x(8))
		setValue(x(7))
lbl(291115)	definition(x(7) 293076 pid('CompilerInternal,CompileQuery/fast' 1 pos('./compiler/CompilerClass.oz' 458 6) nil 11) <Q: 1688> [y(15) y(11) y(13) g(21) y(0) y(1) y(4) g(19) g(4)])
		match(x(0) ht(291160 [onScalar(dirLocalSwitches 291124) onScalar(dirPushSwitches 291127) onScalar(dirPopSwitches 291130) onRecord(dirSwitch 1 291133) onRecord(fSynTopLevelProductionTemplates 1 291143)]))
lbl(291124)	genCall(gci(g(0) true localSwitches true 0) 0)
lbl(291127)	genCall(gci(g(0) true pushSwitches true 0) 0)
lbl(291130)	genCall(gci(g(0) true popSwitches true 0) 0)
lbl(291133)	getVariable(x(2))
		move(x(2) x(0))
		getSelf(x(1))
		genFastCall(<P: 34> 5)
lbl(291143)	inlineAt(reporter x(2) cache)
		putConstant('bootstrap compiler restriction' x(0))
		putConstant('Gump definitions not supported' x(1))
		tailSendMsg(error x(2) [kind msg] cache)
lbl(291160)	allocateL8
		move(x(0) y(0))
		testRecord(y(0) fDeclare 3 291187)
lbl(291169)	getVoid(2)
		getVariable(x(1))
		inlineAt(reporter x(2) cache)
		move(x(1) x(0))
		sendMsg(logDeclare x(2) 1 cache)
lbl(291187)	inlineAt(reporter x(1) cache)
		putConstant('transforming into graph representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(g(1) x(0))
		inlineDot(x(0) unnestQuery x(7) cache)
		inlineAt(reporter x(1) cache)
		move(y(0) x(3))
		getSelf(x(0))
		getSelf(x(2))
		createVariableMove(y(1) x(4))
		createVariableMove(y(2) x(5))
		createVariableMove(y(3) x(6))
		call(x(7) 7)
		getSelf(x(2))
		createVariable(x(3))
lbl(291238)	definition(x(0) 291306 pid('AnnotateGlobalVars' 0 pos('./compiler/CompilerClass.oz' 483 8) nil 3) unit [x(2) x(3) y(2)])
		move(g(0) x(0))
		setSelf(x(0))
		move(g(1) x(1))
		testBI('IsFree' [x(1)]#[x(2)] 291303)
		inlineAt(reporter x(2) cache)
		putConstant('determining nonlocal variables ...' x(0))
		sendMsg(logSubPhase x(2) 1 cache)
lbl(291270)	definition(x(1) 291294 pid('' 1 pos('./compiler/CompilerClass.oz' 488 8) nil 4) unit nil)
		move(x(0) x(3))
		putConstant(nil x(0))
		createVariable(x(1))
		createVariable(x(2))
		tailSendMsg(annotateGlobalVars x(3) 3 cache)
		endDefinition(291270)
lbl(291294)	move(g(2) x(0))
		genFastCall(<P: 34> 4)
		getLiteral(unit g(1))
lbl(291303)	return
		endDefinition(291238)
lbl(291306)	move(x(0) y(0))
		putConstant(warnredecl x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 291502 291491)
		getSelf(x(2))
lbl(291324)	definition(x(1) 291483 pid('' 1 pos('./compiler/CompilerClass.oz' 495 2) nil 6) unit [x(2) g(0)])
		allocateL5
		move(g(0) x(1))
		setSelf(x(1))
		move(x(0) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		move(y(1) x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(1) true lookupVariableInEnv false 2) 0)
		testLiteral(y(2) undeclared 291363)
lbl(291361)	deAllocateL5
		return
lbl(291363)	createVariableMove(y(3) x(0))
		sendMsg(getCoord y(2) 1 cache)
		inlineAt(reporter x(1) cache)
		move(x(1) y(2))
		createVariable(y(4))
		testLiteral(y(3) unit 291415)
		getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord(line 1 x(0))
		unifyLiteral('previously declared via putEnv')
		getList(x(2))
		unifyVariable(x(3))
		unifyLiteral(nil)
		move(x(3) x(0))
		sendMsg(getCoord y(0) 1 cache)
		branch(291451)
lbl(291415)	getList(y(4))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getList(x(2))
		unifyLiteral(unit)
		unifyVariable(x(3))
		getList(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		getRecord(line 1 x(4))
		unifyLiteral('previous declaration was')
		getList(x(5))
		unifyValue(y(3))
		unifyLiteral(nil)
		sendMsg(getCoord y(0) 1 cache)
lbl(291451)	putRecord(pn 1 x(4))
		setValue(y(1))
		putRecord('#' 2 x(2))
		setConstant('redeclaring top-level variable ')
		setValue(x(4))
		move(y(4) x(0))
		putConstant(warning x(1))
		move(y(2) x(3))
		deAllocateL5
		tailSendMsg(warn x(3) [items kind msg] cache)
		endDefinition(291324)
lbl(291483)	move(y(1) x(0))
		genFastCall(<P: 34> 4)
		branch(291502)
lbl(291491)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(493)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291502)	inlineAt(reporter x(1) cache)
		createVariableMove(y(4) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(4) 291537 291526)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(291526)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(514)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291537)	putConstant(staticanalysis x(0))
		createVariableMove(y(4) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(4) 291632 291621)
		inlineAt(reporter x(1) cache)
		putConstant('static analysis ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		move(y(3) x(0))
		genCall(gci(g(0) true annotateEnv false 1) 0)
		call(y(0) 0)
		inlineAt(reporter x(1) cache)
		putConstant('value propagation ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		testList(y(2) 291608)
lbl(291590)	getVarVar(x(3) x(2))
		inlineAt(reporter x(0) cache)
		getSelf(x(1))
		sendMsg(staticAnalysis x(3) 3 cache)
		branch(291632)
lbl(291608)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(524)
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291621)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(517)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291632)	inlineAt(reporter x(1) cache)
		createVariableMove(y(3) x(0))
		sendMsg(hasSeenError x(1) 1 cache)
		testBool(y(3) 291667 291656)
		putConstant(rejected x(2))
		callBI('Exception.raise' [x(2)]#nil)
lbl(291656)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(526)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291667)	putConstant(warnunused x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 291760 291749)
		inlineAt(reporter x(1) cache)
		putConstant('classifying variable occurrences ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		putConstant(warnunusedformals x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		getSelf(x(2))
lbl(291708)	definition(x(1) 291741 pid('' 1 pos('./compiler/CompilerClass.oz' 533 19) nil 4) unit [x(2) y(3)])
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		move(x(0) x(3))
		move(g(1) x(0))
		move(x(2) x(1))
		tailSendMsg(markFirst x(3) 2 cache)
		endDefinition(291708)
lbl(291741)	move(y(2) x(0))
		genFastCall(<P: 34> 4)
		branch(291760)
lbl(291749)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(529)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291760)	putConstant(showdeclares x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 291947 291936)
lbl(291773)	move(y(1) x(0))
		putConstant(nil x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(3))
		testBool(y(3) 291947 291936)
lbl(291789)	inlineAt(reporter x(1) cache)
		putConstant('Declared variables:\n' x(0))
		sendMsg(userInfo x(1) 1 cache)
lbl(291803)	definition(x(1) 291851 pid('' 3 pos('./compiler/CompilerClass.oz' 540 3) nil 4) unit nil)
		allocateL4
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(0) x(3))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName x(3) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(3) x(1))
		callBI('<' [x(0) x(1)]#[x(2)])
		unify(x(2) y(1))
		deAllocateL4
		return
		endDefinition(291803)
lbl(291851)	move(y(1) x(0))
		createVariableMove(y(3) x(2))
		genFastCall(<P: 44> 6)
		getSelf(x(2))
lbl(291862)	definition(x(1) 291928 pid('' 1 pos('./compiler/CompilerClass.oz' 543 2) nil 3) unit [x(2)])
		allocateL4
		move(g(0) x(1))
		setSelf(x(1))
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariableMove(y(2) x(0))
		sendMsg(getPrintName y(0) 1 cache)
		createVariableMove(y(3) x(0))
		sendMsg(outputDebugType y(0) 1 cache)
		putRecord('#' 5 x(0))
		setConstant('  ')
		setValue(y(2))
		setConstant(': ')
		setValue(y(3))
		setConstant('\n')
		move(y(1) x(1))
		deAllocateL4
		tailSendMsg(userInfo x(1) 1 cache)
		endDefinition(291862)
lbl(291928)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(291947)
lbl(291936)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(535)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(291947)	putConstant(core x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 292250 292239)
		inlineAt(reporter x(1) cache)
		putConstant('writing core representation ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		putRecord(debug [debugType debugValue realcore] y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(x(1))
		putConstant(realcore x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(5) x(1))
		putConstant(debugvalue x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(4) x(1))
		putConstant(debugtype x(0))
		genCall(gci(g(0) true getSwitch false 2) 0)
		move(y(3) x(0))
		putConstant(realcore x(1))
		putConstant(true x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(format 1 x(6))
		setConstant(break)
		putRecord(list 2 x(4))
		setVariable(x(5))
		setValue(x(6))
		putRecord('#' 2 x(1))
		setVariable(x(2))
		setValue(x(4))
		moveMoveXYXY(x(1) y(4) x(5) y(5))
		testLiteral(y(1) nil 292056)
lbl(292051)	getLiteral(nil x(2))
		branch(292173)
lbl(292056)	definition(x(4) 292076 pid('' 2 pos('./compiler/CompilerClass.oz' 560 9) nil 3) unit [x(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(292056)
lbl(292076)	moveMoveXYYX(x(2) y(6) y(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(7) x(2))
		genFastCall(<P: 29> 6)
		getRecord('#' 6 y(6))
		unifyLiteral('declare')
		unifyVariable(x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
		unifyLiteral('in')
		unifyVariable(x(3))
		getRecord(format 1 x(0))
		unifyVariable(x(4))
		getRecord(glue 1 x(4))
		unifyVariable(x(5))
		getList(x(5))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(list 2 x(1))
		unifyValVar(y(7) x(6))
		getRecord(format 1 x(6))
		unifyVariable(x(7))
		getRecord(glue 1 x(7))
		unifyVariable(x(8))
		getList(x(8))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(2))
		unifyVariable(x(9))
		getRecord(glue 1 x(9))
		unifyVariable(x(10))
		getList(x(10))
		unifyNumber(32)
		unifyLiteral(nil)
		getRecord(format 1 x(3))
		unifyLiteral(break)
lbl(292173)	definition(x(1) 292193 pid('' 2 pos('./compiler/CompilerClass.oz' 565 19) nil 3) unit [y(3)])
		move(x(0) x(2))
		move(g(0) x(0))
		tailSendMsg(output x(2) 2 cache)
		endDefinition(292173)
lbl(292193)	moveMoveYXYX(y(2) x(0) y(5) x(2))
		genFastCall(<P: 29> 6)
		inlineAt(reporter x(0) cache)
		moveMoveXYYX(x(0) y(3) y(4) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1600> 4)
		putRecord('#' 2 x(2))
		setValue(y(5))
		setConstant('\n')
		putConstant('Oz Compiler: Core Output' x(0))
		putConstant('.ozi' x(1))
		sendMsg(displaySource y(3) 3 cache)
		branch(292250)
lbl(292239)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(548)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292250)	putConstant(codegen x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(3) 293061 293063)
		inlineAt(reporter x(1) cache)
		putConstant('generating code ...' x(0))
		sendMsg(logPhase x(1) 1 cache)
		call(y(0) 0)
		move(y(2) x(0))
		inlineDot(x(0) 1 x(1) cache)
		inlineAt(reporter x(2) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(3))
		createVariableMove(y(4) x(0))
		genCall(gci(g(0) true getVars false 1) 0)
		moveMoveYXYX(y(2) x(0) y(3) x(2))
		moveMoveYXYX(y(4) x(3) y(1) x(4))
		getSelf(x(1))
		createVariableMove(y(5) x(5))
		createVariableMove(y(6) x(6))
		sendMsg(startCodeGen y(0) 7 cache)
		inlineAt(reporter x(1) cache)
		putConstant('assembling ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(g(2) x(0))
		inlineDot(x(0) internalAssemble x(1) cache)
		move(x(1) y(0))
		putConstant(profile x(0))
		createVariableMove(y(2) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putConstant(debuginfocontrol x(0))
		createVariableMove(y(3) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		putRecord(switches [debuginfocontrol peephole profile verify] x(1))
		setValue(y(3))
		setConstant(true)
		setValue(y(2))
		setConstant(false)
		move(y(6) x(0))
		createVariableMove(y(2) x(2))
		call(y(0) 3)
		putConstant(ozma x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 292557 293050)
		testLiteral(y(5) nil 292455)
lbl(292411)	inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		createVariableMove(y(0) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		deAllocateL8
		tailSendMsg(displaySource x(3) 3 cache)
lbl(292455)	putList(x(0))
		setConstant('`runTimeDict`')
		setConstant(nil)
		move(y(5) x(1))
		testBI('\\=' [x(1) x(0)]#[x(2)] 292411)
lbl(292468)	getList(y(5))
		unifyVariable(x(4))
		unifyVariable(x(0))
		inlineAt(reporter x(1) cache)
lbl(292479)	definition(x(5) 292504 pid('' 3 pos('./compiler/CompilerClass.oz' 600 13) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyVariable(x(2))
		unifyLiteral(' ')
		unifyValue(x(1))
		getRecord(pn 1 x(2))
		unifyValue(x(0))
		return
		endDefinition(292479)
lbl(292504)	putRecord(pn 1 x(2))
		setValue(x(4))
		move(x(1) y(0))
		move(x(5) x(1))
		createVariableMove(y(1) x(3))
		genFastCall(<P: 32> 8)
		putRecord('#' 2 x(2))
		setConstant('No free variables allowed ')
		setConstant('when compiling for Ozma')
		putRecord(hint [l m] x(4))
		setConstant('Found')
		setValue(y(1))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('Ozma error' x(1))
		move(y(0) x(3))
		deAllocateL8
		tailSendMsg(error x(3) [items kind msg] cache)
lbl(292557)	putConstant(outputcode x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 292705 292694)
		inlineAt(reporter x(1) cache)
		putConstant('displaying assembler code ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		putRecord('#' 2 x(0))
		setVariable(x(1))
		setVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(2) y(3))
		testLiteral(y(5) nil 292606)
lbl(292601)	getLiteral('%% No Global Registers\n' x(1))
		branch(292663)
lbl(292606)	definition(x(4) 292648 pid('' 4 pos('./compiler/CompilerClass.oz' 610 9) nil 5) unit nil)
		getRecord('#' 6 x(3))
		unifyValue(x(1))
		unifyLiteral('%%    g(')
		unifyVariable(x(3))
		unifyLiteral(') = ')
		unifyVariable(x(4))
		unifyLiteral('\n')
		inlineMinus1(x(0) x(1))
		unify(x(1) x(3))
		putRecord(pn 1 x(0))
		setValue(x(2))
		move(x(4) x(1))
		genFastCall(<Q: 1600> 5)
		endDefinition(292606)
lbl(292648)	move(y(5) x(0))
		move(x(1) x(3))
		move(x(4) x(1))
		putConstant('%% Assignment of Global Registers:\n' x(2))
		genFastCall(<P: 82> 8)
lbl(292663)	move(y(3) x(0))
		sendMsg(output y(2) 1 cache)
		inlineAt(reporter x(3) cache)
		move(y(0) x(2))
		putConstant('Oz Compiler: Assembler Output' x(0))
		putConstant('.ozm' x(1))
		sendMsg(displaySource x(3) 3 cache)
		branch(292705)
lbl(292694)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(605)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292705)	putConstant(feedtoemulator x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 293037 293039)
		inlineAt(reporter x(1) cache)
		putConstant('loading ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		getSelf(x(1))
		createVariable(x(2))
		createVariable(y(0))
lbl(292738)	definition(x(0) 292799 pid('Proc' 0 pos('./compiler/CompilerClass.oz' 624 7) nil 4) unit [x(1) y(1) g(0) y(5) x(2) y(2) y(0)])
		move(g(0) x(0))
		setSelf(x(0))
		match(g(1) ht(292752 [onScalar(nil 292758)]))
lbl(292752)	move(g(1) x(0))
		genCall(gci(g(2) true enterMultiple false 1) 0)
lbl(292758)	getSelf(x(3))
lbl(292760)	definition(x(1) 292776 pid('' 2 pos('./compiler/CompilerClass.oz' 630 7) nil 3) unit [x(3) g(2)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true lookupInEnv true 2) 0)
		endDefinition(292760)
lbl(292776)	move(g(3) x(0))
		move(g(4) x(2))
		genFastCall(<P: 29> 6)
		move(g(4) x(0))
		move(g(6) x(1))
		tailSendMsg(load g(5) 2 cache)
		endDefinition(292738)
lbl(292799)	genCall(gci(g(4) true <M: ExecuteUninterruptible> false 1) 0)
		putConstant(runwithdebugger x(0))
		createVariableMove(y(1) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		createVariable(y(2))
		testBool(y(1) 292845 292850)
lbl(292817)	definition(x(0) 292840 pid('P' 0 pos('./compiler/CompilerClass.oz' 638 3) nil 2) unit [g(5) y(0)])
		move(g(0) x(0))
		inlineDot(x(0) breakpoint x(1) cache)
		call(x(1) 0)
		tailCall(g(1) 0)
		endDefinition(292817)
lbl(292840)	unify(x(0) y(2))
		branch(292861)
lbl(292845)	unify(y(2) y(0))
		branch(292861)
lbl(292850)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(637)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292861)	putConstant(threadedqueries x(0))
		createVariableMove(y(0) x(1))
		genCall(gci(g(0) true getSwitch false 2) 0)
		testBool(y(0) 292997 293026)
		move(g(6) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(0) x(2))
		call(x(3) 3)
		inlineAt(reporter x(1) cache)
		putConstant('executing in an independent thread ...' x(0))
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(0) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(1))
		testBool(y(1) 292986 292975)
lbl(292925)	createVariableMove(y(1) x(0))
		sendMsg(getCompiler y(0) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(1) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(0))
		testBool(y(0) 292986 292975)
lbl(292952)	move(g(5) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(292986)
lbl(292975)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(647)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(292986)	thread(292995)
		move(y(2) x(0))
		deAllocateL8
		tailCall(x(0) 0)
lbl(292995)	deAllocateL8
		return
lbl(292997)	inlineAt(reporter x(1) cache)
		putRecord('#' 2 x(0))
		setConstant('executing and waiting for ')
		setConstant('completion ...')
		sendMsg(logSubPhase x(1) 1 cache)
		move(y(2) x(0))
		move(g(8) x(1))
		deAllocateL8
		genCall(gci(g(4) true <M: ExecProtected> true 2) 0)
lbl(293026)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(642)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293037)	deAllocateL8
		return
lbl(293039)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(619)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293050)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(588)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293061)	deAllocateL8
		return
lbl(293063)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(570)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(291115)
lbl(293076)	definition(x(8) 293102 pid('CompilerInternal,CompileQuery/slow' 1 pos('./compiler/CompilerClass.oz' 458 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1688> 3)
		endDefinition(293076)
lbl(293102)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: CompileQuery>)
		setValue(x(8))
		setValue(x(7))
lbl(293112)	definition(x(7) 293146 pid('CompilerInternal,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 672 6) nil 2) <Q: 1689> [g(20)])
		inlineAt(<M: ExecutingThread> x(0) cache)
		testLiteral(x(0) unit 293128)
lbl(293127)	return
lbl(293128)	inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(293143 x(1))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		return
lbl(293143)	return
		endDefinition(293112)
lbl(293146)	definition(x(8) 293160 pid('CompilerInternal,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 672 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1689> 1)
		endDefinition(293146)
lbl(293160)	putRecord('#' [1 2 fast] x(20))
		setConstant(interrupt)
		setValue(x(8))
		setValue(x(7))
lbl(293170)	definition(x(7) 293191 pid('CompilerInternal,ExecuteUninterruptible/fast' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 2) <Q: 1690> nil)
		inlineAt(<M: InterruptLock> x(1) cache)
		lockThread(293188 x(1))
		call(x(0) 0)
		return
lbl(293188)	return
		endDefinition(293170)
lbl(293191)	definition(x(8) 293217 pid('CompilerInternal,ExecuteUninterruptible/slow' 1 pos('./compiler/CompilerClass.oz' 680 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1690> 3)
		endDefinition(293191)
lbl(293217)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: ExecuteUninterruptible>)
		setValue(x(8))
		setValue(x(7))
lbl(293227)	definition(x(7) 293627 pid('CompilerInternal,ExecProtected/fast' 2 pos('./compiler/CompilerClass.oz' 683 6) nil 9) <Q: 1691> [g(19) y(15) y(6) y(8) y(10) y(11) y(13) y(14) y(1) y(4) g(20)])
		allocateL7
		callBI('Thread.this' nil#[x(2)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		createVariable(y(3))
		createVariable(y(4))
		thread(293510)
		callBI('Thread.this' nil#[x(0)])
		inlineAssign(<M: ExecutingThread> x(0) cache)
		testBool(y(1) 293346 293335)
lbl(293263)	putConstant(watchdog x(0))
		createVariableMove(y(5) x(1))
		genCall(gci(g(1) true getSwitch false 2) 0)
		testBool(y(5) 293346 293335)
lbl(293276)	move(g(2) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(3) x(1))
		callBI('Wait' [x(1)]#nil)
		move(g(4) x(2))
		callBI('Wait' [x(2)]#nil)
		move(g(5) x(3))
		callBI('Wait' [x(3)]#nil)
		move(g(6) x(4))
		callBI('Wait' [x(4)]#nil)
		move(g(7) x(5))
		callBI('Wait' [x(5)]#nil)
		move(g(8) x(6))
		inlineDot(x(6) setRaiseOnBlock x(7) cache)
		callBI('Thread.this' nil#[x(8)])
		move(x(8) x(0))
		putConstant(true x(1))
		call(x(7) 2)
		branch(293346)
lbl(293335)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(693)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293346)	move(g(9) x(0))
		inlineDot(x(0) condGet x(3) cache)
		putConstant('opi.compiler' x(0))
		putConstant(false x(1))
		createVariableMove(y(5) x(2))
		call(x(3) 3)
		move(y(5) x(0))
		putConstant(false x(1))
		callBI('\\=' [x(0) x(1)]#[x(2)])
		move(x(2) y(6))
		testBool(y(6) 293444 293433)
lbl(293383)	createVariableMove(y(6) x(0))
		sendMsg(getCompiler y(5) 1 cache)
		inlineAt(wrapper x(0) cache)
		move(y(6) x(1))
		callBI('==' [x(1) x(0)]#[x(2)])
		move(x(2) y(5))
		testBool(y(5) 293444 293433)
lbl(293410)	move(g(8) x(0))
		inlineDot(x(0) setId x(2) cache)
		callBI('Thread.this' nil#[x(3)])
		move(x(3) x(0))
		putConstant(1 x(1))
		call(x(2) 2)
		branch(293444)
lbl(293433)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(708)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293444)	createVariable(y(5))
		exHandler(293456)
		getRecord(ex 1 y(5))
		unifyValue(x(0))
		branch(293487)
lbl(293456)	exHandler(293476)
		testLiteral(x(0) <M: InterruptException> 293473)
lbl(293462)	move(y(2) x(0))
		putConstant(<M: InterruptException> x(1))
		callBI('Thread.injectException' [x(0) x(1)]#nil)
		branch(293483)
lbl(293473)	callBI('Exception.raise' [x(0)]#nil)
lbl(293476)	call(y(0) 0)
		getLiteral(true y(4))
		popEx
lbl(293483)	getLiteral(unit y(5))
		popEx
lbl(293487)	move(y(2) x(0))
		inlineAssign(<M: ExecutingThread> x(0) cache)
		getLiteral(true y(3))
		testRecord(y(5) ex 1 293508)
lbl(293503)	getVariable(x(1))
		callBI('Exception.raise' [x(1)]#nil)
lbl(293508)	deAllocateL7
		return
lbl(293510)	move(g(8) x(0))
		inlineDot(x(0) getRaiseOnBlock x(3) cache)
		move(y(2) x(0))
		createVariableMove(y(0) x(1))
		call(x(3) 2)
		move(g(8) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		move(y(2) x(0))
		putConstant(false x(1))
		call(x(2) 2)
		move(y(3) x(0))
		callBI('Wait' [x(0)]#nil)
		move(g(8) x(0))
		inlineDot(x(0) setRaiseOnBlock x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(y(4) x(0))
		callBI('IsFree' [x(0)]#[x(1)])
		testBool(x(1) 293612 293614)
		createVariable(y(0))
		testBool(y(1) 293590 293595)
		getLiteral(crashed y(0))
		branch(293606)
lbl(293590)	getLiteral(aborted y(0))
		branch(293606)
lbl(293595)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(727)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293606)	move(y(0) x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(293612)	deAllocateL7
		return
lbl(293614)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(726)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(293227)
lbl(293627)	definition(x(8) 293662 pid('CompilerInternal,ExecProtected/slow' 1 pos('./compiler/CompilerClass.oz' 683 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1691> 5)
		endDefinition(293627)
lbl(293662)	putRecord('#' [1 2 fast] x(22))
		setConstant(<M: ExecProtected>)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 14 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(16))
		setValue(x(14))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		setValue(x(22))
		move(y(0) x(6))
		putConstant('feat' x(3))
		putConstant('CompilerInternal' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(293716)	definition(x(7) 293780 pid('TypeCheck' 4 pos('./compiler/CompilerClass.oz' 732 3) nil 6) <Q: 1692> [g(5)])
		allocateL4
		callBI('.' [x(1) x(2)]#[x(4)])
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		move(x(3) y(2))
		move(x(0) x(5))
		move(x(4) x(0))
		createVariableMove(y(3) x(1))
		call(x(5) 2)
		testBool(y(3) 293752 293767)
		deAllocateL4
		return
lbl(293752)	putRecord(compiler 4 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		setValue(y(1))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(293767)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(733)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(293716)
lbl(293780)	definition(x(7) 293820 pid('IsEnv' 2 pos('./compiler/CompilerClass.oz' 738 3) nil 5) <Q: 1693> [y(9)])
		testBI('IsRecord' [x(0)]#[x(2)] 293814)
		callBI('Arity' [x(0)]#[x(3)])
		move(g(0) x(0))
		inlineDot(x(0) is x(4) cache)
		move(x(3) x(0))
		move(x(1) x(2))
		move(x(4) x(1))
		genFastCall(<P: 35> 7)
lbl(293814)	getLiteral(false x(1))
		return
		endDefinition(293780)
lbl(293820)	definition(x(8) 293849 pid('IsProcedure5' 2 pos('./compiler/CompilerClass.oz' 742 3) nil 4) <Q: 1694> [g(22)])
		testBI('IsProcedure' [x(0)]#[x(2)] 293843)
		callBI('ProcedureArity' [x(0)]#[x(2)])
		putConstant(5 x(0))
		callBI('==' [x(2) x(0)]#[x(3)])
		unify(x(3) x(1))
		return
lbl(293843)	getLiteral(false x(1))
		return
		endDefinition(293820)
lbl(293849)	putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: CurrentQuery> <M: NextId> <M: QueriesHd> <M: QueriesTl> <M: Registered>] x(2))
		setConstant(unit)
		setConstant(1)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(nil)
		putRecord('feat' [<M: Compiler> <M: QueueLock> <M: RegistrationLock>] x(3))
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		setConstant(<U: ooFreeFlag>)
		createVariable(y(1))
lbl(293881)	definition(x(9) 293968 pid('Engine,init/fast' 0 pos('./compiler/CompilerClass.oz' 750 6) nil 3) <Q: 1695> [y(0) y(1)])
		allocateL2
		getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		callBI('NewLock' nil#[x(1)])
		unify(x(1) x(0))
		createVariable(x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		inlineAssign(<M: QueriesTl> x(0) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(0) cache)
		move(g(0) x(1))
		callBI(newObject [x(1)]#[x(2)])
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		getSelf(x(0))
		sendMsg(init y(1) 1 cache)
		unify(y(1) y(0))
		thread(293964)
		deAllocateL2
		genCall(gci(g(1) true <M: RunQueue> true 0) 0)
lbl(293964)	deAllocateL2
		return
		endDefinition(293881)
lbl(293968)	definition(x(10) 293982 pid('Engine,init/slow' 1 pos('./compiler/CompilerClass.oz' 750 6) nil 1) unit nil)
		getLiteral(init x(0))
		genFastCall(<Q: 1695> 1)
		endDefinition(293968)
lbl(293982)	putRecord('#' [1 2 fast] x(11))
		setConstant(init)
		setValue(x(10))
		setValue(x(9))
lbl(293992)	definition(x(9) 294154 pid('Engine,register/fast' 1 pos('./compiler/CompilerClass.oz' 765 6) nil 4) <Q: 1696> [g(5) y(1)])
		allocateL1
		move(x(0) y(0))
		testBI('IsPort' [x(0)]#[x(1)] 294008)
		branch(294019)
lbl(294008)	putRecord(compiler 2 x(1))
		setConstant(register)
		setValue(y(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(294019)	getSelf(x(1))
		inlineDot(x(1) <M: RegistrationLock> x(0) cache)
		lockThread(294150 x(0))
		inlineAt(<M: Registered> x(1) cache)
		putList(x(2))
		setValue(y(0))
		setValue(x(1))
		inlineAssign(<M: Registered> x(2) cache)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(0) x(0))
		sendMsg(notifyOne x(1) 1 cache)
		getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(294149 x(0))
		inlineAt(<M: CurrentQuery> x(0) cache)
		testLiteral(x(0) unit 294094)
lbl(294083)	move(y(0) x(0))
		putConstant(idle x(2))
		callBI('Send' [x(0) x(2)]#nil)
		branch(294137)
lbl(294094)	testRecord(x(0) '#' 2 294124)
lbl(294099)	getVarVar(x(0) x(1))
		move(y(0) x(2))
		putConstant(busy x(3))
		callBI('Send' [x(2) x(3)]#nil)
		putRecord(runQuery 2 x(3))
		setValue(x(0))
		setValue(x(1))
		callBI('Send' [x(2) x(3)]#nil)
		branch(294137)
lbl(294124)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(778)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(294137)	inlineAt(<M: QueriesHd> x(0) cache)
		move(y(0) x(1))
		genCall(gci(g(1) true <M: NotifyQueue> false 2) 0)
		return
lbl(294149)	return
lbl(294150)	deAllocateL1
		return
		endDefinition(293992)
lbl(294154)	definition(x(10) 294180 pid('Engine,register/slow' 1 pos('./compiler/CompilerClass.oz' 765 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1696> 3)
		endDefinition(294154)
lbl(294180)	putRecord('#' [1 2 fast] x(12))
		setConstant(register)
		setValue(x(10))
		setValue(x(9))
lbl(294190)	definition(x(9) 294234 pid('Engine,NotifyQueue/fast' 2 pos('./compiler/CompilerClass.oz' 783 6) nil 5) <Q: 1697> [y(1)])
		testBI('IsDet' [x(0)]#[x(2)] 294231)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(2))
		getRecord('#' 2 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		putRecord(newQuery 2 x(0))
		setValue(x(3))
		setValue(x(4))
		callBI('Send' [x(1) x(0)]#nil)
		move(x(2) x(0))
		genCall(gci(g(0) true <M: NotifyQueue> true 2) 0)
lbl(294231)	return
		endDefinition(294190)
lbl(294234)	definition(x(10) 294269 pid('Engine,NotifyQueue/slow' 1 pos('./compiler/CompilerClass.oz' 783 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1697> 5)
		endDefinition(294234)
lbl(294269)	putRecord('#' [1 2 fast] x(13))
		setConstant(<M: NotifyQueue>)
		setValue(x(10))
		setValue(x(9))
lbl(294279)	definition(x(9) 294342 pid('Engine,unregister/fast' 1 pos('./compiler/CompilerClass.oz' 789 6) nil 4) <Q: 1698> nil)
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: RegistrationLock> x(1) cache)
		lockThread(294338 x(1))
		inlineAt(<M: Registered> x(3) cache)
lbl(294302)	definition(x(1) 294320 pid('' 2 pos('./compiler/CompilerClass.oz' 791 39) nil 4) unit [x(0)])
		move(g(0) x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(294302)
lbl(294320)	move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genFastCall(<P: 39> 6)
		move(y(0) x(0))
		inlineAssign(<M: Registered> x(0) cache)
		return
lbl(294338)	deAllocateL1
		return
		endDefinition(294279)
lbl(294342)	definition(x(10) 294368 pid('Engine,unregister/slow' 1 pos('./compiler/CompilerClass.oz' 789 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1698> 3)
		endDefinition(294342)
lbl(294368)	putRecord('#' [1 2 fast] x(14))
		setConstant(unregister)
		setValue(x(10))
		setValue(x(9))
lbl(294378)	definition(x(9) 294425 pid('Engine,notify/fast' 1 pos('./compiler/CompilerClass.oz' 794 6) nil 3) <Q: 1699> nil)
		getSelf(x(2))
		inlineDot(x(2) <M: RegistrationLock> x(1) cache)
		lockThread(294422 x(1))
		inlineAt(<M: Registered> x(2) cache)
lbl(294400)	definition(x(1) 294415 pid('' 1 pos('./compiler/CompilerClass.oz' 796 25) nil 2) unit [x(0)])
		move(g(0) x(1))
		callBI('Send' [x(0) x(1)]#nil)
		return
		endDefinition(294400)
lbl(294415)	move(x(2) x(0))
		genFastCall(<P: 34> 4)
		return
lbl(294422)	return
		endDefinition(294378)
lbl(294425)	definition(x(10) 294451 pid('Engine,notify/slow' 1 pos('./compiler/CompilerClass.oz' 794 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1699> 3)
		endDefinition(294425)
lbl(294451)	putRecord('#' [1 2 fast] x(15))
		setConstant(notify)
		setValue(x(10))
		setValue(x(9))
lbl(294461)	definition(x(9) 294566 pid('Engine,enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 804 6) nil 4) <Q: 1700> [g(5) y(1)])
		match(x(0) ht(294561 [onScalar(nil 294470) onRecord('|' 2 294474)]))
lbl(294470)	getLiteral(nil x(1))
		return
lbl(294474)	allocateL3
		getVoid(1)
		getVariable(x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 20> 4)
		testBool(y(2) 294499 294510)
		branch(294521)
lbl(294499)	putRecord(compiler 2 x(0))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294510)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(806)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(294521)	getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(0) cache)
		lockThread(294559 x(0))
		getSelf(x(3))
lbl(294534)	definition(x(1) 294550 pid('' 2 pos('./compiler/CompilerClass.oz' 810 22) nil 3) unit [x(3) g(1)])
		move(g(0) x(2))
		setSelf(x(2))
		genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(294534)
lbl(294550)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		genFastCall(<P: 29> 6)
		return
lbl(294559)	deAllocateL3
		return
lbl(294561)	genCall(gci(g(1) true <M: Enqueue> true 2) 0)
		endDefinition(294461)
lbl(294566)	putRecord(messagePattern 2 x(10))
		setConstant(unit)
		setConstant(unit)
lbl(294574)	definition(x(16) 294631 pid('Engine,enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 804 6) nil 4) unit [x(10)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 294620)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
lbl(294620)	moveMoveYXYX(y(1) x(0) y(2) x(1))
		deAllocateL3
		genFastCall(<Q: 1700> 5)
		endDefinition(294574)
lbl(294631)	putRecord(enqueue 2 x(10))
		setConstant(<U: ooRequiredArg>)
		setConstant(<U: ooDefaultVar>)
		putRecord('#' [1 2 default fast] x(17))
		setConstant(enqueue)
		setValue(x(16))
		setValue(x(10))
		setValue(x(9))
lbl(294651)	definition(x(9) 295103 pid('Engine,Enqueue/fast' 2 pos('./compiler/CompilerClass.oz' 818 6) nil 5) <Q: 1701> [g(23) g(24) g(25) g(26) y(9) x(7) x(8) g(27) g(5) y(1)])
		allocateL2
		getSelf(x(2))
		inlineDot(x(2) <M: QueueLock> x(2) cache)
		lockThread(295099 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		match(y(0) ht(295027 [onScalar(pushSwitches 295038) onScalar(popSwitches 295038) onRecord(macroDefine 1 294677) onRecord(macroUndef 1 294694) onRecord(getDefines 1 294711) onRecord(getSwitch 2 294713) onRecord(setSwitch 2 294730) onRecord(getMaxNumberOfErrors 1 294762) onRecord(setMaxNumberOfErrors 1 294764) onRecord(addToEnv 2 294781) onRecord(lookupInEnv 2 294807) onRecord(removeFromEnv 1 294833) onRecord(putEnv 1 294859) onRecord(mergeEnv 1 294876) onRecord(getEnv 1 294893) onRecord(setFrontEnd 2 294895) onRecord(feedVirtualString 1 294927) onRecord(feedVirtualString 2 294944) onRecord(feedFile 1 294976) onRecord(feedFile 2 294993) onRecord(ping 1 295025)]))
lbl(294677)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294694)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294711)	branch(295038)
lbl(294713)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294730)	move(g(1) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(atom x(3))
		genFastCall(<Q: 1692> 8)
		move(g(2) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(bool x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294762)	branch(295038)
lbl(294764)	move(g(3) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(int x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294781)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294807)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294833)	move(g(4) x(2))
		inlineDot(x(2) is x(4) cache)
		move(x(4) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('print name' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294859)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294876)	move(g(5) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant(environment x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294893)	branch(295038)
lbl(294895)	move(g(6) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(6) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant('procedure/5' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294927)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294944)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294976)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(294993)	move(g(0) x(0))
		move(y(0) x(1))
		putConstant(1 x(2))
		putConstant('virtual string' x(3))
		genFastCall(<Q: 1692> 8)
		move(g(7) x(0))
		move(y(0) x(1))
		putConstant(2 x(2))
		putConstant(record x(3))
		genFastCall(<Q: 1692> 8)
		branch(295038)
lbl(295025)	branch(295038)
lbl(295027)	putRecord(compiler 2 x(2))
		setConstant(invalidQuery)
		setValue(y(0))
		callBI('Exception.raiseError' [x(2)]#nil)
lbl(295038)	inlineAt(<M: NextId> x(0) cache)
		unify(x(0) y(1))
		move(y(1) x(0))
		inlinePlus1(x(0) x(1))
		inlineAssign(<M: NextId> x(1) cache)
		putRecord('#' 2 x(2))
		setValue(y(1))
		setValue(y(0))
		putList(x(1))
		setValue(x(2))
		setVariable(x(3))
		inlineAt(<M: QueriesTl> x(2) cache)
		unify(x(2) x(1))
		inlineAssign(<M: QueriesTl> x(3) cache)
		putRecord(newQuery 2 x(1))
		setValue(y(1))
		setValue(y(0))
		move(x(1) x(0))
		genCall(gci(g(9) true notify false 1) 0)
		return
lbl(295099)	deAllocateL2
		return
		endDefinition(294651)
lbl(295103)	definition(x(7) 295138 pid('Engine,Enqueue/slow' 1 pos('./compiler/CompilerClass.oz' 818 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1701> 5)
		endDefinition(295103)
lbl(295138)	putRecord('#' [1 2 fast] x(8))
		setConstant(<M: Enqueue>)
		setValue(x(7))
		setValue(x(9))
lbl(295148)	definition(x(7) 295170 pid('Engine,interrupt/fast' 0 pos('./compiler/CompilerClass.oz' 870 6) nil 1) <Q: 1702> nil)
		getSelf(x(0))
		inlineDot(x(0) <M: Compiler> x(0) cache)
		tailSendMsg(interrupt x(0) 0 cache)
		endDefinition(295148)
lbl(295170)	definition(x(9) 295184 pid('Engine,interrupt/slow' 1 pos('./compiler/CompilerClass.oz' 870 6) nil 1) unit nil)
		getLiteral(interrupt x(0))
		genFastCall(<Q: 1702> 1)
		endDefinition(295170)
lbl(295184)	putRecord('#' [1 2 fast] x(10))
		setConstant(interrupt)
		setValue(x(9))
		setValue(x(7))
lbl(295194)	definition(x(7) 295242 pid('Engine,dequeue/fast' 1 pos('./compiler/CompilerClass.oz' 873 6) nil 4) <Q: 1703> [y(1)])
		allocateL1
		getSelf(x(3))
		inlineDot(x(3) <M: QueueLock> x(1) cache)
		lockThread(295238 x(1))
		inlineAt(<M: QueriesHd> x(3) cache)
		move(x(0) x(1))
		move(x(3) x(0))
		createVariableMove(y(0) x(2))
		genCall(gci(g(0) true <M: Dequeue> false 3) 0)
		move(y(0) x(0))
		inlineAssign(<M: QueriesHd> x(0) cache)
		return
lbl(295238)	deAllocateL1
		return
		endDefinition(295194)
lbl(295242)	definition(x(9) 295268 pid('Engine,dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 873 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1703> 3)
		endDefinition(295242)
lbl(295268)	putRecord('#' [1 2 fast] x(16))
		setConstant(dequeue)
		setValue(x(9))
		setValue(x(7))
lbl(295278)	definition(x(7) 295307 pid('Engine,clearQueue/fast' 0 pos('./compiler/CompilerClass.oz' 878 6) nil 2) <Q: 1704> [y(1)])
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295304 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		genCall(gci(g(0) true <M: ClearQueue> false 1) 0)
		return
lbl(295304)	return
		endDefinition(295278)
lbl(295307)	definition(x(9) 295321 pid('Engine,clearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 878 6) nil 1) unit nil)
		getLiteral(clearQueue x(0))
		genFastCall(<Q: 1704> 1)
		endDefinition(295307)
lbl(295321)	putRecord('#' [1 2 fast] x(18))
		setConstant(clearQueue)
		setValue(x(9))
		setValue(x(7))
lbl(295331)	definition(x(7) 295380 pid('Engine,ClearQueue/fast' 1 pos('./compiler/CompilerClass.oz' 883 6) nil 2) <Q: 1705> [y(1)])
		testBI('IsDet' [x(0)]#[x(1)] 295372)
		allocateL1
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(y(0))
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVoid(1)
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify false 1) 0)
		move(y(0) x(0))
		deAllocateL1
		genCall(gci(g(0) true <M: ClearQueue> true 1) 0)
lbl(295372)	inlineAssign(<M: QueriesHd> x(0) cache)
		return
		endDefinition(295331)
lbl(295380)	definition(x(9) 295406 pid('Engine,ClearQueue/slow' 1 pos('./compiler/CompilerClass.oz' 883 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1705> 3)
		endDefinition(295380)
lbl(295406)	putRecord('#' [1 2 fast] x(19))
		setConstant(<M: ClearQueue>)
		setValue(x(9))
		setValue(x(7))
lbl(295416)	definition(x(7) 295472 pid('Engine,Dequeue/fast' 3 pos('./compiler/CompilerClass.oz' 891 6) nil 6) <Q: 1706> [y(1)])
		testBI('IsDet' [x(0)]#[x(3)] 295466)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(3))
		getRecord('#' 2 x(0))
		unifyVariable(x(4))
		unifyVoid(1)
		testBI('==' [x(1) x(4)]#[x(5)] 295456)
		unify(x(2) x(3))
		putRecord(removeQuery 1 x(0))
		setValue(x(1))
		genCall(gci(g(0) true notify true 1) 0)
lbl(295456)	getListValVar(x(2) x(0) x(2))
		move(x(3) x(0))
		genCall(gci(g(0) true <M: Dequeue> true 3) 0)
lbl(295466)	unify(x(2) x(0))
		return
		endDefinition(295416)
lbl(295472)	definition(x(9) 295513 pid('Engine,Dequeue/slow' 1 pos('./compiler/CompilerClass.oz' 891 6) nil 4) unit nil)
		putConstant(3 x(3))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(3))
		inlineDot(x(0) 1 x(3) cache)
		inlineDot(x(0) 2 x(1) cache)
		inlineDot(x(0) 3 x(2) cache)
		move(x(3) x(0))
		genFastCall(<Q: 1706> 7)
		endDefinition(295472)
lbl(295513)	putRecord('#' [1 2 fast] x(20))
		setConstant(<M: Dequeue>)
		setValue(x(9))
		setValue(x(7))
lbl(295523)	definition(x(7) 295835 pid('Engine,RunQueue/fast' 0 pos('./compiler/CompilerClass.oz' 907 6) nil 7) <Q: 1707> [y(1) y(6)])
		allocateL4
		inlineAt(<M: QueriesHd> x(0) cache)
		testBI('IsFree' [x(0)]#[x(1)] 295559)
		putConstant(idle x(0))
		genCall(gci(g(0) true notify false 1) 0)
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('Wait' [x(0)]#nil)
		putConstant(busy x(0))
		genCall(gci(g(0) true notify false 1) 0)
lbl(295559)	exHandler(295763)
		testRecord(x(0) query 2 295760)
lbl(295566)	getVarVar(y(0) y(1))
		getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295605 x(0))
		putRecord(runQuery 2 x(0))
		setValue(y(0))
		setValue(y(1))
		genCall(gci(g(0) true notify false 1) 0)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		inlineAssign(<M: CurrentQuery> x(0) cache)
		return
lbl(295605)	exHandler(295716)
		getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(x(0) y(2))
		createVariableMove(y(3) x(0))
		sendMsg(getReporter x(1) 1 cache)
		putRecord('#' 2 x(3))
		setConstant('execution of query raised an exception ')
		setConstant('-- description follows')
		putRecord(oz 1 x(6))
		setValue(y(1))
		putRecord(hint [l m] x(5))
		setConstant('Query')
		setValue(x(6))
		putList(x(1))
		setValue(x(5))
		setConstant(nil)
		putConstant(false x(0))
		putConstant('compiler engine error' x(2))
		sendMsg(error y(3) [abort items kind msg] cache)
		move(g(1) x(0))
		inlineDot(x(0) formatExc x(2) cache)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		putConstant(footer x(1))
		putConstant(false x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		putRecord(message 2 x(0))
		setValue(x(3))
		setConstant(unit)
		genCall(gci(g(0) true notify false 1) 0)
		sendMsg(logReject y(3) 0 cache)
		branch(295731)
lbl(295716)	getSelf(x(1))
		inlineDot(x(1) <M: Compiler> x(1) cache)
		move(y(1) x(0))
		call(x(1) 1)
		popEx
lbl(295731)	getSelf(x(1))
		inlineDot(x(1) <M: QueueLock> x(0) cache)
		lockThread(295829 x(0))
		putConstant(unit x(1))
		inlineAssign(<M: CurrentQuery> x(1) cache)
		putRecord(removeQuery 1 x(0))
		setValue(y(0))
		genCall(gci(g(0) true notify false 1) 0)
		return
lbl(295760)	callBI('Exception.raise' [x(0)]#nil)
lbl(295763)	getSelf(x(0))
		inlineDot(x(0) <M: QueueLock> x(0) cache)
		lockThread(295828 x(0))
		inlineAt(<M: QueriesHd> x(0) cache)
		callBI('IsDet' [x(0)]#[x(1)])
		testBool(x(1) 295827 295816)
		getList(x(0))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 2 x(0))
		unifyVariable(x(2))
		unifyVariable(x(3))
		inlineAssign(<M: QueriesHd> x(1) cache)
		putRecord(query 2 x(0))
		setValue(x(2))
		setValue(x(3))
		callBI('Exception.raise' [x(0)]#nil)
lbl(295816)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(916)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(295827)	return
lbl(295828)	popEx
lbl(295829)	deAllocateL4
		genCall(gci(g(0) true <M: RunQueue> true 0) 0)
		endDefinition(295523)
lbl(295835)	definition(x(9) 295849 pid('Engine,RunQueue/slow' 1 pos('./compiler/CompilerClass.oz' 907 6) nil 1) unit nil)
		getLiteral(<M: RunQueue> x(0))
		genFastCall(<Q: 1707> 1)
		endDefinition(295835)
lbl(295849)	putRecord('#' [1 2 fast] x(21))
		setConstant(<M: RunQueue>)
		setValue(x(9))
		setValue(x(7))
		putRecord('#' 13 x(1))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(17))
		setValue(x(8))
		setValue(x(10))
		setValue(x(16))
		setValue(x(18))
		setValue(x(19))
		setValue(x(20))
		setValue(x(21))
		move(y(1) x(6))
		putConstant(nil x(0))
		putConstant('Engine' x(5))
		marshalledFastCall(<R: 'class'> 14)
		move(y(2) x(0))
		inlineDot(x(0) file x(7) cache)
		inlineDot(x(0) virtualString x(8) cache)
		putList(x(15))
		setConstant(39)
		setConstant(nil)
		putList(x(14))
		setConstant(69)
		setValue(x(15))
		putList(x(13))
		setConstant(77)
		setValue(x(14))
		putList(x(12))
		setConstant(65)
		setValue(x(13))
		putList(x(11))
		setConstant(78)
		setValue(x(12))
		putList(x(10))
		setConstant(72)
		setValue(x(11))
		putList(x(6))
		setConstant(67)
		setValue(x(10))
		putList(x(5))
		setConstant(84)
		setValue(x(6))
		putList(x(4))
		setConstant(73)
		setValue(x(5))
		putList(x(3))
		setConstant(87)
		setValue(x(4))
		putList(x(2))
		setConstant(83)
		setValue(x(3))
		putList(x(1))
		setConstant(96)
		setValue(x(2))
		putList(x(26))
		setConstant(101)
		setConstant(nil)
		putList(x(25))
		setConstant(109)
		setValue(x(26))
		putList(x(24))
		setConstant(97)
		setValue(x(25))
		putList(x(23))
		setConstant(110)
		setValue(x(24))
		putList(x(22))
		setConstant(32)
		setValue(x(23))
		putList(x(21))
		setConstant(104)
		setValue(x(22))
		putList(x(20))
		setConstant(99)
		setValue(x(21))
		putList(x(19))
		setConstant(116)
		setValue(x(20))
		putList(x(18))
		setConstant(105)
		setValue(x(19))
		putList(x(17))
		setConstant(119)
		setValue(x(18))
		putList(x(16))
		setConstant(115)
		setValue(x(17))
		putRecord('#' 2 x(0))
		setValue(x(1))
		setValue(x(16))
		putList(x(36))
		setConstant(39)
		setConstant(nil)
		putList(x(35))
		setConstant(77)
		setValue(x(36))
		putList(x(34))
		setConstant(79)
		setValue(x(35))
		putList(x(33))
		setConstant(84)
		setValue(x(34))
		putList(x(32))
		setConstant(65)
		setValue(x(33))
		putList(x(31))
		setConstant(90)
		setValue(x(32))
		putList(x(30))
		setConstant(79)
		setValue(x(31))
		putList(x(29))
		setConstant(96)
		setValue(x(30))
		putList(x(40))
		setConstant(109)
		setConstant(nil)
		putList(x(39))
		setConstant(111)
		setValue(x(40))
		putList(x(38))
		setConstant(116)
		setValue(x(39))
		putList(x(37))
		setConstant(97)
		setValue(x(38))
		putRecord('#' 2 x(28))
		setValue(x(29))
		setValue(x(37))
		putList(x(54))
		setConstant(39)
		setConstant(nil)
		putList(x(53))
		setConstant(76)
		setValue(x(54))
		putList(x(52))
		setConstant(69)
		setValue(x(53))
		putList(x(51))
		setConstant(66)
		setValue(x(52))
		putList(x(50))
		setConstant(65)
		setValue(x(51))
		putList(x(49))
		setConstant(76)
		setValue(x(50))
		putList(x(48))
		setConstant(95)
		setValue(x(49))
		putList(x(47))
		setConstant(77)
		setValue(x(48))
		putList(x(46))
		setConstant(79)
		setValue(x(47))
		putList(x(45))
		setConstant(84)
		setValue(x(46))
		putList(x(44))
		setConstant(65)
		setValue(x(45))
		putList(x(43))
		setConstant(96)
		setValue(x(44))
		putList(x(64))
		setConstant(108)
		setConstant(nil)
		putList(x(63))
		setConstant(101)
		setValue(x(64))
		putList(x(62))
		setConstant(98)
		setValue(x(63))
		putList(x(61))
		setConstant(97)
		setValue(x(62))
		putList(x(60))
		setConstant(108)
		setValue(x(61))
		putList(x(59))
		setConstant(32)
		setValue(x(60))
		putList(x(58))
		setConstant(109)
		setValue(x(59))
		putList(x(57))
		setConstant(111)
		setValue(x(58))
		putList(x(56))
		setConstant(116)
		setValue(x(57))
		putList(x(55))
		setConstant(97)
		setValue(x(56))
		putRecord('#' 2 x(42))
		setValue(x(43))
		setValue(x(55))
		putList(x(75))
		setConstant(39)
		setConstant(nil)
		putList(x(74))
		setConstant(84)
		setValue(x(75))
		putList(x(73))
		setConstant(65)
		setValue(x(74))
		putList(x(72))
		setConstant(79)
		setValue(x(73))
		putList(x(71))
		setConstant(76)
		setValue(x(72))
		putList(x(70))
		setConstant(70)
		setValue(x(71))
		putList(x(69))
		setConstant(90)
		setValue(x(70))
		putList(x(68))
		setConstant(79)
		setValue(x(69))
		putList(x(67))
		setConstant(96)
		setValue(x(68))
		putList(x(80))
		setConstant(116)
		setConstant(nil)
		putList(x(79))
		setConstant(97)
		setValue(x(80))
		putList(x(78))
		setConstant(111)
		setValue(x(79))
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(102)
		setValue(x(77))
		putRecord('#' 2 x(66))
		setValue(x(67))
		setValue(x(76))
		putList(x(89))
		setConstant(39)
		setConstant(nil)
		putList(x(88))
		setConstant(84)
		setValue(x(89))
		putList(x(87))
		setConstant(78)
		setValue(x(88))
		putList(x(86))
		setConstant(73)
		setValue(x(87))
		putList(x(85))
		setConstant(90)
		setValue(x(86))
		putList(x(84))
		setConstant(79)
		setValue(x(85))
		putList(x(83))
		setConstant(96)
		setValue(x(84))
		putList(x(96))
		setConstant(114)
		setConstant(nil)
		putList(x(95))
		setConstant(101)
		setValue(x(96))
		putList(x(94))
		setConstant(103)
		setValue(x(95))
		putList(x(93))
		setConstant(101)
		setValue(x(94))
		putList(x(92))
		setConstant(116)
		setValue(x(93))
		putList(x(91))
		setConstant(110)
		setValue(x(92))
		putList(x(90))
		setConstant(105)
		setValue(x(91))
		putRecord('#' 2 x(82))
		setValue(x(83))
		setValue(x(90))
		putList(x(106))
		setConstant(39)
		setConstant(nil)
		putList(x(105))
		setConstant(71)
		setValue(x(106))
		putList(x(104))
		setConstant(78)
		setValue(x(105))
		putList(x(103))
		setConstant(73)
		setValue(x(104))
		putList(x(102))
		setConstant(82)
		setValue(x(103))
		putList(x(101))
		setConstant(84)
		setValue(x(102))
		putList(x(100))
		setConstant(83)
		setValue(x(101))
		putList(x(99))
		setConstant(96)
		setValue(x(100))
		putList(x(112))
		setConstant(103)
		setConstant(nil)
		putList(x(111))
		setConstant(110)
		setValue(x(112))
		putList(x(110))
		setConstant(105)
		setValue(x(111))
		putList(x(109))
		setConstant(114)
		setValue(x(110))
		putList(x(108))
		setConstant(116)
		setValue(x(109))
		putList(x(107))
		setConstant(115)
		setValue(x(108))
		putRecord('#' 2 x(98))
		setValue(x(99))
		setValue(x(107))
		putList(x(121))
		setConstant(39)
		setConstant(nil)
		putList(x(120))
		setConstant(82)
		setValue(x(121))
		putList(x(119))
		setConstant(69)
		setValue(x(120))
		putList(x(118))
		setConstant(80)
		setValue(x(119))
		putList(x(117))
		setConstant(77)
		setValue(x(118))
		putList(x(116))
		setConstant(65)
		setValue(x(117))
		putList(x(115))
		setConstant(96)
		setValue(x(116))
		putList(x(124))
		setConstant(39)
		setConstant(nil)
		putList(x(123))
		setConstant(38)
		setValue(x(124))
		putList(x(122))
		setConstant(96)
		setValue(x(123))
		putRecord('#' 2 x(114))
		setValue(x(115))
		setValue(x(122))
		putList(x(136))
		setConstant(39)
		setConstant(nil)
		putList(x(135))
		setConstant(69)
		setValue(x(136))
		putList(x(134))
		setConstant(76)
		setValue(x(135))
		putList(x(133))
		setConstant(66)
		setValue(x(134))
		putList(x(132))
		setConstant(65)
		setValue(x(133))
		putList(x(131))
		setConstant(73)
		setValue(x(132))
		putList(x(130))
		setConstant(82)
		setValue(x(131))
		putList(x(129))
		setConstant(65)
		setValue(x(130))
		putList(x(128))
		setConstant(86)
		setValue(x(129))
		putList(x(127))
		setConstant(96)
		setValue(x(128))
		putList(x(144))
		setConstant(101)
		setConstant(nil)
		putList(x(143))
		setConstant(108)
		setValue(x(144))
		putList(x(142))
		setConstant(98)
		setValue(x(143))
		putList(x(141))
		setConstant(97)
		setValue(x(142))
		putList(x(140))
		setConstant(105)
		setValue(x(141))
		putList(x(139))
		setConstant(114)
		setValue(x(140))
		putList(x(138))
		setConstant(97)
		setValue(x(139))
		putList(x(137))
		setConstant(118)
		setValue(x(138))
		putRecord('#' 2 x(126))
		setValue(x(127))
		setValue(x(137))
		putList(x(162))
		setConstant(39)
		setConstant(nil)
		putList(x(161))
		setConstant(76)
		setValue(x(162))
		putList(x(160))
		setConstant(69)
		setValue(x(161))
		putList(x(159))
		setConstant(66)
		setValue(x(160))
		putList(x(158))
		setConstant(65)
		setValue(x(159))
		putList(x(157))
		setConstant(76)
		setValue(x(158))
		putList(x(156))
		setConstant(95)
		setValue(x(157))
		putList(x(155))
		setConstant(69)
		setValue(x(156))
		putList(x(154))
		setConstant(76)
		setValue(x(155))
		putList(x(153))
		setConstant(66)
		setValue(x(154))
		putList(x(152))
		setConstant(65)
		setValue(x(153))
		putList(x(151))
		setConstant(73)
		setValue(x(152))
		putList(x(150))
		setConstant(82)
		setValue(x(151))
		putList(x(149))
		setConstant(65)
		setValue(x(150))
		putList(x(148))
		setConstant(86)
		setValue(x(149))
		putList(x(147))
		setConstant(96)
		setValue(x(148))
		putList(x(176))
		setConstant(108)
		setConstant(nil)
		putList(x(175))
		setConstant(101)
		setValue(x(176))
		putList(x(174))
		setConstant(98)
		setValue(x(175))
		putList(x(173))
		setConstant(97)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(32)
		setValue(x(172))
		putList(x(170))
		setConstant(101)
		setValue(x(171))
		putList(x(169))
		setConstant(108)
		setValue(x(170))
		putList(x(168))
		setConstant(98)
		setValue(x(169))
		putList(x(167))
		setConstant(97)
		setValue(x(168))
		putList(x(166))
		setConstant(105)
		setValue(x(167))
		putList(x(165))
		setConstant(114)
		setValue(x(166))
		putList(x(164))
		setConstant(97)
		setValue(x(165))
		putList(x(163))
		setConstant(118)
		setValue(x(164))
		putRecord('#' 2 x(146))
		setValue(x(147))
		setValue(x(163))
		putList(x(187))
		setConstant(39)
		setConstant(nil)
		putList(x(186))
		setConstant(84)
		setValue(x(187))
		putList(x(185))
		setConstant(76)
		setValue(x(186))
		putList(x(184))
		setConstant(85)
		setValue(x(185))
		putList(x(183))
		setConstant(65)
		setValue(x(184))
		putList(x(182))
		setConstant(70)
		setValue(x(183))
		putList(x(181))
		setConstant(69)
		setValue(x(182))
		putList(x(180))
		setConstant(68)
		setValue(x(181))
		putList(x(179))
		setConstant(96)
		setValue(x(180))
		putList(x(191))
		setConstant(39)
		setConstant(nil)
		putList(x(190))
		setConstant(61)
		setValue(x(191))
		putList(x(189))
		setConstant(60)
		setValue(x(190))
		putList(x(188))
		setConstant(96)
		setValue(x(189))
		putRecord('#' 2 x(178))
		setValue(x(179))
		setValue(x(188))
		putList(x(201))
		setConstant(39)
		setConstant(nil)
		putList(x(200))
		setConstant(69)
		setValue(x(201))
		putList(x(199))
		setConstant(67)
		setValue(x(200))
		putList(x(198))
		setConstant(73)
		setValue(x(199))
		putList(x(197))
		setConstant(79)
		setValue(x(198))
		putList(x(196))
		setConstant(72)
		setValue(x(197))
		putList(x(195))
		setConstant(67)
		setValue(x(196))
		putList(x(194))
		setConstant(96)
		setValue(x(195))
		putList(x(205))
		setConstant(39)
		setConstant(nil)
		putList(x(204))
		setConstant(93)
		setValue(x(205))
		putList(x(203))
		setConstant(91)
		setValue(x(204))
		putList(x(202))
		setConstant(96)
		setValue(x(203))
		putRecord('#' 2 x(193))
		setValue(x(194))
		setValue(x(202))
		putList(x(214))
		setConstant(39)
		setConstant(nil)
		putList(x(213))
		setConstant(83)
		setValue(x(214))
		putList(x(212))
		setConstant(84)
		setValue(x(213))
		putList(x(211))
		setConstant(79)
		setValue(x(212))
		putList(x(210))
		setConstant(68)
		setValue(x(211))
		putList(x(209))
		setConstant(76)
		setValue(x(210))
		putList(x(208))
		setConstant(96)
		setValue(x(209))
		putList(x(219))
		setConstant(39)
		setConstant(nil)
		putList(x(218))
		setConstant(46)
		setValue(x(219))
		putList(x(217))
		setConstant(46)
		setValue(x(218))
		putList(x(216))
		setConstant(46)
		setValue(x(217))
		putList(x(215))
		setConstant(96)
		setValue(x(216))
		putRecord('#' 2 x(207))
		setValue(x(208))
		setValue(x(215))
		putList(x(231))
		setConstant(39)
		setConstant(nil)
		putList(x(230))
		setConstant(78)
		setValue(x(231))
		putList(x(229))
		setConstant(71)
		setValue(x(230))
		putList(x(228))
		setConstant(73)
		setValue(x(229))
		putList(x(227))
		setConstant(83)
		setValue(x(228))
		putList(x(226))
		setConstant(83)
		setValue(x(227))
		putList(x(225))
		setConstant(65)
		setValue(x(226))
		putList(x(224))
		setConstant(79)
		setValue(x(225))
		putList(x(223))
		setConstant(79)
		setValue(x(224))
		putList(x(222))
		setConstant(96)
		setValue(x(223))
		putList(x(235))
		setConstant(39)
		setConstant(nil)
		putList(x(234))
		setConstant(45)
		setValue(x(235))
		putList(x(233))
		setConstant(60)
		setValue(x(234))
		putList(x(232))
		setConstant(96)
		setValue(x(233))
		putRecord('#' 2 x(221))
		setValue(x(222))
		setValue(x(232))
		putList(x(245))
		setConstant(39)
		setConstant(nil)
		putList(x(244))
		setConstant(78)
		setValue(x(245))
		putList(x(243))
		setConstant(71)
		setValue(x(244))
		putList(x(242))
		setConstant(73)
		setValue(x(243))
		putList(x(241))
		setConstant(83)
		setValue(x(242))
		putList(x(240))
		setConstant(83)
		setValue(x(241))
		putList(x(239))
		setConstant(65)
		setValue(x(240))
		putList(x(238))
		setConstant(96)
		setValue(x(239))
		putList(x(249))
		setConstant(39)
		setConstant(nil)
		putList(x(248))
		setConstant(61)
		setValue(x(249))
		putList(x(247))
		setConstant(58)
		setValue(x(248))
		putList(x(246))
		setConstant(96)
		setValue(x(247))
		putRecord('#' 2 x(237))
		setValue(x(238))
		setValue(x(246))
		putList(x(260))
		setConstant(39)
		setConstant(nil)
		putList(x(259))
		setConstant(69)
		setValue(x(260))
		putList(x(258))
		setConstant(82)
		setValue(x(259))
		putList(x(257))
		setConstant(65)
		setValue(x(258))
		putList(x(256))
		setConstant(80)
		setValue(x(257))
		putList(x(255))
		setConstant(77)
		setValue(x(256))
		putList(x(254))
		setConstant(79)
		setValue(x(255))
		putList(x(253))
		setConstant(67)
		setValue(x(254))
		putList(x(252))
		setConstant(96)
		setValue(x(253))
		putList(x(279))
		setConstant(114)
		setConstant(nil)
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(116)
		setValue(x(278))
		putList(x(276))
		setConstant(97)
		setValue(x(277))
		putList(x(275))
		setConstant(114)
		setValue(x(276))
		putList(x(274))
		setConstant(101)
		setValue(x(275))
		putList(x(273))
		setConstant(112)
		setValue(x(274))
		putList(x(272))
		setConstant(111)
		setValue(x(273))
		putList(x(271))
		setConstant(32)
		setValue(x(272))
		putList(x(270))
		setConstant(110)
		setValue(x(271))
		putList(x(269))
		setConstant(111)
		setValue(x(270))
		putList(x(268))
		setConstant(115)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(114)
		setValue(x(267))
		putList(x(265))
		setConstant(97)
		setValue(x(266))
		putList(x(264))
		setConstant(112)
		setValue(x(265))
		putList(x(263))
		setConstant(109)
		setValue(x(264))
		putList(x(262))
		setConstant(111)
		setValue(x(263))
		putList(x(261))
		setConstant(99)
		setValue(x(262))
		putRecord('#' 2 x(251))
		setValue(x(252))
		setValue(x(261))
		putList(x(292))
		setConstant(39)
		setConstant(nil)
		putList(x(291))
		setConstant(69)
		setValue(x(292))
		putList(x(290))
		setConstant(82)
		setValue(x(291))
		putList(x(289))
		setConstant(65)
		setValue(x(290))
		putList(x(288))
		setConstant(80)
		setValue(x(289))
		putList(x(287))
		setConstant(77)
		setValue(x(288))
		putList(x(286))
		setConstant(79)
		setValue(x(287))
		putList(x(285))
		setConstant(67)
		setValue(x(286))
		putList(x(284))
		setConstant(68)
		setValue(x(285))
		putList(x(283))
		setConstant(70)
		setValue(x(284))
		putList(x(282))
		setConstant(96)
		setValue(x(283))
		putList(x(325))
		setConstant(114)
		setConstant(nil)
		putList(x(324))
		setConstant(111)
		setValue(x(325))
		putList(x(323))
		setConstant(116)
		setValue(x(324))
		putList(x(322))
		setConstant(97)
		setValue(x(323))
		putList(x(321))
		setConstant(114)
		setValue(x(322))
		putList(x(320))
		setConstant(101)
		setValue(x(321))
		putList(x(319))
		setConstant(112)
		setValue(x(320))
		putList(x(318))
		setConstant(111)
		setValue(x(319))
		putList(x(317))
		setConstant(32)
		setValue(x(318))
		putList(x(316))
		setConstant(110)
		setValue(x(317))
		putList(x(315))
		setConstant(111)
		setValue(x(316))
		putList(x(314))
		setConstant(115)
		setValue(x(315))
		putList(x(313))
		setConstant(105)
		setValue(x(314))
		putList(x(312))
		setConstant(114)
		setValue(x(313))
		putList(x(311))
		setConstant(97)
		setValue(x(312))
		putList(x(310))
		setConstant(112)
		setValue(x(311))
		putList(x(309))
		setConstant(109)
		setValue(x(310))
		putList(x(308))
		setConstant(111)
		setValue(x(309))
		putList(x(307))
		setConstant(99)
		setValue(x(308))
		putList(x(306))
		setConstant(32)
		setValue(x(307))
		putList(x(305))
		setConstant(110)
		setValue(x(306))
		putList(x(304))
		setConstant(105)
		setValue(x(305))
		putList(x(303))
		setConstant(97)
		setValue(x(304))
		putList(x(302))
		setConstant(109)
		setValue(x(303))
		putList(x(301))
		setConstant(111)
		setValue(x(302))
		putList(x(300))
		setConstant(100)
		setValue(x(301))
		putList(x(299))
		setConstant(32)
		setValue(x(300))
		putList(x(298))
		setConstant(101)
		setValue(x(299))
		putList(x(297))
		setConstant(116)
		setValue(x(298))
		putList(x(296))
		setConstant(105)
		setValue(x(297))
		putList(x(295))
		setConstant(110)
		setValue(x(296))
		putList(x(294))
		setConstant(105)
		setValue(x(295))
		putList(x(293))
		setConstant(102)
		setValue(x(294))
		putRecord('#' 2 x(281))
		setValue(x(282))
		setValue(x(293))
		putList(x(333))
		setConstant(39)
		setConstant(nil)
		putList(x(332))
		setConstant(78)
		setValue(x(333))
		putList(x(331))
		setConstant(73)
		setValue(x(332))
		putList(x(330))
		setConstant(68)
		setValue(x(331))
		putList(x(329))
		setConstant(70)
		setValue(x(330))
		putList(x(328))
		setConstant(96)
		setValue(x(329))
		putList(x(365))
		setConstant(114)
		setConstant(nil)
		putList(x(364))
		setConstant(111)
		setValue(x(365))
		putList(x(363))
		setConstant(116)
		setValue(x(364))
		putList(x(362))
		setConstant(97)
		setValue(x(363))
		putList(x(361))
		setConstant(114)
		setValue(x(362))
		putList(x(360))
		setConstant(101)
		setValue(x(361))
		putList(x(359))
		setConstant(112)
		setValue(x(360))
		putList(x(358))
		setConstant(111)
		setValue(x(359))
		putList(x(357))
		setConstant(32)
		setValue(x(358))
		putList(x(356))
		setConstant(110)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(105)
		setValue(x(355))
		putList(x(353))
		setConstant(115)
		setValue(x(354))
		putList(x(352))
		setConstant(117)
		setValue(x(353))
		putList(x(351))
		setConstant(108)
		setValue(x(352))
		putList(x(350))
		setConstant(99)
		setValue(x(351))
		putList(x(349))
		setConstant(110)
		setValue(x(350))
		putList(x(348))
		setConstant(105)
		setValue(x(349))
		putList(x(347))
		setConstant(32)
		setValue(x(348))
		putList(x(346))
		setConstant(110)
		setValue(x(347))
		putList(x(345))
		setConstant(105)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(111)
		setValue(x(343))
		putList(x(341))
		setConstant(100)
		setValue(x(342))
		putList(x(340))
		setConstant(32)
		setValue(x(341))
		putList(x(339))
		setConstant(101)
		setValue(x(340))
		putList(x(338))
		setConstant(116)
		setValue(x(339))
		putList(x(337))
		setConstant(105)
		setValue(x(338))
		putList(x(336))
		setConstant(110)
		setValue(x(337))
		putList(x(335))
		setConstant(105)
		setValue(x(336))
		putList(x(334))
		setConstant(102)
		setValue(x(335))
		putRecord('#' 2 x(327))
		setValue(x(328))
		setValue(x(334))
		putList(x(372))
		setConstant(39)
		setConstant(nil)
		putList(x(371))
		setConstant(68)
		setValue(x(372))
		putList(x(370))
		setConstant(68)
		setValue(x(371))
		putList(x(369))
		setConstant(65)
		setValue(x(370))
		putList(x(368))
		setConstant(96)
		setValue(x(369))
		putList(x(382))
		setConstant(39)
		setConstant(nil)
		putList(x(381))
		setConstant(45)
		setValue(x(382))
		putList(x(380))
		setConstant(96)
		setValue(x(381))
		putList(x(379))
		setConstant(32)
		setValue(x(380))
		putList(x(378))
		setConstant(114)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(32)
		setValue(x(377))
		putList(x(375))
		setConstant(39)
		setValue(x(376))
		putList(x(374))
		setConstant(43)
		setValue(x(375))
		putList(x(373))
		setConstant(96)
		setValue(x(374))
		putRecord('#' 2 x(367))
		setValue(x(368))
		setValue(x(373))
		putList(x(391))
		setConstant(39)
		setConstant(nil)
		putList(x(390))
		setConstant(76)
		setValue(x(391))
		putList(x(389))
		setConstant(85)
		setValue(x(390))
		putList(x(388))
		setConstant(77)
		setValue(x(389))
		putList(x(387))
		setConstant(68)
		setValue(x(388))
		putList(x(386))
		setConstant(70)
		setValue(x(387))
		putList(x(385))
		setConstant(96)
		setValue(x(386))
		putList(x(401))
		setConstant(39)
		setConstant(nil)
		putList(x(400))
		setConstant(47)
		setValue(x(401))
		putList(x(399))
		setConstant(96)
		setValue(x(400))
		putList(x(398))
		setConstant(32)
		setValue(x(399))
		putList(x(397))
		setConstant(114)
		setValue(x(398))
		putList(x(396))
		setConstant(111)
		setValue(x(397))
		putList(x(395))
		setConstant(32)
		setValue(x(396))
		putList(x(394))
		setConstant(39)
		setValue(x(395))
		putList(x(393))
		setConstant(42)
		setValue(x(394))
		putList(x(392))
		setConstant(96)
		setValue(x(393))
		putRecord('#' 2 x(384))
		setValue(x(385))
		setValue(x(392))
		putList(x(413))
		setConstant(39)
		setConstant(nil)
		putList(x(412))
		setConstant(76)
		setValue(x(413))
		putList(x(411))
		setConstant(85)
		setValue(x(412))
		putList(x(410))
		setConstant(77)
		setValue(x(411))
		putList(x(409))
		setConstant(82)
		setValue(x(410))
		putList(x(408))
		setConstant(69)
		setValue(x(409))
		putList(x(407))
		setConstant(72)
		setValue(x(408))
		putList(x(406))
		setConstant(84)
		setValue(x(407))
		putList(x(405))
		setConstant(79)
		setValue(x(406))
		putList(x(404))
		setConstant(96)
		setValue(x(405))
		putList(x(427))
		setConstant(39)
		setConstant(nil)
		putList(x(426))
		setConstant(100)
		setValue(x(427))
		putList(x(425))
		setConstant(111)
		setValue(x(426))
		putList(x(424))
		setConstant(109)
		setValue(x(425))
		putList(x(423))
		setConstant(96)
		setValue(x(424))
		putList(x(422))
		setConstant(32)
		setValue(x(423))
		putList(x(421))
		setConstant(114)
		setValue(x(422))
		putList(x(420))
		setConstant(111)
		setValue(x(421))
		putList(x(419))
		setConstant(32)
		setValue(x(420))
		putList(x(418))
		setConstant(39)
		setValue(x(419))
		putList(x(417))
		setConstant(118)
		setValue(x(418))
		putList(x(416))
		setConstant(105)
		setValue(x(417))
		putList(x(415))
		setConstant(100)
		setValue(x(416))
		putList(x(414))
		setConstant(96)
		setValue(x(415))
		putRecord('#' 2 x(403))
		setValue(x(404))
		setValue(x(414))
		putList(x(442))
		setConstant(39)
		setConstant(nil)
		putList(x(441))
		setConstant(76)
		setValue(x(442))
		putList(x(440))
		setConstant(69)
		setValue(x(441))
		putList(x(439))
		setConstant(66)
		setValue(x(440))
		putList(x(438))
		setConstant(65)
		setValue(x(439))
		putList(x(437))
		setConstant(76)
		setValue(x(438))
		putList(x(436))
		setConstant(95)
		setValue(x(437))
		putList(x(435))
		setConstant(69)
		setValue(x(436))
		putList(x(434))
		setConstant(83)
		setValue(x(435))
		putList(x(433))
		setConstant(76)
		setValue(x(434))
		putList(x(432))
		setConstant(65)
		setValue(x(433))
		putList(x(431))
		setConstant(70)
		setValue(x(432))
		putList(x(430))
		setConstant(96)
		setValue(x(431))
		putList(x(458))
		setConstant(108)
		setConstant(nil)
		putList(x(457))
		setConstant(101)
		setValue(x(458))
		putList(x(456))
		setConstant(98)
		setValue(x(457))
		putList(x(455))
		setConstant(97)
		setValue(x(456))
		putList(x(454))
		setConstant(108)
		setValue(x(455))
		putList(x(453))
		setConstant(32)
		setValue(x(454))
		putList(x(452))
		setConstant(115)
		setValue(x(453))
		putList(x(451))
		setConstant(97)
		setValue(x(452))
		putList(x(450))
		setConstant(32)
		setValue(x(451))
		putList(x(449))
		setConstant(39)
		setValue(x(450))
		putList(x(448))
		setConstant(101)
		setValue(x(449))
		putList(x(447))
		setConstant(115)
		setValue(x(448))
		putList(x(446))
		setConstant(108)
		setValue(x(447))
		putList(x(445))
		setConstant(97)
		setValue(x(446))
		putList(x(444))
		setConstant(102)
		setValue(x(445))
		putList(x(443))
		setConstant(96)
		setValue(x(444))
		putRecord('#' 2 x(429))
		setValue(x(430))
		setValue(x(443))
		putList(x(472))
		setConstant(39)
		setConstant(nil)
		putList(x(471))
		setConstant(76)
		setValue(x(472))
		putList(x(470))
		setConstant(69)
		setValue(x(471))
		putList(x(469))
		setConstant(66)
		setValue(x(470))
		putList(x(468))
		setConstant(65)
		setValue(x(469))
		putList(x(467))
		setConstant(76)
		setValue(x(468))
		putList(x(466))
		setConstant(95)
		setValue(x(467))
		putList(x(465))
		setConstant(69)
		setValue(x(466))
		putList(x(464))
		setConstant(85)
		setValue(x(465))
		putList(x(463))
		setConstant(82)
		setValue(x(464))
		putList(x(462))
		setConstant(84)
		setValue(x(463))
		putList(x(461))
		setConstant(96)
		setValue(x(462))
		putList(x(487))
		setConstant(108)
		setConstant(nil)
		putList(x(486))
		setConstant(101)
		setValue(x(487))
		putList(x(485))
		setConstant(98)
		setValue(x(486))
		putList(x(484))
		setConstant(97)
		setValue(x(485))
		putList(x(483))
		setConstant(108)
		setValue(x(484))
		putList(x(482))
		setConstant(32)
		setValue(x(483))
		putList(x(481))
		setConstant(115)
		setValue(x(482))
		putList(x(480))
		setConstant(97)
		setValue(x(481))
		putList(x(479))
		setConstant(32)
		setValue(x(480))
		putList(x(478))
		setConstant(39)
		setValue(x(479))
		putList(x(477))
		setConstant(101)
		setValue(x(478))
		putList(x(476))
		setConstant(117)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(96)
		setValue(x(474))
		putRecord('#' 2 x(460))
		setValue(x(461))
		setValue(x(473))
		putList(x(501))
		setConstant(39)
		setConstant(nil)
		putList(x(500))
		setConstant(76)
		setValue(x(501))
		putList(x(499))
		setConstant(69)
		setValue(x(500))
		putList(x(498))
		setConstant(66)
		setValue(x(499))
		putList(x(497))
		setConstant(65)
		setValue(x(498))
		putList(x(496))
		setConstant(76)
		setValue(x(497))
		putList(x(495))
		setConstant(95)
		setValue(x(496))
		putList(x(494))
		setConstant(84)
		setValue(x(495))
		putList(x(493))
		setConstant(73)
		setValue(x(494))
		putList(x(492))
		setConstant(78)
		setValue(x(493))
		putList(x(491))
		setConstant(85)
		setValue(x(492))
		putList(x(490))
		setConstant(96)
		setValue(x(491))
		putList(x(516))
		setConstant(108)
		setConstant(nil)
		putList(x(515))
		setConstant(101)
		setValue(x(516))
		putList(x(514))
		setConstant(98)
		setValue(x(515))
		putList(x(513))
		setConstant(97)
		setValue(x(514))
		putList(x(512))
		setConstant(108)
		setValue(x(513))
		putList(x(511))
		setConstant(32)
		setValue(x(512))
		putList(x(510))
		setConstant(115)
		setValue(x(511))
		putList(x(509))
		setConstant(97)
		setValue(x(510))
		putList(x(508))
		setConstant(32)
		setValue(x(509))
		putList(x(507))
		setConstant(39)
		setValue(x(508))
		putList(x(506))
		setConstant(116)
		setValue(x(507))
		putList(x(505))
		setConstant(105)
		setValue(x(506))
		putList(x(504))
		setConstant(110)
		setValue(x(505))
		putList(x(503))
		setConstant(117)
		setValue(x(504))
		putList(x(502))
		setConstant(96)
		setValue(x(503))
		putRecord('#' 2 x(489))
		setValue(x(490))
		setValue(x(502))
		putList(x(526))
		setConstant(39)
		setConstant(nil)
		putList(x(525))
		setConstant(84)
		setValue(x(526))
		putList(x(524))
		setConstant(78)
		setValue(x(525))
		putList(x(523))
		setConstant(73)
		setValue(x(524))
		putList(x(522))
		setConstant(84)
		setValue(x(523))
		putList(x(521))
		setConstant(79)
		setValue(x(522))
		putList(x(520))
		setConstant(68)
		setValue(x(521))
		putList(x(519))
		setConstant(96)
		setValue(x(520))
		putList(x(552))
		setConstant(114)
		setConstant(nil)
		putList(x(551))
		setConstant(101)
		setValue(x(552))
		putList(x(550))
		setConstant(103)
		setValue(x(551))
		putList(x(549))
		setConstant(101)
		setValue(x(550))
		putList(x(548))
		setConstant(116)
		setValue(x(549))
		putList(x(547))
		setConstant(110)
		setValue(x(548))
		putList(x(546))
		setConstant(105)
		setValue(x(547))
		putList(x(545))
		setConstant(32)
		setValue(x(546))
		putList(x(544))
		setConstant(110)
		setValue(x(545))
		putList(x(543))
		setConstant(97)
		setValue(x(544))
		putList(x(542))
		setConstant(32)
		setValue(x(543))
		putList(x(541))
		setConstant(121)
		setValue(x(542))
		putList(x(540))
		setConstant(98)
		setValue(x(541))
		putList(x(539))
		setConstant(32)
		setValue(x(540))
		putList(x(538))
		setConstant(100)
		setValue(x(539))
		putList(x(537))
		setConstant(101)
		setValue(x(538))
		putList(x(536))
		setConstant(119)
		setValue(x(537))
		putList(x(535))
		setConstant(111)
		setValue(x(536))
		putList(x(534))
		setConstant(108)
		setValue(x(535))
		putList(x(533))
		setConstant(108)
		setValue(x(534))
		putList(x(532))
		setConstant(111)
		setValue(x(533))
		putList(x(531))
		setConstant(102)
		setValue(x(532))
		putList(x(530))
		setConstant(32)
		setValue(x(531))
		putList(x(529))
		setConstant(39)
		setValue(x(530))
		putList(x(528))
		setConstant(46)
		setValue(x(529))
		putList(x(527))
		setConstant(96)
		setValue(x(528))
		putRecord('#' 2 x(518))
		setValue(x(519))
		setValue(x(527))
		putList(x(561))
		setConstant(39)
		setConstant(nil)
		putList(x(560))
		setConstant(70)
		setValue(x(561))
		putList(x(559))
		setConstant(69)
		setValue(x(560))
		putList(x(558))
		setConstant(82)
		setValue(x(559))
		putList(x(557))
		setConstant(69)
		setValue(x(558))
		putList(x(556))
		setConstant(68)
		setValue(x(557))
		putList(x(555))
		setConstant(96)
		setValue(x(556))
		putList(x(565))
		setConstant(39)
		setConstant(nil)
		putList(x(564))
		setConstant(33)
		setValue(x(565))
		putList(x(563))
		setConstant(33)
		setValue(x(564))
		putList(x(562))
		setConstant(96)
		setValue(x(563))
		putRecord('#' 2 x(554))
		setValue(x(555))
		setValue(x(562))
		putList(x(578))
		setConstant(39)
		setConstant(nil)
		putList(x(577))
		setConstant(69)
		setValue(x(578))
		putList(x(576))
		setConstant(76)
		setValue(x(577))
		putList(x(575))
		setConstant(73)
		setValue(x(576))
		putList(x(574))
		setConstant(70)
		setValue(x(575))
		putList(x(573))
		setConstant(70)
		setValue(x(574))
		putList(x(572))
		setConstant(79)
		setValue(x(573))
		putList(x(571))
		setConstant(68)
		setValue(x(572))
		putList(x(570))
		setConstant(78)
		setValue(x(571))
		putList(x(569))
		setConstant(69)
		setValue(x(570))
		putList(x(568))
		setConstant(96)
		setValue(x(569))
		putList(x(589))
		setConstant(101)
		setConstant(nil)
		putList(x(588))
		setConstant(108)
		setValue(x(589))
		putList(x(587))
		setConstant(105)
		setValue(x(588))
		putList(x(586))
		setConstant(102)
		setValue(x(587))
		putList(x(585))
		setConstant(45)
		setValue(x(586))
		putList(x(584))
		setConstant(102)
		setValue(x(585))
		putList(x(583))
		setConstant(111)
		setValue(x(584))
		putList(x(582))
		setConstant(45)
		setValue(x(583))
		putList(x(581))
		setConstant(100)
		setValue(x(582))
		putList(x(580))
		setConstant(110)
		setValue(x(581))
		putList(x(579))
		setConstant(101)
		setValue(x(580))
		putRecord('#' 2 x(567))
		setValue(x(568))
		setValue(x(579))
		putList(x(598))
		setConstant(39)
		setConstant(nil)
		putList(x(597))
		setConstant(88)
		setValue(x(598))
		putList(x(596))
		setConstant(69)
		setValue(x(597))
		putList(x(595))
		setConstant(71)
		setValue(x(596))
		putList(x(594))
		setConstant(69)
		setValue(x(595))
		putList(x(593))
		setConstant(82)
		setValue(x(594))
		putList(x(592))
		setConstant(96)
		setValue(x(593))
		putList(x(616))
		setConstant(110)
		setConstant(nil)
		putList(x(615))
		setConstant(111)
		setValue(x(616))
		putList(x(614))
		setConstant(105)
		setValue(x(615))
		putList(x(613))
		setConstant(115)
		setValue(x(614))
		putList(x(612))
		setConstant(115)
		setValue(x(613))
		putList(x(611))
		setConstant(101)
		setValue(x(612))
		putList(x(610))
		setConstant(114)
		setValue(x(611))
		putList(x(609))
		setConstant(112)
		setValue(x(610))
		putList(x(608))
		setConstant(120)
		setValue(x(609))
		putList(x(607))
		setConstant(101)
		setValue(x(608))
		putList(x(606))
		setConstant(32)
		setValue(x(607))
		putList(x(605))
		setConstant(114)
		setValue(x(606))
		putList(x(604))
		setConstant(97)
		setValue(x(605))
		putList(x(603))
		setConstant(108)
		setValue(x(604))
		putList(x(602))
		setConstant(117)
		setValue(x(603))
		putList(x(601))
		setConstant(103)
		setValue(x(602))
		putList(x(600))
		setConstant(101)
		setValue(x(601))
		putList(x(599))
		setConstant(114)
		setValue(x(600))
		putRecord('#' 2 x(591))
		setValue(x(592))
		setValue(x(599))
		putList(x(626))
		setConstant(39)
		setConstant(nil)
		putList(x(625))
		setConstant(69)
		setValue(x(626))
		putList(x(624))
		setConstant(67)
		setValue(x(625))
		putList(x(623))
		setConstant(85)
		setValue(x(624))
		putList(x(622))
		setConstant(68)
		setValue(x(623))
		putList(x(621))
		setConstant(69)
		setValue(x(622))
		putList(x(620))
		setConstant(82)
		setValue(x(621))
		putList(x(619))
		setConstant(96)
		setValue(x(620))
		putList(x(630))
		setConstant(39)
		setConstant(nil)
		putList(x(629))
		setConstant(62)
		setValue(x(630))
		putList(x(628))
		setConstant(61)
		setValue(x(629))
		putList(x(627))
		setConstant(96)
		setValue(x(628))
		putRecord('#' 2 x(618))
		setValue(x(619))
		setValue(x(627))
		putList(x(637))
		setConstant(39)
		setConstant(nil)
		putList(x(636))
		setConstant(80)
		setValue(x(637))
		putList(x(635))
		setConstant(69)
		setValue(x(636))
		putList(x(634))
		setConstant(83)
		setValue(x(635))
		putList(x(633))
		setConstant(96)
		setValue(x(634))
		putList(x(641))
		setConstant(39)
		setConstant(nil)
		putList(x(640))
		setConstant(47)
		setValue(x(641))
		putList(x(639))
		setConstant(47)
		setValue(x(640))
		putList(x(638))
		setConstant(96)
		setValue(x(639))
		putRecord('#' 2 x(632))
		setValue(x(633))
		setValue(x(638))
		putList(x(631))
		setValue(x(632))
		setConstant(nil)
		putList(x(617))
		setValue(x(618))
		setValue(x(631))
		putList(x(590))
		setValue(x(591))
		setValue(x(617))
		putList(x(566))
		setValue(x(567))
		setValue(x(590))
		putList(x(553))
		setValue(x(554))
		setValue(x(566))
		putList(x(517))
		setValue(x(518))
		setValue(x(553))
		putList(x(488))
		setValue(x(489))
		setValue(x(517))
		putList(x(459))
		setValue(x(460))
		setValue(x(488))
		putList(x(428))
		setValue(x(429))
		setValue(x(459))
		putList(x(402))
		setValue(x(403))
		setValue(x(428))
		putList(x(383))
		setValue(x(384))
		setValue(x(402))
		putList(x(366))
		setValue(x(367))
		setValue(x(383))
		putList(x(326))
		setValue(x(327))
		setValue(x(366))
		putList(x(280))
		setValue(x(281))
		setValue(x(326))
		putList(x(250))
		setValue(x(251))
		setValue(x(280))
		putList(x(236))
		setValue(x(237))
		setValue(x(250))
		putList(x(220))
		setValue(x(221))
		setValue(x(236))
		putList(x(206))
		setValue(x(207))
		setValue(x(220))
		putList(x(192))
		setValue(x(193))
		setValue(x(206))
		putList(x(177))
		setValue(x(178))
		setValue(x(192))
		putList(x(145))
		setValue(x(146))
		setValue(x(177))
		putList(x(125))
		setValue(x(126))
		setValue(x(145))
		putList(x(113))
		setValue(x(114))
		setValue(x(125))
		putList(x(97))
		setValue(x(98))
		setValue(x(113))
		putList(x(81))
		setValue(x(82))
		setValue(x(97))
		putList(x(65))
		setValue(x(66))
		setValue(x(81))
		putList(x(41))
		setValue(x(42))
		setValue(x(65))
		putList(x(27))
		setValue(x(28))
		setValue(x(41))
		putList(x(9))
		setValue(x(0))
		setValue(x(27))
lbl(299814)	definition(x(10) 299878 pid('DetachPrefix' 3 pos('./compiler/ParseOz.oz' 57 6) nil 5) <Q: 1708> nil)
		match(x(0) ht(299863 [onScalar(nil 299823) onRecord('|' 2 299827)]))
lbl(299823)	unify(x(2) x(1))
		return
lbl(299827)	allocateL2
		getVarVar(x(0) x(3))
		move(x(2) y(0))
		testList(x(1) 299858)
lbl(299837)	getVarVar(x(1) x(4))
		createVariable(y(1))
		shallowGuard(299858)
		unify(x(0) x(1))
lbl(299847)	shallowThen
		move(x(3) x(0))
		move(x(4) x(1))
		deAllocateL2
		genFastCall(<Q: 1708> 7)
lbl(299858)	getLiteral(false y(0))
		deAllocateL2
		return
lbl(299863)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(64)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299814)
lbl(299878)	definition(x(10) 299966 pid('BeautifyPrefix' 3 pos('./compiler/ParseOz.oz' 67 6) nil 4) <Q: 1709> nil)
		match(x(0) ht(299951 [onScalar(nil 299887) onRecord('|' 2 299891)]))
lbl(299887)	unify(x(2) x(1))
		return
lbl(299891)	allocateL5
		getVarVar(x(3) y(0))
		getRecord('#' 2 x(3))
		unifyVariable(x(0))
		unifyVariable(y(1))
		moveMoveXYXY(x(1) y(2) x(2) y(3))
		createVariableMove(y(4) x(2))
		genFastCall(<Q: 1708> 6)
		testLiteral(y(4) false 299930)
lbl(299918)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<Q: 1709> 7)
lbl(299930)	move(y(4) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1710> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		move(y(3) x(2))
		deAllocateL5
		genFastCall(<P: 21> 7)
lbl(299951)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(73)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299878)
lbl(299966)	definition(x(10) 300236 pid('Beautify' 2 pos('./compiler/ParseOz.oz' 76 6) nil 5) <Q: 1710> [g(6) x(9)])
		match(x(0) ht(300221 [onScalar(nil 299975) onRecord('|' 2 299979)]))
lbl(299975)	getLiteral(nil x(1))
		return
lbl(299979)	allocateL4
		getVarVar(x(2) y(0))
		testNumber(x(2) 96 300210)
lbl(299987)	moveMoveXYXY(x(0) y(1) x(1) y(2))
		testList(y(0) 300095)
lbl(299995)	getVarVar(x(2) x(3))
		testNumber(x(2) 95 300095)
lbl(300002)	definition(x(4) 300020 pid('' 2 pos('./compiler/ParseOz.oz' 81 28) nil 4) unit nil)
		putConstant(95 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(300002)
lbl(300020)	move(x(3) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 300082)
lbl(300038)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(300082)
		getNumber(95 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(300054)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1710> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(300082)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300095)	testList(y(0) 300198)
lbl(300098)	getVarVar(x(0) x(1))
		testNumber(x(0) 39 300198)
lbl(300105)	definition(x(4) 300123 pid('' 2 pos('./compiler/ParseOz.oz' 88 28) nil 4) unit nil)
		putConstant(39 x(2))
		callBI('\\=' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(300105)
lbl(300123)	move(x(1) x(0))
		move(x(4) x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(3) x(3))
		genFastCall(<P: 57> 8)
		testList(y(3) 300185)
lbl(300141)	getVarVar(x(0) x(1))
		createVariable(y(3))
		shallowGuard(300185)
		getNumber(39 x(0))
		getList(x(1))
		unifyNumber(39)
		unifyVariable(x(0))
lbl(300157)	shallowThen
		getList(y(2))
		unifyNumber(96)
		unifyVariable(y(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1710> 4)
		putList(x(1))
		setConstant(39)
		setValue(y(2))
		moveMoveYXYX(y(1) x(0) y(0) x(2))
		deAllocateL4
		genFastCall(<P: 21> 7)
lbl(300185)	getList(y(2))
		unifyNumber(96)
		unifyVariable(x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300198)	move(g(1) x(0))
		moveMoveYXYX(y(1) x(1) y(2) x(2))
		deAllocateL4
		genFastCall(<Q: 1709> 7)
lbl(300210)	getListValVar(x(1) x(2) x(1))
		move(y(0) x(0))
		deAllocateL4
		genFastCall(<Q: 1710> 5)
lbl(300221)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(98)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(299966)
lbl(300236)	definition(x(9) 300354 pid('Output' 2 pos('./compiler/ParseOz.oz' 101 6) nil 2) <Q: 1711> [g(1)])
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
lbl(300252)	definition(x(1) 300345 pid('' 1 pos('./compiler/ParseOz.oz' 103 3) nil 4) unit [g(0) y(0)])
		allocateL2
		move(x(0) y(0))
		createCond(300336)
lbl(300264)	lastClause
		clause
		thread(300295)
		putConstant(error x(0))
		putConstant(1 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		putConstant('parse error' x(1))
		inlineUparrow(x(2) x(0) x(3))
		unify(x(3) x(1))
		deAllocateL2
		return
lbl(300295)	ask
lbl(300296)	move(y(0) x(0))
		inlineDot(x(0) msg x(1) cache)
		callBI('AtomToString' [x(1)]#[x(2)])
		move(x(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1710> 4)
		move(y(0) x(0))
		putConstant(msg x(1))
		move(y(1) x(2))
		callBI('AdjoinAt' [x(0) x(1) x(2)]#[x(3)])
		move(x(3) x(0))
		deAllocateL2
		tailCall(g(1) 1)
lbl(300336)	move(y(0) x(0))
		deAllocateL2
		tailCall(g(1) 1)
		endDefinition(300252)
lbl(300345)	move(y(1) x(0))
		deAllocateL2
		genFastCall(<P: 34> 5)
		endDefinition(300236)
lbl(300354)	definition(x(0) 300456 pid('ParseOzFile' 5 pos('./compiler/ParseOz.oz' 113 3) nil 5) <Q: 1712> [x(7)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1711> 4)
		testLiteral(y(1) fileNotFound 300449)
lbl(300430)	putRecord('#' 3 x(1))
		setConstant('could not open file "')
		setValue(y(3))
		setConstant('" for reading')
		putConstant('compiler directive error' x(0))
		sendMsg(error y(4) [kind msg] cache)
lbl(300449)	unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(300354)
lbl(300456)	unify(x(0) y(3))
lbl(300459)	definition(x(0) 300538 pid('ParseOzVirtualString' 5 pos('./compiler/ParseOz.oz' 129 3) nil 5) <Q: 1713> [x(8)])
		allocateL10
		putRecord('#' 2 y(0))
		setVariable(y(1))
		setVariable(y(2))
		moveMoveXYXY(x(0) y(3) x(1) y(4))
		moveMoveXYXY(x(2) y(5) x(3) y(6))
		move(x(4) y(7))
		putConstant(gump x(0))
		createVariableMove(y(8) x(1))
		call(y(5) 2)
		putConstant(allowdeprecated x(0))
		createVariableMove(y(9) x(1))
		call(y(5) 2)
		putRecord(options [allowdeprecated defines gump] x(1))
		setValue(y(9))
		setValue(y(6))
		setValue(y(8))
		moveMoveYXYX(y(3) x(0) y(0) x(2))
		genCall(gci(g(0) false '' false 3) 0)
		moveMoveYXYX(y(2) x(0) y(4) x(1))
		genFastCall(<Q: 1711> 4)
		unify(y(1) y(7))
		deAllocateL10
		return
		endDefinition(300459)
lbl(300538)	unify(x(0) y(16))
		putList(x(4))
		setConstant(locking)
		setConstant(nil)
		putRecord('attr' [<M: Compiler> <M: Port> <M: ServerThread>] x(2))
		setConstant(unit)
		setConstant(unit)
		setConstant(unit)
		createVariable(y(0))
lbl(300559)	definition(x(7) 300659 pid('GenericInterface,init/fast' 2 pos('./compiler/GenericInterface.oz' 25 3) nil 5) <Q: 1714> [y(0) g(19)])
		allocateL3
		createVariable(x(2))
		callBI(ooGetLock [x(2)]#nil)
		lockThread(300655 x(2))
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		genCall(gci(g(0) true exit false 0) 0)
		move(y(0) x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		createVariable(x(1))
		callBI('NewPort' [x(1)]#[x(2)])
		inlineAssign(<M: Port> x(2) cache)
		inlineAt(<M: Port> x(2) cache)
		move(x(1) y(2))
		move(x(2) x(0))
		sendMsg(register y(0) 1 cache)
		thread(300654)
		callBI('Thread.this' nil#[x(4)])
		inlineAssign(<M: ServerThread> x(4) cache)
		putList(x(1))
		setValue(y(2))
		setConstant(nil)
		move(y(1) x(0))
		putConstant(1 x(2))
		createVariableMove(y(0) x(3))
		marshalledFastCall(<R: tuple> 8)
		getSelf(x(1))
		move(y(0) x(0))
		deAllocateL3
		tailCall(x(1) 1)
lbl(300654)	return
lbl(300655)	deAllocateL3
		return
		endDefinition(300559)
lbl(300659)	definition(x(8) 300694 pid('GenericInterface,init/slow' 1 pos('./compiler/GenericInterface.oz' 25 3) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1714> 5)
		endDefinition(300659)
lbl(300694)	putRecord('#' [1 2 fast] x(9))
		setConstant(init)
		setValue(x(8))
		setValue(x(7))
lbl(300704)	definition(x(7) 300786 pid('GenericInterface,exit/fast' 0 pos('./compiler/GenericInterface.oz' 37 3) nil 2) <Q: 1715> [g(28)])
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(300783 x(0))
		inlineAt(<M: Compiler> x(0) cache)
		match(x(0) ht(300726 [onScalar(unit 300774)]))
lbl(300726)	inlineAt(<M: ServerThread> x(0) cache)
		genFastCall(<P: 263> 2)
		inlineAt(<M: Compiler> x(1) cache)
		inlineAt(<M: Port> x(0) cache)
		sendMsg(unregister x(1) 1 cache)
		putConstant(unit x(0))
		inlineAssign(<M: Compiler> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: Port> x(0) cache)
		putConstant(unit x(0))
		inlineAssign(<M: ServerThread> x(0) cache)
lbl(300774)	getSelf(x(1))
		sendMsg(reset x(1) 0 cache)
		return
lbl(300783)	return
		endDefinition(300704)
lbl(300786)	definition(x(8) 300800 pid('GenericInterface,exit/slow' 1 pos('./compiler/GenericInterface.oz' 37 3) nil 1) unit nil)
		getLiteral(exit x(0))
		genFastCall(<Q: 1715> 1)
		endDefinition(300786)
lbl(300800)	putRecord('#' [1 2 fast] x(10))
		setConstant(exit)
		setValue(x(8))
		setValue(x(7))
lbl(300810)	definition(x(7) 300819 pid('GenericInterface,reset/fast' 0 pos('./compiler/GenericInterface.oz' 50 3) nil 0) <Q: 1716> nil)
		return
		endDefinition(300810)
lbl(300819)	definition(x(8) 300833 pid('GenericInterface,reset/slow' 1 pos('./compiler/GenericInterface.oz' 50 3) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1716> 1)
		endDefinition(300819)
lbl(300833)	putRecord('#' [1 2 fast] x(11))
		setConstant(reset)
		setValue(x(8))
		setValue(x(7))
lbl(300843)	definition(x(7) 300860 pid('GenericInterface,getCompiler/fast' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 2) <Q: 1717> nil)
		inlineAt(<M: Compiler> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(300843)
lbl(300860)	definition(x(8) 300886 pid('GenericInterface,getCompiler/slow' 1 pos('./compiler/GenericInterface.oz' 53 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1717> 3)
		endDefinition(300860)
lbl(300886)	putRecord('#' [1 2 fast] x(12))
		setConstant(getCompiler)
		setValue(x(8))
		setValue(x(7))
lbl(300896)	definition(x(7) 300913 pid('GenericInterface,getPort/fast' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 2) <Q: 1718> nil)
		inlineAt(<M: Port> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(300896)
lbl(300913)	definition(x(8) 300939 pid('GenericInterface,getPort/slow' 1 pos('./compiler/GenericInterface.oz' 56 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1718> 3)
		endDefinition(300913)
lbl(300939)	putRecord('#' [1 2 fast] x(13))
		setConstant(getPort)
		setValue(x(8))
		setValue(x(7))
lbl(300949)	definition(x(7) 300968 pid('GenericInterface,enqueue/fast' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 2) <Q: 1719> nil)
		inlineAt(<M: Compiler> x(1) cache)
		tailSendMsg(enqueue x(1) 1 cache)
		endDefinition(300949)
lbl(300968)	definition(x(8) 300994 pid('GenericInterface,enqueue/slow' 1 pos('./compiler/GenericInterface.oz' 60 3) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1719> 3)
		endDefinition(300968)
lbl(300994)	putRecord('#' [1 2 fast] x(14))
		setConstant(enqueue)
		setValue(x(8))
		setValue(x(7))
		putRecord('#' 6 x(1))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		move(y(0) x(6))
		putConstant(nil x(0))
		putConstant('feat' x(3))
		putConstant('GenericInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(301035)	definition(x(7) 301163 pid('MessageToVS' 2 pos('./compiler/QuietInterface.oz' 23 3) nil 6) <Q: 1720> [y(6)])
		match(x(0) ht(301148 [onRecord(info 1 301044) onRecord(info 2 301050) onRecord(message 2 301056)]))
lbl(301044)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(301050)	getVariable(x(0))
		unify(x(1) x(0))
		return
lbl(301056)	allocateL2
		getVariable(x(2))
		putConstant(nil x(3))
		callBI('NewCell' [x(3)]#[x(0)])
		move(g(0) x(3))
		inlineDot(x(3) msg x(4) cache)
lbl(301074)	definition(x(5) 301123 pid('' 1 pos('./compiler/QuietInterface.oz' 29 3) nil 5) unit [x(0) g(0)])
		allocateL2
		move(g(0) x(1))
		callBI('Access' [x(1)]#[x(2)])
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		putRecord('#' 2 x(0))
		setValue(y(0))
		setValue(y(1))
		move(g(0) x(1))
		callBI('Assign' [x(1) x(0)]#nil)
		deAllocateL2
		return
		endDefinition(301074)
lbl(301123)	moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(5) x(0))
		move(x(2) x(1))
		call(x(4) 2)
		move(y(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(0))
		deAllocateL2
		return
lbl(301148)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(34)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(301035)
lbl(301163)	definition(x(7) 301208 pid('HistoryToVS' 2 pos('./compiler/QuietInterface.oz' 37 3) nil 5) <Q: 1721> nil)
lbl(301169)	definition(x(4) 301194 pid('' 3 pos('./compiler/QuietInterface.oz' 39 7) nil 3) unit nil)
		getRecord('#' 2 x(2))
		unifyVariable(x(2))
		unifyValue(x(0))
		move(x(1) x(0))
		move(x(2) x(1))
		genFastCall(<Q: 1720> 5)
		endDefinition(301169)
lbl(301194)	move(x(1) x(3))
		move(x(4) x(1))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(301163)
lbl(301208)	putList(x(0))
		setValue(y(0))
		setConstant(nil)
		putList(x(4))
		setConstant(final)
		setConstant(nil)
		putRecord('attr' [<M: HasBeenTopped> <M: HasErrors> <M: History> <M: InsertedFiles> <M: SourceVS> <M: Verbose>] x(2))
		setConstant(false)
		setConstant(false)
		setConstant(nil)
		setConstant(nil)
		setConstant(nil)
		setConstant(false)
		putRecord(messagePattern 2 x(7))
		setConstant(unit)
		setConstant(unit)
		putConstant(<M: Serve> x(8))
lbl(301247)	definition(x(9) 301318 pid('QuietInterface,init' 1 pos('./compiler/QuietInterface.oz' 49 6) nil 4) unit [x(7) y(0) x(8)])
		allocateL3
		move(x(0) y(0))
		move(g(0) x(1))
		marshalledFastCall(<R: aritySublist> 4)
		move(y(0) x(0))
		inlineDot(x(0) 1 x(1) cache)
		move(x(1) y(1))
		createVariable(y(2))
		putConstant(2 x(2))
		testBI('HasFeature' [x(0) x(2)]#[x(3)] 301295)
		inlineDot(x(0) 2 x(2) cache)
		unify(x(2) y(2))
		branch(301298)
lbl(301295)	getLiteral(false y(2))
lbl(301298)	move(y(2) x(0))
		inlineAssign(<M: Verbose> x(0) cache)
		move(y(1) x(0))
		move(g(2) x(1))
		deAllocateL3
		genCall(gci(g(1) true init true 2) 0)
		endDefinition(301247)
lbl(301318)	putList(x(7))
		setConstant(init)
		setValue(x(9))
lbl(301324)	definition(x(8) 301382 pid('QuietInterface,reset/fast' 0 pos('./compiler/QuietInterface.oz' 53 6) nil 1) <Q: 1722> nil)
		createVariable(x(0))
		callBI(ooGetLock [x(0)]#nil)
		lockThread(301379 x(0))
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: InsertedFiles> x(0) cache)
		putConstant(nil x(0))
		inlineAssign(<M: SourceVS> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		putConstant(false x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		return
lbl(301379)	return
		endDefinition(301324)
lbl(301382)	definition(x(9) 301396 pid('QuietInterface,reset/slow' 1 pos('./compiler/QuietInterface.oz' 53 6) nil 1) unit nil)
		getLiteral(reset x(0))
		genFastCall(<Q: 1722> 1)
		endDefinition(301382)
lbl(301396)	putRecord('#' [1 2 fast] x(10))
		setConstant(reset)
		setValue(x(9))
		setValue(x(8))
		createVariable(y(2))
lbl(301408)	definition(x(8) 301699 pid('QuietInterface,Serve/fast' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 4) <Q: 1723> [y(5) y(2)])
		testList(x(0) 301684)
lbl(301417)	allocateL4
		getVarVar(x(0) x(1))
		move(x(1) y(0))
		createVariable(y(1))
		match(x(0) ht(301533 [onScalar(errorFound 301429) onScalar(toTop 301442) onRecord(info 1 301455) onRecord(info 2 301460) onRecord(message 2 301465) onRecord(insert 2 301470) onRecord(displaySource 3 301493)]))
lbl(301429)	putConstant(true x(0))
		inlineAssign(<M: HasErrors> x(0) cache)
		getLiteral(unit y(1))
		branch(301536)
lbl(301442)	putConstant(true x(0))
		inlineAssign(<M: HasBeenTopped> x(0) cache)
		getLiteral(unit y(1))
		branch(301536)
lbl(301455)	unify(y(1) x(0))
		branch(301536)
lbl(301460)	unify(y(1) x(0))
		branch(301536)
lbl(301465)	unify(y(1) x(0))
		branch(301536)
lbl(301470)	getVariable(x(0))
		inlineAt(<M: InsertedFiles> x(2) cache)
		putList(x(3))
		setValue(x(0))
		setValue(x(2))
		inlineAssign(<M: InsertedFiles> x(3) cache)
		getLiteral(unit y(1))
		branch(301536)
lbl(301493)	getVoid(2)
		getVariable(x(0))
		inlineAt(<M: SourceVS> x(2) cache)
		testLiteral(x(2) nil 301513)
lbl(301506)	inlineAssign(<M: SourceVS> x(0) cache)
		branch(301528)
lbl(301513)	putRecord('#' 3 x(3))
		setValue(x(2))
		setConstant('\n\n')
		setValue(x(0))
		inlineAssign(<M: SourceVS> x(3) cache)
lbl(301528)	getLiteral(unit y(1))
		branch(301536)
lbl(301533)	getLiteral(unit y(1))
lbl(301536)	match(y(1) ht(301539 [onScalar(unit 301677)]))
lbl(301539)	inlineAt(<M: Verbose> x(0) cache)
		match(x(0) ht(301661 [onScalar(true 301547) onScalar(auto 301575)]))
lbl(301547)	move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		moveMoveXYYX(x(1) y(2) y(1) x(0))
		createVariableMove(y(3) x(1))
		genFastCall(<Q: 1720> 4)
		move(y(3) x(0))
		call(y(2) 1)
		branch(301677)
lbl(301575)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
		inlineAt(<M: HasBeenTopped> x(0) cache)
		testBool(x(0) 301677 301650)
		move(g(0) x(0))
		inlineDot(x(0) printError x(1) cache)
		inlineAt(<M: History> x(2) cache)
		move(x(1) y(1))
		move(x(2) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1721> 4)
		move(y(2) x(0))
		call(y(1) 1)
		putConstant(nil x(0))
		inlineAssign(<M: History> x(0) cache)
		putConstant(true x(1))
		inlineAssign(<M: Verbose> x(1) cache)
		branch(301677)
lbl(301650)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(94)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(301661)	inlineAt(<M: History> x(0) cache)
		putList(x(1))
		setValue(y(1))
		setValue(x(0))
		inlineAssign(<M: History> x(1) cache)
lbl(301677)	move(y(0) x(0))
		deAllocateL4
		genCall(gci(g(1) true <M: Serve> true 1) 0)
lbl(301684)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(103)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(301408)
lbl(301699)	definition(x(9) 301725 pid('QuietInterface,Serve/slow' 1 pos('./compiler/QuietInterface.oz' 62 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1723> 3)
		endDefinition(301699)
lbl(301725)	putRecord('#' [1 2 fast] x(11))
		setConstant(<M: Serve>)
		setValue(x(9))
		setValue(x(8))
lbl(301735)	definition(x(8) 301749 pid('QuietInterface,setVerbosity/fast' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 1) <Q: 1724> nil)
		inlineAssign(<M: Verbose> x(0) cache)
		return
		endDefinition(301735)
lbl(301749)	definition(x(9) 301775 pid('QuietInterface,setVerbosity/slow' 1 pos('./compiler/QuietInterface.oz' 106 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1724> 3)
		endDefinition(301749)
lbl(301775)	putRecord('#' [1 2 fast] x(12))
		setConstant(setVerbosity)
		setValue(x(9))
		setValue(x(8))
lbl(301785)	definition(x(8) 301802 pid('QuietInterface,hasErrors/fast' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 2) <Q: 1725> nil)
		inlineAt(<M: HasErrors> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(301785)
lbl(301802)	definition(x(9) 301828 pid('QuietInterface,hasErrors/slow' 1 pos('./compiler/QuietInterface.oz' 109 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1725> 3)
		endDefinition(301802)
lbl(301828)	putRecord('#' [1 2 fast] x(13))
		setConstant(hasErrors)
		setValue(x(9))
		setValue(x(8))
lbl(301838)	definition(x(8) 301855 pid('QuietInterface,hasBeenTopped/fast' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 2) <Q: 1726> nil)
		inlineAt(<M: HasBeenTopped> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(301838)
lbl(301855)	definition(x(9) 301881 pid('QuietInterface,hasBeenTopped/slow' 1 pos('./compiler/QuietInterface.oz' 112 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1726> 3)
		endDefinition(301855)
lbl(301881)	putRecord('#' [1 2 fast] x(14))
		setConstant(hasBeenTopped)
		setValue(x(9))
		setValue(x(8))
lbl(301891)	definition(x(8) 301913 pid('QuietInterface,getVS/fast' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) <Q: 1727> nil)
		inlineAt(<M: History> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1721> 5)
		endDefinition(301891)
lbl(301913)	definition(x(9) 301939 pid('QuietInterface,getVS/slow' 1 pos('./compiler/QuietInterface.oz' 115 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1727> 3)
		endDefinition(301913)
lbl(301939)	putRecord('#' [1 2 fast] x(15))
		setConstant(getVS)
		setValue(x(9))
		setValue(x(8))
lbl(301949)	definition(x(8) 302000 pid('QuietInterface,getMessages/fast' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 5) <Q: 1728> nil)
		inlineAt(<M: History> x(4) cache)
lbl(301960)	definition(x(1) 301986 pid('' 3 pos('./compiler/QuietInterface.oz' 120 3) nil 3) unit nil)
		testRecord(x(1) message 2 301980)
lbl(301971)	getVariable(x(1))
		getList(x(2))
		unifyValue(x(1))
		unifyValue(x(0))
		return
lbl(301980)	unify(x(2) x(0))
		return
		endDefinition(301960)
lbl(301986)	move(x(0) x(3))
		move(x(4) x(0))
		putConstant(nil x(2))
		genFastCall(<P: 30> 9)
		endDefinition(301949)
lbl(302000)	definition(x(9) 302026 pid('QuietInterface,getMessages/slow' 1 pos('./compiler/QuietInterface.oz' 118 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1728> 3)
		endDefinition(302000)
lbl(302026)	putRecord('#' [1 2 fast] x(16))
		setConstant(getMessages)
		setValue(x(9))
		setValue(x(8))
lbl(302036)	definition(x(8) 302063 pid('QuietInterface,formatMessages/fast' 2 pos('./compiler/QuietInterface.oz' 126 6) nil 2) <Q: 1729> nil)
		allocateL2
		move(x(1) y(0))
		createVariableMove(y(1) x(1))
		genFastCall(<P: 28> 4)
		moveMoveYXYX(y(1) x(0) y(0) x(1))
		deAllocateL2
		genFastCall(<Q: 1721> 5)
		endDefinition(302036)
lbl(302063)	definition(x(9) 302098 pid('QuietInterface,formatMessages/slow' 1 pos('./compiler/QuietInterface.oz' 126 6) nil 3) unit nil)
		putConstant(2 x(2))
		callBI('Width' [x(0)]#[x(1)])
		unify(x(1) x(2))
		inlineDot(x(0) 1 x(2) cache)
		inlineDot(x(0) 2 x(1) cache)
		move(x(2) x(0))
		genFastCall(<Q: 1729> 5)
		endDefinition(302063)
lbl(302098)	putRecord('#' [1 2 fast] x(17))
		setConstant(formatMessages)
		setValue(x(9))
		setValue(x(8))
lbl(302108)	definition(x(8) 302130 pid('QuietInterface,getInsertedFiles/fast' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) <Q: 1730> nil)
		inlineAt(<M: InsertedFiles> x(2) cache)
		move(x(0) x(1))
		move(x(2) x(0))
		genFastCall(<P: 28> 5)
		endDefinition(302108)
lbl(302130)	definition(x(9) 302156 pid('QuietInterface,getInsertedFiles/slow' 1 pos('./compiler/QuietInterface.oz' 129 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1730> 3)
		endDefinition(302130)
lbl(302156)	putRecord('#' [1 2 fast] x(18))
		setConstant(getInsertedFiles)
		setValue(x(9))
		setValue(x(8))
lbl(302166)	definition(x(8) 302183 pid('QuietInterface,getSource/fast' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 2) <Q: 1731> nil)
		inlineAt(<M: SourceVS> x(1) cache)
		unify(x(1) x(0))
		return
		endDefinition(302166)
lbl(302183)	definition(x(9) 302209 pid('QuietInterface,getSource/slow' 1 pos('./compiler/QuietInterface.oz' 132 6) nil 3) unit nil)
		putConstant(1 x(1))
		callBI('Width' [x(0)]#[x(2)])
		unify(x(2) x(1))
		inlineDot(x(0) 1 x(0) cache)
		genFastCall(<Q: 1731> 3)
		endDefinition(302183)
lbl(302209)	putRecord('#' [1 2 fast] x(19))
		setConstant(getSource)
		setValue(x(9))
		setValue(x(8))
		putRecord('#' 11 x(1))
		setValue(x(7))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		setValue(x(14))
		setValue(x(15))
		setValue(x(16))
		setValue(x(17))
		setValue(x(18))
		setValue(x(19))
		move(y(2) x(6))
		putConstant('feat' x(3))
		putConstant('QuietInterface' x(5))
		marshalledFastCall(<R: 'class'> 14)
lbl(302257)	definition(x(0) 302485 pid('EvalExpression' 4 pos('./compiler/Abstractions.oz' 1 0) nil 6) <Q: 1732> [y(1) y(2) g(19) g(28) g(5)])
		allocateL6
		move(g(0) x(4))
		callBI(newObject [x(4)]#[x(5)])
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(5) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(1) x(0))
		callBI(newObject [x(0)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		sendMsg(init y(5) 1 cache)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(expression)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord('return' [result] x(2))
		setValue(y(3))
		putRecord(feedVirtualString 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue y(4) 1 cache)
		createVariable(y(1))
		thread(302475)
		callBI('Thread.this' nil#[x(1)])
lbl(302373)	definition(x(0) 302403 pid('Kill' 0 pos('./compiler/Abstractions.oz' 10 6) nil 1) unit [y(4) g(3) x(1) y(1)])
		sendMsg(clearQueue g(0) 0 cache)
		sendMsg(interrupt g(0) 0 cache)
		move(g(2) x(0))
		genFastCall(<P: 263> 2)
		getLiteral(unit g(3))
		return
		endDefinition(302373)
lbl(302403)	unify(x(0) y(2))
		putRecord(ping 1 x(0))
		setVariable(y(2))
		sendMsg(enqueue y(4) 1 cache)
		move(y(2) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(2) x(0))
		sendMsg(hasErrors y(5) 1 cache)
		testBool(y(2) 302470 302459)
		createVariableMove(y(2) x(0))
		sendMsg(getMessages y(5) 1 cache)
		putRecord(compiler 3 x(0))
		setConstant(evalExpression)
		setValue(y(0))
		setValue(y(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(302459)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(17)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(302470)	getLiteral(unit y(1))
		deAllocateL6
		return
lbl(302475)	move(y(1) x(0))
		callBI('Wait' [x(0)]#nil)
		deAllocateL6
		return
		endDefinition(302257)
lbl(302485)	definition(x(1) 302504 pid('VirtualStringToValue' 2 pos('./compiler/Abstractions.oz' 26 0) nil 4) <Q: 1733> nil)
		move(x(1) x(3))
		putConstant(env x(1))
		createVariable(x(2))
		genFastCall(<Q: 1732> 9)
		endDefinition(302485)
lbl(302504)	move(y(7) x(2))
		inlineDot(x(2) put x(2) cache)
lbl(302513)	definition(x(3) 303136 pid('' 2 pos('./compiler/Errors.oz' 26 1) nil 12) <Q: 1734> [y(6)])
		allocateL5
		move(g(0) x(2))
		inlineDot(x(2) dispatch x(3) cache)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createVariableMove(y(2) x(1))
		call(x(3) 2)
		putConstant('compiler engine error' y(3))
		testRecord(y(2) compiler 2 302611)
lbl(302548)	getVarVar(x(0) x(1))
		testLiteral(x(0) internal 302611)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Additional information')
		setValue(x(4))
		putRecord(line 1 x(7))
		setConstant('please send a bug report to oz-bugs@ps.uni-sb.de')
		putList(x(6))
		setValue(x(7))
		setConstant(nil)
		putList(x(2))
		setValue(x(3))
		setValue(x(6))
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Internal compiler error' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302611)	testRecord(y(2) compiler 2 302667)
lbl(302616)	getVarVar(x(0) x(1))
		testLiteral(x(0) invalidQuery 302667)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Query')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Invalid query' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302667)	testRecord(y(2) compiler 4 302757)
lbl(302672)	getVarVar(x(0) x(1))
		getVarVar(x(2) x(3))
		testLiteral(x(0) invalidQuery 302757)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(7))
		setValue(x(1))
		putRecord(hint [l m] x(4))
		setConstant('Query')
		setValue(x(7))
		putRecord(hint [l m] x(9))
		setConstant('At argument')
		setValue(x(2))
		putRecord(hint [l m] x(11))
		setConstant('Expected type')
		setValue(x(3))
		putList(x(10))
		setValue(x(11))
		setConstant(nil)
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(4))
		setValue(x(8))
		move(y(3) x(0))
		move(x(6) x(2))
		moveMoveYXYX(y(0) x(3) y(1) x(4))
		putConstant('Ill-typed query argument' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302757)	testRecord(y(2) compiler 2 302813)
lbl(302762)	getVarVar(x(0) x(1))
		testLiteral(x(0) register 302813)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Argument')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Trying to register a non-port' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(302813)	testRecord(y(2) compiler 3 303017)
lbl(302818)	getVariable(x(0))
		getVoid(1)
		getVariable(x(1))
		testLiteral(x(0) evalExpression 303017)
		move(g(0) x(0))
		inlineDot(x(0) format x(2) cache)
lbl(302837)	definition(x(3) 302982 pid('' 2 pos('./compiler/Errors.oz' 57 2) nil 3) unit nil)
		allocateL4
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		createCond(302912)
lbl(302851)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(302893)
		putConstant(error x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(302893)	ask
lbl(302894)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(302912)	createCond(302975)
lbl(302914)	lastClause
		clause
		createVariable(y(2))
		createVariable(y(3))
		thread(302956)
		putConstant(warn x(0))
		putConstant(2 x(1))
		move(y(0) x(2))
		callBI(tellRecordSize [x(0) x(1) x(2)]#nil)
		putConstant(kind x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(2))
		putConstant(msg x(0))
		inlineUparrow(x(2) x(0) x(1))
		unify(x(1) y(3))
		deAllocateL4
		return
lbl(302956)	ask
lbl(302957)	getRecord(line 1 y(1))
		unifyVariable(x(0))
		getRecord('#' 3 x(0))
		unifyValue(y(2))
		unifyLiteral(': ')
		unifyValue(y(3))
		deAllocateL4
		return
lbl(302975)	getLiteral(unit y(1))
		deAllocateL4
		return
		endDefinition(302837)
lbl(302982)	move(x(2) y(2))
		move(x(1) x(0))
		move(x(3) x(1))
		createVariableMove(y(4) x(2))
		genFastCall(<P: 29> 6)
		moveMoveYXYX(y(2) x(5) y(3) x(0))
		moveMoveYXYX(y(4) x(2) y(0) x(3))
		move(y(1) x(4))
		putConstant('Compiler.evalExpression applied to an erroneous query' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303017)	testRecord(y(2) compiler 1 303055)
lbl(303022)	getVariable(x(0))
		testLiteral(x(0) malformedSyntaxTree 303055)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Malformed syntax tree' x(1))
		putConstant(nil x(2))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303055)	testRecord(y(2) compiler 2 303113)
lbl(303060)	getVarVar(x(0) x(1))
		createVariable(y(2))
		testLiteral(x(0) malformedSyntaxTree 303113)
		move(g(0) x(0))
		inlineDot(x(0) format x(5) cache)
		putRecord(oz 1 x(4))
		setValue(x(1))
		putRecord(hint [l m] x(3))
		setConstant('Matching')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		moveMoveYXYX(y(3) x(0) y(0) x(3))
		move(y(1) x(4))
		putConstant('Malformed syntax tree' x(1))
		deAllocateL5
		tailCall(x(5) 5)
lbl(303113)	move(g(0) x(0))
		inlineDot(x(0) formatGeneric x(3) cache)
		moveMoveYXYX(y(3) x(0) y(0) x(1))
		move(y(1) x(2))
		deAllocateL5
		tailCall(x(3) 3)
		endDefinition(302513)
lbl(303136)	moveMoveXYXY(x(0) y(4) x(1) y(5))
		move(x(3) x(1))
		putConstant(compiler x(0))
		call(x(2) 2)
		move(y(13) x(0))
		inlineDot(x(0) assemble x(0) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(29))
		unifyValue(x(0))
		unifyValue(y(1))
		unifyValue(y(4))
		unifyValue(y(0))
		unifyValue(y(3))
		unifyValue(y(16))
		unifyValue(y(2))
		unifyValue(y(5))
		deAllocateL
		return
		endDefinition(277384)
lbl(303183)	tailCall(x(3) 0)
		endDefinition(276130)
lbl(303188)	putRecord(info [type] x(1))
		setConstant(nil)
		putRecord(info [type] x(3))
		setConstant(nil)
		putList(x(5))
		setConstant(nameVariable)
		setConstant(nil)
		putRecord(info ['from' type] x(4))
		setConstant('x-oz://boot/CompilerSupport')
		setValue(x(5))
		putList(x(7))
		setConstant(variable)
		setConstant(nil)
		putRecord(info [type] x(6))
		setValue(x(7))
		putRecord(info ['from' type] x(8))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(9))
		setConstant(nil)
		putList(x(11))
		setConstant(put)
		setConstant(nil)
		putRecord(info [type] x(10))
		setValue(x(11))
		putRecord(info ['from' type] x(12))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putList(x(14))
		setConstant(is)
		setConstant(nil)
		putRecord(info [type] x(13))
		setValue(x(14))
		putList(x(17))
		setConstant(condGet)
		setConstant(nil)
		putList(x(16))
		setConstant(get)
		setValue(x(17))
		putRecord(info [type] x(15))
		setValue(x(16))
		putRecord(info [type] x(18))
		setConstant(nil)
		putList(x(22))
		setConstant(valueToVirtualString)
		setConstant(nil)
		putList(x(21))
		setConstant(printError)
		setValue(x(22))
		putList(x(20))
		setConstant(gcDo)
		setValue(x(21))
		putRecord(info [type] x(19))
		setValue(x(20))
		putRecord(info [type] x(23))
		setConstant(nil)
		putRecord(info [type] x(24))
		setConstant(nil)
		putRecord('import' ['Assembler' 'Builtins' 'CompilerSupport' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Parser' 'PrintName' 'Property' 'RunTime' 'System' 'Type' 'Unnester'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(6))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(12))
		setValue(x(13))
		setValue(x(15))
		setValue(x(18))
		setValue(x(19))
		setValue(x(23))
		setValue(x(24))
		putConstant(value x(4))
		putConstant('class' x(5))
		putConstant('procedure/4' x(6))
		putConstant('class' x(7))
		putConstant('procedure/5' x(8))
		putConstant('procedure/5' x(9))
		putConstant('class' x(10))
		putConstant('procedure/2' x(11))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
lbl(303414)	definition(x(2) 303890 pid('' 2 pos('./compiler/FunMain.oz' 1 0) nil 3) <P: 1735> [y(54) y(185) y(100) y(95) y(96) y(97) y(2) y(98) y(1)])
		putConstant(nil x(2))
lbl(303423)	definitionCopy(x(2) 303885 pid('/body' 0 pos('./compiler/FunMain.oz' 1 0) [once] 15) unit [x(0) g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) x(1)])
		allocateL(17)
		move(g(0) x(0))
		inlineDot(x(0) 'Debug' x(1) cache)
		inlineDot(x(0) 'Parser' x(2) cache)
		inlineDot(x(0) 'CompilerSupport' x(3) cache)
		inlineDot(x(0) 'Property' x(4) cache)
		inlineDot(x(0) 'System' x(5) cache)
		inlineDot(x(0) 'Error' x(6) cache)
		inlineDot(x(0) 'ErrorRegistry' x(7) cache)
		inlineDot(x(0) 'FS' x(8) cache)
		inlineDot(x(0) 'FD' x(9) cache)
		inlineDot(x(0) 'Module' x(10) cache)
		inlineDot(x(0) 'Type' x(11) cache)
		inlineDot(x(0) 'RunTimeLibrary' x(12) cache)
		move(g(1) x(13))
		inlineDot(x(13) apply x(14) cache)
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		moveMoveXYXY(x(5) y(4) x(6) y(5))
		moveMoveXYXY(x(7) y(6) x(8) y(7))
		moveMoveXYXY(x(9) y(8) x(10) y(9))
		moveMoveXYXY(x(11) y(10) x(12) y(11))
		putConstant(c x(0))
		createVariableMove(y(12) x(1))
		call(x(14) 2)
		move(g(2) x(0))
		inlineDot(x(0) apply x(2) cache)
		putConstant(c x(0))
		createVariableMove(y(13) x(1))
		call(x(2) 2)
		move(g(3) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'FD' 'FS' 'RunTime' 'System' 'Type'] x(3))
		setValue(y(13))
		setValue(y(2))
		setVariable(y(14))
		setValue(y(8))
		setValue(y(7))
		setVariable(y(15))
		setValue(y(4))
		setValue(y(10))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(4) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'Core' 'RunTime' 'System'] x(3))
		setValue(y(13))
		setValue(y(2))
		setValue(y(14))
		setValue(y(15))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(16) x(1))
		call(x(2) 2)
		move(g(5) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CodeGen' 'StaticAnalysis' 'System'] x(3))
		setValue(y(16))
		setValue(y(7))
		setValue(y(4))
		move(x(3) x(0))
		move(y(14) x(1))
		call(x(2) 2)
		move(g(6) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Core' 'Module' 'RunTimeLibrary'] x(3))
		setValue(y(14))
		setValue(y(9))
		setValue(y(11))
		move(x(3) x(0))
		move(y(15) x(1))
		call(x(2) 2)
		move(g(7) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['CompilerSupport' 'Core' 'FD' 'PrintName' 'RunTime'] x(3))
		setValue(y(2))
		setValue(y(14))
		setValue(y(8))
		setValue(y(12))
		setValue(y(15))
		move(x(3) x(0))
		createVariableMove(y(7) x(1))
		call(x(2) 2)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Builtins' 'CompilerSupport' 'RunTimeLibrary' 'System'] x(3))
		setValue(y(13))
		setValue(y(2))
		setValue(y(11))
		setValue(y(4))
		move(x(3) x(0))
		createVariableMove(y(8) x(1))
		call(x(2) 2)
		move(g(9) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(c ['Assembler' 'Builtins' 'CompilerSupport' 'Core' 'Debug' 'Error' 'ErrorRegistry' 'Parser' 'PrintName' 'Property' 'RunTime' 'System' 'Type' 'Unnester'] x(3))
		setValue(y(8))
		setValue(y(13))
		setValue(y(2))
		setValue(y(14))
		setValue(y(0))
		setValue(y(5))
		setValue(y(6))
		setValue(y(1))
		setValue(y(12))
		setValue(y(3))
		setValue(y(15))
		setValue(y(4))
		setValue(y(10))
		setValue(y(7))
		move(x(3) x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(y(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		inlineDot(x(0) parseOzFile x(2) cache)
		inlineDot(x(0) parseOzVirtualString x(3) cache)
		inlineDot(x(0) genericInterface x(4) cache)
		inlineDot(x(0) quietInterface x(5) cache)
		inlineDot(x(0) evalExpression x(6) cache)
		inlineDot(x(0) virtualStringToValue x(7) cache)
		inlineDot(x(0) assemble x(0) cache)
		getRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] g(10))
		unifyValue(x(0))
		unifyValue(x(1))
		unifyValue(x(6))
		unifyValue(x(4))
		unifyValue(x(2))
		unifyValue(x(3))
		unifyValue(x(5))
		unifyValue(x(7))
		deAllocateL
		return
		endDefinition(303423)
lbl(303885)	tailCall(x(2) 0)
		endDefinition(303414)
lbl(303890)	putRecord(info ['from' type] x(1))
		setConstant('x-oz://boot/CompilerSupport')
		setConstant(nil)
		putRecord(info ['from' type] x(3))
		setConstant('x-oz://boot/Debug')
		setConstant(nil)
		putRecord(info [type] x(4))
		setConstant(nil)
		putRecord(info [type] x(5))
		setConstant(nil)
		putRecord(info [type] x(6))
		setConstant(nil)
		putRecord(info [type] x(7))
		setConstant(nil)
		putRecord(info [type] x(8))
		setConstant(nil)
		putRecord(info ['from' type] x(9))
		setConstant('x-oz://boot/Parser')
		setConstant(nil)
		putRecord(info [type] x(10))
		setConstant(nil)
		putRecord(info [type] x(11))
		setConstant(nil)
		putRecord(info [type] x(12))
		setConstant(nil)
		putRecord(info [type] x(13))
		setConstant(nil)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FS' 'Module' 'Parser' 'Property' 'RunTimeLibrary' 'System' 'Type'] x(0))
		setValue(x(1))
		setValue(x(3))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		setValue(x(12))
		setValue(x(13))
		putConstant(value x(4))
		putConstant(value x(5))
		putConstant(value x(6))
		putConstant(value x(7))
		putConstant(value x(8))
		putConstant(value x(9))
		putConstant(value x(10))
		putConstant(value x(11))
		putRecord('export' [assemble engine evalExpression genericInterface parseOzFile parseOzVirtualString quietInterface virtualStringToValue] x(1))
		setValue(x(4))
		setValue(x(5))
		setValue(x(6))
		setValue(x(7))
		setValue(x(8))
		setValue(x(9))
		setValue(x(10))
		setValue(x(11))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord(url ['functor' home pickle] y(2))
		setConstant('.ozf')
		setConstant('http://www.ps.uni-sb.de/ozhome/share/')
		setConstant('.ozp')
		putConstant('BootManager' x(4))
		putConstant(2 x(5))
		callBI(builtin [x(4) x(5)]#[x(6)])
		putConstant('Pickle' x(4))
		callBI('BootManager' [x(4)]#[x(5)])
		inlineDot(x(5) save x(0) cache)
lbl(304077)	definition(x(2) 312585 pid('' 2 pos('./MakeAssembly.oz' 92 1) nil 3) <P: 1736> [y(230) y(191) y(224) y(91) y(92) y(159) y(184) y(1) y(146) y(47) y(24) y(48) y(23) y(49) y(53) y(39) y(52) y(55) y(158) y(0)])
		putList(x(0))
		setPredicateRef(<Q: 1737>)
		setConstant(nil)
		putList(x(2))
		setPredicateRef(<Q: 1738>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1739>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1740>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1741>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1742>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1743>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1744>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1745>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1746>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1747>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1748>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1749>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1750>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1751>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1752>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1753>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1754>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1755>)
		setValue(x(2))
		putList(x(2))
		setPredicateRef(<Q: 1756>)
		setValue(x(0))
		putList(x(0))
		setPredicateRef(<Q: 1757>)
		setValue(x(2))
lbl(304209)	definitionCopy(x(0) 312580 pid('/body' 0 pos('./MakeAssembly.oz' 92 1) [once] 511) unit [g(0) g(1) g(2) g(3) g(4) g(5) g(6) g(7) g(8) g(9) g(10) g(11) g(12) g(13) g(14) g(15) g(16) g(17) g(18) g(19) x(1)])
		allocateL(20)
		putRecord('export' [open] x(0))
		setConstant(unit)
		putRecord('import' ['CompilerSupport' 'Debug' 'Error' 'ErrorRegistry' 'FD' 'FDB' 'FDP' 'FS' 'FSB' 'FSP' 'Module' 'OS' 'Open' 'Parser' 'Pickle' 'Property' 'Resolve' 'RunTimeLibrary' 'System' 'Type'] y(0))
		setVariable(y(1))
		setVariable(y(2))
		setVariable(y(3))
		setVariable(y(4))
		setVariable(y(5))
		setVariable(y(6))
		setVariable(y(7))
		setVariable(y(8))
		setVariable(y(9))
		setVariable(y(10))
		setVariable(y(11))
		setVariable(y(12))
		setVariable(y(13))
		setVariable(y(14))
		setVariable(y(15))
		setVariable(y(16))
		setValue(x(0))
		setValue(g(0))
		setVariable(y(17))
		setVariable(y(18))
		putConstant('BootManager' x(2))
		putConstant(2 x(3))
		callBI(builtin [x(2) x(3)]#[x(0)])
lbl(304276)	definition(x(1) 304313 pid('' 1 pos('./MakeAssembly.oz' 139 5) nil 3) <Q: 1737> nil)
		shallowGuard(304300)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304292)	shallowThen
		callBI('BootManager' [x(1)]#[x(0)])
		unify(x(0) x(2))
		return
lbl(304300)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(139)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304276)
lbl(304313)	putRecord('#' 2 x(3))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(5))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(7))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(9))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(11))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(13))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(15))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(17))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(19))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(21))
		setConstant('CompilerSupport')
		setValue(y(1))
		putRecord('#' 2 x(23))
		setConstant('Property')
		setValue(y(16))
		putList(x(22))
		setValue(x(23))
		setConstant(nil)
		putList(x(20))
		setValue(x(21))
		setValue(x(22))
		putList(x(18))
		setValue(x(19))
		setValue(x(20))
		putList(x(16))
		setValue(x(17))
		setValue(x(18))
		putList(x(14))
		setValue(x(15))
		setValue(x(16))
		putList(x(12))
		setValue(x(13))
		setValue(x(14))
		putList(x(10))
		setValue(x(11))
		setValue(x(12))
		putList(x(8))
		setValue(x(9))
		setValue(x(10))
		putList(x(6))
		setValue(x(7))
		setValue(x(8))
		putList(x(4))
		setValue(x(5))
		setValue(x(6))
		putList(x(2))
		setValue(x(3))
		setValue(x(4))
		move(x(0) y(19))
		move(x(2) x(0))
		genFastCall(<P: 34> 4)
lbl(304476)	definition(x(1) 304535 pid('' 1 pos('./MakeAssembly.oz' 152 5) nil 3) <Q: 1738> [y(0)])
		shallowGuard(304522)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304492)	shallowThen
		allocateL2
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		thread(304520)
		move(y(1) x(0))
		inlineDot(x(0) apply x(2) cache)
		move(g(0) x(0))
		move(y(0) x(1))
		deAllocateL2
		tailCall(x(2) 2)
lbl(304520)	deAllocateL2
		return
lbl(304522)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(152)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304476)
lbl(304535)	putRecord('#' 2 x(2))
		setValue(y(4))
		setValue(g(1))
		putRecord('#' 2 x(4))
		setValue(y(3))
		setValue(g(2))
		putRecord('#' 2 x(6))
		setValue(y(5))
		setValue(g(3))
		putRecord('#' 2 x(8))
		setValue(y(8))
		setValue(g(4))
		putRecord('#' 2 x(10))
		setValue(y(13))
		setValue(g(5))
		putRecord('#' 2 x(12))
		setValue(y(18))
		setValue(g(6))
		putRecord('#' 2 x(14))
		setVariable(y(0))
		setValue(g(7))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
		move(g(8) x(0))
		inlineDot(x(0) apply x(2) cache)
		putRecord(b [manager] x(1))
		setValue(y(19))
		putRecord('import' ['Boot' 'OS' 'Pickle' 'System'] x(3))
		setValue(x(1))
		setValue(y(12))
		setValue(y(15))
		setValue(y(17))
		move(x(3) x(0))
		move(y(11) x(1))
		call(x(2) 2)
lbl(304672)	definition(x(1) 304731 pid('' 1 pos('./MakeAssembly.oz' 168 5) nil 5) <Q: 1739> [y(11)])
		shallowGuard(304718)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304688)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		putRecord('#' 2 x(4))
		setConstant('x-oz://boot/')
		setValue(x(1))
		move(x(2) x(0))
		move(x(4) x(1))
		tailSendMsg(enter x(3) [1 url] cache)
lbl(304718)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(168)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304672)
lbl(304731)	putRecord('#' 2 x(2))
		setConstant('Parser')
		setValue(y(14))
		putRecord('#' 2 x(4))
		setConstant('FDB')
		setValue(y(6))
		putRecord('#' 2 x(6))
		setConstant('FSB')
		setValue(y(9))
		putRecord('#' 2 x(8))
		setConstant('FDP')
		setValue(y(7))
		putRecord('#' 2 x(10))
		setConstant('Debug')
		setValue(y(2))
		putRecord('#' 2 x(12))
		setConstant('FSP')
		setValue(y(10))
		putRecord('#' 2 x(14))
		setConstant('CompilerSupport')
		setValue(y(1))
		putList(x(13))
		setValue(x(14))
		setConstant(nil)
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(304832)	definition(x(1) 304880 pid('' 1 pos('./MakeAssembly.oz' 183 5) nil 4) <Q: 1740> [y(11)])
		shallowGuard(304867)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(304848)	shallowThen
		move(g(0) x(0))
		inlineDot(x(0) root x(3) cache)
		move(x(2) x(0))
		tailSendMsg(enter x(3) [1 name] cache)
lbl(304867)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(183)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(304832)
lbl(304880)	putRecord('#' 2 x(2))
		setConstant('System')
		setValue(y(17))
		putRecord('#' 2 x(4))
		setConstant('Property')
		setValue(y(16))
		putRecord('#' 2 x(6))
		setConstant('ErrorRegistry')
		setValue(y(4))
		putRecord('#' 2 x(8))
		setConstant('Error')
		setValue(y(3))
		putRecord('#' 2 x(10))
		setConstant('FD')
		setValue(y(5))
		putRecord('#' 2 x(12))
		setConstant('FS')
		setValue(y(8))
		putRecord('#' 2 x(14))
		setConstant('OS')
		setValue(y(12))
		putRecord('#' 2 x(16))
		setConstant('Open')
		setValue(y(13))
		putRecord('#' 2 x(18))
		setConstant('Pickle')
		setValue(y(15))
		putRecord('#' 2 x(20))
		setConstant('Compiler')
		setValue(y(0))
		putRecord('#' 2 x(22))
		setConstant('Module')
		setValue(y(11))
		putList(x(21))
		setValue(x(22))
		setConstant(nil)
		putList(x(19))
		setValue(x(20))
		setValue(x(21))
		putList(x(17))
		setValue(x(18))
		setValue(x(19))
		putList(x(15))
		setValue(x(16))
		setValue(x(17))
		putList(x(13))
		setValue(x(14))
		setValue(x(15))
		putList(x(11))
		setValue(x(12))
		setValue(x(13))
		putList(x(9))
		setValue(x(10))
		setValue(x(11))
		putList(x(7))
		setValue(x(8))
		setValue(x(9))
		putList(x(5))
		setValue(x(6))
		setValue(x(7))
		putList(x(3))
		setValue(x(4))
		setValue(x(5))
		putList(x(0))
		setValue(x(2))
		setValue(x(3))
		genFastCall(<P: 34> 4)
lbl(305037)	definition(x(2) 305177 pid('ConvertBooleanOpts' 2 pos('./BatchCompile.oz' 29 6) nil 12) <Q: 1741> nil)
		match(x(0) ht(305162 [onScalar(nil 305046) onRecord('|' 2 305050)]))
lbl(305046)	getLiteral(nil x(1))
		return
lbl(305050)	getVarVar(x(0) x(2))
		getRecord('#' 3 x(0))
		unifyVariable(x(3))
		unifyVariable(x(4))
		unifyVariable(x(5))
		putConstant(type x(6))
		putConstant(unit x(7))
		callBI('CondSelect' [x(5) x(6) x(7)]#[x(8)])
		testLiteral(x(8) bool 305152)
lbl(305076)	getList(x(1))
		unifyVariable(x(0))
		unifyVariable(x(1))
		getRecord('#' 3 x(0))
		unifyValue(x(3))
		unifyValVar(x(4) x(6))
		getList(x(1))
		unifyVariable(x(7))
		unifyVariable(x(8))
		getRecord('#' 3 x(7))
		unifyLiteral(unit)
		unifyVariable(x(9))
		unifyVariable(x(10))
		getList(x(9))
		unifyNumber(110)
		unifyVariable(x(11))
		getList(x(11))
		unifyNumber(111)
		unifyValue(x(4))
		putConstant(value x(3))
		putConstant(true x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(6))
		putConstant(value x(3))
		putConstant(false x(4))
		callBI('AdjoinAt' [x(5) x(3) x(4)]#[x(0)])
		unify(x(0) x(10))
		move(x(2) x(0))
		move(x(8) x(1))
		genFastCall(<Q: 1741> 5)
lbl(305152)	getListValVar(x(1) x(0) x(1))
		move(x(2) x(0))
		genFastCall(<Q: 1741> 5)
lbl(305162)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(40)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(305037)
lbl(305177)	putList(x(5))
		setConstant(101)
		setConstant(nil)
		putList(x(4))
		setConstant(114)
		setValue(x(5))
		putList(x(3))
		setConstant(111)
		setValue(x(4))
		putList(x(2))
		setConstant(99)
		setValue(x(3))
		putRecord(mode [value] x(6))
		setConstant(core)
		putRecord('#' 3 x(1))
		setConstant(69)
		setValue(x(2))
		setValue(x(6))
		putList(x(18))
		setConstant(101)
		setConstant(nil)
		putList(x(17))
		setConstant(100)
		setValue(x(18))
		putList(x(16))
		setConstant(111)
		setValue(x(17))
		putList(x(15))
		setConstant(99)
		setValue(x(16))
		putList(x(14))
		setConstant(116)
		setValue(x(15))
		putList(x(13))
		setConstant(117)
		setValue(x(14))
		putList(x(12))
		setConstant(112)
		setValue(x(13))
		putList(x(11))
		setConstant(116)
		setValue(x(12))
		putList(x(10))
		setConstant(117)
		setValue(x(11))
		putList(x(9))
		setConstant(111)
		setValue(x(10))
		putRecord(mode [value] x(19))
		setConstant(outputcode)
		putRecord('#' 3 x(8))
		setConstant(83)
		setValue(x(9))
		setValue(x(19))
		putList(x(25))
		setConstant(97)
		setConstant(nil)
		putList(x(24))
		setConstant(109)
		setValue(x(25))
		putList(x(23))
		setConstant(122)
		setValue(x(24))
		putList(x(22))
		setConstant(111)
		setValue(x(23))
		putRecord(mode [value] x(26))
		setConstant(ozma)
		putRecord('#' 3 x(21))
		setConstant(115)
		setValue(x(22))
		setValue(x(26))
		putList(x(42))
		setConstant(114)
		setConstant(nil)
		putList(x(41))
		setConstant(111)
		setValue(x(42))
		putList(x(40))
		setConstant(116)
		setValue(x(41))
		putList(x(39))
		setConstant(97)
		setValue(x(40))
		putList(x(38))
		setConstant(108)
		setValue(x(39))
		putList(x(37))
		setConstant(117)
		setValue(x(38))
		putList(x(36))
		setConstant(109)
		setValue(x(37))
		putList(x(35))
		setConstant(101)
		setValue(x(36))
		putList(x(34))
		setConstant(111)
		setValue(x(35))
		putList(x(33))
		setConstant(116)
		setValue(x(34))
		putList(x(32))
		setConstant(100)
		setValue(x(33))
		putList(x(31))
		setConstant(101)
		setValue(x(32))
		putList(x(30))
		setConstant(101)
		setValue(x(31))
		putList(x(29))
		setConstant(102)
		setValue(x(30))
		putRecord(mode [value] x(43))
		setConstant(feedtoemulator)
		putRecord('#' 3 x(28))
		setConstant(101)
		setValue(x(29))
		setValue(x(43))
		putList(x(49))
		setConstant(112)
		setConstant(nil)
		putList(x(48))
		setConstant(109)
		setValue(x(49))
		putList(x(47))
		setConstant(117)
		setValue(x(48))
		putList(x(46))
		setConstant(100)
		setValue(x(47))
		putRecord(mode [value] x(50))
		setConstant(dump)
		putRecord('#' 3 x(45))
		setConstant(99)
		setValue(x(46))
		setValue(x(50))
		putList(x(58))
		setConstant(116)
		setConstant(nil)
		putList(x(57))
		setConstant(101)
		setValue(x(58))
		putList(x(56))
		setConstant(108)
		setValue(x(57))
		putList(x(55))
		setConstant(115)
		setValue(x(56))
		putList(x(54))
		setConstant(121)
		setValue(x(55))
		putList(x(53))
		setConstant(115)
		setValue(x(54))
		putRecord(mode [value] x(59))
		setConstant(syslet)
		putRecord('#' 3 x(52))
		setConstant(120)
		setValue(x(53))
		setValue(x(59))
		putList(x(71))
		setConstant(100)
		setConstant(nil)
		putList(x(70))
		setConstant(110)
		setValue(x(71))
		putList(x(69))
		setConstant(101)
		setValue(x(70))
		putList(x(68))
		setConstant(112)
		setValue(x(69))
		putList(x(67))
		setConstant(101)
		setValue(x(68))
		putList(x(66))
		setConstant(100)
		setValue(x(67))
		putList(x(65))
		setConstant(101)
		setValue(x(66))
		putList(x(64))
		setConstant(107)
		setValue(x(65))
		putList(x(63))
		setConstant(97)
		setValue(x(64))
		putList(x(62))
		setConstant(109)
		setValue(x(63))
		putRecord(makedepend [type] x(72))
		setConstant(bool)
		putRecord('#' 3 x(61))
		setConstant(77)
		setValue(x(62))
		setValue(x(72))
		putList(x(78))
		setConstant(112)
		setConstant(nil)
		putList(x(77))
		setConstant(108)
		setValue(x(78))
		putList(x(76))
		setConstant(101)
		setValue(x(77))
		putList(x(75))
		setConstant(104)
		setValue(x(76))
		putRecord(help [value] x(79))
		setConstant(unit)
		putRecord('#' 3 x(74))
		setConstant(104)
		setValue(x(75))
		setValue(x(79))
		putRecord(help [value] x(82))
		setConstant(unit)
		putRecord('#' 3 x(81))
		setConstant(63)
		setConstant(unit)
		setValue(x(82))
		putList(x(90))
		setConstant(101)
		setConstant(nil)
		putList(x(89))
		setConstant(110)
		setValue(x(90))
		putList(x(88))
		setConstant(105)
		setValue(x(89))
		putList(x(87))
		setConstant(102)
		setValue(x(88))
		putList(x(86))
		setConstant(101)
		setValue(x(87))
		putList(x(85))
		setConstant(100)
		setValue(x(86))
		putRecord('define' [type] x(91))
		setConstant(atom)
		putRecord('#' 3 x(84))
		setConstant(68)
		setValue(x(85))
		setValue(x(91))
		putList(x(101))
		setConstant(101)
		setConstant(nil)
		putList(x(100))
		setConstant(110)
		setValue(x(101))
		putList(x(99))
		setConstant(105)
		setValue(x(100))
		putList(x(98))
		setConstant(102)
		setValue(x(99))
		putList(x(97))
		setConstant(101)
		setValue(x(98))
		putList(x(96))
		setConstant(100)
		setValue(x(97))
		putList(x(95))
		setConstant(110)
		setValue(x(96))
		putList(x(94))
		setConstant(117)
		setValue(x(95))
		putRecord(undef [type] x(102))
		setConstant(atom)
		putRecord('#' 3 x(93))
		setConstant(85)
		setValue(x(94))
		setValue(x(102))
		putList(x(111))
		setConstant(101)
		setConstant(nil)
		putList(x(110))
		setConstant(115)
		setValue(x(111))
		putList(x(109))
		setConstant(111)
		setValue(x(110))
		putList(x(108))
		setConstant(98)
		setValue(x(109))
		putList(x(107))
		setConstant(114)
		setValue(x(108))
		putList(x(106))
		setConstant(101)
		setValue(x(107))
		putList(x(105))
		setConstant(118)
		setValue(x(106))
		putRecord(verbose [value] x(112))
		setConstant(true)
		putRecord('#' 3 x(104))
		setConstant(118)
		setValue(x(105))
		setValue(x(112))
		putList(x(119))
		setConstant(116)
		setConstant(nil)
		putList(x(118))
		setConstant(101)
		setValue(x(119))
		putList(x(117))
		setConstant(105)
		setValue(x(118))
		putList(x(116))
		setConstant(117)
		setValue(x(117))
		putList(x(115))
		setConstant(113)
		setValue(x(116))
		putRecord(verbose [value] x(120))
		setConstant(false)
		putRecord('#' 3 x(114))
		setConstant(113)
		setValue(x(115))
		setValue(x(120))
		putList(x(132))
		setConstant(101)
		setConstant(nil)
		putList(x(131))
		setConstant(108)
		setValue(x(132))
		putList(x(130))
		setConstant(105)
		setValue(x(131))
		putList(x(129))
		setConstant(102)
		setValue(x(130))
		putList(x(128))
		setConstant(116)
		setValue(x(129))
		putList(x(127))
		setConstant(117)
		setValue(x(128))
		putList(x(126))
		setConstant(112)
		setValue(x(127))
		putList(x(125))
		setConstant(116)
		setValue(x(126))
		putList(x(124))
		setConstant(117)
		setValue(x(125))
		putList(x(123))
		setConstant(111)
		setValue(x(124))
		putRecord(outputfile [type] x(133))
		setConstant(string)
		putRecord('#' 3 x(122))
		setConstant(111)
		setValue(x(123))
		setValue(x(133))
		putList(x(146))
		setConstant(116)
		setConstant(nil)
		putList(x(145))
		setConstant(110)
		setValue(x(146))
		putList(x(144))
		setConstant(101)
		setValue(x(145))
		putList(x(143))
		setConstant(109)
		setValue(x(144))
		putList(x(142))
		setConstant(110)
		setValue(x(143))
		putList(x(141))
		setConstant(111)
		setValue(x(142))
		putList(x(140))
		setConstant(114)
		setValue(x(141))
		putList(x(139))
		setConstant(105)
		setValue(x(140))
		putList(x(138))
		setConstant(118)
		setValue(x(139))
		putList(x(137))
		setConstant(110)
		setValue(x(138))
		putList(x(136))
		setConstant(101)
		setValue(x(137))
		putRecord(environment [type] x(147))
		setConstant(string)
		putRecord('#' 3 x(135))
		setConstant(108)
		setValue(x(136))
		setValue(x(147))
		putList(x(155))
		setConstant(114)
		setConstant(nil)
		putList(x(154))
		setConstant(105)
		setValue(x(155))
		putList(x(153))
		setConstant(100)
		setValue(x(154))
		putList(x(152))
		setConstant(99)
		setValue(x(153))
		putList(x(151))
		setConstant(110)
		setValue(x(152))
		putList(x(150))
		setConstant(105)
		setValue(x(151))
		putRecord(incdir [type] x(156))
		setConstant(string)
		putRecord('#' 3 x(149))
		setConstant(73)
		setValue(x(150))
		setValue(x(156))
		putList(x(165))
		setConstant(101)
		setConstant(nil)
		putList(x(164))
		setConstant(100)
		setValue(x(165))
		putList(x(163))
		setConstant(117)
		setValue(x(164))
		putList(x(162))
		setConstant(108)
		setValue(x(163))
		putList(x(161))
		setConstant(99)
		setValue(x(162))
		putList(x(160))
		setConstant(110)
		setValue(x(161))
		putList(x(159))
		setConstant(105)
		setValue(x(160))
		putRecord(include [type] x(166))
		setConstant(string)
		putRecord('#' 3 x(158))
		setConstant(unit)
		setValue(x(159))
		setValue(x(166))
		putList(x(180))
		setConstant(120)
		setConstant(nil)
		putList(x(179))
		setConstant(105)
		setValue(x(180))
		putList(x(178))
		setConstant(102)
		setValue(x(179))
		putList(x(177))
		setConstant(101)
		setValue(x(178))
		putList(x(176))
		setConstant(114)
		setValue(x(177))
		putList(x(175))
		setConstant(112)
		setValue(x(176))
		putList(x(174))
		setConstant(116)
		setValue(x(175))
		putList(x(173))
		setConstant(101)
		setValue(x(174))
		putList(x(172))
		setConstant(108)
		setValue(x(173))
		putList(x(171))
		setConstant(115)
		setValue(x(172))
		putList(x(170))
		setConstant(121)
		setValue(x(171))
		putList(x(169))
		setConstant(115)
		setValue(x(170))
		putRecord(sysletprefix [type] x(181))
		setConstant(string)
		putRecord('#' 3 x(168))
		setConstant(unit)
		setValue(x(169))
		setValue(x(181))
		putList(x(192))
		setConstant(115)
		setConstant(nil)
		putList(x(191))
		setConstant(114)
		setValue(x(192))
		putList(x(190))
		setConstant(111)
		setValue(x(191))
		putList(x(189))
		setConstant(114)
		setValue(x(190))
		putList(x(188))
		setConstant(114)
		setValue(x(189))
		putList(x(187))
		setConstant(101)
		setValue(x(188))
		putList(x(186))
		setConstant(120)
		setValue(x(187))
		putList(x(185))
		setConstant(97)
		setValue(x(186))
		putList(x(184))
		setConstant(109)
		setValue(x(185))
		putRecord(maxerrors [type] x(193))
		setConstant(int)
		putRecord('#' 3 x(183))
		setConstant(unit)
		setValue(x(184))
		setValue(x(193))
		putList(x(209))
		setConstant(115)
		setConstant(nil)
		putList(x(208))
		setConstant(101)
		setValue(x(209))
		putList(x(207))
		setConstant(115)
		setValue(x(208))
		putList(x(206))
		setConstant(115)
		setValue(x(207))
		putList(x(205))
		setConstant(97)
		setValue(x(206))
		putList(x(204))
		setConstant(112)
		setValue(x(205))
		putList(x(203))
		setConstant(114)
		setValue(x(204))
		putList(x(202))
		setConstant(101)
		setValue(x(203))
		putList(x(201))
		setConstant(108)
		setValue(x(202))
		putList(x(200))
		setConstant(105)
		setValue(x(201))
		putList(x(199))
		setConstant(112)
		setValue(x(200))
		putList(x(198))
		setConstant(109)
		setValue(x(199))
		putList(x(197))
		setConstant(111)
		setValue(x(198))
		putList(x(196))
		setConstant(99)
		setValue(x(197))
		putRecord(compilerpasses [type] x(210))
		setConstant(bool)
		putRecord('#' 3 x(195))
		setConstant(unit)
		setValue(x(196))
		setValue(x(210))
		putList(x(222))
		setConstant(116)
		setConstant(nil)
		putList(x(221))
		setConstant(114)
		setValue(x(222))
		putList(x(220))
		setConstant(101)
		setValue(x(221))
		putList(x(219))
		setConstant(115)
		setValue(x(220))
		putList(x(218))
		setConstant(110)
		setValue(x(219))
		putList(x(217))
		setConstant(105)
		setValue(x(218))
		putList(x(216))
		setConstant(119)
		setValue(x(217))
		putList(x(215))
		setConstant(111)
		setValue(x(216))
		putList(x(214))
		setConstant(104)
		setValue(x(215))
		putList(x(213))
		setConstant(115)
		setValue(x(214))
		putRecord(showinsert [type] x(223))
		setConstant(bool)
		putRecord('#' 3 x(212))
		setConstant(unit)
		setValue(x(213))
		setValue(x(223))
		putList(x(236))
		setConstant(115)
		setConstant(nil)
		putList(x(235))
		setConstant(101)
		setValue(x(236))
		putList(x(234))
		setConstant(105)
		setValue(x(235))
		putList(x(233))
		setConstant(114)
		setValue(x(234))
		putList(x(232))
		setConstant(101)
		setValue(x(233))
		putList(x(231))
		setConstant(117)
		setValue(x(232))
		putList(x(230))
		setConstant(113)
		setValue(x(231))
		putList(x(229))
		setConstant(111)
		setValue(x(230))
		putList(x(228))
		setConstant(104)
		setValue(x(229))
		putList(x(227))
		setConstant(99)
		setValue(x(228))
		putList(x(226))
		setConstant(101)
		setValue(x(227))
		putRecord(echoqueries [type] x(237))
		setConstant(bool)
		putRecord('#' 3 x(225))
		setConstant(unit)
		setValue(x(226))
		setValue(x(237))
		putList(x(251))
		setConstant(115)
		setConstant(nil)
		putList(x(250))
		setConstant(101)
		setValue(x(251))
		putList(x(249))
		setConstant(114)
		setValue(x(250))
		putList(x(248))
		setConstant(97)
		setValue(x(249))
		putList(x(247))
		setConstant(108)
		setValue(x(248))
		putList(x(246))
		setConstant(99)
		setValue(x(247))
		putList(x(245))
		setConstant(101)
		setValue(x(246))
		putList(x(244))
		setConstant(100)
		setValue(x(245))
		putList(x(243))
		setConstant(119)
		setValue(x(244))
		putList(x(242))
		setConstant(111)
		setValue(x(243))
		putList(x(241))
		setConstant(104)
		setValue(x(242))
		putList(x(240))
		setConstant(115)
		setValue(x(241))
		putRecord(showdeclares [type] x(252))
		setConstant(bool)
		putRecord('#' 3 x(239))
		setConstant(unit)
		setValue(x(240))
		setValue(x(252))
		putList(x(269))
		setConstant(101)
		setConstant(nil)
		putList(x(268))
		setConstant(109)
		setValue(x(269))
		putList(x(267))
		setConstant(105)
		setValue(x(268))
		putList(x(266))
		setConstant(116)
		setValue(x(267))
		putList(x(265))
		setConstant(101)
		setValue(x(266))
		putList(x(264))
		setConstant(108)
		setValue(x(265))
		putList(x(263))
		setConstant(105)
		setValue(x(264))
		putList(x(262))
		setConstant(112)
		setValue(x(263))
		putList(x(261))
		setConstant(109)
		setValue(x(262))
		putList(x(260))
		setConstant(111)
		setValue(x(261))
		putList(x(259))
		setConstant(99)
		setValue(x(260))
		putList(x(258))
		setConstant(119)
		setValue(x(259))
		putList(x(257))
		setConstant(111)
		setValue(x(258))
		putList(x(256))
		setConstant(104)
		setValue(x(257))
		putList(x(255))
		setConstant(115)
		setValue(x(256))
		putRecord(showcompiletime [type] x(270))
		setConstant(bool)
		putRecord('#' 3 x(254))
		setConstant(unit)
		setValue(x(255))
		setValue(x(270))
		putList(x(289))
		setConstant(121)
		setConstant(nil)
		putList(x(288))
		setConstant(114)
		setValue(x(289))
		putList(x(287))
		setConstant(111)
		setValue(x(288))
		putList(x(286))
		setConstant(109)
		setValue(x(287))
		putList(x(285))
		setConstant(101)
		setValue(x(286))
		putList(x(284))
		setConstant(109)
		setValue(x(285))
		putList(x(283))
		setConstant(101)
		setValue(x(284))
		putList(x(282))
		setConstant(108)
		setValue(x(283))
		putList(x(281))
		setConstant(105)
		setValue(x(282))
		putList(x(280))
		setConstant(112)
		setValue(x(281))
		putList(x(279))
		setConstant(109)
		setValue(x(280))
		putList(x(278))
		setConstant(111)
		setValue(x(279))
		putList(x(277))
		setConstant(99)
		setValue(x(278))
		putList(x(276))
		setConstant(119)
		setValue(x(277))
		putList(x(275))
		setConstant(111)
		setValue(x(276))
		putList(x(274))
		setConstant(104)
		setValue(x(275))
		putList(x(273))
		setConstant(115)
		setValue(x(274))
		putRecord(showcompilememory [type] x(290))
		setConstant(bool)
		putRecord('#' 3 x(272))
		setConstant(unit)
		setValue(x(273))
		setValue(x(290))
		putList(x(300))
		setConstant(103)
		setConstant(nil)
		putList(x(299))
		setConstant(111)
		setValue(x(300))
		putList(x(298))
		setConstant(100)
		setValue(x(299))
		putList(x(297))
		setConstant(104)
		setValue(x(298))
		putList(x(296))
		setConstant(99)
		setValue(x(297))
		putList(x(295))
		setConstant(116)
		setValue(x(296))
		putList(x(294))
		setConstant(97)
		setValue(x(295))
		putList(x(293))
		setConstant(119)
		setValue(x(294))
		putRecord(watchdog [type] x(301))
		setConstant(bool)
		putRecord('#' 3 x(292))
		setConstant(unit)
		setValue(x(293))
		setValue(x(301))
		putList(x(313))
		setConstant(108)
		setConstant(nil)
		putList(x(312))
		setConstant(99)
		setValue(x(313))
		putList(x(311))
		setConstant(101)
		setValue(x(312))
		putList(x(310))
		setConstant(100)
		setValue(x(311))
		putList(x(309))
		setConstant(101)
		setValue(x(310))
		putList(x(308))
		setConstant(114)
		setValue(x(309))
		putList(x(307))
		setConstant(110)
		setValue(x(308))
		putList(x(306))
		setConstant(114)
		setValue(x(307))
		putList(x(305))
		setConstant(97)
		setValue(x(306))
		putList(x(304))
		setConstant(119)
		setValue(x(305))
		putRecord(warnredecl [type] x(314))
		setConstant(bool)
		putRecord('#' 3 x(303))
		setConstant(unit)
		setValue(x(304))
		setValue(x(314))
		putList(x(326))
		setConstant(100)
		setConstant(nil)
		putList(x(325))
		setConstant(101)
		setValue(x(326))
		putList(x(324))
		setConstant(115)
		setValue(x(325))
		putList(x(323))
		setConstant(117)
		setValue(x(324))
		putList(x(322))
		setConstant(110)
		setValue(x(323))
		putList(x(321))
		setConstant(117)
		setValue(x(322))
		putList(x(320))
		setConstant(110)
		setValue(x(321))
		putList(x(319))
		setConstant(114)
		setValue(x(320))
		putList(x(318))
		setConstant(97)
		setValue(x(319))
		putList(x(317))
		setConstant(119)
		setValue(x(318))
		putRecord(warnunused [type] x(327))
		setConstant(bool)
		putRecord('#' 3 x(316))
		setConstant(unit)
		setValue(x(317))
		setValue(x(327))
		putList(x(346))
		setConstant(115)
		setConstant(nil)
		putList(x(345))
		setConstant(108)
		setValue(x(346))
		putList(x(344))
		setConstant(97)
		setValue(x(345))
		putList(x(343))
		setConstant(109)
		setValue(x(344))
		putList(x(342))
		setConstant(114)
		setValue(x(343))
		putList(x(341))
		setConstant(111)
		setValue(x(342))
		putList(x(340))
		setConstant(102)
		setValue(x(341))
		putList(x(339))
		setConstant(100)
		setValue(x(340))
		putList(x(338))
		setConstant(101)
		setValue(x(339))
		putList(x(337))
		setConstant(115)
		setValue(x(338))
		putList(x(336))
		setConstant(117)
		setValue(x(337))
		putList(x(335))
		setConstant(110)
		setValue(x(336))
		putList(x(334))
		setConstant(117)
		setValue(x(335))
		putList(x(333))
		setConstant(110)
		setValue(x(334))
		putList(x(332))
		setConstant(114)
		setValue(x(333))
		putList(x(331))
		setConstant(97)
		setValue(x(332))
		putList(x(330))
		setConstant(119)
		setValue(x(331))
		putRecord(warnunused [type] x(347))
		setConstant(bool)
		putRecord('#' 3 x(329))
		setConstant(unit)
		setValue(x(330))
		setValue(x(347))
		putList(x(360))
		setConstant(100)
		setConstant(nil)
		putList(x(359))
		setConstant(114)
		setValue(x(360))
		putList(x(358))
		setConstant(97)
		setValue(x(359))
		putList(x(357))
		setConstant(119)
		setValue(x(358))
		putList(x(356))
		setConstant(114)
		setValue(x(357))
		putList(x(355))
		setConstant(111)
		setValue(x(356))
		putList(x(354))
		setConstant(102)
		setValue(x(355))
		putList(x(353))
		setConstant(110)
		setValue(x(354))
		putList(x(352))
		setConstant(114)
		setValue(x(353))
		putList(x(351))
		setConstant(97)
		setValue(x(352))
		putList(x(350))
		setConstant(119)
		setValue(x(351))
		putRecord(warnforward [type] x(361))
		setConstant(bool)
		putRecord('#' 3 x(349))
		setConstant(unit)
		setValue(x(350))
		setValue(x(361))
		putList(x(370))
		setConstant(116)
		setConstant(nil)
		putList(x(369))
		setConstant(112)
		setValue(x(370))
		putList(x(368))
		setConstant(111)
		setValue(x(369))
		putList(x(367))
		setConstant(110)
		setValue(x(368))
		putList(x(366))
		setConstant(114)
		setValue(x(367))
		putList(x(365))
		setConstant(97)
		setValue(x(366))
		putList(x(364))
		setConstant(119)
		setValue(x(365))
		putRecord(warnopt [type] x(371))
		setConstant(bool)
		putRecord('#' 3 x(363))
		setConstant(unit)
		setValue(x(364))
		setValue(x(371))
		putList(x(388))
		setConstant(100)
		setConstant(nil)
		putList(x(387))
		setConstant(101)
		setValue(x(388))
		putList(x(386))
		setConstant(116)
		setValue(x(387))
		putList(x(385))
		setConstant(97)
		setValue(x(386))
		putList(x(384))
		setConstant(99)
		setValue(x(385))
		putList(x(383))
		setConstant(101)
		setValue(x(384))
		putList(x(382))
		setConstant(114)
		setValue(x(383))
		putList(x(381))
		setConstant(112)
		setValue(x(382))
		putList(x(380))
		setConstant(101)
		setValue(x(381))
		putList(x(379))
		setConstant(100)
		setValue(x(380))
		putList(x(378))
		setConstant(119)
		setValue(x(379))
		putList(x(377))
		setConstant(111)
		setValue(x(378))
		putList(x(376))
		setConstant(108)
		setValue(x(377))
		putList(x(375))
		setConstant(108)
		setValue(x(376))
		putList(x(374))
		setConstant(97)
		setValue(x(375))
		putRecord(allowdeprecated [type] x(389))
		setConstant(bool)
		putRecord('#' 3 x(373))
		setConstant(unit)
		setValue(x(374))
		setValue(x(389))
		putList(x(395))
		setConstant(112)
		setConstant(nil)
		putList(x(394))
		setConstant(109)
		setValue(x(395))
		putList(x(393))
		setConstant(117)
		setValue(x(394))
		putList(x(392))
		setConstant(103)
		setValue(x(393))
		putRecord(gump [type] x(396))
		setConstant(bool)
		putRecord('#' 3 x(391))
		setConstant(unit)
		setValue(x(392))
		setValue(x(396))
		putList(x(412))
		setConstant(115)
		setConstant(nil)
		putList(x(411))
		setConstant(105)
		setValue(x(412))
		putList(x(410))
		setConstant(115)
		setValue(x(411))
		putList(x(409))
		setConstant(121)
		setValue(x(410))
		putList(x(408))
		setConstant(108)
		setValue(x(409))
		putList(x(407))
		setConstant(97)
		setValue(x(408))
		putList(x(406))
		setConstant(110)
		setValue(x(407))
		putList(x(405))
		setConstant(97)
		setValue(x(406))
		putList(x(404))
		setConstant(99)
		setValue(x(405))
		putList(x(403))
		setConstant(105)
		setValue(x(404))
		putList(x(402))
		setConstant(116)
		setValue(x(403))
		putList(x(401))
		setConstant(97)
		setValue(x(402))
		putList(x(400))
		setConstant(116)
		setValue(x(401))
		putList(x(399))
		setConstant(115)
		setValue(x(400))
		putRecord(staticanalysis [type] x(413))
		setConstant(bool)
		putRecord('#' 3 x(398))
		setConstant(unit)
		setValue(x(399))
		setValue(x(413))
		putList(x(423))
		setConstant(101)
		setConstant(nil)
		putList(x(422))
		setConstant(114)
		setValue(x(423))
		putList(x(421))
		setConstant(111)
		setValue(x(422))
		putList(x(420))
		setConstant(99)
		setValue(x(421))
		putList(x(419))
		setConstant(108)
		setValue(x(420))
		putList(x(418))
		setConstant(97)
		setValue(x(419))
		putList(x(417))
		setConstant(101)
		setValue(x(418))
		putList(x(416))
		setConstant(114)
		setValue(x(417))
		putRecord(realcore [type] x(424))
		setConstant(bool)
		putRecord('#' 3 x(415))
		setConstant(unit)
		setValue(x(416))
		setValue(x(424))
		putList(x(436))
		setConstant(101)
		setConstant(nil)
		putList(x(435))
		setConstant(117)
		setValue(x(436))
		putList(x(434))
		setConstant(108)
		setValue(x(435))
		putList(x(433))
		setConstant(97)
		setValue(x(434))
		putList(x(432))
		setConstant(118)
		setValue(x(433))
		putList(x(431))
		setConstant(103)
		setValue(x(432))
		putList(x(430))
		setConstant(117)
		setValue(x(431))
		putList(x(429))
		setConstant(98)
		setValue(x(430))
		putList(x(428))
		setConstant(101)
		setValue(x(429))
		putList(x(427))
		setConstant(100)
		setValue(x(428))
		putRecord(debugvalue [type] x(437))
		setConstant(bool)
		putRecord('#' 3 x(426))
		setConstant(unit)
		setValue(x(427))
		setValue(x(437))
		putList(x(448))
		setConstant(101)
		setConstant(nil)
		putList(x(447))
		setConstant(112)
		setValue(x(448))
		putList(x(446))
		setConstant(121)
		setValue(x(447))
		putList(x(445))
		setConstant(116)
		setValue(x(446))
		putList(x(444))
		setConstant(103)
		setValue(x(445))
		putList(x(443))
		setConstant(117)
		setValue(x(444))
		putList(x(442))
		setConstant(98)
		setValue(x(443))
		putList(x(441))
		setConstant(101)
		setValue(x(442))
		putList(x(440))
		setConstant(100)
		setValue(x(441))
		putRecord(debugtype [type] x(449))
		setConstant(bool)
		putRecord('#' 3 x(439))
		setConstant(unit)
		setValue(x(440))
		setValue(x(449))
		putList(x(458))
		setConstant(101)
		setConstant(nil)
		putList(x(457))
		setConstant(108)
		setValue(x(458))
		putList(x(456))
		setConstant(105)
		setValue(x(457))
		putList(x(455))
		setConstant(102)
		setValue(x(456))
		putList(x(454))
		setConstant(111)
		setValue(x(455))
		putList(x(453))
		setConstant(114)
		setValue(x(454))
		putList(x(452))
		setConstant(112)
		setValue(x(453))
		putRecord(profile [type] x(459))
		setConstant(bool)
		putRecord('#' 3 x(451))
		setConstant(112)
		setValue(x(452))
		setValue(x(459))
		putList(x(477))
		setConstant(108)
		setConstant(nil)
		putList(x(476))
		setConstant(111)
		setValue(x(477))
		putList(x(475))
		setConstant(114)
		setValue(x(476))
		putList(x(474))
		setConstant(116)
		setValue(x(475))
		putList(x(473))
		setConstant(110)
		setValue(x(474))
		putList(x(472))
		setConstant(111)
		setValue(x(473))
		putList(x(471))
		setConstant(99)
		setValue(x(472))
		putList(x(470))
		setConstant(111)
		setValue(x(471))
		putList(x(469))
		setConstant(102)
		setValue(x(470))
		putList(x(468))
		setConstant(110)
		setValue(x(469))
		putList(x(467))
		setConstant(105)
		setValue(x(468))
		putList(x(466))
		setConstant(103)
		setValue(x(467))
		putList(x(465))
		setConstant(117)
		setValue(x(466))
		putList(x(464))
		setConstant(98)
		setValue(x(465))
		putList(x(463))
		setConstant(101)
		setValue(x(464))
		putList(x(462))
		setConstant(100)
		setValue(x(463))
		putRecord(debuginfocontrol [type] x(478))
		setConstant(bool)
		putRecord('#' 3 x(461))
		setConstant(unit)
		setValue(x(462))
		setValue(x(478))
		putList(x(497))
		setConstant(115)
		setConstant(nil)
		putList(x(496))
		setConstant(101)
		setValue(x(497))
		putList(x(495))
		setConstant(109)
		setValue(x(496))
		putList(x(494))
		setConstant(97)
		setValue(x(495))
		putList(x(493))
		setConstant(110)
		setValue(x(494))
		putList(x(492))
		setConstant(114)
		setValue(x(493))
		putList(x(491))
		setConstant(97)
		setValue(x(492))
		putList(x(490))
		setConstant(118)
		setValue(x(491))
		putList(x(489))
		setConstant(111)
		setValue(x(490))
		putList(x(488))
		setConstant(102)
		setValue(x(489))
		putList(x(487))
		setConstant(110)
		setValue(x(488))
		putList(x(486))
		setConstant(105)
		setValue(x(487))
		putList(x(485))
		setConstant(103)
		setValue(x(486))
		putList(x(484))
		setConstant(117)
		setValue(x(485))
		putList(x(483))
		setConstant(98)
		setValue(x(484))
		putList(x(482))
		setConstant(101)
		setValue(x(483))
		putList(x(481))
		setConstant(100)
		setValue(x(482))
		putRecord(debuginfovarnames [type] x(498))
		setConstant(bool)
		putRecord('#' 3 x(480))
		setConstant(unit)
		setValue(x(481))
		setValue(x(498))
		putList(x(509))
		setConstant(111)
		setConstant(nil)
		putList(x(508))
		setConstant(102)
		setValue(x(509))
		putList(x(507))
		setConstant(110)
		setValue(x(508))
		putList(x(506))
		setConstant(105)
		setValue(x(507))
		putList(x(505))
		setConstant(103)
		setValue(x(506))
		putList(x(504))
		setConstant(117)
		setValue(x(505))
		putList(x(503))
		setConstant(98)
		setValue(x(504))
		putList(x(502))
		setConstant(101)
		setValue(x(503))
		putList(x(501))
		setConstant(100)
		setValue(x(502))
		putRecord(debuginfo [type] x(510))
		setConstant(bool)
		putRecord('#' 3 x(500))
		setConstant(103)
		setValue(x(501))
		setValue(x(510))
		putList(x(499))
		setValue(x(500))
		setConstant(nil)
		putList(x(479))
		setValue(x(480))
		setValue(x(499))
		putList(x(460))
		setValue(x(461))
		setValue(x(479))
		putList(x(450))
		setValue(x(451))
		setValue(x(460))
		putList(x(438))
		setValue(x(439))
		setValue(x(450))
		putList(x(425))
		setValue(x(426))
		setValue(x(438))
		putList(x(414))
		setValue(x(415))
		setValue(x(425))
		putList(x(397))
		setValue(x(398))
		setValue(x(414))
		putList(x(390))
		setValue(x(391))
		setValue(x(397))
		putList(x(372))
		setValue(x(373))
		setValue(x(390))
		putList(x(362))
		setValue(x(363))
		setValue(x(372))
		putList(x(348))
		setValue(x(349))
		setValue(x(362))
		putList(x(328))
		setValue(x(329))
		setValue(x(348))
		putList(x(315))
		setValue(x(316))
		setValue(x(328))
		putList(x(302))
		setValue(x(303))
		setValue(x(315))
		putList(x(291))
		setValue(x(292))
		setValue(x(302))
		putList(x(271))
		setValue(x(272))
		setValue(x(291))
		putList(x(253))
		setValue(x(254))
		setValue(x(271))
		putList(x(238))
		setValue(x(239))
		setValue(x(253))
		putList(x(224))
		setValue(x(225))
		setValue(x(238))
		putList(x(211))
		setValue(x(212))
		setValue(x(224))
		putList(x(194))
		setValue(x(195))
		setValue(x(211))
		putList(x(182))
		setValue(x(183))
		setValue(x(194))
		putList(x(167))
		setValue(x(168))
		setValue(x(182))
		putList(x(157))
		setValue(x(158))
		setValue(x(167))
		putList(x(148))
		setValue(x(149))
		setValue(x(157))
		putList(x(134))
		setValue(x(135))
		setValue(x(148))
		putList(x(121))
		setValue(x(122))
		setValue(x(134))
		putList(x(113))
		setValue(x(114))
		setValue(x(121))
		putList(x(103))
		setValue(x(104))
		setValue(x(113))
		putList(x(92))
		setValue(x(93))
		setValue(x(103))
		putList(x(83))
		setValue(x(84))
		setValue(x(92))
		putList(x(80))
		setValue(x(81))
		setValue(x(83))
		putList(x(73))
		setValue(x(74))
		setValue(x(80))
		putList(x(60))
		setValue(x(61))
		setValue(x(73))
		putList(x(51))
		setValue(x(52))
		setValue(x(60))
		putList(x(44))
		setValue(x(45))
		setValue(x(51))
		putList(x(27))
		setValue(x(28))
		setValue(x(44))
		putList(x(20))
		setValue(x(21))
		setValue(x(27))
		putList(x(7))
		setValue(x(8))
		setValue(x(20))
		putList(x(0))
		setValue(x(1))
		setValue(x(7))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1741> 4)
		putRecord('#' 53 y(2))
		setConstant('You have to choose one of the following modes of operation:\n')
		setConstant('-h, -?, --help                Output usage information and exit.\n')
		setConstant('-E, --core                    Transform a statement into core language\n')
		setConstant('                              (file extension: .ozi).\n')
		setConstant('-S, --outputcode              Compile a statement to assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-s, --ozma                    Compile a statement to Ozma assembly code\n')
		setConstant('                              (file extension: .ozm).\n')
		setConstant('-e, --feedtoemulator          Compile and execute a statement.\n')
		setConstant('                              This is the default mode.\n')
		setConstant('-c, --dump                    Compile and evaluate an expression,\n')
		setConstant('                              pickling the result\n')
		setConstant('                              (file extension: .ozf).\n')
		setConstant('-x, --syslet                  Compile and evaluate an expression,\n')
		setConstant('                              making a syslet of the result\n')
		setConstant('                              (file extension: none).\n')
		setConstant('\n')
		setConstant('Additionally, you may specify the following options:\n')
		setConstant('-M, --makedepend              Instead of executing, write a list\n')
		setConstant('                              of dependencies to stdout.\n')
		setConstant('-D NAME, --define=NAME        Define macro name NAME.\n')
		setConstant('-U NAME, --undefine=NAME      Undefine macro name NAME.\n')
		setConstant('-v, --verbose                 Display all compiler messages.\n')
		setConstant('-q, --quiet                   Inhibit compiler messages\n')
		setConstant('                              unless an error is encountered.\n')
		setConstant('-o FILE, --outputfile=FILE    Write output to FILE (`-\' for stdout).\n')
		setConstant('-l FNCS, --environment=FNCS   Make functors FNCS (a comma-separated\n')
		setConstant('                              pair list VAR=URL) available in the\n')
		setConstant('                              environment.\n')
		setConstant('-I DIR, --incdir=DIR          Add DIR to the head of OZPATH.\n')
		setConstant('--include=FILE                Compile and execute the statement in FILE\n')
		setConstant('                              before processing the remaining options.\n')
		setConstant('--sysletprefix=STRING         Use STRING as prefix to syslets (default:\n')
		setConstant('                              "#!/bin/sh\\nexec ozengine $0 "$@"\\n").')
		setConstant('\n')
		setConstant('The following compiler switches have the described effects when set:\n')
		setConstant('--maxerrors=N                 Limit the number of errors reported to N.\n')
		setConstant('--(no)compilerpasses          Show compiler passes.\n')
		setConstant('--(no)warnredecl              Warn about top-level redeclarations.\n')
		setConstant('--(no)warnunused              Warn about unused variables.\n')
		setConstant('--(no)warnunusedformals       Warn about unused variables and formals.\n')
		setConstant('--(no)warnforward             Warn about oo forward declarations.\n')
		setConstant('--(no)warnopt                 Warn about missed optimizations.\n')
		setConstant('--(no)allowdeprecated         Allow use of deprecated syntax.\n')
		setConstant('--(no)gump                    Allow Gump definitions.\n')
		setConstant('--(no)staticanalysis          Run static analysis.\n')
		setConstant('--(no)realcore                Output the real non-fancy core syntax.\n')
		setConstant('--(no)debugvalue              Annotate variable values in core output.\n')
		setConstant('--(no)debugtype               Annotate variable types in core output.\n')
		setConstant('-p, --(no)profile             Include profiling information.\n')
		setConstant('--(no)debuginfocontrol        Include control flow information.\n')
		setConstant('--(no)debuginfovarnames       Include variable information.\n')
		setConstant('-g, --(no)debuginfo           Both of the above.\n')
lbl(308523)	definition(x(0) 308560 pid('SignConvert' 2 pos('./BatchCompile.oz' 143 6) nil 4) <Q: 1742> nil)
lbl(308529)	definition(x(3) 308549 pid('' 2 pos('./BatchCompile.oz' 144 9) nil 2) unit nil)
		testNumber(x(0) 45 308543)
		getNumber(126 x(1))
		return
lbl(308543)	unify(x(1) x(0))
		return
		endDefinition(308529)
lbl(308549)	move(x(1) x(2))
		move(x(3) x(1))
		genFastCall(<P: 29> 7)
		endDefinition(308523)
lbl(308560)	definition(x(0) 308795 pid('ParseOptArg' 4 pos('./BatchCompile.oz' 147 6) nil 6) <Q: 1743> [g(9) g(10) g(11) g(12) g(13)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(2) y(1))
		createVariable(y(2))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(5)] 308595)
		inlineDot(x(0) value x(4) cache)
		unify(x(4) y(2))
		unify(x(3) x(1))
		branch(308774)
lbl(308595)	match(x(1) ht(308761 [onScalar(nil 308598) onRecord('|' 2 308607)]))
lbl(308598)	putRecord(usage 1 x(1))
		setConstant('missing argument')
		callBI('Exception.raise' [x(1)]#nil)
lbl(308607)	getVarVar(x(1) x(4))
		inlineDot(x(0) type x(5) cache)
		moveMoveXYXY(x(3) y(3) x(4) y(4))
		match(x(5) ht(308743 [onScalar(string 308624) onScalar(atom 308629) onScalar(int 308637) onScalar(float 308690)]))
lbl(308624)	unify(y(2) x(1))
		branch(308756)
lbl(308629)	callBI('StringToAtom' [x(1)]#[x(5)])
		unify(x(5) y(2))
		branch(308756)
lbl(308637)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1742> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 5> 4)
		testBool(y(6) 308670 308679)
		move(y(5) x(0))
		callBI('StringToInt' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(308756)
lbl(308670)	putRecord(usage 1 x(0))
		setConstant('integer argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(308679)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(158)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(308690)	move(x(1) x(0))
		createVariableMove(y(5) x(1))
		genFastCall(<Q: 1742> 4)
		move(y(5) x(0))
		createVariableMove(y(6) x(1))
		genFastCall(<P: 6> 4)
		testBool(y(6) 308723 308732)
		move(y(5) x(0))
		callBI('StringToFloat' [x(0)]#[x(1)])
		unify(x(1) y(2))
		branch(308756)
lbl(308723)	putRecord(usage 1 x(0))
		setConstant('float argument expected')
		callBI('Exception.raise' [x(0)]#nil)
lbl(308732)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(164)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(308743)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(169)
		setValue(x(5))
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(308756)	unify(y(3) y(4))
		branch(308774)
lbl(308761)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(173)
		setValue(x(1))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(308774)	getRecord('#' 2 y(1))
		unifyVariable(x(0))
		unifyValue(y(2))
		move(y(0) x(1))
		callBI('Label' [x(1)]#[x(2)])
		unify(x(2) x(0))
		deAllocateL7
		return
		endDefinition(308560)
lbl(308795)	definition(x(0) 308850 pid('GetOptSpec' 3 pos('./BatchCompile.oz' 178 6) nil 6) <Q: 1744> nil)
		match(x(0) ht(308835 [onScalar(nil 308804) onRecord('|' 2 308808)]))
lbl(308804)	getLiteral(unit x(2))
		return
lbl(308808)	getVarVar(x(0) x(3))
		getRecord('#' 3 x(0))
		unifyVariable(x(0))
		unifyVoid(1)
		unifyVariable(x(4))
		testBI('==' [x(0) x(1)]#[x(5)] 308829)
		unify(x(2) x(4))
		return
lbl(308829)	move(x(3) x(0))
		genFastCall(<Q: 1744> 7)
lbl(308835)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(184)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(308795)
lbl(308850)	definition(x(0) 308993 pid('ParseOpt' 5 pos('./BatchCompile.oz' 187 6) nil 5) <Q: 1745> [y(1)])
		allocateL6
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(x(4) y(4))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariableMove(y(5) x(2))
		genFastCall(<Q: 1744> 6)
		testLiteral(y(5) unit 308911)
lbl(308886)	putList(x(2))
		setValue(y(0))
		setConstant(nil)
		putRecord('#' 3 x(1))
		setConstant('unknown option `-')
		setValue(x(2))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(308911)	testLiteral(y(1) nil 308929)
lbl(308915)	moveMoveYXYX(y(5) x(0) y(2) x(1))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1743> 9)
lbl(308929)	move(y(5) x(0))
		putConstant(value x(1))
		testBI('HasFeature' [x(0) x(1)]#[x(2)] 308976)
		getRecord('#' 2 y(3))
		unifyVariable(x(1))
		unifyVariable(x(2))
		callBI('Label' [x(0)]#[x(3)])
		unify(x(3) x(1))
		inlineDot(x(0) value x(1) cache)
		unify(x(1) x(2))
		getList(y(4))
		unifyVariable(x(0))
		unifyValue(y(2))
		getList(x(0))
		unifyNumber(45)
		unifyValue(y(1))
		deAllocateL6
		return
lbl(308976)	putList(x(1))
		setValue(y(1))
		setValue(y(2))
		moveMoveYXYX(y(3) x(2) y(4) x(3))
		deAllocateL6
		genFastCall(<Q: 1743> 9)
		endDefinition(308850)
lbl(308993)	definition(x(0) 309096 pid('IsPrefix' 5 pos('./BatchCompile.oz' 204 6) nil 8) <Q: 1746> nil)
		match(x(0) ht(309081 [onScalar(nil 309002) onRecord('|' 2 309018)]))
lbl(309002)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(5)])
		unify(x(5) x(2))
		getLiteral(unit x(3))
		getLiteral(true x(4))
		return
lbl(309018)	getVarVar(x(0) x(5))
		testNumber(x(0) 61 309041)
lbl(309025)	putConstant(nil x(0))
		callBI('==' [x(1) x(0)]#[x(6)])
		unify(x(6) x(2))
		unify(x(3) x(5))
		getLiteral(true x(4))
		return
lbl(309041)	match(x(1) ht(309068 [onScalar(nil 309044) onRecord('|' 2 309048)]))
lbl(309044)	getLiteral(false x(4))
		return
lbl(309048)	getVarVar(x(1) x(6))
		testBI('==' [x(0) x(1)]#[x(7)] 309064)
		move(x(5) x(0))
		move(x(6) x(1))
		genFastCall(<Q: 1746> 11)
lbl(309064)	getLiteral(false x(4))
		return
lbl(309068)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(217)
		setValue(x(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309081)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(218)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(308993)
lbl(309096)	definition(x(0) 309311 pid('GetLongOptSpec' 5 pos('./BatchCompile.oz' 221 6) nil 7) <Q: 1747> nil)
		match(x(0) ht(309296 [onScalar(nil 309105) onRecord('|' 2 309109)]))
lbl(309105)	getLiteral(unit x(4))
		return
lbl(309109)	allocateL10
		getVarVar(x(0) x(5))
		getRecord('#' 3 x(0))
		unifyVoid(1)
		unifyVariable(x(0))
		unifyVariable(x(6))
		moveMoveXYXY(x(1) y(0) x(2) y(1))
		moveMoveXYXY(x(3) y(2) x(4) y(3))
		move(x(5) y(4))
		testLiteral(x(0) unit 309157)
lbl(309140)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		moveMoveYXYX(y(1) x(2) y(2) x(3))
		move(y(3) x(4))
		deAllocateL10
		genFastCall(<Q: 1747> 11)
lbl(309157)	move(x(6) y(5))
		move(x(0) x(1))
		move(y(0) x(0))
		createVariableMove(y(6) x(2))
		createVariableMove(y(7) x(3))
		createVariableMove(y(8) x(4))
		genFastCall(<Q: 1746> 10)
		testBool(y(8) 309140 309285)
lbl(309182)	testBool(y(6) 309197 309274)
		getLiteral(true y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(309197)	moveMoveYXYX(y(4) x(0) y(0) x(1))
		createVariableMove(y(6) x(2))
		createVariableMove(y(8) x(3))
		createVariableMove(y(9) x(4))
		genFastCall(<Q: 1747> 10)
		testLiteral(y(9) unit 309229)
		getLiteral(false y(1))
		unify(y(2) y(7))
		unify(y(5) y(3))
		deAllocateL10
		return
lbl(309229)	testBool(y(6) 309244 309263)
		getLiteral(true y(1))
		unify(y(2) y(8))
		unify(y(9) y(3))
		deAllocateL10
		return
lbl(309244)	putRecord('#' 3 x(1))
		setConstant('ambiguous option prefix `')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(309263)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(237)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309274)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(227)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309285)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(226)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309296)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(252)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309096)
lbl(309311)	definition(x(0) 309459 pid('ParseLongOpt' 4 pos('./BatchCompile.oz' 255 6) nil 5) <Q: 1748> [y(1)])
		allocateL7
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		moveMoveXYXY(x(2) y(2) x(3) y(3))
		move(g(0) x(0))
		move(y(0) x(1))
		createVariable(x(2))
		createVariableMove(y(4) x(3))
		createVariableMove(y(5) x(4))
		genFastCall(<Q: 1747> 10)
		testLiteral(y(5) unit 309368)
lbl(309349)	putRecord('#' 3 x(1))
		setConstant('unknown option `--')
		setValue(y(0))
		setConstant('\'')
		putRecord(usage 1 x(0))
		setValue(x(1))
		callBI('Exception.raise' [x(0)]#nil)
lbl(309368)	createVariable(y(6))
		testLiteral(y(4) unit 309408)
lbl(309374)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 309389)
		unify(y(6) y(1))
		branch(309443)
lbl(309389)	putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' expects an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(309408)	move(y(5) x(0))
		putConstant(value x(4))
		testBI('HasFeature' [x(0) x(4)]#[x(1)] 309437)
		putRecord('#' 3 x(2))
		setConstant('option `--')
		setValue(y(0))
		setConstant('\' does not expect an argument')
		putRecord(usage 1 x(1))
		setValue(x(2))
		callBI('Exception.raise' [x(1)]#nil)
lbl(309437)	getList(y(6))
		unifyValue(y(4))
		unifyValue(y(1))
lbl(309443)	moveMoveYXYX(y(5) x(0) y(6) x(1))
		moveMoveYXYX(y(2) x(2) y(3) x(3))
		deAllocateL7
		genFastCall(<Q: 1743> 9)
		endDefinition(309311)
lbl(309459)	definition(x(0) 309614 pid('ParseArgs' 3 pos('./BatchCompile.oz' 281 6) nil 6) <Q: 1749> nil)
		match(x(0) ht(309599 [onScalar(nil 309468) onRecord('|' 2 309475)]))
lbl(309468)	getLiteral(nil x(1))
		getLiteral(nil x(2))
		return
lbl(309475)	allocateL6
		getVarVar(y(0) x(0))
		moveMoveXYXY(x(1) y(1) x(2) y(2))
		move(x(0) y(3))
		testList(y(0) 309585)
lbl(309490)	getVarVar(x(3) x(4))
		testNumber(x(3) 45 309585)
		createVariable(y(0))
		createVariable(y(4))
		move(x(4) y(5))
		testList(y(5) 309530)
lbl(309507)	getVarVar(x(3) x(5))
		testNumber(x(3) 45 309530)
		move(x(5) x(0))
		moveMoveYXYX(y(3) x(1) y(0) x(2))
		move(y(4) x(3))
		genFastCall(<Q: 1748> 8)
		branch(309571)
lbl(309530)	match(y(5) ht(309558 [onScalar(nil 309533) onRecord('|' 2 309542)]))
lbl(309533)	putRecord(usage 1 x(0))
		setConstant('bad option syntax `-\'')
		callBI('Exception.raise' [x(0)]#nil)
lbl(309542)	getVarVar(x(0) x(1))
		moveMoveYXYX(y(3) x(2) y(0) x(3))
		move(y(4) x(4))
		genFastCall(<Q: 1745> 10)
		branch(309571)
lbl(309558)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(290)
		setValue(y(5))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309571)	getList(y(1))
		unifyValVar(y(0) x(1))
		moveMoveYXYX(y(4) x(0) y(2) x(2))
		deAllocateL6
		genFastCall(<Q: 1749> 7)
lbl(309585)	getList(y(2))
		unifyValVar(y(0) x(2))
		moveMoveYXYX(y(3) x(0) y(1) x(1))
		deAllocateL6
		genFastCall(<Q: 1749> 7)
lbl(309599)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(300)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309459)
lbl(309614)	definition(x(0) 309703 pid('GetVerbose' 2 pos('./BatchCompile.oz' 304 3) nil 5) <Q: 1750> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		testList(y(0) 309669)
lbl(309629)	getVarVar(x(2) x(3))
		shallowGuard(309669)
		getRecord('#' 2 x(2))
		unifyLiteral(verbose)
		unifyVariable(x(4))
lbl(309642)	shallowThen
		move(x(4) y(0))
		move(x(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<Q: 1750> 4)
		testLiteral(y(2) auto 309664)
lbl(309659)	unify(y(1) y(0))
		deAllocateL3
		return
lbl(309664)	unify(y(1) y(2))
		deAllocateL3
		return
lbl(309669)	match(y(0) ht(309688 [onScalar(nil 309672) onRecord('|' 2 309677)]))
lbl(309672)	getLiteral(auto y(1))
		deAllocateL3
		return
lbl(309677)	getVoid(1)
		getVariable(x(0))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1750> 5)
lbl(309688)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(313)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(309614)
lbl(309703)	definition(x(0) 309729 pid('IsIDChar' 2 pos('./BatchCompile.oz' 317 6) nil 4) <Q: 1751> [g(14)])
		testBI('Char.isAlNum' [x(0)]#[x(2)] 309717)
		getLiteral(true x(1))
		return
lbl(309717)	putConstant(95 x(2))
		callBI('==' [x(0) x(2)]#[x(3)])
		unify(x(3) x(1))
		return
		endDefinition(309703)
lbl(309729)	definition(x(1) 309800 pid('IsQuotedVariable' 2 pos('./BatchCompile.oz' 321 6) nil 3) <Q: 1752> nil)
		match(x(0) ht(309785 [onScalar(nil 309738) onRecord('|' 2 309742)]))
lbl(309738)	getLiteral(false x(1))
		return
lbl(309742)	allocateL3
		getVarVar(x(0) x(2))
		moveMoveXYXY(x(1) y(0) x(0) y(1))
		move(x(2) y(2))
		testNumber(y(1) 96 309767)
lbl(309758)	testLiteral(y(2) nil 309767)
lbl(309762)	getLiteral(true y(0))
		deAllocateL3
		return
lbl(309767)	testNumber(y(1) 0 309776)
		getLiteral(false y(0))
		deAllocateL3
		return
lbl(309776)	moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL3
		genFastCall(<Q: 1752> 5)
lbl(309785)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(328)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309729)
lbl(309800)	definition(x(1) 309872 pid('IsPrintName' 2 pos('./BatchCompile.oz' 331 6) nil 4) <Q: 1753> [g(15) g(16) x(0)])
		testBI('IsAtom' [x(0)]#[x(2)] 309866)
		callBI('AtomToString' [x(0)]#[x(2)])
		match(x(2) ht(309853 [onScalar(nil 309816) onRecord('|' 2 309820)]))
lbl(309816)	getLiteral(false x(1))
		return
lbl(309820)	getVarVar(x(0) x(2))
		testNumber(x(0) 96 309833)
lbl(309827)	move(x(2) x(0))
		genFastCall(<Q: 1752> 5)
lbl(309833)	testBI('Char.isUpper' [x(0)]#[x(3)] 309849)
		move(x(2) x(0))
		move(x(1) x(2))
		move(g(2) x(1))
		genFastCall(<P: 35> 7)
lbl(309849)	getLiteral(false x(1))
		return
lbl(309853)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(343)
		setValue(x(2))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(309866)	getLiteral(false x(1))
		return
		endDefinition(309800)
lbl(309872)	move(y(11) x(0))
		inlineDot(x(0) manager x(0) cache)
		callBI(newObject [x(0)]#[x(1)])
		move(x(1) y(1))
		sendMsg(init y(1) 0 cache)
		createVariable(x(2))
lbl(309895)	definition(x(3) 310141 pid('IncludeFunctors' 2 pos('./BatchCompile.oz' 350 6) nil 6) <Q: 1754> [g(17) g(9) y(1) x(2) g(18)])
		match(x(0) ht(310126 [onScalar(nil 309904) onRecord('|' 2 309905)]))
lbl(309904)	return
lbl(309905)	allocateL6
		move(x(1) y(0))
		putConstant(44 x(1))
		createVariableMove(y(1) x(2))
		createVariableMove(y(2) x(3))
		genFastCall(<P: 2> 8)
		move(y(1) x(0))
		putConstant(61 x(1))
		createVariableMove(y(3) x(2))
		createVariableMove(y(4) x(3))
		genFastCall(<P: 2> 8)
		move(y(3) x(0))
		callBI('StringToAtom' [x(0)]#[x(2)])
		move(x(2) y(1))
		createVariable(y(5))
		testLiteral(y(4) nil 309964)
		moveMoveYXYX(y(5) x(0) y(3) x(1))
		sendMsg(link g(2) [1 name] cache)
		branch(309975)
lbl(309964)	moveMoveYXYX(y(5) x(0) y(4) x(1))
		sendMsg(link g(2) [1 url] cache)
lbl(309975)	move(y(1) x(0))
		createVariableMove(y(4) x(1))
		genFastCall(<Q: 1753> 4)
		testBool(y(4) 310028 310071)
		putRecord(mergeEnv 1 x(1))
		setVariable(x(2))
		putRecord(enqueue 1 x(0))
		setValue(x(1))
		putRecord('#' 2 x(1))
		setValue(y(1))
		setValue(y(5))
		putList(x(3))
		setValue(x(1))
		setConstant(nil)
		putConstant(env x(1))
		callBI(record [x(1) x(3)]#[x(4)])
		unify(x(4) x(2))
		call(y(0) 1)
		branch(310082)
lbl(310028)	putRecord('#' 3 x(2))
		setConstant('illegal variable identifier `')
		setValue(y(3))
		setConstant('\' specified')
		putRecord('#' 2 x(5))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(4))
		setConstant('Hint')
		setValue(x(5))
		putList(x(0))
		setValue(x(4))
		setConstant(nil)
		putConstant('command line option error' x(1))
		sendMsg(error g(3) [items kind msg] cache)
		branch(310082)
lbl(310071)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(358)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310082)	definition(x(1) 310096 pid('' 3 pos('./BatchCompile.oz' 369 5) nil 3) unit nil)
		move(x(2) x(1))
		genFastCall(<Q: 1753> 5)
		endDefinition(310082)
lbl(310096)	move(y(5) x(0))
		createVariableMove(y(1) x(2))
		genFastCall(<P: 178> 6)
		putRecord(mergeEnv 1 x(0))
		setValue(y(1))
		sendMsg(enqueue y(0) 1 cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		deAllocateL6
		genFastCall(<Q: 1754> 5)
lbl(310126)	putRecord(kernel 3 x(1))
		setConstant(noElse)
		setConstant(372)
		setValue(x(0))
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(309895)
lbl(310141)	definition(x(3) 310223 pid('ChangeExtension' 3 pos('./BatchCompile.oz' 376 3) nil 5) <Q: 1755> nil)
		allocateL3
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		move(x(2) y(2))
		testList(y(0) 310185)
lbl(310159)	getVarVar(x(3) x(4))
		shallowGuard(310185)
		getNumber(46 x(3))
		getList(x(4))
		unifyNumber(111)
		unifyVariable(x(3))
		getList(x(3))
		unifyNumber(122)
		unifyLiteral(nil)
lbl(310179)	shallowThen
		unify(y(2) y(1))
		deAllocateL3
		return
lbl(310185)	match(y(0) ht(310208 [onScalar(nil 310188) onRecord('|' 2 310193)]))
lbl(310188)	unify(y(2) y(1))
		deAllocateL3
		return
lbl(310193)	getVarVar(x(3) x(0))
		getList(y(2))
		unifyValVar(x(3) x(2))
		move(y(1) x(1))
		deAllocateL3
		genFastCall(<Q: 1755> 7)
lbl(310208)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(381)
		setValue(y(0))
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(310141)
lbl(310223)	definition(x(0) 310300 pid('Report' 1 pos('./BatchCompile.oz' 384 3) nil 4) <Q: 1756> [y(3) y(17)])
		move(g(0) x(1))
		inlineDot(x(1) msg x(2) cache)
lbl(310238)	definition(x(3) 310283 pid('' 1 pos('./BatchCompile.oz' 386 7) nil 5) unit [g(1) g(0)])
		allocateL2
		move(g(0) x(1))
		inlineDot(x(1) printError x(2) cache)
		move(g(1) x(3))
		inlineDot(x(3) formatLine x(4) cache)
		move(x(2) y(0))
		createVariableMove(y(1) x(1))
		call(x(4) 2)
		moveMoveYXYX(y(0) x(1) y(1) x(0))
		deAllocateL2
		tailCall(x(1) 1)
		endDefinition(310238)
lbl(310283)	move(x(0) x(1))
		move(x(3) x(0))
		call(x(2) 2)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(310223)
lbl(310300)	unify(x(0) x(2))
lbl(310303)	definition(x(2) 312516 pid('BatchCompile' 2 pos('./BatchCompile.oz' 392 3) nil 7) <Q: 1757> [y(0) y(16) y(17) y(2) y(12) y(13) y(3) y(15) g(19)])
		allocateL(14)
		moveMoveXYXY(x(0) y(0) x(1) y(1))
		exHandler(310334)
		match(x(0) ht(310331 [onScalar(error 310321) onScalar(success 310326)]))
lbl(310321)	getNumber(1 y(1))
		deAllocateL
		return
lbl(310326)	getNumber(0 y(1))
		deAllocateL
		return
lbl(310331)	callBI('Exception.raise' [x(0)]#nil)
lbl(310334)	createVariable(y(2))
		createVariable(y(3))
		exHandler(310387)
		testRecord(x(0) usage 1 310384)
lbl(310345)	getVariable(x(1))
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(2))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1756> 2)
		branch(310399)
lbl(310384)	callBI('Exception.raise' [x(0)]#nil)
lbl(310387)	moveMoveYXYX(y(0) x(0) y(2) x(1))
		move(y(3) x(2))
		genFastCall(<Q: 1749> 6)
		popEx
lbl(310399)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<Q: 1750> 4)
		move(g(0) x(0))
		inlineDot(x(0) engine x(1) cache)
		callBI(newObject [x(1)]#[x(2)])
		move(x(2) y(4))
		sendMsg(init y(4) 0 cache)
		move(g(0) x(0))
		inlineDot(x(0) quietInterface x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		moveMoveXYYX(x(1) y(5) y(4) x(0))
		move(y(0) x(1))
		sendMsg(init y(5) 2 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(showdeclares)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(warnunused)
		setConstant(true)
		sendMsg(enqueue y(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(threadedqueries)
		setConstant(false)
		sendMsg(enqueue y(4) 1 cache)
		putConstant(feedtoemulator x(2))
		callBI('NewCell' [x(2)]#[x(0)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(1)])
		putConstant(false x(2))
		callBI('NewCell' [x(2)]#[x(3)])
		putConstant(nil x(2))
		callBI('NewCell' [x(2)]#[x(4)])
		putConstant(unit x(2))
		callBI('NewCell' [x(2)]#[x(5)])
		createVariable(x(2))
lbl(310529)	definition(x(6) 310997 pid('' 1 pos('./BatchCompile.oz' 418 3) nil 5) unit [g(1) g(2) g(3) y(4) x(4) y(5) x(5) x(2) x(0) x(3) x(1)])
		shallowGuard(310984)
		getRecord('#' 2 x(0))
		unifyVariable(x(1))
		unifyVariable(x(2))
lbl(310545)	shallowThen
		match(x(1) ht(310970 [onScalar(help 310549) onScalar('define' 310601) onScalar(undef 310613) onScalar(maxerrors 310625) onScalar(environment 310637) onScalar(incdir 310646) onScalar(include 310662) onScalar(sysletprefix 310815) onScalar(verbose 310867) onScalar(mode 310868) onScalar(makedepend 310923) onScalar(outputfile 310930) onScalar(debuginfo 310937)]))
lbl(310549)	allocateL1
		move(g(0) x(0))
		inlineDot(x(0) get x(2) cache)
		putConstant('root.url' x(0))
		createVariableMove(y(0) x(1))
		call(x(2) 2)
		move(g(1) x(0))
		inlineDot(x(0) printInfo x(4) cache)
		move(y(0) x(1))
		move(g(2) x(3))
		putConstant('Usage: ' x(0))
		putConstant(' [options] [file] ...\n' x(2))
		sendMsg('#' x(4) 4 cache)
		putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(310601)	putRecord(macroDefine 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310613)	putRecord(macroUndef 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310625)	putRecord(setMaxNumberOfErrors 1 x(0))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310637)	move(x(2) x(0))
		move(g(3) x(1))
		genFastCall(<Q: 1754> 5)
lbl(310646)	move(g(4) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(3))
		setValue(x(2))
		setValue(x(1))
		callBI('Assign' [x(0) x(3)]#nil)
		return
lbl(310662)	allocateL2
		move(x(2) y(0))
		putConstant(pushSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(3) 1 cache)
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setConstant('return')
		sendMsg(enqueue g(3) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(3) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(5) 1 cache)
		testBool(y(0) 310783 310772)
		move(g(1) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(1) x(0))
		sendMsg(getVS g(5) 1 cache)
		move(y(1) x(0))
		call(y(0) 1)
		branch(310783)
lbl(310772)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(439)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310783)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(5) 1 cache)
		testBool(y(0) 310802 310804)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(310802)	deAllocateL2
		return
lbl(310804)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(442)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(310815)	move(g(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 310829)
lbl(310825)	callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(310829)	putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('syslet prefix may only be given once')
		move(x(1) x(0))
		genFastCall(<Q: 1756> 3)
lbl(310867)	return
lbl(310868)	move(g(7) x(0))
		testBI('IsDet' [x(0)]#[x(1)] 310913)
		putRecord('#' 2 x(4))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(3))
		setConstant('Hint')
		setValue(x(4))
		putList(x(2))
		setValue(x(3))
		setConstant(nil)
		putRecord(error [items kind msg] x(1))
		setValue(x(2))
		setConstant('command line option error')
		setConstant('mode specified multiply on command line')
		move(x(1) x(0))
		genFastCall(<Q: 1756> 3)
lbl(310913)	move(g(8) x(1))
		callBI('Assign' [x(1) x(2)]#nil)
		getLiteral(true g(7))
		return
lbl(310923)	move(g(9) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(310930)	move(g(10) x(0))
		callBI('Assign' [x(0) x(2)]#nil)
		return
lbl(310937)	allocateL1
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfocontrol)
		setValue(x(2))
		move(x(2) y(0))
		sendMsg(enqueue g(3) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(debuginfovarnames)
		setValue(y(0))
		deAllocateL1
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310970)	putRecord(setSwitch 2 x(0))
		setValue(x(1))
		setValue(x(2))
		tailSendMsg(enqueue g(3) 1 cache)
lbl(310984)	putRecord(kernel 2 x(0))
		setConstant(noElse)
		setConstant(418)
		callBI('Exception.raiseError' [x(0)]#nil)
		endDefinition(310529)
lbl(310997)	moveMoveXYXY(x(0) y(0) x(1) y(6))
		moveMoveXYXY(x(3) y(7) x(4) y(8))
		moveMoveXYYX(x(5) y(9) y(2) x(0))
		move(x(6) x(1))
		genFastCall(<P: 34> 4)
		move(g(4) x(0))
		inlineDot(x(0) putEnv x(1) cache)
		move(y(8) x(2))
		callBI('Access' [x(2)]#[x(3)])
lbl(311033)	definition(x(2) 311056 pid('' 3 pos('./BatchCompile.oz' 481 4) nil 4) unit nil)
		putList(x(3))
		setConstant(58)
		setValue(x(0))
		move(x(1) x(0))
		move(x(3) x(1))
		genFastCall(<P: 21> 7)
		endDefinition(311033)
lbl(311056)	inlineDot(x(0) getEnv x(4) cache)
		moveMoveXYXY(x(1) y(2) x(3) y(8))
		move(x(2) y(10))
		putConstant('OZPATH' x(0))
		createVariableMove(y(11) x(1))
		call(x(4) 2)
		putConstant('OZPATH' y(12))
		createVariable(y(13))
		testLiteral(y(11) false 311096)
lbl(311088)	getList(y(13))
		unifyNumber(46)
		unifyLiteral(nil)
		branch(311099)
lbl(311096)	unify(y(13) y(11))
lbl(311099)	moveMoveYXYX(y(8) x(0) y(10) x(1))
		move(y(13) x(2))
		createVariableMove(y(11) x(3))
		genFastCall(<P: 30> 8)
		moveMoveYXYX(y(12) x(0) y(11) x(1))
		call(y(2) 2)
		testLiteral(y(3) nil 311162)
		putRecord('#' 2 x(3))
		setConstant('Use --help to obtain ')
		setConstant('usage information')
		putRecord(hint [l m] x(2))
		setConstant('Hint')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('command line option error')
		setConstant('no input files given')
		genFastCall(<Q: 1756> 2)
		branch(312508)
lbl(311162)	move(y(6) x(0))
		callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('\\=' [x(1) x(2)]#[x(3)] 311185)
lbl(311178)	callBI('Access' [x(0)]#[x(1)])
		testLiteral(x(1) unit 312469)
lbl(311185)	definition(x(1) 312461 pid('' 1 pos('./BatchCompile.oz' 500 6) nil 8) unit [y(5) y(6) y(0) y(7) y(4) g(2) g(5) g(6) g(7) g(8) g(4) y(9)])
		allocateL6
		move(x(0) y(0))
		sendMsg(reset g(0) 0 cache)
		move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(1))
		testLiteral(x(1) unit 311450)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(311437 [onScalar(core 311222) onScalar(outputcode 311260) onScalar(ozma 311298) onScalar(feedtoemulator 311336) onScalar(dump 311386) onScalar(syslet 311424)]))
lbl(311222)	putList(x(5))
		setConstant(105)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311553)
lbl(311260)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311553)
lbl(311298)	putList(x(5))
		setConstant(109)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311553)
lbl(311336)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBool(x(3) 311381 311370)
		putRecord('#' 2 x(4))
		setConstant('--makedepend with --feedtoemulator ')
		setConstant('needs an --outputfile')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1756> 2)
		branch(311381)
lbl(311370)	putRecord(kernel 2 x(3))
		setConstant(boolCaseType)
		setConstant(510)
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(311381)	getLiteral(unit y(1))
		branch(311553)
lbl(311386)	putList(x(5))
		setConstant(102)
		setConstant(nil)
		putList(x(4))
		setConstant(122)
		setValue(x(5))
		putList(x(2))
		setConstant(111)
		setValue(x(4))
		putList(x(3))
		setConstant(46)
		setValue(x(2))
		move(y(0) x(0))
		move(x(3) x(1))
		move(y(1) x(2))
		genFastCall(<Q: 1755> 6)
		branch(311553)
lbl(311424)	moveMoveYXYX(y(0) x(0) y(1) x(2))
		putConstant(nil x(1))
		genFastCall(<Q: 1755> 6)
		branch(311553)
lbl(311437)	putRecord(kernel 3 x(3))
		setConstant(noElse)
		setConstant(521)
		setValue(x(2))
		callBI('Exception.raiseError' [x(3)]#nil)
lbl(311450)	callBI('Access' [x(0)]#[x(1)])
		putList(x(2))
		setConstant(45)
		setConstant(nil)
		testBI('==' [x(1) x(2)]#[x(3)] 311500)
		move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) dump 311486)
lbl(311473)	putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setConstant('dumping to stdout is not possible')
		genFastCall(<Q: 1756> 2)
		branch(311553)
lbl(311486)	callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) syslet 311495)
		branch(311473)
lbl(311495)	getLiteral(stdout y(1))
		branch(311553)
lbl(311500)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		testLiteral(x(2) feedtoemulator 311544)
lbl(311510)	move(g(3) x(2))
		callBI('Access' [x(2)]#[x(3)])
		testBI('Not' [x(3)]#[x(4)] 311544)
lbl(311520)	putRecord('#' 2 x(4))
		setConstant('no output file name must be ')
		setConstant('specified for --feedtoemulator')
		putRecord(error [kind msg] x(3))
		setConstant('command line option error')
		setValue(x(4))
		move(x(3) x(0))
		genFastCall(<Q: 1756> 2)
		branch(311553)
lbl(311544)	move(g(1) x(0))
		callBI('Access' [x(0)]#[x(1)])
		unify(x(1) y(1))
lbl(311553)	putConstant(pushSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 311602 311591)
		putRecord(setSwitch 2 x(2))
		setConstant(unnest)
		setConstant(false)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311602)
lbl(311591)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(541)
		callBI('Exception.raiseError' [x(1)]#nil)
lbl(311602)	move(g(2) x(0))
		callBI('Access' [x(0)]#[x(1)])
		match(x(1) ht(311715 [onScalar(core 311611) onScalar(outputcode 311644) onScalar(ozma 311677) onScalar(feedtoemulator 311696)]))
lbl(311611)	putRecord(setSwitch 2 x(2))
		setConstant(core)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(codegen)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(311746)
lbl(311644)	putRecord(setSwitch 2 x(2))
		setConstant(outputcode)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(false)
		sendMsg(enqueue g(4) 1 cache)
		branch(311746)
lbl(311677)	putRecord(setSwitch 2 x(2))
		setConstant(ozma)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311746)
lbl(311696)	putRecord(setSwitch 2 x(2))
		setConstant(feedtoemulator)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		branch(311746)
lbl(311715)	putRecord(setSwitch 2 x(2))
		setConstant(expression)
		setConstant(true)
		move(x(2) x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(setSwitch 2 x(0))
		setConstant(feedtoemulator)
		setConstant(true)
		sendMsg(enqueue g(4) 1 cache)
lbl(311746)	putRecord('return' [result] x(2))
		setVariable(y(2))
		putRecord(feedFile 2 x(0))
		setValue(y(0))
		setValue(x(2))
		sendMsg(enqueue g(4) 1 cache)
		putConstant(popSwitches x(0))
		sendMsg(enqueue g(4) 1 cache)
		putRecord(ping 1 x(0))
		setVariable(y(0))
		sendMsg(enqueue g(4) 1 cache)
		move(y(0) x(0))
		callBI('Wait' [x(0)]#nil)
		createVariableMove(y(0) x(0))
		sendMsg(hasBeenTopped g(0) 1 cache)
		testBool(y(0) 311846 311835)
		move(g(5) x(0))
		inlineDot(x(0) printError x(1) cache)
		move(x(1) y(0))
		createVariableMove(y(3) x(0))
		sendMsg(getVS g(0) 1 cache)
		move(y(3) x(0))
		call(y(0) 1)
		branch(311846)
lbl(311835)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(565)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311846)	createVariableMove(y(0) x(0))
		sendMsg(hasErrors g(0) 1 cache)
		testBool(y(0) 311876 311865)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(311865)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(568)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(311876)	move(g(3) x(0))
		callBI('Access' [x(0)]#[x(1)])
		testBool(x(1) 312021 312448)
		move(g(6) x(1))
		inlineDot(x(1) file x(2) cache)
		callBI(newObject [x(2)]#[x(3)])
		putList(x(4))
		setConstant(write)
		setConstant(nil)
		move(x(3) y(0))
		move(x(4) x(0))
		putConstant(stdout x(1))
		sendMsg(init y(0) [flags name] cache)
		putRecord('#' 4 y(2))
		setValue(y(1))
		setConstant(':')
		setVariable(y(3))
		setConstant('\n')
		createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
		match(y(1) ht(311989 [onScalar(nil 311943) onRecord('|' 2 311948)]))
lbl(311943)	getLiteral(nil y(3))
		branch(312002)
lbl(311948)	createVariableMove(y(1) x(0))
		sendMsg(getInsertedFiles g(0) 1 cache)
lbl(311957)	definition(x(1) 311976 pid('' 3 pos('./BatchCompile.oz' 576 8) nil 3) unit nil)
		getRecord('#' 3 x(2))
		unifyValue(x(0))
		unifyLiteral(' \\\n\t')
		unifyValue(x(1))
		return
		endDefinition(311957)
lbl(311976)	moveMoveYXYX(y(1) x(0) y(3) x(3))
		putConstant(nil x(2))
		genFastCall(<P: 30> 8)
		branch(312002)
lbl(311989)	putRecord(kernel 3 x(0))
		setConstant(noElse)
		setConstant(578)
		setValue(y(1))
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312002)	move(y(2) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(312021)	move(g(2) x(1))
		callBI('Access' [x(1)]#[x(2)])
		match(x(2) ht(312375 [onScalar(dump 312030) onScalar(syslet 312070) onScalar(feedtoemulator 312373)]))
lbl(312030)	exHandler(312050)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312050)	move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(1) x(1))
		call(x(2) 2)
		popEx
		deAllocateL6
		return
lbl(312070)	move(y(2) x(0))
		createVariableMove(y(0) x(1))
		genFastCall(<P: 279> 4)
		testBool(y(0) 312085 312120)
		branch(312131)
lbl(312085)	putRecord(oz 1 x(3))
		setValue(y(2))
		putRecord(hint [l m] x(2))
		setConstant('Value found')
		setValue(x(3))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('syslets can only be built from functors')
		genFastCall(<Q: 1756> 2)
		branch(312131)
lbl(312120)	putRecord(kernel 2 x(0))
		setConstant(boolCaseType)
		setConstant(590)
		callBI('Exception.raiseError' [x(0)]#nil)
lbl(312131)	move(g(10) x(0))
		inlineDot(x(0) tmpnam x(1) cache)
		createVariableMove(y(0) x(0))
		call(x(1) 1)
		createVariable(y(3))
		exHandler(312158)
		getRecord(ex 1 y(3))
		unifyValue(x(0))
		branch(312346)
lbl(312158)	exHandler(312178)
		move(g(7) x(1))
		inlineDot(x(1) printExc x(2) cache)
		call(x(2) 1)
		putConstant(error x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312178)	move(g(6) x(0))
		inlineDot(x(0) file x(2) cache)
		callBI(newObject [x(2)]#[x(1)])
		putList(x(5))
		setConstant(truncate)
		setConstant(nil)
		putList(x(4))
		setConstant(create)
		setValue(x(5))
		putList(x(3))
		setConstant(write)
		setValue(x(4))
		move(x(1) y(4))
		move(x(3) x(0))
		move(y(1) x(1))
		sendMsg(init y(4) [flags name] cache)
		move(g(11) x(0))
		callBI('Access' [x(0)]#[x(1)])
		createVariable(y(5))
		testLiteral(x(1) unit 312240)
lbl(312235)	getLiteral('#!/bin/sh\nexec ozengine $0 "$@"\n' y(5))
		branch(312243)
lbl(312240)	unify(y(5) x(1))
lbl(312243)	move(y(5) x(0))
		sendMsg(write y(4) [vs] cache)
		sendMsg(close y(4) 0 cache)
		move(g(8) x(0))
		inlineDot(x(0) save x(2) cache)
		moveMoveYXYX(y(2) x(0) y(0) x(1))
		call(x(2) 2)
		move(g(10) x(0))
		inlineDot(x(0) system x(2) cache)
		putRecord('#' 7 x(3))
		setConstant('cat ')
		setValue(y(0))
		setConstant(' >> ')
		setValue(y(1))
		setConstant('; ')
		setConstant('chmod +x ')
		setValue(y(1))
		move(x(3) x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		match(y(1) ht(312314 [onScalar(0 312341)]))
lbl(312314)	putRecord(hint [l m] x(2))
		setConstant('Error code')
		setValue(y(1))
		putList(x(1))
		setValue(x(2))
		setConstant(nil)
		putRecord(error [items kind msg] x(0))
		setValue(x(1))
		setConstant('batch compilation error')
		setConstant('writing syslet failed')
		genFastCall(<Q: 1756> 2)
lbl(312341)	popEx
lbl(312342)	getLiteral(unit y(3))
		popEx
lbl(312346)	move(g(10) x(0))
		inlineDot(x(0) unlink x(1) cache)
		move(y(0) x(0))
		call(x(1) 1)
		testRecord(y(3) ex 1 312371)
lbl(312366)	getVariable(x(0))
		callBI('Exception.raise' [x(0)]#nil)
lbl(312371)	deAllocateL6
		return
lbl(312373)	deAllocateL6
		return
lbl(312375)	move(g(6) x(2))
		inlineDot(x(2) file x(3) cache)
		callBI(newObject [x(3)]#[x(4)])
		putList(x(7))
		setConstant(truncate)
		setConstant(nil)
		putList(x(6))
		setConstant(create)
		setValue(x(7))
		putList(x(5))
		setConstant(write)
		setValue(x(6))
		move(x(4) y(0))
		move(x(5) x(0))
		move(y(1) x(1))
		sendMsg(init y(0) [flags name] cache)
		createVariableMove(y(1) x(0))
		sendMsg(getSource g(0) 1 cache)
		move(y(1) x(0))
		sendMsg(write y(0) [vs] cache)
		move(y(0) x(0))
		deAllocateL6
		tailSendMsg(close x(0) 0 cache)
lbl(312448)	putRecord(kernel 2 x(1))
		setConstant(boolCaseType)
		setConstant(571)
		callBI('Exception.raiseError' [x(1)]#nil)
		endDefinition(311185)
lbl(312461)	move(y(3) x(0))
		genFastCall(<P: 34> 4)
		branch(312508)
lbl(312469)	move(y(3) x(0))
		createVariableMove(y(2) x(1))
		genFastCall(<P: 24> 4)
		move(y(2) x(0))
		putConstant(1 x(1))
		testLT(x(1) x(0) x(2) 311185)
lbl(312489)	putRecord('#' 2 x(1))
		setConstant('only one input file allowed when ')
		setConstant('an output file name is given')
		putRecord(error [kind msg] x(0))
		setConstant('command line option error')
		setValue(x(1))
		genFastCall(<Q: 1756> 2)
lbl(312508)	putConstant(success x(0))
		callBI('Exception.raise' [x(0)]#nil)
		endDefinition(310303)
lbl(312516)	move(y(17) x(0))
		inlineDot(x(0) exit x(0) cache)
		move(y(16) x(1))
		inlineDot(x(1) get x(2) cache)
		move(x(0) y(0))
		putConstant(argv x(0))
		createVariableMove(y(1) x(1))
		call(x(2) 2)
		move(y(1) x(0))
		move(g(15) x(1))
		createVariableMove(y(2) x(2))
		genFastCall(<P: 29> 6)
		move(y(2) x(0))
		createVariableMove(y(1) x(1))
		genFastCall(<Q: 1757> 4)
		move(y(1) x(0))
		call(y(0) 1)
		getLiteral('export' g(20))
		deAllocateL
		return
		endDefinition(304209)
lbl(312580)	tailCall(x(0) 0)
		endDefinition(304077)
lbl(312585)	move(x(0) y(0))
		putConstant('import' x(0))
		putConstant('export' x(1))
		createVariableMove(y(1) x(3))
		marshalledFastCall(<R: 'NewFunctor'> 8)
		putRecord('#' 2 x(1))
		setConstant(ozc)
		setConstant('.ozp')
		move(y(1) x(0))
		call(y(0) 2)
		putConstant('System' x(1))
		callBI('BootManager' [x(1)]#[x(2)])
		inlineDot(x(2) exit x(1) cache)
		putConstant(0 x(0))
		deAllocateL
		tailCall(x(1) 1)
		endDefinition(1)
lbl(312635)	tailCall(x(0) 0)
