#!/bin/sh
# Oz startup script.



# uncomment and adapt the following line if you want 
# to draw links from say /usr/local/bin to OZHOME/bin
# see chapter "installation" in the users manual for more information

# OZHOME=/usr/local/oz
	       



######################################################################
# you should not edit below this line
		 
# where Oz resides:

howcalled=$0
cmd=`basename $howcalled`

# keep quiet on emacs and standalone systems
case "$cmd" in
   ozemacs|ozsa|ozdo) doecho=true ;;
   *)                 doecho=echo ;;
esac


if [ ${OZHOME-xx} = xx ]
then
  dir=`dirname $howcalled`
  OZHOME=`(cd $dir; cd ..; /bin/pwd)`
  $doecho "Setting Oz installation directory to: $OZHOME"
  export OZHOME
else
  $doecho "Using Oz directory: $OZHOME"
  export OZHOME
fi

# determine machine architecture and OS version
: ${OZPLATFORM=`$OZHOME/bin/ozplatform`}
export OZPLATFORM

case "$cmd" in
   oz-debug)	OZEMULATOR=$OZHOME/platform/$OZPLATFORM/oz.emulator.bin.debug
		export OZEMULATOR
		cmd=oz
esac

# set OZCOMPILER
if [ ${OZCOMPILER-xx} = xx ]; then
   OZCOMPILER=$OZHOME/platform/$OZPLATFORM/oz.compiler.bin
fi

# set OZPATH & PATH
if [ ${OZ_PI-xx} = xx ]; then
  # where Oz searches for files:
  : ${OZPATH=.}
  OZPATH=${OZPATH}:${OZHOME}/lib:${OZHOME}/platform/${OZPLATFORM}:${OZHOME}/demo
  export OZPATH
  # increment path
  PATH=${OZHOME}/bin:${OZHOME}/platform/${OZPLATFORM}:${PATH}
  export PATH
  MANPATH=${OZHOME}/man:${MANPATH}
  export MANPATH
  OZ_PI=1
  export OZ_PI
fi

# load fonts
if [ -d ${OZHOME}/lib/fonts ]; then 
   xset +fp ${OZHOME}/lib/fonts
fi


# setting line editor
: ${OZILE=xxx}
if [ ! -f $OZILE -o ${TERM-xx} = emacs ]; then
   OZILE=""  # running under emacs
fi

# where is Emacs?
if [ \( "$cmd" = "oz" -o "$cmd" = "ozemacs" \) -a "${OZEMACS-0}" = 0 ]; then

  CHECKEMACS=${OZHOME}/ozemacs/bin/emacs
  if [ -f $CHECKEMACS -a -f ${OZHOME}/ozemacs/platform/${OZPLATFORM}/bin/emacs ]; then
    OZEMACS=$CHECKEMACS

  # Backward compatibility for older ozemacs (19.28)
  elif [ -f ${OZHOME}/ozemacs/bin/$OZPLATFORM/emacs ]; then

    OZEMACS=${OZHOME}/ozemacs/bin/$OZPLATFORM/emacs
    EHOME=$OZHOME/ozemacs
    EMACSLOADPATH=$EHOME/common/lisp:$EHOME/common/site-lisp
    EMACSDATA=$EHOME/common/data
    EMACSDOC=$EMACSDATA
    INFOPATH=$EHOME/info
    EMACSLOCKDIR=$EHOME/common/lock
    EMACSPATH=$EHOME/bin/$OZPLATFORM/etc
    export EMACSLOADPATH EMACSDATA EMACSDOC
    export INFOPATH EMACSLOCKDIR EMACSPATH

  else
     IFS="${IFS=   }"; saveifs="$IFS"; IFS="$IFS:"
     for name in emacs lemacs xemacs; do
       for dir in $PATH; do
	 test -z "$dir" && dir=.
    	 if test -f $dir/$name; then
      	   # Not all systems have dirname.
           OZEMACS=$dir/$name
      	   break 2
	 fi
       done
     done
     IFS="$saveifs"
     if [ ${OZEMACS-0} = 0 ]; then
	echo "Cannot find emacs" 1>&2
	echo "Try setting environment variable OZEMACS" 1>&2
	exit 1
     fi
  fi

  export OZEMACS
fi


case "$cmd" in

   oz) 
        echo "Using emacs '${OZEMACS}'"
	# store cmd line args starting from "-a" in $OZARGV
	OZARGV=""
	EMACSARGV=""
	while [ $# -gt 0 ]
        do
	   case "$1" in
	    -a) shift
		while [ $# -gt 0 ]; do
		   OZARGV="$OZARGV $1"
		   shift
		done;;
	    *) EMACSARGV="$EMACSARGV $1"
	       shift;;
	   esac
	done
	export OZARGV
	exec $OZEMACS -l $OZHOME/lib/elisp/oz.elc -f run-oz $EMACSARGV
   ;;

   ozdemo) 
	exec $OZHOME/demo/rundemo "$@"
   ;;

   ozemacs) 
	exec $OZEMACS "$@"
   ;;

   oz.compiler)
        if [ X$1 = X"-emacs" ]; then
	  shift
          exec $OZCOMPILER +E `echo $* |  sed -e 's/-/+/g'`
        else
          exec xterm -name "OzCompiler" \
               -T "Oz Compiler Input Window" \
	       -e $OZILE $OZCOMPILER `echo $* |  sed -e 's/-/+/g'`
        fi
   ;;

   oz.emulator)
        if [ ${OZEMULATOR-xx} = xx ]; then
	   OZEMULATOR=$OZHOME/platform/$OZPLATFORM/oz.emulator.bin
	else
	   echo "Using $OZEMULATOR"
	fi
	if [ X$1 = X"-emacs" ]; then
		shift
		exec $OZEMULATOR -E "$@" -a $OZARGV
	else
		xterm -title 'Oz Emulator' -e $OZEMULATOR "$@" -a $OZARGV \
			> /dev/null 2>&1 &
	fi
	exit 0
   ;;

   ozsa)  # standalone system
	if [ ${OZEMULATOR-xx} = xx ]; then
	   OZEMULATOR=$OZHOME/platform/$OZPLATFORM/oz.emulator.bin
	else
	   echo "Using $OZEMULATOR"
	fi
        exec $OZEMULATOR -E "$@"
   ;;

   oz-)
	exec $OZILE $OZCOMPILER "$@"
   ;;

   ozc)
	set -e
        for file in $@; do
            # +p /dev/null --> do not load ~/.ozrc
	    $OZCOMPILER +p /dev/null +c $file
        done
        exit $?
   ;;

   ozsac)
        if [ $# -ne 2 ]; then
	   echo "Usage: $0 infile outfile"
	   exit 1
        fi
	tempfile=/tmp/ozsac$$
	trap "rm -f $tempfile" 0
        infile=$1; outfile=$2
        $OZCOMPILER +p /dev/null +c $infile +dn $tempfile
        if [ $? -ne 0 ]; then exit 1; fi
        (echo "#!/bin/sh"; 
         echo ": \${OZHOME=$OZHOME}";
         echo "exec \$OZHOME/bin/ozsa -quiet -f \$0 -a \$@";
         echo "###";
         cat $tempfile) > $outfile
        chmod +x $outfile
	echo ""
   ;;

   ozdo)
	exec "$@"
   ;;

   *)
       echo "Unknown invocation of Oz via '$cmd'" 1>&2
       exit 1
   ;;
esac


