

Terminals which are not used:

   '{'
   '}'
   ','
   ';'


Conflict in state 10 between rule 11 and token '+' resolved as reduce.
Conflict in state 10 between rule 11 and token '-' resolved as reduce.
Conflict in state 10 between rule 11 and token '*' resolved as shift.
Conflict in state 10 between rule 11 and token '/' resolved as shift.
Conflict in state 10 between rule 11 and token '^' resolved as shift.
Conflict in state 18 between rule 4 and token '+' resolved as reduce.
Conflict in state 18 between rule 4 and token '-' resolved as reduce.
Conflict in state 18 between rule 4 and token '*' resolved as shift.
Conflict in state 18 between rule 4 and token '/' resolved as shift.
Conflict in state 18 between rule 4 and token '^' resolved as shift.
Conflict in state 19 between rule 5 and token '+' resolved as reduce.
Conflict in state 19 between rule 5 and token '-' resolved as reduce.
Conflict in state 19 between rule 5 and token '*' resolved as shift.
Conflict in state 19 between rule 5 and token '/' resolved as shift.
Conflict in state 19 between rule 5 and token '^' resolved as shift.
Conflict in state 20 between rule 6 and token '+' resolved as reduce.
Conflict in state 20 between rule 6 and token '-' resolved as reduce.
Conflict in state 20 between rule 6 and token '*' resolved as reduce.
Conflict in state 20 between rule 6 and token '/' resolved as reduce.
Conflict in state 20 between rule 6 and token '^' resolved as shift.
Conflict in state 21 between rule 7 and token '+' resolved as reduce.
Conflict in state 21 between rule 7 and token '-' resolved as reduce.
Conflict in state 21 between rule 7 and token '*' resolved as reduce.
Conflict in state 21 between rule 7 and token '/' resolved as reduce.
Conflict in state 21 between rule 7 and token '^' resolved as shift.
Conflict in state 22 between rule 8 and token '+' resolved as reduce.
Conflict in state 22 between rule 8 and token '-' resolved as reduce.
Conflict in state 22 between rule 8 and token '*' resolved as reduce.
Conflict in state 22 between rule 8 and token '/' resolved as reduce.
Conflict in state 22 between rule 8 and token '^' resolved as an error.
State 9 contains 7 reduce/reduce conflicts.

Grammar
rule 1    input -> expr
rule 2    expr -> TID
rule 3    expr -> ABS '(' expr ')'
rule 4    expr -> expr '+' expr
rule 5    expr -> expr '-' expr
rule 6    expr -> expr '*' expr
rule 7    expr -> expr '/' expr
rule 8    expr -> expr '^' expr
rule 9    expr -> '-' NUMBER
rule 10   expr -> NUMBER
rule 11   expr -> '-' expr
rule 12   expr -> '(' expr ')'

Terminals, with rules where they appear

$ (-1)
'(' (40) 3 12
')' (41) 3 12
'*' (42) 6
'+' (43) 4
',' (44)
'-' (45) 5 9 11
'/' (47) 7
';' (59)
'^' (94) 8
'{' (123)
'}' (125)
error (256)
TID (257) 2
NUMBER (258) 9 10
ABS (259) 3

Nonterminals, with rules where they appear

input (17)
    on left: 1
expr (18)
    on left: 2 3 4 5 6 7 8 9 10 11 12, on right: 1 3 4 5 6 7 8 11 12


state 0

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    input	go to state 24
    expr	go to state 6



state 1

    expr  ->  TID .   (rule 2)

    $default	reduce using rule 2 (expr)



state 2

    expr  ->  NUMBER .   (rule 10)

    $default	reduce using rule 10 (expr)



state 3

    expr  ->  '(' . expr ')'   (rule 12)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 7



state 4

    expr  ->  ABS . '(' expr ')'   (rule 3)

    '(' 	shift, and go to state 8



state 5

    expr  ->  '-' . NUMBER   (rule 9)
    expr  ->  '-' . expr   (rule 11)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 9
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 10



state 6

    input  ->  expr .   (rule 1)
    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    '+' 	shift, and go to state 11
    '-' 	shift, and go to state 12
    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15

    $default	reduce using rule 1 (input)



state 7

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)
    expr  ->  '(' expr . ')'   (rule 12)

    ')' 	shift, and go to state 16
    '+' 	shift, and go to state 11
    '-' 	shift, and go to state 12
    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15



state 8

    expr  ->  ABS '(' . expr ')'   (rule 3)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 17



state 9

    expr  ->  '-' NUMBER .   (rule 9)
    expr  ->  NUMBER .   (rule 10)

    $   	reduce using rule 9 (expr)
    $   	[reduce using rule 10 (expr)]
    ')' 	reduce using rule 9 (expr)
    ')' 	[reduce using rule 10 (expr)]
    '+' 	reduce using rule 9 (expr)
    '+' 	[reduce using rule 10 (expr)]
    '-' 	reduce using rule 9 (expr)
    '-' 	[reduce using rule 10 (expr)]
    '*' 	reduce using rule 9 (expr)
    '*' 	[reduce using rule 10 (expr)]
    '/' 	reduce using rule 9 (expr)
    '/' 	[reduce using rule 10 (expr)]
    '^' 	reduce using rule 9 (expr)
    '^' 	[reduce using rule 10 (expr)]
    $default	reduce using rule 9 (expr)



state 10

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)
    expr  ->  '-' expr .   (rule 11)

    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15

    $default	reduce using rule 11 (expr)



state 11

    expr  ->  expr '+' . expr   (rule 4)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 18



state 12

    expr  ->  expr '-' . expr   (rule 5)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 19



state 13

    expr  ->  expr '*' . expr   (rule 6)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 20



state 14

    expr  ->  expr '/' . expr   (rule 7)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 21



state 15

    expr  ->  expr '^' . expr   (rule 8)

    TID 	shift, and go to state 1
    NUMBER	shift, and go to state 2
    '(' 	shift, and go to state 3
    ABS 	shift, and go to state 4
    '-' 	shift, and go to state 5

    expr	go to state 22



state 16

    expr  ->  '(' expr ')' .   (rule 12)

    $default	reduce using rule 12 (expr)



state 17

    expr  ->  ABS '(' expr . ')'   (rule 3)
    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    ')' 	shift, and go to state 23
    '+' 	shift, and go to state 11
    '-' 	shift, and go to state 12
    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15



state 18

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr '+' expr .   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15

    $default	reduce using rule 4 (expr)



state 19

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr '-' expr .   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    '*' 	shift, and go to state 13
    '/' 	shift, and go to state 14
    '^' 	shift, and go to state 15

    $default	reduce using rule 5 (expr)



state 20

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr '*' expr .   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    '^' 	shift, and go to state 15

    $default	reduce using rule 6 (expr)



state 21

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr '/' expr .   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)

    '^' 	shift, and go to state 15

    $default	reduce using rule 7 (expr)



state 22

    expr  ->  expr . '+' expr   (rule 4)
    expr  ->  expr . '-' expr   (rule 5)
    expr  ->  expr . '*' expr   (rule 6)
    expr  ->  expr . '/' expr   (rule 7)
    expr  ->  expr . '^' expr   (rule 8)
    expr  ->  expr '^' expr .   (rule 8)


    '^' 	error (nonassociative)

    $default	reduce using rule 8 (expr)



state 23

    expr  ->  ABS '(' expr ')' .   (rule 3)

    $default	reduce using rule 3 (expr)



state 24

    $   	go to state 25



state 25

    $   	go to state 26



state 26

    $default	accept
