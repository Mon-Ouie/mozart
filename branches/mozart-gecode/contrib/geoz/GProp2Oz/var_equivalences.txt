# The contents of this file is:
# - Gecode complete type
# - how to declare the variable that is the actual type or can be converted to
# - how to declare the variable that is strictly of the actual type
# - checker function of the type. (no-checker is the function has no checker function)
# - has this value an ge-space and must be the same space of the other variables that has ge-spaces?
# if the above is true then:
# - A form to obtain the space.
# - A form to obtain the real variable (e.g. a IntVar).
#
# This files is part of GProp2Oz.
# Copyright (2006) Javier AndrÃ©s Mena Zapata
# javimena@univalle.edu.co
#
#------------------------------------------------------------------------
Gecode::Space
DECLARE_GSpace($VAR_NAME$,sp,0,0,$PARAM_NUMBER$)
DECLARE_GSpace($VAR_NAME$,sp,0,0,$PARAM_NUMBER$)
no-checker
false
#------------------------------------------------------------------------
Gecode::IntVar
DECLARE_GE_INT_VAR_UPCAST($VAR_NAME$,curr_space,$OZ_PARAM_NUMBER$)
DECLARE_GE_INT_VAR($VAR_NAME$,curr_space,$OZ_PARAM_NUMBER$)
OZ_isGeIntVar(OZ_in($OZ_PARAM_NUMBER$))
true
#(OZ_isGeIntVar(OZ_in($OZ_PARAM_NUMBER$))) && (get_GeIntVar(OZ_deref(OZ_in($OZ_PARAM_NUMBER$)))->getGeSpace())
(get_GeIntVar(OZ_deref(OZ_in($OZ_PARAM_NUMBER$)))->getGeSpace())
$VAR_NAME$
#------------------------------------------------------------------------
Gecode::VarArgArray<Gecode::IntVar>
DECLARE_INTVAR_ARGS_UPCAST($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_INTVAR_ARGS($VAR_NAME$,$OZ_PARAM_NUMBER$)
isGeIntVarArgs(OZ_in($OZ_PARAM_NUMBER$))
true
#$VAR_NAME$->getGeSpace()
#$VAR_NAME$->getIntVarArray()
(get_GeIntVarArgsAnyGeSpace(OZ_deref(OZ_in($OZ_PARAM_NUMBER$))))
$VAR_NAME$
#------------------------------------------------------------------------
Gecode::BoolVarArgs
DECLARE_BOOL_VAR_ARGS($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_BOOL_VAR_ARGS($VAR_NAME$,$OZ_PARAM_NUMBER$)
isBoolVarArgs(OZ_in($OZ_PARAM_NUMBER$))
true
$VAR_NAME$->getGeSpace()
$VAR_NAME$->getBoolVarArgs()
#------------------------------------------------------------------------
Gecode::BvarSel
DECLARE_BVAR_SEL_UPCAST
DECLARE_BVAR_SEL
isBvarSel(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::BvalSel
DECLARE_BVAL_SEL_UPCAST
DECLARE_BVAL_SEL
isBvalSel(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::DFA
DECLARE___DFA_UPCAST($VAR_NAME$)
DECLARE___DFA($VAR_NAME$)
isDFA(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::PrimArgArray<int>
DECLARE_INT_ARGS($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_INT_ARGS($VAR_NAME$,$OZ_PARAM_NUMBER$)
isIntArgsTerm(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::BoolVar
DECLARE_BOOL_VAR_UPCAST
DECLARE_BOOL_VAR
isBoolVarTerm(OZ_in($OZ_PARAM_NUMBER$))
true
$VAR_NAME$->getGeSpace()
$VAR_NAME$->getBoolVar()
#------------------------------------------------------------------------
Gecode::IntConLevel
DECLARE_INT_CON_LEVEL($OZ_PARAM_NUMBER$,$VAR_NAME$)
DECLARE_INT_CON_LEVEL($OZ_PARAM_NUMBER$,$VAR_NAME$)
isIntColLevelTerm(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
int
OZ_declareInt($OZ_PARAM_NUMBER$,$VAR_NAME$)
OZ_declareInt($OZ_PARAM_NUMBER$,$VAR_NAME$)
OZ_isInt(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
bool
OZ_declareBool($OZ_PARAM_NUMBER$,$VAR_NAME$)
OZ_declareBool($OZ_PARAM_NUMBER$,$VAR_NAME$)
isBoolTerm(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::IntRelType
DECLARE_INT_REL($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_INT_REL($VAR_NAME$,$OZ_PARAM_NUMBER$)
isIntTerm(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::AvalSel
DECLARE_AVAL_SEL($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_AVAL_SEL($VAR_NAME$,$OZ_PARAM_NUMBER$)
isAvalSelTerm(OZ_in($OZ_PARAM_NUMBER$))
false
#------------------------------------------------------------------------
Gecode::IntSet
DECLARE_INT_SET($VAR_NAME$,$OZ_PARAM_NUMBER$)
DECLARE_INT_SET($VAR_NAME$,$OZ_PARAM_NUMBER$)
isIntSet(OZ_in($OZ_PARAM_NUMBER$))
false
###
EOF
