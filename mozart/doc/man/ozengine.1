.\" Copyright stuff
.TH ozengine 1
.SH NAME
ozengine, ozenginenew \- run an oz program
.SH SYNOPSIS
.B ozengine [\|\-\-gui\|] \fIURL\fP \fIargs .\|.\|.\fP
.br
.B ozenginew [\|\-\-gui\|] \fIURL\fP \fIargs .\|.\|.\fP
.SH DESCRIPTION
Like Java, Oz is also based on the idea of byte code
execution. `\|\fBozengine\fP\|' is an emulator that implements the Oz
virtual machine. The `\|\fIURL\fP' argument identifies an Oz
application (a pickled functor) and \fIargs .\|.\|.\fP are the
arguments for the application.
.PP
It is also possible to create executable functors. These are ordinary
functors, except that when one is invoked as a shell command, it
automatically starts ozengine on itself.
.PP
Under Windows, an alternative to `\fBozengine\fP' is provided called
`\fBozenginew\fP'. While `\fBozengine\fP' is a console-based
application, `\fBozenginew\fP' is a GUI-based application. Its output
appears in message boxes instead of in a console window. Other than
that, they behave the same.
.PP
Instead of supplying arguments on the command line, you can also
supply option \fB\-\-gui\fP in order to edit the application's input
parameters using a graphical interface.
.PP
The \fB\-\-gui\fP option is convenient for starting applications
directly from a web browser, simply by clicking. This makes
`\fBozengine \-\-gui %s\fP' a good choice of a helper application for
web documents with MIME type application/x-oz-application.
Consult Chapter 6 of
.I ``Application Programming''
for more detailed information.
