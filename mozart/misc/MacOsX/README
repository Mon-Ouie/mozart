
	   BUILDING A MOZART APPLICATION BUNDLE FOR MAC OSX

			  Gustavo Gutierrez


In order to build a Mac OS X application bundle, it is necessary to
have the apple developer tools installed and to install several
external tools:

1- Platypus (http://www.sveinbjorn.org/platypus).  At this time, due
   to some bugs the recommended version is 3.4.  Be sure to install
   the command line tools as they are called by the Makefile.  After
   installing it please set the PLAT variable in the Makefile to the
   location of command line tools.

2- Cocoa Dialog (http://cocoadialog.sourceforge.net/).  Just drag the
   application to some place and set the Makefile variable CD to its
   location.


After having all the external applications required for the bundle,
build mozart in the standard way (i.e., ./configure
--prefix=/some/place/ && make && make install).  After doing that, you
should have a Mozart installation at /some/place/.  Set the variable
MOZ_INST in the Makefile to point to /some/place.

Now, to actually build the bundle execute 'sudo make' in the
directory.  sudo is needed since there is a script which modifies some
paths inside the emulator.exe file and needs super user privileges.
If everything went fine you will have a Mozart.app as a result.  That
is the bundle, enjoy it.

To create a dmg file containing the Mozart distribution, run the
command 'sudo make diskimage', that will produce a file called
Mozart.dmg.  For this option to work, you first have to execute 'sudo
make'.  To include the Mozart documentation, set the variable MOZ_DOC
in the Makefile to the directory containing the documentation.  
To include the Restrictions Examples, set the variable RES_EXA in the
Makefile to the directory containing the examples.
If these variables are not set, the documentation and examples won't be 
included inside the dmg.
